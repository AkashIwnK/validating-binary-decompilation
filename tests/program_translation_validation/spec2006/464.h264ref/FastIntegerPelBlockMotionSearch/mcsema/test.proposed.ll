; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x6cb8f8_type = type <{ [8 x i8] }>
@G_0x6cb8f8= global %G_0x6cb8f8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cb900_type = type <{ [8 x i8] }>
@G_0x6cb900= global %G_0x6cb900_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cd480_type = type <{ [4 x i8] }>
@G_0x6cd480= global %G_0x6cd480_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6d09a0_type = type <{ [8 x i8] }>
@G_0x6d09a0= global %G_0x6d09a0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6d1900_type = type <{ [4 x i8] }>
@G_0x6d1900= global %G_0x6d1900_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6d1fa0_type = type <{ [4 x i8] }>
@G_0x6d1fa0= global %G_0x6d1fa0_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6d1fa4_type = type <{ [4 x i8] }>
@G_0x6d1fa4= global %G_0x6d1fa4_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6d32d0_type = type <{ [8 x i8] }>
@G_0x6d32d0= global %G_0x6d32d0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6f8f00_type = type <{ [8 x i8] }>
@G_0x6f8f00= global %G_0x6f8f00_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x70fd54_type = type <{ [4 x i8] }>
@G_0x70fd54= global %G_0x70fd54_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x70fd58_type = type <{ [4 x i8] }>
@G_0x70fd58= global %G_0x70fd58_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x710010_type = type <{ [4 x i8] }>
@G_0x710010= global %G_0x710010_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x710014_type = type <{ [4 x i8] }>
@G_0x710014= global %G_0x710014_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x711c50_type = type <{ [8 x i8] }>
@G_0x711c50= global %G_0x711c50_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x722ca8_type = type <{ [4 x i8] }>
@G_0x722ca8= global %G_0x722ca8_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x72369c_type = type <{ [4 x i8] }>
@G_0x72369c= global %G_0x72369c_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x9108f__rip__type = type <{ [8 x i8] }>
@G_0x9108f__rip_= global %G_0x9108f__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x49e480_type = type <{ [8 x i8] }>
@G__0x49e480= global %G__0x49e480_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x49e4c0_type = type <{ [8 x i8] }>
@G__0x49e4c0= global %G__0x49e4c0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @FastIntegerPelBlockMotionSearch(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .FastIntegerPelBlockMotionSearch:	 RIP: 420700	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 420700	 Bytes: 1
  %loadMem_420700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420700 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420700)
  store %struct.Memory* %call_420700, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 420701	 Bytes: 3
  %loadMem_420701 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420701 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420701)
  store %struct.Memory* %call_420701, %struct.Memory** %MEMORY

  ; Code: pushq %r15	 RIP: 420704	 Bytes: 2
  %loadMem_420704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420704 = call %struct.Memory* @routine_pushq__r15(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420704)
  store %struct.Memory* %call_420704, %struct.Memory** %MEMORY

  ; Code: pushq %r14	 RIP: 420706	 Bytes: 2
  %loadMem_420706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420706 = call %struct.Memory* @routine_pushq__r14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420706)
  store %struct.Memory* %call_420706, %struct.Memory** %MEMORY

  ; Code: pushq %rbx	 RIP: 420708	 Bytes: 1
  %loadMem_420708 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420708 = call %struct.Memory* @routine_pushq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420708)
  store %struct.Memory* %call_420708, %struct.Memory** %MEMORY

  ; Code: subq $0x1b8, %rsp	 RIP: 420709	 Bytes: 7
  %loadMem_420709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420709 = call %struct.Memory* @routine_subq__0x1b8___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420709)
  store %struct.Memory* %call_420709, %struct.Memory** %MEMORY

  ; Code: movw %si, %ax	 RIP: 420710	 Bytes: 3
  %loadMem_420710 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420710 = call %struct.Memory* @routine_movw__si___ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420710)
  store %struct.Memory* %call_420710, %struct.Memory** %MEMORY

  ; Code: movl 0x38(%rbp), %esi	 RIP: 420713	 Bytes: 3
  %loadMem_420713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420713 = call %struct.Memory* @routine_movl_0x38__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420713)
  store %struct.Memory* %call_420713, %struct.Memory** %MEMORY

  ; Code: movl 0x30(%rbp), %r10d	 RIP: 420716	 Bytes: 4
  %loadMem_420716 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420716 = call %struct.Memory* @routine_movl_0x30__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420716)
  store %struct.Memory* %call_420716, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rbp), %r11	 RIP: 42071a	 Bytes: 4
  %loadMem_42071a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42071a = call %struct.Memory* @routine_movq_0x28__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42071a)
  store %struct.Memory* %call_42071a, %struct.Memory** %MEMORY

  ; Code: movq 0x20(%rbp), %rbx	 RIP: 42071e	 Bytes: 4
  %loadMem_42071e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42071e = call %struct.Memory* @routine_movq_0x20__rbp____rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42071e)
  store %struct.Memory* %call_42071e, %struct.Memory** %MEMORY

  ; Code: movw 0x18(%rbp), %r14w	 RIP: 420722	 Bytes: 5
  %loadMem_420722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420722 = call %struct.Memory* @routine_movw_0x18__rbp____r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420722)
  store %struct.Memory* %call_420722, %struct.Memory** %MEMORY

  ; Code: movw 0x10(%rbp), %r15w	 RIP: 420727	 Bytes: 5
  %loadMem_420727 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420727 = call %struct.Memory* @routine_movw_0x10__rbp____r15w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420727)
  store %struct.Memory* %call_420727, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x20(%rbp)	 RIP: 42072c	 Bytes: 4
  %loadMem_42072c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42072c = call %struct.Memory* @routine_movq__rdi__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42072c)
  store %struct.Memory* %call_42072c, %struct.Memory** %MEMORY

  ; Code: movw %ax, -0x22(%rbp)	 RIP: 420730	 Bytes: 4
  %loadMem_420730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420730 = call %struct.Memory* @routine_movw__ax__MINUS0x22__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420730)
  store %struct.Memory* %call_420730, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x28(%rbp)	 RIP: 420734	 Bytes: 3
  %loadMem_420734 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420734 = call %struct.Memory* @routine_movl__edx__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420734)
  store %struct.Memory* %call_420734, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2c(%rbp)	 RIP: 420737	 Bytes: 3
  %loadMem_420737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420737 = call %struct.Memory* @routine_movl__ecx__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420737)
  store %struct.Memory* %call_420737, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x30(%rbp)	 RIP: 42073a	 Bytes: 4
  %loadMem_42073a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42073a = call %struct.Memory* @routine_movl__r8d__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42073a)
  store %struct.Memory* %call_42073a, %struct.Memory** %MEMORY

  ; Code: movl %r9d, -0x34(%rbp)	 RIP: 42073e	 Bytes: 4
  %loadMem_42073e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42073e = call %struct.Memory* @routine_movl__r9d__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42073e)
  store %struct.Memory* %call_42073e, %struct.Memory** %MEMORY

  ; Code: movw %r15w, -0x36(%rbp)	 RIP: 420742	 Bytes: 5
  %loadMem_420742 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420742 = call %struct.Memory* @routine_movw__r15w__MINUS0x36__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420742)
  store %struct.Memory* %call_420742, %struct.Memory** %MEMORY

  ; Code: movw %r14w, -0x38(%rbp)	 RIP: 420747	 Bytes: 5
  %loadMem_420747 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420747 = call %struct.Memory* @routine_movw__r14w__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420747)
  store %struct.Memory* %call_420747, %struct.Memory** %MEMORY

  ; Code: movq %rbx, -0x40(%rbp)	 RIP: 42074c	 Bytes: 4
  %loadMem_42074c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42074c = call %struct.Memory* @routine_movq__rbx__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42074c)
  store %struct.Memory* %call_42074c, %struct.Memory** %MEMORY

  ; Code: movq %r11, -0x48(%rbp)	 RIP: 420750	 Bytes: 4
  %loadMem_420750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420750 = call %struct.Memory* @routine_movq__r11__MINUS0x48__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420750)
  store %struct.Memory* %call_420750, %struct.Memory** %MEMORY

  ; Code: movl %r10d, -0x4c(%rbp)	 RIP: 420754	 Bytes: 4
  %loadMem_420754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420754 = call %struct.Memory* @routine_movl__r10d__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420754)
  store %struct.Memory* %call_420754, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x50(%rbp)	 RIP: 420758	 Bytes: 3
  %loadMem_420758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420758 = call %struct.Memory* @routine_movl__esi__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420758)
  store %struct.Memory* %call_420758, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x58(%rbp)	 RIP: 42075b	 Bytes: 5
  %loadMem_42075b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42075b = call %struct.Memory* @routine_movsd__xmm0__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42075b)
  store %struct.Memory* %call_42075b, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdi	 RIP: 420760	 Bytes: 8
  %loadMem_420760 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420760 = call %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420760)
  store %struct.Memory* %call_420760, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11ad0(%rdi)	 RIP: 420768	 Bytes: 7
  %loadMem_420768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420768 = call %struct.Memory* @routine_cmpl__0x0__0x11ad0__rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420768)
  store %struct.Memory* %call_420768, %struct.Memory** %MEMORY

  ; Code: je .L_4207de	 RIP: 42076f	 Bytes: 6
  %loadMem_42076f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42076f = call %struct.Memory* @routine_je_.L_4207de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42076f, i8* %BRANCH_TAKEN, i64 111, i64 6, i64 6)
  store %struct.Memory* %call_42076f, %struct.Memory** %MEMORY

  %loadBr_42076f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42076f = icmp eq i8 %loadBr_42076f, 1
  br i1 %cmpBr_42076f, label %block_.L_4207de, label %block_420775

block_420775:
  ; Code: movq 0x6cb900, %rax	 RIP: 420775	 Bytes: 8
  %loadMem_420775 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420775 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420775)
  store %struct.Memory* %call_420775, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 42077d	 Bytes: 7
  %loadMem_42077d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42077d = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42077d)
  store %struct.Memory* %call_42077d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 420784	 Bytes: 8
  %loadMem_420784 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420784 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420784)
  store %struct.Memory* %call_420784, %struct.Memory** %MEMORY

  ; Code: movslq 0xc(%rcx), %rcx	 RIP: 42078c	 Bytes: 4
  %loadMem_42078c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42078c = call %struct.Memory* @routine_movslq_0xc__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42078c)
  store %struct.Memory* %call_42078c, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 420790	 Bytes: 7
  %loadMem_420790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420790 = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420790)
  store %struct.Memory* %call_420790, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 420797	 Bytes: 3
  %loadMem_420797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420797 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420797)
  store %struct.Memory* %call_420797, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 42079a	 Bytes: 7
  %loadMem_42079a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42079a = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42079a)
  store %struct.Memory* %call_42079a, %struct.Memory** %MEMORY

  ; Code: je .L_4207de	 RIP: 4207a1	 Bytes: 6
  %loadMem_4207a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207a1 = call %struct.Memory* @routine_je_.L_4207de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207a1, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_4207a1, %struct.Memory** %MEMORY

  %loadBr_4207a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4207a1 = icmp eq i8 %loadBr_4207a1, 1
  br i1 %cmpBr_4207a1, label %block_.L_4207de, label %block_4207a7

block_4207a7:
  ; Code: movl $0x2, %eax	 RIP: 4207a7	 Bytes: 5
  %loadMem_4207a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207a7 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207a7)
  store %struct.Memory* %call_4207a7, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %ecx	 RIP: 4207ac	 Bytes: 5
  %loadMem_4207ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207ac = call %struct.Memory* @routine_movl__0x4___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207ac)
  store %struct.Memory* %call_4207ac, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4207b1	 Bytes: 8
  %loadMem_4207b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207b1 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207b1)
  store %struct.Memory* %call_4207b1, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rdx), %esi	 RIP: 4207b9	 Bytes: 3
  %loadMem_4207b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207b9 = call %struct.Memory* @routine_movl_0xc__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207b9)
  store %struct.Memory* %call_4207b9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xdc(%rbp)	 RIP: 4207bc	 Bytes: 6
  %loadMem_4207bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207bc = call %struct.Memory* @routine_movl__eax__MINUS0xdc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207bc)
  store %struct.Memory* %call_4207bc, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 4207c2	 Bytes: 2
  %loadMem_4207c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207c2 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207c2)
  store %struct.Memory* %call_4207c2, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4207c4	 Bytes: 1
  %loadMem_4207c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207c4 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207c4)
  store %struct.Memory* %call_4207c4, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %esi	 RIP: 4207c5	 Bytes: 6
  %loadMem_4207c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207c5 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207c5)
  store %struct.Memory* %call_4207c5, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4207cb	 Bytes: 2
  %loadMem_4207cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207cb = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207cb)
  store %struct.Memory* %call_4207cb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 4207cd	 Bytes: 3
  %loadMem_4207cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207cd = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207cd)
  store %struct.Memory* %call_4207cd, %struct.Memory** %MEMORY

  ; Code: cmovnel %ecx, %esi	 RIP: 4207d0	 Bytes: 3
  %loadMem_4207d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207d0 = call %struct.Memory* @routine_cmovnel__ecx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207d0)
  store %struct.Memory* %call_4207d0, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0xe0(%rbp)	 RIP: 4207d3	 Bytes: 6
  %loadMem_4207d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207d3 = call %struct.Memory* @routine_movl__esi__MINUS0xe0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207d3)
  store %struct.Memory* %call_4207d3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4207eb	 RIP: 4207d9	 Bytes: 5
  %loadMem_4207d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207d9 = call %struct.Memory* @routine_jmpq_.L_4207eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207d9, i64 18, i64 5)
  store %struct.Memory* %call_4207d9, %struct.Memory** %MEMORY

  br label %block_.L_4207eb

  ; Code: .L_4207de:	 RIP: 4207de	 Bytes: 0
block_.L_4207de:

  ; Code: xorl %eax, %eax	 RIP: 4207de	 Bytes: 2
  %loadMem_4207de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207de = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207de)
  store %struct.Memory* %call_4207de, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe0(%rbp)	 RIP: 4207e0	 Bytes: 6
  %loadMem_4207e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207e0 = call %struct.Memory* @routine_movl__eax__MINUS0xe0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207e0)
  store %struct.Memory* %call_4207e0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4207eb	 RIP: 4207e6	 Bytes: 5
  %loadMem_4207e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207e6 = call %struct.Memory* @routine_jmpq_.L_4207eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207e6, i64 5, i64 5)
  store %struct.Memory* %call_4207e6, %struct.Memory** %MEMORY

  br label %block_.L_4207eb

  ; Code: .L_4207eb:	 RIP: 4207eb	 Bytes: 0
block_.L_4207eb:

  ; Code: movl -0xe0(%rbp), %eax	 RIP: 4207eb	 Bytes: 6
  %loadMem_4207eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207eb = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207eb)
  store %struct.Memory* %call_4207eb, %struct.Memory** %MEMORY

  ; Code: movsd 0x9108f(%rip), %xmm0	 RIP: 4207f1	 Bytes: 8
  %loadMem_4207f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207f1 = call %struct.Memory* @routine_movsd_0x9108f__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207f1)
  store %struct.Memory* %call_4207f1, %struct.Memory** %MEMORY

  ; Code: movsd 0x9108f(%rip), %xmm1	 RIP: 4207f9	 Bytes: 8
  %loadMem_4207f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4207f9 = call %struct.Memory* @routine_movsd_0x9108f__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4207f9)
  store %struct.Memory* %call_4207f9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x74(%rbp)	 RIP: 420801	 Bytes: 3
  %loadMem_420801 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420801 = call %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420801)
  store %struct.Memory* %call_420801, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %eax	 RIP: 420804	 Bytes: 3
  %loadMem_420804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420804 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420804)
  store %struct.Memory* %call_420804, %struct.Memory** %MEMORY

  ; Code: addl -0x74(%rbp), %eax	 RIP: 420807	 Bytes: 3
  %loadMem_420807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420807 = call %struct.Memory* @routine_addl_MINUS0x74__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420807)
  store %struct.Memory* %call_420807, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 42080a	 Bytes: 3
  %loadMem_42080a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42080a = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42080a)
  store %struct.Memory* %call_42080a, %struct.Memory** %MEMORY

  ; Code: movq 0x722b20(,%rcx,8), %rcx	 RIP: 42080d	 Bytes: 8
  %loadMem_42080d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42080d = call %struct.Memory* @routine_movq_0x722b20___rcx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42080d)
  store %struct.Memory* %call_42080d, %struct.Memory** %MEMORY

  ; Code: movswq -0x22(%rbp), %rdx	 RIP: 420815	 Bytes: 5
  %loadMem_420815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420815 = call %struct.Memory* @routine_movswq_MINUS0x22__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420815)
  store %struct.Memory* %call_420815, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 42081a	 Bytes: 4
  %loadMem_42081a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42081a = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42081a)
  store %struct.Memory* %call_42081a, %struct.Memory** %MEMORY

  ; Code: movq 0x1920(%rcx), %rcx	 RIP: 42081e	 Bytes: 7
  %loadMem_42081e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42081e = call %struct.Memory* @routine_movq_0x1920__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42081e)
  store %struct.Memory* %call_42081e, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x80(%rbp)	 RIP: 420825	 Bytes: 4
  %loadMem_420825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420825 = call %struct.Memory* @routine_movq__rcx__MINUS0x80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420825)
  store %struct.Memory* %call_420825, %struct.Memory** %MEMORY

  ; Code: mulsd -0x58(%rbp), %xmm1	 RIP: 420829	 Bytes: 5
  %loadMem_420829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420829 = call %struct.Memory* @routine_mulsd_MINUS0x58__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420829)
  store %struct.Memory* %call_420829, %struct.Memory** %MEMORY

  ; Code: addsd %xmm0, %xmm1	 RIP: 42082e	 Bytes: 4
  %loadMem_42082e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42082e = call %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42082e)
  store %struct.Memory* %call_42082e, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm1, %eax	 RIP: 420832	 Bytes: 4
  %loadMem_420832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420832 = call %struct.Memory* @routine_cvttsd2si__xmm1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420832)
  store %struct.Memory* %call_420832, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x84(%rbp)	 RIP: 420836	 Bytes: 6
  %loadMem_420836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420836 = call %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420836)
  store %struct.Memory* %call_420836, %struct.Memory** %MEMORY

  ; Code: movl $0x2, -0x88(%rbp)	 RIP: 42083c	 Bytes: 10
  %loadMem_42083c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42083c = call %struct.Memory* @routine_movl__0x2__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42083c)
  store %struct.Memory* %call_42083c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 420846	 Bytes: 8
  %loadMem_420846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420846 = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420846)
  store %struct.Memory* %call_420846, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rdx	 RIP: 42084e	 Bytes: 4
  %loadMem_42084e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42084e = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42084e)
  store %struct.Memory* %call_42084e, %struct.Memory** %MEMORY

  ; Code: movl 0x54(%rcx,%rdx,8), %eax	 RIP: 420852	 Bytes: 4
  %loadMem_420852 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420852 = call %struct.Memory* @routine_movl_0x54__rcx__rdx_8____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420852)
  store %struct.Memory* %call_420852, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8c(%rbp)	 RIP: 420856	 Bytes: 6
  %loadMem_420856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420856 = call %struct.Memory* @routine_movl__eax__MINUS0x8c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420856)
  store %struct.Memory* %call_420856, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 42085c	 Bytes: 8
  %loadMem_42085c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42085c = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42085c)
  store %struct.Memory* %call_42085c, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rdx	 RIP: 420864	 Bytes: 4
  %loadMem_420864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420864 = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420864)
  store %struct.Memory* %call_420864, %struct.Memory** %MEMORY

  ; Code: movl 0x50(%rcx,%rdx,8), %eax	 RIP: 420868	 Bytes: 4
  %loadMem_420868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420868 = call %struct.Memory* @routine_movl_0x50__rcx__rdx_8____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420868)
  store %struct.Memory* %call_420868, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x90(%rbp)	 RIP: 42086c	 Bytes: 6
  %loadMem_42086c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42086c = call %struct.Memory* @routine_movl__eax__MINUS0x90__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42086c)
  store %struct.Memory* %call_42086c, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %eax	 RIP: 420872	 Bytes: 6
  %loadMem_420872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420872 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420872)
  store %struct.Memory* %call_420872, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 420878	 Bytes: 3
  %loadMem_420878 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420878 = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420878)
  store %struct.Memory* %call_420878, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x94(%rbp)	 RIP: 42087b	 Bytes: 6
  %loadMem_42087b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42087b = call %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42087b)
  store %struct.Memory* %call_42087b, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 420881	 Bytes: 3
  %loadMem_420881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420881 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420881)
  store %struct.Memory* %call_420881, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 420884	 Bytes: 6
  %loadMem_420884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420884 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420884)
  store %struct.Memory* %call_420884, %struct.Memory** %MEMORY

  ; Code: shll %cl, %eax	 RIP: 42088a	 Bytes: 2
  %loadMem_42088a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42088a = call %struct.Memory* @routine_shll__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42088a)
  store %struct.Memory* %call_42088a, %struct.Memory** %MEMORY

  ; Code: movswl -0x36(%rbp), %esi	 RIP: 42088c	 Bytes: 4
  %loadMem_42088c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42088c = call %struct.Memory* @routine_movswl_MINUS0x36__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42088c)
  store %struct.Memory* %call_42088c, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 420890	 Bytes: 2
  %loadMem_420890 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420890 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420890)
  store %struct.Memory* %call_420890, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x98(%rbp)	 RIP: 420892	 Bytes: 6
  %loadMem_420892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420892 = call %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420892)
  store %struct.Memory* %call_420892, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %eax	 RIP: 420898	 Bytes: 3
  %loadMem_420898 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420898 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420898)
  store %struct.Memory* %call_420898, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 42089b	 Bytes: 6
  %loadMem_42089b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42089b = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42089b)
  store %struct.Memory* %call_42089b, %struct.Memory** %MEMORY

  ; Code: shll %cl, %eax	 RIP: 4208a1	 Bytes: 2
  %loadMem_4208a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208a1 = call %struct.Memory* @routine_shll__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208a1)
  store %struct.Memory* %call_4208a1, %struct.Memory** %MEMORY

  ; Code: movswl -0x38(%rbp), %esi	 RIP: 4208a3	 Bytes: 4
  %loadMem_4208a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208a3 = call %struct.Memory* @routine_movswl_MINUS0x38__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208a3)
  store %struct.Memory* %call_4208a3, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4208a7	 Bytes: 2
  %loadMem_4208a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208a7 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208a7)
  store %struct.Memory* %call_4208a7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x9c(%rbp)	 RIP: 4208a9	 Bytes: 6
  %loadMem_4208a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208a9 = call %struct.Memory* @routine_movl__eax__MINUS0x9c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208a9)
  store %struct.Memory* %call_4208a9, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4208af	 Bytes: 3
  %loadMem_4208af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208af = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208af)
  store %struct.Memory* %call_4208af, %struct.Memory** %MEMORY

  ; Code: movq -0x40(%rbp), %rdx	 RIP: 4208b2	 Bytes: 4
  %loadMem_4208b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208b2 = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208b2)
  store %struct.Memory* %call_4208b2, %struct.Memory** %MEMORY

  ; Code: movswl (%rdx), %esi	 RIP: 4208b6	 Bytes: 3
  %loadMem_4208b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208b6 = call %struct.Memory* @routine_movswl___rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208b6)
  store %struct.Memory* %call_4208b6, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4208b9	 Bytes: 2
  %loadMem_4208b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208b9 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208b9)
  store %struct.Memory* %call_4208b9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa0(%rbp)	 RIP: 4208bb	 Bytes: 6
  %loadMem_4208bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208bb = call %struct.Memory* @routine_movl__eax__MINUS0xa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208bb)
  store %struct.Memory* %call_4208bb, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4208c1	 Bytes: 3
  %loadMem_4208c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208c1 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208c1)
  store %struct.Memory* %call_4208c1, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rdx	 RIP: 4208c4	 Bytes: 4
  %loadMem_4208c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208c4 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208c4)
  store %struct.Memory* %call_4208c4, %struct.Memory** %MEMORY

  ; Code: movswl (%rdx), %esi	 RIP: 4208c8	 Bytes: 3
  %loadMem_4208c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208c8 = call %struct.Memory* @routine_movswl___rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208c8)
  store %struct.Memory* %call_4208c8, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4208cb	 Bytes: 2
  %loadMem_4208cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208cb = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208cb)
  store %struct.Memory* %call_4208cb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa4(%rbp)	 RIP: 4208cd	 Bytes: 6
  %loadMem_4208cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208cd = call %struct.Memory* @routine_movl__eax__MINUS0xa4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208cd)
  store %struct.Memory* %call_4208cd, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xa8(%rbp)	 RIP: 4208d3	 Bytes: 10
  %loadMem_4208d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208d3 = call %struct.Memory* @routine_movl__0x0__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208d3)
  store %struct.Memory* %call_4208d3, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xac(%rbp)	 RIP: 4208dd	 Bytes: 10
  %loadMem_4208dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208dd = call %struct.Memory* @routine_movl__0x0__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208dd)
  store %struct.Memory* %call_4208dd, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rdx	 RIP: 4208e7	 Bytes: 8
  %loadMem_4208e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208e7 = call %struct.Memory* @routine_movq_0x6cb8f8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208e7)
  store %struct.Memory* %call_4208e7, %struct.Memory** %MEMORY

  ; Code: movl 0x4d4(%rdx), %eax	 RIP: 4208ef	 Bytes: 6
  %loadMem_4208ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208ef = call %struct.Memory* @routine_movl_0x4d4__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208ef)
  store %struct.Memory* %call_4208ef, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xcc(%rbp)	 RIP: 4208f5	 Bytes: 6
  %loadMem_4208f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208f5 = call %struct.Memory* @routine_movl__eax__MINUS0xcc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208f5)
  store %struct.Memory* %call_4208f5, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4208fb	 Bytes: 8
  %loadMem_4208fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4208fb = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4208fb)
  store %struct.Memory* %call_4208fb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11ad0(%rdx)	 RIP: 420903	 Bytes: 7
  %loadMem_420903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420903 = call %struct.Memory* @routine_cmpl__0x0__0x11ad0__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420903)
  store %struct.Memory* %call_420903, %struct.Memory** %MEMORY

  ; Code: je .L_42096e	 RIP: 42090a	 Bytes: 6
  %loadMem_42090a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42090a = call %struct.Memory* @routine_je_.L_42096e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42090a, i8* %BRANCH_TAKEN, i64 100, i64 6, i64 6)
  store %struct.Memory* %call_42090a, %struct.Memory** %MEMORY

  %loadBr_42090a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42090a = icmp eq i8 %loadBr_42090a, 1
  br i1 %cmpBr_42090a, label %block_.L_42096e, label %block_420910

block_420910:
  ; Code: movq 0x6cb900, %rax	 RIP: 420910	 Bytes: 8
  %loadMem_420910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420910 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420910)
  store %struct.Memory* %call_420910, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 420918	 Bytes: 7
  %loadMem_420918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420918 = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420918)
  store %struct.Memory* %call_420918, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 42091f	 Bytes: 8
  %loadMem_42091f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42091f = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42091f)
  store %struct.Memory* %call_42091f, %struct.Memory** %MEMORY

  ; Code: movslq 0xc(%rcx), %rcx	 RIP: 420927	 Bytes: 4
  %loadMem_420927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420927 = call %struct.Memory* @routine_movslq_0xc__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420927)
  store %struct.Memory* %call_420927, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 42092b	 Bytes: 7
  %loadMem_42092b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42092b = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42092b)
  store %struct.Memory* %call_42092b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 420932	 Bytes: 3
  %loadMem_420932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420932 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420932)
  store %struct.Memory* %call_420932, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 420935	 Bytes: 7
  %loadMem_420935 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420935 = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420935)
  store %struct.Memory* %call_420935, %struct.Memory** %MEMORY

  ; Code: je .L_42096e	 RIP: 42093c	 Bytes: 6
  %loadMem_42093c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42093c = call %struct.Memory* @routine_je_.L_42096e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42093c, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_42093c, %struct.Memory** %MEMORY

  %loadBr_42093c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42093c = icmp eq i8 %loadBr_42093c, 1
  br i1 %cmpBr_42093c, label %block_.L_42096e, label %block_420942

block_420942:
  ; Code: movl $0x2, %eax	 RIP: 420942	 Bytes: 5
  %loadMem_420942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420942 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420942)
  store %struct.Memory* %call_420942, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 420947	 Bytes: 8
  %loadMem_420947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420947 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420947)
  store %struct.Memory* %call_420947, %struct.Memory** %MEMORY

  ; Code: movl 0x3c(%rcx), %edx	 RIP: 42094f	 Bytes: 3
  %loadMem_42094f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42094f = call %struct.Memory* @routine_movl_0x3c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42094f)
  store %struct.Memory* %call_42094f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe4(%rbp)	 RIP: 420952	 Bytes: 6
  %loadMem_420952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420952 = call %struct.Memory* @routine_movl__eax__MINUS0xe4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420952)
  store %struct.Memory* %call_420952, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 420958	 Bytes: 2
  %loadMem_420958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420958 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420958)
  store %struct.Memory* %call_420958, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42095a	 Bytes: 1
  %loadMem_42095a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42095a = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42095a)
  store %struct.Memory* %call_42095a, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %esi	 RIP: 42095b	 Bytes: 6
  %loadMem_42095b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42095b = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42095b)
  store %struct.Memory* %call_42095b, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 420961	 Bytes: 2
  %loadMem_420961 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420961 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420961)
  store %struct.Memory* %call_420961, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe8(%rbp)	 RIP: 420963	 Bytes: 6
  %loadMem_420963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420963 = call %struct.Memory* @routine_movl__eax__MINUS0xe8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420963)
  store %struct.Memory* %call_420963, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42097f	 RIP: 420969	 Bytes: 5
  %loadMem_420969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420969 = call %struct.Memory* @routine_jmpq_.L_42097f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420969, i64 22, i64 5)
  store %struct.Memory* %call_420969, %struct.Memory** %MEMORY

  br label %block_.L_42097f

  ; Code: .L_42096e:	 RIP: 42096e	 Bytes: 0
block_.L_42096e:

  ; Code: movq 0x6cb900, %rax	 RIP: 42096e	 Bytes: 8
  %loadMem_42096e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42096e = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42096e)
  store %struct.Memory* %call_42096e, %struct.Memory** %MEMORY

  ; Code: movl 0x3c(%rax), %ecx	 RIP: 420976	 Bytes: 3
  %loadMem_420976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420976 = call %struct.Memory* @routine_movl_0x3c__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420976)
  store %struct.Memory* %call_420976, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xe8(%rbp)	 RIP: 420979	 Bytes: 6
  %loadMem_420979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420979 = call %struct.Memory* @routine_movl__ecx__MINUS0xe8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420979)
  store %struct.Memory* %call_420979, %struct.Memory** %MEMORY

  ; Code: .L_42097f:	 RIP: 42097f	 Bytes: 0
  br label %block_.L_42097f
block_.L_42097f:

  ; Code: movl -0xe8(%rbp), %eax	 RIP: 42097f	 Bytes: 6
  %loadMem_42097f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42097f = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42097f)
  store %struct.Memory* %call_42097f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd8(%rbp)	 RIP: 420985	 Bytes: 6
  %loadMem_420985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420985 = call %struct.Memory* @routine_movl__eax__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420985)
  store %struct.Memory* %call_420985, %struct.Memory** %MEMORY

  ; Code: movl -0xa0(%rbp), %eax	 RIP: 42098b	 Bytes: 6
  %loadMem_42098b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42098b = call %struct.Memory* @routine_movl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42098b)
  store %struct.Memory* %call_42098b, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 420991	 Bytes: 3
  %loadMem_420991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420991 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420991)
  store %struct.Memory* %call_420991, %struct.Memory** %MEMORY

  ; Code: jle .L_420a01	 RIP: 420994	 Bytes: 6
  %loadMem_420994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420994 = call %struct.Memory* @routine_jle_.L_420a01(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420994, i8* %BRANCH_TAKEN, i64 109, i64 6, i64 6)
  store %struct.Memory* %call_420994, %struct.Memory** %MEMORY

  %loadBr_420994 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420994 = icmp eq i8 %loadBr_420994, 1
  br i1 %cmpBr_420994, label %block_.L_420a01, label %block_42099a

block_42099a:
  ; Code: movl -0xa0(%rbp), %eax	 RIP: 42099a	 Bytes: 6
  %loadMem_42099a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42099a = call %struct.Memory* @routine_movl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42099a)
  store %struct.Memory* %call_42099a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4209a0	 Bytes: 8
  %loadMem_4209a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209a0 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209a0)
  store %struct.Memory* %call_4209a0, %struct.Memory** %MEMORY

  ; Code: movl 0x34(%rcx), %edx	 RIP: 4209a8	 Bytes: 3
  %loadMem_4209a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209a8 = call %struct.Memory* @routine_movl_0x34__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209a8)
  store %struct.Memory* %call_4209a8, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 4209ab	 Bytes: 3
  %loadMem_4209ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209ab = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209ab)
  store %struct.Memory* %call_4209ab, %struct.Memory** %MEMORY

  ; Code: subl -0x4c(%rbp), %edx	 RIP: 4209ae	 Bytes: 3
  %loadMem_4209ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209ae = call %struct.Memory* @routine_subl_MINUS0x4c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209ae)
  store %struct.Memory* %call_4209ae, %struct.Memory** %MEMORY

  ; Code: subl -0x90(%rbp), %edx	 RIP: 4209b1	 Bytes: 6
  %loadMem_4209b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209b1 = call %struct.Memory* @routine_subl_MINUS0x90__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209b1)
  store %struct.Memory* %call_4209b1, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 4209b7	 Bytes: 2
  %loadMem_4209b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209b7 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209b7)
  store %struct.Memory* %call_4209b7, %struct.Memory** %MEMORY

  ; Code: jge .L_420a01	 RIP: 4209b9	 Bytes: 6
  %loadMem_4209b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209b9 = call %struct.Memory* @routine_jge_.L_420a01(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209b9, i8* %BRANCH_TAKEN, i64 72, i64 6, i64 6)
  store %struct.Memory* %call_4209b9, %struct.Memory** %MEMORY

  %loadBr_4209b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4209b9 = icmp eq i8 %loadBr_4209b9, 1
  br i1 %cmpBr_4209b9, label %block_.L_420a01, label %block_4209bf

block_4209bf:
  ; Code: movl -0xa4(%rbp), %eax	 RIP: 4209bf	 Bytes: 6
  %loadMem_4209bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209bf = call %struct.Memory* @routine_movl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209bf)
  store %struct.Memory* %call_4209bf, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 4209c5	 Bytes: 3
  %loadMem_4209c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209c5 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209c5)
  store %struct.Memory* %call_4209c5, %struct.Memory** %MEMORY

  ; Code: jle .L_420a01	 RIP: 4209c8	 Bytes: 6
  %loadMem_4209c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209c8 = call %struct.Memory* @routine_jle_.L_420a01(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209c8, i8* %BRANCH_TAKEN, i64 57, i64 6, i64 6)
  store %struct.Memory* %call_4209c8, %struct.Memory** %MEMORY

  %loadBr_4209c8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4209c8 = icmp eq i8 %loadBr_4209c8, 1
  br i1 %cmpBr_4209c8, label %block_.L_420a01, label %block_4209ce

block_4209ce:
  ; Code: movl -0xa4(%rbp), %eax	 RIP: 4209ce	 Bytes: 6
  %loadMem_4209ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209ce = call %struct.Memory* @routine_movl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209ce)
  store %struct.Memory* %call_4209ce, %struct.Memory** %MEMORY

  ; Code: movl -0xd8(%rbp), %ecx	 RIP: 4209d4	 Bytes: 6
  %loadMem_4209d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209d4 = call %struct.Memory* @routine_movl_MINUS0xd8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209d4)
  store %struct.Memory* %call_4209d4, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 4209da	 Bytes: 3
  %loadMem_4209da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209da = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209da)
  store %struct.Memory* %call_4209da, %struct.Memory** %MEMORY

  ; Code: subl -0x4c(%rbp), %ecx	 RIP: 4209dd	 Bytes: 3
  %loadMem_4209dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209dd = call %struct.Memory* @routine_subl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209dd)
  store %struct.Memory* %call_4209dd, %struct.Memory** %MEMORY

  ; Code: subl -0x8c(%rbp), %ecx	 RIP: 4209e0	 Bytes: 6
  %loadMem_4209e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209e0 = call %struct.Memory* @routine_subl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209e0)
  store %struct.Memory* %call_4209e0, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4209e6	 Bytes: 2
  %loadMem_4209e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209e6 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209e6)
  store %struct.Memory* %call_4209e6, %struct.Memory** %MEMORY

  ; Code: jge .L_420a01	 RIP: 4209e8	 Bytes: 6
  %loadMem_4209e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209e8 = call %struct.Memory* @routine_jge_.L_420a01(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209e8, i8* %BRANCH_TAKEN, i64 25, i64 6, i64 6)
  store %struct.Memory* %call_4209e8, %struct.Memory** %MEMORY

  %loadBr_4209e8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4209e8 = icmp eq i8 %loadBr_4209e8, 1
  br i1 %cmpBr_4209e8, label %block_.L_420a01, label %block_4209ee

block_4209ee:
  ; Code: movq $0x49e480, %rax	 RIP: 4209ee	 Bytes: 10
  %loadMem_4209ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209ee = call %struct.Memory* @routine_movq__0x49e480___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209ee)
  store %struct.Memory* %call_4209ee, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x70(%rbp)	 RIP: 4209f8	 Bytes: 4
  %loadMem_4209f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209f8 = call %struct.Memory* @routine_movq__rax__MINUS0x70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209f8)
  store %struct.Memory* %call_4209f8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420a0f	 RIP: 4209fc	 Bytes: 5
  %loadMem_4209fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4209fc = call %struct.Memory* @routine_jmpq_.L_420a0f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4209fc, i64 19, i64 5)
  store %struct.Memory* %call_4209fc, %struct.Memory** %MEMORY

  br label %block_.L_420a0f

  ; Code: .L_420a01:	 RIP: 420a01	 Bytes: 0
block_.L_420a01:

  ; Code: movq $0x49e4c0, %rax	 RIP: 420a01	 Bytes: 10
  %loadMem_420a01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a01 = call %struct.Memory* @routine_movq__0x49e4c0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a01)
  store %struct.Memory* %call_420a01, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x70(%rbp)	 RIP: 420a0b	 Bytes: 4
  %loadMem_420a0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a0b = call %struct.Memory* @routine_movq__rax__MINUS0x70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a0b)
  store %struct.Memory* %call_420a0b, %struct.Memory** %MEMORY

  ; Code: .L_420a0f:	 RIP: 420a0f	 Bytes: 0
  br label %block_.L_420a0f
block_.L_420a0f:

  ; Code: xorl %esi, %esi	 RIP: 420a0f	 Bytes: 2
  %loadMem_420a0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a0f = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a0f)
  store %struct.Memory* %call_420a0f, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rax	 RIP: 420a11	 Bytes: 8
  %loadMem_420a11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a11 = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a11)
  store %struct.Memory* %call_420a11, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 420a19	 Bytes: 3
  %loadMem_420a19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a19 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a19)
  store %struct.Memory* %call_420a19, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %ecx	 RIP: 420a1c	 Bytes: 3
  %loadMem_420a1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a1c = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a1c)
  store %struct.Memory* %call_420a1c, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %ecx	 RIP: 420a1f	 Bytes: 3
  %loadMem_420a1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a1f = call %struct.Memory* @routine_shll__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a1f)
  store %struct.Memory* %call_420a1f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %ecx	 RIP: 420a22	 Bytes: 3
  %loadMem_420a22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a22 = call %struct.Memory* @routine_addl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a22)
  store %struct.Memory* %call_420a22, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %edx	 RIP: 420a25	 Bytes: 3
  %loadMem_420a25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a25 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a25)
  store %struct.Memory* %call_420a25, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 420a28	 Bytes: 3
  %loadMem_420a28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a28 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a28)
  store %struct.Memory* %call_420a28, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 420a2b	 Bytes: 3
  %loadMem_420a2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a2b = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a2b)
  store %struct.Memory* %call_420a2b, %struct.Memory** %MEMORY

  ; Code: imull %edx, %ecx	 RIP: 420a2e	 Bytes: 3
  %loadMem_420a2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a2e = call %struct.Memory* @routine_imull__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a2e)
  store %struct.Memory* %call_420a2e, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %ecx	 RIP: 420a31	 Bytes: 3
  %loadMem_420a31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a31 = call %struct.Memory* @routine_shll__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a31)
  store %struct.Memory* %call_420a31, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 420a34	 Bytes: 3
  %loadMem_420a34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a34 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a34)
  store %struct.Memory* %call_420a34, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 420a37	 Bytes: 3
  %loadMem_420a37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a37 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a37)
  store %struct.Memory* %call_420a37, %struct.Memory** %MEMORY

  ; Code: callq .memset_plt	 RIP: 420a3a	 Bytes: 5
  %loadMem1_420a3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420a3a = call %struct.Memory* @routine_callq_.memset_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420a3a, i64 -129482, i64 5, i64 5)
  store %struct.Memory* %call1_420a3a, %struct.Memory** %MEMORY

  %loadMem2_420a3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420a3a = load i64, i64* %3
  %call2_420a3a = call %struct.Memory* @ext_memset(%struct.State* %0, i64  %loadPC_420a3a, %struct.Memory* %loadMem2_420a3a)
  store %struct.Memory* %call2_420a3a, %struct.Memory** %MEMORY

  ; Code: movswl -0x22(%rbp), %ecx	 RIP: 420a3f	 Bytes: 4
  %loadMem_420a3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a3f = call %struct.Memory* @routine_movswl_MINUS0x22__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a3f)
  store %struct.Memory* %call_420a3f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 420a43	 Bytes: 3
  %loadMem_420a43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a43 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a43)
  store %struct.Memory* %call_420a43, %struct.Memory** %MEMORY

  ; Code: jle .L_420ae9	 RIP: 420a46	 Bytes: 6
  %loadMem_420a46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a46 = call %struct.Memory* @routine_jle_.L_420ae9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a46, i8* %BRANCH_TAKEN, i64 163, i64 6, i64 6)
  store %struct.Memory* %call_420a46, %struct.Memory** %MEMORY

  %loadBr_420a46 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420a46 = icmp eq i8 %loadBr_420a46, 1
  br i1 %cmpBr_420a46, label %block_.L_420ae9, label %block_420a4c

block_420a4c:
  ; Code: cmpl $0x0, 0x6cd480	 RIP: 420a4c	 Bytes: 8
  %loadMem_420a4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a4c = call %struct.Memory* @routine_cmpl__0x0__0x6cd480(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a4c)
  store %struct.Memory* %call_420a4c, %struct.Memory** %MEMORY

  ; Code: je .L_420ad1	 RIP: 420a54	 Bytes: 6
  %loadMem_420a54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a54 = call %struct.Memory* @routine_je_.L_420ad1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a54, i8* %BRANCH_TAKEN, i64 125, i64 6, i64 6)
  store %struct.Memory* %call_420a54, %struct.Memory** %MEMORY

  %loadBr_420a54 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420a54 = icmp eq i8 %loadBr_420a54, 1
  br i1 %cmpBr_420a54, label %block_.L_420ad1, label %block_420a5a

block_420a5a:
  ; Code: movslq -0x34(%rbp), %rax	 RIP: 420a5a	 Bytes: 4
  %loadMem_420a5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a5a = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a5a)
  store %struct.Memory* %call_420a5a, %struct.Memory** %MEMORY

  ; Code: movss 0x70d4b0(,%rax,4), %xmm0	 RIP: 420a5e	 Bytes: 9
  %loadMem_420a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a5e = call %struct.Memory* @routine_movss_0x70d4b0___rax_4____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a5e)
  store %struct.Memory* %call_420a5e, %struct.Memory** %MEMORY

  ; Code: movl 0x6cd480, %ecx	 RIP: 420a67	 Bytes: 7
  %loadMem_420a67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a67 = call %struct.Memory* @routine_movl_0x6cd480___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a67)
  store %struct.Memory* %call_420a67, %struct.Memory** %MEMORY

  ; Code: imull 0x6cd480, %ecx	 RIP: 420a6e	 Bytes: 8
  %loadMem_420a6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a6e = call %struct.Memory* @routine_imull_0x6cd480___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a6e)
  store %struct.Memory* %call_420a6e, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %ecx, %xmm1	 RIP: 420a76	 Bytes: 4
  %loadMem_420a76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a76 = call %struct.Memory* @routine_cvtsi2ssl__ecx___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a76)
  store %struct.Memory* %call_420a76, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 420a7a	 Bytes: 4
  %loadMem_420a7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a7a = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a7a)
  store %struct.Memory* %call_420a7a, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rax	 RIP: 420a7e	 Bytes: 4
  %loadMem_420a7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a7e = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a7e)
  store %struct.Memory* %call_420a7e, %struct.Memory** %MEMORY

  ; Code: subss 0x724300(,%rax,4), %xmm0	 RIP: 420a82	 Bytes: 9
  %loadMem_420a82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a82 = call %struct.Memory* @routine_subss_0x724300___rax_4____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a82)
  store %struct.Memory* %call_420a82, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0xd0(%rbp)	 RIP: 420a8b	 Bytes: 8
  %loadMem_420a8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a8b = call %struct.Memory* @routine_movss__xmm0__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a8b)
  store %struct.Memory* %call_420a8b, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rax	 RIP: 420a93	 Bytes: 4
  %loadMem_420a93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a93 = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a93)
  store %struct.Memory* %call_420a93, %struct.Memory** %MEMORY

  ; Code: movss 0x70d4b0(,%rax,4), %xmm0	 RIP: 420a97	 Bytes: 9
  %loadMem_420a97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420a97 = call %struct.Memory* @routine_movss_0x70d4b0___rax_4____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420a97)
  store %struct.Memory* %call_420a97, %struct.Memory** %MEMORY

  ; Code: movl 0x6cd480, %ecx	 RIP: 420aa0	 Bytes: 7
  %loadMem_420aa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420aa0 = call %struct.Memory* @routine_movl_0x6cd480___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420aa0)
  store %struct.Memory* %call_420aa0, %struct.Memory** %MEMORY

  ; Code: imull 0x6cd480, %ecx	 RIP: 420aa7	 Bytes: 8
  %loadMem_420aa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420aa7 = call %struct.Memory* @routine_imull_0x6cd480___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420aa7)
  store %struct.Memory* %call_420aa7, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %ecx, %xmm1	 RIP: 420aaf	 Bytes: 4
  %loadMem_420aaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420aaf = call %struct.Memory* @routine_cvtsi2ssl__ecx___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420aaf)
  store %struct.Memory* %call_420aaf, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 420ab3	 Bytes: 4
  %loadMem_420ab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ab3 = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ab3)
  store %struct.Memory* %call_420ab3, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rax	 RIP: 420ab7	 Bytes: 4
  %loadMem_420ab7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ab7 = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ab7)
  store %struct.Memory* %call_420ab7, %struct.Memory** %MEMORY

  ; Code: subss 0x6f8ee0(,%rax,4), %xmm0	 RIP: 420abb	 Bytes: 9
  %loadMem_420abb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420abb = call %struct.Memory* @routine_subss_0x6f8ee0___rax_4____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420abb)
  store %struct.Memory* %call_420abb, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0xd4(%rbp)	 RIP: 420ac4	 Bytes: 8
  %loadMem_420ac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ac4 = call %struct.Memory* @routine_movss__xmm0__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ac4)
  store %struct.Memory* %call_420ac4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420ae4	 RIP: 420acc	 Bytes: 5
  %loadMem_420acc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420acc = call %struct.Memory* @routine_jmpq_.L_420ae4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420acc, i64 24, i64 5)
  store %struct.Memory* %call_420acc, %struct.Memory** %MEMORY

  br label %block_.L_420ae4

  ; Code: .L_420ad1:	 RIP: 420ad1	 Bytes: 0
block_.L_420ad1:

  ; Code: xorps %xmm0, %xmm0	 RIP: 420ad1	 Bytes: 3
  %loadMem_420ad1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ad1 = call %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ad1)
  store %struct.Memory* %call_420ad1, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0xd0(%rbp)	 RIP: 420ad4	 Bytes: 8
  %loadMem_420ad4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ad4 = call %struct.Memory* @routine_movss__xmm0__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ad4)
  store %struct.Memory* %call_420ad4, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0xd4(%rbp)	 RIP: 420adc	 Bytes: 8
  %loadMem_420adc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420adc = call %struct.Memory* @routine_movss__xmm0__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420adc)
  store %struct.Memory* %call_420adc, %struct.Memory** %MEMORY

  ; Code: .L_420ae4:	 RIP: 420ae4	 Bytes: 0
  br label %block_.L_420ae4
block_.L_420ae4:

  ; Code: jmpq .L_420c32	 RIP: 420ae4	 Bytes: 5
  %loadMem_420ae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ae4 = call %struct.Memory* @routine_jmpq_.L_420c32(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ae4, i64 334, i64 5)
  store %struct.Memory* %call_420ae4, %struct.Memory** %MEMORY

  br label %block_.L_420c32

  ; Code: .L_420ae9:	 RIP: 420ae9	 Bytes: 0
block_.L_420ae9:

  ; Code: cmpl $0x1, -0x34(%rbp)	 RIP: 420ae9	 Bytes: 4
  %loadMem_420ae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ae9 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ae9)
  store %struct.Memory* %call_420ae9, %struct.Memory** %MEMORY

  ; Code: jne .L_420b90	 RIP: 420aed	 Bytes: 6
  %loadMem_420aed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420aed = call %struct.Memory* @routine_jne_.L_420b90(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420aed, i8* %BRANCH_TAKEN, i64 163, i64 6, i64 6)
  store %struct.Memory* %call_420aed, %struct.Memory** %MEMORY

  %loadBr_420aed = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420aed = icmp eq i8 %loadBr_420aed, 1
  br i1 %cmpBr_420aed, label %block_.L_420b90, label %block_420af3

block_420af3:
  ; Code: cmpl $0x0, 0x6d1900	 RIP: 420af3	 Bytes: 8
  %loadMem_420af3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420af3 = call %struct.Memory* @routine_cmpl__0x0__0x6d1900(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420af3)
  store %struct.Memory* %call_420af3, %struct.Memory** %MEMORY

  ; Code: je .L_420b78	 RIP: 420afb	 Bytes: 6
  %loadMem_420afb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420afb = call %struct.Memory* @routine_je_.L_420b78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420afb, i8* %BRANCH_TAKEN, i64 125, i64 6, i64 6)
  store %struct.Memory* %call_420afb, %struct.Memory** %MEMORY

  %loadBr_420afb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420afb = icmp eq i8 %loadBr_420afb, 1
  br i1 %cmpBr_420afb, label %block_.L_420b78, label %block_420b01

block_420b01:
  ; Code: movslq -0x34(%rbp), %rax	 RIP: 420b01	 Bytes: 4
  %loadMem_420b01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b01 = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b01)
  store %struct.Memory* %call_420b01, %struct.Memory** %MEMORY

  ; Code: movss 0x70d4b0(,%rax,4), %xmm0	 RIP: 420b05	 Bytes: 9
  %loadMem_420b05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b05 = call %struct.Memory* @routine_movss_0x70d4b0___rax_4____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b05)
  store %struct.Memory* %call_420b05, %struct.Memory** %MEMORY

  ; Code: movl 0x6d1900, %ecx	 RIP: 420b0e	 Bytes: 7
  %loadMem_420b0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b0e = call %struct.Memory* @routine_movl_0x6d1900___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b0e)
  store %struct.Memory* %call_420b0e, %struct.Memory** %MEMORY

  ; Code: imull 0x6d1900, %ecx	 RIP: 420b15	 Bytes: 8
  %loadMem_420b15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b15 = call %struct.Memory* @routine_imull_0x6d1900___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b15)
  store %struct.Memory* %call_420b15, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %ecx, %xmm1	 RIP: 420b1d	 Bytes: 4
  %loadMem_420b1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b1d = call %struct.Memory* @routine_cvtsi2ssl__ecx___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b1d)
  store %struct.Memory* %call_420b1d, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 420b21	 Bytes: 4
  %loadMem_420b21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b21 = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b21)
  store %struct.Memory* %call_420b21, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rax	 RIP: 420b25	 Bytes: 4
  %loadMem_420b25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b25 = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b25)
  store %struct.Memory* %call_420b25, %struct.Memory** %MEMORY

  ; Code: subss 0x724300(,%rax,4), %xmm0	 RIP: 420b29	 Bytes: 9
  %loadMem_420b29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b29 = call %struct.Memory* @routine_subss_0x724300___rax_4____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b29)
  store %struct.Memory* %call_420b29, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0xd0(%rbp)	 RIP: 420b32	 Bytes: 8
  %loadMem_420b32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b32 = call %struct.Memory* @routine_movss__xmm0__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b32)
  store %struct.Memory* %call_420b32, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rax	 RIP: 420b3a	 Bytes: 4
  %loadMem_420b3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b3a = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b3a)
  store %struct.Memory* %call_420b3a, %struct.Memory** %MEMORY

  ; Code: movss 0x70d4b0(,%rax,4), %xmm0	 RIP: 420b3e	 Bytes: 9
  %loadMem_420b3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b3e = call %struct.Memory* @routine_movss_0x70d4b0___rax_4____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b3e)
  store %struct.Memory* %call_420b3e, %struct.Memory** %MEMORY

  ; Code: movl 0x6d1900, %ecx	 RIP: 420b47	 Bytes: 7
  %loadMem_420b47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b47 = call %struct.Memory* @routine_movl_0x6d1900___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b47)
  store %struct.Memory* %call_420b47, %struct.Memory** %MEMORY

  ; Code: imull 0x6d1900, %ecx	 RIP: 420b4e	 Bytes: 8
  %loadMem_420b4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b4e = call %struct.Memory* @routine_imull_0x6d1900___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b4e)
  store %struct.Memory* %call_420b4e, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %ecx, %xmm1	 RIP: 420b56	 Bytes: 4
  %loadMem_420b56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b56 = call %struct.Memory* @routine_cvtsi2ssl__ecx___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b56)
  store %struct.Memory* %call_420b56, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 420b5a	 Bytes: 4
  %loadMem_420b5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b5a = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b5a)
  store %struct.Memory* %call_420b5a, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rax	 RIP: 420b5e	 Bytes: 4
  %loadMem_420b5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b5e = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b5e)
  store %struct.Memory* %call_420b5e, %struct.Memory** %MEMORY

  ; Code: subss 0x6f8ee0(,%rax,4), %xmm0	 RIP: 420b62	 Bytes: 9
  %loadMem_420b62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b62 = call %struct.Memory* @routine_subss_0x6f8ee0___rax_4____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b62)
  store %struct.Memory* %call_420b62, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0xd4(%rbp)	 RIP: 420b6b	 Bytes: 8
  %loadMem_420b6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b6b = call %struct.Memory* @routine_movss__xmm0__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b6b)
  store %struct.Memory* %call_420b6b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420b8b	 RIP: 420b73	 Bytes: 5
  %loadMem_420b73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b73 = call %struct.Memory* @routine_jmpq_.L_420b8b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b73, i64 24, i64 5)
  store %struct.Memory* %call_420b73, %struct.Memory** %MEMORY

  br label %block_.L_420b8b

  ; Code: .L_420b78:	 RIP: 420b78	 Bytes: 0
block_.L_420b78:

  ; Code: xorps %xmm0, %xmm0	 RIP: 420b78	 Bytes: 3
  %loadMem_420b78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b78 = call %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b78)
  store %struct.Memory* %call_420b78, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0xd0(%rbp)	 RIP: 420b7b	 Bytes: 8
  %loadMem_420b7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b7b = call %struct.Memory* @routine_movss__xmm0__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b7b)
  store %struct.Memory* %call_420b7b, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0xd4(%rbp)	 RIP: 420b83	 Bytes: 8
  %loadMem_420b83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b83 = call %struct.Memory* @routine_movss__xmm0__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b83)
  store %struct.Memory* %call_420b83, %struct.Memory** %MEMORY

  ; Code: .L_420b8b:	 RIP: 420b8b	 Bytes: 0
  br label %block_.L_420b8b
block_.L_420b8b:

  ; Code: jmpq .L_420c2d	 RIP: 420b8b	 Bytes: 5
  %loadMem_420b8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b8b = call %struct.Memory* @routine_jmpq_.L_420c2d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b8b, i64 162, i64 5)
  store %struct.Memory* %call_420b8b, %struct.Memory** %MEMORY

  br label %block_.L_420c2d

  ; Code: .L_420b90:	 RIP: 420b90	 Bytes: 0
block_.L_420b90:

  ; Code: cmpl $0x0, 0x72369c	 RIP: 420b90	 Bytes: 8
  %loadMem_420b90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b90 = call %struct.Memory* @routine_cmpl__0x0__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b90)
  store %struct.Memory* %call_420b90, %struct.Memory** %MEMORY

  ; Code: je .L_420c15	 RIP: 420b98	 Bytes: 6
  %loadMem_420b98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b98 = call %struct.Memory* @routine_je_.L_420c15(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b98, i8* %BRANCH_TAKEN, i64 125, i64 6, i64 6)
  store %struct.Memory* %call_420b98, %struct.Memory** %MEMORY

  %loadBr_420b98 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420b98 = icmp eq i8 %loadBr_420b98, 1
  br i1 %cmpBr_420b98, label %block_.L_420c15, label %block_420b9e

block_420b9e:
  ; Code: movslq -0x34(%rbp), %rax	 RIP: 420b9e	 Bytes: 4
  %loadMem_420b9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420b9e = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420b9e)
  store %struct.Memory* %call_420b9e, %struct.Memory** %MEMORY

  ; Code: movss 0x70d4b0(,%rax,4), %xmm0	 RIP: 420ba2	 Bytes: 9
  %loadMem_420ba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ba2 = call %struct.Memory* @routine_movss_0x70d4b0___rax_4____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ba2)
  store %struct.Memory* %call_420ba2, %struct.Memory** %MEMORY

  ; Code: movl 0x72369c, %ecx	 RIP: 420bab	 Bytes: 7
  %loadMem_420bab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420bab = call %struct.Memory* @routine_movl_0x72369c___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420bab)
  store %struct.Memory* %call_420bab, %struct.Memory** %MEMORY

  ; Code: imull 0x72369c, %ecx	 RIP: 420bb2	 Bytes: 8
  %loadMem_420bb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420bb2 = call %struct.Memory* @routine_imull_0x72369c___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420bb2)
  store %struct.Memory* %call_420bb2, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %ecx, %xmm1	 RIP: 420bba	 Bytes: 4
  %loadMem_420bba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420bba = call %struct.Memory* @routine_cvtsi2ssl__ecx___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420bba)
  store %struct.Memory* %call_420bba, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 420bbe	 Bytes: 4
  %loadMem_420bbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420bbe = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420bbe)
  store %struct.Memory* %call_420bbe, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rax	 RIP: 420bc2	 Bytes: 4
  %loadMem_420bc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420bc2 = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420bc2)
  store %struct.Memory* %call_420bc2, %struct.Memory** %MEMORY

  ; Code: subss 0x724300(,%rax,4), %xmm0	 RIP: 420bc6	 Bytes: 9
  %loadMem_420bc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420bc6 = call %struct.Memory* @routine_subss_0x724300___rax_4____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420bc6)
  store %struct.Memory* %call_420bc6, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0xd0(%rbp)	 RIP: 420bcf	 Bytes: 8
  %loadMem_420bcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420bcf = call %struct.Memory* @routine_movss__xmm0__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420bcf)
  store %struct.Memory* %call_420bcf, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rax	 RIP: 420bd7	 Bytes: 4
  %loadMem_420bd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420bd7 = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420bd7)
  store %struct.Memory* %call_420bd7, %struct.Memory** %MEMORY

  ; Code: movss 0x70d4b0(,%rax,4), %xmm0	 RIP: 420bdb	 Bytes: 9
  %loadMem_420bdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420bdb = call %struct.Memory* @routine_movss_0x70d4b0___rax_4____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420bdb)
  store %struct.Memory* %call_420bdb, %struct.Memory** %MEMORY

  ; Code: movl 0x72369c, %ecx	 RIP: 420be4	 Bytes: 7
  %loadMem_420be4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420be4 = call %struct.Memory* @routine_movl_0x72369c___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420be4)
  store %struct.Memory* %call_420be4, %struct.Memory** %MEMORY

  ; Code: imull 0x72369c, %ecx	 RIP: 420beb	 Bytes: 8
  %loadMem_420beb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420beb = call %struct.Memory* @routine_imull_0x72369c___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420beb)
  store %struct.Memory* %call_420beb, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %ecx, %xmm1	 RIP: 420bf3	 Bytes: 4
  %loadMem_420bf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420bf3 = call %struct.Memory* @routine_cvtsi2ssl__ecx___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420bf3)
  store %struct.Memory* %call_420bf3, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 420bf7	 Bytes: 4
  %loadMem_420bf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420bf7 = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420bf7)
  store %struct.Memory* %call_420bf7, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rax	 RIP: 420bfb	 Bytes: 4
  %loadMem_420bfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420bfb = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420bfb)
  store %struct.Memory* %call_420bfb, %struct.Memory** %MEMORY

  ; Code: subss 0x6f8ee0(,%rax,4), %xmm0	 RIP: 420bff	 Bytes: 9
  %loadMem_420bff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420bff = call %struct.Memory* @routine_subss_0x6f8ee0___rax_4____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420bff)
  store %struct.Memory* %call_420bff, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0xd4(%rbp)	 RIP: 420c08	 Bytes: 8
  %loadMem_420c08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c08 = call %struct.Memory* @routine_movss__xmm0__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c08)
  store %struct.Memory* %call_420c08, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420c28	 RIP: 420c10	 Bytes: 5
  %loadMem_420c10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c10 = call %struct.Memory* @routine_jmpq_.L_420c28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c10, i64 24, i64 5)
  store %struct.Memory* %call_420c10, %struct.Memory** %MEMORY

  br label %block_.L_420c28

  ; Code: .L_420c15:	 RIP: 420c15	 Bytes: 0
block_.L_420c15:

  ; Code: xorps %xmm0, %xmm0	 RIP: 420c15	 Bytes: 3
  %loadMem_420c15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c15 = call %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c15)
  store %struct.Memory* %call_420c15, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0xd0(%rbp)	 RIP: 420c18	 Bytes: 8
  %loadMem_420c18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c18 = call %struct.Memory* @routine_movss__xmm0__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c18)
  store %struct.Memory* %call_420c18, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0xd4(%rbp)	 RIP: 420c20	 Bytes: 8
  %loadMem_420c20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c20 = call %struct.Memory* @routine_movss__xmm0__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c20)
  store %struct.Memory* %call_420c20, %struct.Memory** %MEMORY

  ; Code: .L_420c28:	 RIP: 420c28	 Bytes: 0
  br label %block_.L_420c28
block_.L_420c28:

  ; Code: jmpq .L_420c2d	 RIP: 420c28	 Bytes: 5
  %loadMem_420c28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c28 = call %struct.Memory* @routine_jmpq_.L_420c2d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c28, i64 5, i64 5)
  store %struct.Memory* %call_420c28, %struct.Memory** %MEMORY

  br label %block_.L_420c2d

  ; Code: .L_420c2d:	 RIP: 420c2d	 Bytes: 0
block_.L_420c2d:

  ; Code: jmpq .L_420c32	 RIP: 420c2d	 Bytes: 5
  %loadMem_420c2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c2d = call %struct.Memory* @routine_jmpq_.L_420c32(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c2d, i64 5, i64 5)
  store %struct.Memory* %call_420c2d, %struct.Memory** %MEMORY

  br label %block_.L_420c32

  ; Code: .L_420c32:	 RIP: 420c32	 Bytes: 0
block_.L_420c32:

  ; Code: movl -0xa0(%rbp), %eax	 RIP: 420c32	 Bytes: 6
  %loadMem_420c32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c32 = call %struct.Memory* @routine_movl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c32)
  store %struct.Memory* %call_420c32, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 420c38	 Bytes: 3
  %loadMem_420c38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c38 = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c38)
  store %struct.Memory* %call_420c38, %struct.Memory** %MEMORY

  ; Code: movl -0xa4(%rbp), %eax	 RIP: 420c3b	 Bytes: 6
  %loadMem_420c3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c3b = call %struct.Memory* @routine_movl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c3b)
  store %struct.Memory* %call_420c3b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x64(%rbp)	 RIP: 420c41	 Bytes: 3
  %loadMem_420c41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c41 = call %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c41)
  store %struct.Memory* %call_420c41, %struct.Memory** %MEMORY

  ; Code: movl -0x84(%rbp), %eax	 RIP: 420c44	 Bytes: 6
  %loadMem_420c44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c44 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c44)
  store %struct.Memory* %call_420c44, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 420c4a	 Bytes: 8
  %loadMem_420c4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c4a = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c4a)
  store %struct.Memory* %call_420c4a, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 420c52	 Bytes: 3
  %loadMem_420c52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c52 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c52)
  store %struct.Memory* %call_420c52, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 420c55	 Bytes: 6
  %loadMem_420c55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c55 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c55)
  store %struct.Memory* %call_420c55, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0xf0(%rbp)	 RIP: 420c5b	 Bytes: 7
  %loadMem_420c5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c5b = call %struct.Memory* @routine_movq__rcx__MINUS0xf0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c5b)
  store %struct.Memory* %call_420c5b, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 420c62	 Bytes: 2
  %loadMem_420c62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c62 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c62)
  store %struct.Memory* %call_420c62, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 420c64	 Bytes: 2
  %loadMem_420c64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c64 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c64)
  store %struct.Memory* %call_420c64, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 420c66	 Bytes: 6
  %loadMem_420c66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c66 = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c66)
  store %struct.Memory* %call_420c66, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 420c6c	 Bytes: 3
  %loadMem_420c6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c6c = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c6c)
  store %struct.Memory* %call_420c6c, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %r8	 RIP: 420c6f	 Bytes: 7
  %loadMem_420c6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c6f = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c6f)
  store %struct.Memory* %call_420c6f, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 420c76	 Bytes: 4
  %loadMem_420c76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c76 = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c76)
  store %struct.Memory* %call_420c76, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 420c7a	 Bytes: 8
  %loadMem_420c7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c7a = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c7a)
  store %struct.Memory* %call_420c7a, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 420c82	 Bytes: 3
  %loadMem_420c82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c82 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c82)
  store %struct.Memory* %call_420c82, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 420c85	 Bytes: 6
  %loadMem_420c85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c85 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c85)
  store %struct.Memory* %call_420c85, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 420c8b	 Bytes: 2
  %loadMem_420c8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c8b = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c8b)
  store %struct.Memory* %call_420c8b, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 420c8d	 Bytes: 6
  %loadMem_420c8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c8d = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c8d)
  store %struct.Memory* %call_420c8d, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 420c93	 Bytes: 3
  %loadMem_420c93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c93 = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c93)
  store %struct.Memory* %call_420c93, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 420c96	 Bytes: 4
  %loadMem_420c96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c96 = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c96)
  store %struct.Memory* %call_420c96, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 420c9a	 Bytes: 3
  %loadMem_420c9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c9a = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c9a)
  store %struct.Memory* %call_420c9a, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 420c9d	 Bytes: 3
  %loadMem_420c9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420c9d = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420c9d)
  store %struct.Memory* %call_420c9d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 420ca0	 Bytes: 3
  %loadMem_420ca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ca0 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ca0)
  store %struct.Memory* %call_420ca0, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 420ca3	 Bytes: 4
  %loadMem_420ca3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ca3 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ca3)
  store %struct.Memory* %call_420ca3, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 420ca7	 Bytes: 4
  %loadMem_420ca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ca7 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ca7)
  store %struct.Memory* %call_420ca7, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 420cab	 Bytes: 4
  %loadMem_420cab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cab = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cab)
  store %struct.Memory* %call_420cab, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 420caf	 Bytes: 6
  %loadMem_420caf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420caf = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420caf)
  store %struct.Memory* %call_420caf, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 420cb5	 Bytes: 7
  %loadMem_420cb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cb5 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cb5)
  store %struct.Memory* %call_420cb5, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 420cbc	 Bytes: 7
  %loadMem_420cbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cbc = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cbc)
  store %struct.Memory* %call_420cbc, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 420cc3	 Bytes: 3
  %loadMem_420cc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cc3 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cc3)
  store %struct.Memory* %call_420cc3, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 420cc6	 Bytes: 4
  %loadMem_420cc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cc6 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cc6)
  store %struct.Memory* %call_420cc6, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 420cca	 Bytes: 4
  %loadMem_420cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cca = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cca)
  store %struct.Memory* %call_420cca, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 420cce	 Bytes: 3
  %loadMem_420cce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cce = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cce)
  store %struct.Memory* %call_420cce, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 420cd1	 Bytes: 3
  %loadMem_420cd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cd1 = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cd1)
  store %struct.Memory* %call_420cd1, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 420cd4	 Bytes: 5
  %loadMem_420cd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cd4 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cd4)
  store %struct.Memory* %call_420cd4, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 420cd9	 Bytes: 5
  %loadMem_420cd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cd9 = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cd9)
  store %struct.Memory* %call_420cd9, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 420cde	 Bytes: 4
  %loadMem_420cde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cde = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cde)
  store %struct.Memory* %call_420cde, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 420ce2	 Bytes: 5
  %loadMem1_420ce2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420ce2 = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420ce2, i64 -2098, i64 5, i64 5)
  store %struct.Memory* %call1_420ce2, %struct.Memory** %MEMORY

  %loadMem2_420ce2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420ce2 = load i64, i64* %3
  %call2_420ce2 = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_420ce2, %struct.Memory* %loadMem2_420ce2)
  store %struct.Memory* %call2_420ce2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 420ce7	 Bytes: 3
  %loadMem_420ce7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ce7 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ce7)
  store %struct.Memory* %call_420ce7, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 420cea	 Bytes: 3
  %loadMem_420cea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cea = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cea)
  store %struct.Memory* %call_420cea, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 420ced	 Bytes: 8
  %loadMem_420ced = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ced = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ced)
  store %struct.Memory* %call_420ced, %struct.Memory** %MEMORY

  ; Code: movslq -0x4c(%rbp), %rsi	 RIP: 420cf5	 Bytes: 4
  %loadMem_420cf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cf5 = call %struct.Memory* @routine_movslq_MINUS0x4c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cf5)
  store %struct.Memory* %call_420cf5, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 420cf9	 Bytes: 4
  %loadMem_420cf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cf9 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cf9)
  store %struct.Memory* %call_420cf9, %struct.Memory** %MEMORY

  ; Code: movslq -0x4c(%rbp), %rsi	 RIP: 420cfd	 Bytes: 4
  %loadMem_420cfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420cfd = call %struct.Memory* @routine_movslq_MINUS0x4c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420cfd)
  store %struct.Memory* %call_420cfd, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 420d01	 Bytes: 3
  %loadMem_420d01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d01 = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d01)
  store %struct.Memory* %call_420d01, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 420d04	 Bytes: 3
  %loadMem_420d04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d04 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d04)
  store %struct.Memory* %call_420d04, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 420d07	 Bytes: 3
  %loadMem_420d07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d07 = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d07)
  store %struct.Memory* %call_420d07, %struct.Memory** %MEMORY

  ; Code: jge .L_420d28	 RIP: 420d0a	 Bytes: 6
  %loadMem_420d0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d0a = call %struct.Memory* @routine_jge_.L_420d28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d0a, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_420d0a, %struct.Memory** %MEMORY

  %loadBr_420d0a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420d0a = icmp eq i8 %loadBr_420d0a, 1
  br i1 %cmpBr_420d0a, label %block_.L_420d28, label %block_420d10

block_420d10:
  ; Code: movl -0x68(%rbp), %eax	 RIP: 420d10	 Bytes: 3
  %loadMem_420d10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d10 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d10)
  store %struct.Memory* %call_420d10, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 420d13	 Bytes: 3
  %loadMem_420d13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d13 = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d13)
  store %struct.Memory* %call_420d13, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 420d16	 Bytes: 3
  %loadMem_420d16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d16 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d16)
  store %struct.Memory* %call_420d16, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 420d19	 Bytes: 6
  %loadMem_420d19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d19 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d19)
  store %struct.Memory* %call_420d19, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 420d1f	 Bytes: 3
  %loadMem_420d1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d1f = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d1f)
  store %struct.Memory* %call_420d1f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 420d22	 Bytes: 6
  %loadMem_420d22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d22 = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d22)
  store %struct.Memory* %call_420d22, %struct.Memory** %MEMORY

  ; Code: .L_420d28:	 RIP: 420d28	 Bytes: 0
  br label %block_.L_420d28
block_.L_420d28:

  ; Code: movl -0xa8(%rbp), %eax	 RIP: 420d28	 Bytes: 6
  %loadMem_420d28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d28 = call %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d28)
  store %struct.Memory* %call_420d28, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb8(%rbp)	 RIP: 420d2e	 Bytes: 6
  %loadMem_420d2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d2e = call %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d2e)
  store %struct.Memory* %call_420d2e, %struct.Memory** %MEMORY

  ; Code: movl -0xac(%rbp), %eax	 RIP: 420d34	 Bytes: 6
  %loadMem_420d34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d34 = call %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d34)
  store %struct.Memory* %call_420d34, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb4(%rbp)	 RIP: 420d3a	 Bytes: 6
  %loadMem_420d3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d3a = call %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d3a)
  store %struct.Memory* %call_420d3a, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc0(%rbp)	 RIP: 420d40	 Bytes: 10
  %loadMem_420d40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d40 = call %struct.Memory* @routine_movl__0x0__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d40)
  store %struct.Memory* %call_420d40, %struct.Memory** %MEMORY

  ; Code: .L_420d4a:	 RIP: 420d4a	 Bytes: 0
  br label %block_.L_420d4a
block_.L_420d4a:

  ; Code: cmpl $0x4, -0xc0(%rbp)	 RIP: 420d4a	 Bytes: 7
  %loadMem_420d4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d4a = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d4a)
  store %struct.Memory* %call_420d4a, %struct.Memory** %MEMORY

  ; Code: jge .L_420f08	 RIP: 420d51	 Bytes: 6
  %loadMem_420d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d51 = call %struct.Memory* @routine_jge_.L_420f08(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d51, i8* %BRANCH_TAKEN, i64 439, i64 6, i64 6)
  store %struct.Memory* %call_420d51, %struct.Memory** %MEMORY

  %loadBr_420d51 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420d51 = icmp eq i8 %loadBr_420d51, 1
  br i1 %cmpBr_420d51, label %block_.L_420f08, label %block_420d57

block_420d57:
  ; Code: movl -0xb8(%rbp), %eax	 RIP: 420d57	 Bytes: 6
  %loadMem_420d57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d57 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d57)
  store %struct.Memory* %call_420d57, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 420d5d	 Bytes: 7
  %loadMem_420d5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d5d = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d5d)
  store %struct.Memory* %call_420d5d, %struct.Memory** %MEMORY

  ; Code: addl 0x6cb7a0(,%rcx,4), %eax	 RIP: 420d64	 Bytes: 7
  %loadMem_420d64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d64 = call %struct.Memory* @routine_addl_0x6cb7a0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d64)
  store %struct.Memory* %call_420d64, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 420d6b	 Bytes: 3
  %loadMem_420d6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d6b = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d6b)
  store %struct.Memory* %call_420d6b, %struct.Memory** %MEMORY

  ; Code: movl -0xb4(%rbp), %eax	 RIP: 420d6e	 Bytes: 6
  %loadMem_420d6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d6e = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d6e)
  store %struct.Memory* %call_420d6e, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 420d74	 Bytes: 7
  %loadMem_420d74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d74 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d74)
  store %struct.Memory* %call_420d74, %struct.Memory** %MEMORY

  ; Code: addl 0x6cb7b0(,%rcx,4), %eax	 RIP: 420d7b	 Bytes: 7
  %loadMem_420d7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d7b = call %struct.Memory* @routine_addl_0x6cb7b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d7b)
  store %struct.Memory* %call_420d7b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x64(%rbp)	 RIP: 420d82	 Bytes: 3
  %loadMem_420d82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d82 = call %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d82)
  store %struct.Memory* %call_420d82, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 420d85	 Bytes: 3
  %loadMem_420d85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d85 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d85)
  store %struct.Memory* %call_420d85, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 420d88	 Bytes: 6
  %loadMem_420d88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d88 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d88)
  store %struct.Memory* %call_420d88, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 420d8e	 Bytes: 2
  %loadMem_420d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d8e = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d8e)
  store %struct.Memory* %call_420d8e, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 420d90	 Bytes: 5
  %loadMem1_420d90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420d90 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420d90, i64 -130448, i64 5, i64 5)
  store %struct.Memory* %call1_420d90, %struct.Memory** %MEMORY

  %loadMem2_420d90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420d90 = load i64, i64* %3
  %call2_420d90 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_420d90, %struct.Memory* %loadMem2_420d90)
  store %struct.Memory* %call2_420d90, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 420d95	 Bytes: 3
  %loadMem_420d95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d95 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d95)
  store %struct.Memory* %call_420d95, %struct.Memory** %MEMORY

  ; Code: jg .L_420eef	 RIP: 420d98	 Bytes: 6
  %loadMem_420d98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d98 = call %struct.Memory* @routine_jg_.L_420eef(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d98, i8* %BRANCH_TAKEN, i64 343, i64 6, i64 6)
  store %struct.Memory* %call_420d98, %struct.Memory** %MEMORY

  %loadBr_420d98 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420d98 = icmp eq i8 %loadBr_420d98, 1
  br i1 %cmpBr_420d98, label %block_.L_420eef, label %block_420d9e

block_420d9e:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 420d9e	 Bytes: 3
  %loadMem_420d9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420d9e = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420d9e)
  store %struct.Memory* %call_420d9e, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 420da1	 Bytes: 6
  %loadMem_420da1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420da1 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420da1)
  store %struct.Memory* %call_420da1, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 420da7	 Bytes: 2
  %loadMem_420da7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420da7 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420da7)
  store %struct.Memory* %call_420da7, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 420da9	 Bytes: 5
  %loadMem1_420da9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420da9 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420da9, i64 -130473, i64 5, i64 5)
  store %struct.Memory* %call1_420da9, %struct.Memory** %MEMORY

  %loadMem2_420da9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420da9 = load i64, i64* %3
  %call2_420da9 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_420da9, %struct.Memory* %loadMem2_420da9)
  store %struct.Memory* %call2_420da9, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 420dae	 Bytes: 3
  %loadMem_420dae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420dae = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420dae)
  store %struct.Memory* %call_420dae, %struct.Memory** %MEMORY

  ; Code: jg .L_420eef	 RIP: 420db1	 Bytes: 6
  %loadMem_420db1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420db1 = call %struct.Memory* @routine_jg_.L_420eef(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420db1, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_420db1, %struct.Memory** %MEMORY

  %loadBr_420db1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420db1 = icmp eq i8 %loadBr_420db1, 1
  br i1 %cmpBr_420db1, label %block_.L_420eef, label %block_420db7

block_420db7:
  ; Code: movq 0x6d32d0, %rax	 RIP: 420db7	 Bytes: 8
  %loadMem_420db7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420db7 = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420db7)
  store %struct.Memory* %call_420db7, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 420dbf	 Bytes: 3
  %loadMem_420dbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420dbf = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420dbf)
  store %struct.Memory* %call_420dbf, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 420dc2	 Bytes: 6
  %loadMem_420dc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420dc2 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420dc2)
  store %struct.Memory* %call_420dc2, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 420dc8	 Bytes: 3
  %loadMem_420dc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420dc8 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420dc8)
  store %struct.Memory* %call_420dc8, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 420dcb	 Bytes: 3
  %loadMem_420dcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420dcb = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420dcb)
  store %struct.Memory* %call_420dcb, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 420dce	 Bytes: 4
  %loadMem_420dce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420dce = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420dce)
  store %struct.Memory* %call_420dce, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 420dd2	 Bytes: 3
  %loadMem_420dd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420dd2 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420dd2)
  store %struct.Memory* %call_420dd2, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 420dd5	 Bytes: 6
  %loadMem_420dd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420dd5 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420dd5)
  store %struct.Memory* %call_420dd5, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 420ddb	 Bytes: 3
  %loadMem_420ddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ddb = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ddb)
  store %struct.Memory* %call_420ddb, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 420dde	 Bytes: 3
  %loadMem_420dde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420dde = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420dde)
  store %struct.Memory* %call_420dde, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 420de1	 Bytes: 4
  %loadMem_420de1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420de1 = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420de1)
  store %struct.Memory* %call_420de1, %struct.Memory** %MEMORY

  ; Code: jne .L_420eea	 RIP: 420de5	 Bytes: 6
  %loadMem_420de5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420de5 = call %struct.Memory* @routine_jne_.L_420eea(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420de5, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_420de5, %struct.Memory** %MEMORY

  %loadBr_420de5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420de5 = icmp eq i8 %loadBr_420de5, 1
  br i1 %cmpBr_420de5, label %block_.L_420eea, label %block_420deb

block_420deb:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 420deb	 Bytes: 6
  %loadMem_420deb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420deb = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420deb)
  store %struct.Memory* %call_420deb, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 420df1	 Bytes: 8
  %loadMem_420df1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420df1 = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420df1)
  store %struct.Memory* %call_420df1, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 420df9	 Bytes: 3
  %loadMem_420df9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420df9 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420df9)
  store %struct.Memory* %call_420df9, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 420dfc	 Bytes: 6
  %loadMem_420dfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420dfc = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420dfc)
  store %struct.Memory* %call_420dfc, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0xf8(%rbp)	 RIP: 420e02	 Bytes: 7
  %loadMem_420e02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e02 = call %struct.Memory* @routine_movq__rcx__MINUS0xf8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e02)
  store %struct.Memory* %call_420e02, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 420e09	 Bytes: 2
  %loadMem_420e09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e09 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e09)
  store %struct.Memory* %call_420e09, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 420e0b	 Bytes: 2
  %loadMem_420e0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e0b = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e0b)
  store %struct.Memory* %call_420e0b, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 420e0d	 Bytes: 6
  %loadMem_420e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e0d = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e0d)
  store %struct.Memory* %call_420e0d, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 420e13	 Bytes: 3
  %loadMem_420e13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e13 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e13)
  store %struct.Memory* %call_420e13, %struct.Memory** %MEMORY

  ; Code: movq -0xf8(%rbp), %r8	 RIP: 420e16	 Bytes: 7
  %loadMem_420e16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e16 = call %struct.Memory* @routine_movq_MINUS0xf8__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e16)
  store %struct.Memory* %call_420e16, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 420e1d	 Bytes: 4
  %loadMem_420e1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e1d = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e1d)
  store %struct.Memory* %call_420e1d, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 420e21	 Bytes: 8
  %loadMem_420e21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e21 = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e21)
  store %struct.Memory* %call_420e21, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 420e29	 Bytes: 3
  %loadMem_420e29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e29 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e29)
  store %struct.Memory* %call_420e29, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 420e2c	 Bytes: 6
  %loadMem_420e2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e2c = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e2c)
  store %struct.Memory* %call_420e2c, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 420e32	 Bytes: 2
  %loadMem_420e32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e32 = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e32)
  store %struct.Memory* %call_420e32, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 420e34	 Bytes: 6
  %loadMem_420e34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e34 = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e34)
  store %struct.Memory* %call_420e34, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 420e3a	 Bytes: 3
  %loadMem_420e3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e3a = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e3a)
  store %struct.Memory* %call_420e3a, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 420e3d	 Bytes: 4
  %loadMem_420e3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e3d = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e3d)
  store %struct.Memory* %call_420e3d, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 420e41	 Bytes: 3
  %loadMem_420e41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e41 = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e41)
  store %struct.Memory* %call_420e41, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 420e44	 Bytes: 3
  %loadMem_420e44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e44 = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e44)
  store %struct.Memory* %call_420e44, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 420e47	 Bytes: 3
  %loadMem_420e47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e47 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e47)
  store %struct.Memory* %call_420e47, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 420e4a	 Bytes: 4
  %loadMem_420e4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e4a = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e4a)
  store %struct.Memory* %call_420e4a, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 420e4e	 Bytes: 4
  %loadMem_420e4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e4e = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e4e)
  store %struct.Memory* %call_420e4e, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 420e52	 Bytes: 4
  %loadMem_420e52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e52 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e52)
  store %struct.Memory* %call_420e52, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 420e56	 Bytes: 6
  %loadMem_420e56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e56 = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e56)
  store %struct.Memory* %call_420e56, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 420e5c	 Bytes: 7
  %loadMem_420e5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e5c = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e5c)
  store %struct.Memory* %call_420e5c, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 420e63	 Bytes: 7
  %loadMem_420e63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e63 = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e63)
  store %struct.Memory* %call_420e63, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 420e6a	 Bytes: 3
  %loadMem_420e6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e6a = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e6a)
  store %struct.Memory* %call_420e6a, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 420e6d	 Bytes: 4
  %loadMem_420e6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e6d = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e6d)
  store %struct.Memory* %call_420e6d, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 420e71	 Bytes: 4
  %loadMem_420e71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e71 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e71)
  store %struct.Memory* %call_420e71, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 420e75	 Bytes: 3
  %loadMem_420e75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e75 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e75)
  store %struct.Memory* %call_420e75, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 420e78	 Bytes: 3
  %loadMem_420e78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e78 = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e78)
  store %struct.Memory* %call_420e78, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 420e7b	 Bytes: 5
  %loadMem_420e7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e7b = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e7b)
  store %struct.Memory* %call_420e7b, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 420e80	 Bytes: 5
  %loadMem_420e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e80 = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e80)
  store %struct.Memory* %call_420e80, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 420e85	 Bytes: 4
  %loadMem_420e85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e85 = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e85)
  store %struct.Memory* %call_420e85, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 420e89	 Bytes: 5
  %loadMem1_420e89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420e89 = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420e89, i64 -2521, i64 5, i64 5)
  store %struct.Memory* %call1_420e89, %struct.Memory** %MEMORY

  %loadMem2_420e89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420e89 = load i64, i64* %3
  %call2_420e89 = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_420e89, %struct.Memory* %loadMem2_420e89)
  store %struct.Memory* %call2_420e89, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 420e8e	 Bytes: 3
  %loadMem_420e8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e8e = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e8e)
  store %struct.Memory* %call_420e8e, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 420e91	 Bytes: 3
  %loadMem_420e91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e91 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e91)
  store %struct.Memory* %call_420e91, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 420e94	 Bytes: 8
  %loadMem_420e94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e94 = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e94)
  store %struct.Memory* %call_420e94, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 420e9c	 Bytes: 3
  %loadMem_420e9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e9c = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e9c)
  store %struct.Memory* %call_420e9c, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 420e9f	 Bytes: 6
  %loadMem_420e9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420e9f = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420e9f)
  store %struct.Memory* %call_420e9f, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 420ea5	 Bytes: 3
  %loadMem_420ea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ea5 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ea5)
  store %struct.Memory* %call_420ea5, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 420ea8	 Bytes: 3
  %loadMem_420ea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ea8 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ea8)
  store %struct.Memory* %call_420ea8, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 420eab	 Bytes: 4
  %loadMem_420eab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420eab = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420eab)
  store %struct.Memory* %call_420eab, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 420eaf	 Bytes: 3
  %loadMem_420eaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420eaf = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420eaf)
  store %struct.Memory* %call_420eaf, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 420eb2	 Bytes: 6
  %loadMem_420eb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420eb2 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420eb2)
  store %struct.Memory* %call_420eb2, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 420eb8	 Bytes: 3
  %loadMem_420eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420eb8 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420eb8)
  store %struct.Memory* %call_420eb8, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 420ebb	 Bytes: 3
  %loadMem_420ebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ebb = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ebb)
  store %struct.Memory* %call_420ebb, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 420ebe	 Bytes: 3
  %loadMem_420ebe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ebe = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ebe)
  store %struct.Memory* %call_420ebe, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 420ec1	 Bytes: 3
  %loadMem_420ec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ec1 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ec1)
  store %struct.Memory* %call_420ec1, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 420ec4	 Bytes: 3
  %loadMem_420ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ec4 = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ec4)
  store %struct.Memory* %call_420ec4, %struct.Memory** %MEMORY

  ; Code: jge .L_420ee5	 RIP: 420ec7	 Bytes: 6
  %loadMem_420ec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ec7 = call %struct.Memory* @routine_jge_.L_420ee5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ec7, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_420ec7, %struct.Memory** %MEMORY

  %loadBr_420ec7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420ec7 = icmp eq i8 %loadBr_420ec7, 1
  br i1 %cmpBr_420ec7, label %block_.L_420ee5, label %block_420ecd

block_420ecd:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 420ecd	 Bytes: 3
  %loadMem_420ecd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ecd = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ecd)
  store %struct.Memory* %call_420ecd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 420ed0	 Bytes: 6
  %loadMem_420ed0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ed0 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ed0)
  store %struct.Memory* %call_420ed0, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 420ed6	 Bytes: 3
  %loadMem_420ed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ed6 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ed6)
  store %struct.Memory* %call_420ed6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 420ed9	 Bytes: 6
  %loadMem_420ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ed9 = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ed9)
  store %struct.Memory* %call_420ed9, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 420edf	 Bytes: 3
  %loadMem_420edf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420edf = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420edf)
  store %struct.Memory* %call_420edf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 420ee2	 Bytes: 3
  %loadMem_420ee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ee2 = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ee2)
  store %struct.Memory* %call_420ee2, %struct.Memory** %MEMORY

  ; Code: .L_420ee5:	 RIP: 420ee5	 Bytes: 0
  br label %block_.L_420ee5
block_.L_420ee5:

  ; Code: jmpq .L_420eea	 RIP: 420ee5	 Bytes: 5
  %loadMem_420ee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ee5 = call %struct.Memory* @routine_jmpq_.L_420eea(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ee5, i64 5, i64 5)
  store %struct.Memory* %call_420ee5, %struct.Memory** %MEMORY

  br label %block_.L_420eea

  ; Code: .L_420eea:	 RIP: 420eea	 Bytes: 0
block_.L_420eea:

  ; Code: jmpq .L_420eef	 RIP: 420eea	 Bytes: 5
  %loadMem_420eea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420eea = call %struct.Memory* @routine_jmpq_.L_420eef(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420eea, i64 5, i64 5)
  store %struct.Memory* %call_420eea, %struct.Memory** %MEMORY

  br label %block_.L_420eef

  ; Code: .L_420eef:	 RIP: 420eef	 Bytes: 0
block_.L_420eef:

  ; Code: jmpq .L_420ef4	 RIP: 420eef	 Bytes: 5
  %loadMem_420eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420eef = call %struct.Memory* @routine_jmpq_.L_420ef4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420eef, i64 5, i64 5)
  store %struct.Memory* %call_420eef, %struct.Memory** %MEMORY

  br label %block_.L_420ef4

  ; Code: .L_420ef4:	 RIP: 420ef4	 Bytes: 0
block_.L_420ef4:

  ; Code: movl -0xc0(%rbp), %eax	 RIP: 420ef4	 Bytes: 6
  %loadMem_420ef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ef4 = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ef4)
  store %struct.Memory* %call_420ef4, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 420efa	 Bytes: 3
  %loadMem_420efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420efa = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420efa)
  store %struct.Memory* %call_420efa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc0(%rbp)	 RIP: 420efd	 Bytes: 6
  %loadMem_420efd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420efd = call %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420efd)
  store %struct.Memory* %call_420efd, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420d4a	 RIP: 420f03	 Bytes: 5
  %loadMem_420f03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f03 = call %struct.Memory* @routine_jmpq_.L_420d4a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f03, i64 -441, i64 5)
  store %struct.Memory* %call_420f03, %struct.Memory** %MEMORY

  br label %block_.L_420d4a

  ; Code: .L_420f08:	 RIP: 420f08	 Bytes: 0
block_.L_420f08:

  ; Code: movl -0xa0(%rbp), %eax	 RIP: 420f08	 Bytes: 6
  %loadMem_420f08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f08 = call %struct.Memory* @routine_movl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f08)
  store %struct.Memory* %call_420f08, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %eax	 RIP: 420f0e	 Bytes: 3
  %loadMem_420f0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f0e = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f0e)
  store %struct.Memory* %call_420f0e, %struct.Memory** %MEMORY

  ; Code: jne .L_420f26	 RIP: 420f11	 Bytes: 6
  %loadMem_420f11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f11 = call %struct.Memory* @routine_jne_.L_420f26(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f11, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_420f11, %struct.Memory** %MEMORY

  %loadBr_420f11 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420f11 = icmp eq i8 %loadBr_420f11, 1
  br i1 %cmpBr_420f11, label %block_.L_420f26, label %block_420f17

block_420f17:
  ; Code: movl -0xa4(%rbp), %eax	 RIP: 420f17	 Bytes: 6
  %loadMem_420f17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f17 = call %struct.Memory* @routine_movl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f17)
  store %struct.Memory* %call_420f17, %struct.Memory** %MEMORY

  ; Code: cmpl -0x30(%rbp), %eax	 RIP: 420f1d	 Bytes: 3
  %loadMem_420f1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f1d = call %struct.Memory* @routine_cmpl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f1d)
  store %struct.Memory* %call_420f1d, %struct.Memory** %MEMORY

  ; Code: je .L_421281	 RIP: 420f20	 Bytes: 6
  %loadMem_420f20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f20 = call %struct.Memory* @routine_je_.L_421281(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f20, i8* %BRANCH_TAKEN, i64 865, i64 6, i64 6)
  store %struct.Memory* %call_420f20, %struct.Memory** %MEMORY

  %loadBr_420f20 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420f20 = icmp eq i8 %loadBr_420f20, 1
  br i1 %cmpBr_420f20, label %block_.L_421281, label %block_.L_420f26

  ; Code: .L_420f26:	 RIP: 420f26	 Bytes: 0
block_.L_420f26:

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 420f26	 Bytes: 3
  %loadMem_420f26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f26 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f26)
  store %struct.Memory* %call_420f26, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 420f29	 Bytes: 3
  %loadMem_420f29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f29 = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f29)
  store %struct.Memory* %call_420f29, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %eax	 RIP: 420f2c	 Bytes: 3
  %loadMem_420f2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f2c = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f2c)
  store %struct.Memory* %call_420f2c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x64(%rbp)	 RIP: 420f2f	 Bytes: 3
  %loadMem_420f2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f2f = call %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f2f)
  store %struct.Memory* %call_420f2f, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 420f32	 Bytes: 3
  %loadMem_420f32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f32 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f32)
  store %struct.Memory* %call_420f32, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 420f35	 Bytes: 6
  %loadMem_420f35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f35 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f35)
  store %struct.Memory* %call_420f35, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 420f3b	 Bytes: 2
  %loadMem_420f3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f3b = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f3b)
  store %struct.Memory* %call_420f3b, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 420f3d	 Bytes: 5
  %loadMem1_420f3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420f3d = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420f3d, i64 -130877, i64 5, i64 5)
  store %struct.Memory* %call1_420f3d, %struct.Memory** %MEMORY

  %loadMem2_420f3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420f3d = load i64, i64* %3
  %call2_420f3d = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_420f3d, %struct.Memory* %loadMem2_420f3d)
  store %struct.Memory* %call2_420f3d, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 420f42	 Bytes: 3
  %loadMem_420f42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f42 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f42)
  store %struct.Memory* %call_420f42, %struct.Memory** %MEMORY

  ; Code: jg .L_42109c	 RIP: 420f45	 Bytes: 6
  %loadMem_420f45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f45 = call %struct.Memory* @routine_jg_.L_42109c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f45, i8* %BRANCH_TAKEN, i64 343, i64 6, i64 6)
  store %struct.Memory* %call_420f45, %struct.Memory** %MEMORY

  %loadBr_420f45 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420f45 = icmp eq i8 %loadBr_420f45, 1
  br i1 %cmpBr_420f45, label %block_.L_42109c, label %block_420f4b

block_420f4b:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 420f4b	 Bytes: 3
  %loadMem_420f4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f4b = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f4b)
  store %struct.Memory* %call_420f4b, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 420f4e	 Bytes: 6
  %loadMem_420f4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f4e = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f4e)
  store %struct.Memory* %call_420f4e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 420f54	 Bytes: 2
  %loadMem_420f54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f54 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f54)
  store %struct.Memory* %call_420f54, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 420f56	 Bytes: 5
  %loadMem1_420f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420f56 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420f56, i64 -130902, i64 5, i64 5)
  store %struct.Memory* %call1_420f56, %struct.Memory** %MEMORY

  %loadMem2_420f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420f56 = load i64, i64* %3
  %call2_420f56 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_420f56, %struct.Memory* %loadMem2_420f56)
  store %struct.Memory* %call2_420f56, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 420f5b	 Bytes: 3
  %loadMem_420f5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f5b = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f5b)
  store %struct.Memory* %call_420f5b, %struct.Memory** %MEMORY

  ; Code: jg .L_42109c	 RIP: 420f5e	 Bytes: 6
  %loadMem_420f5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f5e = call %struct.Memory* @routine_jg_.L_42109c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f5e, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_420f5e, %struct.Memory** %MEMORY

  %loadBr_420f5e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420f5e = icmp eq i8 %loadBr_420f5e, 1
  br i1 %cmpBr_420f5e, label %block_.L_42109c, label %block_420f64

block_420f64:
  ; Code: movq 0x6d32d0, %rax	 RIP: 420f64	 Bytes: 8
  %loadMem_420f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f64 = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f64)
  store %struct.Memory* %call_420f64, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 420f6c	 Bytes: 3
  %loadMem_420f6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f6c = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f6c)
  store %struct.Memory* %call_420f6c, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 420f6f	 Bytes: 6
  %loadMem_420f6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f6f = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f6f)
  store %struct.Memory* %call_420f6f, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 420f75	 Bytes: 3
  %loadMem_420f75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f75 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f75)
  store %struct.Memory* %call_420f75, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 420f78	 Bytes: 3
  %loadMem_420f78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f78 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f78)
  store %struct.Memory* %call_420f78, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 420f7b	 Bytes: 4
  %loadMem_420f7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f7b = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f7b)
  store %struct.Memory* %call_420f7b, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 420f7f	 Bytes: 3
  %loadMem_420f7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f7f = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f7f)
  store %struct.Memory* %call_420f7f, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 420f82	 Bytes: 6
  %loadMem_420f82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f82 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f82)
  store %struct.Memory* %call_420f82, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 420f88	 Bytes: 3
  %loadMem_420f88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f88 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f88)
  store %struct.Memory* %call_420f88, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 420f8b	 Bytes: 3
  %loadMem_420f8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f8b = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f8b)
  store %struct.Memory* %call_420f8b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 420f8e	 Bytes: 4
  %loadMem_420f8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f8e = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f8e)
  store %struct.Memory* %call_420f8e, %struct.Memory** %MEMORY

  ; Code: jne .L_421097	 RIP: 420f92	 Bytes: 6
  %loadMem_420f92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f92 = call %struct.Memory* @routine_jne_.L_421097(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f92, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_420f92, %struct.Memory** %MEMORY

  %loadBr_420f92 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420f92 = icmp eq i8 %loadBr_420f92, 1
  br i1 %cmpBr_420f92, label %block_.L_421097, label %block_420f98

block_420f98:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 420f98	 Bytes: 6
  %loadMem_420f98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f98 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f98)
  store %struct.Memory* %call_420f98, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 420f9e	 Bytes: 8
  %loadMem_420f9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420f9e = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420f9e)
  store %struct.Memory* %call_420f9e, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 420fa6	 Bytes: 3
  %loadMem_420fa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fa6 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fa6)
  store %struct.Memory* %call_420fa6, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 420fa9	 Bytes: 6
  %loadMem_420fa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fa9 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fa9)
  store %struct.Memory* %call_420fa9, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x100(%rbp)	 RIP: 420faf	 Bytes: 7
  %loadMem_420faf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420faf = call %struct.Memory* @routine_movq__rcx__MINUS0x100__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420faf)
  store %struct.Memory* %call_420faf, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 420fb6	 Bytes: 2
  %loadMem_420fb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fb6 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fb6)
  store %struct.Memory* %call_420fb6, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 420fb8	 Bytes: 2
  %loadMem_420fb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fb8 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fb8)
  store %struct.Memory* %call_420fb8, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 420fba	 Bytes: 6
  %loadMem_420fba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fba = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fba)
  store %struct.Memory* %call_420fba, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 420fc0	 Bytes: 3
  %loadMem_420fc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fc0 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fc0)
  store %struct.Memory* %call_420fc0, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %r8	 RIP: 420fc3	 Bytes: 7
  %loadMem_420fc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fc3 = call %struct.Memory* @routine_movq_MINUS0x100__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fc3)
  store %struct.Memory* %call_420fc3, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 420fca	 Bytes: 4
  %loadMem_420fca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fca = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fca)
  store %struct.Memory* %call_420fca, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 420fce	 Bytes: 8
  %loadMem_420fce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fce = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fce)
  store %struct.Memory* %call_420fce, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 420fd6	 Bytes: 3
  %loadMem_420fd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fd6 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fd6)
  store %struct.Memory* %call_420fd6, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 420fd9	 Bytes: 6
  %loadMem_420fd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fd9 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fd9)
  store %struct.Memory* %call_420fd9, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 420fdf	 Bytes: 2
  %loadMem_420fdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fdf = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fdf)
  store %struct.Memory* %call_420fdf, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 420fe1	 Bytes: 6
  %loadMem_420fe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fe1 = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fe1)
  store %struct.Memory* %call_420fe1, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 420fe7	 Bytes: 3
  %loadMem_420fe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fe7 = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fe7)
  store %struct.Memory* %call_420fe7, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 420fea	 Bytes: 4
  %loadMem_420fea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fea = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fea)
  store %struct.Memory* %call_420fea, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 420fee	 Bytes: 3
  %loadMem_420fee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fee = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fee)
  store %struct.Memory* %call_420fee, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 420ff1	 Bytes: 3
  %loadMem_420ff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ff1 = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ff1)
  store %struct.Memory* %call_420ff1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 420ff4	 Bytes: 3
  %loadMem_420ff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ff4 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ff4)
  store %struct.Memory* %call_420ff4, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 420ff7	 Bytes: 4
  %loadMem_420ff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ff7 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ff7)
  store %struct.Memory* %call_420ff7, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 420ffb	 Bytes: 4
  %loadMem_420ffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420ffb = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420ffb)
  store %struct.Memory* %call_420ffb, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 420fff	 Bytes: 4
  %loadMem_420fff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420fff = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420fff)
  store %struct.Memory* %call_420fff, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 421003	 Bytes: 6
  %loadMem_421003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421003 = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421003)
  store %struct.Memory* %call_421003, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 421009	 Bytes: 7
  %loadMem_421009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421009 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421009)
  store %struct.Memory* %call_421009, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 421010	 Bytes: 7
  %loadMem_421010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421010 = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421010)
  store %struct.Memory* %call_421010, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421017	 Bytes: 3
  %loadMem_421017 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421017 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421017)
  store %struct.Memory* %call_421017, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 42101a	 Bytes: 4
  %loadMem_42101a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42101a = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42101a)
  store %struct.Memory* %call_42101a, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 42101e	 Bytes: 4
  %loadMem_42101e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42101e = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42101e)
  store %struct.Memory* %call_42101e, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 421022	 Bytes: 3
  %loadMem_421022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421022 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421022)
  store %struct.Memory* %call_421022, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 421025	 Bytes: 3
  %loadMem_421025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421025 = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421025)
  store %struct.Memory* %call_421025, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 421028	 Bytes: 5
  %loadMem_421028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421028 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421028)
  store %struct.Memory* %call_421028, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 42102d	 Bytes: 5
  %loadMem_42102d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42102d = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42102d)
  store %struct.Memory* %call_42102d, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 421032	 Bytes: 4
  %loadMem_421032 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421032 = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421032)
  store %struct.Memory* %call_421032, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 421036	 Bytes: 5
  %loadMem1_421036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_421036 = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_421036, i64 -2950, i64 5, i64 5)
  store %struct.Memory* %call1_421036, %struct.Memory** %MEMORY

  %loadMem2_421036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_421036 = load i64, i64* %3
  %call2_421036 = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_421036, %struct.Memory* %loadMem2_421036)
  store %struct.Memory* %call2_421036, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 42103b	 Bytes: 3
  %loadMem_42103b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42103b = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42103b)
  store %struct.Memory* %call_42103b, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42103e	 Bytes: 3
  %loadMem_42103e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42103e = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42103e)
  store %struct.Memory* %call_42103e, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 421041	 Bytes: 8
  %loadMem_421041 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421041 = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421041)
  store %struct.Memory* %call_421041, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 421049	 Bytes: 3
  %loadMem_421049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421049 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421049)
  store %struct.Memory* %call_421049, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 42104c	 Bytes: 6
  %loadMem_42104c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42104c = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42104c)
  store %struct.Memory* %call_42104c, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421052	 Bytes: 3
  %loadMem_421052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421052 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421052)
  store %struct.Memory* %call_421052, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 421055	 Bytes: 3
  %loadMem_421055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421055 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421055)
  store %struct.Memory* %call_421055, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 421058	 Bytes: 4
  %loadMem_421058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421058 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421058)
  store %struct.Memory* %call_421058, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 42105c	 Bytes: 3
  %loadMem_42105c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42105c = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42105c)
  store %struct.Memory* %call_42105c, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 42105f	 Bytes: 6
  %loadMem_42105f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42105f = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42105f)
  store %struct.Memory* %call_42105f, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421065	 Bytes: 3
  %loadMem_421065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421065 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421065)
  store %struct.Memory* %call_421065, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 421068	 Bytes: 3
  %loadMem_421068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421068 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421068)
  store %struct.Memory* %call_421068, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 42106b	 Bytes: 3
  %loadMem_42106b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42106b = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42106b)
  store %struct.Memory* %call_42106b, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42106e	 Bytes: 3
  %loadMem_42106e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42106e = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42106e)
  store %struct.Memory* %call_42106e, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 421071	 Bytes: 3
  %loadMem_421071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421071 = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421071)
  store %struct.Memory* %call_421071, %struct.Memory** %MEMORY

  ; Code: jge .L_421092	 RIP: 421074	 Bytes: 6
  %loadMem_421074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421074 = call %struct.Memory* @routine_jge_.L_421092(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421074, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_421074, %struct.Memory** %MEMORY

  %loadBr_421074 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421074 = icmp eq i8 %loadBr_421074, 1
  br i1 %cmpBr_421074, label %block_.L_421092, label %block_42107a

block_42107a:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 42107a	 Bytes: 3
  %loadMem_42107a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42107a = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42107a)
  store %struct.Memory* %call_42107a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 42107d	 Bytes: 6
  %loadMem_42107d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42107d = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42107d)
  store %struct.Memory* %call_42107d, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 421083	 Bytes: 3
  %loadMem_421083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421083 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421083)
  store %struct.Memory* %call_421083, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 421086	 Bytes: 6
  %loadMem_421086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421086 = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421086)
  store %struct.Memory* %call_421086, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42108c	 Bytes: 3
  %loadMem_42108c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42108c = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42108c)
  store %struct.Memory* %call_42108c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 42108f	 Bytes: 3
  %loadMem_42108f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42108f = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42108f)
  store %struct.Memory* %call_42108f, %struct.Memory** %MEMORY

  ; Code: .L_421092:	 RIP: 421092	 Bytes: 0
  br label %block_.L_421092
block_.L_421092:

  ; Code: jmpq .L_421097	 RIP: 421092	 Bytes: 5
  %loadMem_421092 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421092 = call %struct.Memory* @routine_jmpq_.L_421097(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421092, i64 5, i64 5)
  store %struct.Memory* %call_421092, %struct.Memory** %MEMORY

  br label %block_.L_421097

  ; Code: .L_421097:	 RIP: 421097	 Bytes: 0
block_.L_421097:

  ; Code: jmpq .L_42109c	 RIP: 421097	 Bytes: 5
  %loadMem_421097 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421097 = call %struct.Memory* @routine_jmpq_.L_42109c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421097, i64 5, i64 5)
  store %struct.Memory* %call_421097, %struct.Memory** %MEMORY

  br label %block_.L_42109c

  ; Code: .L_42109c:	 RIP: 42109c	 Bytes: 0
block_.L_42109c:

  ; Code: movl -0xa8(%rbp), %eax	 RIP: 42109c	 Bytes: 6
  %loadMem_42109c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42109c = call %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42109c)
  store %struct.Memory* %call_42109c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb8(%rbp)	 RIP: 4210a2	 Bytes: 6
  %loadMem_4210a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210a2 = call %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210a2)
  store %struct.Memory* %call_4210a2, %struct.Memory** %MEMORY

  ; Code: movl -0xac(%rbp), %eax	 RIP: 4210a8	 Bytes: 6
  %loadMem_4210a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210a8 = call %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210a8)
  store %struct.Memory* %call_4210a8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb4(%rbp)	 RIP: 4210ae	 Bytes: 6
  %loadMem_4210ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210ae = call %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210ae)
  store %struct.Memory* %call_4210ae, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc0(%rbp)	 RIP: 4210b4	 Bytes: 10
  %loadMem_4210b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210b4 = call %struct.Memory* @routine_movl__0x0__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210b4)
  store %struct.Memory* %call_4210b4, %struct.Memory** %MEMORY

  ; Code: .L_4210be:	 RIP: 4210be	 Bytes: 0
  br label %block_.L_4210be
block_.L_4210be:

  ; Code: cmpl $0x4, -0xc0(%rbp)	 RIP: 4210be	 Bytes: 7
  %loadMem_4210be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210be = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210be)
  store %struct.Memory* %call_4210be, %struct.Memory** %MEMORY

  ; Code: jge .L_42127c	 RIP: 4210c5	 Bytes: 6
  %loadMem_4210c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210c5 = call %struct.Memory* @routine_jge_.L_42127c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210c5, i8* %BRANCH_TAKEN, i64 439, i64 6, i64 6)
  store %struct.Memory* %call_4210c5, %struct.Memory** %MEMORY

  %loadBr_4210c5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4210c5 = icmp eq i8 %loadBr_4210c5, 1
  br i1 %cmpBr_4210c5, label %block_.L_42127c, label %block_4210cb

block_4210cb:
  ; Code: movl -0xb8(%rbp), %eax	 RIP: 4210cb	 Bytes: 6
  %loadMem_4210cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210cb = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210cb)
  store %struct.Memory* %call_4210cb, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 4210d1	 Bytes: 7
  %loadMem_4210d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210d1 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210d1)
  store %struct.Memory* %call_4210d1, %struct.Memory** %MEMORY

  ; Code: addl 0x6cb7a0(,%rcx,4), %eax	 RIP: 4210d8	 Bytes: 7
  %loadMem_4210d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210d8 = call %struct.Memory* @routine_addl_0x6cb7a0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210d8)
  store %struct.Memory* %call_4210d8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 4210df	 Bytes: 3
  %loadMem_4210df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210df = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210df)
  store %struct.Memory* %call_4210df, %struct.Memory** %MEMORY

  ; Code: movl -0xb4(%rbp), %eax	 RIP: 4210e2	 Bytes: 6
  %loadMem_4210e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210e2 = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210e2)
  store %struct.Memory* %call_4210e2, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 4210e8	 Bytes: 7
  %loadMem_4210e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210e8 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210e8)
  store %struct.Memory* %call_4210e8, %struct.Memory** %MEMORY

  ; Code: addl 0x6cb7b0(,%rcx,4), %eax	 RIP: 4210ef	 Bytes: 7
  %loadMem_4210ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210ef = call %struct.Memory* @routine_addl_0x6cb7b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210ef)
  store %struct.Memory* %call_4210ef, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x64(%rbp)	 RIP: 4210f6	 Bytes: 3
  %loadMem_4210f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210f6 = call %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210f6)
  store %struct.Memory* %call_4210f6, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 4210f9	 Bytes: 3
  %loadMem_4210f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210f9 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210f9)
  store %struct.Memory* %call_4210f9, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 4210fc	 Bytes: 6
  %loadMem_4210fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4210fc = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4210fc)
  store %struct.Memory* %call_4210fc, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 421102	 Bytes: 2
  %loadMem_421102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421102 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421102)
  store %struct.Memory* %call_421102, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 421104	 Bytes: 5
  %loadMem1_421104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_421104 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_421104, i64 -131332, i64 5, i64 5)
  store %struct.Memory* %call1_421104, %struct.Memory** %MEMORY

  %loadMem2_421104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_421104 = load i64, i64* %3
  %call2_421104 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_421104, %struct.Memory* %loadMem2_421104)
  store %struct.Memory* %call2_421104, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 421109	 Bytes: 3
  %loadMem_421109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421109 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421109)
  store %struct.Memory* %call_421109, %struct.Memory** %MEMORY

  ; Code: jg .L_421263	 RIP: 42110c	 Bytes: 6
  %loadMem_42110c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42110c = call %struct.Memory* @routine_jg_.L_421263(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42110c, i8* %BRANCH_TAKEN, i64 343, i64 6, i64 6)
  store %struct.Memory* %call_42110c, %struct.Memory** %MEMORY

  %loadBr_42110c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42110c = icmp eq i8 %loadBr_42110c, 1
  br i1 %cmpBr_42110c, label %block_.L_421263, label %block_421112

block_421112:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 421112	 Bytes: 3
  %loadMem_421112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421112 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421112)
  store %struct.Memory* %call_421112, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 421115	 Bytes: 6
  %loadMem_421115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421115 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421115)
  store %struct.Memory* %call_421115, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 42111b	 Bytes: 2
  %loadMem_42111b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42111b = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42111b)
  store %struct.Memory* %call_42111b, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 42111d	 Bytes: 5
  %loadMem1_42111d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42111d = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42111d, i64 -131357, i64 5, i64 5)
  store %struct.Memory* %call1_42111d, %struct.Memory** %MEMORY

  %loadMem2_42111d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42111d = load i64, i64* %3
  %call2_42111d = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_42111d, %struct.Memory* %loadMem2_42111d)
  store %struct.Memory* %call2_42111d, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 421122	 Bytes: 3
  %loadMem_421122 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421122 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421122)
  store %struct.Memory* %call_421122, %struct.Memory** %MEMORY

  ; Code: jg .L_421263	 RIP: 421125	 Bytes: 6
  %loadMem_421125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421125 = call %struct.Memory* @routine_jg_.L_421263(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421125, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_421125, %struct.Memory** %MEMORY

  %loadBr_421125 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421125 = icmp eq i8 %loadBr_421125, 1
  br i1 %cmpBr_421125, label %block_.L_421263, label %block_42112b

block_42112b:
  ; Code: movq 0x6d32d0, %rax	 RIP: 42112b	 Bytes: 8
  %loadMem_42112b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42112b = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42112b)
  store %struct.Memory* %call_42112b, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 421133	 Bytes: 3
  %loadMem_421133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421133 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421133)
  store %struct.Memory* %call_421133, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 421136	 Bytes: 6
  %loadMem_421136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421136 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421136)
  store %struct.Memory* %call_421136, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 42113c	 Bytes: 3
  %loadMem_42113c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42113c = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42113c)
  store %struct.Memory* %call_42113c, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 42113f	 Bytes: 3
  %loadMem_42113f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42113f = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42113f)
  store %struct.Memory* %call_42113f, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 421142	 Bytes: 4
  %loadMem_421142 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421142 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421142)
  store %struct.Memory* %call_421142, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 421146	 Bytes: 3
  %loadMem_421146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421146 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421146)
  store %struct.Memory* %call_421146, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 421149	 Bytes: 6
  %loadMem_421149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421149 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421149)
  store %struct.Memory* %call_421149, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 42114f	 Bytes: 3
  %loadMem_42114f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42114f = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42114f)
  store %struct.Memory* %call_42114f, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 421152	 Bytes: 3
  %loadMem_421152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421152 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421152)
  store %struct.Memory* %call_421152, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 421155	 Bytes: 4
  %loadMem_421155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421155 = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421155)
  store %struct.Memory* %call_421155, %struct.Memory** %MEMORY

  ; Code: jne .L_42125e	 RIP: 421159	 Bytes: 6
  %loadMem_421159 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421159 = call %struct.Memory* @routine_jne_.L_42125e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421159, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_421159, %struct.Memory** %MEMORY

  %loadBr_421159 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421159 = icmp eq i8 %loadBr_421159, 1
  br i1 %cmpBr_421159, label %block_.L_42125e, label %block_42115f

block_42115f:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 42115f	 Bytes: 6
  %loadMem_42115f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42115f = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42115f)
  store %struct.Memory* %call_42115f, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 421165	 Bytes: 8
  %loadMem_421165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421165 = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421165)
  store %struct.Memory* %call_421165, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 42116d	 Bytes: 3
  %loadMem_42116d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42116d = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42116d)
  store %struct.Memory* %call_42116d, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 421170	 Bytes: 6
  %loadMem_421170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421170 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421170)
  store %struct.Memory* %call_421170, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x108(%rbp)	 RIP: 421176	 Bytes: 7
  %loadMem_421176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421176 = call %struct.Memory* @routine_movq__rcx__MINUS0x108__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421176)
  store %struct.Memory* %call_421176, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 42117d	 Bytes: 2
  %loadMem_42117d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42117d = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42117d)
  store %struct.Memory* %call_42117d, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 42117f	 Bytes: 2
  %loadMem_42117f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42117f = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42117f)
  store %struct.Memory* %call_42117f, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 421181	 Bytes: 6
  %loadMem_421181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421181 = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421181)
  store %struct.Memory* %call_421181, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 421187	 Bytes: 3
  %loadMem_421187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421187 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421187)
  store %struct.Memory* %call_421187, %struct.Memory** %MEMORY

  ; Code: movq -0x108(%rbp), %r8	 RIP: 42118a	 Bytes: 7
  %loadMem_42118a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42118a = call %struct.Memory* @routine_movq_MINUS0x108__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42118a)
  store %struct.Memory* %call_42118a, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 421191	 Bytes: 4
  %loadMem_421191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421191 = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421191)
  store %struct.Memory* %call_421191, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 421195	 Bytes: 8
  %loadMem_421195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421195 = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421195)
  store %struct.Memory* %call_421195, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 42119d	 Bytes: 3
  %loadMem_42119d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42119d = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42119d)
  store %struct.Memory* %call_42119d, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 4211a0	 Bytes: 6
  %loadMem_4211a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211a0 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211a0)
  store %struct.Memory* %call_4211a0, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 4211a6	 Bytes: 2
  %loadMem_4211a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211a6 = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211a6)
  store %struct.Memory* %call_4211a6, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 4211a8	 Bytes: 6
  %loadMem_4211a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211a8 = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211a8)
  store %struct.Memory* %call_4211a8, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 4211ae	 Bytes: 3
  %loadMem_4211ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211ae = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211ae)
  store %struct.Memory* %call_4211ae, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 4211b1	 Bytes: 4
  %loadMem_4211b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211b1 = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211b1)
  store %struct.Memory* %call_4211b1, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 4211b5	 Bytes: 3
  %loadMem_4211b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211b5 = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211b5)
  store %struct.Memory* %call_4211b5, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 4211b8	 Bytes: 3
  %loadMem_4211b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211b8 = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211b8)
  store %struct.Memory* %call_4211b8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 4211bb	 Bytes: 3
  %loadMem_4211bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211bb = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211bb)
  store %struct.Memory* %call_4211bb, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 4211be	 Bytes: 4
  %loadMem_4211be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211be = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211be)
  store %struct.Memory* %call_4211be, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 4211c2	 Bytes: 4
  %loadMem_4211c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211c2 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211c2)
  store %struct.Memory* %call_4211c2, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 4211c6	 Bytes: 4
  %loadMem_4211c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211c6 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211c6)
  store %struct.Memory* %call_4211c6, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 4211ca	 Bytes: 6
  %loadMem_4211ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211ca = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211ca)
  store %struct.Memory* %call_4211ca, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 4211d0	 Bytes: 7
  %loadMem_4211d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211d0 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211d0)
  store %struct.Memory* %call_4211d0, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 4211d7	 Bytes: 7
  %loadMem_4211d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211d7 = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211d7)
  store %struct.Memory* %call_4211d7, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 4211de	 Bytes: 3
  %loadMem_4211de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211de = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211de)
  store %struct.Memory* %call_4211de, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 4211e1	 Bytes: 4
  %loadMem_4211e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211e1 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211e1)
  store %struct.Memory* %call_4211e1, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 4211e5	 Bytes: 4
  %loadMem_4211e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211e5 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211e5)
  store %struct.Memory* %call_4211e5, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 4211e9	 Bytes: 3
  %loadMem_4211e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211e9 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211e9)
  store %struct.Memory* %call_4211e9, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 4211ec	 Bytes: 3
  %loadMem_4211ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211ec = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211ec)
  store %struct.Memory* %call_4211ec, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 4211ef	 Bytes: 5
  %loadMem_4211ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211ef = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211ef)
  store %struct.Memory* %call_4211ef, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 4211f4	 Bytes: 5
  %loadMem_4211f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211f4 = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211f4)
  store %struct.Memory* %call_4211f4, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 4211f9	 Bytes: 4
  %loadMem_4211f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4211f9 = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4211f9)
  store %struct.Memory* %call_4211f9, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 4211fd	 Bytes: 5
  %loadMem1_4211fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4211fd = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4211fd, i64 -3405, i64 5, i64 5)
  store %struct.Memory* %call1_4211fd, %struct.Memory** %MEMORY

  %loadMem2_4211fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4211fd = load i64, i64* %3
  %call2_4211fd = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_4211fd, %struct.Memory* %loadMem2_4211fd)
  store %struct.Memory* %call2_4211fd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 421202	 Bytes: 3
  %loadMem_421202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421202 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421202)
  store %struct.Memory* %call_421202, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421205	 Bytes: 3
  %loadMem_421205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421205 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421205)
  store %struct.Memory* %call_421205, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 421208	 Bytes: 8
  %loadMem_421208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421208 = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421208)
  store %struct.Memory* %call_421208, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 421210	 Bytes: 3
  %loadMem_421210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421210 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421210)
  store %struct.Memory* %call_421210, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 421213	 Bytes: 6
  %loadMem_421213 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421213 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421213)
  store %struct.Memory* %call_421213, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421219	 Bytes: 3
  %loadMem_421219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421219 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421219)
  store %struct.Memory* %call_421219, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 42121c	 Bytes: 3
  %loadMem_42121c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42121c = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42121c)
  store %struct.Memory* %call_42121c, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 42121f	 Bytes: 4
  %loadMem_42121f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42121f = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42121f)
  store %struct.Memory* %call_42121f, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 421223	 Bytes: 3
  %loadMem_421223 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421223 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421223)
  store %struct.Memory* %call_421223, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 421226	 Bytes: 6
  %loadMem_421226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421226 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421226)
  store %struct.Memory* %call_421226, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 42122c	 Bytes: 3
  %loadMem_42122c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42122c = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42122c)
  store %struct.Memory* %call_42122c, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 42122f	 Bytes: 3
  %loadMem_42122f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42122f = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42122f)
  store %struct.Memory* %call_42122f, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 421232	 Bytes: 3
  %loadMem_421232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421232 = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421232)
  store %struct.Memory* %call_421232, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421235	 Bytes: 3
  %loadMem_421235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421235 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421235)
  store %struct.Memory* %call_421235, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 421238	 Bytes: 3
  %loadMem_421238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421238 = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421238)
  store %struct.Memory* %call_421238, %struct.Memory** %MEMORY

  ; Code: jge .L_421259	 RIP: 42123b	 Bytes: 6
  %loadMem_42123b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42123b = call %struct.Memory* @routine_jge_.L_421259(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42123b, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42123b, %struct.Memory** %MEMORY

  %loadBr_42123b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42123b = icmp eq i8 %loadBr_42123b, 1
  br i1 %cmpBr_42123b, label %block_.L_421259, label %block_421241

block_421241:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 421241	 Bytes: 3
  %loadMem_421241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421241 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421241)
  store %struct.Memory* %call_421241, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 421244	 Bytes: 6
  %loadMem_421244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421244 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421244)
  store %struct.Memory* %call_421244, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 42124a	 Bytes: 3
  %loadMem_42124a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42124a = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42124a)
  store %struct.Memory* %call_42124a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 42124d	 Bytes: 6
  %loadMem_42124d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42124d = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42124d)
  store %struct.Memory* %call_42124d, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421253	 Bytes: 3
  %loadMem_421253 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421253 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421253)
  store %struct.Memory* %call_421253, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 421256	 Bytes: 3
  %loadMem_421256 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421256 = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421256)
  store %struct.Memory* %call_421256, %struct.Memory** %MEMORY

  ; Code: .L_421259:	 RIP: 421259	 Bytes: 0
  br label %block_.L_421259
block_.L_421259:

  ; Code: jmpq .L_42125e	 RIP: 421259	 Bytes: 5
  %loadMem_421259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421259 = call %struct.Memory* @routine_jmpq_.L_42125e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421259, i64 5, i64 5)
  store %struct.Memory* %call_421259, %struct.Memory** %MEMORY

  br label %block_.L_42125e

  ; Code: .L_42125e:	 RIP: 42125e	 Bytes: 0
block_.L_42125e:

  ; Code: jmpq .L_421263	 RIP: 42125e	 Bytes: 5
  %loadMem_42125e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42125e = call %struct.Memory* @routine_jmpq_.L_421263(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42125e, i64 5, i64 5)
  store %struct.Memory* %call_42125e, %struct.Memory** %MEMORY

  br label %block_.L_421263

  ; Code: .L_421263:	 RIP: 421263	 Bytes: 0
block_.L_421263:

  ; Code: jmpq .L_421268	 RIP: 421263	 Bytes: 5
  %loadMem_421263 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421263 = call %struct.Memory* @routine_jmpq_.L_421268(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421263, i64 5, i64 5)
  store %struct.Memory* %call_421263, %struct.Memory** %MEMORY

  br label %block_.L_421268

  ; Code: .L_421268:	 RIP: 421268	 Bytes: 0
block_.L_421268:

  ; Code: movl -0xc0(%rbp), %eax	 RIP: 421268	 Bytes: 6
  %loadMem_421268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421268 = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421268)
  store %struct.Memory* %call_421268, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42126e	 Bytes: 3
  %loadMem_42126e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42126e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42126e)
  store %struct.Memory* %call_42126e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc0(%rbp)	 RIP: 421271	 Bytes: 6
  %loadMem_421271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421271 = call %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421271)
  store %struct.Memory* %call_421271, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4210be	 RIP: 421277	 Bytes: 5
  %loadMem_421277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421277 = call %struct.Memory* @routine_jmpq_.L_4210be(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421277, i64 -441, i64 5)
  store %struct.Memory* %call_421277, %struct.Memory** %MEMORY

  br label %block_.L_4210be

  ; Code: .L_42127c:	 RIP: 42127c	 Bytes: 0
block_.L_42127c:

  ; Code: jmpq .L_421281	 RIP: 42127c	 Bytes: 5
  %loadMem_42127c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42127c = call %struct.Memory* @routine_jmpq_.L_421281(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42127c, i64 5, i64 5)
  store %struct.Memory* %call_42127c, %struct.Memory** %MEMORY

  br label %block_.L_421281

  ; Code: .L_421281:	 RIP: 421281	 Bytes: 0
block_.L_421281:

  ; Code: cmpl $0x1, -0x34(%rbp)	 RIP: 421281	 Bytes: 4
  %loadMem_421281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421281 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421281)
  store %struct.Memory* %call_421281, %struct.Memory** %MEMORY

  ; Code: jle .L_42149e	 RIP: 421285	 Bytes: 6
  %loadMem_421285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421285 = call %struct.Memory* @routine_jle_.L_42149e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421285, i8* %BRANCH_TAKEN, i64 537, i64 6, i64 6)
  store %struct.Memory* %call_421285, %struct.Memory** %MEMORY

  %loadBr_421285 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421285 = icmp eq i8 %loadBr_421285, 1
  br i1 %cmpBr_421285, label %block_.L_42149e, label %block_42128b

block_42128b:
  ; Code: movl $0x4, %eax	 RIP: 42128b	 Bytes: 5
  %loadMem_42128b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42128b = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42128b)
  store %struct.Memory* %call_42128b, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %ecx	 RIP: 421290	 Bytes: 3
  %loadMem_421290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421290 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421290)
  store %struct.Memory* %call_421290, %struct.Memory** %MEMORY

  ; Code: movl 0x6d1fa0, %edx	 RIP: 421293	 Bytes: 7
  %loadMem_421293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421293 = call %struct.Memory* @routine_movl_0x6d1fa0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421293)
  store %struct.Memory* %call_421293, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x10c(%rbp)	 RIP: 42129a	 Bytes: 6
  %loadMem_42129a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42129a = call %struct.Memory* @routine_movl__eax__MINUS0x10c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42129a)
  store %struct.Memory* %call_42129a, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4212a0	 Bytes: 2
  %loadMem_4212a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212a0 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212a0)
  store %struct.Memory* %call_4212a0, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4212a2	 Bytes: 1
  %loadMem_4212a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212a2 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212a2)
  store %struct.Memory* %call_4212a2, %struct.Memory** %MEMORY

  ; Code: movl -0x10c(%rbp), %esi	 RIP: 4212a3	 Bytes: 6
  %loadMem_4212a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212a3 = call %struct.Memory* @routine_movl_MINUS0x10c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212a3)
  store %struct.Memory* %call_4212a3, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4212a9	 Bytes: 2
  %loadMem_4212a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212a9 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212a9)
  store %struct.Memory* %call_4212a9, %struct.Memory** %MEMORY

  ; Code: addl %eax, %ecx	 RIP: 4212ab	 Bytes: 2
  %loadMem_4212ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212ab = call %struct.Memory* @routine_addl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212ab)
  store %struct.Memory* %call_4212ab, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x60(%rbp)	 RIP: 4212ad	 Bytes: 3
  %loadMem_4212ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212ad = call %struct.Memory* @routine_movl__ecx__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212ad)
  store %struct.Memory* %call_4212ad, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4212b0	 Bytes: 3
  %loadMem_4212b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212b0 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212b0)
  store %struct.Memory* %call_4212b0, %struct.Memory** %MEMORY

  ; Code: movl 0x6d1fa4, %ecx	 RIP: 4212b3	 Bytes: 7
  %loadMem_4212b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212b3 = call %struct.Memory* @routine_movl_0x6d1fa4___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212b3)
  store %struct.Memory* %call_4212b3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x110(%rbp)	 RIP: 4212ba	 Bytes: 6
  %loadMem_4212ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212ba = call %struct.Memory* @routine_movl__eax__MINUS0x110__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212ba)
  store %struct.Memory* %call_4212ba, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 4212c0	 Bytes: 2
  %loadMem_4212c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212c0 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212c0)
  store %struct.Memory* %call_4212c0, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4212c2	 Bytes: 1
  %loadMem_4212c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212c2 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212c2)
  store %struct.Memory* %call_4212c2, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4212c3	 Bytes: 2
  %loadMem_4212c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212c3 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212c3)
  store %struct.Memory* %call_4212c3, %struct.Memory** %MEMORY

  ; Code: movl -0x110(%rbp), %ecx	 RIP: 4212c5	 Bytes: 6
  %loadMem_4212c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212c5 = call %struct.Memory* @routine_movl_MINUS0x110__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212c5)
  store %struct.Memory* %call_4212c5, %struct.Memory** %MEMORY

  ; Code: addl %eax, %ecx	 RIP: 4212cb	 Bytes: 2
  %loadMem_4212cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212cb = call %struct.Memory* @routine_addl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212cb)
  store %struct.Memory* %call_4212cb, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x64(%rbp)	 RIP: 4212cd	 Bytes: 3
  %loadMem_4212cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212cd = call %struct.Memory* @routine_movl__ecx__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212cd)
  store %struct.Memory* %call_4212cd, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 4212d0	 Bytes: 3
  %loadMem_4212d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212d0 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212d0)
  store %struct.Memory* %call_4212d0, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 4212d3	 Bytes: 6
  %loadMem_4212d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212d3 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212d3)
  store %struct.Memory* %call_4212d3, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 4212d9	 Bytes: 2
  %loadMem_4212d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212d9 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212d9)
  store %struct.Memory* %call_4212d9, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 4212db	 Bytes: 5
  %loadMem1_4212db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4212db = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4212db, i64 -131803, i64 5, i64 5)
  store %struct.Memory* %call1_4212db, %struct.Memory** %MEMORY

  %loadMem2_4212db = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4212db = load i64, i64* %3
  %call2_4212db = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_4212db, %struct.Memory* %loadMem2_4212db)
  store %struct.Memory* %call2_4212db, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 4212e0	 Bytes: 3
  %loadMem_4212e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212e0 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212e0)
  store %struct.Memory* %call_4212e0, %struct.Memory** %MEMORY

  ; Code: jg .L_42143a	 RIP: 4212e3	 Bytes: 6
  %loadMem_4212e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212e3 = call %struct.Memory* @routine_jg_.L_42143a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212e3, i8* %BRANCH_TAKEN, i64 343, i64 6, i64 6)
  store %struct.Memory* %call_4212e3, %struct.Memory** %MEMORY

  %loadBr_4212e3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4212e3 = icmp eq i8 %loadBr_4212e3, 1
  br i1 %cmpBr_4212e3, label %block_.L_42143a, label %block_4212e9

block_4212e9:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 4212e9	 Bytes: 3
  %loadMem_4212e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212e9 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212e9)
  store %struct.Memory* %call_4212e9, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 4212ec	 Bytes: 6
  %loadMem_4212ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212ec = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212ec)
  store %struct.Memory* %call_4212ec, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 4212f2	 Bytes: 2
  %loadMem_4212f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212f2 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212f2)
  store %struct.Memory* %call_4212f2, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 4212f4	 Bytes: 5
  %loadMem1_4212f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4212f4 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4212f4, i64 -131828, i64 5, i64 5)
  store %struct.Memory* %call1_4212f4, %struct.Memory** %MEMORY

  %loadMem2_4212f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4212f4 = load i64, i64* %3
  %call2_4212f4 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_4212f4, %struct.Memory* %loadMem2_4212f4)
  store %struct.Memory* %call2_4212f4, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 4212f9	 Bytes: 3
  %loadMem_4212f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212f9 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212f9)
  store %struct.Memory* %call_4212f9, %struct.Memory** %MEMORY

  ; Code: jg .L_42143a	 RIP: 4212fc	 Bytes: 6
  %loadMem_4212fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4212fc = call %struct.Memory* @routine_jg_.L_42143a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4212fc, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_4212fc, %struct.Memory** %MEMORY

  %loadBr_4212fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4212fc = icmp eq i8 %loadBr_4212fc, 1
  br i1 %cmpBr_4212fc, label %block_.L_42143a, label %block_421302

block_421302:
  ; Code: movq 0x6d32d0, %rax	 RIP: 421302	 Bytes: 8
  %loadMem_421302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421302 = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421302)
  store %struct.Memory* %call_421302, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 42130a	 Bytes: 3
  %loadMem_42130a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42130a = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42130a)
  store %struct.Memory* %call_42130a, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 42130d	 Bytes: 6
  %loadMem_42130d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42130d = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42130d)
  store %struct.Memory* %call_42130d, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421313	 Bytes: 3
  %loadMem_421313 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421313 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421313)
  store %struct.Memory* %call_421313, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 421316	 Bytes: 3
  %loadMem_421316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421316 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421316)
  store %struct.Memory* %call_421316, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 421319	 Bytes: 4
  %loadMem_421319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421319 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421319)
  store %struct.Memory* %call_421319, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 42131d	 Bytes: 3
  %loadMem_42131d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42131d = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42131d)
  store %struct.Memory* %call_42131d, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 421320	 Bytes: 6
  %loadMem_421320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421320 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421320)
  store %struct.Memory* %call_421320, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421326	 Bytes: 3
  %loadMem_421326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421326 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421326)
  store %struct.Memory* %call_421326, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 421329	 Bytes: 3
  %loadMem_421329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421329 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421329)
  store %struct.Memory* %call_421329, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 42132c	 Bytes: 4
  %loadMem_42132c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42132c = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42132c)
  store %struct.Memory* %call_42132c, %struct.Memory** %MEMORY

  ; Code: jne .L_421435	 RIP: 421330	 Bytes: 6
  %loadMem_421330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421330 = call %struct.Memory* @routine_jne_.L_421435(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421330, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_421330, %struct.Memory** %MEMORY

  %loadBr_421330 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421330 = icmp eq i8 %loadBr_421330, 1
  br i1 %cmpBr_421330, label %block_.L_421435, label %block_421336

block_421336:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 421336	 Bytes: 6
  %loadMem_421336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421336 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421336)
  store %struct.Memory* %call_421336, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 42133c	 Bytes: 8
  %loadMem_42133c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42133c = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42133c)
  store %struct.Memory* %call_42133c, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 421344	 Bytes: 3
  %loadMem_421344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421344 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421344)
  store %struct.Memory* %call_421344, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 421347	 Bytes: 6
  %loadMem_421347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421347 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421347)
  store %struct.Memory* %call_421347, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x118(%rbp)	 RIP: 42134d	 Bytes: 7
  %loadMem_42134d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42134d = call %struct.Memory* @routine_movq__rcx__MINUS0x118__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42134d)
  store %struct.Memory* %call_42134d, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 421354	 Bytes: 2
  %loadMem_421354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421354 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421354)
  store %struct.Memory* %call_421354, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 421356	 Bytes: 2
  %loadMem_421356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421356 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421356)
  store %struct.Memory* %call_421356, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 421358	 Bytes: 6
  %loadMem_421358 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421358 = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421358)
  store %struct.Memory* %call_421358, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 42135e	 Bytes: 3
  %loadMem_42135e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42135e = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42135e)
  store %struct.Memory* %call_42135e, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %r8	 RIP: 421361	 Bytes: 7
  %loadMem_421361 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421361 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421361)
  store %struct.Memory* %call_421361, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 421368	 Bytes: 4
  %loadMem_421368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421368 = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421368)
  store %struct.Memory* %call_421368, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 42136c	 Bytes: 8
  %loadMem_42136c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42136c = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42136c)
  store %struct.Memory* %call_42136c, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 421374	 Bytes: 3
  %loadMem_421374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421374 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421374)
  store %struct.Memory* %call_421374, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 421377	 Bytes: 6
  %loadMem_421377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421377 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421377)
  store %struct.Memory* %call_421377, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 42137d	 Bytes: 2
  %loadMem_42137d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42137d = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42137d)
  store %struct.Memory* %call_42137d, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 42137f	 Bytes: 6
  %loadMem_42137f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42137f = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42137f)
  store %struct.Memory* %call_42137f, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 421385	 Bytes: 3
  %loadMem_421385 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421385 = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421385)
  store %struct.Memory* %call_421385, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 421388	 Bytes: 4
  %loadMem_421388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421388 = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421388)
  store %struct.Memory* %call_421388, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 42138c	 Bytes: 3
  %loadMem_42138c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42138c = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42138c)
  store %struct.Memory* %call_42138c, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 42138f	 Bytes: 3
  %loadMem_42138f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42138f = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42138f)
  store %struct.Memory* %call_42138f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 421392	 Bytes: 3
  %loadMem_421392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421392 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421392)
  store %struct.Memory* %call_421392, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 421395	 Bytes: 4
  %loadMem_421395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421395 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421395)
  store %struct.Memory* %call_421395, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 421399	 Bytes: 4
  %loadMem_421399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421399 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421399)
  store %struct.Memory* %call_421399, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 42139d	 Bytes: 4
  %loadMem_42139d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42139d = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42139d)
  store %struct.Memory* %call_42139d, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 4213a1	 Bytes: 6
  %loadMem_4213a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213a1 = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213a1)
  store %struct.Memory* %call_4213a1, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 4213a7	 Bytes: 7
  %loadMem_4213a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213a7 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213a7)
  store %struct.Memory* %call_4213a7, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 4213ae	 Bytes: 7
  %loadMem_4213ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213ae = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213ae)
  store %struct.Memory* %call_4213ae, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 4213b5	 Bytes: 3
  %loadMem_4213b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213b5 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213b5)
  store %struct.Memory* %call_4213b5, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 4213b8	 Bytes: 4
  %loadMem_4213b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213b8 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213b8)
  store %struct.Memory* %call_4213b8, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 4213bc	 Bytes: 4
  %loadMem_4213bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213bc = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213bc)
  store %struct.Memory* %call_4213bc, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 4213c0	 Bytes: 3
  %loadMem_4213c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213c0 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213c0)
  store %struct.Memory* %call_4213c0, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 4213c3	 Bytes: 3
  %loadMem_4213c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213c3 = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213c3)
  store %struct.Memory* %call_4213c3, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 4213c6	 Bytes: 5
  %loadMem_4213c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213c6 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213c6)
  store %struct.Memory* %call_4213c6, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 4213cb	 Bytes: 5
  %loadMem_4213cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213cb = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213cb)
  store %struct.Memory* %call_4213cb, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 4213d0	 Bytes: 4
  %loadMem_4213d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213d0 = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213d0)
  store %struct.Memory* %call_4213d0, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 4213d4	 Bytes: 5
  %loadMem1_4213d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4213d4 = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4213d4, i64 -3876, i64 5, i64 5)
  store %struct.Memory* %call1_4213d4, %struct.Memory** %MEMORY

  %loadMem2_4213d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4213d4 = load i64, i64* %3
  %call2_4213d4 = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_4213d4, %struct.Memory* %loadMem2_4213d4)
  store %struct.Memory* %call2_4213d4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 4213d9	 Bytes: 3
  %loadMem_4213d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213d9 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213d9)
  store %struct.Memory* %call_4213d9, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 4213dc	 Bytes: 3
  %loadMem_4213dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213dc = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213dc)
  store %struct.Memory* %call_4213dc, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 4213df	 Bytes: 8
  %loadMem_4213df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213df = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213df)
  store %struct.Memory* %call_4213df, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 4213e7	 Bytes: 3
  %loadMem_4213e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213e7 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213e7)
  store %struct.Memory* %call_4213e7, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 4213ea	 Bytes: 6
  %loadMem_4213ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213ea = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213ea)
  store %struct.Memory* %call_4213ea, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 4213f0	 Bytes: 3
  %loadMem_4213f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213f0 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213f0)
  store %struct.Memory* %call_4213f0, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 4213f3	 Bytes: 3
  %loadMem_4213f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213f3 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213f3)
  store %struct.Memory* %call_4213f3, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 4213f6	 Bytes: 4
  %loadMem_4213f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213f6 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213f6)
  store %struct.Memory* %call_4213f6, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 4213fa	 Bytes: 3
  %loadMem_4213fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213fa = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213fa)
  store %struct.Memory* %call_4213fa, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 4213fd	 Bytes: 6
  %loadMem_4213fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4213fd = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4213fd)
  store %struct.Memory* %call_4213fd, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421403	 Bytes: 3
  %loadMem_421403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421403 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421403)
  store %struct.Memory* %call_421403, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 421406	 Bytes: 3
  %loadMem_421406 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421406 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421406)
  store %struct.Memory* %call_421406, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 421409	 Bytes: 3
  %loadMem_421409 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421409 = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421409)
  store %struct.Memory* %call_421409, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42140c	 Bytes: 3
  %loadMem_42140c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42140c = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42140c)
  store %struct.Memory* %call_42140c, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 42140f	 Bytes: 3
  %loadMem_42140f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42140f = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42140f)
  store %struct.Memory* %call_42140f, %struct.Memory** %MEMORY

  ; Code: jge .L_421430	 RIP: 421412	 Bytes: 6
  %loadMem_421412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421412 = call %struct.Memory* @routine_jge_.L_421430(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421412, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_421412, %struct.Memory** %MEMORY

  %loadBr_421412 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421412 = icmp eq i8 %loadBr_421412, 1
  br i1 %cmpBr_421412, label %block_.L_421430, label %block_421418

block_421418:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 421418	 Bytes: 3
  %loadMem_421418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421418 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421418)
  store %struct.Memory* %call_421418, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 42141b	 Bytes: 6
  %loadMem_42141b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42141b = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42141b)
  store %struct.Memory* %call_42141b, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 421421	 Bytes: 3
  %loadMem_421421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421421 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421421)
  store %struct.Memory* %call_421421, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 421424	 Bytes: 6
  %loadMem_421424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421424 = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421424)
  store %struct.Memory* %call_421424, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42142a	 Bytes: 3
  %loadMem_42142a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42142a = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42142a)
  store %struct.Memory* %call_42142a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 42142d	 Bytes: 3
  %loadMem_42142d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42142d = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42142d)
  store %struct.Memory* %call_42142d, %struct.Memory** %MEMORY

  ; Code: .L_421430:	 RIP: 421430	 Bytes: 0
  br label %block_.L_421430
block_.L_421430:

  ; Code: jmpq .L_421435	 RIP: 421430	 Bytes: 5
  %loadMem_421430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421430 = call %struct.Memory* @routine_jmpq_.L_421435(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421430, i64 5, i64 5)
  store %struct.Memory* %call_421430, %struct.Memory** %MEMORY

  br label %block_.L_421435

  ; Code: .L_421435:	 RIP: 421435	 Bytes: 0
block_.L_421435:

  ; Code: jmpq .L_42143a	 RIP: 421435	 Bytes: 5
  %loadMem_421435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421435 = call %struct.Memory* @routine_jmpq_.L_42143a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421435, i64 5, i64 5)
  store %struct.Memory* %call_421435, %struct.Memory** %MEMORY

  br label %block_.L_42143a

  ; Code: .L_42143a:	 RIP: 42143a	 Bytes: 0
block_.L_42143a:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 42143a	 Bytes: 3
  %loadMem_42143a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42143a = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42143a)
  store %struct.Memory* %call_42143a, %struct.Memory** %MEMORY

  ; Code: subl 0x72369c, %eax	 RIP: 42143d	 Bytes: 7
  %loadMem_42143d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42143d = call %struct.Memory* @routine_subl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42143d)
  store %struct.Memory* %call_42143d, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 421444	 Bytes: 4
  %loadMem_421444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421444 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421444)
  store %struct.Memory* %call_421444, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x72369c, %xmm1	 RIP: 421448	 Bytes: 9
  %loadMem_421448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421448 = call %struct.Memory* @routine_cvtsi2ssl_0x72369c___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421448)
  store %struct.Memory* %call_421448, %struct.Memory** %MEMORY

  ; Code: mulss -0xd4(%rbp), %xmm1	 RIP: 421451	 Bytes: 8
  %loadMem_421451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421451 = call %struct.Memory* @routine_mulss_MINUS0xd4__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421451)
  store %struct.Memory* %call_421451, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 421459	 Bytes: 3
  %loadMem_421459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421459 = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421459)
  store %struct.Memory* %call_421459, %struct.Memory** %MEMORY

  ; Code: jbe .L_421467	 RIP: 42145c	 Bytes: 6
  %loadMem_42145c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42145c = call %struct.Memory* @routine_jbe_.L_421467(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42145c, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_42145c, %struct.Memory** %MEMORY

  %loadBr_42145c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42145c = icmp eq i8 %loadBr_42145c, 1
  br i1 %cmpBr_42145c, label %block_.L_421467, label %block_421462

block_421462:
  ; Code: jmpq .L_422f0e	 RIP: 421462	 Bytes: 5
  %loadMem_421462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421462 = call %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421462, i64 6828, i64 5)
  store %struct.Memory* %call_421462, %struct.Memory** %MEMORY

  br label %block_.L_422f0e

  ; Code: .L_421467:	 RIP: 421467	 Bytes: 0
block_.L_421467:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 421467	 Bytes: 3
  %loadMem_421467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421467 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421467)
  store %struct.Memory* %call_421467, %struct.Memory** %MEMORY

  ; Code: subl 0x72369c, %eax	 RIP: 42146a	 Bytes: 7
  %loadMem_42146a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42146a = call %struct.Memory* @routine_subl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42146a)
  store %struct.Memory* %call_42146a, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 421471	 Bytes: 4
  %loadMem_421471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421471 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421471)
  store %struct.Memory* %call_421471, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x72369c, %xmm1	 RIP: 421475	 Bytes: 9
  %loadMem_421475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421475 = call %struct.Memory* @routine_cvtsi2ssl_0x72369c___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421475)
  store %struct.Memory* %call_421475, %struct.Memory** %MEMORY

  ; Code: mulss -0xd0(%rbp), %xmm1	 RIP: 42147e	 Bytes: 8
  %loadMem_42147e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42147e = call %struct.Memory* @routine_mulss_MINUS0xd0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42147e)
  store %struct.Memory* %call_42147e, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 421486	 Bytes: 3
  %loadMem_421486 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421486 = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421486)
  store %struct.Memory* %call_421486, %struct.Memory** %MEMORY

  ; Code: jbe .L_421494	 RIP: 421489	 Bytes: 6
  %loadMem_421489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421489 = call %struct.Memory* @routine_jbe_.L_421494(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421489, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_421489, %struct.Memory** %MEMORY

  %loadBr_421489 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421489 = icmp eq i8 %loadBr_421489, 1
  br i1 %cmpBr_421489, label %block_.L_421494, label %block_42148f

block_42148f:
  ; Code: jmpq .L_422cbe	 RIP: 42148f	 Bytes: 5
  %loadMem_42148f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42148f = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42148f, i64 6191, i64 5)
  store %struct.Memory* %call_42148f, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_421494:	 RIP: 421494	 Bytes: 0
block_.L_421494:

  ; Code: jmpq .L_421499	 RIP: 421494	 Bytes: 5
  %loadMem_421494 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421494 = call %struct.Memory* @routine_jmpq_.L_421499(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421494, i64 5, i64 5)
  store %struct.Memory* %call_421494, %struct.Memory** %MEMORY

  br label %block_.L_421499

  ; Code: .L_421499:	 RIP: 421499	 Bytes: 0
block_.L_421499:

  ; Code: jmpq .L_42149e	 RIP: 421499	 Bytes: 5
  %loadMem_421499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421499 = call %struct.Memory* @routine_jmpq_.L_42149e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421499, i64 5, i64 5)
  store %struct.Memory* %call_421499, %struct.Memory** %MEMORY

  br label %block_.L_42149e

  ; Code: .L_42149e:	 RIP: 42149e	 Bytes: 0
block_.L_42149e:

  ; Code: movq 0x6cb900, %rax	 RIP: 42149e	 Bytes: 8
  %loadMem_42149e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42149e = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42149e)
  store %struct.Memory* %call_42149e, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %ecx	 RIP: 4214a6	 Bytes: 2
  %loadMem_4214a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214a6 = call %struct.Memory* @routine_movl___rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214a6)
  store %struct.Memory* %call_4214a6, %struct.Memory** %MEMORY

  ; Code: movswl -0x22(%rbp), %edx	 RIP: 4214a8	 Bytes: 4
  %loadMem_4214a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214a8 = call %struct.Memory* @routine_movswl_MINUS0x22__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214a8)
  store %struct.Memory* %call_4214a8, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 4214ac	 Bytes: 3
  %loadMem_4214ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214ac = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214ac)
  store %struct.Memory* %call_4214ac, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 4214af	 Bytes: 2
  %loadMem_4214af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214af = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214af)
  store %struct.Memory* %call_4214af, %struct.Memory** %MEMORY

  ; Code: jle .L_4214c4	 RIP: 4214b1	 Bytes: 6
  %loadMem_4214b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214b1 = call %struct.Memory* @routine_jle_.L_4214c4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214b1, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4214b1, %struct.Memory** %MEMORY

  %loadBr_4214b1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4214b1 = icmp eq i8 %loadBr_4214b1, 1
  br i1 %cmpBr_4214b1, label %block_.L_4214c4, label %block_4214b7

block_4214b7:
  ; Code: movswl -0x22(%rbp), %eax	 RIP: 4214b7	 Bytes: 4
  %loadMem_4214b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214b7 = call %struct.Memory* @routine_movswl_MINUS0x22__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214b7)
  store %struct.Memory* %call_4214b7, %struct.Memory** %MEMORY

  ; Code: cmpl $0xffffffff, %eax	 RIP: 4214bb	 Bytes: 3
  %loadMem_4214bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214bb = call %struct.Memory* @routine_cmpl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214bb)
  store %struct.Memory* %call_4214bb, %struct.Memory** %MEMORY

  ; Code: jne .L_4214e5	 RIP: 4214be	 Bytes: 6
  %loadMem_4214be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214be = call %struct.Memory* @routine_jne_.L_4214e5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214be, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_4214be, %struct.Memory** %MEMORY

  %loadBr_4214be = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4214be = icmp eq i8 %loadBr_4214be, 1
  br i1 %cmpBr_4214be, label %block_.L_4214e5, label %block_.L_4214c4

  ; Code: .L_4214c4:	 RIP: 4214c4	 Bytes: 0
block_.L_4214c4:

  ; Code: cmpl $0x1, -0x28(%rbp)	 RIP: 4214c4	 Bytes: 4
  %loadMem_4214c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214c4 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214c4)
  store %struct.Memory* %call_4214c4, %struct.Memory** %MEMORY

  ; Code: jne .L_421699	 RIP: 4214c8	 Bytes: 6
  %loadMem_4214c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214c8 = call %struct.Memory* @routine_jne_.L_421699(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214c8, i8* %BRANCH_TAKEN, i64 465, i64 6, i64 6)
  store %struct.Memory* %call_4214c8, %struct.Memory** %MEMORY

  %loadBr_4214c8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4214c8 = icmp eq i8 %loadBr_4214c8, 1
  br i1 %cmpBr_4214c8, label %block_.L_421699, label %block_4214ce

block_4214ce:
  ; Code: movl 0x722ca8, %eax	 RIP: 4214ce	 Bytes: 7
  %loadMem_4214ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214ce = call %struct.Memory* @routine_movl_0x722ca8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214ce)
  store %struct.Memory* %call_4214ce, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4214d5	 Bytes: 1
  %loadMem_4214d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214d5 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214d5)
  store %struct.Memory* %call_4214d5, %struct.Memory** %MEMORY

  ; Code: idivl -0xcc(%rbp)	 RIP: 4214d6	 Bytes: 6
  %loadMem_4214d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214d6 = call %struct.Memory* @routine_idivl_MINUS0xcc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214d6)
  store %struct.Memory* %call_4214d6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %edx	 RIP: 4214dc	 Bytes: 3
  %loadMem_4214dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214dc = call %struct.Memory* @routine_cmpl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214dc)
  store %struct.Memory* %call_4214dc, %struct.Memory** %MEMORY

  ; Code: jle .L_421699	 RIP: 4214df	 Bytes: 6
  %loadMem_4214df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214df = call %struct.Memory* @routine_jle_.L_421699(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214df, i8* %BRANCH_TAKEN, i64 442, i64 6, i64 6)
  store %struct.Memory* %call_4214df, %struct.Memory** %MEMORY

  %loadBr_4214df = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4214df = icmp eq i8 %loadBr_4214df, 1
  br i1 %cmpBr_4214df, label %block_.L_421699, label %block_.L_4214e5

  ; Code: .L_4214e5:	 RIP: 4214e5	 Bytes: 0
block_.L_4214e5:

  ; Code: movl $0x4, %eax	 RIP: 4214e5	 Bytes: 5
  %loadMem_4214e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214e5 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214e5)
  store %struct.Memory* %call_4214e5, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %ecx	 RIP: 4214ea	 Bytes: 3
  %loadMem_4214ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214ea = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214ea)
  store %struct.Memory* %call_4214ea, %struct.Memory** %MEMORY

  ; Code: movl 0x70fd54, %edx	 RIP: 4214ed	 Bytes: 7
  %loadMem_4214ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214ed = call %struct.Memory* @routine_movl_0x70fd54___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214ed)
  store %struct.Memory* %call_4214ed, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x11c(%rbp)	 RIP: 4214f4	 Bytes: 6
  %loadMem_4214f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214f4 = call %struct.Memory* @routine_movl__eax__MINUS0x11c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214f4)
  store %struct.Memory* %call_4214f4, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4214fa	 Bytes: 2
  %loadMem_4214fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214fa = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214fa)
  store %struct.Memory* %call_4214fa, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4214fc	 Bytes: 1
  %loadMem_4214fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214fc = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214fc)
  store %struct.Memory* %call_4214fc, %struct.Memory** %MEMORY

  ; Code: movl -0x11c(%rbp), %esi	 RIP: 4214fd	 Bytes: 6
  %loadMem_4214fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4214fd = call %struct.Memory* @routine_movl_MINUS0x11c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4214fd)
  store %struct.Memory* %call_4214fd, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 421503	 Bytes: 2
  %loadMem_421503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421503 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421503)
  store %struct.Memory* %call_421503, %struct.Memory** %MEMORY

  ; Code: addl %eax, %ecx	 RIP: 421505	 Bytes: 2
  %loadMem_421505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421505 = call %struct.Memory* @routine_addl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421505)
  store %struct.Memory* %call_421505, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x60(%rbp)	 RIP: 421507	 Bytes: 3
  %loadMem_421507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421507 = call %struct.Memory* @routine_movl__ecx__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421507)
  store %struct.Memory* %call_421507, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %eax	 RIP: 42150a	 Bytes: 3
  %loadMem_42150a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42150a = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42150a)
  store %struct.Memory* %call_42150a, %struct.Memory** %MEMORY

  ; Code: movl 0x70fd58, %ecx	 RIP: 42150d	 Bytes: 7
  %loadMem_42150d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42150d = call %struct.Memory* @routine_movl_0x70fd58___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42150d)
  store %struct.Memory* %call_42150d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x120(%rbp)	 RIP: 421514	 Bytes: 6
  %loadMem_421514 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421514 = call %struct.Memory* @routine_movl__eax__MINUS0x120__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421514)
  store %struct.Memory* %call_421514, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 42151a	 Bytes: 2
  %loadMem_42151a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42151a = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42151a)
  store %struct.Memory* %call_42151a, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42151c	 Bytes: 1
  %loadMem_42151c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42151c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42151c)
  store %struct.Memory* %call_42151c, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 42151d	 Bytes: 2
  %loadMem_42151d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42151d = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42151d)
  store %struct.Memory* %call_42151d, %struct.Memory** %MEMORY

  ; Code: movl -0x120(%rbp), %ecx	 RIP: 42151f	 Bytes: 6
  %loadMem_42151f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42151f = call %struct.Memory* @routine_movl_MINUS0x120__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42151f)
  store %struct.Memory* %call_42151f, %struct.Memory** %MEMORY

  ; Code: addl %eax, %ecx	 RIP: 421525	 Bytes: 2
  %loadMem_421525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421525 = call %struct.Memory* @routine_addl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421525)
  store %struct.Memory* %call_421525, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x64(%rbp)	 RIP: 421527	 Bytes: 3
  %loadMem_421527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421527 = call %struct.Memory* @routine_movl__ecx__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421527)
  store %struct.Memory* %call_421527, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 42152a	 Bytes: 3
  %loadMem_42152a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42152a = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42152a)
  store %struct.Memory* %call_42152a, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 42152d	 Bytes: 6
  %loadMem_42152d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42152d = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42152d)
  store %struct.Memory* %call_42152d, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 421533	 Bytes: 2
  %loadMem_421533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421533 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421533)
  store %struct.Memory* %call_421533, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 421535	 Bytes: 5
  %loadMem1_421535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_421535 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_421535, i64 -132405, i64 5, i64 5)
  store %struct.Memory* %call1_421535, %struct.Memory** %MEMORY

  %loadMem2_421535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_421535 = load i64, i64* %3
  %call2_421535 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_421535, %struct.Memory* %loadMem2_421535)
  store %struct.Memory* %call2_421535, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 42153a	 Bytes: 3
  %loadMem_42153a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42153a = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42153a)
  store %struct.Memory* %call_42153a, %struct.Memory** %MEMORY

  ; Code: jg .L_421694	 RIP: 42153d	 Bytes: 6
  %loadMem_42153d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42153d = call %struct.Memory* @routine_jg_.L_421694(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42153d, i8* %BRANCH_TAKEN, i64 343, i64 6, i64 6)
  store %struct.Memory* %call_42153d, %struct.Memory** %MEMORY

  %loadBr_42153d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42153d = icmp eq i8 %loadBr_42153d, 1
  br i1 %cmpBr_42153d, label %block_.L_421694, label %block_421543

block_421543:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 421543	 Bytes: 3
  %loadMem_421543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421543 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421543)
  store %struct.Memory* %call_421543, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 421546	 Bytes: 6
  %loadMem_421546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421546 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421546)
  store %struct.Memory* %call_421546, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 42154c	 Bytes: 2
  %loadMem_42154c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42154c = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42154c)
  store %struct.Memory* %call_42154c, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 42154e	 Bytes: 5
  %loadMem1_42154e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42154e = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42154e, i64 -132430, i64 5, i64 5)
  store %struct.Memory* %call1_42154e, %struct.Memory** %MEMORY

  %loadMem2_42154e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42154e = load i64, i64* %3
  %call2_42154e = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_42154e, %struct.Memory* %loadMem2_42154e)
  store %struct.Memory* %call2_42154e, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 421553	 Bytes: 3
  %loadMem_421553 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421553 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421553)
  store %struct.Memory* %call_421553, %struct.Memory** %MEMORY

  ; Code: jg .L_421694	 RIP: 421556	 Bytes: 6
  %loadMem_421556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421556 = call %struct.Memory* @routine_jg_.L_421694(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421556, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_421556, %struct.Memory** %MEMORY

  %loadBr_421556 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421556 = icmp eq i8 %loadBr_421556, 1
  br i1 %cmpBr_421556, label %block_.L_421694, label %block_42155c

block_42155c:
  ; Code: movq 0x6d32d0, %rax	 RIP: 42155c	 Bytes: 8
  %loadMem_42155c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42155c = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42155c)
  store %struct.Memory* %call_42155c, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 421564	 Bytes: 3
  %loadMem_421564 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421564 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421564)
  store %struct.Memory* %call_421564, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 421567	 Bytes: 6
  %loadMem_421567 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421567 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421567)
  store %struct.Memory* %call_421567, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 42156d	 Bytes: 3
  %loadMem_42156d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42156d = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42156d)
  store %struct.Memory* %call_42156d, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 421570	 Bytes: 3
  %loadMem_421570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421570 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421570)
  store %struct.Memory* %call_421570, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 421573	 Bytes: 4
  %loadMem_421573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421573 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421573)
  store %struct.Memory* %call_421573, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 421577	 Bytes: 3
  %loadMem_421577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421577 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421577)
  store %struct.Memory* %call_421577, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 42157a	 Bytes: 6
  %loadMem_42157a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42157a = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42157a)
  store %struct.Memory* %call_42157a, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421580	 Bytes: 3
  %loadMem_421580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421580 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421580)
  store %struct.Memory* %call_421580, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 421583	 Bytes: 3
  %loadMem_421583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421583 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421583)
  store %struct.Memory* %call_421583, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 421586	 Bytes: 4
  %loadMem_421586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421586 = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421586)
  store %struct.Memory* %call_421586, %struct.Memory** %MEMORY

  ; Code: jne .L_42168f	 RIP: 42158a	 Bytes: 6
  %loadMem_42158a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42158a = call %struct.Memory* @routine_jne_.L_42168f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42158a, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_42158a, %struct.Memory** %MEMORY

  %loadBr_42158a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42158a = icmp eq i8 %loadBr_42158a, 1
  br i1 %cmpBr_42158a, label %block_.L_42168f, label %block_421590

block_421590:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 421590	 Bytes: 6
  %loadMem_421590 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421590 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421590)
  store %struct.Memory* %call_421590, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 421596	 Bytes: 8
  %loadMem_421596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421596 = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421596)
  store %struct.Memory* %call_421596, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 42159e	 Bytes: 3
  %loadMem_42159e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42159e = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42159e)
  store %struct.Memory* %call_42159e, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 4215a1	 Bytes: 6
  %loadMem_4215a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215a1 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215a1)
  store %struct.Memory* %call_4215a1, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x128(%rbp)	 RIP: 4215a7	 Bytes: 7
  %loadMem_4215a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215a7 = call %struct.Memory* @routine_movq__rcx__MINUS0x128__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215a7)
  store %struct.Memory* %call_4215a7, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 4215ae	 Bytes: 2
  %loadMem_4215ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215ae = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215ae)
  store %struct.Memory* %call_4215ae, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 4215b0	 Bytes: 2
  %loadMem_4215b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215b0 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215b0)
  store %struct.Memory* %call_4215b0, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 4215b2	 Bytes: 6
  %loadMem_4215b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215b2 = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215b2)
  store %struct.Memory* %call_4215b2, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 4215b8	 Bytes: 3
  %loadMem_4215b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215b8 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215b8)
  store %struct.Memory* %call_4215b8, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %r8	 RIP: 4215bb	 Bytes: 7
  %loadMem_4215bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215bb = call %struct.Memory* @routine_movq_MINUS0x128__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215bb)
  store %struct.Memory* %call_4215bb, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 4215c2	 Bytes: 4
  %loadMem_4215c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215c2 = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215c2)
  store %struct.Memory* %call_4215c2, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 4215c6	 Bytes: 8
  %loadMem_4215c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215c6 = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215c6)
  store %struct.Memory* %call_4215c6, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 4215ce	 Bytes: 3
  %loadMem_4215ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215ce = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215ce)
  store %struct.Memory* %call_4215ce, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 4215d1	 Bytes: 6
  %loadMem_4215d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215d1 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215d1)
  store %struct.Memory* %call_4215d1, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 4215d7	 Bytes: 2
  %loadMem_4215d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215d7 = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215d7)
  store %struct.Memory* %call_4215d7, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 4215d9	 Bytes: 6
  %loadMem_4215d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215d9 = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215d9)
  store %struct.Memory* %call_4215d9, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 4215df	 Bytes: 3
  %loadMem_4215df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215df = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215df)
  store %struct.Memory* %call_4215df, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 4215e2	 Bytes: 4
  %loadMem_4215e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215e2 = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215e2)
  store %struct.Memory* %call_4215e2, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 4215e6	 Bytes: 3
  %loadMem_4215e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215e6 = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215e6)
  store %struct.Memory* %call_4215e6, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 4215e9	 Bytes: 3
  %loadMem_4215e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215e9 = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215e9)
  store %struct.Memory* %call_4215e9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 4215ec	 Bytes: 3
  %loadMem_4215ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215ec = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215ec)
  store %struct.Memory* %call_4215ec, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 4215ef	 Bytes: 4
  %loadMem_4215ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215ef = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215ef)
  store %struct.Memory* %call_4215ef, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 4215f3	 Bytes: 4
  %loadMem_4215f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215f3 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215f3)
  store %struct.Memory* %call_4215f3, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 4215f7	 Bytes: 4
  %loadMem_4215f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215f7 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215f7)
  store %struct.Memory* %call_4215f7, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 4215fb	 Bytes: 6
  %loadMem_4215fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4215fb = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4215fb)
  store %struct.Memory* %call_4215fb, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 421601	 Bytes: 7
  %loadMem_421601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421601 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421601)
  store %struct.Memory* %call_421601, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 421608	 Bytes: 7
  %loadMem_421608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421608 = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421608)
  store %struct.Memory* %call_421608, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42160f	 Bytes: 3
  %loadMem_42160f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42160f = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42160f)
  store %struct.Memory* %call_42160f, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 421612	 Bytes: 4
  %loadMem_421612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421612 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421612)
  store %struct.Memory* %call_421612, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 421616	 Bytes: 4
  %loadMem_421616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421616 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421616)
  store %struct.Memory* %call_421616, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 42161a	 Bytes: 3
  %loadMem_42161a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42161a = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42161a)
  store %struct.Memory* %call_42161a, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 42161d	 Bytes: 3
  %loadMem_42161d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42161d = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42161d)
  store %struct.Memory* %call_42161d, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 421620	 Bytes: 5
  %loadMem_421620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421620 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421620)
  store %struct.Memory* %call_421620, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 421625	 Bytes: 5
  %loadMem_421625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421625 = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421625)
  store %struct.Memory* %call_421625, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 42162a	 Bytes: 4
  %loadMem_42162a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42162a = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42162a)
  store %struct.Memory* %call_42162a, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 42162e	 Bytes: 5
  %loadMem1_42162e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42162e = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42162e, i64 -4478, i64 5, i64 5)
  store %struct.Memory* %call1_42162e, %struct.Memory** %MEMORY

  %loadMem2_42162e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42162e = load i64, i64* %3
  %call2_42162e = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_42162e, %struct.Memory* %loadMem2_42162e)
  store %struct.Memory* %call2_42162e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 421633	 Bytes: 3
  %loadMem_421633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421633 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421633)
  store %struct.Memory* %call_421633, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421636	 Bytes: 3
  %loadMem_421636 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421636 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421636)
  store %struct.Memory* %call_421636, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 421639	 Bytes: 8
  %loadMem_421639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421639 = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421639)
  store %struct.Memory* %call_421639, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 421641	 Bytes: 3
  %loadMem_421641 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421641 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421641)
  store %struct.Memory* %call_421641, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 421644	 Bytes: 6
  %loadMem_421644 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421644 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421644)
  store %struct.Memory* %call_421644, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 42164a	 Bytes: 3
  %loadMem_42164a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42164a = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42164a)
  store %struct.Memory* %call_42164a, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 42164d	 Bytes: 3
  %loadMem_42164d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42164d = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42164d)
  store %struct.Memory* %call_42164d, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 421650	 Bytes: 4
  %loadMem_421650 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421650 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421650)
  store %struct.Memory* %call_421650, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 421654	 Bytes: 3
  %loadMem_421654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421654 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421654)
  store %struct.Memory* %call_421654, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 421657	 Bytes: 6
  %loadMem_421657 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421657 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421657)
  store %struct.Memory* %call_421657, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 42165d	 Bytes: 3
  %loadMem_42165d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42165d = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42165d)
  store %struct.Memory* %call_42165d, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 421660	 Bytes: 3
  %loadMem_421660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421660 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421660)
  store %struct.Memory* %call_421660, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 421663	 Bytes: 3
  %loadMem_421663 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421663 = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421663)
  store %struct.Memory* %call_421663, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421666	 Bytes: 3
  %loadMem_421666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421666 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421666)
  store %struct.Memory* %call_421666, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 421669	 Bytes: 3
  %loadMem_421669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421669 = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421669)
  store %struct.Memory* %call_421669, %struct.Memory** %MEMORY

  ; Code: jge .L_42168a	 RIP: 42166c	 Bytes: 6
  %loadMem_42166c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42166c = call %struct.Memory* @routine_jge_.L_42168a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42166c, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42166c, %struct.Memory** %MEMORY

  %loadBr_42166c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42166c = icmp eq i8 %loadBr_42166c, 1
  br i1 %cmpBr_42166c, label %block_.L_42168a, label %block_421672

block_421672:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 421672	 Bytes: 3
  %loadMem_421672 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421672 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421672)
  store %struct.Memory* %call_421672, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 421675	 Bytes: 6
  %loadMem_421675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421675 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421675)
  store %struct.Memory* %call_421675, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 42167b	 Bytes: 3
  %loadMem_42167b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42167b = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42167b)
  store %struct.Memory* %call_42167b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 42167e	 Bytes: 6
  %loadMem_42167e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42167e = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42167e)
  store %struct.Memory* %call_42167e, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421684	 Bytes: 3
  %loadMem_421684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421684 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421684)
  store %struct.Memory* %call_421684, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 421687	 Bytes: 3
  %loadMem_421687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421687 = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421687)
  store %struct.Memory* %call_421687, %struct.Memory** %MEMORY

  ; Code: .L_42168a:	 RIP: 42168a	 Bytes: 0
  br label %block_.L_42168a
block_.L_42168a:

  ; Code: jmpq .L_42168f	 RIP: 42168a	 Bytes: 5
  %loadMem_42168a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42168a = call %struct.Memory* @routine_jmpq_.L_42168f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42168a, i64 5, i64 5)
  store %struct.Memory* %call_42168a, %struct.Memory** %MEMORY

  br label %block_.L_42168f

  ; Code: .L_42168f:	 RIP: 42168f	 Bytes: 0
block_.L_42168f:

  ; Code: jmpq .L_421694	 RIP: 42168f	 Bytes: 5
  %loadMem_42168f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42168f = call %struct.Memory* @routine_jmpq_.L_421694(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42168f, i64 5, i64 5)
  store %struct.Memory* %call_42168f, %struct.Memory** %MEMORY

  br label %block_.L_421694

  ; Code: .L_421694:	 RIP: 421694	 Bytes: 0
block_.L_421694:

  ; Code: jmpq .L_421699	 RIP: 421694	 Bytes: 5
  %loadMem_421694 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421694 = call %struct.Memory* @routine_jmpq_.L_421699(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421694, i64 5, i64 5)
  store %struct.Memory* %call_421694, %struct.Memory** %MEMORY

  br label %block_.L_421699

  ; Code: .L_421699:	 RIP: 421699	 Bytes: 0
block_.L_421699:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 421699	 Bytes: 8
  %loadMem_421699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421699 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421699)
  store %struct.Memory* %call_421699, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0xb40(%rax)	 RIP: 4216a1	 Bytes: 7
  %loadMem_4216a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216a1 = call %struct.Memory* @routine_cmpl__0x1__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216a1)
  store %struct.Memory* %call_4216a1, %struct.Memory** %MEMORY

  ; Code: jne .L_4218b4	 RIP: 4216a8	 Bytes: 6
  %loadMem_4216a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216a8 = call %struct.Memory* @routine_jne_.L_4218b4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216a8, i8* %BRANCH_TAKEN, i64 524, i64 6, i64 6)
  store %struct.Memory* %call_4216a8, %struct.Memory** %MEMORY

  %loadBr_4216a8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4216a8 = icmp eq i8 %loadBr_4216a8, 1
  br i1 %cmpBr_4216a8, label %block_.L_4218b4, label %block_4216ae

block_4216ae:
  ; Code: cmpl $0x0, -0x28(%rbp)	 RIP: 4216ae	 Bytes: 4
  %loadMem_4216ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216ae = call %struct.Memory* @routine_cmpl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216ae)
  store %struct.Memory* %call_4216ae, %struct.Memory** %MEMORY

  ; Code: jne .L_4216c5	 RIP: 4216b2	 Bytes: 6
  %loadMem_4216b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216b2 = call %struct.Memory* @routine_jne_.L_4216c5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216b2, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4216b2, %struct.Memory** %MEMORY

  %loadBr_4216b2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4216b2 = icmp eq i8 %loadBr_4216b2, 1
  br i1 %cmpBr_4216b2, label %block_.L_4216c5, label %block_4216b8

block_4216b8:
  ; Code: movswl -0x22(%rbp), %eax	 RIP: 4216b8	 Bytes: 4
  %loadMem_4216b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216b8 = call %struct.Memory* @routine_movswl_MINUS0x22__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216b8)
  store %struct.Memory* %call_4216b8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4216bc	 Bytes: 3
  %loadMem_4216bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216bc = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216bc)
  store %struct.Memory* %call_4216bc, %struct.Memory** %MEMORY

  ; Code: jg .L_4216fb	 RIP: 4216bf	 Bytes: 6
  %loadMem_4216bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216bf = call %struct.Memory* @routine_jg_.L_4216fb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216bf, i8* %BRANCH_TAKEN, i64 60, i64 6, i64 6)
  store %struct.Memory* %call_4216bf, %struct.Memory** %MEMORY

  %loadBr_4216bf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4216bf = icmp eq i8 %loadBr_4216bf, 1
  br i1 %cmpBr_4216bf, label %block_.L_4216fb, label %block_.L_4216c5

  ; Code: .L_4216c5:	 RIP: 4216c5	 Bytes: 0
block_.L_4216c5:

  ; Code: movq 0x6cb900, %rax	 RIP: 4216c5	 Bytes: 8
  %loadMem_4216c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216c5 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216c5)
  store %struct.Memory* %call_4216c5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x18(%rax)	 RIP: 4216cd	 Bytes: 4
  %loadMem_4216cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216cd = call %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216cd)
  store %struct.Memory* %call_4216cd, %struct.Memory** %MEMORY

  ; Code: jne .L_4218af	 RIP: 4216d1	 Bytes: 6
  %loadMem_4216d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216d1 = call %struct.Memory* @routine_jne_.L_4218af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216d1, i8* %BRANCH_TAKEN, i64 478, i64 6, i64 6)
  store %struct.Memory* %call_4216d1, %struct.Memory** %MEMORY

  %loadBr_4216d1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4216d1 = icmp eq i8 %loadBr_4216d1, 1
  br i1 %cmpBr_4216d1, label %block_.L_4218af, label %block_4216d7

block_4216d7:
  ; Code: cmpl $0x0, -0x28(%rbp)	 RIP: 4216d7	 Bytes: 4
  %loadMem_4216d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216d7 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216d7)
  store %struct.Memory* %call_4216d7, %struct.Memory** %MEMORY

  ; Code: jne .L_4218af	 RIP: 4216db	 Bytes: 6
  %loadMem_4216db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216db = call %struct.Memory* @routine_jne_.L_4218af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216db, i8* %BRANCH_TAKEN, i64 468, i64 6, i64 6)
  store %struct.Memory* %call_4216db, %struct.Memory** %MEMORY

  %loadBr_4216db = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4216db = icmp eq i8 %loadBr_4216db, 1
  br i1 %cmpBr_4216db, label %block_.L_4218af, label %block_4216e1

block_4216e1:
  ; Code: movswl -0x22(%rbp), %eax	 RIP: 4216e1	 Bytes: 4
  %loadMem_4216e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216e1 = call %struct.Memory* @routine_movswl_MINUS0x22__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216e1)
  store %struct.Memory* %call_4216e1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4216e5	 Bytes: 3
  %loadMem_4216e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216e5 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216e5)
  store %struct.Memory* %call_4216e5, %struct.Memory** %MEMORY

  ; Code: je .L_4216fb	 RIP: 4216e8	 Bytes: 6
  %loadMem_4216e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216e8 = call %struct.Memory* @routine_je_.L_4216fb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216e8, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4216e8, %struct.Memory** %MEMORY

  %loadBr_4216e8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4216e8 = icmp eq i8 %loadBr_4216e8, 1
  br i1 %cmpBr_4216e8, label %block_.L_4216fb, label %block_4216ee

block_4216ee:
  ; Code: movswl -0x22(%rbp), %eax	 RIP: 4216ee	 Bytes: 4
  %loadMem_4216ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216ee = call %struct.Memory* @routine_movswl_MINUS0x22__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216ee)
  store %struct.Memory* %call_4216ee, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 4216f2	 Bytes: 3
  %loadMem_4216f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216f2 = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216f2)
  store %struct.Memory* %call_4216f2, %struct.Memory** %MEMORY

  ; Code: jne .L_4218af	 RIP: 4216f5	 Bytes: 6
  %loadMem_4216f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216f5 = call %struct.Memory* @routine_jne_.L_4218af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216f5, i8* %BRANCH_TAKEN, i64 442, i64 6, i64 6)
  store %struct.Memory* %call_4216f5, %struct.Memory** %MEMORY

  %loadBr_4216f5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4216f5 = icmp eq i8 %loadBr_4216f5, 1
  br i1 %cmpBr_4216f5, label %block_.L_4218af, label %block_.L_4216fb

  ; Code: .L_4216fb:	 RIP: 4216fb	 Bytes: 0
block_.L_4216fb:

  ; Code: movl $0x4, %eax	 RIP: 4216fb	 Bytes: 5
  %loadMem_4216fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4216fb = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4216fb)
  store %struct.Memory* %call_4216fb, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %ecx	 RIP: 421700	 Bytes: 3
  %loadMem_421700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421700 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421700)
  store %struct.Memory* %call_421700, %struct.Memory** %MEMORY

  ; Code: movl 0x710010, %edx	 RIP: 421703	 Bytes: 7
  %loadMem_421703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421703 = call %struct.Memory* @routine_movl_0x710010___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421703)
  store %struct.Memory* %call_421703, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x12c(%rbp)	 RIP: 42170a	 Bytes: 6
  %loadMem_42170a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42170a = call %struct.Memory* @routine_movl__eax__MINUS0x12c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42170a)
  store %struct.Memory* %call_42170a, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 421710	 Bytes: 2
  %loadMem_421710 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421710 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421710)
  store %struct.Memory* %call_421710, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 421712	 Bytes: 1
  %loadMem_421712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421712 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421712)
  store %struct.Memory* %call_421712, %struct.Memory** %MEMORY

  ; Code: movl -0x12c(%rbp), %esi	 RIP: 421713	 Bytes: 6
  %loadMem_421713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421713 = call %struct.Memory* @routine_movl_MINUS0x12c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421713)
  store %struct.Memory* %call_421713, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 421719	 Bytes: 2
  %loadMem_421719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421719 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421719)
  store %struct.Memory* %call_421719, %struct.Memory** %MEMORY

  ; Code: addl %eax, %ecx	 RIP: 42171b	 Bytes: 2
  %loadMem_42171b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42171b = call %struct.Memory* @routine_addl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42171b)
  store %struct.Memory* %call_42171b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x60(%rbp)	 RIP: 42171d	 Bytes: 3
  %loadMem_42171d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42171d = call %struct.Memory* @routine_movl__ecx__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42171d)
  store %struct.Memory* %call_42171d, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %eax	 RIP: 421720	 Bytes: 3
  %loadMem_421720 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421720 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421720)
  store %struct.Memory* %call_421720, %struct.Memory** %MEMORY

  ; Code: movl 0x710014, %ecx	 RIP: 421723	 Bytes: 7
  %loadMem_421723 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421723 = call %struct.Memory* @routine_movl_0x710014___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421723)
  store %struct.Memory* %call_421723, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x130(%rbp)	 RIP: 42172a	 Bytes: 6
  %loadMem_42172a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42172a = call %struct.Memory* @routine_movl__eax__MINUS0x130__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42172a)
  store %struct.Memory* %call_42172a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 421730	 Bytes: 2
  %loadMem_421730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421730 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421730)
  store %struct.Memory* %call_421730, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 421732	 Bytes: 1
  %loadMem_421732 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421732 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421732)
  store %struct.Memory* %call_421732, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 421733	 Bytes: 2
  %loadMem_421733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421733 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421733)
  store %struct.Memory* %call_421733, %struct.Memory** %MEMORY

  ; Code: movl -0x130(%rbp), %ecx	 RIP: 421735	 Bytes: 6
  %loadMem_421735 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421735 = call %struct.Memory* @routine_movl_MINUS0x130__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421735)
  store %struct.Memory* %call_421735, %struct.Memory** %MEMORY

  ; Code: addl %eax, %ecx	 RIP: 42173b	 Bytes: 2
  %loadMem_42173b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42173b = call %struct.Memory* @routine_addl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42173b)
  store %struct.Memory* %call_42173b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x64(%rbp)	 RIP: 42173d	 Bytes: 3
  %loadMem_42173d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42173d = call %struct.Memory* @routine_movl__ecx__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42173d)
  store %struct.Memory* %call_42173d, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 421740	 Bytes: 3
  %loadMem_421740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421740 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421740)
  store %struct.Memory* %call_421740, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 421743	 Bytes: 6
  %loadMem_421743 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421743 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421743)
  store %struct.Memory* %call_421743, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 421749	 Bytes: 2
  %loadMem_421749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421749 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421749)
  store %struct.Memory* %call_421749, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 42174b	 Bytes: 5
  %loadMem1_42174b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42174b = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42174b, i64 -132939, i64 5, i64 5)
  store %struct.Memory* %call1_42174b, %struct.Memory** %MEMORY

  %loadMem2_42174b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42174b = load i64, i64* %3
  %call2_42174b = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_42174b, %struct.Memory* %loadMem2_42174b)
  store %struct.Memory* %call2_42174b, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 421750	 Bytes: 3
  %loadMem_421750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421750 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421750)
  store %struct.Memory* %call_421750, %struct.Memory** %MEMORY

  ; Code: jg .L_4218aa	 RIP: 421753	 Bytes: 6
  %loadMem_421753 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421753 = call %struct.Memory* @routine_jg_.L_4218aa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421753, i8* %BRANCH_TAKEN, i64 343, i64 6, i64 6)
  store %struct.Memory* %call_421753, %struct.Memory** %MEMORY

  %loadBr_421753 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421753 = icmp eq i8 %loadBr_421753, 1
  br i1 %cmpBr_421753, label %block_.L_4218aa, label %block_421759

block_421759:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 421759	 Bytes: 3
  %loadMem_421759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421759 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421759)
  store %struct.Memory* %call_421759, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 42175c	 Bytes: 6
  %loadMem_42175c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42175c = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42175c)
  store %struct.Memory* %call_42175c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 421762	 Bytes: 2
  %loadMem_421762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421762 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421762)
  store %struct.Memory* %call_421762, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 421764	 Bytes: 5
  %loadMem1_421764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_421764 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_421764, i64 -132964, i64 5, i64 5)
  store %struct.Memory* %call1_421764, %struct.Memory** %MEMORY

  %loadMem2_421764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_421764 = load i64, i64* %3
  %call2_421764 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_421764, %struct.Memory* %loadMem2_421764)
  store %struct.Memory* %call2_421764, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 421769	 Bytes: 3
  %loadMem_421769 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421769 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421769)
  store %struct.Memory* %call_421769, %struct.Memory** %MEMORY

  ; Code: jg .L_4218aa	 RIP: 42176c	 Bytes: 6
  %loadMem_42176c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42176c = call %struct.Memory* @routine_jg_.L_4218aa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42176c, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_42176c, %struct.Memory** %MEMORY

  %loadBr_42176c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42176c = icmp eq i8 %loadBr_42176c, 1
  br i1 %cmpBr_42176c, label %block_.L_4218aa, label %block_421772

block_421772:
  ; Code: movq 0x6d32d0, %rax	 RIP: 421772	 Bytes: 8
  %loadMem_421772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421772 = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421772)
  store %struct.Memory* %call_421772, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 42177a	 Bytes: 3
  %loadMem_42177a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42177a = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42177a)
  store %struct.Memory* %call_42177a, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 42177d	 Bytes: 6
  %loadMem_42177d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42177d = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42177d)
  store %struct.Memory* %call_42177d, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421783	 Bytes: 3
  %loadMem_421783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421783 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421783)
  store %struct.Memory* %call_421783, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 421786	 Bytes: 3
  %loadMem_421786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421786 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421786)
  store %struct.Memory* %call_421786, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 421789	 Bytes: 4
  %loadMem_421789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421789 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421789)
  store %struct.Memory* %call_421789, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 42178d	 Bytes: 3
  %loadMem_42178d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42178d = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42178d)
  store %struct.Memory* %call_42178d, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 421790	 Bytes: 6
  %loadMem_421790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421790 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421790)
  store %struct.Memory* %call_421790, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421796	 Bytes: 3
  %loadMem_421796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421796 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421796)
  store %struct.Memory* %call_421796, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 421799	 Bytes: 3
  %loadMem_421799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421799 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421799)
  store %struct.Memory* %call_421799, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 42179c	 Bytes: 4
  %loadMem_42179c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42179c = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42179c)
  store %struct.Memory* %call_42179c, %struct.Memory** %MEMORY

  ; Code: jne .L_4218a5	 RIP: 4217a0	 Bytes: 6
  %loadMem_4217a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217a0 = call %struct.Memory* @routine_jne_.L_4218a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217a0, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_4217a0, %struct.Memory** %MEMORY

  %loadBr_4217a0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4217a0 = icmp eq i8 %loadBr_4217a0, 1
  br i1 %cmpBr_4217a0, label %block_.L_4218a5, label %block_4217a6

block_4217a6:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 4217a6	 Bytes: 6
  %loadMem_4217a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217a6 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217a6)
  store %struct.Memory* %call_4217a6, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 4217ac	 Bytes: 8
  %loadMem_4217ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217ac = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217ac)
  store %struct.Memory* %call_4217ac, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 4217b4	 Bytes: 3
  %loadMem_4217b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217b4 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217b4)
  store %struct.Memory* %call_4217b4, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 4217b7	 Bytes: 6
  %loadMem_4217b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217b7 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217b7)
  store %struct.Memory* %call_4217b7, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x138(%rbp)	 RIP: 4217bd	 Bytes: 7
  %loadMem_4217bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217bd = call %struct.Memory* @routine_movq__rcx__MINUS0x138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217bd)
  store %struct.Memory* %call_4217bd, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 4217c4	 Bytes: 2
  %loadMem_4217c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217c4 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217c4)
  store %struct.Memory* %call_4217c4, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 4217c6	 Bytes: 2
  %loadMem_4217c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217c6 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217c6)
  store %struct.Memory* %call_4217c6, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 4217c8	 Bytes: 6
  %loadMem_4217c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217c8 = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217c8)
  store %struct.Memory* %call_4217c8, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 4217ce	 Bytes: 3
  %loadMem_4217ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217ce = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217ce)
  store %struct.Memory* %call_4217ce, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %r8	 RIP: 4217d1	 Bytes: 7
  %loadMem_4217d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217d1 = call %struct.Memory* @routine_movq_MINUS0x138__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217d1)
  store %struct.Memory* %call_4217d1, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 4217d8	 Bytes: 4
  %loadMem_4217d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217d8 = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217d8)
  store %struct.Memory* %call_4217d8, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 4217dc	 Bytes: 8
  %loadMem_4217dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217dc = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217dc)
  store %struct.Memory* %call_4217dc, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 4217e4	 Bytes: 3
  %loadMem_4217e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217e4 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217e4)
  store %struct.Memory* %call_4217e4, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 4217e7	 Bytes: 6
  %loadMem_4217e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217e7 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217e7)
  store %struct.Memory* %call_4217e7, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 4217ed	 Bytes: 2
  %loadMem_4217ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217ed = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217ed)
  store %struct.Memory* %call_4217ed, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 4217ef	 Bytes: 6
  %loadMem_4217ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217ef = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217ef)
  store %struct.Memory* %call_4217ef, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 4217f5	 Bytes: 3
  %loadMem_4217f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217f5 = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217f5)
  store %struct.Memory* %call_4217f5, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 4217f8	 Bytes: 4
  %loadMem_4217f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217f8 = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217f8)
  store %struct.Memory* %call_4217f8, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 4217fc	 Bytes: 3
  %loadMem_4217fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217fc = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217fc)
  store %struct.Memory* %call_4217fc, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 4217ff	 Bytes: 3
  %loadMem_4217ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4217ff = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4217ff)
  store %struct.Memory* %call_4217ff, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 421802	 Bytes: 3
  %loadMem_421802 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421802 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421802)
  store %struct.Memory* %call_421802, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 421805	 Bytes: 4
  %loadMem_421805 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421805 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421805)
  store %struct.Memory* %call_421805, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 421809	 Bytes: 4
  %loadMem_421809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421809 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421809)
  store %struct.Memory* %call_421809, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 42180d	 Bytes: 4
  %loadMem_42180d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42180d = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42180d)
  store %struct.Memory* %call_42180d, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 421811	 Bytes: 6
  %loadMem_421811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421811 = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421811)
  store %struct.Memory* %call_421811, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 421817	 Bytes: 7
  %loadMem_421817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421817 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421817)
  store %struct.Memory* %call_421817, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 42181e	 Bytes: 7
  %loadMem_42181e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42181e = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42181e)
  store %struct.Memory* %call_42181e, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421825	 Bytes: 3
  %loadMem_421825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421825 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421825)
  store %struct.Memory* %call_421825, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 421828	 Bytes: 4
  %loadMem_421828 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421828 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421828)
  store %struct.Memory* %call_421828, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 42182c	 Bytes: 4
  %loadMem_42182c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42182c = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42182c)
  store %struct.Memory* %call_42182c, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 421830	 Bytes: 3
  %loadMem_421830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421830 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421830)
  store %struct.Memory* %call_421830, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 421833	 Bytes: 3
  %loadMem_421833 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421833 = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421833)
  store %struct.Memory* %call_421833, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 421836	 Bytes: 5
  %loadMem_421836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421836 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421836)
  store %struct.Memory* %call_421836, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 42183b	 Bytes: 5
  %loadMem_42183b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42183b = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42183b)
  store %struct.Memory* %call_42183b, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 421840	 Bytes: 4
  %loadMem_421840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421840 = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421840)
  store %struct.Memory* %call_421840, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 421844	 Bytes: 5
  %loadMem1_421844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_421844 = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_421844, i64 -5012, i64 5, i64 5)
  store %struct.Memory* %call1_421844, %struct.Memory** %MEMORY

  %loadMem2_421844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_421844 = load i64, i64* %3
  %call2_421844 = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_421844, %struct.Memory* %loadMem2_421844)
  store %struct.Memory* %call2_421844, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 421849	 Bytes: 3
  %loadMem_421849 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421849 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421849)
  store %struct.Memory* %call_421849, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42184c	 Bytes: 3
  %loadMem_42184c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42184c = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42184c)
  store %struct.Memory* %call_42184c, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 42184f	 Bytes: 8
  %loadMem_42184f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42184f = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42184f)
  store %struct.Memory* %call_42184f, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 421857	 Bytes: 3
  %loadMem_421857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421857 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421857)
  store %struct.Memory* %call_421857, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 42185a	 Bytes: 6
  %loadMem_42185a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42185a = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42185a)
  store %struct.Memory* %call_42185a, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421860	 Bytes: 3
  %loadMem_421860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421860 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421860)
  store %struct.Memory* %call_421860, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 421863	 Bytes: 3
  %loadMem_421863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421863 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421863)
  store %struct.Memory* %call_421863, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 421866	 Bytes: 4
  %loadMem_421866 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421866 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421866)
  store %struct.Memory* %call_421866, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 42186a	 Bytes: 3
  %loadMem_42186a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42186a = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42186a)
  store %struct.Memory* %call_42186a, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 42186d	 Bytes: 6
  %loadMem_42186d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42186d = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42186d)
  store %struct.Memory* %call_42186d, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421873	 Bytes: 3
  %loadMem_421873 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421873 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421873)
  store %struct.Memory* %call_421873, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 421876	 Bytes: 3
  %loadMem_421876 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421876 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421876)
  store %struct.Memory* %call_421876, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 421879	 Bytes: 3
  %loadMem_421879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421879 = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421879)
  store %struct.Memory* %call_421879, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42187c	 Bytes: 3
  %loadMem_42187c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42187c = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42187c)
  store %struct.Memory* %call_42187c, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 42187f	 Bytes: 3
  %loadMem_42187f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42187f = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42187f)
  store %struct.Memory* %call_42187f, %struct.Memory** %MEMORY

  ; Code: jge .L_4218a0	 RIP: 421882	 Bytes: 6
  %loadMem_421882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421882 = call %struct.Memory* @routine_jge_.L_4218a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421882, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_421882, %struct.Memory** %MEMORY

  %loadBr_421882 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421882 = icmp eq i8 %loadBr_421882, 1
  br i1 %cmpBr_421882, label %block_.L_4218a0, label %block_421888

block_421888:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 421888	 Bytes: 3
  %loadMem_421888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421888 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421888)
  store %struct.Memory* %call_421888, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 42188b	 Bytes: 6
  %loadMem_42188b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42188b = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42188b)
  store %struct.Memory* %call_42188b, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 421891	 Bytes: 3
  %loadMem_421891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421891 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421891)
  store %struct.Memory* %call_421891, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 421894	 Bytes: 6
  %loadMem_421894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421894 = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421894)
  store %struct.Memory* %call_421894, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42189a	 Bytes: 3
  %loadMem_42189a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42189a = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42189a)
  store %struct.Memory* %call_42189a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 42189d	 Bytes: 3
  %loadMem_42189d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42189d = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42189d)
  store %struct.Memory* %call_42189d, %struct.Memory** %MEMORY

  ; Code: .L_4218a0:	 RIP: 4218a0	 Bytes: 0
  br label %block_.L_4218a0
block_.L_4218a0:

  ; Code: jmpq .L_4218a5	 RIP: 4218a0	 Bytes: 5
  %loadMem_4218a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218a0 = call %struct.Memory* @routine_jmpq_.L_4218a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218a0, i64 5, i64 5)
  store %struct.Memory* %call_4218a0, %struct.Memory** %MEMORY

  br label %block_.L_4218a5

  ; Code: .L_4218a5:	 RIP: 4218a5	 Bytes: 0
block_.L_4218a5:

  ; Code: jmpq .L_4218aa	 RIP: 4218a5	 Bytes: 5
  %loadMem_4218a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218a5 = call %struct.Memory* @routine_jmpq_.L_4218aa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218a5, i64 5, i64 5)
  store %struct.Memory* %call_4218a5, %struct.Memory** %MEMORY

  br label %block_.L_4218aa

  ; Code: .L_4218aa:	 RIP: 4218aa	 Bytes: 0
block_.L_4218aa:

  ; Code: jmpq .L_4218af	 RIP: 4218aa	 Bytes: 5
  %loadMem_4218aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218aa = call %struct.Memory* @routine_jmpq_.L_4218af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218aa, i64 5, i64 5)
  store %struct.Memory* %call_4218aa, %struct.Memory** %MEMORY

  br label %block_.L_4218af

  ; Code: .L_4218af:	 RIP: 4218af	 Bytes: 0
block_.L_4218af:

  ; Code: jmpq .L_421aad	 RIP: 4218af	 Bytes: 5
  %loadMem_4218af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218af = call %struct.Memory* @routine_jmpq_.L_421aad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218af, i64 510, i64 5)
  store %struct.Memory* %call_4218af, %struct.Memory** %MEMORY

  br label %block_.L_421aad

  ; Code: .L_4218b4:	 RIP: 4218b4	 Bytes: 0
block_.L_4218b4:

  ; Code: cmpl $0x0, -0x28(%rbp)	 RIP: 4218b4	 Bytes: 4
  %loadMem_4218b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218b4 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218b4)
  store %struct.Memory* %call_4218b4, %struct.Memory** %MEMORY

  ; Code: jne .L_4218cb	 RIP: 4218b8	 Bytes: 6
  %loadMem_4218b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218b8 = call %struct.Memory* @routine_jne_.L_4218cb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218b8, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4218b8, %struct.Memory** %MEMORY

  %loadBr_4218b8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4218b8 = icmp eq i8 %loadBr_4218b8, 1
  br i1 %cmpBr_4218b8, label %block_.L_4218cb, label %block_4218be

block_4218be:
  ; Code: movswl -0x22(%rbp), %eax	 RIP: 4218be	 Bytes: 4
  %loadMem_4218be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218be = call %struct.Memory* @routine_movswl_MINUS0x22__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218be)
  store %struct.Memory* %call_4218be, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4218c2	 Bytes: 3
  %loadMem_4218c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218c2 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218c2)
  store %struct.Memory* %call_4218c2, %struct.Memory** %MEMORY

  ; Code: jg .L_4218f4	 RIP: 4218c5	 Bytes: 6
  %loadMem_4218c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218c5 = call %struct.Memory* @routine_jg_.L_4218f4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218c5, i8* %BRANCH_TAKEN, i64 47, i64 6, i64 6)
  store %struct.Memory* %call_4218c5, %struct.Memory** %MEMORY

  %loadBr_4218c5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4218c5 = icmp eq i8 %loadBr_4218c5, 1
  br i1 %cmpBr_4218c5, label %block_.L_4218f4, label %block_.L_4218cb

  ; Code: .L_4218cb:	 RIP: 4218cb	 Bytes: 0
block_.L_4218cb:

  ; Code: movq 0x6cb900, %rax	 RIP: 4218cb	 Bytes: 8
  %loadMem_4218cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218cb = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218cb)
  store %struct.Memory* %call_4218cb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x18(%rax)	 RIP: 4218d3	 Bytes: 4
  %loadMem_4218d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218d3 = call %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218d3)
  store %struct.Memory* %call_4218d3, %struct.Memory** %MEMORY

  ; Code: jne .L_421aa8	 RIP: 4218d7	 Bytes: 6
  %loadMem_4218d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218d7 = call %struct.Memory* @routine_jne_.L_421aa8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218d7, i8* %BRANCH_TAKEN, i64 465, i64 6, i64 6)
  store %struct.Memory* %call_4218d7, %struct.Memory** %MEMORY

  %loadBr_4218d7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4218d7 = icmp eq i8 %loadBr_4218d7, 1
  br i1 %cmpBr_4218d7, label %block_.L_421aa8, label %block_4218dd

block_4218dd:
  ; Code: cmpl $0x0, -0x28(%rbp)	 RIP: 4218dd	 Bytes: 4
  %loadMem_4218dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218dd = call %struct.Memory* @routine_cmpl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218dd)
  store %struct.Memory* %call_4218dd, %struct.Memory** %MEMORY

  ; Code: jne .L_421aa8	 RIP: 4218e1	 Bytes: 6
  %loadMem_4218e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218e1 = call %struct.Memory* @routine_jne_.L_421aa8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218e1, i8* %BRANCH_TAKEN, i64 455, i64 6, i64 6)
  store %struct.Memory* %call_4218e1, %struct.Memory** %MEMORY

  %loadBr_4218e1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4218e1 = icmp eq i8 %loadBr_4218e1, 1
  br i1 %cmpBr_4218e1, label %block_.L_421aa8, label %block_4218e7

block_4218e7:
  ; Code: movswl -0x22(%rbp), %eax	 RIP: 4218e7	 Bytes: 4
  %loadMem_4218e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218e7 = call %struct.Memory* @routine_movswl_MINUS0x22__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218e7)
  store %struct.Memory* %call_4218e7, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4218eb	 Bytes: 3
  %loadMem_4218eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218eb = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218eb)
  store %struct.Memory* %call_4218eb, %struct.Memory** %MEMORY

  ; Code: jne .L_421aa8	 RIP: 4218ee	 Bytes: 6
  %loadMem_4218ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218ee = call %struct.Memory* @routine_jne_.L_421aa8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218ee, i8* %BRANCH_TAKEN, i64 442, i64 6, i64 6)
  store %struct.Memory* %call_4218ee, %struct.Memory** %MEMORY

  %loadBr_4218ee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4218ee = icmp eq i8 %loadBr_4218ee, 1
  br i1 %cmpBr_4218ee, label %block_.L_421aa8, label %block_.L_4218f4

  ; Code: .L_4218f4:	 RIP: 4218f4	 Bytes: 0
block_.L_4218f4:

  ; Code: movl $0x4, %eax	 RIP: 4218f4	 Bytes: 5
  %loadMem_4218f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218f4 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218f4)
  store %struct.Memory* %call_4218f4, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %ecx	 RIP: 4218f9	 Bytes: 3
  %loadMem_4218f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218f9 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218f9)
  store %struct.Memory* %call_4218f9, %struct.Memory** %MEMORY

  ; Code: movl 0x710010, %edx	 RIP: 4218fc	 Bytes: 7
  %loadMem_4218fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4218fc = call %struct.Memory* @routine_movl_0x710010___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4218fc)
  store %struct.Memory* %call_4218fc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x13c(%rbp)	 RIP: 421903	 Bytes: 6
  %loadMem_421903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421903 = call %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421903)
  store %struct.Memory* %call_421903, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 421909	 Bytes: 2
  %loadMem_421909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421909 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421909)
  store %struct.Memory* %call_421909, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42190b	 Bytes: 1
  %loadMem_42190b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42190b = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42190b)
  store %struct.Memory* %call_42190b, %struct.Memory** %MEMORY

  ; Code: movl -0x13c(%rbp), %esi	 RIP: 42190c	 Bytes: 6
  %loadMem_42190c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42190c = call %struct.Memory* @routine_movl_MINUS0x13c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42190c)
  store %struct.Memory* %call_42190c, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 421912	 Bytes: 2
  %loadMem_421912 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421912 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421912)
  store %struct.Memory* %call_421912, %struct.Memory** %MEMORY

  ; Code: addl %eax, %ecx	 RIP: 421914	 Bytes: 2
  %loadMem_421914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421914 = call %struct.Memory* @routine_addl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421914)
  store %struct.Memory* %call_421914, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x60(%rbp)	 RIP: 421916	 Bytes: 3
  %loadMem_421916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421916 = call %struct.Memory* @routine_movl__ecx__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421916)
  store %struct.Memory* %call_421916, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %eax	 RIP: 421919	 Bytes: 3
  %loadMem_421919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421919 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421919)
  store %struct.Memory* %call_421919, %struct.Memory** %MEMORY

  ; Code: movl 0x710014, %ecx	 RIP: 42191c	 Bytes: 7
  %loadMem_42191c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42191c = call %struct.Memory* @routine_movl_0x710014___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42191c)
  store %struct.Memory* %call_42191c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x140(%rbp)	 RIP: 421923	 Bytes: 6
  %loadMem_421923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421923 = call %struct.Memory* @routine_movl__eax__MINUS0x140__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421923)
  store %struct.Memory* %call_421923, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 421929	 Bytes: 2
  %loadMem_421929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421929 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421929)
  store %struct.Memory* %call_421929, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42192b	 Bytes: 1
  %loadMem_42192b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42192b = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42192b)
  store %struct.Memory* %call_42192b, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 42192c	 Bytes: 2
  %loadMem_42192c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42192c = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42192c)
  store %struct.Memory* %call_42192c, %struct.Memory** %MEMORY

  ; Code: movl -0x140(%rbp), %ecx	 RIP: 42192e	 Bytes: 6
  %loadMem_42192e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42192e = call %struct.Memory* @routine_movl_MINUS0x140__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42192e)
  store %struct.Memory* %call_42192e, %struct.Memory** %MEMORY

  ; Code: addl %eax, %ecx	 RIP: 421934	 Bytes: 2
  %loadMem_421934 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421934 = call %struct.Memory* @routine_addl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421934)
  store %struct.Memory* %call_421934, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x64(%rbp)	 RIP: 421936	 Bytes: 3
  %loadMem_421936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421936 = call %struct.Memory* @routine_movl__ecx__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421936)
  store %struct.Memory* %call_421936, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 421939	 Bytes: 3
  %loadMem_421939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421939 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421939)
  store %struct.Memory* %call_421939, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 42193c	 Bytes: 6
  %loadMem_42193c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42193c = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42193c)
  store %struct.Memory* %call_42193c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 421942	 Bytes: 2
  %loadMem_421942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421942 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421942)
  store %struct.Memory* %call_421942, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 421944	 Bytes: 5
  %loadMem1_421944 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_421944 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_421944, i64 -133444, i64 5, i64 5)
  store %struct.Memory* %call1_421944, %struct.Memory** %MEMORY

  %loadMem2_421944 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_421944 = load i64, i64* %3
  %call2_421944 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_421944, %struct.Memory* %loadMem2_421944)
  store %struct.Memory* %call2_421944, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 421949	 Bytes: 3
  %loadMem_421949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421949 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421949)
  store %struct.Memory* %call_421949, %struct.Memory** %MEMORY

  ; Code: jg .L_421aa3	 RIP: 42194c	 Bytes: 6
  %loadMem_42194c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42194c = call %struct.Memory* @routine_jg_.L_421aa3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42194c, i8* %BRANCH_TAKEN, i64 343, i64 6, i64 6)
  store %struct.Memory* %call_42194c, %struct.Memory** %MEMORY

  %loadBr_42194c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42194c = icmp eq i8 %loadBr_42194c, 1
  br i1 %cmpBr_42194c, label %block_.L_421aa3, label %block_421952

block_421952:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 421952	 Bytes: 3
  %loadMem_421952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421952 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421952)
  store %struct.Memory* %call_421952, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 421955	 Bytes: 6
  %loadMem_421955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421955 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421955)
  store %struct.Memory* %call_421955, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 42195b	 Bytes: 2
  %loadMem_42195b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42195b = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42195b)
  store %struct.Memory* %call_42195b, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 42195d	 Bytes: 5
  %loadMem1_42195d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42195d = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42195d, i64 -133469, i64 5, i64 5)
  store %struct.Memory* %call1_42195d, %struct.Memory** %MEMORY

  %loadMem2_42195d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42195d = load i64, i64* %3
  %call2_42195d = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_42195d, %struct.Memory* %loadMem2_42195d)
  store %struct.Memory* %call2_42195d, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 421962	 Bytes: 3
  %loadMem_421962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421962 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421962)
  store %struct.Memory* %call_421962, %struct.Memory** %MEMORY

  ; Code: jg .L_421aa3	 RIP: 421965	 Bytes: 6
  %loadMem_421965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421965 = call %struct.Memory* @routine_jg_.L_421aa3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421965, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_421965, %struct.Memory** %MEMORY

  %loadBr_421965 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421965 = icmp eq i8 %loadBr_421965, 1
  br i1 %cmpBr_421965, label %block_.L_421aa3, label %block_42196b

block_42196b:
  ; Code: movq 0x6d32d0, %rax	 RIP: 42196b	 Bytes: 8
  %loadMem_42196b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42196b = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42196b)
  store %struct.Memory* %call_42196b, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 421973	 Bytes: 3
  %loadMem_421973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421973 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421973)
  store %struct.Memory* %call_421973, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 421976	 Bytes: 6
  %loadMem_421976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421976 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421976)
  store %struct.Memory* %call_421976, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 42197c	 Bytes: 3
  %loadMem_42197c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42197c = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42197c)
  store %struct.Memory* %call_42197c, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 42197f	 Bytes: 3
  %loadMem_42197f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42197f = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42197f)
  store %struct.Memory* %call_42197f, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 421982	 Bytes: 4
  %loadMem_421982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421982 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421982)
  store %struct.Memory* %call_421982, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 421986	 Bytes: 3
  %loadMem_421986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421986 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421986)
  store %struct.Memory* %call_421986, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 421989	 Bytes: 6
  %loadMem_421989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421989 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421989)
  store %struct.Memory* %call_421989, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 42198f	 Bytes: 3
  %loadMem_42198f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42198f = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42198f)
  store %struct.Memory* %call_42198f, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 421992	 Bytes: 3
  %loadMem_421992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421992 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421992)
  store %struct.Memory* %call_421992, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 421995	 Bytes: 4
  %loadMem_421995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421995 = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421995)
  store %struct.Memory* %call_421995, %struct.Memory** %MEMORY

  ; Code: jne .L_421a9e	 RIP: 421999	 Bytes: 6
  %loadMem_421999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421999 = call %struct.Memory* @routine_jne_.L_421a9e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421999, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_421999, %struct.Memory** %MEMORY

  %loadBr_421999 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421999 = icmp eq i8 %loadBr_421999, 1
  br i1 %cmpBr_421999, label %block_.L_421a9e, label %block_42199f

block_42199f:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 42199f	 Bytes: 6
  %loadMem_42199f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42199f = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42199f)
  store %struct.Memory* %call_42199f, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 4219a5	 Bytes: 8
  %loadMem_4219a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219a5 = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219a5)
  store %struct.Memory* %call_4219a5, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 4219ad	 Bytes: 3
  %loadMem_4219ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219ad = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219ad)
  store %struct.Memory* %call_4219ad, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 4219b0	 Bytes: 6
  %loadMem_4219b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219b0 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219b0)
  store %struct.Memory* %call_4219b0, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x148(%rbp)	 RIP: 4219b6	 Bytes: 7
  %loadMem_4219b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219b6 = call %struct.Memory* @routine_movq__rcx__MINUS0x148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219b6)
  store %struct.Memory* %call_4219b6, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 4219bd	 Bytes: 2
  %loadMem_4219bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219bd = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219bd)
  store %struct.Memory* %call_4219bd, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 4219bf	 Bytes: 2
  %loadMem_4219bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219bf = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219bf)
  store %struct.Memory* %call_4219bf, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 4219c1	 Bytes: 6
  %loadMem_4219c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219c1 = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219c1)
  store %struct.Memory* %call_4219c1, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 4219c7	 Bytes: 3
  %loadMem_4219c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219c7 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219c7)
  store %struct.Memory* %call_4219c7, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %r8	 RIP: 4219ca	 Bytes: 7
  %loadMem_4219ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219ca = call %struct.Memory* @routine_movq_MINUS0x148__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219ca)
  store %struct.Memory* %call_4219ca, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 4219d1	 Bytes: 4
  %loadMem_4219d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219d1 = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219d1)
  store %struct.Memory* %call_4219d1, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 4219d5	 Bytes: 8
  %loadMem_4219d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219d5 = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219d5)
  store %struct.Memory* %call_4219d5, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 4219dd	 Bytes: 3
  %loadMem_4219dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219dd = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219dd)
  store %struct.Memory* %call_4219dd, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 4219e0	 Bytes: 6
  %loadMem_4219e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219e0 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219e0)
  store %struct.Memory* %call_4219e0, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 4219e6	 Bytes: 2
  %loadMem_4219e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219e6 = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219e6)
  store %struct.Memory* %call_4219e6, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 4219e8	 Bytes: 6
  %loadMem_4219e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219e8 = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219e8)
  store %struct.Memory* %call_4219e8, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 4219ee	 Bytes: 3
  %loadMem_4219ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219ee = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219ee)
  store %struct.Memory* %call_4219ee, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 4219f1	 Bytes: 4
  %loadMem_4219f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219f1 = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219f1)
  store %struct.Memory* %call_4219f1, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 4219f5	 Bytes: 3
  %loadMem_4219f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219f5 = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219f5)
  store %struct.Memory* %call_4219f5, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 4219f8	 Bytes: 3
  %loadMem_4219f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219f8 = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219f8)
  store %struct.Memory* %call_4219f8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 4219fb	 Bytes: 3
  %loadMem_4219fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219fb = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219fb)
  store %struct.Memory* %call_4219fb, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 4219fe	 Bytes: 4
  %loadMem_4219fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4219fe = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4219fe)
  store %struct.Memory* %call_4219fe, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 421a02	 Bytes: 4
  %loadMem_421a02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a02 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a02)
  store %struct.Memory* %call_421a02, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 421a06	 Bytes: 4
  %loadMem_421a06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a06 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a06)
  store %struct.Memory* %call_421a06, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 421a0a	 Bytes: 6
  %loadMem_421a0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a0a = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a0a)
  store %struct.Memory* %call_421a0a, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 421a10	 Bytes: 7
  %loadMem_421a10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a10 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a10)
  store %struct.Memory* %call_421a10, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 421a17	 Bytes: 7
  %loadMem_421a17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a17 = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a17)
  store %struct.Memory* %call_421a17, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421a1e	 Bytes: 3
  %loadMem_421a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a1e = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a1e)
  store %struct.Memory* %call_421a1e, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 421a21	 Bytes: 4
  %loadMem_421a21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a21 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a21)
  store %struct.Memory* %call_421a21, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 421a25	 Bytes: 4
  %loadMem_421a25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a25 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a25)
  store %struct.Memory* %call_421a25, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 421a29	 Bytes: 3
  %loadMem_421a29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a29 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a29)
  store %struct.Memory* %call_421a29, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 421a2c	 Bytes: 3
  %loadMem_421a2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a2c = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a2c)
  store %struct.Memory* %call_421a2c, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 421a2f	 Bytes: 5
  %loadMem_421a2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a2f = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a2f)
  store %struct.Memory* %call_421a2f, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 421a34	 Bytes: 5
  %loadMem_421a34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a34 = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a34)
  store %struct.Memory* %call_421a34, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 421a39	 Bytes: 4
  %loadMem_421a39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a39 = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a39)
  store %struct.Memory* %call_421a39, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 421a3d	 Bytes: 5
  %loadMem1_421a3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_421a3d = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_421a3d, i64 -5517, i64 5, i64 5)
  store %struct.Memory* %call1_421a3d, %struct.Memory** %MEMORY

  %loadMem2_421a3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_421a3d = load i64, i64* %3
  %call2_421a3d = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_421a3d, %struct.Memory* %loadMem2_421a3d)
  store %struct.Memory* %call2_421a3d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 421a42	 Bytes: 3
  %loadMem_421a42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a42 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a42)
  store %struct.Memory* %call_421a42, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421a45	 Bytes: 3
  %loadMem_421a45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a45 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a45)
  store %struct.Memory* %call_421a45, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 421a48	 Bytes: 8
  %loadMem_421a48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a48 = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a48)
  store %struct.Memory* %call_421a48, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 421a50	 Bytes: 3
  %loadMem_421a50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a50 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a50)
  store %struct.Memory* %call_421a50, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 421a53	 Bytes: 6
  %loadMem_421a53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a53 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a53)
  store %struct.Memory* %call_421a53, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421a59	 Bytes: 3
  %loadMem_421a59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a59 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a59)
  store %struct.Memory* %call_421a59, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 421a5c	 Bytes: 3
  %loadMem_421a5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a5c = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a5c)
  store %struct.Memory* %call_421a5c, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 421a5f	 Bytes: 4
  %loadMem_421a5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a5f = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a5f)
  store %struct.Memory* %call_421a5f, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 421a63	 Bytes: 3
  %loadMem_421a63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a63 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a63)
  store %struct.Memory* %call_421a63, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 421a66	 Bytes: 6
  %loadMem_421a66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a66 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a66)
  store %struct.Memory* %call_421a66, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421a6c	 Bytes: 3
  %loadMem_421a6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a6c = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a6c)
  store %struct.Memory* %call_421a6c, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 421a6f	 Bytes: 3
  %loadMem_421a6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a6f = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a6f)
  store %struct.Memory* %call_421a6f, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 421a72	 Bytes: 3
  %loadMem_421a72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a72 = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a72)
  store %struct.Memory* %call_421a72, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421a75	 Bytes: 3
  %loadMem_421a75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a75 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a75)
  store %struct.Memory* %call_421a75, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 421a78	 Bytes: 3
  %loadMem_421a78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a78 = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a78)
  store %struct.Memory* %call_421a78, %struct.Memory** %MEMORY

  ; Code: jge .L_421a99	 RIP: 421a7b	 Bytes: 6
  %loadMem_421a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a7b = call %struct.Memory* @routine_jge_.L_421a99(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a7b, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_421a7b, %struct.Memory** %MEMORY

  %loadBr_421a7b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421a7b = icmp eq i8 %loadBr_421a7b, 1
  br i1 %cmpBr_421a7b, label %block_.L_421a99, label %block_421a81

block_421a81:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 421a81	 Bytes: 3
  %loadMem_421a81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a81 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a81)
  store %struct.Memory* %call_421a81, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 421a84	 Bytes: 6
  %loadMem_421a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a84 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a84)
  store %struct.Memory* %call_421a84, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 421a8a	 Bytes: 3
  %loadMem_421a8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a8a = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a8a)
  store %struct.Memory* %call_421a8a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 421a8d	 Bytes: 6
  %loadMem_421a8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a8d = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a8d)
  store %struct.Memory* %call_421a8d, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421a93	 Bytes: 3
  %loadMem_421a93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a93 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a93)
  store %struct.Memory* %call_421a93, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 421a96	 Bytes: 3
  %loadMem_421a96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a96 = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a96)
  store %struct.Memory* %call_421a96, %struct.Memory** %MEMORY

  ; Code: .L_421a99:	 RIP: 421a99	 Bytes: 0
  br label %block_.L_421a99
block_.L_421a99:

  ; Code: jmpq .L_421a9e	 RIP: 421a99	 Bytes: 5
  %loadMem_421a99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a99 = call %struct.Memory* @routine_jmpq_.L_421a9e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a99, i64 5, i64 5)
  store %struct.Memory* %call_421a99, %struct.Memory** %MEMORY

  br label %block_.L_421a9e

  ; Code: .L_421a9e:	 RIP: 421a9e	 Bytes: 0
block_.L_421a9e:

  ; Code: jmpq .L_421aa3	 RIP: 421a9e	 Bytes: 5
  %loadMem_421a9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421a9e = call %struct.Memory* @routine_jmpq_.L_421aa3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421a9e, i64 5, i64 5)
  store %struct.Memory* %call_421a9e, %struct.Memory** %MEMORY

  br label %block_.L_421aa3

  ; Code: .L_421aa3:	 RIP: 421aa3	 Bytes: 0
block_.L_421aa3:

  ; Code: jmpq .L_421aa8	 RIP: 421aa3	 Bytes: 5
  %loadMem_421aa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421aa3 = call %struct.Memory* @routine_jmpq_.L_421aa8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421aa3, i64 5, i64 5)
  store %struct.Memory* %call_421aa3, %struct.Memory** %MEMORY

  br label %block_.L_421aa8

  ; Code: .L_421aa8:	 RIP: 421aa8	 Bytes: 0
block_.L_421aa8:

  ; Code: jmpq .L_421aad	 RIP: 421aa8	 Bytes: 5
  %loadMem_421aa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421aa8 = call %struct.Memory* @routine_jmpq_.L_421aad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421aa8, i64 5, i64 5)
  store %struct.Memory* %call_421aa8, %struct.Memory** %MEMORY

  br label %block_.L_421aad

  ; Code: .L_421aad:	 RIP: 421aad	 Bytes: 0
block_.L_421aad:

  ; Code: movl -0xa8(%rbp), %eax	 RIP: 421aad	 Bytes: 6
  %loadMem_421aad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421aad = call %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421aad)
  store %struct.Memory* %call_421aad, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb8(%rbp)	 RIP: 421ab3	 Bytes: 6
  %loadMem_421ab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ab3 = call %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ab3)
  store %struct.Memory* %call_421ab3, %struct.Memory** %MEMORY

  ; Code: movl -0xac(%rbp), %eax	 RIP: 421ab9	 Bytes: 6
  %loadMem_421ab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ab9 = call %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ab9)
  store %struct.Memory* %call_421ab9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb4(%rbp)	 RIP: 421abf	 Bytes: 6
  %loadMem_421abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421abf = call %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421abf)
  store %struct.Memory* %call_421abf, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc0(%rbp)	 RIP: 421ac5	 Bytes: 10
  %loadMem_421ac5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ac5 = call %struct.Memory* @routine_movl__0x0__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ac5)
  store %struct.Memory* %call_421ac5, %struct.Memory** %MEMORY

  ; Code: .L_421acf:	 RIP: 421acf	 Bytes: 0
  br label %block_.L_421acf
block_.L_421acf:

  ; Code: cmpl $0x4, -0xc0(%rbp)	 RIP: 421acf	 Bytes: 7
  %loadMem_421acf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421acf = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421acf)
  store %struct.Memory* %call_421acf, %struct.Memory** %MEMORY

  ; Code: jge .L_421c8d	 RIP: 421ad6	 Bytes: 6
  %loadMem_421ad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ad6 = call %struct.Memory* @routine_jge_.L_421c8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ad6, i8* %BRANCH_TAKEN, i64 439, i64 6, i64 6)
  store %struct.Memory* %call_421ad6, %struct.Memory** %MEMORY

  %loadBr_421ad6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421ad6 = icmp eq i8 %loadBr_421ad6, 1
  br i1 %cmpBr_421ad6, label %block_.L_421c8d, label %block_421adc

block_421adc:
  ; Code: movl -0xb8(%rbp), %eax	 RIP: 421adc	 Bytes: 6
  %loadMem_421adc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421adc = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421adc)
  store %struct.Memory* %call_421adc, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 421ae2	 Bytes: 7
  %loadMem_421ae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ae2 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ae2)
  store %struct.Memory* %call_421ae2, %struct.Memory** %MEMORY

  ; Code: addl 0x6cb7a0(,%rcx,4), %eax	 RIP: 421ae9	 Bytes: 7
  %loadMem_421ae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ae9 = call %struct.Memory* @routine_addl_0x6cb7a0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ae9)
  store %struct.Memory* %call_421ae9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 421af0	 Bytes: 3
  %loadMem_421af0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421af0 = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421af0)
  store %struct.Memory* %call_421af0, %struct.Memory** %MEMORY

  ; Code: movl -0xb4(%rbp), %eax	 RIP: 421af3	 Bytes: 6
  %loadMem_421af3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421af3 = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421af3)
  store %struct.Memory* %call_421af3, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 421af9	 Bytes: 7
  %loadMem_421af9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421af9 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421af9)
  store %struct.Memory* %call_421af9, %struct.Memory** %MEMORY

  ; Code: addl 0x6cb7b0(,%rcx,4), %eax	 RIP: 421b00	 Bytes: 7
  %loadMem_421b00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b00 = call %struct.Memory* @routine_addl_0x6cb7b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b00)
  store %struct.Memory* %call_421b00, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x64(%rbp)	 RIP: 421b07	 Bytes: 3
  %loadMem_421b07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b07 = call %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b07)
  store %struct.Memory* %call_421b07, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 421b0a	 Bytes: 3
  %loadMem_421b0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b0a = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b0a)
  store %struct.Memory* %call_421b0a, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 421b0d	 Bytes: 6
  %loadMem_421b0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b0d = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b0d)
  store %struct.Memory* %call_421b0d, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 421b13	 Bytes: 2
  %loadMem_421b13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b13 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b13)
  store %struct.Memory* %call_421b13, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 421b15	 Bytes: 5
  %loadMem1_421b15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_421b15 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_421b15, i64 -133909, i64 5, i64 5)
  store %struct.Memory* %call1_421b15, %struct.Memory** %MEMORY

  %loadMem2_421b15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_421b15 = load i64, i64* %3
  %call2_421b15 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_421b15, %struct.Memory* %loadMem2_421b15)
  store %struct.Memory* %call2_421b15, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 421b1a	 Bytes: 3
  %loadMem_421b1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b1a = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b1a)
  store %struct.Memory* %call_421b1a, %struct.Memory** %MEMORY

  ; Code: jg .L_421c74	 RIP: 421b1d	 Bytes: 6
  %loadMem_421b1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b1d = call %struct.Memory* @routine_jg_.L_421c74(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b1d, i8* %BRANCH_TAKEN, i64 343, i64 6, i64 6)
  store %struct.Memory* %call_421b1d, %struct.Memory** %MEMORY

  %loadBr_421b1d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421b1d = icmp eq i8 %loadBr_421b1d, 1
  br i1 %cmpBr_421b1d, label %block_.L_421c74, label %block_421b23

block_421b23:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 421b23	 Bytes: 3
  %loadMem_421b23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b23 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b23)
  store %struct.Memory* %call_421b23, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 421b26	 Bytes: 6
  %loadMem_421b26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b26 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b26)
  store %struct.Memory* %call_421b26, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 421b2c	 Bytes: 2
  %loadMem_421b2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b2c = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b2c)
  store %struct.Memory* %call_421b2c, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 421b2e	 Bytes: 5
  %loadMem1_421b2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_421b2e = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_421b2e, i64 -133934, i64 5, i64 5)
  store %struct.Memory* %call1_421b2e, %struct.Memory** %MEMORY

  %loadMem2_421b2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_421b2e = load i64, i64* %3
  %call2_421b2e = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_421b2e, %struct.Memory* %loadMem2_421b2e)
  store %struct.Memory* %call2_421b2e, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 421b33	 Bytes: 3
  %loadMem_421b33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b33 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b33)
  store %struct.Memory* %call_421b33, %struct.Memory** %MEMORY

  ; Code: jg .L_421c74	 RIP: 421b36	 Bytes: 6
  %loadMem_421b36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b36 = call %struct.Memory* @routine_jg_.L_421c74(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b36, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_421b36, %struct.Memory** %MEMORY

  %loadBr_421b36 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421b36 = icmp eq i8 %loadBr_421b36, 1
  br i1 %cmpBr_421b36, label %block_.L_421c74, label %block_421b3c

block_421b3c:
  ; Code: movq 0x6d32d0, %rax	 RIP: 421b3c	 Bytes: 8
  %loadMem_421b3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b3c = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b3c)
  store %struct.Memory* %call_421b3c, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 421b44	 Bytes: 3
  %loadMem_421b44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b44 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b44)
  store %struct.Memory* %call_421b44, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 421b47	 Bytes: 6
  %loadMem_421b47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b47 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b47)
  store %struct.Memory* %call_421b47, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421b4d	 Bytes: 3
  %loadMem_421b4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b4d = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b4d)
  store %struct.Memory* %call_421b4d, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 421b50	 Bytes: 3
  %loadMem_421b50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b50 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b50)
  store %struct.Memory* %call_421b50, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 421b53	 Bytes: 4
  %loadMem_421b53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b53 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b53)
  store %struct.Memory* %call_421b53, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 421b57	 Bytes: 3
  %loadMem_421b57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b57 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b57)
  store %struct.Memory* %call_421b57, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 421b5a	 Bytes: 6
  %loadMem_421b5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b5a = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b5a)
  store %struct.Memory* %call_421b5a, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421b60	 Bytes: 3
  %loadMem_421b60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b60 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b60)
  store %struct.Memory* %call_421b60, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 421b63	 Bytes: 3
  %loadMem_421b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b63 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b63)
  store %struct.Memory* %call_421b63, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 421b66	 Bytes: 4
  %loadMem_421b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b66 = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b66)
  store %struct.Memory* %call_421b66, %struct.Memory** %MEMORY

  ; Code: jne .L_421c6f	 RIP: 421b6a	 Bytes: 6
  %loadMem_421b6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b6a = call %struct.Memory* @routine_jne_.L_421c6f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b6a, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_421b6a, %struct.Memory** %MEMORY

  %loadBr_421b6a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421b6a = icmp eq i8 %loadBr_421b6a, 1
  br i1 %cmpBr_421b6a, label %block_.L_421c6f, label %block_421b70

block_421b70:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 421b70	 Bytes: 6
  %loadMem_421b70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b70 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b70)
  store %struct.Memory* %call_421b70, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 421b76	 Bytes: 8
  %loadMem_421b76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b76 = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b76)
  store %struct.Memory* %call_421b76, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 421b7e	 Bytes: 3
  %loadMem_421b7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b7e = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b7e)
  store %struct.Memory* %call_421b7e, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 421b81	 Bytes: 6
  %loadMem_421b81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b81 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b81)
  store %struct.Memory* %call_421b81, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x150(%rbp)	 RIP: 421b87	 Bytes: 7
  %loadMem_421b87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b87 = call %struct.Memory* @routine_movq__rcx__MINUS0x150__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b87)
  store %struct.Memory* %call_421b87, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 421b8e	 Bytes: 2
  %loadMem_421b8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b8e = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b8e)
  store %struct.Memory* %call_421b8e, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 421b90	 Bytes: 2
  %loadMem_421b90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b90 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b90)
  store %struct.Memory* %call_421b90, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 421b92	 Bytes: 6
  %loadMem_421b92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b92 = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b92)
  store %struct.Memory* %call_421b92, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 421b98	 Bytes: 3
  %loadMem_421b98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b98 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b98)
  store %struct.Memory* %call_421b98, %struct.Memory** %MEMORY

  ; Code: movq -0x150(%rbp), %r8	 RIP: 421b9b	 Bytes: 7
  %loadMem_421b9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421b9b = call %struct.Memory* @routine_movq_MINUS0x150__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421b9b)
  store %struct.Memory* %call_421b9b, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 421ba2	 Bytes: 4
  %loadMem_421ba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ba2 = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ba2)
  store %struct.Memory* %call_421ba2, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 421ba6	 Bytes: 8
  %loadMem_421ba6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ba6 = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ba6)
  store %struct.Memory* %call_421ba6, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 421bae	 Bytes: 3
  %loadMem_421bae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bae = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bae)
  store %struct.Memory* %call_421bae, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 421bb1	 Bytes: 6
  %loadMem_421bb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bb1 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bb1)
  store %struct.Memory* %call_421bb1, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 421bb7	 Bytes: 2
  %loadMem_421bb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bb7 = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bb7)
  store %struct.Memory* %call_421bb7, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 421bb9	 Bytes: 6
  %loadMem_421bb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bb9 = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bb9)
  store %struct.Memory* %call_421bb9, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 421bbf	 Bytes: 3
  %loadMem_421bbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bbf = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bbf)
  store %struct.Memory* %call_421bbf, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 421bc2	 Bytes: 4
  %loadMem_421bc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bc2 = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bc2)
  store %struct.Memory* %call_421bc2, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 421bc6	 Bytes: 3
  %loadMem_421bc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bc6 = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bc6)
  store %struct.Memory* %call_421bc6, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 421bc9	 Bytes: 3
  %loadMem_421bc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bc9 = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bc9)
  store %struct.Memory* %call_421bc9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 421bcc	 Bytes: 3
  %loadMem_421bcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bcc = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bcc)
  store %struct.Memory* %call_421bcc, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 421bcf	 Bytes: 4
  %loadMem_421bcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bcf = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bcf)
  store %struct.Memory* %call_421bcf, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 421bd3	 Bytes: 4
  %loadMem_421bd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bd3 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bd3)
  store %struct.Memory* %call_421bd3, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 421bd7	 Bytes: 4
  %loadMem_421bd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bd7 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bd7)
  store %struct.Memory* %call_421bd7, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 421bdb	 Bytes: 6
  %loadMem_421bdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bdb = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bdb)
  store %struct.Memory* %call_421bdb, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 421be1	 Bytes: 7
  %loadMem_421be1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421be1 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421be1)
  store %struct.Memory* %call_421be1, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 421be8	 Bytes: 7
  %loadMem_421be8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421be8 = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421be8)
  store %struct.Memory* %call_421be8, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421bef	 Bytes: 3
  %loadMem_421bef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bef = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bef)
  store %struct.Memory* %call_421bef, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 421bf2	 Bytes: 4
  %loadMem_421bf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bf2 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bf2)
  store %struct.Memory* %call_421bf2, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 421bf6	 Bytes: 4
  %loadMem_421bf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bf6 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bf6)
  store %struct.Memory* %call_421bf6, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 421bfa	 Bytes: 3
  %loadMem_421bfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bfa = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bfa)
  store %struct.Memory* %call_421bfa, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 421bfd	 Bytes: 3
  %loadMem_421bfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421bfd = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421bfd)
  store %struct.Memory* %call_421bfd, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 421c00	 Bytes: 5
  %loadMem_421c00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c00 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c00)
  store %struct.Memory* %call_421c00, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 421c05	 Bytes: 5
  %loadMem_421c05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c05 = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c05)
  store %struct.Memory* %call_421c05, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 421c0a	 Bytes: 4
  %loadMem_421c0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c0a = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c0a)
  store %struct.Memory* %call_421c0a, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 421c0e	 Bytes: 5
  %loadMem1_421c0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_421c0e = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_421c0e, i64 -5982, i64 5, i64 5)
  store %struct.Memory* %call1_421c0e, %struct.Memory** %MEMORY

  %loadMem2_421c0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_421c0e = load i64, i64* %3
  %call2_421c0e = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_421c0e, %struct.Memory* %loadMem2_421c0e)
  store %struct.Memory* %call2_421c0e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 421c13	 Bytes: 3
  %loadMem_421c13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c13 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c13)
  store %struct.Memory* %call_421c13, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421c16	 Bytes: 3
  %loadMem_421c16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c16 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c16)
  store %struct.Memory* %call_421c16, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 421c19	 Bytes: 8
  %loadMem_421c19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c19 = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c19)
  store %struct.Memory* %call_421c19, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 421c21	 Bytes: 3
  %loadMem_421c21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c21 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c21)
  store %struct.Memory* %call_421c21, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 421c24	 Bytes: 6
  %loadMem_421c24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c24 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c24)
  store %struct.Memory* %call_421c24, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421c2a	 Bytes: 3
  %loadMem_421c2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c2a = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c2a)
  store %struct.Memory* %call_421c2a, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 421c2d	 Bytes: 3
  %loadMem_421c2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c2d = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c2d)
  store %struct.Memory* %call_421c2d, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 421c30	 Bytes: 4
  %loadMem_421c30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c30 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c30)
  store %struct.Memory* %call_421c30, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 421c34	 Bytes: 3
  %loadMem_421c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c34 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c34)
  store %struct.Memory* %call_421c34, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 421c37	 Bytes: 6
  %loadMem_421c37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c37 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c37)
  store %struct.Memory* %call_421c37, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421c3d	 Bytes: 3
  %loadMem_421c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c3d = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c3d)
  store %struct.Memory* %call_421c3d, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 421c40	 Bytes: 3
  %loadMem_421c40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c40 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c40)
  store %struct.Memory* %call_421c40, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 421c43	 Bytes: 3
  %loadMem_421c43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c43 = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c43)
  store %struct.Memory* %call_421c43, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421c46	 Bytes: 3
  %loadMem_421c46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c46 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c46)
  store %struct.Memory* %call_421c46, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 421c49	 Bytes: 3
  %loadMem_421c49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c49 = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c49)
  store %struct.Memory* %call_421c49, %struct.Memory** %MEMORY

  ; Code: jge .L_421c6a	 RIP: 421c4c	 Bytes: 6
  %loadMem_421c4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c4c = call %struct.Memory* @routine_jge_.L_421c6a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c4c, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_421c4c, %struct.Memory** %MEMORY

  %loadBr_421c4c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421c4c = icmp eq i8 %loadBr_421c4c, 1
  br i1 %cmpBr_421c4c, label %block_.L_421c6a, label %block_421c52

block_421c52:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 421c52	 Bytes: 3
  %loadMem_421c52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c52 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c52)
  store %struct.Memory* %call_421c52, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 421c55	 Bytes: 6
  %loadMem_421c55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c55 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c55)
  store %struct.Memory* %call_421c55, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 421c5b	 Bytes: 3
  %loadMem_421c5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c5b = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c5b)
  store %struct.Memory* %call_421c5b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 421c5e	 Bytes: 6
  %loadMem_421c5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c5e = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c5e)
  store %struct.Memory* %call_421c5e, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421c64	 Bytes: 3
  %loadMem_421c64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c64 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c64)
  store %struct.Memory* %call_421c64, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 421c67	 Bytes: 3
  %loadMem_421c67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c67 = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c67)
  store %struct.Memory* %call_421c67, %struct.Memory** %MEMORY

  ; Code: .L_421c6a:	 RIP: 421c6a	 Bytes: 0
  br label %block_.L_421c6a
block_.L_421c6a:

  ; Code: jmpq .L_421c6f	 RIP: 421c6a	 Bytes: 5
  %loadMem_421c6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c6a = call %struct.Memory* @routine_jmpq_.L_421c6f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c6a, i64 5, i64 5)
  store %struct.Memory* %call_421c6a, %struct.Memory** %MEMORY

  br label %block_.L_421c6f

  ; Code: .L_421c6f:	 RIP: 421c6f	 Bytes: 0
block_.L_421c6f:

  ; Code: jmpq .L_421c74	 RIP: 421c6f	 Bytes: 5
  %loadMem_421c6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c6f = call %struct.Memory* @routine_jmpq_.L_421c74(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c6f, i64 5, i64 5)
  store %struct.Memory* %call_421c6f, %struct.Memory** %MEMORY

  br label %block_.L_421c74

  ; Code: .L_421c74:	 RIP: 421c74	 Bytes: 0
block_.L_421c74:

  ; Code: jmpq .L_421c79	 RIP: 421c74	 Bytes: 5
  %loadMem_421c74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c74 = call %struct.Memory* @routine_jmpq_.L_421c79(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c74, i64 5, i64 5)
  store %struct.Memory* %call_421c74, %struct.Memory** %MEMORY

  br label %block_.L_421c79

  ; Code: .L_421c79:	 RIP: 421c79	 Bytes: 0
block_.L_421c79:

  ; Code: movl -0xc0(%rbp), %eax	 RIP: 421c79	 Bytes: 6
  %loadMem_421c79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c79 = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c79)
  store %struct.Memory* %call_421c79, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 421c7f	 Bytes: 3
  %loadMem_421c7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c7f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c7f)
  store %struct.Memory* %call_421c7f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc0(%rbp)	 RIP: 421c82	 Bytes: 6
  %loadMem_421c82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c82 = call %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c82)
  store %struct.Memory* %call_421c82, %struct.Memory** %MEMORY

  ; Code: jmpq .L_421acf	 RIP: 421c88	 Bytes: 5
  %loadMem_421c88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c88 = call %struct.Memory* @routine_jmpq_.L_421acf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c88, i64 -441, i64 5)
  store %struct.Memory* %call_421c88, %struct.Memory** %MEMORY

  br label %block_.L_421acf

  ; Code: .L_421c8d:	 RIP: 421c8d	 Bytes: 0
block_.L_421c8d:

  ; Code: movswl -0x22(%rbp), %eax	 RIP: 421c8d	 Bytes: 4
  %loadMem_421c8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c8d = call %struct.Memory* @routine_movswl_MINUS0x22__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c8d)
  store %struct.Memory* %call_421c8d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 421c91	 Bytes: 3
  %loadMem_421c91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c91 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c91)
  store %struct.Memory* %call_421c91, %struct.Memory** %MEMORY

  ; Code: jle .L_421cfe	 RIP: 421c94	 Bytes: 6
  %loadMem_421c94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c94 = call %struct.Memory* @routine_jle_.L_421cfe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c94, i8* %BRANCH_TAKEN, i64 106, i64 6, i64 6)
  store %struct.Memory* %call_421c94, %struct.Memory** %MEMORY

  %loadBr_421c94 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421c94 = icmp eq i8 %loadBr_421c94, 1
  br i1 %cmpBr_421c94, label %block_.L_421cfe, label %block_421c9a

block_421c9a:
  ; Code: movl -0x50(%rbp), %eax	 RIP: 421c9a	 Bytes: 3
  %loadMem_421c9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c9a = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c9a)
  store %struct.Memory* %call_421c9a, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd480, %eax	 RIP: 421c9d	 Bytes: 7
  %loadMem_421c9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421c9d = call %struct.Memory* @routine_subl_0x6cd480___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421c9d)
  store %struct.Memory* %call_421c9d, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 421ca4	 Bytes: 4
  %loadMem_421ca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ca4 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ca4)
  store %struct.Memory* %call_421ca4, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6cd480, %xmm1	 RIP: 421ca8	 Bytes: 9
  %loadMem_421ca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ca8 = call %struct.Memory* @routine_cvtsi2ssl_0x6cd480___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ca8)
  store %struct.Memory* %call_421ca8, %struct.Memory** %MEMORY

  ; Code: mulss -0xd4(%rbp), %xmm1	 RIP: 421cb1	 Bytes: 8
  %loadMem_421cb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421cb1 = call %struct.Memory* @routine_mulss_MINUS0xd4__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421cb1)
  store %struct.Memory* %call_421cb1, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 421cb9	 Bytes: 3
  %loadMem_421cb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421cb9 = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421cb9)
  store %struct.Memory* %call_421cb9, %struct.Memory** %MEMORY

  ; Code: jbe .L_421cc7	 RIP: 421cbc	 Bytes: 6
  %loadMem_421cbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421cbc = call %struct.Memory* @routine_jbe_.L_421cc7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421cbc, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_421cbc, %struct.Memory** %MEMORY

  %loadBr_421cbc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421cbc = icmp eq i8 %loadBr_421cbc, 1
  br i1 %cmpBr_421cbc, label %block_.L_421cc7, label %block_421cc2

block_421cc2:
  ; Code: jmpq .L_422f0e	 RIP: 421cc2	 Bytes: 5
  %loadMem_421cc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421cc2 = call %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421cc2, i64 4684, i64 5)
  store %struct.Memory* %call_421cc2, %struct.Memory** %MEMORY

  br label %block_.L_422f0e

  ; Code: .L_421cc7:	 RIP: 421cc7	 Bytes: 0
block_.L_421cc7:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 421cc7	 Bytes: 3
  %loadMem_421cc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421cc7 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421cc7)
  store %struct.Memory* %call_421cc7, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd480, %eax	 RIP: 421cca	 Bytes: 7
  %loadMem_421cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421cca = call %struct.Memory* @routine_subl_0x6cd480___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421cca)
  store %struct.Memory* %call_421cca, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 421cd1	 Bytes: 4
  %loadMem_421cd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421cd1 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421cd1)
  store %struct.Memory* %call_421cd1, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6cd480, %xmm1	 RIP: 421cd5	 Bytes: 9
  %loadMem_421cd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421cd5 = call %struct.Memory* @routine_cvtsi2ssl_0x6cd480___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421cd5)
  store %struct.Memory* %call_421cd5, %struct.Memory** %MEMORY

  ; Code: mulss -0xd0(%rbp), %xmm1	 RIP: 421cde	 Bytes: 8
  %loadMem_421cde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421cde = call %struct.Memory* @routine_mulss_MINUS0xd0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421cde)
  store %struct.Memory* %call_421cde, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 421ce6	 Bytes: 3
  %loadMem_421ce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ce6 = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ce6)
  store %struct.Memory* %call_421ce6, %struct.Memory** %MEMORY

  ; Code: jbe .L_421cf4	 RIP: 421ce9	 Bytes: 6
  %loadMem_421ce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ce9 = call %struct.Memory* @routine_jbe_.L_421cf4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ce9, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_421ce9, %struct.Memory** %MEMORY

  %loadBr_421ce9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421ce9 = icmp eq i8 %loadBr_421ce9, 1
  br i1 %cmpBr_421ce9, label %block_.L_421cf4, label %block_421cef

block_421cef:
  ; Code: jmpq .L_422cbe	 RIP: 421cef	 Bytes: 5
  %loadMem_421cef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421cef = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421cef, i64 4047, i64 5)
  store %struct.Memory* %call_421cef, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_421cf4:	 RIP: 421cf4	 Bytes: 0
block_.L_421cf4:

  ; Code: jmpq .L_421cf9	 RIP: 421cf4	 Bytes: 5
  %loadMem_421cf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421cf4 = call %struct.Memory* @routine_jmpq_.L_421cf9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421cf4, i64 5, i64 5)
  store %struct.Memory* %call_421cf4, %struct.Memory** %MEMORY

  br label %block_.L_421cf9

  ; Code: .L_421cf9:	 RIP: 421cf9	 Bytes: 0
block_.L_421cf9:

  ; Code: jmpq .L_421dd5	 RIP: 421cf9	 Bytes: 5
  %loadMem_421cf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421cf9 = call %struct.Memory* @routine_jmpq_.L_421dd5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421cf9, i64 220, i64 5)
  store %struct.Memory* %call_421cf9, %struct.Memory** %MEMORY

  br label %block_.L_421dd5

  ; Code: .L_421cfe:	 RIP: 421cfe	 Bytes: 0
block_.L_421cfe:

  ; Code: cmpl $0x1, -0x34(%rbp)	 RIP: 421cfe	 Bytes: 4
  %loadMem_421cfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421cfe = call %struct.Memory* @routine_cmpl__0x1__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421cfe)
  store %struct.Memory* %call_421cfe, %struct.Memory** %MEMORY

  ; Code: jle .L_421d6c	 RIP: 421d02	 Bytes: 6
  %loadMem_421d02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d02 = call %struct.Memory* @routine_jle_.L_421d6c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d02, i8* %BRANCH_TAKEN, i64 106, i64 6, i64 6)
  store %struct.Memory* %call_421d02, %struct.Memory** %MEMORY

  %loadBr_421d02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421d02 = icmp eq i8 %loadBr_421d02, 1
  br i1 %cmpBr_421d02, label %block_.L_421d6c, label %block_421d08

block_421d08:
  ; Code: movl -0x50(%rbp), %eax	 RIP: 421d08	 Bytes: 3
  %loadMem_421d08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d08 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d08)
  store %struct.Memory* %call_421d08, %struct.Memory** %MEMORY

  ; Code: subl 0x72369c, %eax	 RIP: 421d0b	 Bytes: 7
  %loadMem_421d0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d0b = call %struct.Memory* @routine_subl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d0b)
  store %struct.Memory* %call_421d0b, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 421d12	 Bytes: 4
  %loadMem_421d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d12 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d12)
  store %struct.Memory* %call_421d12, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x72369c, %xmm1	 RIP: 421d16	 Bytes: 9
  %loadMem_421d16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d16 = call %struct.Memory* @routine_cvtsi2ssl_0x72369c___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d16)
  store %struct.Memory* %call_421d16, %struct.Memory** %MEMORY

  ; Code: mulss -0xd4(%rbp), %xmm1	 RIP: 421d1f	 Bytes: 8
  %loadMem_421d1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d1f = call %struct.Memory* @routine_mulss_MINUS0xd4__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d1f)
  store %struct.Memory* %call_421d1f, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 421d27	 Bytes: 3
  %loadMem_421d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d27 = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d27)
  store %struct.Memory* %call_421d27, %struct.Memory** %MEMORY

  ; Code: jbe .L_421d35	 RIP: 421d2a	 Bytes: 6
  %loadMem_421d2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d2a = call %struct.Memory* @routine_jbe_.L_421d35(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d2a, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_421d2a, %struct.Memory** %MEMORY

  %loadBr_421d2a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421d2a = icmp eq i8 %loadBr_421d2a, 1
  br i1 %cmpBr_421d2a, label %block_.L_421d35, label %block_421d30

block_421d30:
  ; Code: jmpq .L_422f0e	 RIP: 421d30	 Bytes: 5
  %loadMem_421d30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d30 = call %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d30, i64 4574, i64 5)
  store %struct.Memory* %call_421d30, %struct.Memory** %MEMORY

  br label %block_.L_422f0e

  ; Code: .L_421d35:	 RIP: 421d35	 Bytes: 0
block_.L_421d35:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 421d35	 Bytes: 3
  %loadMem_421d35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d35 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d35)
  store %struct.Memory* %call_421d35, %struct.Memory** %MEMORY

  ; Code: subl 0x72369c, %eax	 RIP: 421d38	 Bytes: 7
  %loadMem_421d38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d38 = call %struct.Memory* @routine_subl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d38)
  store %struct.Memory* %call_421d38, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 421d3f	 Bytes: 4
  %loadMem_421d3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d3f = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d3f)
  store %struct.Memory* %call_421d3f, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x72369c, %xmm1	 RIP: 421d43	 Bytes: 9
  %loadMem_421d43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d43 = call %struct.Memory* @routine_cvtsi2ssl_0x72369c___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d43)
  store %struct.Memory* %call_421d43, %struct.Memory** %MEMORY

  ; Code: mulss -0xd0(%rbp), %xmm1	 RIP: 421d4c	 Bytes: 8
  %loadMem_421d4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d4c = call %struct.Memory* @routine_mulss_MINUS0xd0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d4c)
  store %struct.Memory* %call_421d4c, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 421d54	 Bytes: 3
  %loadMem_421d54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d54 = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d54)
  store %struct.Memory* %call_421d54, %struct.Memory** %MEMORY

  ; Code: jbe .L_421d62	 RIP: 421d57	 Bytes: 6
  %loadMem_421d57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d57 = call %struct.Memory* @routine_jbe_.L_421d62(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d57, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_421d57, %struct.Memory** %MEMORY

  %loadBr_421d57 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421d57 = icmp eq i8 %loadBr_421d57, 1
  br i1 %cmpBr_421d57, label %block_.L_421d62, label %block_421d5d

block_421d5d:
  ; Code: jmpq .L_422cbe	 RIP: 421d5d	 Bytes: 5
  %loadMem_421d5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d5d = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d5d, i64 3937, i64 5)
  store %struct.Memory* %call_421d5d, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_421d62:	 RIP: 421d62	 Bytes: 0
block_.L_421d62:

  ; Code: jmpq .L_421d67	 RIP: 421d62	 Bytes: 5
  %loadMem_421d62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d62 = call %struct.Memory* @routine_jmpq_.L_421d67(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d62, i64 5, i64 5)
  store %struct.Memory* %call_421d62, %struct.Memory** %MEMORY

  br label %block_.L_421d67

  ; Code: .L_421d67:	 RIP: 421d67	 Bytes: 0
block_.L_421d67:

  ; Code: jmpq .L_421dd0	 RIP: 421d67	 Bytes: 5
  %loadMem_421d67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d67 = call %struct.Memory* @routine_jmpq_.L_421dd0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d67, i64 105, i64 5)
  store %struct.Memory* %call_421d67, %struct.Memory** %MEMORY

  br label %block_.L_421dd0

  ; Code: .L_421d6c:	 RIP: 421d6c	 Bytes: 0
block_.L_421d6c:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 421d6c	 Bytes: 3
  %loadMem_421d6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d6c = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d6c)
  store %struct.Memory* %call_421d6c, %struct.Memory** %MEMORY

  ; Code: subl 0x6d1900, %eax	 RIP: 421d6f	 Bytes: 7
  %loadMem_421d6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d6f = call %struct.Memory* @routine_subl_0x6d1900___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d6f)
  store %struct.Memory* %call_421d6f, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 421d76	 Bytes: 4
  %loadMem_421d76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d76 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d76)
  store %struct.Memory* %call_421d76, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6d1900, %xmm1	 RIP: 421d7a	 Bytes: 9
  %loadMem_421d7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d7a = call %struct.Memory* @routine_cvtsi2ssl_0x6d1900___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d7a)
  store %struct.Memory* %call_421d7a, %struct.Memory** %MEMORY

  ; Code: mulss -0xd4(%rbp), %xmm1	 RIP: 421d83	 Bytes: 8
  %loadMem_421d83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d83 = call %struct.Memory* @routine_mulss_MINUS0xd4__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d83)
  store %struct.Memory* %call_421d83, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 421d8b	 Bytes: 3
  %loadMem_421d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d8b = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d8b)
  store %struct.Memory* %call_421d8b, %struct.Memory** %MEMORY

  ; Code: jbe .L_421d99	 RIP: 421d8e	 Bytes: 6
  %loadMem_421d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d8e = call %struct.Memory* @routine_jbe_.L_421d99(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d8e, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_421d8e, %struct.Memory** %MEMORY

  %loadBr_421d8e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421d8e = icmp eq i8 %loadBr_421d8e, 1
  br i1 %cmpBr_421d8e, label %block_.L_421d99, label %block_421d94

block_421d94:
  ; Code: jmpq .L_422f0e	 RIP: 421d94	 Bytes: 5
  %loadMem_421d94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d94 = call %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d94, i64 4474, i64 5)
  store %struct.Memory* %call_421d94, %struct.Memory** %MEMORY

  br label %block_.L_422f0e

  ; Code: .L_421d99:	 RIP: 421d99	 Bytes: 0
block_.L_421d99:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 421d99	 Bytes: 3
  %loadMem_421d99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d99 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d99)
  store %struct.Memory* %call_421d99, %struct.Memory** %MEMORY

  ; Code: subl 0x6d1900, %eax	 RIP: 421d9c	 Bytes: 7
  %loadMem_421d9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421d9c = call %struct.Memory* @routine_subl_0x6d1900___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421d9c)
  store %struct.Memory* %call_421d9c, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 421da3	 Bytes: 4
  %loadMem_421da3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421da3 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421da3)
  store %struct.Memory* %call_421da3, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6d1900, %xmm1	 RIP: 421da7	 Bytes: 9
  %loadMem_421da7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421da7 = call %struct.Memory* @routine_cvtsi2ssl_0x6d1900___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421da7)
  store %struct.Memory* %call_421da7, %struct.Memory** %MEMORY

  ; Code: mulss -0xd0(%rbp), %xmm1	 RIP: 421db0	 Bytes: 8
  %loadMem_421db0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421db0 = call %struct.Memory* @routine_mulss_MINUS0xd0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421db0)
  store %struct.Memory* %call_421db0, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 421db8	 Bytes: 3
  %loadMem_421db8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421db8 = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421db8)
  store %struct.Memory* %call_421db8, %struct.Memory** %MEMORY

  ; Code: jbe .L_421dc6	 RIP: 421dbb	 Bytes: 6
  %loadMem_421dbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421dbb = call %struct.Memory* @routine_jbe_.L_421dc6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421dbb, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_421dbb, %struct.Memory** %MEMORY

  %loadBr_421dbb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421dbb = icmp eq i8 %loadBr_421dbb, 1
  br i1 %cmpBr_421dbb, label %block_.L_421dc6, label %block_421dc1

block_421dc1:
  ; Code: jmpq .L_422cbe	 RIP: 421dc1	 Bytes: 5
  %loadMem_421dc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421dc1 = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421dc1, i64 3837, i64 5)
  store %struct.Memory* %call_421dc1, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_421dc6:	 RIP: 421dc6	 Bytes: 0
block_.L_421dc6:

  ; Code: jmpq .L_421dcb	 RIP: 421dc6	 Bytes: 5
  %loadMem_421dc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421dc6 = call %struct.Memory* @routine_jmpq_.L_421dcb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421dc6, i64 5, i64 5)
  store %struct.Memory* %call_421dc6, %struct.Memory** %MEMORY

  br label %block_.L_421dcb

  ; Code: .L_421dcb:	 RIP: 421dcb	 Bytes: 0
block_.L_421dcb:

  ; Code: jmpq .L_421dd0	 RIP: 421dcb	 Bytes: 5
  %loadMem_421dcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421dcb = call %struct.Memory* @routine_jmpq_.L_421dd0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421dcb, i64 5, i64 5)
  store %struct.Memory* %call_421dcb, %struct.Memory** %MEMORY

  br label %block_.L_421dd0

  ; Code: .L_421dd0:	 RIP: 421dd0	 Bytes: 0
block_.L_421dd0:

  ; Code: jmpq .L_421dd5	 RIP: 421dd0	 Bytes: 5
  %loadMem_421dd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421dd0 = call %struct.Memory* @routine_jmpq_.L_421dd5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421dd0, i64 5, i64 5)
  store %struct.Memory* %call_421dd0, %struct.Memory** %MEMORY

  br label %block_.L_421dd5

  ; Code: .L_421dd5:	 RIP: 421dd5	 Bytes: 0
block_.L_421dd5:

  ; Code: cmpl $0x6, -0x34(%rbp)	 RIP: 421dd5	 Bytes: 4
  %loadMem_421dd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421dd5 = call %struct.Memory* @routine_cmpl__0x6__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421dd5)
  store %struct.Memory* %call_421dd5, %struct.Memory** %MEMORY

  ; Code: jle .L_421de4	 RIP: 421dd9	 Bytes: 6
  %loadMem_421dd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421dd9 = call %struct.Memory* @routine_jle_.L_421de4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421dd9, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_421dd9, %struct.Memory** %MEMORY

  %loadBr_421dd9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421dd9 = icmp eq i8 %loadBr_421dd9, 1
  br i1 %cmpBr_421dd9, label %block_.L_421de4, label %block_421ddf

block_421ddf:
  ; Code: jmpq .L_422cbe	 RIP: 421ddf	 Bytes: 5
  %loadMem_421ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ddf = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ddf, i64 3807, i64 5)
  store %struct.Memory* %call_421ddf, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_421de4:	 RIP: 421de4	 Bytes: 0
block_.L_421de4:

  ; Code: jmpq .L_421de9	 RIP: 421de4	 Bytes: 5
  %loadMem_421de4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421de4 = call %struct.Memory* @routine_jmpq_.L_421de9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421de4, i64 5, i64 5)
  store %struct.Memory* %call_421de4, %struct.Memory** %MEMORY

  br label %block_.L_421de9

  ; Code: .L_421de9:	 RIP: 421de9	 Bytes: 0
block_.L_421de9:

  ; Code: movl -0xa8(%rbp), %eax	 RIP: 421de9	 Bytes: 6
  %loadMem_421de9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421de9 = call %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421de9)
  store %struct.Memory* %call_421de9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb8(%rbp)	 RIP: 421def	 Bytes: 6
  %loadMem_421def = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421def = call %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421def)
  store %struct.Memory* %call_421def, %struct.Memory** %MEMORY

  ; Code: movl -0xac(%rbp), %eax	 RIP: 421df5	 Bytes: 6
  %loadMem_421df5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421df5 = call %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421df5)
  store %struct.Memory* %call_421df5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb4(%rbp)	 RIP: 421dfb	 Bytes: 6
  %loadMem_421dfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421dfb = call %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421dfb)
  store %struct.Memory* %call_421dfb, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0xbc(%rbp)	 RIP: 421e01	 Bytes: 10
  %loadMem_421e01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e01 = call %struct.Memory* @routine_movl__0x1__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e01)
  store %struct.Memory* %call_421e01, %struct.Memory** %MEMORY

  ; Code: .L_421e0b:	 RIP: 421e0b	 Bytes: 0
  br label %block_.L_421e0b
block_.L_421e0b:

  ; Code: movl $0x2, %eax	 RIP: 421e0b	 Bytes: 5
  %loadMem_421e0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e0b = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e0b)
  store %struct.Memory* %call_421e0b, %struct.Memory** %MEMORY

  ; Code: movl -0xbc(%rbp), %ecx	 RIP: 421e10	 Bytes: 6
  %loadMem_421e10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e10 = call %struct.Memory* @routine_movl_MINUS0xbc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e10)
  store %struct.Memory* %call_421e10, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %edx	 RIP: 421e16	 Bytes: 3
  %loadMem_421e16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e16 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e16)
  store %struct.Memory* %call_421e16, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x154(%rbp)	 RIP: 421e19	 Bytes: 6
  %loadMem_421e19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e19 = call %struct.Memory* @routine_movl__eax__MINUS0x154__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e19)
  store %struct.Memory* %call_421e19, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 421e1f	 Bytes: 2
  %loadMem_421e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e1f = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e1f)
  store %struct.Memory* %call_421e1f, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 421e21	 Bytes: 1
  %loadMem_421e21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e21 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e21)
  store %struct.Memory* %call_421e21, %struct.Memory** %MEMORY

  ; Code: movl -0x154(%rbp), %esi	 RIP: 421e22	 Bytes: 6
  %loadMem_421e22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e22 = call %struct.Memory* @routine_movl_MINUS0x154__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e22)
  store %struct.Memory* %call_421e22, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 421e28	 Bytes: 2
  %loadMem_421e28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e28 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e28)
  store %struct.Memory* %call_421e28, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 421e2a	 Bytes: 2
  %loadMem_421e2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e2a = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e2a)
  store %struct.Memory* %call_421e2a, %struct.Memory** %MEMORY

  ; Code: jg .L_422161	 RIP: 421e2c	 Bytes: 6
  %loadMem_421e2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e2c = call %struct.Memory* @routine_jg_.L_422161(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e2c, i8* %BRANCH_TAKEN, i64 821, i64 6, i64 6)
  store %struct.Memory* %call_421e2c, %struct.Memory** %MEMORY

  %loadBr_421e2c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421e2c = icmp eq i8 %loadBr_421e2c, 1
  br i1 %cmpBr_421e2c, label %block_.L_422161, label %block_421e32

block_421e32:
  ; Code: movl -0xbc(%rbp), %eax	 RIP: 421e32	 Bytes: 6
  %loadMem_421e32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e32 = call %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e32)
  store %struct.Memory* %call_421e32, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 421e38	 Bytes: 3
  %loadMem_421e38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e38 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e38)
  store %struct.Memory* %call_421e38, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 421e3b	 Bytes: 3
  %loadMem_421e3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e3b = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e3b)
  store %struct.Memory* %call_421e3b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb0(%rbp)	 RIP: 421e3e	 Bytes: 6
  %loadMem_421e3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e3e = call %struct.Memory* @routine_movl__eax__MINUS0xb0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e3e)
  store %struct.Memory* %call_421e3e, %struct.Memory** %MEMORY

  ; Code: movl -0xb8(%rbp), %eax	 RIP: 421e44	 Bytes: 6
  %loadMem_421e44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e44 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e44)
  store %struct.Memory* %call_421e44, %struct.Memory** %MEMORY

  ; Code: addl -0xb0(%rbp), %eax	 RIP: 421e4a	 Bytes: 6
  %loadMem_421e4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e4a = call %struct.Memory* @routine_addl_MINUS0xb0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e4a)
  store %struct.Memory* %call_421e4a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 421e50	 Bytes: 3
  %loadMem_421e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e50 = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e50)
  store %struct.Memory* %call_421e50, %struct.Memory** %MEMORY

  ; Code: movl -0xb4(%rbp), %eax	 RIP: 421e53	 Bytes: 6
  %loadMem_421e53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e53 = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e53)
  store %struct.Memory* %call_421e53, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x64(%rbp)	 RIP: 421e59	 Bytes: 3
  %loadMem_421e59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e59 = call %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e59)
  store %struct.Memory* %call_421e59, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 421e5c	 Bytes: 3
  %loadMem_421e5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e5c = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e5c)
  store %struct.Memory* %call_421e5c, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 421e5f	 Bytes: 6
  %loadMem_421e5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e5f = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e5f)
  store %struct.Memory* %call_421e5f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 421e65	 Bytes: 2
  %loadMem_421e65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e65 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e65)
  store %struct.Memory* %call_421e65, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 421e67	 Bytes: 5
  %loadMem1_421e67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_421e67 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_421e67, i64 -134759, i64 5, i64 5)
  store %struct.Memory* %call1_421e67, %struct.Memory** %MEMORY

  %loadMem2_421e67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_421e67 = load i64, i64* %3
  %call2_421e67 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_421e67, %struct.Memory* %loadMem2_421e67)
  store %struct.Memory* %call2_421e67, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 421e6c	 Bytes: 3
  %loadMem_421e6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e6c = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e6c)
  store %struct.Memory* %call_421e6c, %struct.Memory** %MEMORY

  ; Code: jg .L_421fc6	 RIP: 421e6f	 Bytes: 6
  %loadMem_421e6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e6f = call %struct.Memory* @routine_jg_.L_421fc6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e6f, i8* %BRANCH_TAKEN, i64 343, i64 6, i64 6)
  store %struct.Memory* %call_421e6f, %struct.Memory** %MEMORY

  %loadBr_421e6f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421e6f = icmp eq i8 %loadBr_421e6f, 1
  br i1 %cmpBr_421e6f, label %block_.L_421fc6, label %block_421e75

block_421e75:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 421e75	 Bytes: 3
  %loadMem_421e75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e75 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e75)
  store %struct.Memory* %call_421e75, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 421e78	 Bytes: 6
  %loadMem_421e78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e78 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e78)
  store %struct.Memory* %call_421e78, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 421e7e	 Bytes: 2
  %loadMem_421e7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e7e = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e7e)
  store %struct.Memory* %call_421e7e, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 421e80	 Bytes: 5
  %loadMem1_421e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_421e80 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_421e80, i64 -134784, i64 5, i64 5)
  store %struct.Memory* %call1_421e80, %struct.Memory** %MEMORY

  %loadMem2_421e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_421e80 = load i64, i64* %3
  %call2_421e80 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_421e80, %struct.Memory* %loadMem2_421e80)
  store %struct.Memory* %call2_421e80, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 421e85	 Bytes: 3
  %loadMem_421e85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e85 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e85)
  store %struct.Memory* %call_421e85, %struct.Memory** %MEMORY

  ; Code: jg .L_421fc6	 RIP: 421e88	 Bytes: 6
  %loadMem_421e88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e88 = call %struct.Memory* @routine_jg_.L_421fc6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e88, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_421e88, %struct.Memory** %MEMORY

  %loadBr_421e88 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421e88 = icmp eq i8 %loadBr_421e88, 1
  br i1 %cmpBr_421e88, label %block_.L_421fc6, label %block_421e8e

block_421e8e:
  ; Code: movq 0x6d32d0, %rax	 RIP: 421e8e	 Bytes: 8
  %loadMem_421e8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e8e = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e8e)
  store %struct.Memory* %call_421e8e, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 421e96	 Bytes: 3
  %loadMem_421e96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e96 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e96)
  store %struct.Memory* %call_421e96, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 421e99	 Bytes: 6
  %loadMem_421e99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e99 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e99)
  store %struct.Memory* %call_421e99, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421e9f	 Bytes: 3
  %loadMem_421e9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421e9f = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421e9f)
  store %struct.Memory* %call_421e9f, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 421ea2	 Bytes: 3
  %loadMem_421ea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ea2 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ea2)
  store %struct.Memory* %call_421ea2, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 421ea5	 Bytes: 4
  %loadMem_421ea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ea5 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ea5)
  store %struct.Memory* %call_421ea5, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 421ea9	 Bytes: 3
  %loadMem_421ea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ea9 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ea9)
  store %struct.Memory* %call_421ea9, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 421eac	 Bytes: 6
  %loadMem_421eac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421eac = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421eac)
  store %struct.Memory* %call_421eac, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421eb2	 Bytes: 3
  %loadMem_421eb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421eb2 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421eb2)
  store %struct.Memory* %call_421eb2, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 421eb5	 Bytes: 3
  %loadMem_421eb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421eb5 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421eb5)
  store %struct.Memory* %call_421eb5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 421eb8	 Bytes: 4
  %loadMem_421eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421eb8 = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421eb8)
  store %struct.Memory* %call_421eb8, %struct.Memory** %MEMORY

  ; Code: jne .L_421fc1	 RIP: 421ebc	 Bytes: 6
  %loadMem_421ebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ebc = call %struct.Memory* @routine_jne_.L_421fc1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ebc, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_421ebc, %struct.Memory** %MEMORY

  %loadBr_421ebc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421ebc = icmp eq i8 %loadBr_421ebc, 1
  br i1 %cmpBr_421ebc, label %block_.L_421fc1, label %block_421ec2

block_421ec2:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 421ec2	 Bytes: 6
  %loadMem_421ec2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ec2 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ec2)
  store %struct.Memory* %call_421ec2, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 421ec8	 Bytes: 8
  %loadMem_421ec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ec8 = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ec8)
  store %struct.Memory* %call_421ec8, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 421ed0	 Bytes: 3
  %loadMem_421ed0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ed0 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ed0)
  store %struct.Memory* %call_421ed0, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 421ed3	 Bytes: 6
  %loadMem_421ed3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ed3 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ed3)
  store %struct.Memory* %call_421ed3, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x160(%rbp)	 RIP: 421ed9	 Bytes: 7
  %loadMem_421ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ed9 = call %struct.Memory* @routine_movq__rcx__MINUS0x160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ed9)
  store %struct.Memory* %call_421ed9, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 421ee0	 Bytes: 2
  %loadMem_421ee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ee0 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ee0)
  store %struct.Memory* %call_421ee0, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 421ee2	 Bytes: 2
  %loadMem_421ee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ee2 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ee2)
  store %struct.Memory* %call_421ee2, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 421ee4	 Bytes: 6
  %loadMem_421ee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ee4 = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ee4)
  store %struct.Memory* %call_421ee4, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 421eea	 Bytes: 3
  %loadMem_421eea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421eea = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421eea)
  store %struct.Memory* %call_421eea, %struct.Memory** %MEMORY

  ; Code: movq -0x160(%rbp), %r8	 RIP: 421eed	 Bytes: 7
  %loadMem_421eed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421eed = call %struct.Memory* @routine_movq_MINUS0x160__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421eed)
  store %struct.Memory* %call_421eed, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 421ef4	 Bytes: 4
  %loadMem_421ef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ef4 = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ef4)
  store %struct.Memory* %call_421ef4, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 421ef8	 Bytes: 8
  %loadMem_421ef8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ef8 = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ef8)
  store %struct.Memory* %call_421ef8, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 421f00	 Bytes: 3
  %loadMem_421f00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f00 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f00)
  store %struct.Memory* %call_421f00, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 421f03	 Bytes: 6
  %loadMem_421f03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f03 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f03)
  store %struct.Memory* %call_421f03, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 421f09	 Bytes: 2
  %loadMem_421f09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f09 = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f09)
  store %struct.Memory* %call_421f09, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 421f0b	 Bytes: 6
  %loadMem_421f0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f0b = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f0b)
  store %struct.Memory* %call_421f0b, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 421f11	 Bytes: 3
  %loadMem_421f11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f11 = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f11)
  store %struct.Memory* %call_421f11, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 421f14	 Bytes: 4
  %loadMem_421f14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f14 = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f14)
  store %struct.Memory* %call_421f14, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 421f18	 Bytes: 3
  %loadMem_421f18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f18 = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f18)
  store %struct.Memory* %call_421f18, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 421f1b	 Bytes: 3
  %loadMem_421f1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f1b = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f1b)
  store %struct.Memory* %call_421f1b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 421f1e	 Bytes: 3
  %loadMem_421f1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f1e = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f1e)
  store %struct.Memory* %call_421f1e, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 421f21	 Bytes: 4
  %loadMem_421f21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f21 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f21)
  store %struct.Memory* %call_421f21, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 421f25	 Bytes: 4
  %loadMem_421f25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f25 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f25)
  store %struct.Memory* %call_421f25, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 421f29	 Bytes: 4
  %loadMem_421f29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f29 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f29)
  store %struct.Memory* %call_421f29, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 421f2d	 Bytes: 6
  %loadMem_421f2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f2d = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f2d)
  store %struct.Memory* %call_421f2d, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 421f33	 Bytes: 7
  %loadMem_421f33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f33 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f33)
  store %struct.Memory* %call_421f33, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 421f3a	 Bytes: 7
  %loadMem_421f3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f3a = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f3a)
  store %struct.Memory* %call_421f3a, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421f41	 Bytes: 3
  %loadMem_421f41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f41 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f41)
  store %struct.Memory* %call_421f41, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 421f44	 Bytes: 4
  %loadMem_421f44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f44 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f44)
  store %struct.Memory* %call_421f44, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 421f48	 Bytes: 4
  %loadMem_421f48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f48 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f48)
  store %struct.Memory* %call_421f48, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 421f4c	 Bytes: 3
  %loadMem_421f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f4c = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f4c)
  store %struct.Memory* %call_421f4c, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 421f4f	 Bytes: 3
  %loadMem_421f4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f4f = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f4f)
  store %struct.Memory* %call_421f4f, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 421f52	 Bytes: 5
  %loadMem_421f52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f52 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f52)
  store %struct.Memory* %call_421f52, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 421f57	 Bytes: 5
  %loadMem_421f57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f57 = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f57)
  store %struct.Memory* %call_421f57, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 421f5c	 Bytes: 4
  %loadMem_421f5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f5c = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f5c)
  store %struct.Memory* %call_421f5c, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 421f60	 Bytes: 5
  %loadMem1_421f60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_421f60 = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_421f60, i64 -6832, i64 5, i64 5)
  store %struct.Memory* %call1_421f60, %struct.Memory** %MEMORY

  %loadMem2_421f60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_421f60 = load i64, i64* %3
  %call2_421f60 = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_421f60, %struct.Memory* %loadMem2_421f60)
  store %struct.Memory* %call2_421f60, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 421f65	 Bytes: 3
  %loadMem_421f65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f65 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f65)
  store %struct.Memory* %call_421f65, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421f68	 Bytes: 3
  %loadMem_421f68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f68 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f68)
  store %struct.Memory* %call_421f68, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 421f6b	 Bytes: 8
  %loadMem_421f6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f6b = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f6b)
  store %struct.Memory* %call_421f6b, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 421f73	 Bytes: 3
  %loadMem_421f73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f73 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f73)
  store %struct.Memory* %call_421f73, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 421f76	 Bytes: 6
  %loadMem_421f76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f76 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f76)
  store %struct.Memory* %call_421f76, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421f7c	 Bytes: 3
  %loadMem_421f7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f7c = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f7c)
  store %struct.Memory* %call_421f7c, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 421f7f	 Bytes: 3
  %loadMem_421f7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f7f = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f7f)
  store %struct.Memory* %call_421f7f, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 421f82	 Bytes: 4
  %loadMem_421f82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f82 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f82)
  store %struct.Memory* %call_421f82, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 421f86	 Bytes: 3
  %loadMem_421f86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f86 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f86)
  store %struct.Memory* %call_421f86, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 421f89	 Bytes: 6
  %loadMem_421f89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f89 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f89)
  store %struct.Memory* %call_421f89, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 421f8f	 Bytes: 3
  %loadMem_421f8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f8f = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f8f)
  store %struct.Memory* %call_421f8f, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 421f92	 Bytes: 3
  %loadMem_421f92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f92 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f92)
  store %struct.Memory* %call_421f92, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 421f95	 Bytes: 3
  %loadMem_421f95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f95 = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f95)
  store %struct.Memory* %call_421f95, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421f98	 Bytes: 3
  %loadMem_421f98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f98 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f98)
  store %struct.Memory* %call_421f98, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 421f9b	 Bytes: 3
  %loadMem_421f9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f9b = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f9b)
  store %struct.Memory* %call_421f9b, %struct.Memory** %MEMORY

  ; Code: jge .L_421fbc	 RIP: 421f9e	 Bytes: 6
  %loadMem_421f9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421f9e = call %struct.Memory* @routine_jge_.L_421fbc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421f9e, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_421f9e, %struct.Memory** %MEMORY

  %loadBr_421f9e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421f9e = icmp eq i8 %loadBr_421f9e, 1
  br i1 %cmpBr_421f9e, label %block_.L_421fbc, label %block_421fa4

block_421fa4:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 421fa4	 Bytes: 3
  %loadMem_421fa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fa4 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fa4)
  store %struct.Memory* %call_421fa4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 421fa7	 Bytes: 6
  %loadMem_421fa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fa7 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fa7)
  store %struct.Memory* %call_421fa7, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 421fad	 Bytes: 3
  %loadMem_421fad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fad = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fad)
  store %struct.Memory* %call_421fad, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 421fb0	 Bytes: 6
  %loadMem_421fb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fb0 = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fb0)
  store %struct.Memory* %call_421fb0, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 421fb6	 Bytes: 3
  %loadMem_421fb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fb6 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fb6)
  store %struct.Memory* %call_421fb6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 421fb9	 Bytes: 3
  %loadMem_421fb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fb9 = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fb9)
  store %struct.Memory* %call_421fb9, %struct.Memory** %MEMORY

  ; Code: .L_421fbc:	 RIP: 421fbc	 Bytes: 0
  br label %block_.L_421fbc
block_.L_421fbc:

  ; Code: jmpq .L_421fc1	 RIP: 421fbc	 Bytes: 5
  %loadMem_421fbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fbc = call %struct.Memory* @routine_jmpq_.L_421fc1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fbc, i64 5, i64 5)
  store %struct.Memory* %call_421fbc, %struct.Memory** %MEMORY

  br label %block_.L_421fc1

  ; Code: .L_421fc1:	 RIP: 421fc1	 Bytes: 0
block_.L_421fc1:

  ; Code: jmpq .L_421fc6	 RIP: 421fc1	 Bytes: 5
  %loadMem_421fc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fc1 = call %struct.Memory* @routine_jmpq_.L_421fc6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fc1, i64 5, i64 5)
  store %struct.Memory* %call_421fc1, %struct.Memory** %MEMORY

  br label %block_.L_421fc6

  ; Code: .L_421fc6:	 RIP: 421fc6	 Bytes: 0
block_.L_421fc6:

  ; Code: movl -0xb8(%rbp), %eax	 RIP: 421fc6	 Bytes: 6
  %loadMem_421fc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fc6 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fc6)
  store %struct.Memory* %call_421fc6, %struct.Memory** %MEMORY

  ; Code: subl -0xb0(%rbp), %eax	 RIP: 421fcc	 Bytes: 6
  %loadMem_421fcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fcc = call %struct.Memory* @routine_subl_MINUS0xb0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fcc)
  store %struct.Memory* %call_421fcc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 421fd2	 Bytes: 3
  %loadMem_421fd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fd2 = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fd2)
  store %struct.Memory* %call_421fd2, %struct.Memory** %MEMORY

  ; Code: movl -0xb4(%rbp), %eax	 RIP: 421fd5	 Bytes: 6
  %loadMem_421fd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fd5 = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fd5)
  store %struct.Memory* %call_421fd5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x64(%rbp)	 RIP: 421fdb	 Bytes: 3
  %loadMem_421fdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fdb = call %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fdb)
  store %struct.Memory* %call_421fdb, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 421fde	 Bytes: 3
  %loadMem_421fde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fde = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fde)
  store %struct.Memory* %call_421fde, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 421fe1	 Bytes: 6
  %loadMem_421fe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fe1 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fe1)
  store %struct.Memory* %call_421fe1, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 421fe7	 Bytes: 2
  %loadMem_421fe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fe7 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fe7)
  store %struct.Memory* %call_421fe7, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 421fe9	 Bytes: 5
  %loadMem1_421fe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_421fe9 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_421fe9, i64 -135145, i64 5, i64 5)
  store %struct.Memory* %call1_421fe9, %struct.Memory** %MEMORY

  %loadMem2_421fe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_421fe9 = load i64, i64* %3
  %call2_421fe9 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_421fe9, %struct.Memory* %loadMem2_421fe9)
  store %struct.Memory* %call2_421fe9, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 421fee	 Bytes: 3
  %loadMem_421fee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421fee = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421fee)
  store %struct.Memory* %call_421fee, %struct.Memory** %MEMORY

  ; Code: jg .L_422148	 RIP: 421ff1	 Bytes: 6
  %loadMem_421ff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ff1 = call %struct.Memory* @routine_jg_.L_422148(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ff1, i8* %BRANCH_TAKEN, i64 343, i64 6, i64 6)
  store %struct.Memory* %call_421ff1, %struct.Memory** %MEMORY

  %loadBr_421ff1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_421ff1 = icmp eq i8 %loadBr_421ff1, 1
  br i1 %cmpBr_421ff1, label %block_.L_422148, label %block_421ff7

block_421ff7:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 421ff7	 Bytes: 3
  %loadMem_421ff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ff7 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ff7)
  store %struct.Memory* %call_421ff7, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 421ffa	 Bytes: 6
  %loadMem_421ffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_421ffa = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_421ffa)
  store %struct.Memory* %call_421ffa, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 422000	 Bytes: 2
  %loadMem_422000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422000 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422000)
  store %struct.Memory* %call_422000, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 422002	 Bytes: 5
  %loadMem1_422002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_422002 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_422002, i64 -135170, i64 5, i64 5)
  store %struct.Memory* %call1_422002, %struct.Memory** %MEMORY

  %loadMem2_422002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_422002 = load i64, i64* %3
  %call2_422002 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_422002, %struct.Memory* %loadMem2_422002)
  store %struct.Memory* %call2_422002, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 422007	 Bytes: 3
  %loadMem_422007 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422007 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422007)
  store %struct.Memory* %call_422007, %struct.Memory** %MEMORY

  ; Code: jg .L_422148	 RIP: 42200a	 Bytes: 6
  %loadMem_42200a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42200a = call %struct.Memory* @routine_jg_.L_422148(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42200a, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_42200a, %struct.Memory** %MEMORY

  %loadBr_42200a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42200a = icmp eq i8 %loadBr_42200a, 1
  br i1 %cmpBr_42200a, label %block_.L_422148, label %block_422010

block_422010:
  ; Code: movq 0x6d32d0, %rax	 RIP: 422010	 Bytes: 8
  %loadMem_422010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422010 = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422010)
  store %struct.Memory* %call_422010, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 422018	 Bytes: 3
  %loadMem_422018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422018 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422018)
  store %struct.Memory* %call_422018, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 42201b	 Bytes: 6
  %loadMem_42201b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42201b = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42201b)
  store %struct.Memory* %call_42201b, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422021	 Bytes: 3
  %loadMem_422021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422021 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422021)
  store %struct.Memory* %call_422021, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 422024	 Bytes: 3
  %loadMem_422024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422024 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422024)
  store %struct.Memory* %call_422024, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 422027	 Bytes: 4
  %loadMem_422027 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422027 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422027)
  store %struct.Memory* %call_422027, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 42202b	 Bytes: 3
  %loadMem_42202b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42202b = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42202b)
  store %struct.Memory* %call_42202b, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 42202e	 Bytes: 6
  %loadMem_42202e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42202e = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42202e)
  store %struct.Memory* %call_42202e, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422034	 Bytes: 3
  %loadMem_422034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422034 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422034)
  store %struct.Memory* %call_422034, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 422037	 Bytes: 3
  %loadMem_422037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422037 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422037)
  store %struct.Memory* %call_422037, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 42203a	 Bytes: 4
  %loadMem_42203a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42203a = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42203a)
  store %struct.Memory* %call_42203a, %struct.Memory** %MEMORY

  ; Code: jne .L_422143	 RIP: 42203e	 Bytes: 6
  %loadMem_42203e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42203e = call %struct.Memory* @routine_jne_.L_422143(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42203e, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_42203e, %struct.Memory** %MEMORY

  %loadBr_42203e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42203e = icmp eq i8 %loadBr_42203e, 1
  br i1 %cmpBr_42203e, label %block_.L_422143, label %block_422044

block_422044:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 422044	 Bytes: 6
  %loadMem_422044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422044 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422044)
  store %struct.Memory* %call_422044, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 42204a	 Bytes: 8
  %loadMem_42204a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42204a = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42204a)
  store %struct.Memory* %call_42204a, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 422052	 Bytes: 3
  %loadMem_422052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422052 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422052)
  store %struct.Memory* %call_422052, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 422055	 Bytes: 6
  %loadMem_422055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422055 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422055)
  store %struct.Memory* %call_422055, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x168(%rbp)	 RIP: 42205b	 Bytes: 7
  %loadMem_42205b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42205b = call %struct.Memory* @routine_movq__rcx__MINUS0x168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42205b)
  store %struct.Memory* %call_42205b, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 422062	 Bytes: 2
  %loadMem_422062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422062 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422062)
  store %struct.Memory* %call_422062, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 422064	 Bytes: 2
  %loadMem_422064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422064 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422064)
  store %struct.Memory* %call_422064, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 422066	 Bytes: 6
  %loadMem_422066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422066 = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422066)
  store %struct.Memory* %call_422066, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 42206c	 Bytes: 3
  %loadMem_42206c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42206c = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42206c)
  store %struct.Memory* %call_42206c, %struct.Memory** %MEMORY

  ; Code: movq -0x168(%rbp), %r8	 RIP: 42206f	 Bytes: 7
  %loadMem_42206f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42206f = call %struct.Memory* @routine_movq_MINUS0x168__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42206f)
  store %struct.Memory* %call_42206f, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 422076	 Bytes: 4
  %loadMem_422076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422076 = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422076)
  store %struct.Memory* %call_422076, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 42207a	 Bytes: 8
  %loadMem_42207a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42207a = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42207a)
  store %struct.Memory* %call_42207a, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 422082	 Bytes: 3
  %loadMem_422082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422082 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422082)
  store %struct.Memory* %call_422082, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 422085	 Bytes: 6
  %loadMem_422085 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422085 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422085)
  store %struct.Memory* %call_422085, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 42208b	 Bytes: 2
  %loadMem_42208b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42208b = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42208b)
  store %struct.Memory* %call_42208b, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 42208d	 Bytes: 6
  %loadMem_42208d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42208d = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42208d)
  store %struct.Memory* %call_42208d, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 422093	 Bytes: 3
  %loadMem_422093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422093 = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422093)
  store %struct.Memory* %call_422093, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 422096	 Bytes: 4
  %loadMem_422096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422096 = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422096)
  store %struct.Memory* %call_422096, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 42209a	 Bytes: 3
  %loadMem_42209a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42209a = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42209a)
  store %struct.Memory* %call_42209a, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 42209d	 Bytes: 3
  %loadMem_42209d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42209d = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42209d)
  store %struct.Memory* %call_42209d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 4220a0	 Bytes: 3
  %loadMem_4220a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220a0 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220a0)
  store %struct.Memory* %call_4220a0, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 4220a3	 Bytes: 4
  %loadMem_4220a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220a3 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220a3)
  store %struct.Memory* %call_4220a3, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 4220a7	 Bytes: 4
  %loadMem_4220a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220a7 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220a7)
  store %struct.Memory* %call_4220a7, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 4220ab	 Bytes: 4
  %loadMem_4220ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220ab = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220ab)
  store %struct.Memory* %call_4220ab, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 4220af	 Bytes: 6
  %loadMem_4220af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220af = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220af)
  store %struct.Memory* %call_4220af, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 4220b5	 Bytes: 7
  %loadMem_4220b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220b5 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220b5)
  store %struct.Memory* %call_4220b5, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 4220bc	 Bytes: 7
  %loadMem_4220bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220bc = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220bc)
  store %struct.Memory* %call_4220bc, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 4220c3	 Bytes: 3
  %loadMem_4220c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220c3 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220c3)
  store %struct.Memory* %call_4220c3, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 4220c6	 Bytes: 4
  %loadMem_4220c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220c6 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220c6)
  store %struct.Memory* %call_4220c6, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 4220ca	 Bytes: 4
  %loadMem_4220ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220ca = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220ca)
  store %struct.Memory* %call_4220ca, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 4220ce	 Bytes: 3
  %loadMem_4220ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220ce = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220ce)
  store %struct.Memory* %call_4220ce, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 4220d1	 Bytes: 3
  %loadMem_4220d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220d1 = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220d1)
  store %struct.Memory* %call_4220d1, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 4220d4	 Bytes: 5
  %loadMem_4220d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220d4 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220d4)
  store %struct.Memory* %call_4220d4, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 4220d9	 Bytes: 5
  %loadMem_4220d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220d9 = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220d9)
  store %struct.Memory* %call_4220d9, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 4220de	 Bytes: 4
  %loadMem_4220de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220de = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220de)
  store %struct.Memory* %call_4220de, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 4220e2	 Bytes: 5
  %loadMem1_4220e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4220e2 = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4220e2, i64 -7218, i64 5, i64 5)
  store %struct.Memory* %call1_4220e2, %struct.Memory** %MEMORY

  %loadMem2_4220e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4220e2 = load i64, i64* %3
  %call2_4220e2 = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_4220e2, %struct.Memory* %loadMem2_4220e2)
  store %struct.Memory* %call2_4220e2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 4220e7	 Bytes: 3
  %loadMem_4220e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220e7 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220e7)
  store %struct.Memory* %call_4220e7, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 4220ea	 Bytes: 3
  %loadMem_4220ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220ea = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220ea)
  store %struct.Memory* %call_4220ea, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 4220ed	 Bytes: 8
  %loadMem_4220ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220ed = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220ed)
  store %struct.Memory* %call_4220ed, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 4220f5	 Bytes: 3
  %loadMem_4220f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220f5 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220f5)
  store %struct.Memory* %call_4220f5, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 4220f8	 Bytes: 6
  %loadMem_4220f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220f8 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220f8)
  store %struct.Memory* %call_4220f8, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 4220fe	 Bytes: 3
  %loadMem_4220fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4220fe = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4220fe)
  store %struct.Memory* %call_4220fe, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 422101	 Bytes: 3
  %loadMem_422101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422101 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422101)
  store %struct.Memory* %call_422101, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 422104	 Bytes: 4
  %loadMem_422104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422104 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422104)
  store %struct.Memory* %call_422104, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 422108	 Bytes: 3
  %loadMem_422108 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422108 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422108)
  store %struct.Memory* %call_422108, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 42210b	 Bytes: 6
  %loadMem_42210b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42210b = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42210b)
  store %struct.Memory* %call_42210b, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422111	 Bytes: 3
  %loadMem_422111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422111 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422111)
  store %struct.Memory* %call_422111, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 422114	 Bytes: 3
  %loadMem_422114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422114 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422114)
  store %struct.Memory* %call_422114, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 422117	 Bytes: 3
  %loadMem_422117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422117 = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422117)
  store %struct.Memory* %call_422117, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42211a	 Bytes: 3
  %loadMem_42211a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42211a = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42211a)
  store %struct.Memory* %call_42211a, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 42211d	 Bytes: 3
  %loadMem_42211d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42211d = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42211d)
  store %struct.Memory* %call_42211d, %struct.Memory** %MEMORY

  ; Code: jge .L_42213e	 RIP: 422120	 Bytes: 6
  %loadMem_422120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422120 = call %struct.Memory* @routine_jge_.L_42213e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422120, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_422120, %struct.Memory** %MEMORY

  %loadBr_422120 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422120 = icmp eq i8 %loadBr_422120, 1
  br i1 %cmpBr_422120, label %block_.L_42213e, label %block_422126

block_422126:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 422126	 Bytes: 3
  %loadMem_422126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422126 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422126)
  store %struct.Memory* %call_422126, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 422129	 Bytes: 6
  %loadMem_422129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422129 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422129)
  store %struct.Memory* %call_422129, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 42212f	 Bytes: 3
  %loadMem_42212f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42212f = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42212f)
  store %struct.Memory* %call_42212f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 422132	 Bytes: 6
  %loadMem_422132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422132 = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422132)
  store %struct.Memory* %call_422132, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 422138	 Bytes: 3
  %loadMem_422138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422138 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422138)
  store %struct.Memory* %call_422138, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 42213b	 Bytes: 3
  %loadMem_42213b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42213b = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42213b)
  store %struct.Memory* %call_42213b, %struct.Memory** %MEMORY

  ; Code: .L_42213e:	 RIP: 42213e	 Bytes: 0
  br label %block_.L_42213e
block_.L_42213e:

  ; Code: jmpq .L_422143	 RIP: 42213e	 Bytes: 5
  %loadMem_42213e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42213e = call %struct.Memory* @routine_jmpq_.L_422143(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42213e, i64 5, i64 5)
  store %struct.Memory* %call_42213e, %struct.Memory** %MEMORY

  br label %block_.L_422143

  ; Code: .L_422143:	 RIP: 422143	 Bytes: 0
block_.L_422143:

  ; Code: jmpq .L_422148	 RIP: 422143	 Bytes: 5
  %loadMem_422143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422143 = call %struct.Memory* @routine_jmpq_.L_422148(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422143, i64 5, i64 5)
  store %struct.Memory* %call_422143, %struct.Memory** %MEMORY

  br label %block_.L_422148

  ; Code: .L_422148:	 RIP: 422148	 Bytes: 0
block_.L_422148:

  ; Code: jmpq .L_42214d	 RIP: 422148	 Bytes: 5
  %loadMem_422148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422148 = call %struct.Memory* @routine_jmpq_.L_42214d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422148, i64 5, i64 5)
  store %struct.Memory* %call_422148, %struct.Memory** %MEMORY

  br label %block_.L_42214d

  ; Code: .L_42214d:	 RIP: 42214d	 Bytes: 0
block_.L_42214d:

  ; Code: movl -0xbc(%rbp), %eax	 RIP: 42214d	 Bytes: 6
  %loadMem_42214d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42214d = call %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42214d)
  store %struct.Memory* %call_42214d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 422153	 Bytes: 3
  %loadMem_422153 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422153 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422153)
  store %struct.Memory* %call_422153, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xbc(%rbp)	 RIP: 422156	 Bytes: 6
  %loadMem_422156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422156 = call %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422156)
  store %struct.Memory* %call_422156, %struct.Memory** %MEMORY

  ; Code: jmpq .L_421e0b	 RIP: 42215c	 Bytes: 5
  %loadMem_42215c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42215c = call %struct.Memory* @routine_jmpq_.L_421e0b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42215c, i64 -849, i64 5)
  store %struct.Memory* %call_42215c, %struct.Memory** %MEMORY

  br label %block_.L_421e0b

  ; Code: .L_422161:	 RIP: 422161	 Bytes: 0
block_.L_422161:

  ; Code: movl $0x1, -0xbc(%rbp)	 RIP: 422161	 Bytes: 10
  %loadMem_422161 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422161 = call %struct.Memory* @routine_movl__0x1__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422161)
  store %struct.Memory* %call_422161, %struct.Memory** %MEMORY

  ; Code: .L_42216b:	 RIP: 42216b	 Bytes: 0
  br label %block_.L_42216b
block_.L_42216b:

  ; Code: movl $0x4, %eax	 RIP: 42216b	 Bytes: 5
  %loadMem_42216b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42216b = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42216b)
  store %struct.Memory* %call_42216b, %struct.Memory** %MEMORY

  ; Code: movl -0xbc(%rbp), %ecx	 RIP: 422170	 Bytes: 6
  %loadMem_422170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422170 = call %struct.Memory* @routine_movl_MINUS0xbc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422170)
  store %struct.Memory* %call_422170, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %edx	 RIP: 422176	 Bytes: 3
  %loadMem_422176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422176 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422176)
  store %struct.Memory* %call_422176, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x16c(%rbp)	 RIP: 422179	 Bytes: 6
  %loadMem_422179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422179 = call %struct.Memory* @routine_movl__eax__MINUS0x16c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422179)
  store %struct.Memory* %call_422179, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 42217f	 Bytes: 2
  %loadMem_42217f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42217f = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42217f)
  store %struct.Memory* %call_42217f, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 422181	 Bytes: 1
  %loadMem_422181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422181 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422181)
  store %struct.Memory* %call_422181, %struct.Memory** %MEMORY

  ; Code: movl -0x16c(%rbp), %esi	 RIP: 422182	 Bytes: 6
  %loadMem_422182 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422182 = call %struct.Memory* @routine_movl_MINUS0x16c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422182)
  store %struct.Memory* %call_422182, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 422188	 Bytes: 2
  %loadMem_422188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422188 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422188)
  store %struct.Memory* %call_422188, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42218a	 Bytes: 2
  %loadMem_42218a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42218a = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42218a)
  store %struct.Memory* %call_42218a, %struct.Memory** %MEMORY

  ; Code: jg .L_4224c1	 RIP: 42218c	 Bytes: 6
  %loadMem_42218c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42218c = call %struct.Memory* @routine_jg_.L_4224c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42218c, i8* %BRANCH_TAKEN, i64 821, i64 6, i64 6)
  store %struct.Memory* %call_42218c, %struct.Memory** %MEMORY

  %loadBr_42218c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42218c = icmp eq i8 %loadBr_42218c, 1
  br i1 %cmpBr_42218c, label %block_.L_4224c1, label %block_422192

block_422192:
  ; Code: movl -0xbc(%rbp), %eax	 RIP: 422192	 Bytes: 6
  %loadMem_422192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422192 = call %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422192)
  store %struct.Memory* %call_422192, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 422198	 Bytes: 3
  %loadMem_422198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422198 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422198)
  store %struct.Memory* %call_422198, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 42219b	 Bytes: 3
  %loadMem_42219b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42219b = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42219b)
  store %struct.Memory* %call_42219b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb0(%rbp)	 RIP: 42219e	 Bytes: 6
  %loadMem_42219e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42219e = call %struct.Memory* @routine_movl__eax__MINUS0xb0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42219e)
  store %struct.Memory* %call_42219e, %struct.Memory** %MEMORY

  ; Code: movl -0xb8(%rbp), %eax	 RIP: 4221a4	 Bytes: 6
  %loadMem_4221a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221a4 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221a4)
  store %struct.Memory* %call_4221a4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 4221aa	 Bytes: 3
  %loadMem_4221aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221aa = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221aa)
  store %struct.Memory* %call_4221aa, %struct.Memory** %MEMORY

  ; Code: movl -0xb4(%rbp), %eax	 RIP: 4221ad	 Bytes: 6
  %loadMem_4221ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221ad = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221ad)
  store %struct.Memory* %call_4221ad, %struct.Memory** %MEMORY

  ; Code: addl -0xb0(%rbp), %eax	 RIP: 4221b3	 Bytes: 6
  %loadMem_4221b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221b3 = call %struct.Memory* @routine_addl_MINUS0xb0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221b3)
  store %struct.Memory* %call_4221b3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x64(%rbp)	 RIP: 4221b9	 Bytes: 3
  %loadMem_4221b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221b9 = call %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221b9)
  store %struct.Memory* %call_4221b9, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 4221bc	 Bytes: 3
  %loadMem_4221bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221bc = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221bc)
  store %struct.Memory* %call_4221bc, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 4221bf	 Bytes: 6
  %loadMem_4221bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221bf = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221bf)
  store %struct.Memory* %call_4221bf, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 4221c5	 Bytes: 2
  %loadMem_4221c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221c5 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221c5)
  store %struct.Memory* %call_4221c5, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 4221c7	 Bytes: 5
  %loadMem1_4221c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4221c7 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4221c7, i64 -135623, i64 5, i64 5)
  store %struct.Memory* %call1_4221c7, %struct.Memory** %MEMORY

  %loadMem2_4221c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4221c7 = load i64, i64* %3
  %call2_4221c7 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_4221c7, %struct.Memory* %loadMem2_4221c7)
  store %struct.Memory* %call2_4221c7, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 4221cc	 Bytes: 3
  %loadMem_4221cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221cc = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221cc)
  store %struct.Memory* %call_4221cc, %struct.Memory** %MEMORY

  ; Code: jg .L_422326	 RIP: 4221cf	 Bytes: 6
  %loadMem_4221cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221cf = call %struct.Memory* @routine_jg_.L_422326(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221cf, i8* %BRANCH_TAKEN, i64 343, i64 6, i64 6)
  store %struct.Memory* %call_4221cf, %struct.Memory** %MEMORY

  %loadBr_4221cf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4221cf = icmp eq i8 %loadBr_4221cf, 1
  br i1 %cmpBr_4221cf, label %block_.L_422326, label %block_4221d5

block_4221d5:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 4221d5	 Bytes: 3
  %loadMem_4221d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221d5 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221d5)
  store %struct.Memory* %call_4221d5, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 4221d8	 Bytes: 6
  %loadMem_4221d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221d8 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221d8)
  store %struct.Memory* %call_4221d8, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 4221de	 Bytes: 2
  %loadMem_4221de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221de = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221de)
  store %struct.Memory* %call_4221de, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 4221e0	 Bytes: 5
  %loadMem1_4221e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4221e0 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4221e0, i64 -135648, i64 5, i64 5)
  store %struct.Memory* %call1_4221e0, %struct.Memory** %MEMORY

  %loadMem2_4221e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4221e0 = load i64, i64* %3
  %call2_4221e0 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_4221e0, %struct.Memory* %loadMem2_4221e0)
  store %struct.Memory* %call2_4221e0, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 4221e5	 Bytes: 3
  %loadMem_4221e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221e5 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221e5)
  store %struct.Memory* %call_4221e5, %struct.Memory** %MEMORY

  ; Code: jg .L_422326	 RIP: 4221e8	 Bytes: 6
  %loadMem_4221e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221e8 = call %struct.Memory* @routine_jg_.L_422326(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221e8, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_4221e8, %struct.Memory** %MEMORY

  %loadBr_4221e8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4221e8 = icmp eq i8 %loadBr_4221e8, 1
  br i1 %cmpBr_4221e8, label %block_.L_422326, label %block_4221ee

block_4221ee:
  ; Code: movq 0x6d32d0, %rax	 RIP: 4221ee	 Bytes: 8
  %loadMem_4221ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221ee = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221ee)
  store %struct.Memory* %call_4221ee, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 4221f6	 Bytes: 3
  %loadMem_4221f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221f6 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221f6)
  store %struct.Memory* %call_4221f6, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 4221f9	 Bytes: 6
  %loadMem_4221f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221f9 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221f9)
  store %struct.Memory* %call_4221f9, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 4221ff	 Bytes: 3
  %loadMem_4221ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4221ff = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4221ff)
  store %struct.Memory* %call_4221ff, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 422202	 Bytes: 3
  %loadMem_422202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422202 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422202)
  store %struct.Memory* %call_422202, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 422205	 Bytes: 4
  %loadMem_422205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422205 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422205)
  store %struct.Memory* %call_422205, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 422209	 Bytes: 3
  %loadMem_422209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422209 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422209)
  store %struct.Memory* %call_422209, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 42220c	 Bytes: 6
  %loadMem_42220c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42220c = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42220c)
  store %struct.Memory* %call_42220c, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422212	 Bytes: 3
  %loadMem_422212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422212 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422212)
  store %struct.Memory* %call_422212, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 422215	 Bytes: 3
  %loadMem_422215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422215 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422215)
  store %struct.Memory* %call_422215, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 422218	 Bytes: 4
  %loadMem_422218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422218 = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422218)
  store %struct.Memory* %call_422218, %struct.Memory** %MEMORY

  ; Code: jne .L_422321	 RIP: 42221c	 Bytes: 6
  %loadMem_42221c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42221c = call %struct.Memory* @routine_jne_.L_422321(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42221c, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_42221c, %struct.Memory** %MEMORY

  %loadBr_42221c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42221c = icmp eq i8 %loadBr_42221c, 1
  br i1 %cmpBr_42221c, label %block_.L_422321, label %block_422222

block_422222:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 422222	 Bytes: 6
  %loadMem_422222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422222 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422222)
  store %struct.Memory* %call_422222, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 422228	 Bytes: 8
  %loadMem_422228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422228 = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422228)
  store %struct.Memory* %call_422228, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 422230	 Bytes: 3
  %loadMem_422230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422230 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422230)
  store %struct.Memory* %call_422230, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 422233	 Bytes: 6
  %loadMem_422233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422233 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422233)
  store %struct.Memory* %call_422233, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x178(%rbp)	 RIP: 422239	 Bytes: 7
  %loadMem_422239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422239 = call %struct.Memory* @routine_movq__rcx__MINUS0x178__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422239)
  store %struct.Memory* %call_422239, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 422240	 Bytes: 2
  %loadMem_422240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422240 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422240)
  store %struct.Memory* %call_422240, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 422242	 Bytes: 2
  %loadMem_422242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422242 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422242)
  store %struct.Memory* %call_422242, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 422244	 Bytes: 6
  %loadMem_422244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422244 = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422244)
  store %struct.Memory* %call_422244, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 42224a	 Bytes: 3
  %loadMem_42224a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42224a = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42224a)
  store %struct.Memory* %call_42224a, %struct.Memory** %MEMORY

  ; Code: movq -0x178(%rbp), %r8	 RIP: 42224d	 Bytes: 7
  %loadMem_42224d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42224d = call %struct.Memory* @routine_movq_MINUS0x178__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42224d)
  store %struct.Memory* %call_42224d, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 422254	 Bytes: 4
  %loadMem_422254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422254 = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422254)
  store %struct.Memory* %call_422254, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 422258	 Bytes: 8
  %loadMem_422258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422258 = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422258)
  store %struct.Memory* %call_422258, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 422260	 Bytes: 3
  %loadMem_422260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422260 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422260)
  store %struct.Memory* %call_422260, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 422263	 Bytes: 6
  %loadMem_422263 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422263 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422263)
  store %struct.Memory* %call_422263, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 422269	 Bytes: 2
  %loadMem_422269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422269 = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422269)
  store %struct.Memory* %call_422269, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 42226b	 Bytes: 6
  %loadMem_42226b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42226b = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42226b)
  store %struct.Memory* %call_42226b, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 422271	 Bytes: 3
  %loadMem_422271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422271 = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422271)
  store %struct.Memory* %call_422271, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 422274	 Bytes: 4
  %loadMem_422274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422274 = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422274)
  store %struct.Memory* %call_422274, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 422278	 Bytes: 3
  %loadMem_422278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422278 = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422278)
  store %struct.Memory* %call_422278, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 42227b	 Bytes: 3
  %loadMem_42227b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42227b = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42227b)
  store %struct.Memory* %call_42227b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 42227e	 Bytes: 3
  %loadMem_42227e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42227e = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42227e)
  store %struct.Memory* %call_42227e, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 422281	 Bytes: 4
  %loadMem_422281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422281 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422281)
  store %struct.Memory* %call_422281, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 422285	 Bytes: 4
  %loadMem_422285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422285 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422285)
  store %struct.Memory* %call_422285, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 422289	 Bytes: 4
  %loadMem_422289 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422289 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422289)
  store %struct.Memory* %call_422289, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 42228d	 Bytes: 6
  %loadMem_42228d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42228d = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42228d)
  store %struct.Memory* %call_42228d, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 422293	 Bytes: 7
  %loadMem_422293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422293 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422293)
  store %struct.Memory* %call_422293, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 42229a	 Bytes: 7
  %loadMem_42229a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42229a = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42229a)
  store %struct.Memory* %call_42229a, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 4222a1	 Bytes: 3
  %loadMem_4222a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222a1 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222a1)
  store %struct.Memory* %call_4222a1, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 4222a4	 Bytes: 4
  %loadMem_4222a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222a4 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222a4)
  store %struct.Memory* %call_4222a4, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 4222a8	 Bytes: 4
  %loadMem_4222a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222a8 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222a8)
  store %struct.Memory* %call_4222a8, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 4222ac	 Bytes: 3
  %loadMem_4222ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222ac = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222ac)
  store %struct.Memory* %call_4222ac, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 4222af	 Bytes: 3
  %loadMem_4222af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222af = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222af)
  store %struct.Memory* %call_4222af, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 4222b2	 Bytes: 5
  %loadMem_4222b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222b2 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222b2)
  store %struct.Memory* %call_4222b2, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 4222b7	 Bytes: 5
  %loadMem_4222b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222b7 = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222b7)
  store %struct.Memory* %call_4222b7, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 4222bc	 Bytes: 4
  %loadMem_4222bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222bc = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222bc)
  store %struct.Memory* %call_4222bc, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 4222c0	 Bytes: 5
  %loadMem1_4222c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4222c0 = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4222c0, i64 -7696, i64 5, i64 5)
  store %struct.Memory* %call1_4222c0, %struct.Memory** %MEMORY

  %loadMem2_4222c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4222c0 = load i64, i64* %3
  %call2_4222c0 = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_4222c0, %struct.Memory* %loadMem2_4222c0)
  store %struct.Memory* %call2_4222c0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 4222c5	 Bytes: 3
  %loadMem_4222c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222c5 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222c5)
  store %struct.Memory* %call_4222c5, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 4222c8	 Bytes: 3
  %loadMem_4222c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222c8 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222c8)
  store %struct.Memory* %call_4222c8, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 4222cb	 Bytes: 8
  %loadMem_4222cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222cb = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222cb)
  store %struct.Memory* %call_4222cb, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 4222d3	 Bytes: 3
  %loadMem_4222d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222d3 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222d3)
  store %struct.Memory* %call_4222d3, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 4222d6	 Bytes: 6
  %loadMem_4222d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222d6 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222d6)
  store %struct.Memory* %call_4222d6, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 4222dc	 Bytes: 3
  %loadMem_4222dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222dc = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222dc)
  store %struct.Memory* %call_4222dc, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 4222df	 Bytes: 3
  %loadMem_4222df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222df = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222df)
  store %struct.Memory* %call_4222df, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 4222e2	 Bytes: 4
  %loadMem_4222e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222e2 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222e2)
  store %struct.Memory* %call_4222e2, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 4222e6	 Bytes: 3
  %loadMem_4222e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222e6 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222e6)
  store %struct.Memory* %call_4222e6, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 4222e9	 Bytes: 6
  %loadMem_4222e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222e9 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222e9)
  store %struct.Memory* %call_4222e9, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 4222ef	 Bytes: 3
  %loadMem_4222ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222ef = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222ef)
  store %struct.Memory* %call_4222ef, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 4222f2	 Bytes: 3
  %loadMem_4222f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222f2 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222f2)
  store %struct.Memory* %call_4222f2, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 4222f5	 Bytes: 3
  %loadMem_4222f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222f5 = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222f5)
  store %struct.Memory* %call_4222f5, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 4222f8	 Bytes: 3
  %loadMem_4222f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222f8 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222f8)
  store %struct.Memory* %call_4222f8, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 4222fb	 Bytes: 3
  %loadMem_4222fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222fb = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222fb)
  store %struct.Memory* %call_4222fb, %struct.Memory** %MEMORY

  ; Code: jge .L_42231c	 RIP: 4222fe	 Bytes: 6
  %loadMem_4222fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4222fe = call %struct.Memory* @routine_jge_.L_42231c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4222fe, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_4222fe, %struct.Memory** %MEMORY

  %loadBr_4222fe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4222fe = icmp eq i8 %loadBr_4222fe, 1
  br i1 %cmpBr_4222fe, label %block_.L_42231c, label %block_422304

block_422304:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 422304	 Bytes: 3
  %loadMem_422304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422304 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422304)
  store %struct.Memory* %call_422304, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 422307	 Bytes: 6
  %loadMem_422307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422307 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422307)
  store %struct.Memory* %call_422307, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 42230d	 Bytes: 3
  %loadMem_42230d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42230d = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42230d)
  store %struct.Memory* %call_42230d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 422310	 Bytes: 6
  %loadMem_422310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422310 = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422310)
  store %struct.Memory* %call_422310, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 422316	 Bytes: 3
  %loadMem_422316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422316 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422316)
  store %struct.Memory* %call_422316, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 422319	 Bytes: 3
  %loadMem_422319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422319 = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422319)
  store %struct.Memory* %call_422319, %struct.Memory** %MEMORY

  ; Code: .L_42231c:	 RIP: 42231c	 Bytes: 0
  br label %block_.L_42231c
block_.L_42231c:

  ; Code: jmpq .L_422321	 RIP: 42231c	 Bytes: 5
  %loadMem_42231c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42231c = call %struct.Memory* @routine_jmpq_.L_422321(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42231c, i64 5, i64 5)
  store %struct.Memory* %call_42231c, %struct.Memory** %MEMORY

  br label %block_.L_422321

  ; Code: .L_422321:	 RIP: 422321	 Bytes: 0
block_.L_422321:

  ; Code: jmpq .L_422326	 RIP: 422321	 Bytes: 5
  %loadMem_422321 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422321 = call %struct.Memory* @routine_jmpq_.L_422326(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422321, i64 5, i64 5)
  store %struct.Memory* %call_422321, %struct.Memory** %MEMORY

  br label %block_.L_422326

  ; Code: .L_422326:	 RIP: 422326	 Bytes: 0
block_.L_422326:

  ; Code: movl -0xb8(%rbp), %eax	 RIP: 422326	 Bytes: 6
  %loadMem_422326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422326 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422326)
  store %struct.Memory* %call_422326, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 42232c	 Bytes: 3
  %loadMem_42232c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42232c = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42232c)
  store %struct.Memory* %call_42232c, %struct.Memory** %MEMORY

  ; Code: movl -0xb4(%rbp), %eax	 RIP: 42232f	 Bytes: 6
  %loadMem_42232f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42232f = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42232f)
  store %struct.Memory* %call_42232f, %struct.Memory** %MEMORY

  ; Code: subl -0xb0(%rbp), %eax	 RIP: 422335	 Bytes: 6
  %loadMem_422335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422335 = call %struct.Memory* @routine_subl_MINUS0xb0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422335)
  store %struct.Memory* %call_422335, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x64(%rbp)	 RIP: 42233b	 Bytes: 3
  %loadMem_42233b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42233b = call %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42233b)
  store %struct.Memory* %call_42233b, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 42233e	 Bytes: 3
  %loadMem_42233e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42233e = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42233e)
  store %struct.Memory* %call_42233e, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 422341	 Bytes: 6
  %loadMem_422341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422341 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422341)
  store %struct.Memory* %call_422341, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 422347	 Bytes: 2
  %loadMem_422347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422347 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422347)
  store %struct.Memory* %call_422347, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 422349	 Bytes: 5
  %loadMem1_422349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_422349 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_422349, i64 -136009, i64 5, i64 5)
  store %struct.Memory* %call1_422349, %struct.Memory** %MEMORY

  %loadMem2_422349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_422349 = load i64, i64* %3
  %call2_422349 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_422349, %struct.Memory* %loadMem2_422349)
  store %struct.Memory* %call2_422349, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 42234e	 Bytes: 3
  %loadMem_42234e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42234e = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42234e)
  store %struct.Memory* %call_42234e, %struct.Memory** %MEMORY

  ; Code: jg .L_4224a8	 RIP: 422351	 Bytes: 6
  %loadMem_422351 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422351 = call %struct.Memory* @routine_jg_.L_4224a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422351, i8* %BRANCH_TAKEN, i64 343, i64 6, i64 6)
  store %struct.Memory* %call_422351, %struct.Memory** %MEMORY

  %loadBr_422351 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422351 = icmp eq i8 %loadBr_422351, 1
  br i1 %cmpBr_422351, label %block_.L_4224a8, label %block_422357

block_422357:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 422357	 Bytes: 3
  %loadMem_422357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422357 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422357)
  store %struct.Memory* %call_422357, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 42235a	 Bytes: 6
  %loadMem_42235a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42235a = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42235a)
  store %struct.Memory* %call_42235a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 422360	 Bytes: 2
  %loadMem_422360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422360 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422360)
  store %struct.Memory* %call_422360, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 422362	 Bytes: 5
  %loadMem1_422362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_422362 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_422362, i64 -136034, i64 5, i64 5)
  store %struct.Memory* %call1_422362, %struct.Memory** %MEMORY

  %loadMem2_422362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_422362 = load i64, i64* %3
  %call2_422362 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_422362, %struct.Memory* %loadMem2_422362)
  store %struct.Memory* %call2_422362, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 422367	 Bytes: 3
  %loadMem_422367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422367 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422367)
  store %struct.Memory* %call_422367, %struct.Memory** %MEMORY

  ; Code: jg .L_4224a8	 RIP: 42236a	 Bytes: 6
  %loadMem_42236a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42236a = call %struct.Memory* @routine_jg_.L_4224a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42236a, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_42236a, %struct.Memory** %MEMORY

  %loadBr_42236a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42236a = icmp eq i8 %loadBr_42236a, 1
  br i1 %cmpBr_42236a, label %block_.L_4224a8, label %block_422370

block_422370:
  ; Code: movq 0x6d32d0, %rax	 RIP: 422370	 Bytes: 8
  %loadMem_422370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422370 = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422370)
  store %struct.Memory* %call_422370, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 422378	 Bytes: 3
  %loadMem_422378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422378 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422378)
  store %struct.Memory* %call_422378, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 42237b	 Bytes: 6
  %loadMem_42237b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42237b = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42237b)
  store %struct.Memory* %call_42237b, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422381	 Bytes: 3
  %loadMem_422381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422381 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422381)
  store %struct.Memory* %call_422381, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 422384	 Bytes: 3
  %loadMem_422384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422384 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422384)
  store %struct.Memory* %call_422384, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 422387	 Bytes: 4
  %loadMem_422387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422387 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422387)
  store %struct.Memory* %call_422387, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 42238b	 Bytes: 3
  %loadMem_42238b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42238b = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42238b)
  store %struct.Memory* %call_42238b, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 42238e	 Bytes: 6
  %loadMem_42238e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42238e = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42238e)
  store %struct.Memory* %call_42238e, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422394	 Bytes: 3
  %loadMem_422394 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422394 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422394)
  store %struct.Memory* %call_422394, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 422397	 Bytes: 3
  %loadMem_422397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422397 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422397)
  store %struct.Memory* %call_422397, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 42239a	 Bytes: 4
  %loadMem_42239a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42239a = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42239a)
  store %struct.Memory* %call_42239a, %struct.Memory** %MEMORY

  ; Code: jne .L_4224a3	 RIP: 42239e	 Bytes: 6
  %loadMem_42239e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42239e = call %struct.Memory* @routine_jne_.L_4224a3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42239e, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_42239e, %struct.Memory** %MEMORY

  %loadBr_42239e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42239e = icmp eq i8 %loadBr_42239e, 1
  br i1 %cmpBr_42239e, label %block_.L_4224a3, label %block_4223a4

block_4223a4:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 4223a4	 Bytes: 6
  %loadMem_4223a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223a4 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223a4)
  store %struct.Memory* %call_4223a4, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 4223aa	 Bytes: 8
  %loadMem_4223aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223aa = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223aa)
  store %struct.Memory* %call_4223aa, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 4223b2	 Bytes: 3
  %loadMem_4223b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223b2 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223b2)
  store %struct.Memory* %call_4223b2, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 4223b5	 Bytes: 6
  %loadMem_4223b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223b5 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223b5)
  store %struct.Memory* %call_4223b5, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x180(%rbp)	 RIP: 4223bb	 Bytes: 7
  %loadMem_4223bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223bb = call %struct.Memory* @routine_movq__rcx__MINUS0x180__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223bb)
  store %struct.Memory* %call_4223bb, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 4223c2	 Bytes: 2
  %loadMem_4223c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223c2 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223c2)
  store %struct.Memory* %call_4223c2, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 4223c4	 Bytes: 2
  %loadMem_4223c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223c4 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223c4)
  store %struct.Memory* %call_4223c4, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 4223c6	 Bytes: 6
  %loadMem_4223c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223c6 = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223c6)
  store %struct.Memory* %call_4223c6, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 4223cc	 Bytes: 3
  %loadMem_4223cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223cc = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223cc)
  store %struct.Memory* %call_4223cc, %struct.Memory** %MEMORY

  ; Code: movq -0x180(%rbp), %r8	 RIP: 4223cf	 Bytes: 7
  %loadMem_4223cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223cf = call %struct.Memory* @routine_movq_MINUS0x180__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223cf)
  store %struct.Memory* %call_4223cf, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 4223d6	 Bytes: 4
  %loadMem_4223d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223d6 = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223d6)
  store %struct.Memory* %call_4223d6, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 4223da	 Bytes: 8
  %loadMem_4223da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223da = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223da)
  store %struct.Memory* %call_4223da, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 4223e2	 Bytes: 3
  %loadMem_4223e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223e2 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223e2)
  store %struct.Memory* %call_4223e2, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 4223e5	 Bytes: 6
  %loadMem_4223e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223e5 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223e5)
  store %struct.Memory* %call_4223e5, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 4223eb	 Bytes: 2
  %loadMem_4223eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223eb = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223eb)
  store %struct.Memory* %call_4223eb, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 4223ed	 Bytes: 6
  %loadMem_4223ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223ed = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223ed)
  store %struct.Memory* %call_4223ed, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 4223f3	 Bytes: 3
  %loadMem_4223f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223f3 = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223f3)
  store %struct.Memory* %call_4223f3, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 4223f6	 Bytes: 4
  %loadMem_4223f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223f6 = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223f6)
  store %struct.Memory* %call_4223f6, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 4223fa	 Bytes: 3
  %loadMem_4223fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223fa = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223fa)
  store %struct.Memory* %call_4223fa, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 4223fd	 Bytes: 3
  %loadMem_4223fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4223fd = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4223fd)
  store %struct.Memory* %call_4223fd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 422400	 Bytes: 3
  %loadMem_422400 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422400 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422400)
  store %struct.Memory* %call_422400, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 422403	 Bytes: 4
  %loadMem_422403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422403 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422403)
  store %struct.Memory* %call_422403, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 422407	 Bytes: 4
  %loadMem_422407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422407 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422407)
  store %struct.Memory* %call_422407, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 42240b	 Bytes: 4
  %loadMem_42240b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42240b = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42240b)
  store %struct.Memory* %call_42240b, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 42240f	 Bytes: 6
  %loadMem_42240f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42240f = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42240f)
  store %struct.Memory* %call_42240f, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 422415	 Bytes: 7
  %loadMem_422415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422415 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422415)
  store %struct.Memory* %call_422415, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 42241c	 Bytes: 7
  %loadMem_42241c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42241c = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42241c)
  store %struct.Memory* %call_42241c, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 422423	 Bytes: 3
  %loadMem_422423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422423 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422423)
  store %struct.Memory* %call_422423, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 422426	 Bytes: 4
  %loadMem_422426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422426 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422426)
  store %struct.Memory* %call_422426, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 42242a	 Bytes: 4
  %loadMem_42242a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42242a = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42242a)
  store %struct.Memory* %call_42242a, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 42242e	 Bytes: 3
  %loadMem_42242e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42242e = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42242e)
  store %struct.Memory* %call_42242e, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 422431	 Bytes: 3
  %loadMem_422431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422431 = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422431)
  store %struct.Memory* %call_422431, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 422434	 Bytes: 5
  %loadMem_422434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422434 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422434)
  store %struct.Memory* %call_422434, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 422439	 Bytes: 5
  %loadMem_422439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422439 = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422439)
  store %struct.Memory* %call_422439, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 42243e	 Bytes: 4
  %loadMem_42243e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42243e = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42243e)
  store %struct.Memory* %call_42243e, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 422442	 Bytes: 5
  %loadMem1_422442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_422442 = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_422442, i64 -8082, i64 5, i64 5)
  store %struct.Memory* %call1_422442, %struct.Memory** %MEMORY

  %loadMem2_422442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_422442 = load i64, i64* %3
  %call2_422442 = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_422442, %struct.Memory* %loadMem2_422442)
  store %struct.Memory* %call2_422442, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 422447	 Bytes: 3
  %loadMem_422447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422447 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422447)
  store %struct.Memory* %call_422447, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42244a	 Bytes: 3
  %loadMem_42244a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42244a = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42244a)
  store %struct.Memory* %call_42244a, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 42244d	 Bytes: 8
  %loadMem_42244d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42244d = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42244d)
  store %struct.Memory* %call_42244d, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 422455	 Bytes: 3
  %loadMem_422455 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422455 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422455)
  store %struct.Memory* %call_422455, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 422458	 Bytes: 6
  %loadMem_422458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422458 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422458)
  store %struct.Memory* %call_422458, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 42245e	 Bytes: 3
  %loadMem_42245e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42245e = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42245e)
  store %struct.Memory* %call_42245e, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 422461	 Bytes: 3
  %loadMem_422461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422461 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422461)
  store %struct.Memory* %call_422461, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 422464	 Bytes: 4
  %loadMem_422464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422464 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422464)
  store %struct.Memory* %call_422464, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 422468	 Bytes: 3
  %loadMem_422468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422468 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422468)
  store %struct.Memory* %call_422468, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 42246b	 Bytes: 6
  %loadMem_42246b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42246b = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42246b)
  store %struct.Memory* %call_42246b, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422471	 Bytes: 3
  %loadMem_422471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422471 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422471)
  store %struct.Memory* %call_422471, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 422474	 Bytes: 3
  %loadMem_422474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422474 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422474)
  store %struct.Memory* %call_422474, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 422477	 Bytes: 3
  %loadMem_422477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422477 = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422477)
  store %struct.Memory* %call_422477, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42247a	 Bytes: 3
  %loadMem_42247a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42247a = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42247a)
  store %struct.Memory* %call_42247a, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 42247d	 Bytes: 3
  %loadMem_42247d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42247d = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42247d)
  store %struct.Memory* %call_42247d, %struct.Memory** %MEMORY

  ; Code: jge .L_42249e	 RIP: 422480	 Bytes: 6
  %loadMem_422480 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422480 = call %struct.Memory* @routine_jge_.L_42249e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422480, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_422480, %struct.Memory** %MEMORY

  %loadBr_422480 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422480 = icmp eq i8 %loadBr_422480, 1
  br i1 %cmpBr_422480, label %block_.L_42249e, label %block_422486

block_422486:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 422486	 Bytes: 3
  %loadMem_422486 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422486 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422486)
  store %struct.Memory* %call_422486, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 422489	 Bytes: 6
  %loadMem_422489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422489 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422489)
  store %struct.Memory* %call_422489, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 42248f	 Bytes: 3
  %loadMem_42248f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42248f = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42248f)
  store %struct.Memory* %call_42248f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 422492	 Bytes: 6
  %loadMem_422492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422492 = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422492)
  store %struct.Memory* %call_422492, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 422498	 Bytes: 3
  %loadMem_422498 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422498 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422498)
  store %struct.Memory* %call_422498, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 42249b	 Bytes: 3
  %loadMem_42249b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42249b = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42249b)
  store %struct.Memory* %call_42249b, %struct.Memory** %MEMORY

  ; Code: .L_42249e:	 RIP: 42249e	 Bytes: 0
  br label %block_.L_42249e
block_.L_42249e:

  ; Code: jmpq .L_4224a3	 RIP: 42249e	 Bytes: 5
  %loadMem_42249e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42249e = call %struct.Memory* @routine_jmpq_.L_4224a3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42249e, i64 5, i64 5)
  store %struct.Memory* %call_42249e, %struct.Memory** %MEMORY

  br label %block_.L_4224a3

  ; Code: .L_4224a3:	 RIP: 4224a3	 Bytes: 0
block_.L_4224a3:

  ; Code: jmpq .L_4224a8	 RIP: 4224a3	 Bytes: 5
  %loadMem_4224a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224a3 = call %struct.Memory* @routine_jmpq_.L_4224a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224a3, i64 5, i64 5)
  store %struct.Memory* %call_4224a3, %struct.Memory** %MEMORY

  br label %block_.L_4224a8

  ; Code: .L_4224a8:	 RIP: 4224a8	 Bytes: 0
block_.L_4224a8:

  ; Code: jmpq .L_4224ad	 RIP: 4224a8	 Bytes: 5
  %loadMem_4224a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224a8 = call %struct.Memory* @routine_jmpq_.L_4224ad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224a8, i64 5, i64 5)
  store %struct.Memory* %call_4224a8, %struct.Memory** %MEMORY

  br label %block_.L_4224ad

  ; Code: .L_4224ad:	 RIP: 4224ad	 Bytes: 0
block_.L_4224ad:

  ; Code: movl -0xbc(%rbp), %eax	 RIP: 4224ad	 Bytes: 6
  %loadMem_4224ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224ad = call %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224ad)
  store %struct.Memory* %call_4224ad, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4224b3	 Bytes: 3
  %loadMem_4224b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224b3 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224b3)
  store %struct.Memory* %call_4224b3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xbc(%rbp)	 RIP: 4224b6	 Bytes: 6
  %loadMem_4224b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224b6 = call %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224b6)
  store %struct.Memory* %call_4224b6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42216b	 RIP: 4224bc	 Bytes: 5
  %loadMem_4224bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224bc = call %struct.Memory* @routine_jmpq_.L_42216b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224bc, i64 -849, i64 5)
  store %struct.Memory* %call_4224bc, %struct.Memory** %MEMORY

  br label %block_.L_42216b

  ; Code: .L_4224c1:	 RIP: 4224c1	 Bytes: 0
block_.L_4224c1:

  ; Code: movswl -0x22(%rbp), %eax	 RIP: 4224c1	 Bytes: 4
  %loadMem_4224c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224c1 = call %struct.Memory* @routine_movswl_MINUS0x22__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224c1)
  store %struct.Memory* %call_4224c1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4224c5	 Bytes: 3
  %loadMem_4224c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224c5 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224c5)
  store %struct.Memory* %call_4224c5, %struct.Memory** %MEMORY

  ; Code: jle .L_422532	 RIP: 4224c8	 Bytes: 6
  %loadMem_4224c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224c8 = call %struct.Memory* @routine_jle_.L_422532(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224c8, i8* %BRANCH_TAKEN, i64 106, i64 6, i64 6)
  store %struct.Memory* %call_4224c8, %struct.Memory** %MEMORY

  %loadBr_4224c8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4224c8 = icmp eq i8 %loadBr_4224c8, 1
  br i1 %cmpBr_4224c8, label %block_.L_422532, label %block_4224ce

block_4224ce:
  ; Code: movl -0x50(%rbp), %eax	 RIP: 4224ce	 Bytes: 3
  %loadMem_4224ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224ce = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224ce)
  store %struct.Memory* %call_4224ce, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd480, %eax	 RIP: 4224d1	 Bytes: 7
  %loadMem_4224d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224d1 = call %struct.Memory* @routine_subl_0x6cd480___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224d1)
  store %struct.Memory* %call_4224d1, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 4224d8	 Bytes: 4
  %loadMem_4224d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224d8 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224d8)
  store %struct.Memory* %call_4224d8, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6cd480, %xmm1	 RIP: 4224dc	 Bytes: 9
  %loadMem_4224dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224dc = call %struct.Memory* @routine_cvtsi2ssl_0x6cd480___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224dc)
  store %struct.Memory* %call_4224dc, %struct.Memory** %MEMORY

  ; Code: mulss -0xd4(%rbp), %xmm1	 RIP: 4224e5	 Bytes: 8
  %loadMem_4224e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224e5 = call %struct.Memory* @routine_mulss_MINUS0xd4__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224e5)
  store %struct.Memory* %call_4224e5, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 4224ed	 Bytes: 3
  %loadMem_4224ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224ed = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224ed)
  store %struct.Memory* %call_4224ed, %struct.Memory** %MEMORY

  ; Code: jbe .L_4224fb	 RIP: 4224f0	 Bytes: 6
  %loadMem_4224f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224f0 = call %struct.Memory* @routine_jbe_.L_4224fb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224f0, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4224f0, %struct.Memory** %MEMORY

  %loadBr_4224f0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4224f0 = icmp eq i8 %loadBr_4224f0, 1
  br i1 %cmpBr_4224f0, label %block_.L_4224fb, label %block_4224f6

block_4224f6:
  ; Code: jmpq .L_422f0e	 RIP: 4224f6	 Bytes: 5
  %loadMem_4224f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224f6 = call %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224f6, i64 2584, i64 5)
  store %struct.Memory* %call_4224f6, %struct.Memory** %MEMORY

  br label %block_.L_422f0e

  ; Code: .L_4224fb:	 RIP: 4224fb	 Bytes: 0
block_.L_4224fb:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 4224fb	 Bytes: 3
  %loadMem_4224fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224fb = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224fb)
  store %struct.Memory* %call_4224fb, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd480, %eax	 RIP: 4224fe	 Bytes: 7
  %loadMem_4224fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4224fe = call %struct.Memory* @routine_subl_0x6cd480___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4224fe)
  store %struct.Memory* %call_4224fe, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 422505	 Bytes: 4
  %loadMem_422505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422505 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422505)
  store %struct.Memory* %call_422505, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6cd480, %xmm1	 RIP: 422509	 Bytes: 9
  %loadMem_422509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422509 = call %struct.Memory* @routine_cvtsi2ssl_0x6cd480___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422509)
  store %struct.Memory* %call_422509, %struct.Memory** %MEMORY

  ; Code: mulss -0xd0(%rbp), %xmm1	 RIP: 422512	 Bytes: 8
  %loadMem_422512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422512 = call %struct.Memory* @routine_mulss_MINUS0xd0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422512)
  store %struct.Memory* %call_422512, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 42251a	 Bytes: 3
  %loadMem_42251a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42251a = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42251a)
  store %struct.Memory* %call_42251a, %struct.Memory** %MEMORY

  ; Code: jbe .L_422528	 RIP: 42251d	 Bytes: 6
  %loadMem_42251d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42251d = call %struct.Memory* @routine_jbe_.L_422528(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42251d, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_42251d, %struct.Memory** %MEMORY

  %loadBr_42251d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42251d = icmp eq i8 %loadBr_42251d, 1
  br i1 %cmpBr_42251d, label %block_.L_422528, label %block_422523

block_422523:
  ; Code: jmpq .L_422cbe	 RIP: 422523	 Bytes: 5
  %loadMem_422523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422523 = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422523, i64 1947, i64 5)
  store %struct.Memory* %call_422523, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_422528:	 RIP: 422528	 Bytes: 0
block_.L_422528:

  ; Code: jmpq .L_42252d	 RIP: 422528	 Bytes: 5
  %loadMem_422528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422528 = call %struct.Memory* @routine_jmpq_.L_42252d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422528, i64 5, i64 5)
  store %struct.Memory* %call_422528, %struct.Memory** %MEMORY

  br label %block_.L_42252d

  ; Code: .L_42252d:	 RIP: 42252d	 Bytes: 0
block_.L_42252d:

  ; Code: jmpq .L_422609	 RIP: 42252d	 Bytes: 5
  %loadMem_42252d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42252d = call %struct.Memory* @routine_jmpq_.L_422609(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42252d, i64 220, i64 5)
  store %struct.Memory* %call_42252d, %struct.Memory** %MEMORY

  br label %block_.L_422609

  ; Code: .L_422532:	 RIP: 422532	 Bytes: 0
block_.L_422532:

  ; Code: cmpl $0x1, -0x34(%rbp)	 RIP: 422532	 Bytes: 4
  %loadMem_422532 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422532 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422532)
  store %struct.Memory* %call_422532, %struct.Memory** %MEMORY

  ; Code: jle .L_4225a0	 RIP: 422536	 Bytes: 6
  %loadMem_422536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422536 = call %struct.Memory* @routine_jle_.L_4225a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422536, i8* %BRANCH_TAKEN, i64 106, i64 6, i64 6)
  store %struct.Memory* %call_422536, %struct.Memory** %MEMORY

  %loadBr_422536 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422536 = icmp eq i8 %loadBr_422536, 1
  br i1 %cmpBr_422536, label %block_.L_4225a0, label %block_42253c

block_42253c:
  ; Code: movl -0x50(%rbp), %eax	 RIP: 42253c	 Bytes: 3
  %loadMem_42253c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42253c = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42253c)
  store %struct.Memory* %call_42253c, %struct.Memory** %MEMORY

  ; Code: subl 0x72369c, %eax	 RIP: 42253f	 Bytes: 7
  %loadMem_42253f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42253f = call %struct.Memory* @routine_subl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42253f)
  store %struct.Memory* %call_42253f, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 422546	 Bytes: 4
  %loadMem_422546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422546 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422546)
  store %struct.Memory* %call_422546, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x72369c, %xmm1	 RIP: 42254a	 Bytes: 9
  %loadMem_42254a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42254a = call %struct.Memory* @routine_cvtsi2ssl_0x72369c___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42254a)
  store %struct.Memory* %call_42254a, %struct.Memory** %MEMORY

  ; Code: mulss -0xd4(%rbp), %xmm1	 RIP: 422553	 Bytes: 8
  %loadMem_422553 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422553 = call %struct.Memory* @routine_mulss_MINUS0xd4__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422553)
  store %struct.Memory* %call_422553, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 42255b	 Bytes: 3
  %loadMem_42255b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42255b = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42255b)
  store %struct.Memory* %call_42255b, %struct.Memory** %MEMORY

  ; Code: jbe .L_422569	 RIP: 42255e	 Bytes: 6
  %loadMem_42255e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42255e = call %struct.Memory* @routine_jbe_.L_422569(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42255e, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_42255e, %struct.Memory** %MEMORY

  %loadBr_42255e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42255e = icmp eq i8 %loadBr_42255e, 1
  br i1 %cmpBr_42255e, label %block_.L_422569, label %block_422564

block_422564:
  ; Code: jmpq .L_422f0e	 RIP: 422564	 Bytes: 5
  %loadMem_422564 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422564 = call %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422564, i64 2474, i64 5)
  store %struct.Memory* %call_422564, %struct.Memory** %MEMORY

  br label %block_.L_422f0e

  ; Code: .L_422569:	 RIP: 422569	 Bytes: 0
block_.L_422569:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 422569	 Bytes: 3
  %loadMem_422569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422569 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422569)
  store %struct.Memory* %call_422569, %struct.Memory** %MEMORY

  ; Code: subl 0x72369c, %eax	 RIP: 42256c	 Bytes: 7
  %loadMem_42256c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42256c = call %struct.Memory* @routine_subl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42256c)
  store %struct.Memory* %call_42256c, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 422573	 Bytes: 4
  %loadMem_422573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422573 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422573)
  store %struct.Memory* %call_422573, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x72369c, %xmm1	 RIP: 422577	 Bytes: 9
  %loadMem_422577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422577 = call %struct.Memory* @routine_cvtsi2ssl_0x72369c___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422577)
  store %struct.Memory* %call_422577, %struct.Memory** %MEMORY

  ; Code: mulss -0xd0(%rbp), %xmm1	 RIP: 422580	 Bytes: 8
  %loadMem_422580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422580 = call %struct.Memory* @routine_mulss_MINUS0xd0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422580)
  store %struct.Memory* %call_422580, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 422588	 Bytes: 3
  %loadMem_422588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422588 = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422588)
  store %struct.Memory* %call_422588, %struct.Memory** %MEMORY

  ; Code: jbe .L_422596	 RIP: 42258b	 Bytes: 6
  %loadMem_42258b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42258b = call %struct.Memory* @routine_jbe_.L_422596(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42258b, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_42258b, %struct.Memory** %MEMORY

  %loadBr_42258b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42258b = icmp eq i8 %loadBr_42258b, 1
  br i1 %cmpBr_42258b, label %block_.L_422596, label %block_422591

block_422591:
  ; Code: jmpq .L_422cbe	 RIP: 422591	 Bytes: 5
  %loadMem_422591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422591 = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422591, i64 1837, i64 5)
  store %struct.Memory* %call_422591, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_422596:	 RIP: 422596	 Bytes: 0
block_.L_422596:

  ; Code: jmpq .L_42259b	 RIP: 422596	 Bytes: 5
  %loadMem_422596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422596 = call %struct.Memory* @routine_jmpq_.L_42259b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422596, i64 5, i64 5)
  store %struct.Memory* %call_422596, %struct.Memory** %MEMORY

  br label %block_.L_42259b

  ; Code: .L_42259b:	 RIP: 42259b	 Bytes: 0
block_.L_42259b:

  ; Code: jmpq .L_422604	 RIP: 42259b	 Bytes: 5
  %loadMem_42259b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42259b = call %struct.Memory* @routine_jmpq_.L_422604(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42259b, i64 105, i64 5)
  store %struct.Memory* %call_42259b, %struct.Memory** %MEMORY

  br label %block_.L_422604

  ; Code: .L_4225a0:	 RIP: 4225a0	 Bytes: 0
block_.L_4225a0:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 4225a0	 Bytes: 3
  %loadMem_4225a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225a0 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225a0)
  store %struct.Memory* %call_4225a0, %struct.Memory** %MEMORY

  ; Code: subl 0x6d1900, %eax	 RIP: 4225a3	 Bytes: 7
  %loadMem_4225a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225a3 = call %struct.Memory* @routine_subl_0x6d1900___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225a3)
  store %struct.Memory* %call_4225a3, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 4225aa	 Bytes: 4
  %loadMem_4225aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225aa = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225aa)
  store %struct.Memory* %call_4225aa, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6d1900, %xmm1	 RIP: 4225ae	 Bytes: 9
  %loadMem_4225ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225ae = call %struct.Memory* @routine_cvtsi2ssl_0x6d1900___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225ae)
  store %struct.Memory* %call_4225ae, %struct.Memory** %MEMORY

  ; Code: mulss -0xd4(%rbp), %xmm1	 RIP: 4225b7	 Bytes: 8
  %loadMem_4225b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225b7 = call %struct.Memory* @routine_mulss_MINUS0xd4__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225b7)
  store %struct.Memory* %call_4225b7, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 4225bf	 Bytes: 3
  %loadMem_4225bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225bf = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225bf)
  store %struct.Memory* %call_4225bf, %struct.Memory** %MEMORY

  ; Code: jbe .L_4225cd	 RIP: 4225c2	 Bytes: 6
  %loadMem_4225c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225c2 = call %struct.Memory* @routine_jbe_.L_4225cd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225c2, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4225c2, %struct.Memory** %MEMORY

  %loadBr_4225c2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4225c2 = icmp eq i8 %loadBr_4225c2, 1
  br i1 %cmpBr_4225c2, label %block_.L_4225cd, label %block_4225c8

block_4225c8:
  ; Code: jmpq .L_422f0e	 RIP: 4225c8	 Bytes: 5
  %loadMem_4225c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225c8 = call %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225c8, i64 2374, i64 5)
  store %struct.Memory* %call_4225c8, %struct.Memory** %MEMORY

  br label %block_.L_422f0e

  ; Code: .L_4225cd:	 RIP: 4225cd	 Bytes: 0
block_.L_4225cd:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 4225cd	 Bytes: 3
  %loadMem_4225cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225cd = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225cd)
  store %struct.Memory* %call_4225cd, %struct.Memory** %MEMORY

  ; Code: subl 0x6d1900, %eax	 RIP: 4225d0	 Bytes: 7
  %loadMem_4225d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225d0 = call %struct.Memory* @routine_subl_0x6d1900___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225d0)
  store %struct.Memory* %call_4225d0, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 4225d7	 Bytes: 4
  %loadMem_4225d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225d7 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225d7)
  store %struct.Memory* %call_4225d7, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6d1900, %xmm1	 RIP: 4225db	 Bytes: 9
  %loadMem_4225db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225db = call %struct.Memory* @routine_cvtsi2ssl_0x6d1900___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225db)
  store %struct.Memory* %call_4225db, %struct.Memory** %MEMORY

  ; Code: mulss -0xd0(%rbp), %xmm1	 RIP: 4225e4	 Bytes: 8
  %loadMem_4225e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225e4 = call %struct.Memory* @routine_mulss_MINUS0xd0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225e4)
  store %struct.Memory* %call_4225e4, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 4225ec	 Bytes: 3
  %loadMem_4225ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225ec = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225ec)
  store %struct.Memory* %call_4225ec, %struct.Memory** %MEMORY

  ; Code: jbe .L_4225fa	 RIP: 4225ef	 Bytes: 6
  %loadMem_4225ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225ef = call %struct.Memory* @routine_jbe_.L_4225fa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225ef, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4225ef, %struct.Memory** %MEMORY

  %loadBr_4225ef = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4225ef = icmp eq i8 %loadBr_4225ef, 1
  br i1 %cmpBr_4225ef, label %block_.L_4225fa, label %block_4225f5

block_4225f5:
  ; Code: jmpq .L_422cbe	 RIP: 4225f5	 Bytes: 5
  %loadMem_4225f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225f5 = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225f5, i64 1737, i64 5)
  store %struct.Memory* %call_4225f5, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_4225fa:	 RIP: 4225fa	 Bytes: 0
block_.L_4225fa:

  ; Code: jmpq .L_4225ff	 RIP: 4225fa	 Bytes: 5
  %loadMem_4225fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225fa = call %struct.Memory* @routine_jmpq_.L_4225ff(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225fa, i64 5, i64 5)
  store %struct.Memory* %call_4225fa, %struct.Memory** %MEMORY

  br label %block_.L_4225ff

  ; Code: .L_4225ff:	 RIP: 4225ff	 Bytes: 0
block_.L_4225ff:

  ; Code: jmpq .L_422604	 RIP: 4225ff	 Bytes: 5
  %loadMem_4225ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4225ff = call %struct.Memory* @routine_jmpq_.L_422604(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4225ff, i64 5, i64 5)
  store %struct.Memory* %call_4225ff, %struct.Memory** %MEMORY

  br label %block_.L_422604

  ; Code: .L_422604:	 RIP: 422604	 Bytes: 0
block_.L_422604:

  ; Code: jmpq .L_422609	 RIP: 422604	 Bytes: 5
  %loadMem_422604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422604 = call %struct.Memory* @routine_jmpq_.L_422609(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422604, i64 5, i64 5)
  store %struct.Memory* %call_422604, %struct.Memory** %MEMORY

  br label %block_.L_422609

  ; Code: .L_422609:	 RIP: 422609	 Bytes: 0
block_.L_422609:

  ; Code: movl -0xa8(%rbp), %eax	 RIP: 422609	 Bytes: 6
  %loadMem_422609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422609 = call %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422609)
  store %struct.Memory* %call_422609, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb8(%rbp)	 RIP: 42260f	 Bytes: 6
  %loadMem_42260f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42260f = call %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42260f)
  store %struct.Memory* %call_42260f, %struct.Memory** %MEMORY

  ; Code: movl -0xac(%rbp), %eax	 RIP: 422615	 Bytes: 6
  %loadMem_422615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422615 = call %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422615)
  store %struct.Memory* %call_422615, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb4(%rbp)	 RIP: 42261b	 Bytes: 6
  %loadMem_42261b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42261b = call %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42261b)
  store %struct.Memory* %call_42261b, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0x5c(%rbp)	 RIP: 422621	 Bytes: 7
  %loadMem_422621 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422621 = call %struct.Memory* @routine_movl__0x1__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422621)
  store %struct.Memory* %call_422621, %struct.Memory** %MEMORY

  ; Code: .L_422628:	 RIP: 422628	 Bytes: 0
  br label %block_.L_422628
block_.L_422628:

  ; Code: cmpl $0x19, -0x5c(%rbp)	 RIP: 422628	 Bytes: 4
  %loadMem_422628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422628 = call %struct.Memory* @routine_cmpl__0x19__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422628)
  store %struct.Memory* %call_422628, %struct.Memory** %MEMORY

  ; Code: jge .L_4227df	 RIP: 42262c	 Bytes: 6
  %loadMem_42262c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42262c = call %struct.Memory* @routine_jge_.L_4227df(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42262c, i8* %BRANCH_TAKEN, i64 435, i64 6, i64 6)
  store %struct.Memory* %call_42262c, %struct.Memory** %MEMORY

  %loadBr_42262c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42262c = icmp eq i8 %loadBr_42262c, 1
  br i1 %cmpBr_42262c, label %block_.L_4227df, label %block_422632

block_422632:
  ; Code: movl -0xb8(%rbp), %eax	 RIP: 422632	 Bytes: 6
  %loadMem_422632 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422632 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422632)
  store %struct.Memory* %call_422632, %struct.Memory** %MEMORY

  ; Code: movq 0x6d09a0, %rcx	 RIP: 422638	 Bytes: 8
  %loadMem_422638 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422638 = call %struct.Memory* @routine_movq_0x6d09a0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422638)
  store %struct.Memory* %call_422638, %struct.Memory** %MEMORY

  ; Code: movslq -0x5c(%rbp), %rdx	 RIP: 422640	 Bytes: 4
  %loadMem_422640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422640 = call %struct.Memory* @routine_movslq_MINUS0x5c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422640)
  store %struct.Memory* %call_422640, %struct.Memory** %MEMORY

  ; Code: addl (%rcx,%rdx,4), %eax	 RIP: 422644	 Bytes: 3
  %loadMem_422644 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422644 = call %struct.Memory* @routine_addl___rcx__rdx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422644)
  store %struct.Memory* %call_422644, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 422647	 Bytes: 3
  %loadMem_422647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422647 = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422647)
  store %struct.Memory* %call_422647, %struct.Memory** %MEMORY

  ; Code: movl -0xb4(%rbp), %eax	 RIP: 42264a	 Bytes: 6
  %loadMem_42264a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42264a = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42264a)
  store %struct.Memory* %call_42264a, %struct.Memory** %MEMORY

  ; Code: movq 0x711c50, %rcx	 RIP: 422650	 Bytes: 8
  %loadMem_422650 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422650 = call %struct.Memory* @routine_movq_0x711c50___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422650)
  store %struct.Memory* %call_422650, %struct.Memory** %MEMORY

  ; Code: movslq -0x5c(%rbp), %rdx	 RIP: 422658	 Bytes: 4
  %loadMem_422658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422658 = call %struct.Memory* @routine_movslq_MINUS0x5c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422658)
  store %struct.Memory* %call_422658, %struct.Memory** %MEMORY

  ; Code: addl (%rcx,%rdx,4), %eax	 RIP: 42265c	 Bytes: 3
  %loadMem_42265c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42265c = call %struct.Memory* @routine_addl___rcx__rdx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42265c)
  store %struct.Memory* %call_42265c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x64(%rbp)	 RIP: 42265f	 Bytes: 3
  %loadMem_42265f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42265f = call %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42265f)
  store %struct.Memory* %call_42265f, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 422662	 Bytes: 3
  %loadMem_422662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422662 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422662)
  store %struct.Memory* %call_422662, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 422665	 Bytes: 6
  %loadMem_422665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422665 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422665)
  store %struct.Memory* %call_422665, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 42266b	 Bytes: 2
  %loadMem_42266b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42266b = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42266b)
  store %struct.Memory* %call_42266b, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 42266d	 Bytes: 5
  %loadMem1_42266d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42266d = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42266d, i64 -136813, i64 5, i64 5)
  store %struct.Memory* %call1_42266d, %struct.Memory** %MEMORY

  %loadMem2_42266d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42266d = load i64, i64* %3
  %call2_42266d = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_42266d, %struct.Memory* %loadMem2_42266d)
  store %struct.Memory* %call2_42266d, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 422672	 Bytes: 3
  %loadMem_422672 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422672 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422672)
  store %struct.Memory* %call_422672, %struct.Memory** %MEMORY

  ; Code: jg .L_4227cc	 RIP: 422675	 Bytes: 6
  %loadMem_422675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422675 = call %struct.Memory* @routine_jg_.L_4227cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422675, i8* %BRANCH_TAKEN, i64 343, i64 6, i64 6)
  store %struct.Memory* %call_422675, %struct.Memory** %MEMORY

  %loadBr_422675 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422675 = icmp eq i8 %loadBr_422675, 1
  br i1 %cmpBr_422675, label %block_.L_4227cc, label %block_42267b

block_42267b:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 42267b	 Bytes: 3
  %loadMem_42267b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42267b = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42267b)
  store %struct.Memory* %call_42267b, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 42267e	 Bytes: 6
  %loadMem_42267e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42267e = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42267e)
  store %struct.Memory* %call_42267e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 422684	 Bytes: 2
  %loadMem_422684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422684 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422684)
  store %struct.Memory* %call_422684, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 422686	 Bytes: 5
  %loadMem1_422686 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_422686 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_422686, i64 -136838, i64 5, i64 5)
  store %struct.Memory* %call1_422686, %struct.Memory** %MEMORY

  %loadMem2_422686 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_422686 = load i64, i64* %3
  %call2_422686 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_422686, %struct.Memory* %loadMem2_422686)
  store %struct.Memory* %call2_422686, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 42268b	 Bytes: 3
  %loadMem_42268b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42268b = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42268b)
  store %struct.Memory* %call_42268b, %struct.Memory** %MEMORY

  ; Code: jg .L_4227cc	 RIP: 42268e	 Bytes: 6
  %loadMem_42268e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42268e = call %struct.Memory* @routine_jg_.L_4227cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42268e, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_42268e, %struct.Memory** %MEMORY

  %loadBr_42268e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42268e = icmp eq i8 %loadBr_42268e, 1
  br i1 %cmpBr_42268e, label %block_.L_4227cc, label %block_422694

block_422694:
  ; Code: movq 0x6d32d0, %rax	 RIP: 422694	 Bytes: 8
  %loadMem_422694 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422694 = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422694)
  store %struct.Memory* %call_422694, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 42269c	 Bytes: 3
  %loadMem_42269c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42269c = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42269c)
  store %struct.Memory* %call_42269c, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 42269f	 Bytes: 6
  %loadMem_42269f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42269f = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42269f)
  store %struct.Memory* %call_42269f, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 4226a5	 Bytes: 3
  %loadMem_4226a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226a5 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226a5)
  store %struct.Memory* %call_4226a5, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 4226a8	 Bytes: 3
  %loadMem_4226a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226a8 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226a8)
  store %struct.Memory* %call_4226a8, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4226ab	 Bytes: 4
  %loadMem_4226ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226ab = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226ab)
  store %struct.Memory* %call_4226ab, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 4226af	 Bytes: 3
  %loadMem_4226af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226af = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226af)
  store %struct.Memory* %call_4226af, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 4226b2	 Bytes: 6
  %loadMem_4226b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226b2 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226b2)
  store %struct.Memory* %call_4226b2, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 4226b8	 Bytes: 3
  %loadMem_4226b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226b8 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226b8)
  store %struct.Memory* %call_4226b8, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 4226bb	 Bytes: 3
  %loadMem_4226bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226bb = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226bb)
  store %struct.Memory* %call_4226bb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 4226be	 Bytes: 4
  %loadMem_4226be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226be = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226be)
  store %struct.Memory* %call_4226be, %struct.Memory** %MEMORY

  ; Code: jne .L_4227c7	 RIP: 4226c2	 Bytes: 6
  %loadMem_4226c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226c2 = call %struct.Memory* @routine_jne_.L_4227c7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226c2, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_4226c2, %struct.Memory** %MEMORY

  %loadBr_4226c2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4226c2 = icmp eq i8 %loadBr_4226c2, 1
  br i1 %cmpBr_4226c2, label %block_.L_4227c7, label %block_4226c8

block_4226c8:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 4226c8	 Bytes: 6
  %loadMem_4226c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226c8 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226c8)
  store %struct.Memory* %call_4226c8, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 4226ce	 Bytes: 8
  %loadMem_4226ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226ce = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226ce)
  store %struct.Memory* %call_4226ce, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 4226d6	 Bytes: 3
  %loadMem_4226d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226d6 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226d6)
  store %struct.Memory* %call_4226d6, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 4226d9	 Bytes: 6
  %loadMem_4226d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226d9 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226d9)
  store %struct.Memory* %call_4226d9, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x188(%rbp)	 RIP: 4226df	 Bytes: 7
  %loadMem_4226df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226df = call %struct.Memory* @routine_movq__rcx__MINUS0x188__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226df)
  store %struct.Memory* %call_4226df, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 4226e6	 Bytes: 2
  %loadMem_4226e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226e6 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226e6)
  store %struct.Memory* %call_4226e6, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 4226e8	 Bytes: 2
  %loadMem_4226e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226e8 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226e8)
  store %struct.Memory* %call_4226e8, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 4226ea	 Bytes: 6
  %loadMem_4226ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226ea = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226ea)
  store %struct.Memory* %call_4226ea, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 4226f0	 Bytes: 3
  %loadMem_4226f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226f0 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226f0)
  store %struct.Memory* %call_4226f0, %struct.Memory** %MEMORY

  ; Code: movq -0x188(%rbp), %r8	 RIP: 4226f3	 Bytes: 7
  %loadMem_4226f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226f3 = call %struct.Memory* @routine_movq_MINUS0x188__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226f3)
  store %struct.Memory* %call_4226f3, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 4226fa	 Bytes: 4
  %loadMem_4226fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226fa = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226fa)
  store %struct.Memory* %call_4226fa, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 4226fe	 Bytes: 8
  %loadMem_4226fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4226fe = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4226fe)
  store %struct.Memory* %call_4226fe, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 422706	 Bytes: 3
  %loadMem_422706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422706 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422706)
  store %struct.Memory* %call_422706, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 422709	 Bytes: 6
  %loadMem_422709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422709 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422709)
  store %struct.Memory* %call_422709, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 42270f	 Bytes: 2
  %loadMem_42270f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42270f = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42270f)
  store %struct.Memory* %call_42270f, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 422711	 Bytes: 6
  %loadMem_422711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422711 = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422711)
  store %struct.Memory* %call_422711, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 422717	 Bytes: 3
  %loadMem_422717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422717 = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422717)
  store %struct.Memory* %call_422717, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 42271a	 Bytes: 4
  %loadMem_42271a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42271a = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42271a)
  store %struct.Memory* %call_42271a, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 42271e	 Bytes: 3
  %loadMem_42271e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42271e = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42271e)
  store %struct.Memory* %call_42271e, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 422721	 Bytes: 3
  %loadMem_422721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422721 = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422721)
  store %struct.Memory* %call_422721, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 422724	 Bytes: 3
  %loadMem_422724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422724 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422724)
  store %struct.Memory* %call_422724, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 422727	 Bytes: 4
  %loadMem_422727 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422727 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422727)
  store %struct.Memory* %call_422727, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 42272b	 Bytes: 4
  %loadMem_42272b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42272b = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42272b)
  store %struct.Memory* %call_42272b, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 42272f	 Bytes: 4
  %loadMem_42272f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42272f = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42272f)
  store %struct.Memory* %call_42272f, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 422733	 Bytes: 6
  %loadMem_422733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422733 = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422733)
  store %struct.Memory* %call_422733, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 422739	 Bytes: 7
  %loadMem_422739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422739 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422739)
  store %struct.Memory* %call_422739, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 422740	 Bytes: 7
  %loadMem_422740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422740 = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422740)
  store %struct.Memory* %call_422740, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 422747	 Bytes: 3
  %loadMem_422747 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422747 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422747)
  store %struct.Memory* %call_422747, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 42274a	 Bytes: 4
  %loadMem_42274a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42274a = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42274a)
  store %struct.Memory* %call_42274a, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 42274e	 Bytes: 4
  %loadMem_42274e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42274e = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42274e)
  store %struct.Memory* %call_42274e, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 422752	 Bytes: 3
  %loadMem_422752 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422752 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422752)
  store %struct.Memory* %call_422752, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 422755	 Bytes: 3
  %loadMem_422755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422755 = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422755)
  store %struct.Memory* %call_422755, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 422758	 Bytes: 5
  %loadMem_422758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422758 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422758)
  store %struct.Memory* %call_422758, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 42275d	 Bytes: 5
  %loadMem_42275d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42275d = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42275d)
  store %struct.Memory* %call_42275d, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 422762	 Bytes: 4
  %loadMem_422762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422762 = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422762)
  store %struct.Memory* %call_422762, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 422766	 Bytes: 5
  %loadMem1_422766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_422766 = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_422766, i64 -8886, i64 5, i64 5)
  store %struct.Memory* %call1_422766, %struct.Memory** %MEMORY

  %loadMem2_422766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_422766 = load i64, i64* %3
  %call2_422766 = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_422766, %struct.Memory* %loadMem2_422766)
  store %struct.Memory* %call2_422766, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 42276b	 Bytes: 3
  %loadMem_42276b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42276b = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42276b)
  store %struct.Memory* %call_42276b, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42276e	 Bytes: 3
  %loadMem_42276e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42276e = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42276e)
  store %struct.Memory* %call_42276e, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 422771	 Bytes: 8
  %loadMem_422771 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422771 = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422771)
  store %struct.Memory* %call_422771, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 422779	 Bytes: 3
  %loadMem_422779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422779 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422779)
  store %struct.Memory* %call_422779, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 42277c	 Bytes: 6
  %loadMem_42277c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42277c = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42277c)
  store %struct.Memory* %call_42277c, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422782	 Bytes: 3
  %loadMem_422782 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422782 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422782)
  store %struct.Memory* %call_422782, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 422785	 Bytes: 3
  %loadMem_422785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422785 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422785)
  store %struct.Memory* %call_422785, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 422788	 Bytes: 4
  %loadMem_422788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422788 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422788)
  store %struct.Memory* %call_422788, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 42278c	 Bytes: 3
  %loadMem_42278c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42278c = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42278c)
  store %struct.Memory* %call_42278c, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 42278f	 Bytes: 6
  %loadMem_42278f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42278f = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42278f)
  store %struct.Memory* %call_42278f, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422795	 Bytes: 3
  %loadMem_422795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422795 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422795)
  store %struct.Memory* %call_422795, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 422798	 Bytes: 3
  %loadMem_422798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422798 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422798)
  store %struct.Memory* %call_422798, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 42279b	 Bytes: 3
  %loadMem_42279b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42279b = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42279b)
  store %struct.Memory* %call_42279b, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42279e	 Bytes: 3
  %loadMem_42279e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42279e = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42279e)
  store %struct.Memory* %call_42279e, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 4227a1	 Bytes: 3
  %loadMem_4227a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227a1 = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227a1)
  store %struct.Memory* %call_4227a1, %struct.Memory** %MEMORY

  ; Code: jge .L_4227c2	 RIP: 4227a4	 Bytes: 6
  %loadMem_4227a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227a4 = call %struct.Memory* @routine_jge_.L_4227c2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227a4, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_4227a4, %struct.Memory** %MEMORY

  %loadBr_4227a4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4227a4 = icmp eq i8 %loadBr_4227a4, 1
  br i1 %cmpBr_4227a4, label %block_.L_4227c2, label %block_4227aa

block_4227aa:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 4227aa	 Bytes: 3
  %loadMem_4227aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227aa = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227aa)
  store %struct.Memory* %call_4227aa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 4227ad	 Bytes: 6
  %loadMem_4227ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227ad = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227ad)
  store %struct.Memory* %call_4227ad, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 4227b3	 Bytes: 3
  %loadMem_4227b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227b3 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227b3)
  store %struct.Memory* %call_4227b3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 4227b6	 Bytes: 6
  %loadMem_4227b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227b6 = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227b6)
  store %struct.Memory* %call_4227b6, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 4227bc	 Bytes: 3
  %loadMem_4227bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227bc = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227bc)
  store %struct.Memory* %call_4227bc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 4227bf	 Bytes: 3
  %loadMem_4227bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227bf = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227bf)
  store %struct.Memory* %call_4227bf, %struct.Memory** %MEMORY

  ; Code: .L_4227c2:	 RIP: 4227c2	 Bytes: 0
  br label %block_.L_4227c2
block_.L_4227c2:

  ; Code: jmpq .L_4227c7	 RIP: 4227c2	 Bytes: 5
  %loadMem_4227c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227c2 = call %struct.Memory* @routine_jmpq_.L_4227c7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227c2, i64 5, i64 5)
  store %struct.Memory* %call_4227c2, %struct.Memory** %MEMORY

  br label %block_.L_4227c7

  ; Code: .L_4227c7:	 RIP: 4227c7	 Bytes: 0
block_.L_4227c7:

  ; Code: jmpq .L_4227cc	 RIP: 4227c7	 Bytes: 5
  %loadMem_4227c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227c7 = call %struct.Memory* @routine_jmpq_.L_4227cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227c7, i64 5, i64 5)
  store %struct.Memory* %call_4227c7, %struct.Memory** %MEMORY

  br label %block_.L_4227cc

  ; Code: .L_4227cc:	 RIP: 4227cc	 Bytes: 0
block_.L_4227cc:

  ; Code: jmpq .L_4227d1	 RIP: 4227cc	 Bytes: 5
  %loadMem_4227cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227cc = call %struct.Memory* @routine_jmpq_.L_4227d1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227cc, i64 5, i64 5)
  store %struct.Memory* %call_4227cc, %struct.Memory** %MEMORY

  br label %block_.L_4227d1

  ; Code: .L_4227d1:	 RIP: 4227d1	 Bytes: 0
block_.L_4227d1:

  ; Code: movl -0x5c(%rbp), %eax	 RIP: 4227d1	 Bytes: 3
  %loadMem_4227d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227d1 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227d1)
  store %struct.Memory* %call_4227d1, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4227d4	 Bytes: 3
  %loadMem_4227d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227d4 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227d4)
  store %struct.Memory* %call_4227d4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5c(%rbp)	 RIP: 4227d7	 Bytes: 3
  %loadMem_4227d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227d7 = call %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227d7)
  store %struct.Memory* %call_4227d7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_422628	 RIP: 4227da	 Bytes: 5
  %loadMem_4227da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227da = call %struct.Memory* @routine_jmpq_.L_422628(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227da, i64 -434, i64 5)
  store %struct.Memory* %call_4227da, %struct.Memory** %MEMORY

  br label %block_.L_422628

  ; Code: .L_4227df:	 RIP: 4227df	 Bytes: 0
block_.L_4227df:

  ; Code: movswl -0x22(%rbp), %eax	 RIP: 4227df	 Bytes: 4
  %loadMem_4227df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227df = call %struct.Memory* @routine_movswl_MINUS0x22__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227df)
  store %struct.Memory* %call_4227df, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4227e3	 Bytes: 3
  %loadMem_4227e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227e3 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227e3)
  store %struct.Memory* %call_4227e3, %struct.Memory** %MEMORY

  ; Code: jle .L_422850	 RIP: 4227e6	 Bytes: 6
  %loadMem_4227e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227e6 = call %struct.Memory* @routine_jle_.L_422850(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227e6, i8* %BRANCH_TAKEN, i64 106, i64 6, i64 6)
  store %struct.Memory* %call_4227e6, %struct.Memory** %MEMORY

  %loadBr_4227e6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4227e6 = icmp eq i8 %loadBr_4227e6, 1
  br i1 %cmpBr_4227e6, label %block_.L_422850, label %block_4227ec

block_4227ec:
  ; Code: movl -0x50(%rbp), %eax	 RIP: 4227ec	 Bytes: 3
  %loadMem_4227ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227ec = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227ec)
  store %struct.Memory* %call_4227ec, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd480, %eax	 RIP: 4227ef	 Bytes: 7
  %loadMem_4227ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227ef = call %struct.Memory* @routine_subl_0x6cd480___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227ef)
  store %struct.Memory* %call_4227ef, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 4227f6	 Bytes: 4
  %loadMem_4227f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227f6 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227f6)
  store %struct.Memory* %call_4227f6, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6cd480, %xmm1	 RIP: 4227fa	 Bytes: 9
  %loadMem_4227fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4227fa = call %struct.Memory* @routine_cvtsi2ssl_0x6cd480___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4227fa)
  store %struct.Memory* %call_4227fa, %struct.Memory** %MEMORY

  ; Code: mulss -0xd4(%rbp), %xmm1	 RIP: 422803	 Bytes: 8
  %loadMem_422803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422803 = call %struct.Memory* @routine_mulss_MINUS0xd4__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422803)
  store %struct.Memory* %call_422803, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 42280b	 Bytes: 3
  %loadMem_42280b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42280b = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42280b)
  store %struct.Memory* %call_42280b, %struct.Memory** %MEMORY

  ; Code: jbe .L_422819	 RIP: 42280e	 Bytes: 6
  %loadMem_42280e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42280e = call %struct.Memory* @routine_jbe_.L_422819(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42280e, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_42280e, %struct.Memory** %MEMORY

  %loadBr_42280e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42280e = icmp eq i8 %loadBr_42280e, 1
  br i1 %cmpBr_42280e, label %block_.L_422819, label %block_422814

block_422814:
  ; Code: jmpq .L_422f0e	 RIP: 422814	 Bytes: 5
  %loadMem_422814 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422814 = call %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422814, i64 1786, i64 5)
  store %struct.Memory* %call_422814, %struct.Memory** %MEMORY

  br label %block_.L_422f0e

  ; Code: .L_422819:	 RIP: 422819	 Bytes: 0
block_.L_422819:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 422819	 Bytes: 3
  %loadMem_422819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422819 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422819)
  store %struct.Memory* %call_422819, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd480, %eax	 RIP: 42281c	 Bytes: 7
  %loadMem_42281c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42281c = call %struct.Memory* @routine_subl_0x6cd480___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42281c)
  store %struct.Memory* %call_42281c, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 422823	 Bytes: 4
  %loadMem_422823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422823 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422823)
  store %struct.Memory* %call_422823, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6cd480, %xmm1	 RIP: 422827	 Bytes: 9
  %loadMem_422827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422827 = call %struct.Memory* @routine_cvtsi2ssl_0x6cd480___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422827)
  store %struct.Memory* %call_422827, %struct.Memory** %MEMORY

  ; Code: mulss -0xd0(%rbp), %xmm1	 RIP: 422830	 Bytes: 8
  %loadMem_422830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422830 = call %struct.Memory* @routine_mulss_MINUS0xd0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422830)
  store %struct.Memory* %call_422830, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 422838	 Bytes: 3
  %loadMem_422838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422838 = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422838)
  store %struct.Memory* %call_422838, %struct.Memory** %MEMORY

  ; Code: jbe .L_422846	 RIP: 42283b	 Bytes: 6
  %loadMem_42283b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42283b = call %struct.Memory* @routine_jbe_.L_422846(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42283b, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_42283b, %struct.Memory** %MEMORY

  %loadBr_42283b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42283b = icmp eq i8 %loadBr_42283b, 1
  br i1 %cmpBr_42283b, label %block_.L_422846, label %block_422841

block_422841:
  ; Code: jmpq .L_422cbe	 RIP: 422841	 Bytes: 5
  %loadMem_422841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422841 = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422841, i64 1149, i64 5)
  store %struct.Memory* %call_422841, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_422846:	 RIP: 422846	 Bytes: 0
block_.L_422846:

  ; Code: jmpq .L_42284b	 RIP: 422846	 Bytes: 5
  %loadMem_422846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422846 = call %struct.Memory* @routine_jmpq_.L_42284b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422846, i64 5, i64 5)
  store %struct.Memory* %call_422846, %struct.Memory** %MEMORY

  br label %block_.L_42284b

  ; Code: .L_42284b:	 RIP: 42284b	 Bytes: 0
block_.L_42284b:

  ; Code: jmpq .L_422927	 RIP: 42284b	 Bytes: 5
  %loadMem_42284b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42284b = call %struct.Memory* @routine_jmpq_.L_422927(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42284b, i64 220, i64 5)
  store %struct.Memory* %call_42284b, %struct.Memory** %MEMORY

  br label %block_.L_422927

  ; Code: .L_422850:	 RIP: 422850	 Bytes: 0
block_.L_422850:

  ; Code: cmpl $0x1, -0x34(%rbp)	 RIP: 422850	 Bytes: 4
  %loadMem_422850 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422850 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422850)
  store %struct.Memory* %call_422850, %struct.Memory** %MEMORY

  ; Code: jle .L_4228be	 RIP: 422854	 Bytes: 6
  %loadMem_422854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422854 = call %struct.Memory* @routine_jle_.L_4228be(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422854, i8* %BRANCH_TAKEN, i64 106, i64 6, i64 6)
  store %struct.Memory* %call_422854, %struct.Memory** %MEMORY

  %loadBr_422854 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422854 = icmp eq i8 %loadBr_422854, 1
  br i1 %cmpBr_422854, label %block_.L_4228be, label %block_42285a

block_42285a:
  ; Code: movl -0x50(%rbp), %eax	 RIP: 42285a	 Bytes: 3
  %loadMem_42285a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42285a = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42285a)
  store %struct.Memory* %call_42285a, %struct.Memory** %MEMORY

  ; Code: subl 0x72369c, %eax	 RIP: 42285d	 Bytes: 7
  %loadMem_42285d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42285d = call %struct.Memory* @routine_subl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42285d)
  store %struct.Memory* %call_42285d, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 422864	 Bytes: 4
  %loadMem_422864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422864 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422864)
  store %struct.Memory* %call_422864, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x72369c, %xmm1	 RIP: 422868	 Bytes: 9
  %loadMem_422868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422868 = call %struct.Memory* @routine_cvtsi2ssl_0x72369c___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422868)
  store %struct.Memory* %call_422868, %struct.Memory** %MEMORY

  ; Code: mulss -0xd4(%rbp), %xmm1	 RIP: 422871	 Bytes: 8
  %loadMem_422871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422871 = call %struct.Memory* @routine_mulss_MINUS0xd4__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422871)
  store %struct.Memory* %call_422871, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 422879	 Bytes: 3
  %loadMem_422879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422879 = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422879)
  store %struct.Memory* %call_422879, %struct.Memory** %MEMORY

  ; Code: jbe .L_422887	 RIP: 42287c	 Bytes: 6
  %loadMem_42287c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42287c = call %struct.Memory* @routine_jbe_.L_422887(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42287c, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_42287c, %struct.Memory** %MEMORY

  %loadBr_42287c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42287c = icmp eq i8 %loadBr_42287c, 1
  br i1 %cmpBr_42287c, label %block_.L_422887, label %block_422882

block_422882:
  ; Code: jmpq .L_422f0e	 RIP: 422882	 Bytes: 5
  %loadMem_422882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422882 = call %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422882, i64 1676, i64 5)
  store %struct.Memory* %call_422882, %struct.Memory** %MEMORY

  br label %block_.L_422f0e

  ; Code: .L_422887:	 RIP: 422887	 Bytes: 0
block_.L_422887:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 422887	 Bytes: 3
  %loadMem_422887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422887 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422887)
  store %struct.Memory* %call_422887, %struct.Memory** %MEMORY

  ; Code: subl 0x72369c, %eax	 RIP: 42288a	 Bytes: 7
  %loadMem_42288a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42288a = call %struct.Memory* @routine_subl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42288a)
  store %struct.Memory* %call_42288a, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 422891	 Bytes: 4
  %loadMem_422891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422891 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422891)
  store %struct.Memory* %call_422891, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x72369c, %xmm1	 RIP: 422895	 Bytes: 9
  %loadMem_422895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422895 = call %struct.Memory* @routine_cvtsi2ssl_0x72369c___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422895)
  store %struct.Memory* %call_422895, %struct.Memory** %MEMORY

  ; Code: mulss -0xd0(%rbp), %xmm1	 RIP: 42289e	 Bytes: 8
  %loadMem_42289e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42289e = call %struct.Memory* @routine_mulss_MINUS0xd0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42289e)
  store %struct.Memory* %call_42289e, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 4228a6	 Bytes: 3
  %loadMem_4228a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228a6 = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228a6)
  store %struct.Memory* %call_4228a6, %struct.Memory** %MEMORY

  ; Code: jbe .L_4228b4	 RIP: 4228a9	 Bytes: 6
  %loadMem_4228a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228a9 = call %struct.Memory* @routine_jbe_.L_4228b4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228a9, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4228a9, %struct.Memory** %MEMORY

  %loadBr_4228a9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4228a9 = icmp eq i8 %loadBr_4228a9, 1
  br i1 %cmpBr_4228a9, label %block_.L_4228b4, label %block_4228af

block_4228af:
  ; Code: jmpq .L_422cbe	 RIP: 4228af	 Bytes: 5
  %loadMem_4228af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228af = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228af, i64 1039, i64 5)
  store %struct.Memory* %call_4228af, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_4228b4:	 RIP: 4228b4	 Bytes: 0
block_.L_4228b4:

  ; Code: jmpq .L_4228b9	 RIP: 4228b4	 Bytes: 5
  %loadMem_4228b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228b4 = call %struct.Memory* @routine_jmpq_.L_4228b9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228b4, i64 5, i64 5)
  store %struct.Memory* %call_4228b4, %struct.Memory** %MEMORY

  br label %block_.L_4228b9

  ; Code: .L_4228b9:	 RIP: 4228b9	 Bytes: 0
block_.L_4228b9:

  ; Code: jmpq .L_422922	 RIP: 4228b9	 Bytes: 5
  %loadMem_4228b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228b9 = call %struct.Memory* @routine_jmpq_.L_422922(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228b9, i64 105, i64 5)
  store %struct.Memory* %call_4228b9, %struct.Memory** %MEMORY

  br label %block_.L_422922

  ; Code: .L_4228be:	 RIP: 4228be	 Bytes: 0
block_.L_4228be:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 4228be	 Bytes: 3
  %loadMem_4228be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228be = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228be)
  store %struct.Memory* %call_4228be, %struct.Memory** %MEMORY

  ; Code: subl 0x6d1900, %eax	 RIP: 4228c1	 Bytes: 7
  %loadMem_4228c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228c1 = call %struct.Memory* @routine_subl_0x6d1900___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228c1)
  store %struct.Memory* %call_4228c1, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 4228c8	 Bytes: 4
  %loadMem_4228c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228c8 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228c8)
  store %struct.Memory* %call_4228c8, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6d1900, %xmm1	 RIP: 4228cc	 Bytes: 9
  %loadMem_4228cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228cc = call %struct.Memory* @routine_cvtsi2ssl_0x6d1900___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228cc)
  store %struct.Memory* %call_4228cc, %struct.Memory** %MEMORY

  ; Code: mulss -0xd4(%rbp), %xmm1	 RIP: 4228d5	 Bytes: 8
  %loadMem_4228d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228d5 = call %struct.Memory* @routine_mulss_MINUS0xd4__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228d5)
  store %struct.Memory* %call_4228d5, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 4228dd	 Bytes: 3
  %loadMem_4228dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228dd = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228dd)
  store %struct.Memory* %call_4228dd, %struct.Memory** %MEMORY

  ; Code: jbe .L_4228eb	 RIP: 4228e0	 Bytes: 6
  %loadMem_4228e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228e0 = call %struct.Memory* @routine_jbe_.L_4228eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228e0, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4228e0, %struct.Memory** %MEMORY

  %loadBr_4228e0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4228e0 = icmp eq i8 %loadBr_4228e0, 1
  br i1 %cmpBr_4228e0, label %block_.L_4228eb, label %block_4228e6

block_4228e6:
  ; Code: jmpq .L_422f0e	 RIP: 4228e6	 Bytes: 5
  %loadMem_4228e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228e6 = call %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228e6, i64 1576, i64 5)
  store %struct.Memory* %call_4228e6, %struct.Memory** %MEMORY

  br label %block_.L_422f0e

  ; Code: .L_4228eb:	 RIP: 4228eb	 Bytes: 0
block_.L_4228eb:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 4228eb	 Bytes: 3
  %loadMem_4228eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228eb = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228eb)
  store %struct.Memory* %call_4228eb, %struct.Memory** %MEMORY

  ; Code: subl 0x6d1900, %eax	 RIP: 4228ee	 Bytes: 7
  %loadMem_4228ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228ee = call %struct.Memory* @routine_subl_0x6d1900___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228ee)
  store %struct.Memory* %call_4228ee, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 4228f5	 Bytes: 4
  %loadMem_4228f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228f5 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228f5)
  store %struct.Memory* %call_4228f5, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6d1900, %xmm1	 RIP: 4228f9	 Bytes: 9
  %loadMem_4228f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4228f9 = call %struct.Memory* @routine_cvtsi2ssl_0x6d1900___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4228f9)
  store %struct.Memory* %call_4228f9, %struct.Memory** %MEMORY

  ; Code: mulss -0xd0(%rbp), %xmm1	 RIP: 422902	 Bytes: 8
  %loadMem_422902 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422902 = call %struct.Memory* @routine_mulss_MINUS0xd0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422902)
  store %struct.Memory* %call_422902, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 42290a	 Bytes: 3
  %loadMem_42290a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42290a = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42290a)
  store %struct.Memory* %call_42290a, %struct.Memory** %MEMORY

  ; Code: jbe .L_422918	 RIP: 42290d	 Bytes: 6
  %loadMem_42290d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42290d = call %struct.Memory* @routine_jbe_.L_422918(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42290d, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_42290d, %struct.Memory** %MEMORY

  %loadBr_42290d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42290d = icmp eq i8 %loadBr_42290d, 1
  br i1 %cmpBr_42290d, label %block_.L_422918, label %block_422913

block_422913:
  ; Code: jmpq .L_422cbe	 RIP: 422913	 Bytes: 5
  %loadMem_422913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422913 = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422913, i64 939, i64 5)
  store %struct.Memory* %call_422913, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_422918:	 RIP: 422918	 Bytes: 0
block_.L_422918:

  ; Code: jmpq .L_42291d	 RIP: 422918	 Bytes: 5
  %loadMem_422918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422918 = call %struct.Memory* @routine_jmpq_.L_42291d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422918, i64 5, i64 5)
  store %struct.Memory* %call_422918, %struct.Memory** %MEMORY

  br label %block_.L_42291d

  ; Code: .L_42291d:	 RIP: 42291d	 Bytes: 0
block_.L_42291d:

  ; Code: jmpq .L_422922	 RIP: 42291d	 Bytes: 5
  %loadMem_42291d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42291d = call %struct.Memory* @routine_jmpq_.L_422922(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42291d, i64 5, i64 5)
  store %struct.Memory* %call_42291d, %struct.Memory** %MEMORY

  br label %block_.L_422922

  ; Code: .L_422922:	 RIP: 422922	 Bytes: 0
block_.L_422922:

  ; Code: jmpq .L_422927	 RIP: 422922	 Bytes: 5
  %loadMem_422922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422922 = call %struct.Memory* @routine_jmpq_.L_422927(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422922, i64 5, i64 5)
  store %struct.Memory* %call_422922, %struct.Memory** %MEMORY

  br label %block_.L_422927

  ; Code: .L_422927:	 RIP: 422927	 Bytes: 0
block_.L_422927:

  ; Code: movl $0x1, -0xbc(%rbp)	 RIP: 422927	 Bytes: 10
  %loadMem_422927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422927 = call %struct.Memory* @routine_movl__0x1__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422927)
  store %struct.Memory* %call_422927, %struct.Memory** %MEMORY

  ; Code: .L_422931:	 RIP: 422931	 Bytes: 0
  br label %block_.L_422931
block_.L_422931:

  ; Code: movl $0x4, %eax	 RIP: 422931	 Bytes: 5
  %loadMem_422931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422931 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422931)
  store %struct.Memory* %call_422931, %struct.Memory** %MEMORY

  ; Code: movl -0xbc(%rbp), %ecx	 RIP: 422936	 Bytes: 6
  %loadMem_422936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422936 = call %struct.Memory* @routine_movl_MINUS0xbc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422936)
  store %struct.Memory* %call_422936, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %edx	 RIP: 42293c	 Bytes: 3
  %loadMem_42293c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42293c = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42293c)
  store %struct.Memory* %call_42293c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18c(%rbp)	 RIP: 42293f	 Bytes: 6
  %loadMem_42293f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42293f = call %struct.Memory* @routine_movl__eax__MINUS0x18c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42293f)
  store %struct.Memory* %call_42293f, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 422945	 Bytes: 2
  %loadMem_422945 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422945 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422945)
  store %struct.Memory* %call_422945, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 422947	 Bytes: 1
  %loadMem_422947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422947 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422947)
  store %struct.Memory* %call_422947, %struct.Memory** %MEMORY

  ; Code: movl -0x18c(%rbp), %esi	 RIP: 422948	 Bytes: 6
  %loadMem_422948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422948 = call %struct.Memory* @routine_movl_MINUS0x18c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422948)
  store %struct.Memory* %call_422948, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 42294e	 Bytes: 2
  %loadMem_42294e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42294e = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42294e)
  store %struct.Memory* %call_42294e, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 422950	 Bytes: 2
  %loadMem_422950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422950 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422950)
  store %struct.Memory* %call_422950, %struct.Memory** %MEMORY

  ; Code: jg .L_422cb9	 RIP: 422952	 Bytes: 6
  %loadMem_422952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422952 = call %struct.Memory* @routine_jg_.L_422cb9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422952, i8* %BRANCH_TAKEN, i64 871, i64 6, i64 6)
  store %struct.Memory* %call_422952, %struct.Memory** %MEMORY

  %loadBr_422952 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422952 = icmp eq i8 %loadBr_422952, 1
  br i1 %cmpBr_422952, label %block_.L_422cb9, label %block_422958

block_422958:
  ; Code: movl $0x0, -0xc8(%rbp)	 RIP: 422958	 Bytes: 10
  %loadMem_422958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422958 = call %struct.Memory* @routine_movl__0x0__MINUS0xc8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422958)
  store %struct.Memory* %call_422958, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc0(%rbp)	 RIP: 422962	 Bytes: 10
  %loadMem_422962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422962 = call %struct.Memory* @routine_movl__0x0__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422962)
  store %struct.Memory* %call_422962, %struct.Memory** %MEMORY

  ; Code: .L_42296c:	 RIP: 42296c	 Bytes: 0
  br label %block_.L_42296c
block_.L_42296c:

  ; Code: cmpl $0x10, -0xc0(%rbp)	 RIP: 42296c	 Bytes: 7
  %loadMem_42296c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42296c = call %struct.Memory* @routine_cmpl__0x10__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42296c)
  store %struct.Memory* %call_42296c, %struct.Memory** %MEMORY

  ; Code: jge .L_422b46	 RIP: 422973	 Bytes: 6
  %loadMem_422973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422973 = call %struct.Memory* @routine_jge_.L_422b46(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422973, i8* %BRANCH_TAKEN, i64 467, i64 6, i64 6)
  store %struct.Memory* %call_422973, %struct.Memory** %MEMORY

  %loadBr_422973 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422973 = icmp eq i8 %loadBr_422973, 1
  br i1 %cmpBr_422973, label %block_.L_422b46, label %block_422979

block_422979:
  ; Code: movl -0xb8(%rbp), %eax	 RIP: 422979	 Bytes: 6
  %loadMem_422979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422979 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422979)
  store %struct.Memory* %call_422979, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 42297f	 Bytes: 7
  %loadMem_42297f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42297f = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42297f)
  store %struct.Memory* %call_42297f, %struct.Memory** %MEMORY

  ; Code: movl 0x6cb7c0(,%rcx,4), %edx	 RIP: 422986	 Bytes: 7
  %loadMem_422986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422986 = call %struct.Memory* @routine_movl_0x6cb7c0___rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422986)
  store %struct.Memory* %call_422986, %struct.Memory** %MEMORY

  ; Code: imull -0xbc(%rbp), %edx	 RIP: 42298d	 Bytes: 7
  %loadMem_42298d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42298d = call %struct.Memory* @routine_imull_MINUS0xbc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42298d)
  store %struct.Memory* %call_42298d, %struct.Memory** %MEMORY

  ; Code: addl %edx, %eax	 RIP: 422994	 Bytes: 2
  %loadMem_422994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422994 = call %struct.Memory* @routine_addl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422994)
  store %struct.Memory* %call_422994, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 422996	 Bytes: 3
  %loadMem_422996 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422996 = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422996)
  store %struct.Memory* %call_422996, %struct.Memory** %MEMORY

  ; Code: movl -0xb4(%rbp), %eax	 RIP: 422999	 Bytes: 6
  %loadMem_422999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422999 = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422999)
  store %struct.Memory* %call_422999, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 42299f	 Bytes: 7
  %loadMem_42299f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42299f = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42299f)
  store %struct.Memory* %call_42299f, %struct.Memory** %MEMORY

  ; Code: movl 0x6cb800(,%rcx,4), %edx	 RIP: 4229a6	 Bytes: 7
  %loadMem_4229a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229a6 = call %struct.Memory* @routine_movl_0x6cb800___rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229a6)
  store %struct.Memory* %call_4229a6, %struct.Memory** %MEMORY

  ; Code: imull -0xbc(%rbp), %edx	 RIP: 4229ad	 Bytes: 7
  %loadMem_4229ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229ad = call %struct.Memory* @routine_imull_MINUS0xbc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229ad)
  store %struct.Memory* %call_4229ad, %struct.Memory** %MEMORY

  ; Code: addl %edx, %eax	 RIP: 4229b4	 Bytes: 2
  %loadMem_4229b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229b4 = call %struct.Memory* @routine_addl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229b4)
  store %struct.Memory* %call_4229b4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x64(%rbp)	 RIP: 4229b6	 Bytes: 3
  %loadMem_4229b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229b6 = call %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229b6)
  store %struct.Memory* %call_4229b6, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 4229b9	 Bytes: 3
  %loadMem_4229b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229b9 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229b9)
  store %struct.Memory* %call_4229b9, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 4229bc	 Bytes: 6
  %loadMem_4229bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229bc = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229bc)
  store %struct.Memory* %call_4229bc, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 4229c2	 Bytes: 2
  %loadMem_4229c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229c2 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229c2)
  store %struct.Memory* %call_4229c2, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 4229c4	 Bytes: 5
  %loadMem1_4229c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4229c4 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4229c4, i64 -137668, i64 5, i64 5)
  store %struct.Memory* %call1_4229c4, %struct.Memory** %MEMORY

  %loadMem2_4229c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4229c4 = load i64, i64* %3
  %call2_4229c4 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_4229c4, %struct.Memory* %loadMem2_4229c4)
  store %struct.Memory* %call2_4229c4, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 4229c9	 Bytes: 3
  %loadMem_4229c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229c9 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229c9)
  store %struct.Memory* %call_4229c9, %struct.Memory** %MEMORY

  ; Code: jg .L_422b2d	 RIP: 4229cc	 Bytes: 6
  %loadMem_4229cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229cc = call %struct.Memory* @routine_jg_.L_422b2d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229cc, i8* %BRANCH_TAKEN, i64 353, i64 6, i64 6)
  store %struct.Memory* %call_4229cc, %struct.Memory** %MEMORY

  %loadBr_4229cc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4229cc = icmp eq i8 %loadBr_4229cc, 1
  br i1 %cmpBr_4229cc, label %block_.L_422b2d, label %block_4229d2

block_4229d2:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 4229d2	 Bytes: 3
  %loadMem_4229d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229d2 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229d2)
  store %struct.Memory* %call_4229d2, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 4229d5	 Bytes: 6
  %loadMem_4229d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229d5 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229d5)
  store %struct.Memory* %call_4229d5, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 4229db	 Bytes: 2
  %loadMem_4229db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229db = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229db)
  store %struct.Memory* %call_4229db, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 4229dd	 Bytes: 5
  %loadMem1_4229dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4229dd = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4229dd, i64 -137693, i64 5, i64 5)
  store %struct.Memory* %call1_4229dd, %struct.Memory** %MEMORY

  %loadMem2_4229dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4229dd = load i64, i64* %3
  %call2_4229dd = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_4229dd, %struct.Memory* %loadMem2_4229dd)
  store %struct.Memory* %call2_4229dd, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 4229e2	 Bytes: 3
  %loadMem_4229e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229e2 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229e2)
  store %struct.Memory* %call_4229e2, %struct.Memory** %MEMORY

  ; Code: jg .L_422b2d	 RIP: 4229e5	 Bytes: 6
  %loadMem_4229e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229e5 = call %struct.Memory* @routine_jg_.L_422b2d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229e5, i8* %BRANCH_TAKEN, i64 328, i64 6, i64 6)
  store %struct.Memory* %call_4229e5, %struct.Memory** %MEMORY

  %loadBr_4229e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4229e5 = icmp eq i8 %loadBr_4229e5, 1
  br i1 %cmpBr_4229e5, label %block_.L_422b2d, label %block_4229eb

block_4229eb:
  ; Code: movq 0x6d32d0, %rax	 RIP: 4229eb	 Bytes: 8
  %loadMem_4229eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229eb = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229eb)
  store %struct.Memory* %call_4229eb, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 4229f3	 Bytes: 3
  %loadMem_4229f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229f3 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229f3)
  store %struct.Memory* %call_4229f3, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 4229f6	 Bytes: 6
  %loadMem_4229f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229f6 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229f6)
  store %struct.Memory* %call_4229f6, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 4229fc	 Bytes: 3
  %loadMem_4229fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229fc = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229fc)
  store %struct.Memory* %call_4229fc, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 4229ff	 Bytes: 3
  %loadMem_4229ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4229ff = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4229ff)
  store %struct.Memory* %call_4229ff, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 422a02	 Bytes: 4
  %loadMem_422a02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a02 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a02)
  store %struct.Memory* %call_422a02, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 422a06	 Bytes: 3
  %loadMem_422a06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a06 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a06)
  store %struct.Memory* %call_422a06, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 422a09	 Bytes: 6
  %loadMem_422a09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a09 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a09)
  store %struct.Memory* %call_422a09, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422a0f	 Bytes: 3
  %loadMem_422a0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a0f = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a0f)
  store %struct.Memory* %call_422a0f, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 422a12	 Bytes: 3
  %loadMem_422a12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a12 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a12)
  store %struct.Memory* %call_422a12, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 422a15	 Bytes: 4
  %loadMem_422a15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a15 = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a15)
  store %struct.Memory* %call_422a15, %struct.Memory** %MEMORY

  ; Code: jne .L_422b28	 RIP: 422a19	 Bytes: 6
  %loadMem_422a19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a19 = call %struct.Memory* @routine_jne_.L_422b28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a19, i8* %BRANCH_TAKEN, i64 271, i64 6, i64 6)
  store %struct.Memory* %call_422a19, %struct.Memory** %MEMORY

  %loadBr_422a19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422a19 = icmp eq i8 %loadBr_422a19, 1
  br i1 %cmpBr_422a19, label %block_.L_422b28, label %block_422a1f

block_422a1f:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 422a1f	 Bytes: 6
  %loadMem_422a1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a1f = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a1f)
  store %struct.Memory* %call_422a1f, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 422a25	 Bytes: 8
  %loadMem_422a25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a25 = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a25)
  store %struct.Memory* %call_422a25, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 422a2d	 Bytes: 3
  %loadMem_422a2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a2d = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a2d)
  store %struct.Memory* %call_422a2d, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 422a30	 Bytes: 6
  %loadMem_422a30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a30 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a30)
  store %struct.Memory* %call_422a30, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x198(%rbp)	 RIP: 422a36	 Bytes: 7
  %loadMem_422a36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a36 = call %struct.Memory* @routine_movq__rcx__MINUS0x198__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a36)
  store %struct.Memory* %call_422a36, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 422a3d	 Bytes: 2
  %loadMem_422a3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a3d = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a3d)
  store %struct.Memory* %call_422a3d, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 422a3f	 Bytes: 2
  %loadMem_422a3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a3f = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a3f)
  store %struct.Memory* %call_422a3f, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 422a41	 Bytes: 6
  %loadMem_422a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a41 = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a41)
  store %struct.Memory* %call_422a41, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 422a47	 Bytes: 3
  %loadMem_422a47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a47 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a47)
  store %struct.Memory* %call_422a47, %struct.Memory** %MEMORY

  ; Code: movq -0x198(%rbp), %r8	 RIP: 422a4a	 Bytes: 7
  %loadMem_422a4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a4a = call %struct.Memory* @routine_movq_MINUS0x198__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a4a)
  store %struct.Memory* %call_422a4a, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 422a51	 Bytes: 4
  %loadMem_422a51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a51 = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a51)
  store %struct.Memory* %call_422a51, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 422a55	 Bytes: 8
  %loadMem_422a55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a55 = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a55)
  store %struct.Memory* %call_422a55, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 422a5d	 Bytes: 3
  %loadMem_422a5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a5d = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a5d)
  store %struct.Memory* %call_422a5d, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 422a60	 Bytes: 6
  %loadMem_422a60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a60 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a60)
  store %struct.Memory* %call_422a60, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 422a66	 Bytes: 2
  %loadMem_422a66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a66 = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a66)
  store %struct.Memory* %call_422a66, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 422a68	 Bytes: 6
  %loadMem_422a68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a68 = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a68)
  store %struct.Memory* %call_422a68, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 422a6e	 Bytes: 3
  %loadMem_422a6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a6e = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a6e)
  store %struct.Memory* %call_422a6e, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 422a71	 Bytes: 4
  %loadMem_422a71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a71 = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a71)
  store %struct.Memory* %call_422a71, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 422a75	 Bytes: 3
  %loadMem_422a75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a75 = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a75)
  store %struct.Memory* %call_422a75, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 422a78	 Bytes: 3
  %loadMem_422a78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a78 = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a78)
  store %struct.Memory* %call_422a78, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 422a7b	 Bytes: 3
  %loadMem_422a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a7b = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a7b)
  store %struct.Memory* %call_422a7b, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 422a7e	 Bytes: 4
  %loadMem_422a7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a7e = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a7e)
  store %struct.Memory* %call_422a7e, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 422a82	 Bytes: 4
  %loadMem_422a82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a82 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a82)
  store %struct.Memory* %call_422a82, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 422a86	 Bytes: 4
  %loadMem_422a86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a86 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a86)
  store %struct.Memory* %call_422a86, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 422a8a	 Bytes: 6
  %loadMem_422a8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a8a = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a8a)
  store %struct.Memory* %call_422a8a, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 422a90	 Bytes: 7
  %loadMem_422a90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a90 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a90)
  store %struct.Memory* %call_422a90, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 422a97	 Bytes: 7
  %loadMem_422a97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a97 = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a97)
  store %struct.Memory* %call_422a97, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 422a9e	 Bytes: 3
  %loadMem_422a9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422a9e = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422a9e)
  store %struct.Memory* %call_422a9e, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 422aa1	 Bytes: 4
  %loadMem_422aa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422aa1 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422aa1)
  store %struct.Memory* %call_422aa1, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 422aa5	 Bytes: 4
  %loadMem_422aa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422aa5 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422aa5)
  store %struct.Memory* %call_422aa5, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 422aa9	 Bytes: 3
  %loadMem_422aa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422aa9 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422aa9)
  store %struct.Memory* %call_422aa9, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 422aac	 Bytes: 3
  %loadMem_422aac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422aac = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422aac)
  store %struct.Memory* %call_422aac, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 422aaf	 Bytes: 5
  %loadMem_422aaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422aaf = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422aaf)
  store %struct.Memory* %call_422aaf, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 422ab4	 Bytes: 5
  %loadMem_422ab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ab4 = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ab4)
  store %struct.Memory* %call_422ab4, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 422ab9	 Bytes: 4
  %loadMem_422ab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ab9 = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ab9)
  store %struct.Memory* %call_422ab9, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 422abd	 Bytes: 5
  %loadMem1_422abd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_422abd = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_422abd, i64 -9741, i64 5, i64 5)
  store %struct.Memory* %call1_422abd, %struct.Memory** %MEMORY

  %loadMem2_422abd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_422abd = load i64, i64* %3
  %call2_422abd = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_422abd, %struct.Memory* %loadMem2_422abd)
  store %struct.Memory* %call2_422abd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 422ac2	 Bytes: 3
  %loadMem_422ac2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ac2 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ac2)
  store %struct.Memory* %call_422ac2, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 422ac5	 Bytes: 3
  %loadMem_422ac5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ac5 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ac5)
  store %struct.Memory* %call_422ac5, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 422ac8	 Bytes: 8
  %loadMem_422ac8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ac8 = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ac8)
  store %struct.Memory* %call_422ac8, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 422ad0	 Bytes: 3
  %loadMem_422ad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ad0 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ad0)
  store %struct.Memory* %call_422ad0, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 422ad3	 Bytes: 6
  %loadMem_422ad3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ad3 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ad3)
  store %struct.Memory* %call_422ad3, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422ad9	 Bytes: 3
  %loadMem_422ad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ad9 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ad9)
  store %struct.Memory* %call_422ad9, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 422adc	 Bytes: 3
  %loadMem_422adc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422adc = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422adc)
  store %struct.Memory* %call_422adc, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 422adf	 Bytes: 4
  %loadMem_422adf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422adf = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422adf)
  store %struct.Memory* %call_422adf, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 422ae3	 Bytes: 3
  %loadMem_422ae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ae3 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ae3)
  store %struct.Memory* %call_422ae3, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 422ae6	 Bytes: 6
  %loadMem_422ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ae6 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ae6)
  store %struct.Memory* %call_422ae6, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422aec	 Bytes: 3
  %loadMem_422aec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422aec = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422aec)
  store %struct.Memory* %call_422aec, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 422aef	 Bytes: 3
  %loadMem_422aef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422aef = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422aef)
  store %struct.Memory* %call_422aef, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 422af2	 Bytes: 3
  %loadMem_422af2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422af2 = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422af2)
  store %struct.Memory* %call_422af2, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 422af5	 Bytes: 3
  %loadMem_422af5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422af5 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422af5)
  store %struct.Memory* %call_422af5, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 422af8	 Bytes: 3
  %loadMem_422af8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422af8 = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422af8)
  store %struct.Memory* %call_422af8, %struct.Memory** %MEMORY

  ; Code: jge .L_422b23	 RIP: 422afb	 Bytes: 6
  %loadMem_422afb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422afb = call %struct.Memory* @routine_jge_.L_422b23(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422afb, i8* %BRANCH_TAKEN, i64 40, i64 6, i64 6)
  store %struct.Memory* %call_422afb, %struct.Memory** %MEMORY

  %loadBr_422afb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422afb = icmp eq i8 %loadBr_422afb, 1
  br i1 %cmpBr_422afb, label %block_.L_422b23, label %block_422b01

block_422b01:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 422b01	 Bytes: 3
  %loadMem_422b01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b01 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b01)
  store %struct.Memory* %call_422b01, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 422b04	 Bytes: 6
  %loadMem_422b04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b04 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b04)
  store %struct.Memory* %call_422b04, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 422b0a	 Bytes: 3
  %loadMem_422b0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b0a = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b0a)
  store %struct.Memory* %call_422b0a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 422b0d	 Bytes: 6
  %loadMem_422b0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b0d = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b0d)
  store %struct.Memory* %call_422b0d, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 422b13	 Bytes: 3
  %loadMem_422b13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b13 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b13)
  store %struct.Memory* %call_422b13, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 422b16	 Bytes: 3
  %loadMem_422b16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b16 = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b16)
  store %struct.Memory* %call_422b16, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0xc8(%rbp)	 RIP: 422b19	 Bytes: 10
  %loadMem_422b19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b19 = call %struct.Memory* @routine_movl__0x1__MINUS0xc8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b19)
  store %struct.Memory* %call_422b19, %struct.Memory** %MEMORY

  ; Code: .L_422b23:	 RIP: 422b23	 Bytes: 0
  br label %block_.L_422b23
block_.L_422b23:

  ; Code: jmpq .L_422b28	 RIP: 422b23	 Bytes: 5
  %loadMem_422b23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b23 = call %struct.Memory* @routine_jmpq_.L_422b28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b23, i64 5, i64 5)
  store %struct.Memory* %call_422b23, %struct.Memory** %MEMORY

  br label %block_.L_422b28

  ; Code: .L_422b28:	 RIP: 422b28	 Bytes: 0
block_.L_422b28:

  ; Code: jmpq .L_422b2d	 RIP: 422b28	 Bytes: 5
  %loadMem_422b28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b28 = call %struct.Memory* @routine_jmpq_.L_422b2d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b28, i64 5, i64 5)
  store %struct.Memory* %call_422b28, %struct.Memory** %MEMORY

  br label %block_.L_422b2d

  ; Code: .L_422b2d:	 RIP: 422b2d	 Bytes: 0
block_.L_422b2d:

  ; Code: jmpq .L_422b32	 RIP: 422b2d	 Bytes: 5
  %loadMem_422b2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b2d = call %struct.Memory* @routine_jmpq_.L_422b32(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b2d, i64 5, i64 5)
  store %struct.Memory* %call_422b2d, %struct.Memory** %MEMORY

  br label %block_.L_422b32

  ; Code: .L_422b32:	 RIP: 422b32	 Bytes: 0
block_.L_422b32:

  ; Code: movl -0xc0(%rbp), %eax	 RIP: 422b32	 Bytes: 6
  %loadMem_422b32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b32 = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b32)
  store %struct.Memory* %call_422b32, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 422b38	 Bytes: 3
  %loadMem_422b38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b38 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b38)
  store %struct.Memory* %call_422b38, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc0(%rbp)	 RIP: 422b3b	 Bytes: 6
  %loadMem_422b3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b3b = call %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b3b)
  store %struct.Memory* %call_422b3b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42296c	 RIP: 422b41	 Bytes: 5
  %loadMem_422b41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b41 = call %struct.Memory* @routine_jmpq_.L_42296c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b41, i64 -469, i64 5)
  store %struct.Memory* %call_422b41, %struct.Memory** %MEMORY

  br label %block_.L_42296c

  ; Code: .L_422b46:	 RIP: 422b46	 Bytes: 0
block_.L_422b46:

  ; Code: cmpl $0x0, -0xc8(%rbp)	 RIP: 422b46	 Bytes: 7
  %loadMem_422b46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b46 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xc8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b46)
  store %struct.Memory* %call_422b46, %struct.Memory** %MEMORY

  ; Code: je .L_422ca0	 RIP: 422b4d	 Bytes: 6
  %loadMem_422b4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b4d = call %struct.Memory* @routine_je_.L_422ca0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b4d, i8* %BRANCH_TAKEN, i64 339, i64 6, i64 6)
  store %struct.Memory* %call_422b4d, %struct.Memory** %MEMORY

  %loadBr_422b4d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422b4d = icmp eq i8 %loadBr_422b4d, 1
  br i1 %cmpBr_422b4d, label %block_.L_422ca0, label %block_422b53

block_422b53:
  ; Code: movswl -0x22(%rbp), %eax	 RIP: 422b53	 Bytes: 4
  %loadMem_422b53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b53 = call %struct.Memory* @routine_movswl_MINUS0x22__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b53)
  store %struct.Memory* %call_422b53, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 422b57	 Bytes: 3
  %loadMem_422b57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b57 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b57)
  store %struct.Memory* %call_422b57, %struct.Memory** %MEMORY

  ; Code: jle .L_422bc4	 RIP: 422b5a	 Bytes: 6
  %loadMem_422b5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b5a = call %struct.Memory* @routine_jle_.L_422bc4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b5a, i8* %BRANCH_TAKEN, i64 106, i64 6, i64 6)
  store %struct.Memory* %call_422b5a, %struct.Memory** %MEMORY

  %loadBr_422b5a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422b5a = icmp eq i8 %loadBr_422b5a, 1
  br i1 %cmpBr_422b5a, label %block_.L_422bc4, label %block_422b60

block_422b60:
  ; Code: movl -0x50(%rbp), %eax	 RIP: 422b60	 Bytes: 3
  %loadMem_422b60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b60 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b60)
  store %struct.Memory* %call_422b60, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd480, %eax	 RIP: 422b63	 Bytes: 7
  %loadMem_422b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b63 = call %struct.Memory* @routine_subl_0x6cd480___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b63)
  store %struct.Memory* %call_422b63, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 422b6a	 Bytes: 4
  %loadMem_422b6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b6a = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b6a)
  store %struct.Memory* %call_422b6a, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6cd480, %xmm1	 RIP: 422b6e	 Bytes: 9
  %loadMem_422b6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b6e = call %struct.Memory* @routine_cvtsi2ssl_0x6cd480___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b6e)
  store %struct.Memory* %call_422b6e, %struct.Memory** %MEMORY

  ; Code: mulss -0xd4(%rbp), %xmm1	 RIP: 422b77	 Bytes: 8
  %loadMem_422b77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b77 = call %struct.Memory* @routine_mulss_MINUS0xd4__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b77)
  store %struct.Memory* %call_422b77, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 422b7f	 Bytes: 3
  %loadMem_422b7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b7f = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b7f)
  store %struct.Memory* %call_422b7f, %struct.Memory** %MEMORY

  ; Code: jbe .L_422b8d	 RIP: 422b82	 Bytes: 6
  %loadMem_422b82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b82 = call %struct.Memory* @routine_jbe_.L_422b8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b82, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_422b82, %struct.Memory** %MEMORY

  %loadBr_422b82 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422b82 = icmp eq i8 %loadBr_422b82, 1
  br i1 %cmpBr_422b82, label %block_.L_422b8d, label %block_422b88

block_422b88:
  ; Code: jmpq .L_422f0e	 RIP: 422b88	 Bytes: 5
  %loadMem_422b88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b88 = call %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b88, i64 902, i64 5)
  store %struct.Memory* %call_422b88, %struct.Memory** %MEMORY

  br label %block_.L_422f0e

  ; Code: .L_422b8d:	 RIP: 422b8d	 Bytes: 0
block_.L_422b8d:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 422b8d	 Bytes: 3
  %loadMem_422b8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b8d = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b8d)
  store %struct.Memory* %call_422b8d, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd480, %eax	 RIP: 422b90	 Bytes: 7
  %loadMem_422b90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b90 = call %struct.Memory* @routine_subl_0x6cd480___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b90)
  store %struct.Memory* %call_422b90, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 422b97	 Bytes: 4
  %loadMem_422b97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b97 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b97)
  store %struct.Memory* %call_422b97, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6cd480, %xmm1	 RIP: 422b9b	 Bytes: 9
  %loadMem_422b9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422b9b = call %struct.Memory* @routine_cvtsi2ssl_0x6cd480___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422b9b)
  store %struct.Memory* %call_422b9b, %struct.Memory** %MEMORY

  ; Code: mulss -0xd0(%rbp), %xmm1	 RIP: 422ba4	 Bytes: 8
  %loadMem_422ba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ba4 = call %struct.Memory* @routine_mulss_MINUS0xd0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ba4)
  store %struct.Memory* %call_422ba4, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 422bac	 Bytes: 3
  %loadMem_422bac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bac = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bac)
  store %struct.Memory* %call_422bac, %struct.Memory** %MEMORY

  ; Code: jbe .L_422bba	 RIP: 422baf	 Bytes: 6
  %loadMem_422baf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422baf = call %struct.Memory* @routine_jbe_.L_422bba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422baf, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_422baf, %struct.Memory** %MEMORY

  %loadBr_422baf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422baf = icmp eq i8 %loadBr_422baf, 1
  br i1 %cmpBr_422baf, label %block_.L_422bba, label %block_422bb5

block_422bb5:
  ; Code: jmpq .L_422cbe	 RIP: 422bb5	 Bytes: 5
  %loadMem_422bb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bb5 = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bb5, i64 265, i64 5)
  store %struct.Memory* %call_422bb5, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_422bba:	 RIP: 422bba	 Bytes: 0
block_.L_422bba:

  ; Code: jmpq .L_422bbf	 RIP: 422bba	 Bytes: 5
  %loadMem_422bba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bba = call %struct.Memory* @routine_jmpq_.L_422bbf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bba, i64 5, i64 5)
  store %struct.Memory* %call_422bba, %struct.Memory** %MEMORY

  br label %block_.L_422bbf

  ; Code: .L_422bbf:	 RIP: 422bbf	 Bytes: 0
block_.L_422bbf:

  ; Code: jmpq .L_422c9b	 RIP: 422bbf	 Bytes: 5
  %loadMem_422bbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bbf = call %struct.Memory* @routine_jmpq_.L_422c9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bbf, i64 220, i64 5)
  store %struct.Memory* %call_422bbf, %struct.Memory** %MEMORY

  br label %block_.L_422c9b

  ; Code: .L_422bc4:	 RIP: 422bc4	 Bytes: 0
block_.L_422bc4:

  ; Code: cmpl $0x1, -0x34(%rbp)	 RIP: 422bc4	 Bytes: 4
  %loadMem_422bc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bc4 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bc4)
  store %struct.Memory* %call_422bc4, %struct.Memory** %MEMORY

  ; Code: jle .L_422c32	 RIP: 422bc8	 Bytes: 6
  %loadMem_422bc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bc8 = call %struct.Memory* @routine_jle_.L_422c32(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bc8, i8* %BRANCH_TAKEN, i64 106, i64 6, i64 6)
  store %struct.Memory* %call_422bc8, %struct.Memory** %MEMORY

  %loadBr_422bc8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422bc8 = icmp eq i8 %loadBr_422bc8, 1
  br i1 %cmpBr_422bc8, label %block_.L_422c32, label %block_422bce

block_422bce:
  ; Code: movl -0x50(%rbp), %eax	 RIP: 422bce	 Bytes: 3
  %loadMem_422bce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bce = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bce)
  store %struct.Memory* %call_422bce, %struct.Memory** %MEMORY

  ; Code: subl 0x72369c, %eax	 RIP: 422bd1	 Bytes: 7
  %loadMem_422bd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bd1 = call %struct.Memory* @routine_subl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bd1)
  store %struct.Memory* %call_422bd1, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 422bd8	 Bytes: 4
  %loadMem_422bd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bd8 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bd8)
  store %struct.Memory* %call_422bd8, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x72369c, %xmm1	 RIP: 422bdc	 Bytes: 9
  %loadMem_422bdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bdc = call %struct.Memory* @routine_cvtsi2ssl_0x72369c___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bdc)
  store %struct.Memory* %call_422bdc, %struct.Memory** %MEMORY

  ; Code: mulss -0xd4(%rbp), %xmm1	 RIP: 422be5	 Bytes: 8
  %loadMem_422be5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422be5 = call %struct.Memory* @routine_mulss_MINUS0xd4__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422be5)
  store %struct.Memory* %call_422be5, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 422bed	 Bytes: 3
  %loadMem_422bed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bed = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bed)
  store %struct.Memory* %call_422bed, %struct.Memory** %MEMORY

  ; Code: jbe .L_422bfb	 RIP: 422bf0	 Bytes: 6
  %loadMem_422bf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bf0 = call %struct.Memory* @routine_jbe_.L_422bfb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bf0, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_422bf0, %struct.Memory** %MEMORY

  %loadBr_422bf0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422bf0 = icmp eq i8 %loadBr_422bf0, 1
  br i1 %cmpBr_422bf0, label %block_.L_422bfb, label %block_422bf6

block_422bf6:
  ; Code: jmpq .L_422f0e	 RIP: 422bf6	 Bytes: 5
  %loadMem_422bf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bf6 = call %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bf6, i64 792, i64 5)
  store %struct.Memory* %call_422bf6, %struct.Memory** %MEMORY

  br label %block_.L_422f0e

  ; Code: .L_422bfb:	 RIP: 422bfb	 Bytes: 0
block_.L_422bfb:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 422bfb	 Bytes: 3
  %loadMem_422bfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bfb = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bfb)
  store %struct.Memory* %call_422bfb, %struct.Memory** %MEMORY

  ; Code: subl 0x72369c, %eax	 RIP: 422bfe	 Bytes: 7
  %loadMem_422bfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422bfe = call %struct.Memory* @routine_subl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422bfe)
  store %struct.Memory* %call_422bfe, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 422c05	 Bytes: 4
  %loadMem_422c05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c05 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c05)
  store %struct.Memory* %call_422c05, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x72369c, %xmm1	 RIP: 422c09	 Bytes: 9
  %loadMem_422c09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c09 = call %struct.Memory* @routine_cvtsi2ssl_0x72369c___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c09)
  store %struct.Memory* %call_422c09, %struct.Memory** %MEMORY

  ; Code: mulss -0xd0(%rbp), %xmm1	 RIP: 422c12	 Bytes: 8
  %loadMem_422c12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c12 = call %struct.Memory* @routine_mulss_MINUS0xd0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c12)
  store %struct.Memory* %call_422c12, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 422c1a	 Bytes: 3
  %loadMem_422c1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c1a = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c1a)
  store %struct.Memory* %call_422c1a, %struct.Memory** %MEMORY

  ; Code: jbe .L_422c28	 RIP: 422c1d	 Bytes: 6
  %loadMem_422c1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c1d = call %struct.Memory* @routine_jbe_.L_422c28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c1d, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_422c1d, %struct.Memory** %MEMORY

  %loadBr_422c1d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422c1d = icmp eq i8 %loadBr_422c1d, 1
  br i1 %cmpBr_422c1d, label %block_.L_422c28, label %block_422c23

block_422c23:
  ; Code: jmpq .L_422cbe	 RIP: 422c23	 Bytes: 5
  %loadMem_422c23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c23 = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c23, i64 155, i64 5)
  store %struct.Memory* %call_422c23, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_422c28:	 RIP: 422c28	 Bytes: 0
block_.L_422c28:

  ; Code: jmpq .L_422c2d	 RIP: 422c28	 Bytes: 5
  %loadMem_422c28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c28 = call %struct.Memory* @routine_jmpq_.L_422c2d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c28, i64 5, i64 5)
  store %struct.Memory* %call_422c28, %struct.Memory** %MEMORY

  br label %block_.L_422c2d

  ; Code: .L_422c2d:	 RIP: 422c2d	 Bytes: 0
block_.L_422c2d:

  ; Code: jmpq .L_422c96	 RIP: 422c2d	 Bytes: 5
  %loadMem_422c2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c2d = call %struct.Memory* @routine_jmpq_.L_422c96(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c2d, i64 105, i64 5)
  store %struct.Memory* %call_422c2d, %struct.Memory** %MEMORY

  br label %block_.L_422c96

  ; Code: .L_422c32:	 RIP: 422c32	 Bytes: 0
block_.L_422c32:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 422c32	 Bytes: 3
  %loadMem_422c32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c32 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c32)
  store %struct.Memory* %call_422c32, %struct.Memory** %MEMORY

  ; Code: subl 0x6d1900, %eax	 RIP: 422c35	 Bytes: 7
  %loadMem_422c35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c35 = call %struct.Memory* @routine_subl_0x6d1900___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c35)
  store %struct.Memory* %call_422c35, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 422c3c	 Bytes: 4
  %loadMem_422c3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c3c = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c3c)
  store %struct.Memory* %call_422c3c, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6d1900, %xmm1	 RIP: 422c40	 Bytes: 9
  %loadMem_422c40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c40 = call %struct.Memory* @routine_cvtsi2ssl_0x6d1900___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c40)
  store %struct.Memory* %call_422c40, %struct.Memory** %MEMORY

  ; Code: mulss -0xd4(%rbp), %xmm1	 RIP: 422c49	 Bytes: 8
  %loadMem_422c49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c49 = call %struct.Memory* @routine_mulss_MINUS0xd4__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c49)
  store %struct.Memory* %call_422c49, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 422c51	 Bytes: 3
  %loadMem_422c51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c51 = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c51)
  store %struct.Memory* %call_422c51, %struct.Memory** %MEMORY

  ; Code: jbe .L_422c5f	 RIP: 422c54	 Bytes: 6
  %loadMem_422c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c54 = call %struct.Memory* @routine_jbe_.L_422c5f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c54, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_422c54, %struct.Memory** %MEMORY

  %loadBr_422c54 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422c54 = icmp eq i8 %loadBr_422c54, 1
  br i1 %cmpBr_422c54, label %block_.L_422c5f, label %block_422c5a

block_422c5a:
  ; Code: jmpq .L_422f0e	 RIP: 422c5a	 Bytes: 5
  %loadMem_422c5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c5a = call %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c5a, i64 692, i64 5)
  store %struct.Memory* %call_422c5a, %struct.Memory** %MEMORY

  br label %block_.L_422f0e

  ; Code: .L_422c5f:	 RIP: 422c5f	 Bytes: 0
block_.L_422c5f:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 422c5f	 Bytes: 3
  %loadMem_422c5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c5f = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c5f)
  store %struct.Memory* %call_422c5f, %struct.Memory** %MEMORY

  ; Code: subl 0x6d1900, %eax	 RIP: 422c62	 Bytes: 7
  %loadMem_422c62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c62 = call %struct.Memory* @routine_subl_0x6d1900___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c62)
  store %struct.Memory* %call_422c62, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 422c69	 Bytes: 4
  %loadMem_422c69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c69 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c69)
  store %struct.Memory* %call_422c69, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x6d1900, %xmm1	 RIP: 422c6d	 Bytes: 9
  %loadMem_422c6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c6d = call %struct.Memory* @routine_cvtsi2ssl_0x6d1900___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c6d)
  store %struct.Memory* %call_422c6d, %struct.Memory** %MEMORY

  ; Code: mulss -0xd0(%rbp), %xmm1	 RIP: 422c76	 Bytes: 8
  %loadMem_422c76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c76 = call %struct.Memory* @routine_mulss_MINUS0xd0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c76)
  store %struct.Memory* %call_422c76, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 422c7e	 Bytes: 3
  %loadMem_422c7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c7e = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c7e)
  store %struct.Memory* %call_422c7e, %struct.Memory** %MEMORY

  ; Code: jbe .L_422c8c	 RIP: 422c81	 Bytes: 6
  %loadMem_422c81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c81 = call %struct.Memory* @routine_jbe_.L_422c8c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c81, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_422c81, %struct.Memory** %MEMORY

  %loadBr_422c81 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422c81 = icmp eq i8 %loadBr_422c81, 1
  br i1 %cmpBr_422c81, label %block_.L_422c8c, label %block_422c87

block_422c87:
  ; Code: jmpq .L_422cbe	 RIP: 422c87	 Bytes: 5
  %loadMem_422c87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c87 = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c87, i64 55, i64 5)
  store %struct.Memory* %call_422c87, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_422c8c:	 RIP: 422c8c	 Bytes: 0
block_.L_422c8c:

  ; Code: jmpq .L_422c91	 RIP: 422c8c	 Bytes: 5
  %loadMem_422c8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c8c = call %struct.Memory* @routine_jmpq_.L_422c91(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c8c, i64 5, i64 5)
  store %struct.Memory* %call_422c8c, %struct.Memory** %MEMORY

  br label %block_.L_422c91

  ; Code: .L_422c91:	 RIP: 422c91	 Bytes: 0
block_.L_422c91:

  ; Code: jmpq .L_422c96	 RIP: 422c91	 Bytes: 5
  %loadMem_422c91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c91 = call %struct.Memory* @routine_jmpq_.L_422c96(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c91, i64 5, i64 5)
  store %struct.Memory* %call_422c91, %struct.Memory** %MEMORY

  br label %block_.L_422c96

  ; Code: .L_422c96:	 RIP: 422c96	 Bytes: 0
block_.L_422c96:

  ; Code: jmpq .L_422c9b	 RIP: 422c96	 Bytes: 5
  %loadMem_422c96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c96 = call %struct.Memory* @routine_jmpq_.L_422c9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c96, i64 5, i64 5)
  store %struct.Memory* %call_422c96, %struct.Memory** %MEMORY

  br label %block_.L_422c9b

  ; Code: .L_422c9b:	 RIP: 422c9b	 Bytes: 0
block_.L_422c9b:

  ; Code: jmpq .L_422ca0	 RIP: 422c9b	 Bytes: 5
  %loadMem_422c9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422c9b = call %struct.Memory* @routine_jmpq_.L_422ca0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422c9b, i64 5, i64 5)
  store %struct.Memory* %call_422c9b, %struct.Memory** %MEMORY

  br label %block_.L_422ca0

  ; Code: .L_422ca0:	 RIP: 422ca0	 Bytes: 0
block_.L_422ca0:

  ; Code: jmpq .L_422ca5	 RIP: 422ca0	 Bytes: 5
  %loadMem_422ca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ca0 = call %struct.Memory* @routine_jmpq_.L_422ca5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ca0, i64 5, i64 5)
  store %struct.Memory* %call_422ca0, %struct.Memory** %MEMORY

  br label %block_.L_422ca5

  ; Code: .L_422ca5:	 RIP: 422ca5	 Bytes: 0
block_.L_422ca5:

  ; Code: movl -0xbc(%rbp), %eax	 RIP: 422ca5	 Bytes: 6
  %loadMem_422ca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ca5 = call %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ca5)
  store %struct.Memory* %call_422ca5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 422cab	 Bytes: 3
  %loadMem_422cab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422cab = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422cab)
  store %struct.Memory* %call_422cab, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xbc(%rbp)	 RIP: 422cae	 Bytes: 6
  %loadMem_422cae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422cae = call %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422cae)
  store %struct.Memory* %call_422cae, %struct.Memory** %MEMORY

  ; Code: jmpq .L_422931	 RIP: 422cb4	 Bytes: 5
  %loadMem_422cb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422cb4 = call %struct.Memory* @routine_jmpq_.L_422931(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422cb4, i64 -899, i64 5)
  store %struct.Memory* %call_422cb4, %struct.Memory** %MEMORY

  br label %block_.L_422931

  ; Code: .L_422cb9:	 RIP: 422cb9	 Bytes: 0
block_.L_422cb9:

  ; Code: jmpq .L_422cbe	 RIP: 422cb9	 Bytes: 5
  %loadMem_422cb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422cb9 = call %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422cb9, i64 5, i64 5)
  store %struct.Memory* %call_422cb9, %struct.Memory** %MEMORY

  br label %block_.L_422cbe

  ; Code: .L_422cbe:	 RIP: 422cbe	 Bytes: 0
block_.L_422cbe:

  ; Code: movl -0xa8(%rbp), %eax	 RIP: 422cbe	 Bytes: 6
  %loadMem_422cbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422cbe = call %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422cbe)
  store %struct.Memory* %call_422cbe, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb8(%rbp)	 RIP: 422cc4	 Bytes: 6
  %loadMem_422cc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422cc4 = call %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422cc4)
  store %struct.Memory* %call_422cc4, %struct.Memory** %MEMORY

  ; Code: movl -0xac(%rbp), %eax	 RIP: 422cca	 Bytes: 6
  %loadMem_422cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422cca = call %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422cca)
  store %struct.Memory* %call_422cca, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb4(%rbp)	 RIP: 422cd0	 Bytes: 6
  %loadMem_422cd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422cd0 = call %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422cd0)
  store %struct.Memory* %call_422cd0, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xbc(%rbp)	 RIP: 422cd6	 Bytes: 10
  %loadMem_422cd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422cd6 = call %struct.Memory* @routine_movl__0x0__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422cd6)
  store %struct.Memory* %call_422cd6, %struct.Memory** %MEMORY

  ; Code: .L_422ce0:	 RIP: 422ce0	 Bytes: 0
  br label %block_.L_422ce0
block_.L_422ce0:

  ; Code: movl -0xbc(%rbp), %eax	 RIP: 422ce0	 Bytes: 6
  %loadMem_422ce0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ce0 = call %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ce0)
  store %struct.Memory* %call_422ce0, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 422ce6	 Bytes: 3
  %loadMem_422ce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ce6 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ce6)
  store %struct.Memory* %call_422ce6, %struct.Memory** %MEMORY

  ; Code: jge .L_422f09	 RIP: 422ce9	 Bytes: 6
  %loadMem_422ce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ce9 = call %struct.Memory* @routine_jge_.L_422f09(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ce9, i8* %BRANCH_TAKEN, i64 544, i64 6, i64 6)
  store %struct.Memory* %call_422ce9, %struct.Memory** %MEMORY

  %loadBr_422ce9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422ce9 = icmp eq i8 %loadBr_422ce9, 1
  br i1 %cmpBr_422ce9, label %block_.L_422f09, label %block_422cef

block_422cef:
  ; Code: movl $0x1, -0xc8(%rbp)	 RIP: 422cef	 Bytes: 10
  %loadMem_422cef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422cef = call %struct.Memory* @routine_movl__0x1__MINUS0xc8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422cef)
  store %struct.Memory* %call_422cef, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc0(%rbp)	 RIP: 422cf9	 Bytes: 10
  %loadMem_422cf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422cf9 = call %struct.Memory* @routine_movl__0x0__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422cf9)
  store %struct.Memory* %call_422cf9, %struct.Memory** %MEMORY

  ; Code: .L_422d03:	 RIP: 422d03	 Bytes: 0
  br label %block_.L_422d03
block_.L_422d03:

  ; Code: cmpl $0x6, -0xc0(%rbp)	 RIP: 422d03	 Bytes: 7
  %loadMem_422d03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d03 = call %struct.Memory* @routine_cmpl__0x6__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d03)
  store %struct.Memory* %call_422d03, %struct.Memory** %MEMORY

  ; Code: jge .L_422ecb	 RIP: 422d0a	 Bytes: 6
  %loadMem_422d0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d0a = call %struct.Memory* @routine_jge_.L_422ecb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d0a, i8* %BRANCH_TAKEN, i64 449, i64 6, i64 6)
  store %struct.Memory* %call_422d0a, %struct.Memory** %MEMORY

  %loadBr_422d0a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422d0a = icmp eq i8 %loadBr_422d0a, 1
  br i1 %cmpBr_422d0a, label %block_.L_422ecb, label %block_422d10

block_422d10:
  ; Code: movl -0xb8(%rbp), %eax	 RIP: 422d10	 Bytes: 6
  %loadMem_422d10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d10 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d10)
  store %struct.Memory* %call_422d10, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 422d16	 Bytes: 7
  %loadMem_422d16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d16 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d16)
  store %struct.Memory* %call_422d16, %struct.Memory** %MEMORY

  ; Code: addl 0x6cb840(,%rcx,4), %eax	 RIP: 422d1d	 Bytes: 7
  %loadMem_422d1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d1d = call %struct.Memory* @routine_addl_0x6cb840___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d1d)
  store %struct.Memory* %call_422d1d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 422d24	 Bytes: 3
  %loadMem_422d24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d24 = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d24)
  store %struct.Memory* %call_422d24, %struct.Memory** %MEMORY

  ; Code: movl -0xb4(%rbp), %eax	 RIP: 422d27	 Bytes: 6
  %loadMem_422d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d27 = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d27)
  store %struct.Memory* %call_422d27, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 422d2d	 Bytes: 7
  %loadMem_422d2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d2d = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d2d)
  store %struct.Memory* %call_422d2d, %struct.Memory** %MEMORY

  ; Code: addl 0x6cb860(,%rcx,4), %eax	 RIP: 422d34	 Bytes: 7
  %loadMem_422d34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d34 = call %struct.Memory* @routine_addl_0x6cb860___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d34)
  store %struct.Memory* %call_422d34, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x64(%rbp)	 RIP: 422d3b	 Bytes: 3
  %loadMem_422d3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d3b = call %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d3b)
  store %struct.Memory* %call_422d3b, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 422d3e	 Bytes: 3
  %loadMem_422d3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d3e = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d3e)
  store %struct.Memory* %call_422d3e, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 422d41	 Bytes: 6
  %loadMem_422d41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d41 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d41)
  store %struct.Memory* %call_422d41, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 422d47	 Bytes: 2
  %loadMem_422d47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d47 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d47)
  store %struct.Memory* %call_422d47, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 422d49	 Bytes: 5
  %loadMem1_422d49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_422d49 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_422d49, i64 -138569, i64 5, i64 5)
  store %struct.Memory* %call1_422d49, %struct.Memory** %MEMORY

  %loadMem2_422d49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_422d49 = load i64, i64* %3
  %call2_422d49 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_422d49, %struct.Memory* %loadMem2_422d49)
  store %struct.Memory* %call2_422d49, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 422d4e	 Bytes: 3
  %loadMem_422d4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d4e = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d4e)
  store %struct.Memory* %call_422d4e, %struct.Memory** %MEMORY

  ; Code: jg .L_422eb2	 RIP: 422d51	 Bytes: 6
  %loadMem_422d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d51 = call %struct.Memory* @routine_jg_.L_422eb2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d51, i8* %BRANCH_TAKEN, i64 353, i64 6, i64 6)
  store %struct.Memory* %call_422d51, %struct.Memory** %MEMORY

  %loadBr_422d51 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422d51 = icmp eq i8 %loadBr_422d51, 1
  br i1 %cmpBr_422d51, label %block_.L_422eb2, label %block_422d57

block_422d57:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 422d57	 Bytes: 3
  %loadMem_422d57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d57 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d57)
  store %struct.Memory* %call_422d57, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 422d5a	 Bytes: 6
  %loadMem_422d5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d5a = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d5a)
  store %struct.Memory* %call_422d5a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 422d60	 Bytes: 2
  %loadMem_422d60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d60 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d60)
  store %struct.Memory* %call_422d60, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 422d62	 Bytes: 5
  %loadMem1_422d62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_422d62 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_422d62, i64 -138594, i64 5, i64 5)
  store %struct.Memory* %call1_422d62, %struct.Memory** %MEMORY

  %loadMem2_422d62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_422d62 = load i64, i64* %3
  %call2_422d62 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_422d62, %struct.Memory* %loadMem2_422d62)
  store %struct.Memory* %call2_422d62, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 422d67	 Bytes: 3
  %loadMem_422d67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d67 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d67)
  store %struct.Memory* %call_422d67, %struct.Memory** %MEMORY

  ; Code: jg .L_422eb2	 RIP: 422d6a	 Bytes: 6
  %loadMem_422d6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d6a = call %struct.Memory* @routine_jg_.L_422eb2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d6a, i8* %BRANCH_TAKEN, i64 328, i64 6, i64 6)
  store %struct.Memory* %call_422d6a, %struct.Memory** %MEMORY

  %loadBr_422d6a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422d6a = icmp eq i8 %loadBr_422d6a, 1
  br i1 %cmpBr_422d6a, label %block_.L_422eb2, label %block_422d70

block_422d70:
  ; Code: movq 0x6d32d0, %rax	 RIP: 422d70	 Bytes: 8
  %loadMem_422d70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d70 = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d70)
  store %struct.Memory* %call_422d70, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 422d78	 Bytes: 3
  %loadMem_422d78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d78 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d78)
  store %struct.Memory* %call_422d78, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 422d7b	 Bytes: 6
  %loadMem_422d7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d7b = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d7b)
  store %struct.Memory* %call_422d7b, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422d81	 Bytes: 3
  %loadMem_422d81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d81 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d81)
  store %struct.Memory* %call_422d81, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 422d84	 Bytes: 3
  %loadMem_422d84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d84 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d84)
  store %struct.Memory* %call_422d84, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 422d87	 Bytes: 4
  %loadMem_422d87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d87 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d87)
  store %struct.Memory* %call_422d87, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 422d8b	 Bytes: 3
  %loadMem_422d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d8b = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d8b)
  store %struct.Memory* %call_422d8b, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 422d8e	 Bytes: 6
  %loadMem_422d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d8e = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d8e)
  store %struct.Memory* %call_422d8e, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422d94	 Bytes: 3
  %loadMem_422d94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d94 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d94)
  store %struct.Memory* %call_422d94, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 422d97	 Bytes: 3
  %loadMem_422d97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d97 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d97)
  store %struct.Memory* %call_422d97, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 422d9a	 Bytes: 4
  %loadMem_422d9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d9a = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d9a)
  store %struct.Memory* %call_422d9a, %struct.Memory** %MEMORY

  ; Code: jne .L_422ead	 RIP: 422d9e	 Bytes: 6
  %loadMem_422d9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422d9e = call %struct.Memory* @routine_jne_.L_422ead(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422d9e, i8* %BRANCH_TAKEN, i64 271, i64 6, i64 6)
  store %struct.Memory* %call_422d9e, %struct.Memory** %MEMORY

  %loadBr_422d9e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422d9e = icmp eq i8 %loadBr_422d9e, 1
  br i1 %cmpBr_422d9e, label %block_.L_422ead, label %block_422da4

block_422da4:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 422da4	 Bytes: 6
  %loadMem_422da4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422da4 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422da4)
  store %struct.Memory* %call_422da4, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 422daa	 Bytes: 8
  %loadMem_422daa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422daa = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422daa)
  store %struct.Memory* %call_422daa, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 422db2	 Bytes: 3
  %loadMem_422db2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422db2 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422db2)
  store %struct.Memory* %call_422db2, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 422db5	 Bytes: 6
  %loadMem_422db5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422db5 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422db5)
  store %struct.Memory* %call_422db5, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x1a0(%rbp)	 RIP: 422dbb	 Bytes: 7
  %loadMem_422dbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422dbb = call %struct.Memory* @routine_movq__rcx__MINUS0x1a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422dbb)
  store %struct.Memory* %call_422dbb, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 422dc2	 Bytes: 2
  %loadMem_422dc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422dc2 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422dc2)
  store %struct.Memory* %call_422dc2, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 422dc4	 Bytes: 2
  %loadMem_422dc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422dc4 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422dc4)
  store %struct.Memory* %call_422dc4, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 422dc6	 Bytes: 6
  %loadMem_422dc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422dc6 = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422dc6)
  store %struct.Memory* %call_422dc6, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 422dcc	 Bytes: 3
  %loadMem_422dcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422dcc = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422dcc)
  store %struct.Memory* %call_422dcc, %struct.Memory** %MEMORY

  ; Code: movq -0x1a0(%rbp), %r8	 RIP: 422dcf	 Bytes: 7
  %loadMem_422dcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422dcf = call %struct.Memory* @routine_movq_MINUS0x1a0__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422dcf)
  store %struct.Memory* %call_422dcf, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 422dd6	 Bytes: 4
  %loadMem_422dd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422dd6 = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422dd6)
  store %struct.Memory* %call_422dd6, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 422dda	 Bytes: 8
  %loadMem_422dda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422dda = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422dda)
  store %struct.Memory* %call_422dda, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 422de2	 Bytes: 3
  %loadMem_422de2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422de2 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422de2)
  store %struct.Memory* %call_422de2, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 422de5	 Bytes: 6
  %loadMem_422de5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422de5 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422de5)
  store %struct.Memory* %call_422de5, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 422deb	 Bytes: 2
  %loadMem_422deb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422deb = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422deb)
  store %struct.Memory* %call_422deb, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 422ded	 Bytes: 6
  %loadMem_422ded = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ded = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ded)
  store %struct.Memory* %call_422ded, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 422df3	 Bytes: 3
  %loadMem_422df3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422df3 = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422df3)
  store %struct.Memory* %call_422df3, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 422df6	 Bytes: 4
  %loadMem_422df6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422df6 = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422df6)
  store %struct.Memory* %call_422df6, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 422dfa	 Bytes: 3
  %loadMem_422dfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422dfa = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422dfa)
  store %struct.Memory* %call_422dfa, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 422dfd	 Bytes: 3
  %loadMem_422dfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422dfd = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422dfd)
  store %struct.Memory* %call_422dfd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 422e00	 Bytes: 3
  %loadMem_422e00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e00 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e00)
  store %struct.Memory* %call_422e00, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 422e03	 Bytes: 4
  %loadMem_422e03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e03 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e03)
  store %struct.Memory* %call_422e03, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 422e07	 Bytes: 4
  %loadMem_422e07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e07 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e07)
  store %struct.Memory* %call_422e07, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 422e0b	 Bytes: 4
  %loadMem_422e0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e0b = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e0b)
  store %struct.Memory* %call_422e0b, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 422e0f	 Bytes: 6
  %loadMem_422e0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e0f = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e0f)
  store %struct.Memory* %call_422e0f, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 422e15	 Bytes: 7
  %loadMem_422e15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e15 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e15)
  store %struct.Memory* %call_422e15, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 422e1c	 Bytes: 7
  %loadMem_422e1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e1c = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e1c)
  store %struct.Memory* %call_422e1c, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 422e23	 Bytes: 3
  %loadMem_422e23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e23 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e23)
  store %struct.Memory* %call_422e23, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 422e26	 Bytes: 4
  %loadMem_422e26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e26 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e26)
  store %struct.Memory* %call_422e26, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 422e2a	 Bytes: 4
  %loadMem_422e2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e2a = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e2a)
  store %struct.Memory* %call_422e2a, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 422e2e	 Bytes: 3
  %loadMem_422e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e2e = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e2e)
  store %struct.Memory* %call_422e2e, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 422e31	 Bytes: 3
  %loadMem_422e31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e31 = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e31)
  store %struct.Memory* %call_422e31, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 422e34	 Bytes: 5
  %loadMem_422e34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e34 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e34)
  store %struct.Memory* %call_422e34, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 422e39	 Bytes: 5
  %loadMem_422e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e39 = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e39)
  store %struct.Memory* %call_422e39, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 422e3e	 Bytes: 4
  %loadMem_422e3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e3e = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e3e)
  store %struct.Memory* %call_422e3e, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 422e42	 Bytes: 5
  %loadMem1_422e42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_422e42 = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_422e42, i64 -10642, i64 5, i64 5)
  store %struct.Memory* %call1_422e42, %struct.Memory** %MEMORY

  %loadMem2_422e42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_422e42 = load i64, i64* %3
  %call2_422e42 = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_422e42, %struct.Memory* %loadMem2_422e42)
  store %struct.Memory* %call2_422e42, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 422e47	 Bytes: 3
  %loadMem_422e47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e47 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e47)
  store %struct.Memory* %call_422e47, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 422e4a	 Bytes: 3
  %loadMem_422e4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e4a = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e4a)
  store %struct.Memory* %call_422e4a, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 422e4d	 Bytes: 8
  %loadMem_422e4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e4d = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e4d)
  store %struct.Memory* %call_422e4d, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 422e55	 Bytes: 3
  %loadMem_422e55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e55 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e55)
  store %struct.Memory* %call_422e55, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 422e58	 Bytes: 6
  %loadMem_422e58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e58 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e58)
  store %struct.Memory* %call_422e58, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422e5e	 Bytes: 3
  %loadMem_422e5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e5e = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e5e)
  store %struct.Memory* %call_422e5e, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 422e61	 Bytes: 3
  %loadMem_422e61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e61 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e61)
  store %struct.Memory* %call_422e61, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 422e64	 Bytes: 4
  %loadMem_422e64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e64 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e64)
  store %struct.Memory* %call_422e64, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 422e68	 Bytes: 3
  %loadMem_422e68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e68 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e68)
  store %struct.Memory* %call_422e68, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 422e6b	 Bytes: 6
  %loadMem_422e6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e6b = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e6b)
  store %struct.Memory* %call_422e6b, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422e71	 Bytes: 3
  %loadMem_422e71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e71 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e71)
  store %struct.Memory* %call_422e71, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 422e74	 Bytes: 3
  %loadMem_422e74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e74 = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e74)
  store %struct.Memory* %call_422e74, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 422e77	 Bytes: 3
  %loadMem_422e77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e77 = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e77)
  store %struct.Memory* %call_422e77, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 422e7a	 Bytes: 3
  %loadMem_422e7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e7a = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e7a)
  store %struct.Memory* %call_422e7a, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 422e7d	 Bytes: 3
  %loadMem_422e7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e7d = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e7d)
  store %struct.Memory* %call_422e7d, %struct.Memory** %MEMORY

  ; Code: jge .L_422ea8	 RIP: 422e80	 Bytes: 6
  %loadMem_422e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e80 = call %struct.Memory* @routine_jge_.L_422ea8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e80, i8* %BRANCH_TAKEN, i64 40, i64 6, i64 6)
  store %struct.Memory* %call_422e80, %struct.Memory** %MEMORY

  %loadBr_422e80 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422e80 = icmp eq i8 %loadBr_422e80, 1
  br i1 %cmpBr_422e80, label %block_.L_422ea8, label %block_422e86

block_422e86:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 422e86	 Bytes: 3
  %loadMem_422e86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e86 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e86)
  store %struct.Memory* %call_422e86, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 422e89	 Bytes: 6
  %loadMem_422e89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e89 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e89)
  store %struct.Memory* %call_422e89, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 422e8f	 Bytes: 3
  %loadMem_422e8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e8f = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e8f)
  store %struct.Memory* %call_422e8f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 422e92	 Bytes: 6
  %loadMem_422e92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e92 = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e92)
  store %struct.Memory* %call_422e92, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 422e98	 Bytes: 3
  %loadMem_422e98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e98 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e98)
  store %struct.Memory* %call_422e98, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 422e9b	 Bytes: 3
  %loadMem_422e9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e9b = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e9b)
  store %struct.Memory* %call_422e9b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc8(%rbp)	 RIP: 422e9e	 Bytes: 10
  %loadMem_422e9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422e9e = call %struct.Memory* @routine_movl__0x0__MINUS0xc8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422e9e)
  store %struct.Memory* %call_422e9e, %struct.Memory** %MEMORY

  ; Code: .L_422ea8:	 RIP: 422ea8	 Bytes: 0
  br label %block_.L_422ea8
block_.L_422ea8:

  ; Code: jmpq .L_422ead	 RIP: 422ea8	 Bytes: 5
  %loadMem_422ea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ea8 = call %struct.Memory* @routine_jmpq_.L_422ead(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ea8, i64 5, i64 5)
  store %struct.Memory* %call_422ea8, %struct.Memory** %MEMORY

  br label %block_.L_422ead

  ; Code: .L_422ead:	 RIP: 422ead	 Bytes: 0
block_.L_422ead:

  ; Code: jmpq .L_422eb2	 RIP: 422ead	 Bytes: 5
  %loadMem_422ead = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ead = call %struct.Memory* @routine_jmpq_.L_422eb2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ead, i64 5, i64 5)
  store %struct.Memory* %call_422ead, %struct.Memory** %MEMORY

  br label %block_.L_422eb2

  ; Code: .L_422eb2:	 RIP: 422eb2	 Bytes: 0
block_.L_422eb2:

  ; Code: jmpq .L_422eb7	 RIP: 422eb2	 Bytes: 5
  %loadMem_422eb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422eb2 = call %struct.Memory* @routine_jmpq_.L_422eb7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422eb2, i64 5, i64 5)
  store %struct.Memory* %call_422eb2, %struct.Memory** %MEMORY

  br label %block_.L_422eb7

  ; Code: .L_422eb7:	 RIP: 422eb7	 Bytes: 0
block_.L_422eb7:

  ; Code: movl -0xc0(%rbp), %eax	 RIP: 422eb7	 Bytes: 6
  %loadMem_422eb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422eb7 = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422eb7)
  store %struct.Memory* %call_422eb7, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 422ebd	 Bytes: 3
  %loadMem_422ebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ebd = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ebd)
  store %struct.Memory* %call_422ebd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc0(%rbp)	 RIP: 422ec0	 Bytes: 6
  %loadMem_422ec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ec0 = call %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ec0)
  store %struct.Memory* %call_422ec0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_422d03	 RIP: 422ec6	 Bytes: 5
  %loadMem_422ec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ec6 = call %struct.Memory* @routine_jmpq_.L_422d03(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ec6, i64 -451, i64 5)
  store %struct.Memory* %call_422ec6, %struct.Memory** %MEMORY

  br label %block_.L_422d03

  ; Code: .L_422ecb:	 RIP: 422ecb	 Bytes: 0
block_.L_422ecb:

  ; Code: cmpl $0x0, -0xc8(%rbp)	 RIP: 422ecb	 Bytes: 7
  %loadMem_422ecb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ecb = call %struct.Memory* @routine_cmpl__0x0__MINUS0xc8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ecb)
  store %struct.Memory* %call_422ecb, %struct.Memory** %MEMORY

  ; Code: je .L_422edd	 RIP: 422ed2	 Bytes: 6
  %loadMem_422ed2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ed2 = call %struct.Memory* @routine_je_.L_422edd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ed2, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_422ed2, %struct.Memory** %MEMORY

  %loadBr_422ed2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422ed2 = icmp eq i8 %loadBr_422ed2, 1
  br i1 %cmpBr_422ed2, label %block_.L_422edd, label %block_422ed8

block_422ed8:
  ; Code: jmpq .L_422f09	 RIP: 422ed8	 Bytes: 5
  %loadMem_422ed8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ed8 = call %struct.Memory* @routine_jmpq_.L_422f09(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ed8, i64 49, i64 5)
  store %struct.Memory* %call_422ed8, %struct.Memory** %MEMORY

  br label %block_.L_422f09

  ; Code: .L_422edd:	 RIP: 422edd	 Bytes: 0
block_.L_422edd:

  ; Code: movl -0xa8(%rbp), %eax	 RIP: 422edd	 Bytes: 6
  %loadMem_422edd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422edd = call %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422edd)
  store %struct.Memory* %call_422edd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb8(%rbp)	 RIP: 422ee3	 Bytes: 6
  %loadMem_422ee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ee3 = call %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ee3)
  store %struct.Memory* %call_422ee3, %struct.Memory** %MEMORY

  ; Code: movl -0xac(%rbp), %eax	 RIP: 422ee9	 Bytes: 6
  %loadMem_422ee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ee9 = call %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ee9)
  store %struct.Memory* %call_422ee9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb4(%rbp)	 RIP: 422eef	 Bytes: 6
  %loadMem_422eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422eef = call %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422eef)
  store %struct.Memory* %call_422eef, %struct.Memory** %MEMORY

  ; Code: movl -0xbc(%rbp), %eax	 RIP: 422ef5	 Bytes: 6
  %loadMem_422ef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ef5 = call %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ef5)
  store %struct.Memory* %call_422ef5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 422efb	 Bytes: 3
  %loadMem_422efb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422efb = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422efb)
  store %struct.Memory* %call_422efb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xbc(%rbp)	 RIP: 422efe	 Bytes: 6
  %loadMem_422efe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422efe = call %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422efe)
  store %struct.Memory* %call_422efe, %struct.Memory** %MEMORY

  ; Code: jmpq .L_422ce0	 RIP: 422f04	 Bytes: 5
  %loadMem_422f04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f04 = call %struct.Memory* @routine_jmpq_.L_422ce0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f04, i64 -548, i64 5)
  store %struct.Memory* %call_422f04, %struct.Memory** %MEMORY

  br label %block_.L_422ce0

  ; Code: .L_422f09:	 RIP: 422f09	 Bytes: 0
block_.L_422f09:

  ; Code: jmpq .L_422f0e	 RIP: 422f09	 Bytes: 5
  %loadMem_422f09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f09 = call %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f09, i64 5, i64 5)
  store %struct.Memory* %call_422f09, %struct.Memory** %MEMORY

  br label %block_.L_422f0e

  ; Code: .L_422f0e:	 RIP: 422f0e	 Bytes: 0
block_.L_422f0e:

  ; Code: movl -0xa8(%rbp), %eax	 RIP: 422f0e	 Bytes: 6
  %loadMem_422f0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f0e = call %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f0e)
  store %struct.Memory* %call_422f0e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb8(%rbp)	 RIP: 422f14	 Bytes: 6
  %loadMem_422f14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f14 = call %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f14)
  store %struct.Memory* %call_422f14, %struct.Memory** %MEMORY

  ; Code: movl -0xac(%rbp), %eax	 RIP: 422f1a	 Bytes: 6
  %loadMem_422f1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f1a = call %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f1a)
  store %struct.Memory* %call_422f1a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb4(%rbp)	 RIP: 422f20	 Bytes: 6
  %loadMem_422f20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f20 = call %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f20)
  store %struct.Memory* %call_422f20, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xbc(%rbp)	 RIP: 422f26	 Bytes: 10
  %loadMem_422f26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f26 = call %struct.Memory* @routine_movl__0x0__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f26)
  store %struct.Memory* %call_422f26, %struct.Memory** %MEMORY

  ; Code: .L_422f30:	 RIP: 422f30	 Bytes: 0
  br label %block_.L_422f30
block_.L_422f30:

  ; Code: movl -0xbc(%rbp), %eax	 RIP: 422f30	 Bytes: 6
  %loadMem_422f30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f30 = call %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f30)
  store %struct.Memory* %call_422f30, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 422f36	 Bytes: 3
  %loadMem_422f36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f36 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f36)
  store %struct.Memory* %call_422f36, %struct.Memory** %MEMORY

  ; Code: jge .L_423163	 RIP: 422f39	 Bytes: 6
  %loadMem_422f39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f39 = call %struct.Memory* @routine_jge_.L_423163(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f39, i8* %BRANCH_TAKEN, i64 554, i64 6, i64 6)
  store %struct.Memory* %call_422f39, %struct.Memory** %MEMORY

  %loadBr_422f39 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422f39 = icmp eq i8 %loadBr_422f39, 1
  br i1 %cmpBr_422f39, label %block_.L_423163, label %block_422f3f

block_422f3f:
  ; Code: movl $0x10000, -0xc4(%rbp)	 RIP: 422f3f	 Bytes: 10
  %loadMem_422f3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f3f = call %struct.Memory* @routine_movl__0x10000__MINUS0xc4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f3f)
  store %struct.Memory* %call_422f3f, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0xc8(%rbp)	 RIP: 422f49	 Bytes: 10
  %loadMem_422f49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f49 = call %struct.Memory* @routine_movl__0x1__MINUS0xc8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f49)
  store %struct.Memory* %call_422f49, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc0(%rbp)	 RIP: 422f53	 Bytes: 10
  %loadMem_422f53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f53 = call %struct.Memory* @routine_movl__0x0__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f53)
  store %struct.Memory* %call_422f53, %struct.Memory** %MEMORY

  ; Code: .L_422f5d:	 RIP: 422f5d	 Bytes: 0
  br label %block_.L_422f5d
block_.L_422f5d:

  ; Code: cmpl $0x4, -0xc0(%rbp)	 RIP: 422f5d	 Bytes: 7
  %loadMem_422f5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f5d = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f5d)
  store %struct.Memory* %call_422f5d, %struct.Memory** %MEMORY

  ; Code: jge .L_423125	 RIP: 422f64	 Bytes: 6
  %loadMem_422f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f64 = call %struct.Memory* @routine_jge_.L_423125(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f64, i8* %BRANCH_TAKEN, i64 449, i64 6, i64 6)
  store %struct.Memory* %call_422f64, %struct.Memory** %MEMORY

  %loadBr_422f64 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422f64 = icmp eq i8 %loadBr_422f64, 1
  br i1 %cmpBr_422f64, label %block_.L_423125, label %block_422f6a

block_422f6a:
  ; Code: movl -0xb8(%rbp), %eax	 RIP: 422f6a	 Bytes: 6
  %loadMem_422f6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f6a = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f6a)
  store %struct.Memory* %call_422f6a, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 422f70	 Bytes: 7
  %loadMem_422f70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f70 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f70)
  store %struct.Memory* %call_422f70, %struct.Memory** %MEMORY

  ; Code: addl 0x6cb7a0(,%rcx,4), %eax	 RIP: 422f77	 Bytes: 7
  %loadMem_422f77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f77 = call %struct.Memory* @routine_addl_0x6cb7a0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f77)
  store %struct.Memory* %call_422f77, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 422f7e	 Bytes: 3
  %loadMem_422f7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f7e = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f7e)
  store %struct.Memory* %call_422f7e, %struct.Memory** %MEMORY

  ; Code: movl -0xb4(%rbp), %eax	 RIP: 422f81	 Bytes: 6
  %loadMem_422f81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f81 = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f81)
  store %struct.Memory* %call_422f81, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 422f87	 Bytes: 7
  %loadMem_422f87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f87 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f87)
  store %struct.Memory* %call_422f87, %struct.Memory** %MEMORY

  ; Code: addl 0x6cb7b0(,%rcx,4), %eax	 RIP: 422f8e	 Bytes: 7
  %loadMem_422f8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f8e = call %struct.Memory* @routine_addl_0x6cb7b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f8e)
  store %struct.Memory* %call_422f8e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x64(%rbp)	 RIP: 422f95	 Bytes: 3
  %loadMem_422f95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f95 = call %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f95)
  store %struct.Memory* %call_422f95, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 422f98	 Bytes: 3
  %loadMem_422f98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f98 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f98)
  store %struct.Memory* %call_422f98, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %eax	 RIP: 422f9b	 Bytes: 6
  %loadMem_422f9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422f9b = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422f9b)
  store %struct.Memory* %call_422f9b, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 422fa1	 Bytes: 2
  %loadMem_422fa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fa1 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fa1)
  store %struct.Memory* %call_422fa1, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 422fa3	 Bytes: 5
  %loadMem1_422fa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_422fa3 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_422fa3, i64 -139171, i64 5, i64 5)
  store %struct.Memory* %call1_422fa3, %struct.Memory** %MEMORY

  %loadMem2_422fa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_422fa3 = load i64, i64* %3
  %call2_422fa3 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_422fa3, %struct.Memory* %loadMem2_422fa3)
  store %struct.Memory* %call2_422fa3, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 422fa8	 Bytes: 3
  %loadMem_422fa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fa8 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fa8)
  store %struct.Memory* %call_422fa8, %struct.Memory** %MEMORY

  ; Code: jg .L_42310c	 RIP: 422fab	 Bytes: 6
  %loadMem_422fab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fab = call %struct.Memory* @routine_jg_.L_42310c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fab, i8* %BRANCH_TAKEN, i64 353, i64 6, i64 6)
  store %struct.Memory* %call_422fab, %struct.Memory** %MEMORY

  %loadBr_422fab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422fab = icmp eq i8 %loadBr_422fab, 1
  br i1 %cmpBr_422fab, label %block_.L_42310c, label %block_422fb1

block_422fb1:
  ; Code: movl -0x64(%rbp), %eax	 RIP: 422fb1	 Bytes: 3
  %loadMem_422fb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fb1 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fb1)
  store %struct.Memory* %call_422fb1, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %eax	 RIP: 422fb4	 Bytes: 6
  %loadMem_422fb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fb4 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fb4)
  store %struct.Memory* %call_422fb4, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 422fba	 Bytes: 2
  %loadMem_422fba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fba = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fba)
  store %struct.Memory* %call_422fba, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 422fbc	 Bytes: 5
  %loadMem1_422fbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_422fbc = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_422fbc, i64 -139196, i64 5, i64 5)
  store %struct.Memory* %call1_422fbc, %struct.Memory** %MEMORY

  %loadMem2_422fbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_422fbc = load i64, i64* %3
  %call2_422fbc = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_422fbc, %struct.Memory* %loadMem2_422fbc)
  store %struct.Memory* %call2_422fbc, %struct.Memory** %MEMORY

  ; Code: cmpl -0x4c(%rbp), %eax	 RIP: 422fc1	 Bytes: 3
  %loadMem_422fc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fc1 = call %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fc1)
  store %struct.Memory* %call_422fc1, %struct.Memory** %MEMORY

  ; Code: jg .L_42310c	 RIP: 422fc4	 Bytes: 6
  %loadMem_422fc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fc4 = call %struct.Memory* @routine_jg_.L_42310c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fc4, i8* %BRANCH_TAKEN, i64 328, i64 6, i64 6)
  store %struct.Memory* %call_422fc4, %struct.Memory** %MEMORY

  %loadBr_422fc4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422fc4 = icmp eq i8 %loadBr_422fc4, 1
  br i1 %cmpBr_422fc4, label %block_.L_42310c, label %block_422fca

block_422fca:
  ; Code: movq 0x6d32d0, %rax	 RIP: 422fca	 Bytes: 8
  %loadMem_422fca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fca = call %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fca)
  store %struct.Memory* %call_422fca, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 422fd2	 Bytes: 3
  %loadMem_422fd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fd2 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fd2)
  store %struct.Memory* %call_422fd2, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 422fd5	 Bytes: 6
  %loadMem_422fd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fd5 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fd5)
  store %struct.Memory* %call_422fd5, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422fdb	 Bytes: 3
  %loadMem_422fdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fdb = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fdb)
  store %struct.Memory* %call_422fdb, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 422fde	 Bytes: 3
  %loadMem_422fde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fde = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fde)
  store %struct.Memory* %call_422fde, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 422fe1	 Bytes: 4
  %loadMem_422fe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fe1 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fe1)
  store %struct.Memory* %call_422fe1, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 422fe5	 Bytes: 3
  %loadMem_422fe5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fe5 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fe5)
  store %struct.Memory* %call_422fe5, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 422fe8	 Bytes: 6
  %loadMem_422fe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fe8 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fe8)
  store %struct.Memory* %call_422fe8, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 422fee	 Bytes: 3
  %loadMem_422fee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422fee = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422fee)
  store %struct.Memory* %call_422fee, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 422ff1	 Bytes: 3
  %loadMem_422ff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ff1 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ff1)
  store %struct.Memory* %call_422ff1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax,%rdx,4)	 RIP: 422ff4	 Bytes: 4
  %loadMem_422ff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ff4 = call %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ff4)
  store %struct.Memory* %call_422ff4, %struct.Memory** %MEMORY

  ; Code: jne .L_423107	 RIP: 422ff8	 Bytes: 6
  %loadMem_422ff8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ff8 = call %struct.Memory* @routine_jne_.L_423107(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ff8, i8* %BRANCH_TAKEN, i64 271, i64 6, i64 6)
  store %struct.Memory* %call_422ff8, %struct.Memory** %MEMORY

  %loadBr_422ff8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_422ff8 = icmp eq i8 %loadBr_422ff8, 1
  br i1 %cmpBr_422ff8, label %block_.L_423107, label %block_422ffe

block_422ffe:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 422ffe	 Bytes: 6
  %loadMem_422ffe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_422ffe = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_422ffe)
  store %struct.Memory* %call_422ffe, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rcx	 RIP: 423004	 Bytes: 8
  %loadMem_423004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423004 = call %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423004)
  store %struct.Memory* %call_423004, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %edx	 RIP: 42300c	 Bytes: 3
  %loadMem_42300c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42300c = call %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42300c)
  store %struct.Memory* %call_42300c, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 42300f	 Bytes: 6
  %loadMem_42300f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42300f = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42300f)
  store %struct.Memory* %call_42300f, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x1a8(%rbp)	 RIP: 423015	 Bytes: 7
  %loadMem_423015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423015 = call %struct.Memory* @routine_movq__rcx__MINUS0x1a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423015)
  store %struct.Memory* %call_423015, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 42301c	 Bytes: 2
  %loadMem_42301c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42301c = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42301c)
  store %struct.Memory* %call_42301c, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 42301e	 Bytes: 2
  %loadMem_42301e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42301e = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42301e)
  store %struct.Memory* %call_42301e, %struct.Memory** %MEMORY

  ; Code: subl -0x98(%rbp), %edx	 RIP: 423020	 Bytes: 6
  %loadMem_423020 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423020 = call %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423020)
  store %struct.Memory* %call_423020, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 423026	 Bytes: 3
  %loadMem_423026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423026 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423026)
  store %struct.Memory* %call_423026, %struct.Memory** %MEMORY

  ; Code: movq -0x1a8(%rbp), %r8	 RIP: 423029	 Bytes: 7
  %loadMem_423029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423029 = call %struct.Memory* @routine_movq_MINUS0x1a8__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423029)
  store %struct.Memory* %call_423029, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %edx	 RIP: 423030	 Bytes: 4
  %loadMem_423030 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423030 = call %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423030)
  store %struct.Memory* %call_423030, %struct.Memory** %MEMORY

  ; Code: movq 0x6f8f00, %rdi	 RIP: 423034	 Bytes: 8
  %loadMem_423034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423034 = call %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423034)
  store %struct.Memory* %call_423034, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %esi	 RIP: 42303c	 Bytes: 3
  %loadMem_42303c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42303c = call %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42303c)
  store %struct.Memory* %call_42303c, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %ecx	 RIP: 42303f	 Bytes: 6
  %loadMem_42303f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42303f = call %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42303f)
  store %struct.Memory* %call_42303f, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 423045	 Bytes: 2
  %loadMem_423045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423045 = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423045)
  store %struct.Memory* %call_423045, %struct.Memory** %MEMORY

  ; Code: subl -0x9c(%rbp), %esi	 RIP: 423047	 Bytes: 6
  %loadMem_423047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423047 = call %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423047)
  store %struct.Memory* %call_423047, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 42304d	 Bytes: 3
  %loadMem_42304d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42304d = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42304d)
  store %struct.Memory* %call_42304d, %struct.Memory** %MEMORY

  ; Code: addl (%rdi,%r9,4), %edx	 RIP: 423050	 Bytes: 4
  %loadMem_423050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423050 = call %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423050)
  store %struct.Memory* %call_423050, %struct.Memory** %MEMORY

  ; Code: imull %edx, %eax	 RIP: 423054	 Bytes: 3
  %loadMem_423054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423054 = call %struct.Memory* @routine_imull__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423054)
  store %struct.Memory* %call_423054, %struct.Memory** %MEMORY

  ; Code: sarl $0x10, %eax	 RIP: 423057	 Bytes: 3
  %loadMem_423057 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423057 = call %struct.Memory* @routine_sarl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423057)
  store %struct.Memory* %call_423057, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 42305a	 Bytes: 3
  %loadMem_42305a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42305a = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42305a)
  store %struct.Memory* %call_42305a, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 42305d	 Bytes: 4
  %loadMem_42305d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42305d = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42305d)
  store %struct.Memory* %call_42305d, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 423061	 Bytes: 4
  %loadMem_423061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423061 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423061)
  store %struct.Memory* %call_423061, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rdx	 RIP: 423065	 Bytes: 4
  %loadMem_423065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423065 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423065)
  store %struct.Memory* %call_423065, %struct.Memory** %MEMORY

  ; Code: movl -0x8c(%rbp), %ecx	 RIP: 423069	 Bytes: 6
  %loadMem_423069 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423069 = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423069)
  store %struct.Memory* %call_423069, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %r8d	 RIP: 42306f	 Bytes: 7
  %loadMem_42306f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42306f = call %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42306f)
  store %struct.Memory* %call_42306f, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %r9d	 RIP: 423076	 Bytes: 7
  %loadMem_423076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423076 = call %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423076)
  store %struct.Memory* %call_423076, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42307d	 Bytes: 3
  %loadMem_42307d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42307d = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42307d)
  store %struct.Memory* %call_42307d, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 423080	 Bytes: 4
  %loadMem_423080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423080 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423080)
  store %struct.Memory* %call_423080, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r11d	 RIP: 423084	 Bytes: 4
  %loadMem_423084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423084 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423084)
  store %struct.Memory* %call_423084, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ebx	 RIP: 423088	 Bytes: 3
  %loadMem_423088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423088 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423088)
  store %struct.Memory* %call_423088, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 42308b	 Bytes: 3
  %loadMem_42308b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42308b = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42308b)
  store %struct.Memory* %call_42308b, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 42308e	 Bytes: 5
  %loadMem_42308e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42308e = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42308e)
  store %struct.Memory* %call_42308e, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x10(%rsp)	 RIP: 423093	 Bytes: 5
  %loadMem_423093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423093 = call %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423093)
  store %struct.Memory* %call_423093, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 423098	 Bytes: 4
  %loadMem_423098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423098 = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423098)
  store %struct.Memory* %call_423098, %struct.Memory** %MEMORY

  ; Code: callq .PartCalMad	 RIP: 42309c	 Bytes: 5
  %loadMem1_42309c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42309c = call %struct.Memory* @routine_callq_.PartCalMad(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42309c, i64 -11244, i64 5, i64 5)
  store %struct.Memory* %call1_42309c, %struct.Memory** %MEMORY

  %loadMem2_42309c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42309c = load i64, i64* %3
  %call2_42309c = call %struct.Memory* @sub_4204b0.PartCalMad(%struct.State* %0, i64  %loadPC_42309c, %struct.Memory* %loadMem2_42309c)
  store %struct.Memory* %call2_42309c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 4230a1	 Bytes: 3
  %loadMem_4230a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230a1 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230a1)
  store %struct.Memory* %call_4230a1, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 4230a4	 Bytes: 3
  %loadMem_4230a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230a4 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230a4)
  store %struct.Memory* %call_4230a4, %struct.Memory** %MEMORY

  ; Code: movq 0x6d32d0, %rdx	 RIP: 4230a7	 Bytes: 8
  %loadMem_4230a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230a7 = call %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230a7)
  store %struct.Memory* %call_4230a7, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 4230af	 Bytes: 3
  %loadMem_4230af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230af = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230af)
  store %struct.Memory* %call_4230af, %struct.Memory** %MEMORY

  ; Code: subl -0xa4(%rbp), %ecx	 RIP: 4230b2	 Bytes: 6
  %loadMem_4230b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230b2 = call %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230b2)
  store %struct.Memory* %call_4230b2, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 4230b8	 Bytes: 3
  %loadMem_4230b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230b8 = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230b8)
  store %struct.Memory* %call_4230b8, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 4230bb	 Bytes: 3
  %loadMem_4230bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230bb = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230bb)
  store %struct.Memory* %call_4230bb, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 4230be	 Bytes: 4
  %loadMem_4230be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230be = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230be)
  store %struct.Memory* %call_4230be, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 4230c2	 Bytes: 3
  %loadMem_4230c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230c2 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230c2)
  store %struct.Memory* %call_4230c2, %struct.Memory** %MEMORY

  ; Code: subl -0xa0(%rbp), %ecx	 RIP: 4230c5	 Bytes: 6
  %loadMem_4230c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230c5 = call %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230c5)
  store %struct.Memory* %call_4230c5, %struct.Memory** %MEMORY

  ; Code: addl -0x4c(%rbp), %ecx	 RIP: 4230cb	 Bytes: 3
  %loadMem_4230cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230cb = call %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230cb)
  store %struct.Memory* %call_4230cb, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rsi	 RIP: 4230ce	 Bytes: 3
  %loadMem_4230ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230ce = call %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230ce)
  store %struct.Memory* %call_4230ce, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rsi,4)	 RIP: 4230d1	 Bytes: 3
  %loadMem_4230d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230d1 = call %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230d1)
  store %struct.Memory* %call_4230d1, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 4230d4	 Bytes: 3
  %loadMem_4230d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230d4 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230d4)
  store %struct.Memory* %call_4230d4, %struct.Memory** %MEMORY

  ; Code: cmpl -0x50(%rbp), %eax	 RIP: 4230d7	 Bytes: 3
  %loadMem_4230d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230d7 = call %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230d7)
  store %struct.Memory* %call_4230d7, %struct.Memory** %MEMORY

  ; Code: jge .L_423102	 RIP: 4230da	 Bytes: 6
  %loadMem_4230da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230da = call %struct.Memory* @routine_jge_.L_423102(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230da, i8* %BRANCH_TAKEN, i64 40, i64 6, i64 6)
  store %struct.Memory* %call_4230da, %struct.Memory** %MEMORY

  %loadBr_4230da = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4230da = icmp eq i8 %loadBr_4230da, 1
  br i1 %cmpBr_4230da, label %block_.L_423102, label %block_4230e0

block_4230e0:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 4230e0	 Bytes: 3
  %loadMem_4230e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230e0 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230e0)
  store %struct.Memory* %call_4230e0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 4230e3	 Bytes: 6
  %loadMem_4230e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230e3 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230e3)
  store %struct.Memory* %call_4230e3, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 4230e9	 Bytes: 3
  %loadMem_4230e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230e9 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230e9)
  store %struct.Memory* %call_4230e9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 4230ec	 Bytes: 6
  %loadMem_4230ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230ec = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230ec)
  store %struct.Memory* %call_4230ec, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 4230f2	 Bytes: 3
  %loadMem_4230f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230f2 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230f2)
  store %struct.Memory* %call_4230f2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 4230f5	 Bytes: 3
  %loadMem_4230f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230f5 = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230f5)
  store %struct.Memory* %call_4230f5, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc8(%rbp)	 RIP: 4230f8	 Bytes: 10
  %loadMem_4230f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4230f8 = call %struct.Memory* @routine_movl__0x0__MINUS0xc8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4230f8)
  store %struct.Memory* %call_4230f8, %struct.Memory** %MEMORY

  ; Code: .L_423102:	 RIP: 423102	 Bytes: 0
  br label %block_.L_423102
block_.L_423102:

  ; Code: jmpq .L_423107	 RIP: 423102	 Bytes: 5
  %loadMem_423102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423102 = call %struct.Memory* @routine_jmpq_.L_423107(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423102, i64 5, i64 5)
  store %struct.Memory* %call_423102, %struct.Memory** %MEMORY

  br label %block_.L_423107

  ; Code: .L_423107:	 RIP: 423107	 Bytes: 0
block_.L_423107:

  ; Code: jmpq .L_42310c	 RIP: 423107	 Bytes: 5
  %loadMem_423107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423107 = call %struct.Memory* @routine_jmpq_.L_42310c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423107, i64 5, i64 5)
  store %struct.Memory* %call_423107, %struct.Memory** %MEMORY

  br label %block_.L_42310c

  ; Code: .L_42310c:	 RIP: 42310c	 Bytes: 0
block_.L_42310c:

  ; Code: jmpq .L_423111	 RIP: 42310c	 Bytes: 5
  %loadMem_42310c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42310c = call %struct.Memory* @routine_jmpq_.L_423111(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42310c, i64 5, i64 5)
  store %struct.Memory* %call_42310c, %struct.Memory** %MEMORY

  br label %block_.L_423111

  ; Code: .L_423111:	 RIP: 423111	 Bytes: 0
block_.L_423111:

  ; Code: movl -0xc0(%rbp), %eax	 RIP: 423111	 Bytes: 6
  %loadMem_423111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423111 = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423111)
  store %struct.Memory* %call_423111, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 423117	 Bytes: 3
  %loadMem_423117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423117 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423117)
  store %struct.Memory* %call_423117, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc0(%rbp)	 RIP: 42311a	 Bytes: 6
  %loadMem_42311a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42311a = call %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42311a)
  store %struct.Memory* %call_42311a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_422f5d	 RIP: 423120	 Bytes: 5
  %loadMem_423120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423120 = call %struct.Memory* @routine_jmpq_.L_422f5d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423120, i64 -451, i64 5)
  store %struct.Memory* %call_423120, %struct.Memory** %MEMORY

  br label %block_.L_422f5d

  ; Code: .L_423125:	 RIP: 423125	 Bytes: 0
block_.L_423125:

  ; Code: cmpl $0x0, -0xc8(%rbp)	 RIP: 423125	 Bytes: 7
  %loadMem_423125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423125 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xc8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423125)
  store %struct.Memory* %call_423125, %struct.Memory** %MEMORY

  ; Code: je .L_423137	 RIP: 42312c	 Bytes: 6
  %loadMem_42312c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42312c = call %struct.Memory* @routine_je_.L_423137(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42312c, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_42312c, %struct.Memory** %MEMORY

  %loadBr_42312c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42312c = icmp eq i8 %loadBr_42312c, 1
  br i1 %cmpBr_42312c, label %block_.L_423137, label %block_423132

block_423132:
  ; Code: jmpq .L_423163	 RIP: 423132	 Bytes: 5
  %loadMem_423132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423132 = call %struct.Memory* @routine_jmpq_.L_423163(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423132, i64 49, i64 5)
  store %struct.Memory* %call_423132, %struct.Memory** %MEMORY

  br label %block_.L_423163

  ; Code: .L_423137:	 RIP: 423137	 Bytes: 0
block_.L_423137:

  ; Code: movl -0xa8(%rbp), %eax	 RIP: 423137	 Bytes: 6
  %loadMem_423137 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423137 = call %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423137)
  store %struct.Memory* %call_423137, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb8(%rbp)	 RIP: 42313d	 Bytes: 6
  %loadMem_42313d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42313d = call %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42313d)
  store %struct.Memory* %call_42313d, %struct.Memory** %MEMORY

  ; Code: movl -0xac(%rbp), %eax	 RIP: 423143	 Bytes: 6
  %loadMem_423143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423143 = call %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423143)
  store %struct.Memory* %call_423143, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb4(%rbp)	 RIP: 423149	 Bytes: 6
  %loadMem_423149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423149 = call %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423149)
  store %struct.Memory* %call_423149, %struct.Memory** %MEMORY

  ; Code: movl -0xbc(%rbp), %eax	 RIP: 42314f	 Bytes: 6
  %loadMem_42314f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42314f = call %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42314f)
  store %struct.Memory* %call_42314f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 423155	 Bytes: 3
  %loadMem_423155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423155 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423155)
  store %struct.Memory* %call_423155, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xbc(%rbp)	 RIP: 423158	 Bytes: 6
  %loadMem_423158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423158 = call %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423158)
  store %struct.Memory* %call_423158, %struct.Memory** %MEMORY

  ; Code: jmpq .L_422f30	 RIP: 42315e	 Bytes: 5
  %loadMem_42315e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42315e = call %struct.Memory* @routine_jmpq_.L_422f30(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42315e, i64 -558, i64 5)
  store %struct.Memory* %call_42315e, %struct.Memory** %MEMORY

  br label %block_.L_422f30

  ; Code: .L_423163:	 RIP: 423163	 Bytes: 0
block_.L_423163:

  ; Code: movl -0xa8(%rbp), %eax	 RIP: 423163	 Bytes: 6
  %loadMem_423163 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423163 = call %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423163)
  store %struct.Memory* %call_423163, %struct.Memory** %MEMORY

  ; Code: subl -0x2c(%rbp), %eax	 RIP: 423169	 Bytes: 3
  %loadMem_423169 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423169 = call %struct.Memory* @routine_subl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423169)
  store %struct.Memory* %call_423169, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 42316c	 Bytes: 3
  %loadMem_42316c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42316c = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42316c)
  store %struct.Memory* %call_42316c, %struct.Memory** %MEMORY

  ; Code: movq -0x40(%rbp), %rdx	 RIP: 42316f	 Bytes: 4
  %loadMem_42316f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42316f = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42316f)
  store %struct.Memory* %call_42316f, %struct.Memory** %MEMORY

  ; Code: movw %cx, (%rdx)	 RIP: 423173	 Bytes: 3
  %loadMem_423173 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423173 = call %struct.Memory* @routine_movw__cx____rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423173)
  store %struct.Memory* %call_423173, %struct.Memory** %MEMORY

  ; Code: movl -0xac(%rbp), %eax	 RIP: 423176	 Bytes: 6
  %loadMem_423176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423176 = call %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423176)
  store %struct.Memory* %call_423176, %struct.Memory** %MEMORY

  ; Code: subl -0x30(%rbp), %eax	 RIP: 42317c	 Bytes: 3
  %loadMem_42317c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42317c = call %struct.Memory* @routine_subl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42317c)
  store %struct.Memory* %call_42317c, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 42317f	 Bytes: 3
  %loadMem_42317f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42317f = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42317f)
  store %struct.Memory* %call_42317f, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rdx	 RIP: 423182	 Bytes: 4
  %loadMem_423182 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423182 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423182)
  store %struct.Memory* %call_423182, %struct.Memory** %MEMORY

  ; Code: movw %cx, (%rdx)	 RIP: 423186	 Bytes: 3
  %loadMem_423186 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423186 = call %struct.Memory* @routine_movw__cx____rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423186)
  store %struct.Memory* %call_423186, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %eax	 RIP: 423189	 Bytes: 3
  %loadMem_423189 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423189 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423189)
  store %struct.Memory* %call_423189, %struct.Memory** %MEMORY

  ; Code: addq $0x1b8, %rsp	 RIP: 42318c	 Bytes: 7
  %loadMem_42318c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42318c = call %struct.Memory* @routine_addq__0x1b8___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42318c)
  store %struct.Memory* %call_42318c, %struct.Memory** %MEMORY

  ; Code: popq %rbx	 RIP: 423193	 Bytes: 1
  %loadMem_423193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423193 = call %struct.Memory* @routine_popq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423193)
  store %struct.Memory* %call_423193, %struct.Memory** %MEMORY

  ; Code: popq %r14	 RIP: 423194	 Bytes: 2
  %loadMem_423194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423194 = call %struct.Memory* @routine_popq__r14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423194)
  store %struct.Memory* %call_423194, %struct.Memory** %MEMORY

  ; Code: popq %r15	 RIP: 423196	 Bytes: 2
  %loadMem_423196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423196 = call %struct.Memory* @routine_popq__r15(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423196)
  store %struct.Memory* %call_423196, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 423198	 Bytes: 1
  %loadMem_423198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423198 = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423198)
  store %struct.Memory* %call_423198, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 423199	 Bytes: 1
  %loadMem_423199 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_423199 = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_423199)
  store %struct.Memory* %call_423199, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_423199
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_pushq__r15(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R15
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_pushq__r14(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R14
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_pushq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x1b8___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 440)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i16* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i16
  store i16 %5, i16* %2, align 2
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__si___ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %SI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %SI
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_0x38__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x30__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = add i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_0x28__rbp____r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x20__rbp____rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i16* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  store i16 %6, i16* %2, align 2
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw_0x18__rbp____r14w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R14W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw_0x10__rbp____r15w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R15W, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rdi__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i16
  %6 = inttoptr i64 %2 to i16*
  store i16 %5, i16* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__ax__MINUS0x22__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 34
  %14 = load i16, i16* %AX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edx__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r8d__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r9d__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw__r15w__MINUS0x36__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 54
  %14 = load i16, i16* %R15W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw__r14w__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i16, i16* %R14W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rbx__MINUS0x40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %RBX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__r11__MINUS0x48__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %R11
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r10d__MINUS0x4c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i8* nocapture readonly) #7 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = inttoptr i64 %2 to double*
  store double %6, double* %7
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x58__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 88
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0__0x11ad0__rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 72400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_4207de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_0xc__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = sext i64 %4 to i128
  %9 = and i128 %8, -18446744073709551616
  %10 = zext i64 %3 to i128
  %11 = or i128 %7, %10
  %12 = zext i64 %4 to i128
  %13 = or i128 %9, %12
  %14 = mul  i128 %13, %11
  %15 = trunc i128 %14 to i64
  store i64 %15, i64* %2, align 8
  %16 = sext i64 %15 to i128
  %17 = icmp ne i128 %16, %14
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i128 %14 to i32
  %21 = and i32 %20, 255
  %22 = tail call i32 @llvm.ctpop.i32(i32 %21) #22
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %28, align 1
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %18, i8* %32, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 632)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 2)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x4___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 4)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0xc__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0xdc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376)) #2 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = lshr i64 %7, 32
  store i64 %8, i64* %3, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cltd(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = shl  i64 %11, 32
  %15 = or i64 %14, %7
  %16 = sdiv i64 %15, %13
  %17 = shl i64 %16, 32
  %18 = ashr exact i64 %17, 32
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %36

; <label>:24:                                     ; preds = %3
  %25 = srem i64 %15, %13
  %26 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %27 = and i64 %16, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %24, %20
  %37 = phi %struct.Memory* [ %23, %20 ], [ %0, %24 ]
  ret %struct.Memory* %37
}

define %struct.Memory* @routine_idivl__esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6CMOVNZI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 0
  %8 = load i64, i64* %2, align 8
  %9 = select i1 %7, i64 %3, i64 %8
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmovnel__ecx___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6CMOVNZI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__esi__MINUS0xe0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_4207eb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0xe0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0xe0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to double*
  %6 = load double, double* %5
  %7 = bitcast i8* %2 to double*
  store double %6, double* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to double*
  store double 0.000000e+00, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd_0x9108f__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x9108f__rip__type* @G_0x9108f__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0x9108f__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x9108f__rip__type* @G_0x9108f__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = add i32 %8, %6
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %9, %6
  %12 = icmp ult i32 %9, %8
  %13 = or i1 %11, %12
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #22
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i32 %8, %6
  %23 = xor i32 %22, %9
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %9, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %9, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %8, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl_MINUS0x74__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 116
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x722b20___rcx_8____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 8
  %11 = add i64 %10, 7482144
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %11)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = sext i16 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movswq_MINUS0x22__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 34
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x1920__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 6432
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rcx__MINUS0x80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = inttoptr i64 %4 to double*
  %12 = load double, double* %11
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd_MINUS0x58__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fadd double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = tail call double @llvm.trunc.f64(double %6) #22
  %8 = tail call double @llvm.fabs.f64(double %7) #22
  %9 = fcmp ogt double %8, 0x41DFFFFFFFC00000
  %10 = fptosi double %7 to i32
  %11 = zext i32 %10 to i64
  %12 = select i1 %9, i64 2147483648, i64 %11
  store i64 %12, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvttsd2si__xmm1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x2__MINUS0x88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x34__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x54__rcx__rdx_8____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 8
  %18 = add i64 %15, 84
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__eax__MINUS0x8c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_0x50__rcx__rdx_8____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 8
  %18 = add i64 %15, 80
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__eax__MINUS0x90__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x90__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %10 [
    i5 0, label %43
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 32
  %9 = ashr i64 %8, 33
  br label %19

; <label>:10:                                     ; preds = %5
  %11 = and i64 %4, 31
  %12 = add  i64 %11, -1
  %13 = shl i64 %3, 32
  %14 = ashr exact i64 %13, 32
  %15 = ashr i64 %14, %12
  %16 = icmp ne i8 0, 0
  %17 = zext i1 %16 to i8
  %18 = lshr i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %10, %7
  %20 = phi i8 [ 0, %10 ], [ 0, %7 ]
  %21 = phi i64 [ %18, %10 ], [ %9, %7 ]
  %22 = phi i8 [ %17, %10 ], [ 0, %7 ]
  %23 = phi i64 [ %15, %10 ], [ %3, %7 ]
  %24 = trunc i64 %23 to i8
  %25 = and i8 %24, 1
  %26 = trunc i64 %21 to i32
  %27 = and i64 %21, 4294967295
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %25, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %30 = and i32 %26, 255
  %31 = tail call i32 @llvm.ctpop.i32(i32 %30) #22
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  store i8 %34, i8* %29, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %37 = icmp eq i32 %26, 0
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %40 = lshr i32 %26, 31
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %39, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %22, i8* %42, align 1
  br label %43

; <label>:43:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_sarl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__cl___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = sext i16 %6 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movswl_MINUS0x36__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 54
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movswl_MINUS0x38__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x9c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq_MINUS0x40__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movswl___rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}




define %struct.Memory* @routine_movl__eax__MINUS0xa0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq_MINUS0x48__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0xa4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x0__MINUS0xa8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0xac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 172
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x6cb8f8___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x4d4__rdx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 1236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0xcc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_cmpl__0x0__0x11ad0__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 72400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_42096e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_movl_0x3c__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0xe4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0xe4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0xe8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42097f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_0x3c__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0xe8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xe8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0xd8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xa0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 76
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_420a01(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_0x34__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = sub i32 %6, %8
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %6, %8
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %8, %6
  %21 = xor i32 %20, %9
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %9, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %9, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %8, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl_MINUS0x4c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 76
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_subl_MINUS0x90__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 144
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_420a01(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0xa4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0xd8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_subl_MINUS0x4c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 76
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_subl_MINUS0x8c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 140
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x49e480___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x49e480_type* @G__0x49e480 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__rax__MINUS0x70__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_420a0f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x49e4c0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x49e4c0_type* @G__0x49e4c0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_xorl__esi___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_0x6d32d0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6d32d0_type* @G_0x6d32d0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq___rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x4c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x4c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shll__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = shl i64 %3, 32
  %7 = ashr exact i64 %6, 32
  %8 = shl i64 %4, 32
  %9 = ashr exact i64 %8, 32
  %10 = mul  i64 %9, %7
  %11 = trunc i64 %10 to i32
  %12 = and i64 %10, 4294967295
  store i64 %12, i64* %2, align 8
  %13 = shl i64 %10, 32
  %14 = ashr exact i64 %13, 32
  %15 = icmp ne i64 %14, %10
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %11, 255
  %19 = tail call i32 @llvm.ctpop.i32(i32 %18) #22
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %25, align 1
  %26 = lshr i32 %11, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %16, i8* %29, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_shll__0x2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.memset_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movswl_MINUS0x22__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 34
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_420ae9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__0x6cd480(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6cd480_type* @G_0x6cd480 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_420ad1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to float*
  %6 = load float, float* %5
  %7 = bitcast i8* %2 to float*
  store float %6, float* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 4
  %9 = bitcast i8* %8 to float*
  store float 0.000000e+00, float* %9, align 1
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to float*
  store float 0.000000e+00, float* %11, align 1
  %12 = getelementptr inbounds i8, i8* %2, i64 12
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movss_0x70d4b0___rax_4____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 7394480
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 9
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_0x6cd480___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cd480_type* @G_0x6cd480 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6
  %8 = shl i64 %3, 32
  %9 = ashr exact i64 %8, 32
  %10 = sext i32 %7 to i64
  %11 = mul  i64 %10, %9
  %12 = trunc i64 %11 to i32
  %13 = and i64 %11, 4294967295
  store i64 %13, i64* %2, align 8
  %14 = shl i64 %11, 32
  %15 = ashr exact i64 %14, 32
  %16 = icmp ne i64 %15, %11
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %12, 255
  %20 = tail call i32 @llvm.ctpop.i32(i32 %19) #22
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %26, align 1
  %27 = lshr i32 %12, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %17, i8* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull_0x6cd480___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 ptrtoint( %G_0x6cd480_type* @G_0x6cd480 to i64))
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = bitcast i8* %2 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = trunc i64 %3 to i32
  %11 = sitofp i32 %10 to float
  %12 = bitcast i8* %2 to float*
  store float %11, float* %12, align 1
  %13 = extractelement <2 x i32> %6, i32 1
  %14 = getelementptr inbounds i8, i8* %2, i64 4
  %15 = bitcast i8* %14 to i32*
  store i32 %13, i32* %15, align 1
  %16 = extractelement <2 x i32> %9, i32 0
  %17 = bitcast i8* %7 to i32*
  store i32 %16, i32* %17, align 1
  %18 = extractelement <2 x i32> %9, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2ssl__ecx___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = bitcast i8* %4 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 1
  %13 = extractelement <2 x float> %7, i32 0
  %14 = extractelement <2 x float> %12, i32 0
  %15 = fdiv float %13, %14
  %16 = bitcast i8* %2 to float*
  store float %15, float* %16, align 1
  %17 = bitcast <2 x float> %7 to <2 x i32>
  %18 = extractelement <2 x i32> %17, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %10, i32 0
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %10, i32 1
  %25 = getelementptr inbounds i8, i8* %2, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSSI3VnWI8vec128_tE2VnIS2_E3MVnI7vec32_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = inttoptr i64 %4 to float*
  %12 = load float, float* %11
  %13 = extractelement <2 x float> %7, i32 0
  %14 = fsub float %13, %12
  %15 = bitcast i8* %2 to float*
  store float %14, float* %15, align 1
  %16 = bitcast <2 x float> %7 to <2 x i32>
  %17 = extractelement <2 x i32> %16, i32 1
  %18 = getelementptr inbounds i8, i8* %2, i64 4
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 1
  %20 = extractelement <2 x i32> %10, i32 0
  %21 = getelementptr inbounds i8, i8* %2, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %10, i32 1
  %24 = getelementptr inbounds i8, i8* %2, i64 12
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subss_0x724300___rax_4____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 7488256
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 9
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSSI3VnWI8vec128_tE2VnIS2_E3MVnI7vec32_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i8* nocapture readonly) #7 {
  %5 = bitcast i8* %3 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = inttoptr i64 %2 to float*
  store float %7, float* %8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movss__xmm0__MINUS0xd0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 208
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_subss_0x6f8ee0___rax_4____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 7311072
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 9
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSSI3VnWI8vec128_tE2VnIS2_E3MVnI7vec32_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movss__xmm0__MINUS0xd4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 212
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_jmpq_.L_420ae4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PXORI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to i64*
  %7 = load i64, i64* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = getelementptr inbounds i8, i8* %4, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = xor i64 %12, %7
  %17 = xor i64 %15, %10
  %18 = trunc i64 %16 to i32
  %19 = lshr i64 %16, 32
  %20 = trunc i64 %19 to i32
  %21 = bitcast i8* %2 to i32*
  store i32 %18, i32* %21, align 1
  %22 = getelementptr inbounds i8, i8* %2, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %20, i32* %23, align 1
  %24 = trunc i64 %17 to i32
  %25 = getelementptr inbounds i8, i8* %2, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = lshr i64 %17, 32
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds i8, i8* %2, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PXORI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}






define %struct.Memory* @routine_jmpq_.L_420c32(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_420b90(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__0x6d1900(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d1900_type* @G_0x6d1900 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_420b78(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_0x6d1900___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6d1900_type* @G_0x6d1900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_imull_0x6d1900___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 ptrtoint( %G_0x6d1900_type* @G_0x6d1900 to i64))
  ret %struct.Memory* %12
}






























define %struct.Memory* @routine_jmpq_.L_420b8b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_420c2d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__0x72369c(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x72369c_type* @G_0x72369c to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_420c15(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_0x72369c___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x72369c_type* @G_0x72369c to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_imull_0x72369c___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 ptrtoint( %G_0x72369c_type* @G_0x72369c to i64))
  ret %struct.Memory* %12
}






























define %struct.Memory* @routine_jmpq_.L_420c28(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6f8f00_type* @G_0x6f8f00 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rcx__MINUS0xf0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shll__cl___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_subl_MINUS0x98__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 152
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0xf0__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R8
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G_0x6f8f00_type* @G_0x6f8f00 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_shll__cl___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 9
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RSI = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RSI
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_subl_MINUS0x9c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 156
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__esi___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl___rdi__r9_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RDI
  %17 = load i64, i64* %R9
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_imull__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_sarl__0x10___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 16)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x70__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x90__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 144
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x94__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 148
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 80
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 96
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 8
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 16
  %14 = load i32, i32* %R11D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 24
  %14 = load i32, i32* %EBX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.PartCalMad(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq_0x6d32d0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6d32d0_type* @G_0x6d32d0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x4c__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_cmpl_MINUS0x50__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 80
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_420d28(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x0__MINUS0xc0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 192
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0xc0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 192
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_420f08(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_0x6cb7a0___rcx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 7124896
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_0x6cb7b0___rcx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 7124912
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 160
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.abs_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = xor i1 %15, true
  %17 = and i1 %8, %16
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %2, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %3, i64 %4
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jg_.L_420eef(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_subl_MINUS0xa4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 164
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl_MINUS0xa4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 164
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 76
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl_MINUS0xa0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 160
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 0)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_420eea(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0xf8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0xf8__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


































































define %struct.Memory* @routine_movslq__ecx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_jge_.L_420ee5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_420eea(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_420eef(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_420ef4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_420d4a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 44
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_420f26(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl_MINUS0x30__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 48
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_je_.L_421281(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















define %struct.Memory* @routine_jg_.L_42109c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_421097(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x100__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x100__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_421092(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_421097(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_42109c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jge_.L_42127c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




























define %struct.Memory* @routine_jg_.L_421263(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_42125e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x108__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x108__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_421259(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_42125e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_421263(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_421268(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4210be(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_421281(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jle_.L_42149e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x6d1fa0___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6d1fa0_type* @G_0x6d1fa0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x10c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x10c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x60__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x6d1fa4___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6d1fa4_type* @G_0x6d1fa4 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x110__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x110__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__ecx__MINUS0x64__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}












define %struct.Memory* @routine_jg_.L_42143a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_421435(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x118__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x118__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_421430(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_421435(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_42143a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl_0x72369c___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 ptrtoint( %G_0x72369c_type* @G_0x72369c to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory*, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = bitcast i8* %2 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = inttoptr i64 %3 to i32*
  %11 = load i32, i32* %10
  %12 = sitofp i32 %11 to float
  %13 = bitcast i8* %2 to float*
  store float %12, float* %13, align 1
  %14 = extractelement <2 x i32> %6, i32 1
  %15 = getelementptr inbounds i8, i8* %2, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 %14, i32* %16, align 1
  %17 = extractelement <2 x i32> %9, i32 0
  %18 = bitcast i8* %7 to i32*
  store i32 %17, i32* %18, align 1
  %19 = extractelement <2 x i32> %9, i32 1
  %20 = getelementptr inbounds i8, i8* %2, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2ssl_0x72369c___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x72369c_type* @G_0x72369c to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSSI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = inttoptr i64 %4 to float*
  %12 = load float, float* %11
  %13 = extractelement <2 x float> %7, i32 0
  %14 = fmul float %13, %12
  %15 = bitcast i8* %2 to float*
  store float %14, float* %15, align 1
  %16 = bitcast <2 x float> %7 to <2 x i32>
  %17 = extractelement <2 x i32> %16, i32 1
  %18 = getelementptr inbounds i8, i8* %2, i64 4
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 1
  %20 = extractelement <2 x i32> %10, i32 0
  %21 = getelementptr inbounds i8, i8* %2, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %10, i32 1
  %24 = getelementptr inbounds i8, i8* %2, i64 12
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulss_MINUS0xd4__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 212
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSSI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory*, %struct.State* dereferenceable(3376), i8* nocapture readonly, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %2 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = bitcast i8* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = extractelement <2 x float> %9, i32 0
  %11 = fcmp uno float %7, %10
  br i1 %11, label %12, label %24

; <label>:12:                                     ; preds = %4
  %13 = fadd float %7, %10
  %14 = bitcast float %13 to i32
  %15 = and i32 %14, 2143289344
  %16 = icmp eq i32 %15, 2139095040
  %17 = and i32 %14, 4194303
  %18 = icmp ne i32 %17, 0
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %30

; <label>:20:                                     ; preds = %12
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %41

; <label>:24:                                     ; preds = %4
  %25 = fcmp ogt float %7, %10
  br i1 %25, label %30, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp olt float %7, %10
  br i1 %27, label %30, label %28

; <label>:28:                                     ; preds = %26
  %29 = fcmp oeq float %7, %10
  br i1 %29, label %30, label %37

; <label>:30:                                     ; preds = %28, %26, %24, %12
  %31 = phi i8 [ 0, %24 ], [ 0, %26 ], [ 1, %28 ], [ 1, %12 ]
  %32 = phi i8 [ 0, %24 ], [ 0, %26 ], [ 0, %28 ], [ 1, %12 ]
  %33 = phi i8 [ 0, %24 ], [ 1, %26 ], [ 0, %28 ], [ 1, %12 ]
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %31, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %32, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %33, i8* %36, align 1
  br label %37

; <label>:37:                                     ; preds = %30, %28
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %40, align 1
  br label %41

; <label>:41:                                     ; preds = %37, %20
  %42 = phi %struct.Memory* [ %23, %20 ], [ %0, %37 ]
  ret %struct.Memory* %42
}

define %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %9 = load i8, i8* %8, align 1
  %10 = or i8 %9, %7
  %11 = icmp ne i8 %10, 0
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %2, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %14 = select i1 %11, i64 %3, i64 %4
  store i64 %14, i64* %13, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jbe_.L_421467(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_422f0e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_mulss_MINUS0xd0__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 208
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSSI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jbe_.L_421494(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_422cbe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_421499(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_42149e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl___rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movswl_MINUS0x22__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 34
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_4214c4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movswl_MINUS0x22__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 34
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0xffffffff___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4214e5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_421699(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_0x722ca8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x722ca8_type* @G_0x722ca8 to i64))
  ret %struct.Memory* %11
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = inttoptr i64 %2 to i32*
  %13 = load i32, i32* %12
  %14 = sext i32 %13 to i64
  %15 = shl  i64 %11, 32
  %16 = or i64 %15, %7
  %17 = sdiv i64 %16, %14
  %18 = shl i64 %17, 32
  %19 = ashr exact i64 %18, 32
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %25, label %21

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %23, %struct.Memory* %0) #21
  br label %37

; <label>:25:                                     ; preds = %3
  %26 = srem i64 %16, %14
  %27 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %28 = and i64 %17, 4294967295
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %30 = and i64 %26, 4294967295
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  br label %37

; <label>:37:                                     ; preds = %25, %21
  %38 = phi %struct.Memory* [ %24, %21 ], [ %0, %25 ]
  ret %struct.Memory* %38
}

define %struct.Memory* @routine_idivl_MINUS0xcc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 204
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_421699(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_0x70fd54___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x70fd54_type* @G_0x70fd54 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x11c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x11c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl_0x70fd58___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x70fd58_type* @G_0x70fd58 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x120__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x120__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_jg_.L_421694(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_42168f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x128__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x128__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_42168a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_42168f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_421694(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_421699(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x1__0xb40__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2880
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4218b4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4216c5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jg_.L_4216fb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4218af(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_je_.L_4216fb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_movl_0x710010___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x710010_type* @G_0x710010 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x12c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x12c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl_0x710014___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x710014_type* @G_0x710014 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x130__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x130__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_jg_.L_4218aa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_4218a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x138__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x138__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_4218a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_4218a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4218aa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4218af(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_421aad(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_4218cb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jg_.L_4218f4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_421aa8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x13c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl__eax__MINUS0x140__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 320
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x140__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 320
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_jg_.L_421aa3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_421a9e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x148__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 328
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x148__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 328
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_421a99(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_421a9e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_421aa3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_421aa8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
















define %struct.Memory* @routine_jge_.L_421c8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




























define %struct.Memory* @routine_jg_.L_421c74(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_421c6f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x150__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x150__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_421c6a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_421c6f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_421c74(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_421c79(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_421acf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jle_.L_421cfe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_subl_0x6cd480___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 ptrtoint( %G_0x6cd480_type* @G_0x6cd480 to i64))
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cvtsi2ssl_0x6cd480___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x6cd480_type* @G_0x6cd480 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_jbe_.L_421cc7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jbe_.L_421cf4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_421cf9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_421dd5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jle_.L_421d6c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jbe_.L_421d35(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jbe_.L_421d62(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_421d67(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_421dd0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_subl_0x6d1900___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 ptrtoint( %G_0x6d1900_type* @G_0x6d1900 to i64))
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cvtsi2ssl_0x6d1900___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x6d1900_type* @G_0x6d1900 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_jbe_.L_421d99(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jbe_.L_421dc6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_421dcb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_cmpl__0x6__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 6)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_421de4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_421de9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movl__0x1__MINUS0xbc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 188
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl_MINUS0xbc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x154__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x154__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jg_.L_422161(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shll__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_subl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0xb0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_addl_MINUS0xb0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 176
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


















define %struct.Memory* @routine_jg_.L_421fc6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_421fc1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x160__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x160__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_421fbc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_421fc1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_421fc6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_subl_MINUS0xb0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 176
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


















define %struct.Memory* @routine_jg_.L_422148(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_422143(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x168__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x168__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_42213e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_422143(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_422148(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_42214d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_421e0b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movl__eax__MINUS0x16c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x16c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jg_.L_4224c1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






























define %struct.Memory* @routine_jg_.L_422326(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_422321(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x178__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 376
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x178__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 376
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_42231c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_422321(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_422326(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






















define %struct.Memory* @routine_jg_.L_4224a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_4224a3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x180__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x180__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_42249e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_4224a3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4224a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4224ad(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_42216b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jle_.L_422532(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jbe_.L_4224fb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jbe_.L_422528(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_42252d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_422609(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jle_.L_4225a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jbe_.L_422569(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jbe_.L_422596(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_42259b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_422604(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jbe_.L_4225cd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jbe_.L_4225fa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_4225ff(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_movl__0x1__MINUS0x5c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x19__MINUS0x5c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 25)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4227df(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq_0x6d09a0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6d09a0_type* @G_0x6d09a0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x5c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl___rcx__rdx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}






define %struct.Memory* @routine_movq_0x711c50___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x711c50_type* @G_0x711c50 to i64))
  ret %struct.Memory* %11
}


















define %struct.Memory* @routine_jg_.L_4227cc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_4227c7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x188__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 392
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x188__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_4227c2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_4227c7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4227cc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4227d1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_422628(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jle_.L_422850(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jbe_.L_422819(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jbe_.L_422846(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_42284b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_422927(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jle_.L_4228be(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jbe_.L_422887(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jbe_.L_4228b4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_4228b9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_422922(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jbe_.L_4228eb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jbe_.L_422918(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_42291d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_movl__eax__MINUS0x18c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 396
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x18c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jg_.L_422cb9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0xc8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 200
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl__0x10__MINUS0xc0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 192
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 16)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_422b46(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_0x6cb7c0___rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 7124928
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_imull_MINUS0xbc__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 188
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movl_0x6cb800___rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 7124992
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %14)
  ret %struct.Memory* %17
}


















define %struct.Memory* @routine_jg_.L_422b2d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_422b28(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x198__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 408
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x198__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 408
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_422b23(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_movl__0x1__MINUS0xc8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 200
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_422b28(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_422b2d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_422b32(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_42296c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0xc8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 200
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_422ca0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jle_.L_422bc4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jbe_.L_422b8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jbe_.L_422bba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_422bbf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_422c9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jle_.L_422c32(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jbe_.L_422bfb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jbe_.L_422c28(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_422c2d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_422c96(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jbe_.L_422c5f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jbe_.L_422c8c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_422c91(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jmpq_.L_422ca0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_422ca5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_422931(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_movl__0x0__MINUS0xbc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 188
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_jge_.L_422f09(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl__0x6__MINUS0xc0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 192
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 6)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_422ecb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_addl_0x6cb840___rcx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 7125056
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_addl_0x6cb860___rcx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 7125088
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %15)
  ret %struct.Memory* %18
}














define %struct.Memory* @routine_jg_.L_422eb2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_422ead(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x1a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 416
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x1a0__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 416
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_422ea8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jmpq_.L_422ead(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_422eb2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_422eb7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_422d03(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_422edd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_422f09(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
















define %struct.Memory* @routine_jmpq_.L_422ce0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_jge_.L_423163(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x10000__MINUS0xc4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 196
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 65536)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_jge_.L_423125(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




























define %struct.Memory* @routine_jg_.L_42310c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jne_.L_423107(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rcx__MINUS0x1a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 424
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x1a8__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 424
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




















































































define %struct.Memory* @routine_jge_.L_423102(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jmpq_.L_423107(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_42310c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_423111(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_422f5d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_423137(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_423163(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
















define %struct.Memory* @routine_jmpq_.L_422f30(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_subl_MINUS0x2c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movw__ax___cx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %CX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__cx____rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i16, i16* %CX
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_subl_MINUS0x30__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}









define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0x1b8___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 440)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBX)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__r14(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %R14)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__r15(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %R15)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

