; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6f6f90_type = type <{ [8 x i8] }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
%G__0x4b8e40_type = type <{ [8 x i8] }>
%G__0x6d2ec0_type = type <{ [8 x i8] }>
%G__0x6d40f0_type = type <{ [8 x i8] }>
%G__0x6f6fa0_type = type <{ [8 x i8] }>
%G__0x6f8f20_type = type <{ [8 x i8] }>
%G__0x722ff0_type = type <{ [8 x i8] }>
%G__0x725610_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6f6f90 = global %G_0x6f6f90_type zeroinitializer
@G_0x70fcf0 = global %G_0x70fcf0_type zeroinitializer
@G__0x4b8e40 = global %G__0x4b8e40_type zeroinitializer
@G__0x6d2ec0 = global %G__0x6d2ec0_type zeroinitializer
@G__0x6d40f0 = global %G__0x6d40f0_type zeroinitializer
@G__0x6f6fa0 = global %G__0x6f6fa0_type zeroinitializer
@G__0x6f8f20 = global %G__0x6f8f20_type zeroinitializer
@G__0x722ff0 = global %G__0x722ff0_type zeroinitializer
@G__0x725610 = global %G__0x725610_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_440c40.SetModesAndRefframe(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_43fcc0.ChromaPrediction4x4(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_40d2b0.dct_chroma_sp(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4074c0.dct_chroma(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @ChromaResidualCoding(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_441540 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_441540, %struct.Memory** %MEMORY
  %loadMem_441541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1702 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1703 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1704 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1703
  %27 = load i64, i64* %PC.i1702
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1702
  store i64 %26, i64* %RBP.i1704, align 8
  store %struct.Memory* %loadMem_441541, %struct.Memory** %MEMORY
  %loadMem_441544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1790 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1791 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1791
  %36 = load i64, i64* %PC.i1790
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1790
  %38 = sub i64 %35, 352
  store i64 %38, i64* %RSP.i1791, align 8
  %39 = icmp ult i64 %35, 352
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 352, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_441544, %struct.Memory** %MEMORY
  %loadMem_44154b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1787 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %EAX.i1788 = bitcast %union.anon* %72 to i32*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 1
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RAX.i1789 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RAX.i1789
  %77 = load i32, i32* %EAX.i1788
  %78 = zext i32 %77 to i64
  %79 = load i64, i64* %PC.i1787
  %80 = add i64 %79, 2
  store i64 %80, i64* %PC.i1787
  %81 = xor i64 %78, %76
  %82 = trunc i64 %81 to i32
  %83 = and i64 %81, 4294967295
  store i64 %83, i64* %RAX.i1789, align 8
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %84, align 1
  %85 = and i32 %82, 255
  %86 = call i32 @llvm.ctpop.i32(i32 %85)
  %87 = trunc i32 %86 to i8
  %88 = and i8 %87, 1
  %89 = xor i8 %88, 1
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %89, i8* %90, align 1
  %91 = icmp eq i32 %82, 0
  %92 = zext i1 %91 to i8
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %92, i8* %93, align 1
  %94 = lshr i32 %82, 31
  %95 = trunc i32 %94 to i8
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %95, i8* %96, align 1
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %97, align 1
  %98 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %98, align 1
  store %struct.Memory* %loadMem_44154b, %struct.Memory** %MEMORY
  %loadMem_44154d = load %struct.Memory*, %struct.Memory** %MEMORY
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 33
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %PC.i1784 = bitcast %union.anon* %101 to i64*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 1
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %105 = bitcast %union.anon* %104 to %struct.anon.2*
  %AL.i1785 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %105, i32 0, i32 0
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %107 = getelementptr inbounds %struct.GPR, %struct.GPR* %106, i32 0, i32 5
  %108 = getelementptr inbounds %struct.Reg, %struct.Reg* %107, i32 0, i32 0
  %109 = bitcast %union.anon* %108 to %struct.anon.2*
  %CL.i1786 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %109, i32 0, i32 0
  %110 = load i8, i8* %AL.i1785
  %111 = zext i8 %110 to i64
  %112 = load i64, i64* %PC.i1784
  %113 = add i64 %112, 2
  store i64 %113, i64* %PC.i1784
  store i8 %110, i8* %CL.i1786, align 1
  store %struct.Memory* %loadMem_44154d, %struct.Memory** %MEMORY
  %loadMem_44154f = load %struct.Memory*, %struct.Memory** %MEMORY
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 33
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %PC.i1781 = bitcast %union.anon* %116 to i64*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 11
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %RDI.i1782 = bitcast %union.anon* %119 to i64*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 15
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %RBP.i1783 = bitcast %union.anon* %122 to i64*
  %123 = load i64, i64* %RBP.i1783
  %124 = sub i64 %123, 8
  %125 = load i64, i64* %RDI.i1782
  %126 = load i64, i64* %PC.i1781
  %127 = add i64 %126, 4
  store i64 %127, i64* %PC.i1781
  %128 = inttoptr i64 %124 to i64*
  store i64 %125, i64* %128
  store %struct.Memory* %loadMem_44154f, %struct.Memory** %MEMORY
  %loadMem_441553 = load %struct.Memory*, %struct.Memory** %MEMORY
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 33
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %PC.i1779 = bitcast %union.anon* %131 to i64*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 11
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %RDI.i1780 = bitcast %union.anon* %134 to i64*
  %135 = load i64, i64* %PC.i1779
  %136 = add i64 %135, 8
  store i64 %136, i64* %PC.i1779
  %137 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %137, i64* %RDI.i1780, align 8
  store %struct.Memory* %loadMem_441553, %struct.Memory** %MEMORY
  %loadMem_44155b = load %struct.Memory*, %struct.Memory** %MEMORY
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 33
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %PC.i1777 = bitcast %union.anon* %140 to i64*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 11
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %RDI.i1778 = bitcast %union.anon* %143 to i64*
  %144 = load i64, i64* %RDI.i1778
  %145 = add i64 %144, 14168
  %146 = load i64, i64* %PC.i1777
  %147 = add i64 %146, 7
  store i64 %147, i64* %PC.i1777
  %148 = inttoptr i64 %145 to i64*
  %149 = load i64, i64* %148
  store i64 %149, i64* %RDI.i1778, align 8
  store %struct.Memory* %loadMem_44155b, %struct.Memory** %MEMORY
  %loadMem_441562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 33
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %PC.i1775 = bitcast %union.anon* %152 to i64*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 7
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %RDX.i1776 = bitcast %union.anon* %155 to i64*
  %156 = load i64, i64* %PC.i1775
  %157 = add i64 %156, 8
  store i64 %157, i64* %PC.i1775
  %158 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %158, i64* %RDX.i1776, align 8
  store %struct.Memory* %loadMem_441562, %struct.Memory** %MEMORY
  %loadMem_44156a = load %struct.Memory*, %struct.Memory** %MEMORY
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 33
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %PC.i1773 = bitcast %union.anon* %161 to i64*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 7
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %RDX.i1774 = bitcast %union.anon* %164 to i64*
  %165 = load i64, i64* %RDX.i1774
  %166 = add i64 %165, 12
  %167 = load i64, i64* %PC.i1773
  %168 = add i64 %167, 4
  store i64 %168, i64* %PC.i1773
  %169 = inttoptr i64 %166 to i32*
  %170 = load i32, i32* %169
  %171 = sext i32 %170 to i64
  store i64 %171, i64* %RDX.i1774, align 8
  store %struct.Memory* %loadMem_44156a, %struct.Memory** %MEMORY
  %loadMem_44156e = load %struct.Memory*, %struct.Memory** %MEMORY
  %172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %173 = getelementptr inbounds %struct.GPR, %struct.GPR* %172, i32 0, i32 33
  %174 = getelementptr inbounds %struct.Reg, %struct.Reg* %173, i32 0, i32 0
  %PC.i1771 = bitcast %union.anon* %174 to i64*
  %175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %176 = getelementptr inbounds %struct.GPR, %struct.GPR* %175, i32 0, i32 7
  %177 = getelementptr inbounds %struct.Reg, %struct.Reg* %176, i32 0, i32 0
  %RDX.i1772 = bitcast %union.anon* %177 to i64*
  %178 = load i64, i64* %RDX.i1772
  %179 = load i64, i64* %PC.i1771
  %180 = add i64 %179, 7
  store i64 %180, i64* %PC.i1771
  %181 = sext i64 %178 to i128
  %182 = and i128 %181, -18446744073709551616
  %183 = zext i64 %178 to i128
  %184 = or i128 %182, %183
  %185 = mul i128 632, %184
  %186 = trunc i128 %185 to i64
  store i64 %186, i64* %RDX.i1772, align 8
  %187 = sext i64 %186 to i128
  %188 = icmp ne i128 %187, %185
  %189 = zext i1 %188 to i8
  %190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %189, i8* %190, align 1
  %191 = trunc i128 %185 to i32
  %192 = and i32 %191, 255
  %193 = call i32 @llvm.ctpop.i32(i32 %192)
  %194 = trunc i32 %193 to i8
  %195 = and i8 %194, 1
  %196 = xor i8 %195, 1
  %197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %196, i8* %197, align 1
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %198, align 1
  %199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %199, align 1
  %200 = lshr i64 %186, 63
  %201 = trunc i64 %200 to i8
  %202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %201, i8* %202, align 1
  %203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %189, i8* %203, align 1
  store %struct.Memory* %loadMem_44156e, %struct.Memory** %MEMORY
  %loadMem_441575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 33
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %PC.i1768 = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 7
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RDX.i1769 = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 11
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RDI.i1770 = bitcast %union.anon* %212 to i64*
  %213 = load i64, i64* %RDI.i1770
  %214 = load i64, i64* %RDX.i1769
  %215 = load i64, i64* %PC.i1768
  %216 = add i64 %215, 3
  store i64 %216, i64* %PC.i1768
  %217 = add i64 %214, %213
  store i64 %217, i64* %RDI.i1770, align 8
  %218 = icmp ult i64 %217, %213
  %219 = icmp ult i64 %217, %214
  %220 = or i1 %218, %219
  %221 = zext i1 %220 to i8
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %221, i8* %222, align 1
  %223 = trunc i64 %217 to i32
  %224 = and i32 %223, 255
  %225 = call i32 @llvm.ctpop.i32(i32 %224)
  %226 = trunc i32 %225 to i8
  %227 = and i8 %226, 1
  %228 = xor i8 %227, 1
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %228, i8* %229, align 1
  %230 = xor i64 %214, %213
  %231 = xor i64 %230, %217
  %232 = lshr i64 %231, 4
  %233 = trunc i64 %232 to i8
  %234 = and i8 %233, 1
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %234, i8* %235, align 1
  %236 = icmp eq i64 %217, 0
  %237 = zext i1 %236 to i8
  %238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %237, i8* %238, align 1
  %239 = lshr i64 %217, 63
  %240 = trunc i64 %239 to i8
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %240, i8* %241, align 1
  %242 = lshr i64 %213, 63
  %243 = lshr i64 %214, 63
  %244 = xor i64 %239, %242
  %245 = xor i64 %239, %243
  %246 = add i64 %244, %245
  %247 = icmp eq i64 %246, 2
  %248 = zext i1 %247 to i8
  %249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %248, i8* %249, align 1
  store %struct.Memory* %loadMem_441575, %struct.Memory** %MEMORY
  %loadMem_441578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %251 = getelementptr inbounds %struct.GPR, %struct.GPR* %250, i32 0, i32 33
  %252 = getelementptr inbounds %struct.Reg, %struct.Reg* %251, i32 0, i32 0
  %PC.i1766 = bitcast %union.anon* %252 to i64*
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %254 = getelementptr inbounds %struct.GPR, %struct.GPR* %253, i32 0, i32 11
  %255 = getelementptr inbounds %struct.Reg, %struct.Reg* %254, i32 0, i32 0
  %RDI.i1767 = bitcast %union.anon* %255 to i64*
  %256 = load i64, i64* %RDI.i1767
  %257 = add i64 %256, 72
  %258 = load i64, i64* %PC.i1766
  %259 = add i64 %258, 4
  store i64 %259, i64* %PC.i1766
  %260 = inttoptr i64 %257 to i32*
  %261 = load i32, i32* %260
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %262, align 1
  %263 = and i32 %261, 255
  %264 = call i32 @llvm.ctpop.i32(i32 %263)
  %265 = trunc i32 %264 to i8
  %266 = and i8 %265, 1
  %267 = xor i8 %266, 1
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %267, i8* %268, align 1
  %269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %269, align 1
  %270 = icmp eq i32 %261, 0
  %271 = zext i1 %270 to i8
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %271, i8* %272, align 1
  %273 = lshr i32 %261, 31
  %274 = trunc i32 %273 to i8
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %274, i8* %275, align 1
  %276 = lshr i32 %261, 31
  %277 = xor i32 %273, %276
  %278 = add i32 %277, %276
  %279 = icmp eq i32 %278, 2
  %280 = zext i1 %279 to i8
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %280, i8* %281, align 1
  store %struct.Memory* %loadMem_441578, %struct.Memory** %MEMORY
  %loadMem_44157c = load %struct.Memory*, %struct.Memory** %MEMORY
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %283 = getelementptr inbounds %struct.GPR, %struct.GPR* %282, i32 0, i32 33
  %284 = getelementptr inbounds %struct.Reg, %struct.Reg* %283, i32 0, i32 0
  %PC.i1763 = bitcast %union.anon* %284 to i64*
  %285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %286 = getelementptr inbounds %struct.GPR, %struct.GPR* %285, i32 0, i32 5
  %287 = getelementptr inbounds %struct.Reg, %struct.Reg* %286, i32 0, i32 0
  %288 = bitcast %union.anon* %287 to %struct.anon.2*
  %CL.i1764 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %288, i32 0, i32 0
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %290 = getelementptr inbounds %struct.GPR, %struct.GPR* %289, i32 0, i32 15
  %291 = getelementptr inbounds %struct.Reg, %struct.Reg* %290, i32 0, i32 0
  %RBP.i1765 = bitcast %union.anon* %291 to i64*
  %292 = load i64, i64* %RBP.i1765
  %293 = sub i64 %292, 273
  %294 = load i8, i8* %CL.i1764
  %295 = zext i8 %294 to i64
  %296 = load i64, i64* %PC.i1763
  %297 = add i64 %296, 6
  store i64 %297, i64* %PC.i1763
  %298 = inttoptr i64 %293 to i8*
  store i8 %294, i8* %298
  store %struct.Memory* %loadMem_44157c, %struct.Memory** %MEMORY
  %loadMem_441582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %300 = getelementptr inbounds %struct.GPR, %struct.GPR* %299, i32 0, i32 33
  %301 = getelementptr inbounds %struct.Reg, %struct.Reg* %300, i32 0, i32 0
  %PC.i1762 = bitcast %union.anon* %301 to i64*
  %302 = load i64, i64* %PC.i1762
  %303 = add i64 %302, 65
  %304 = load i64, i64* %PC.i1762
  %305 = add i64 %304, 6
  %306 = load i64, i64* %PC.i1762
  %307 = add i64 %306, 6
  store i64 %307, i64* %PC.i1762
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %309 = load i8, i8* %308, align 1
  %310 = icmp eq i8 %309, 0
  %311 = zext i1 %310 to i8
  store i8 %311, i8* %BRANCH_TAKEN, align 1
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %313 = select i1 %310, i64 %303, i64 %305
  store i64 %313, i64* %312, align 8
  store %struct.Memory* %loadMem_441582, %struct.Memory** %MEMORY
  %loadBr_441582 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441582 = icmp eq i8 %loadBr_441582, 1
  br i1 %cmpBr_441582, label %block_.L_4415c3, label %block_441588

block_441588:                                     ; preds = %entry
  %loadMem_441588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %315 = getelementptr inbounds %struct.GPR, %struct.GPR* %314, i32 0, i32 33
  %316 = getelementptr inbounds %struct.Reg, %struct.Reg* %315, i32 0, i32 0
  %PC.i1760 = bitcast %union.anon* %316 to i64*
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %318 = getelementptr inbounds %struct.GPR, %struct.GPR* %317, i32 0, i32 1
  %319 = getelementptr inbounds %struct.Reg, %struct.Reg* %318, i32 0, i32 0
  %320 = bitcast %union.anon* %319 to %struct.anon.2*
  %AL.i1761 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %320, i32 0, i32 0
  %321 = load i64, i64* %PC.i1760
  %322 = add i64 %321, 2
  store i64 %322, i64* %PC.i1760
  store i8 1, i8* %AL.i1761, align 1
  store %struct.Memory* %loadMem_441588, %struct.Memory** %MEMORY
  %loadMem_44158a = load %struct.Memory*, %struct.Memory** %MEMORY
  %323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %324 = getelementptr inbounds %struct.GPR, %struct.GPR* %323, i32 0, i32 33
  %325 = getelementptr inbounds %struct.Reg, %struct.Reg* %324, i32 0, i32 0
  %PC.i1758 = bitcast %union.anon* %325 to i64*
  %326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %327 = getelementptr inbounds %struct.GPR, %struct.GPR* %326, i32 0, i32 5
  %328 = getelementptr inbounds %struct.Reg, %struct.Reg* %327, i32 0, i32 0
  %RCX.i1759 = bitcast %union.anon* %328 to i64*
  %329 = load i64, i64* %PC.i1758
  %330 = add i64 %329, 8
  store i64 %330, i64* %PC.i1758
  %331 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %331, i64* %RCX.i1759, align 8
  store %struct.Memory* %loadMem_44158a, %struct.Memory** %MEMORY
  %loadMem_441592 = load %struct.Memory*, %struct.Memory** %MEMORY
  %332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %333 = getelementptr inbounds %struct.GPR, %struct.GPR* %332, i32 0, i32 33
  %334 = getelementptr inbounds %struct.Reg, %struct.Reg* %333, i32 0, i32 0
  %PC.i1756 = bitcast %union.anon* %334 to i64*
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %336 = getelementptr inbounds %struct.GPR, %struct.GPR* %335, i32 0, i32 5
  %337 = getelementptr inbounds %struct.Reg, %struct.Reg* %336, i32 0, i32 0
  %RCX.i1757 = bitcast %union.anon* %337 to i64*
  %338 = load i64, i64* %RCX.i1757
  %339 = add i64 %338, 24
  %340 = load i64, i64* %PC.i1756
  %341 = add i64 %340, 4
  store i64 %341, i64* %PC.i1756
  %342 = inttoptr i64 %339 to i32*
  %343 = load i32, i32* %342
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %344, align 1
  %345 = and i32 %343, 255
  %346 = call i32 @llvm.ctpop.i32(i32 %345)
  %347 = trunc i32 %346 to i8
  %348 = and i8 %347, 1
  %349 = xor i8 %348, 1
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %349, i8* %350, align 1
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %351, align 1
  %352 = icmp eq i32 %343, 0
  %353 = zext i1 %352 to i8
  %354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %353, i8* %354, align 1
  %355 = lshr i32 %343, 31
  %356 = trunc i32 %355 to i8
  %357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %356, i8* %357, align 1
  %358 = lshr i32 %343, 31
  %359 = xor i32 %355, %358
  %360 = add i32 %359, %358
  %361 = icmp eq i32 %360, 2
  %362 = zext i1 %361 to i8
  %363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %362, i8* %363, align 1
  store %struct.Memory* %loadMem_441592, %struct.Memory** %MEMORY
  %loadMem_441596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %365 = getelementptr inbounds %struct.GPR, %struct.GPR* %364, i32 0, i32 33
  %366 = getelementptr inbounds %struct.Reg, %struct.Reg* %365, i32 0, i32 0
  %PC.i1753 = bitcast %union.anon* %366 to i64*
  %367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %368 = getelementptr inbounds %struct.GPR, %struct.GPR* %367, i32 0, i32 1
  %369 = getelementptr inbounds %struct.Reg, %struct.Reg* %368, i32 0, i32 0
  %370 = bitcast %union.anon* %369 to %struct.anon.2*
  %AL.i1754 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %370, i32 0, i32 0
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %372 = getelementptr inbounds %struct.GPR, %struct.GPR* %371, i32 0, i32 15
  %373 = getelementptr inbounds %struct.Reg, %struct.Reg* %372, i32 0, i32 0
  %RBP.i1755 = bitcast %union.anon* %373 to i64*
  %374 = load i64, i64* %RBP.i1755
  %375 = sub i64 %374, 274
  %376 = load i8, i8* %AL.i1754
  %377 = zext i8 %376 to i64
  %378 = load i64, i64* %PC.i1753
  %379 = add i64 %378, 6
  store i64 %379, i64* %PC.i1753
  %380 = inttoptr i64 %375 to i8*
  store i8 %376, i8* %380
  store %struct.Memory* %loadMem_441596, %struct.Memory** %MEMORY
  %loadMem_44159c = load %struct.Memory*, %struct.Memory** %MEMORY
  %381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %382 = getelementptr inbounds %struct.GPR, %struct.GPR* %381, i32 0, i32 33
  %383 = getelementptr inbounds %struct.Reg, %struct.Reg* %382, i32 0, i32 0
  %PC.i1752 = bitcast %union.anon* %383 to i64*
  %384 = load i64, i64* %PC.i1752
  %385 = add i64 %384, 27
  %386 = load i64, i64* %PC.i1752
  %387 = add i64 %386, 6
  %388 = load i64, i64* %PC.i1752
  %389 = add i64 %388, 6
  store i64 %389, i64* %PC.i1752
  %390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %391 = load i8, i8* %390, align 1
  store i8 %391, i8* %BRANCH_TAKEN, align 1
  %392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %393 = icmp ne i8 %391, 0
  %394 = select i1 %393, i64 %385, i64 %387
  store i64 %394, i64* %392, align 8
  store %struct.Memory* %loadMem_44159c, %struct.Memory** %MEMORY
  %loadBr_44159c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44159c = icmp eq i8 %loadBr_44159c, 1
  br i1 %cmpBr_44159c, label %block_.L_4415b7, label %block_4415a2

block_4415a2:                                     ; preds = %block_441588
  %loadMem_4415a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %396 = getelementptr inbounds %struct.GPR, %struct.GPR* %395, i32 0, i32 33
  %397 = getelementptr inbounds %struct.Reg, %struct.Reg* %396, i32 0, i32 0
  %PC.i1750 = bitcast %union.anon* %397 to i64*
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %399 = getelementptr inbounds %struct.GPR, %struct.GPR* %398, i32 0, i32 1
  %400 = getelementptr inbounds %struct.Reg, %struct.Reg* %399, i32 0, i32 0
  %RAX.i1751 = bitcast %union.anon* %400 to i64*
  %401 = load i64, i64* %PC.i1750
  %402 = add i64 %401, 8
  store i64 %402, i64* %PC.i1750
  %403 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %403, i64* %RAX.i1751, align 8
  store %struct.Memory* %loadMem_4415a2, %struct.Memory** %MEMORY
  %loadMem_4415aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %405 = getelementptr inbounds %struct.GPR, %struct.GPR* %404, i32 0, i32 33
  %406 = getelementptr inbounds %struct.Reg, %struct.Reg* %405, i32 0, i32 0
  %PC.i1748 = bitcast %union.anon* %406 to i64*
  %407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %408 = getelementptr inbounds %struct.GPR, %struct.GPR* %407, i32 0, i32 1
  %409 = getelementptr inbounds %struct.Reg, %struct.Reg* %408, i32 0, i32 0
  %RAX.i1749 = bitcast %union.anon* %409 to i64*
  %410 = load i64, i64* %RAX.i1749
  %411 = add i64 %410, 24
  %412 = load i64, i64* %PC.i1748
  %413 = add i64 %412, 4
  store i64 %413, i64* %PC.i1748
  %414 = inttoptr i64 %411 to i32*
  %415 = load i32, i32* %414
  %416 = sub i32 %415, 3
  %417 = icmp ult i32 %415, 3
  %418 = zext i1 %417 to i8
  %419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %418, i8* %419, align 1
  %420 = and i32 %416, 255
  %421 = call i32 @llvm.ctpop.i32(i32 %420)
  %422 = trunc i32 %421 to i8
  %423 = and i8 %422, 1
  %424 = xor i8 %423, 1
  %425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %424, i8* %425, align 1
  %426 = xor i32 %415, 3
  %427 = xor i32 %426, %416
  %428 = lshr i32 %427, 4
  %429 = trunc i32 %428 to i8
  %430 = and i8 %429, 1
  %431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %430, i8* %431, align 1
  %432 = icmp eq i32 %416, 0
  %433 = zext i1 %432 to i8
  %434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %433, i8* %434, align 1
  %435 = lshr i32 %416, 31
  %436 = trunc i32 %435 to i8
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %436, i8* %437, align 1
  %438 = lshr i32 %415, 31
  %439 = xor i32 %435, %438
  %440 = add i32 %439, %438
  %441 = icmp eq i32 %440, 2
  %442 = zext i1 %441 to i8
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %442, i8* %443, align 1
  store %struct.Memory* %loadMem_4415aa, %struct.Memory** %MEMORY
  %loadMem_4415ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %445 = getelementptr inbounds %struct.GPR, %struct.GPR* %444, i32 0, i32 33
  %446 = getelementptr inbounds %struct.Reg, %struct.Reg* %445, i32 0, i32 0
  %PC.i1746 = bitcast %union.anon* %446 to i64*
  %447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %448 = getelementptr inbounds %struct.GPR, %struct.GPR* %447, i32 0, i32 5
  %449 = getelementptr inbounds %struct.Reg, %struct.Reg* %448, i32 0, i32 0
  %450 = bitcast %union.anon* %449 to %struct.anon.2*
  %CL.i1747 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %450, i32 0, i32 0
  %451 = load i64, i64* %PC.i1746
  %452 = add i64 %451, 3
  store i64 %452, i64* %PC.i1746
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %454 = load i8, i8* %453, align 1
  store i8 %454, i8* %CL.i1747, align 1
  store %struct.Memory* %loadMem_4415ae, %struct.Memory** %MEMORY
  %loadMem_4415b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %456 = getelementptr inbounds %struct.GPR, %struct.GPR* %455, i32 0, i32 33
  %457 = getelementptr inbounds %struct.Reg, %struct.Reg* %456, i32 0, i32 0
  %PC.i1744 = bitcast %union.anon* %457 to i64*
  %458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %459 = getelementptr inbounds %struct.GPR, %struct.GPR* %458, i32 0, i32 5
  %460 = getelementptr inbounds %struct.Reg, %struct.Reg* %459, i32 0, i32 0
  %461 = bitcast %union.anon* %460 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %461, i32 0, i32 0
  %462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %463 = getelementptr inbounds %struct.GPR, %struct.GPR* %462, i32 0, i32 15
  %464 = getelementptr inbounds %struct.Reg, %struct.Reg* %463, i32 0, i32 0
  %RBP.i1745 = bitcast %union.anon* %464 to i64*
  %465 = load i64, i64* %RBP.i1745
  %466 = sub i64 %465, 274
  %467 = load i8, i8* %CL.i
  %468 = zext i8 %467 to i64
  %469 = load i64, i64* %PC.i1744
  %470 = add i64 %469, 6
  store i64 %470, i64* %PC.i1744
  %471 = inttoptr i64 %466 to i8*
  store i8 %467, i8* %471
  store %struct.Memory* %loadMem_4415b1, %struct.Memory** %MEMORY
  br label %block_.L_4415b7

block_.L_4415b7:                                  ; preds = %block_4415a2, %block_441588
  %loadMem_4415b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %473 = getelementptr inbounds %struct.GPR, %struct.GPR* %472, i32 0, i32 33
  %474 = getelementptr inbounds %struct.Reg, %struct.Reg* %473, i32 0, i32 0
  %PC.i1741 = bitcast %union.anon* %474 to i64*
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %476 = getelementptr inbounds %struct.GPR, %struct.GPR* %475, i32 0, i32 1
  %477 = getelementptr inbounds %struct.Reg, %struct.Reg* %476, i32 0, i32 0
  %478 = bitcast %union.anon* %477 to %struct.anon.2*
  %AL.i1742 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %478, i32 0, i32 0
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %480 = getelementptr inbounds %struct.GPR, %struct.GPR* %479, i32 0, i32 15
  %481 = getelementptr inbounds %struct.Reg, %struct.Reg* %480, i32 0, i32 0
  %RBP.i1743 = bitcast %union.anon* %481 to i64*
  %482 = load i64, i64* %RBP.i1743
  %483 = sub i64 %482, 274
  %484 = load i64, i64* %PC.i1741
  %485 = add i64 %484, 6
  store i64 %485, i64* %PC.i1741
  %486 = inttoptr i64 %483 to i8*
  %487 = load i8, i8* %486
  store i8 %487, i8* %AL.i1742, align 1
  store %struct.Memory* %loadMem_4415b7, %struct.Memory** %MEMORY
  %loadMem_4415bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %489 = getelementptr inbounds %struct.GPR, %struct.GPR* %488, i32 0, i32 33
  %490 = getelementptr inbounds %struct.Reg, %struct.Reg* %489, i32 0, i32 0
  %PC.i1738 = bitcast %union.anon* %490 to i64*
  %491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %492 = getelementptr inbounds %struct.GPR, %struct.GPR* %491, i32 0, i32 1
  %493 = getelementptr inbounds %struct.Reg, %struct.Reg* %492, i32 0, i32 0
  %494 = bitcast %union.anon* %493 to %struct.anon.2*
  %AL.i1739 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %494, i32 0, i32 0
  %495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %496 = getelementptr inbounds %struct.GPR, %struct.GPR* %495, i32 0, i32 15
  %497 = getelementptr inbounds %struct.Reg, %struct.Reg* %496, i32 0, i32 0
  %RBP.i1740 = bitcast %union.anon* %497 to i64*
  %498 = load i64, i64* %RBP.i1740
  %499 = sub i64 %498, 273
  %500 = load i8, i8* %AL.i1739
  %501 = zext i8 %500 to i64
  %502 = load i64, i64* %PC.i1738
  %503 = add i64 %502, 6
  store i64 %503, i64* %PC.i1738
  %504 = inttoptr i64 %499 to i8*
  store i8 %500, i8* %504
  store %struct.Memory* %loadMem_4415bd, %struct.Memory** %MEMORY
  br label %block_.L_4415c3

block_.L_4415c3:                                  ; preds = %block_.L_4415b7, %entry
  %loadMem_4415c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %506 = getelementptr inbounds %struct.GPR, %struct.GPR* %505, i32 0, i32 33
  %507 = getelementptr inbounds %struct.Reg, %struct.Reg* %506, i32 0, i32 0
  %PC.i1735 = bitcast %union.anon* %507 to i64*
  %508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %509 = getelementptr inbounds %struct.GPR, %struct.GPR* %508, i32 0, i32 1
  %510 = getelementptr inbounds %struct.Reg, %struct.Reg* %509, i32 0, i32 0
  %511 = bitcast %union.anon* %510 to %struct.anon.2*
  %AL.i1736 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %511, i32 0, i32 0
  %512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %513 = getelementptr inbounds %struct.GPR, %struct.GPR* %512, i32 0, i32 15
  %514 = getelementptr inbounds %struct.Reg, %struct.Reg* %513, i32 0, i32 0
  %RBP.i1737 = bitcast %union.anon* %514 to i64*
  %515 = load i64, i64* %RBP.i1737
  %516 = sub i64 %515, 273
  %517 = load i64, i64* %PC.i1735
  %518 = add i64 %517, 6
  store i64 %518, i64* %PC.i1735
  %519 = inttoptr i64 %516 to i8*
  %520 = load i8, i8* %519
  store i8 %520, i8* %AL.i1736, align 1
  store %struct.Memory* %loadMem_4415c3, %struct.Memory** %MEMORY
  %loadMem_4415c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %522 = getelementptr inbounds %struct.GPR, %struct.GPR* %521, i32 0, i32 33
  %523 = getelementptr inbounds %struct.Reg, %struct.Reg* %522, i32 0, i32 0
  %PC.i1733 = bitcast %union.anon* %523 to i64*
  %524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %525 = getelementptr inbounds %struct.GPR, %struct.GPR* %524, i32 0, i32 5
  %526 = getelementptr inbounds %struct.Reg, %struct.Reg* %525, i32 0, i32 0
  %RCX.i1734 = bitcast %union.anon* %526 to i64*
  %527 = load i64, i64* %PC.i1733
  %528 = add i64 %527, 10
  store i64 %528, i64* %PC.i1733
  store i64 ptrtoint (%G__0x4b8e40_type* @G__0x4b8e40 to i64), i64* %RCX.i1734, align 8
  store %struct.Memory* %loadMem_4415c9, %struct.Memory** %MEMORY
  %loadMem_4415d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %530 = getelementptr inbounds %struct.GPR, %struct.GPR* %529, i32 0, i32 33
  %531 = getelementptr inbounds %struct.Reg, %struct.Reg* %530, i32 0, i32 0
  %PC.i1731 = bitcast %union.anon* %531 to i64*
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %533 = getelementptr inbounds %struct.GPR, %struct.GPR* %532, i32 0, i32 7
  %534 = getelementptr inbounds %struct.Reg, %struct.Reg* %533, i32 0, i32 0
  %RDX.i1732 = bitcast %union.anon* %534 to i64*
  %535 = load i64, i64* %PC.i1731
  %536 = add i64 %535, 5
  store i64 %536, i64* %PC.i1731
  store i64 192, i64* %RDX.i1732, align 8
  store %struct.Memory* %loadMem_4415d3, %struct.Memory** %MEMORY
  %loadMem_4415d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %538 = getelementptr inbounds %struct.GPR, %struct.GPR* %537, i32 0, i32 33
  %539 = getelementptr inbounds %struct.Reg, %struct.Reg* %538, i32 0, i32 0
  %PC.i1728 = bitcast %union.anon* %539 to i64*
  %540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %541 = getelementptr inbounds %struct.GPR, %struct.GPR* %540, i32 0, i32 9
  %542 = getelementptr inbounds %struct.Reg, %struct.Reg* %541, i32 0, i32 0
  %RSI.i1729 = bitcast %union.anon* %542 to i64*
  %543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %544 = getelementptr inbounds %struct.GPR, %struct.GPR* %543, i32 0, i32 15
  %545 = getelementptr inbounds %struct.Reg, %struct.Reg* %544, i32 0, i32 0
  %RBP.i1730 = bitcast %union.anon* %545 to i64*
  %546 = load i64, i64* %RBP.i1730
  %547 = sub i64 %546, 256
  %548 = load i64, i64* %PC.i1728
  %549 = add i64 %548, 7
  store i64 %549, i64* %PC.i1728
  store i64 %547, i64* %RSI.i1729, align 8
  store %struct.Memory* %loadMem_4415d8, %struct.Memory** %MEMORY
  %loadMem_4415df = load %struct.Memory*, %struct.Memory** %MEMORY
  %550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %551 = getelementptr inbounds %struct.GPR, %struct.GPR* %550, i32 0, i32 33
  %552 = getelementptr inbounds %struct.Reg, %struct.Reg* %551, i32 0, i32 0
  %PC.i1726 = bitcast %union.anon* %552 to i64*
  %553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %554 = getelementptr inbounds %struct.GPR, %struct.GPR* %553, i32 0, i32 1
  %555 = getelementptr inbounds %struct.Reg, %struct.Reg* %554, i32 0, i32 0
  %556 = bitcast %union.anon* %555 to %struct.anon.2*
  %AL.i1727 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %556, i32 0, i32 0
  %557 = load i8, i8* %AL.i1727
  %558 = zext i8 %557 to i64
  %559 = load i64, i64* %PC.i1726
  %560 = add i64 %559, 2
  store i64 %560, i64* %PC.i1726
  %561 = and i64 1, %558
  %562 = trunc i64 %561 to i8
  store i8 %562, i8* %AL.i1727, align 1
  %563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %563, align 1
  %564 = trunc i64 %561 to i32
  %565 = and i32 %564, 255
  %566 = call i32 @llvm.ctpop.i32(i32 %565)
  %567 = trunc i32 %566 to i8
  %568 = and i8 %567, 1
  %569 = xor i8 %568, 1
  %570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %569, i8* %570, align 1
  %571 = icmp eq i8 %562, 0
  %572 = zext i1 %571 to i8
  %573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %572, i8* %573, align 1
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %574, align 1
  %575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %575, align 1
  %576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %576, align 1
  store %struct.Memory* %loadMem_4415df, %struct.Memory** %MEMORY
  %loadMem_4415e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %578 = getelementptr inbounds %struct.GPR, %struct.GPR* %577, i32 0, i32 33
  %579 = getelementptr inbounds %struct.Reg, %struct.Reg* %578, i32 0, i32 0
  %PC.i1724 = bitcast %union.anon* %579 to i64*
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %581 = getelementptr inbounds %struct.GPR, %struct.GPR* %580, i32 0, i32 1
  %582 = getelementptr inbounds %struct.Reg, %struct.Reg* %581, i32 0, i32 0
  %583 = bitcast %union.anon* %582 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %583, i32 0, i32 0
  %584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %585 = getelementptr inbounds %struct.GPR, %struct.GPR* %584, i32 0, i32 11
  %586 = getelementptr inbounds %struct.Reg, %struct.Reg* %585, i32 0, i32 0
  %RDI.i1725 = bitcast %union.anon* %586 to i64*
  %587 = load i8, i8* %AL.i
  %588 = zext i8 %587 to i64
  %589 = load i64, i64* %PC.i1724
  %590 = add i64 %589, 3
  store i64 %590, i64* %PC.i1724
  %591 = and i64 %588, 255
  store i64 %591, i64* %RDI.i1725, align 8
  store %struct.Memory* %loadMem_4415e1, %struct.Memory** %MEMORY
  %loadMem_4415e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %593 = getelementptr inbounds %struct.GPR, %struct.GPR* %592, i32 0, i32 33
  %594 = getelementptr inbounds %struct.Reg, %struct.Reg* %593, i32 0, i32 0
  %PC.i1721 = bitcast %union.anon* %594 to i64*
  %595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %596 = getelementptr inbounds %struct.GPR, %struct.GPR* %595, i32 0, i32 11
  %597 = getelementptr inbounds %struct.Reg, %struct.Reg* %596, i32 0, i32 0
  %EDI.i1722 = bitcast %union.anon* %597 to i32*
  %598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %599 = getelementptr inbounds %struct.GPR, %struct.GPR* %598, i32 0, i32 15
  %600 = getelementptr inbounds %struct.Reg, %struct.Reg* %599, i32 0, i32 0
  %RBP.i1723 = bitcast %union.anon* %600 to i64*
  %601 = load i64, i64* %RBP.i1723
  %602 = sub i64 %601, 52
  %603 = load i32, i32* %EDI.i1722
  %604 = zext i32 %603 to i64
  %605 = load i64, i64* %PC.i1721
  %606 = add i64 %605, 3
  store i64 %606, i64* %PC.i1721
  %607 = inttoptr i64 %602 to i32*
  store i32 %603, i32* %607
  store %struct.Memory* %loadMem_4415e4, %struct.Memory** %MEMORY
  %loadMem_4415e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %609 = getelementptr inbounds %struct.GPR, %struct.GPR* %608, i32 0, i32 33
  %610 = getelementptr inbounds %struct.Reg, %struct.Reg* %609, i32 0, i32 0
  %PC.i1719 = bitcast %union.anon* %610 to i64*
  %611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %612 = getelementptr inbounds %struct.GPR, %struct.GPR* %611, i32 0, i32 17
  %613 = getelementptr inbounds %struct.Reg, %struct.Reg* %612, i32 0, i32 0
  %R8.i1720 = bitcast %union.anon* %613 to i64*
  %614 = load i64, i64* %PC.i1719
  %615 = add i64 %614, 8
  store i64 %615, i64* %PC.i1719
  %616 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %616, i64* %R8.i1720, align 8
  store %struct.Memory* %loadMem_4415e7, %struct.Memory** %MEMORY
  %loadMem_4415ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %618 = getelementptr inbounds %struct.GPR, %struct.GPR* %617, i32 0, i32 33
  %619 = getelementptr inbounds %struct.Reg, %struct.Reg* %618, i32 0, i32 0
  %PC.i1716 = bitcast %union.anon* %619 to i64*
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %621 = getelementptr inbounds %struct.GPR, %struct.GPR* %620, i32 0, i32 11
  %622 = getelementptr inbounds %struct.Reg, %struct.Reg* %621, i32 0, i32 0
  %RDI.i1717 = bitcast %union.anon* %622 to i64*
  %623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %624 = getelementptr inbounds %struct.GPR, %struct.GPR* %623, i32 0, i32 17
  %625 = getelementptr inbounds %struct.Reg, %struct.Reg* %624, i32 0, i32 0
  %R8.i1718 = bitcast %union.anon* %625 to i64*
  %626 = load i64, i64* %R8.i1718
  %627 = add i64 %626, 72700
  %628 = load i64, i64* %PC.i1716
  %629 = add i64 %628, 7
  store i64 %629, i64* %PC.i1716
  %630 = inttoptr i64 %627 to i32*
  %631 = load i32, i32* %630
  %632 = zext i32 %631 to i64
  store i64 %632, i64* %RDI.i1717, align 8
  store %struct.Memory* %loadMem_4415ef, %struct.Memory** %MEMORY
  %loadMem_4415f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %634 = getelementptr inbounds %struct.GPR, %struct.GPR* %633, i32 0, i32 33
  %635 = getelementptr inbounds %struct.Reg, %struct.Reg* %634, i32 0, i32 0
  %PC.i1714 = bitcast %union.anon* %635 to i64*
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %637 = getelementptr inbounds %struct.GPR, %struct.GPR* %636, i32 0, i32 11
  %638 = getelementptr inbounds %struct.Reg, %struct.Reg* %637, i32 0, i32 0
  %RDI.i1715 = bitcast %union.anon* %638 to i64*
  %639 = load i64, i64* %RDI.i1715
  %640 = load i64, i64* %PC.i1714
  %641 = add i64 %640, 3
  store i64 %641, i64* %PC.i1714
  %642 = trunc i64 %639 to i32
  %643 = sub i32 %642, 1
  %644 = zext i32 %643 to i64
  store i64 %644, i64* %RDI.i1715, align 8
  %645 = icmp ult i32 %642, 1
  %646 = zext i1 %645 to i8
  %647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %646, i8* %647, align 1
  %648 = and i32 %643, 255
  %649 = call i32 @llvm.ctpop.i32(i32 %648)
  %650 = trunc i32 %649 to i8
  %651 = and i8 %650, 1
  %652 = xor i8 %651, 1
  %653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %652, i8* %653, align 1
  %654 = xor i64 1, %639
  %655 = trunc i64 %654 to i32
  %656 = xor i32 %655, %643
  %657 = lshr i32 %656, 4
  %658 = trunc i32 %657 to i8
  %659 = and i8 %658, 1
  %660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %659, i8* %660, align 1
  %661 = icmp eq i32 %643, 0
  %662 = zext i1 %661 to i8
  %663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %662, i8* %663, align 1
  %664 = lshr i32 %643, 31
  %665 = trunc i32 %664 to i8
  %666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %665, i8* %666, align 1
  %667 = lshr i32 %642, 31
  %668 = xor i32 %664, %667
  %669 = add i32 %668, %667
  %670 = icmp eq i32 %669, 2
  %671 = zext i1 %670 to i8
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %671, i8* %672, align 1
  store %struct.Memory* %loadMem_4415f6, %struct.Memory** %MEMORY
  %loadMem_4415f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %674 = getelementptr inbounds %struct.GPR, %struct.GPR* %673, i32 0, i32 33
  %675 = getelementptr inbounds %struct.Reg, %struct.Reg* %674, i32 0, i32 0
  %PC.i1712 = bitcast %union.anon* %675 to i64*
  %676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %677 = getelementptr inbounds %struct.GPR, %struct.GPR* %676, i32 0, i32 11
  %678 = getelementptr inbounds %struct.Reg, %struct.Reg* %677, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %678 to i32*
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %680 = getelementptr inbounds %struct.GPR, %struct.GPR* %679, i32 0, i32 15
  %681 = getelementptr inbounds %struct.Reg, %struct.Reg* %680, i32 0, i32 0
  %RBP.i1713 = bitcast %union.anon* %681 to i64*
  %682 = load i64, i64* %RBP.i1713
  %683 = sub i64 %682, 56
  %684 = load i32, i32* %EDI.i
  %685 = zext i32 %684 to i64
  %686 = load i64, i64* %PC.i1712
  %687 = add i64 %686, 3
  store i64 %687, i64* %PC.i1712
  %688 = inttoptr i64 %683 to i32*
  store i32 %684, i32* %688
  store %struct.Memory* %loadMem_4415f9, %struct.Memory** %MEMORY
  %loadMem_4415fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %690 = getelementptr inbounds %struct.GPR, %struct.GPR* %689, i32 0, i32 33
  %691 = getelementptr inbounds %struct.Reg, %struct.Reg* %690, i32 0, i32 0
  %PC.i1709 = bitcast %union.anon* %691 to i64*
  %692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %693 = getelementptr inbounds %struct.GPR, %struct.GPR* %692, i32 0, i32 9
  %694 = getelementptr inbounds %struct.Reg, %struct.Reg* %693, i32 0, i32 0
  %RSI.i1710 = bitcast %union.anon* %694 to i64*
  %695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %696 = getelementptr inbounds %struct.GPR, %struct.GPR* %695, i32 0, i32 11
  %697 = getelementptr inbounds %struct.Reg, %struct.Reg* %696, i32 0, i32 0
  %RDI.i1711 = bitcast %union.anon* %697 to i64*
  %698 = load i64, i64* %RSI.i1710
  %699 = load i64, i64* %PC.i1709
  %700 = add i64 %699, 3
  store i64 %700, i64* %PC.i1709
  store i64 %698, i64* %RDI.i1711, align 8
  store %struct.Memory* %loadMem_4415fc, %struct.Memory** %MEMORY
  %loadMem_4415ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %702 = getelementptr inbounds %struct.GPR, %struct.GPR* %701, i32 0, i32 33
  %703 = getelementptr inbounds %struct.Reg, %struct.Reg* %702, i32 0, i32 0
  %PC.i1706 = bitcast %union.anon* %703 to i64*
  %704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %705 = getelementptr inbounds %struct.GPR, %struct.GPR* %704, i32 0, i32 5
  %706 = getelementptr inbounds %struct.Reg, %struct.Reg* %705, i32 0, i32 0
  %RCX.i1707 = bitcast %union.anon* %706 to i64*
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %708 = getelementptr inbounds %struct.GPR, %struct.GPR* %707, i32 0, i32 9
  %709 = getelementptr inbounds %struct.Reg, %struct.Reg* %708, i32 0, i32 0
  %RSI.i1708 = bitcast %union.anon* %709 to i64*
  %710 = load i64, i64* %RCX.i1707
  %711 = load i64, i64* %PC.i1706
  %712 = add i64 %711, 3
  store i64 %712, i64* %PC.i1706
  store i64 %710, i64* %RSI.i1708, align 8
  store %struct.Memory* %loadMem_4415ff, %struct.Memory** %MEMORY
  %loadMem1_441602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %714 = getelementptr inbounds %struct.GPR, %struct.GPR* %713, i32 0, i32 33
  %715 = getelementptr inbounds %struct.Reg, %struct.Reg* %714, i32 0, i32 0
  %PC.i1705 = bitcast %union.anon* %715 to i64*
  %716 = load i64, i64* %PC.i1705
  %717 = add i64 %716, -263378
  %718 = load i64, i64* %PC.i1705
  %719 = add i64 %718, 5
  %720 = load i64, i64* %PC.i1705
  %721 = add i64 %720, 5
  store i64 %721, i64* %PC.i1705
  %722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %723 = load i64, i64* %722, align 8
  %724 = add i64 %723, -8
  %725 = inttoptr i64 %724 to i64*
  store i64 %719, i64* %725
  store i64 %724, i64* %722, align 8
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %717, i64* %726, align 8
  store %struct.Memory* %loadMem1_441602, %struct.Memory** %MEMORY
  %loadMem2_441602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_441602 = load i64, i64* %3
  %727 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %loadMem2_441602)
  store %struct.Memory* %727, %struct.Memory** %MEMORY
  %loadMem_441607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %729 = getelementptr inbounds %struct.GPR, %struct.GPR* %728, i32 0, i32 33
  %730 = getelementptr inbounds %struct.Reg, %struct.Reg* %729, i32 0, i32 0
  %PC.i1699 = bitcast %union.anon* %730 to i64*
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %732 = getelementptr inbounds %struct.GPR, %struct.GPR* %731, i32 0, i32 5
  %733 = getelementptr inbounds %struct.Reg, %struct.Reg* %732, i32 0, i32 0
  %RCX.i1700 = bitcast %union.anon* %733 to i64*
  %734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %735 = getelementptr inbounds %struct.GPR, %struct.GPR* %734, i32 0, i32 15
  %736 = getelementptr inbounds %struct.Reg, %struct.Reg* %735, i32 0, i32 0
  %RBP.i1701 = bitcast %union.anon* %736 to i64*
  %737 = load i64, i64* %RBP.i1701
  %738 = sub i64 %737, 8
  %739 = load i64, i64* %PC.i1699
  %740 = add i64 %739, 4
  store i64 %740, i64* %PC.i1699
  %741 = inttoptr i64 %738 to i64*
  %742 = load i64, i64* %741
  store i64 %742, i64* %RCX.i1700, align 8
  store %struct.Memory* %loadMem_441607, %struct.Memory** %MEMORY
  %loadMem_44160b = load %struct.Memory*, %struct.Memory** %MEMORY
  %743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %744 = getelementptr inbounds %struct.GPR, %struct.GPR* %743, i32 0, i32 33
  %745 = getelementptr inbounds %struct.Reg, %struct.Reg* %744, i32 0, i32 0
  %PC.i1697 = bitcast %union.anon* %745 to i64*
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %747 = getelementptr inbounds %struct.GPR, %struct.GPR* %746, i32 0, i32 5
  %748 = getelementptr inbounds %struct.Reg, %struct.Reg* %747, i32 0, i32 0
  %RCX.i1698 = bitcast %union.anon* %748 to i64*
  %749 = load i64, i64* %RCX.i1698
  %750 = load i64, i64* %PC.i1697
  %751 = add i64 %750, 6
  store i64 %751, i64* %PC.i1697
  %752 = inttoptr i64 %749 to i32*
  store i32 0, i32* %752
  store %struct.Memory* %loadMem_44160b, %struct.Memory** %MEMORY
  %loadMem_441611 = load %struct.Memory*, %struct.Memory** %MEMORY
  %753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %754 = getelementptr inbounds %struct.GPR, %struct.GPR* %753, i32 0, i32 33
  %755 = getelementptr inbounds %struct.Reg, %struct.Reg* %754, i32 0, i32 0
  %PC.i1695 = bitcast %union.anon* %755 to i64*
  %756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %757 = getelementptr inbounds %struct.GPR, %struct.GPR* %756, i32 0, i32 15
  %758 = getelementptr inbounds %struct.Reg, %struct.Reg* %757, i32 0, i32 0
  %RBP.i1696 = bitcast %union.anon* %758 to i64*
  %759 = load i64, i64* %RBP.i1696
  %760 = sub i64 %759, 12
  %761 = load i64, i64* %PC.i1695
  %762 = add i64 %761, 7
  store i64 %762, i64* %PC.i1695
  %763 = inttoptr i64 %760 to i32*
  store i32 0, i32* %763
  store %struct.Memory* %loadMem_441611, %struct.Memory** %MEMORY
  br label %block_.L_441618

block_.L_441618:                                  ; preds = %block_.L_441df9, %block_.L_4415c3
  %loadMem_441618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %765 = getelementptr inbounds %struct.GPR, %struct.GPR* %764, i32 0, i32 33
  %766 = getelementptr inbounds %struct.Reg, %struct.Reg* %765, i32 0, i32 0
  %PC.i1693 = bitcast %union.anon* %766 to i64*
  %767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %768 = getelementptr inbounds %struct.GPR, %struct.GPR* %767, i32 0, i32 15
  %769 = getelementptr inbounds %struct.Reg, %struct.Reg* %768, i32 0, i32 0
  %RBP.i1694 = bitcast %union.anon* %769 to i64*
  %770 = load i64, i64* %RBP.i1694
  %771 = sub i64 %770, 12
  %772 = load i64, i64* %PC.i1693
  %773 = add i64 %772, 4
  store i64 %773, i64* %PC.i1693
  %774 = inttoptr i64 %771 to i32*
  %775 = load i32, i32* %774
  %776 = sub i32 %775, 2
  %777 = icmp ult i32 %775, 2
  %778 = zext i1 %777 to i8
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %778, i8* %779, align 1
  %780 = and i32 %776, 255
  %781 = call i32 @llvm.ctpop.i32(i32 %780)
  %782 = trunc i32 %781 to i8
  %783 = and i8 %782, 1
  %784 = xor i8 %783, 1
  %785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %784, i8* %785, align 1
  %786 = xor i32 %775, 2
  %787 = xor i32 %786, %776
  %788 = lshr i32 %787, 4
  %789 = trunc i32 %788 to i8
  %790 = and i8 %789, 1
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %790, i8* %791, align 1
  %792 = icmp eq i32 %776, 0
  %793 = zext i1 %792 to i8
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %793, i8* %794, align 1
  %795 = lshr i32 %776, 31
  %796 = trunc i32 %795 to i8
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %796, i8* %797, align 1
  %798 = lshr i32 %775, 31
  %799 = xor i32 %795, %798
  %800 = add i32 %799, %798
  %801 = icmp eq i32 %800, 2
  %802 = zext i1 %801 to i8
  %803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %802, i8* %803, align 1
  store %struct.Memory* %loadMem_441618, %struct.Memory** %MEMORY
  %loadMem_44161c = load %struct.Memory*, %struct.Memory** %MEMORY
  %804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %805 = getelementptr inbounds %struct.GPR, %struct.GPR* %804, i32 0, i32 33
  %806 = getelementptr inbounds %struct.Reg, %struct.Reg* %805, i32 0, i32 0
  %PC.i1692 = bitcast %union.anon* %806 to i64*
  %807 = load i64, i64* %PC.i1692
  %808 = add i64 %807, 2027
  %809 = load i64, i64* %PC.i1692
  %810 = add i64 %809, 6
  %811 = load i64, i64* %PC.i1692
  %812 = add i64 %811, 6
  store i64 %812, i64* %PC.i1692
  %813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %814 = load i8, i8* %813, align 1
  %815 = icmp ne i8 %814, 0
  %816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %817 = load i8, i8* %816, align 1
  %818 = icmp ne i8 %817, 0
  %819 = xor i1 %815, %818
  %820 = xor i1 %819, true
  %821 = zext i1 %820 to i8
  store i8 %821, i8* %BRANCH_TAKEN, align 1
  %822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %823 = select i1 %819, i64 %810, i64 %808
  store i64 %823, i64* %822, align 8
  store %struct.Memory* %loadMem_44161c, %struct.Memory** %MEMORY
  %loadBr_44161c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44161c = icmp eq i8 %loadBr_44161c, 1
  br i1 %cmpBr_44161c, label %block_.L_441e07, label %block_441622

block_441622:                                     ; preds = %block_.L_441618
  %loadMem_441622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %825 = getelementptr inbounds %struct.GPR, %struct.GPR* %824, i32 0, i32 33
  %826 = getelementptr inbounds %struct.Reg, %struct.Reg* %825, i32 0, i32 0
  %PC.i1690 = bitcast %union.anon* %826 to i64*
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %828 = getelementptr inbounds %struct.GPR, %struct.GPR* %827, i32 0, i32 15
  %829 = getelementptr inbounds %struct.Reg, %struct.Reg* %828, i32 0, i32 0
  %RBP.i1691 = bitcast %union.anon* %829 to i64*
  %830 = load i64, i64* %RBP.i1691
  %831 = sub i64 %830, 16
  %832 = load i64, i64* %PC.i1690
  %833 = add i64 %832, 7
  store i64 %833, i64* %PC.i1690
  %834 = inttoptr i64 %831 to i32*
  store i32 0, i32* %834
  store %struct.Memory* %loadMem_441622, %struct.Memory** %MEMORY
  %loadMem_441629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %836 = getelementptr inbounds %struct.GPR, %struct.GPR* %835, i32 0, i32 33
  %837 = getelementptr inbounds %struct.Reg, %struct.Reg* %836, i32 0, i32 0
  %PC.i1688 = bitcast %union.anon* %837 to i64*
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %839 = getelementptr inbounds %struct.GPR, %struct.GPR* %838, i32 0, i32 15
  %840 = getelementptr inbounds %struct.Reg, %struct.Reg* %839, i32 0, i32 0
  %RBP.i1689 = bitcast %union.anon* %840 to i64*
  %841 = load i64, i64* %RBP.i1689
  %842 = sub i64 %841, 20
  %843 = load i64, i64* %PC.i1688
  %844 = add i64 %843, 7
  store i64 %844, i64* %PC.i1688
  %845 = inttoptr i64 %842 to i32*
  store i32 0, i32* %845
  store %struct.Memory* %loadMem_441629, %struct.Memory** %MEMORY
  br label %block_.L_441630

block_.L_441630:                                  ; preds = %block_.L_4416fc, %block_441622
  %loadMem_441630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %847 = getelementptr inbounds %struct.GPR, %struct.GPR* %846, i32 0, i32 33
  %848 = getelementptr inbounds %struct.Reg, %struct.Reg* %847, i32 0, i32 0
  %PC.i1685 = bitcast %union.anon* %848 to i64*
  %849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %850 = getelementptr inbounds %struct.GPR, %struct.GPR* %849, i32 0, i32 1
  %851 = getelementptr inbounds %struct.Reg, %struct.Reg* %850, i32 0, i32 0
  %RAX.i1686 = bitcast %union.anon* %851 to i64*
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %853 = getelementptr inbounds %struct.GPR, %struct.GPR* %852, i32 0, i32 15
  %854 = getelementptr inbounds %struct.Reg, %struct.Reg* %853, i32 0, i32 0
  %RBP.i1687 = bitcast %union.anon* %854 to i64*
  %855 = load i64, i64* %RBP.i1687
  %856 = sub i64 %855, 20
  %857 = load i64, i64* %PC.i1685
  %858 = add i64 %857, 3
  store i64 %858, i64* %PC.i1685
  %859 = inttoptr i64 %856 to i32*
  %860 = load i32, i32* %859
  %861 = zext i32 %860 to i64
  store i64 %861, i64* %RAX.i1686, align 8
  store %struct.Memory* %loadMem_441630, %struct.Memory** %MEMORY
  %loadMem_441633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %863 = getelementptr inbounds %struct.GPR, %struct.GPR* %862, i32 0, i32 33
  %864 = getelementptr inbounds %struct.Reg, %struct.Reg* %863, i32 0, i32 0
  %PC.i1683 = bitcast %union.anon* %864 to i64*
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %866 = getelementptr inbounds %struct.GPR, %struct.GPR* %865, i32 0, i32 5
  %867 = getelementptr inbounds %struct.Reg, %struct.Reg* %866, i32 0, i32 0
  %RCX.i1684 = bitcast %union.anon* %867 to i64*
  %868 = load i64, i64* %PC.i1683
  %869 = add i64 %868, 8
  store i64 %869, i64* %PC.i1683
  %870 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %870, i64* %RCX.i1684, align 8
  store %struct.Memory* %loadMem_441633, %struct.Memory** %MEMORY
  %loadMem_44163b = load %struct.Memory*, %struct.Memory** %MEMORY
  %871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %872 = getelementptr inbounds %struct.GPR, %struct.GPR* %871, i32 0, i32 33
  %873 = getelementptr inbounds %struct.Reg, %struct.Reg* %872, i32 0, i32 0
  %PC.i1680 = bitcast %union.anon* %873 to i64*
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %875 = getelementptr inbounds %struct.GPR, %struct.GPR* %874, i32 0, i32 1
  %876 = getelementptr inbounds %struct.Reg, %struct.Reg* %875, i32 0, i32 0
  %EAX.i1681 = bitcast %union.anon* %876 to i32*
  %877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %878 = getelementptr inbounds %struct.GPR, %struct.GPR* %877, i32 0, i32 5
  %879 = getelementptr inbounds %struct.Reg, %struct.Reg* %878, i32 0, i32 0
  %RCX.i1682 = bitcast %union.anon* %879 to i64*
  %880 = load i32, i32* %EAX.i1681
  %881 = zext i32 %880 to i64
  %882 = load i64, i64* %RCX.i1682
  %883 = add i64 %882, 72712
  %884 = load i64, i64* %PC.i1680
  %885 = add i64 %884, 6
  store i64 %885, i64* %PC.i1680
  %886 = inttoptr i64 %883 to i32*
  %887 = load i32, i32* %886
  %888 = sub i32 %880, %887
  %889 = icmp ult i32 %880, %887
  %890 = zext i1 %889 to i8
  %891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %890, i8* %891, align 1
  %892 = and i32 %888, 255
  %893 = call i32 @llvm.ctpop.i32(i32 %892)
  %894 = trunc i32 %893 to i8
  %895 = and i8 %894, 1
  %896 = xor i8 %895, 1
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %896, i8* %897, align 1
  %898 = xor i32 %887, %880
  %899 = xor i32 %898, %888
  %900 = lshr i32 %899, 4
  %901 = trunc i32 %900 to i8
  %902 = and i8 %901, 1
  %903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %902, i8* %903, align 1
  %904 = icmp eq i32 %888, 0
  %905 = zext i1 %904 to i8
  %906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %905, i8* %906, align 1
  %907 = lshr i32 %888, 31
  %908 = trunc i32 %907 to i8
  %909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %908, i8* %909, align 1
  %910 = lshr i32 %880, 31
  %911 = lshr i32 %887, 31
  %912 = xor i32 %911, %910
  %913 = xor i32 %907, %910
  %914 = add i32 %913, %912
  %915 = icmp eq i32 %914, 2
  %916 = zext i1 %915 to i8
  %917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %916, i8* %917, align 1
  store %struct.Memory* %loadMem_44163b, %struct.Memory** %MEMORY
  %loadMem_441641 = load %struct.Memory*, %struct.Memory** %MEMORY
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %919 = getelementptr inbounds %struct.GPR, %struct.GPR* %918, i32 0, i32 33
  %920 = getelementptr inbounds %struct.Reg, %struct.Reg* %919, i32 0, i32 0
  %PC.i1679 = bitcast %union.anon* %920 to i64*
  %921 = load i64, i64* %PC.i1679
  %922 = add i64 %921, 201
  %923 = load i64, i64* %PC.i1679
  %924 = add i64 %923, 6
  %925 = load i64, i64* %PC.i1679
  %926 = add i64 %925, 6
  store i64 %926, i64* %PC.i1679
  %927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %928 = load i8, i8* %927, align 1
  %929 = icmp ne i8 %928, 0
  %930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %931 = load i8, i8* %930, align 1
  %932 = icmp ne i8 %931, 0
  %933 = xor i1 %929, %932
  %934 = xor i1 %933, true
  %935 = zext i1 %934 to i8
  store i8 %935, i8* %BRANCH_TAKEN, align 1
  %936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %937 = select i1 %933, i64 %924, i64 %922
  store i64 %937, i64* %936, align 8
  store %struct.Memory* %loadMem_441641, %struct.Memory** %MEMORY
  %loadBr_441641 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441641 = icmp eq i8 %loadBr_441641, 1
  br i1 %cmpBr_441641, label %block_.L_44170a, label %block_441647

block_441647:                                     ; preds = %block_.L_441630
  %loadMem_441647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %939 = getelementptr inbounds %struct.GPR, %struct.GPR* %938, i32 0, i32 33
  %940 = getelementptr inbounds %struct.Reg, %struct.Reg* %939, i32 0, i32 0
  %PC.i1677 = bitcast %union.anon* %940 to i64*
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %942 = getelementptr inbounds %struct.GPR, %struct.GPR* %941, i32 0, i32 15
  %943 = getelementptr inbounds %struct.Reg, %struct.Reg* %942, i32 0, i32 0
  %RBP.i1678 = bitcast %union.anon* %943 to i64*
  %944 = load i64, i64* %RBP.i1678
  %945 = sub i64 %944, 24
  %946 = load i64, i64* %PC.i1677
  %947 = add i64 %946, 7
  store i64 %947, i64* %PC.i1677
  %948 = inttoptr i64 %945 to i32*
  store i32 0, i32* %948
  store %struct.Memory* %loadMem_441647, %struct.Memory** %MEMORY
  br label %block_.L_44164e

block_.L_44164e:                                  ; preds = %block_441665, %block_441647
  %loadMem_44164e = load %struct.Memory*, %struct.Memory** %MEMORY
  %949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %950 = getelementptr inbounds %struct.GPR, %struct.GPR* %949, i32 0, i32 33
  %951 = getelementptr inbounds %struct.Reg, %struct.Reg* %950, i32 0, i32 0
  %PC.i1674 = bitcast %union.anon* %951 to i64*
  %952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %953 = getelementptr inbounds %struct.GPR, %struct.GPR* %952, i32 0, i32 1
  %954 = getelementptr inbounds %struct.Reg, %struct.Reg* %953, i32 0, i32 0
  %RAX.i1675 = bitcast %union.anon* %954 to i64*
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %956 = getelementptr inbounds %struct.GPR, %struct.GPR* %955, i32 0, i32 15
  %957 = getelementptr inbounds %struct.Reg, %struct.Reg* %956, i32 0, i32 0
  %RBP.i1676 = bitcast %union.anon* %957 to i64*
  %958 = load i64, i64* %RBP.i1676
  %959 = sub i64 %958, 24
  %960 = load i64, i64* %PC.i1674
  %961 = add i64 %960, 3
  store i64 %961, i64* %PC.i1674
  %962 = inttoptr i64 %959 to i32*
  %963 = load i32, i32* %962
  %964 = zext i32 %963 to i64
  store i64 %964, i64* %RAX.i1675, align 8
  store %struct.Memory* %loadMem_44164e, %struct.Memory** %MEMORY
  %loadMem_441651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %966 = getelementptr inbounds %struct.GPR, %struct.GPR* %965, i32 0, i32 33
  %967 = getelementptr inbounds %struct.Reg, %struct.Reg* %966, i32 0, i32 0
  %PC.i1672 = bitcast %union.anon* %967 to i64*
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %969 = getelementptr inbounds %struct.GPR, %struct.GPR* %968, i32 0, i32 5
  %970 = getelementptr inbounds %struct.Reg, %struct.Reg* %969, i32 0, i32 0
  %RCX.i1673 = bitcast %union.anon* %970 to i64*
  %971 = load i64, i64* %PC.i1672
  %972 = add i64 %971, 8
  store i64 %972, i64* %PC.i1672
  %973 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %973, i64* %RCX.i1673, align 8
  store %struct.Memory* %loadMem_441651, %struct.Memory** %MEMORY
  %loadMem_441659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %975 = getelementptr inbounds %struct.GPR, %struct.GPR* %974, i32 0, i32 33
  %976 = getelementptr inbounds %struct.Reg, %struct.Reg* %975, i32 0, i32 0
  %PC.i1669 = bitcast %union.anon* %976 to i64*
  %977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %978 = getelementptr inbounds %struct.GPR, %struct.GPR* %977, i32 0, i32 1
  %979 = getelementptr inbounds %struct.Reg, %struct.Reg* %978, i32 0, i32 0
  %EAX.i1670 = bitcast %union.anon* %979 to i32*
  %980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %981 = getelementptr inbounds %struct.GPR, %struct.GPR* %980, i32 0, i32 5
  %982 = getelementptr inbounds %struct.Reg, %struct.Reg* %981, i32 0, i32 0
  %RCX.i1671 = bitcast %union.anon* %982 to i64*
  %983 = load i32, i32* %EAX.i1670
  %984 = zext i32 %983 to i64
  %985 = load i64, i64* %RCX.i1671
  %986 = add i64 %985, 72708
  %987 = load i64, i64* %PC.i1669
  %988 = add i64 %987, 6
  store i64 %988, i64* %PC.i1669
  %989 = inttoptr i64 %986 to i32*
  %990 = load i32, i32* %989
  %991 = sub i32 %983, %990
  %992 = icmp ult i32 %983, %990
  %993 = zext i1 %992 to i8
  %994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %993, i8* %994, align 1
  %995 = and i32 %991, 255
  %996 = call i32 @llvm.ctpop.i32(i32 %995)
  %997 = trunc i32 %996 to i8
  %998 = and i8 %997, 1
  %999 = xor i8 %998, 1
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %999, i8* %1000, align 1
  %1001 = xor i32 %990, %983
  %1002 = xor i32 %1001, %991
  %1003 = lshr i32 %1002, 4
  %1004 = trunc i32 %1003 to i8
  %1005 = and i8 %1004, 1
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1005, i8* %1006, align 1
  %1007 = icmp eq i32 %991, 0
  %1008 = zext i1 %1007 to i8
  %1009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1008, i8* %1009, align 1
  %1010 = lshr i32 %991, 31
  %1011 = trunc i32 %1010 to i8
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1011, i8* %1012, align 1
  %1013 = lshr i32 %983, 31
  %1014 = lshr i32 %990, 31
  %1015 = xor i32 %1014, %1013
  %1016 = xor i32 %1010, %1013
  %1017 = add i32 %1016, %1015
  %1018 = icmp eq i32 %1017, 2
  %1019 = zext i1 %1018 to i8
  %1020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1019, i8* %1020, align 1
  store %struct.Memory* %loadMem_441659, %struct.Memory** %MEMORY
  %loadMem_44165f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1022 = getelementptr inbounds %struct.GPR, %struct.GPR* %1021, i32 0, i32 33
  %1023 = getelementptr inbounds %struct.Reg, %struct.Reg* %1022, i32 0, i32 0
  %PC.i1668 = bitcast %union.anon* %1023 to i64*
  %1024 = load i64, i64* %PC.i1668
  %1025 = add i64 %1024, 152
  %1026 = load i64, i64* %PC.i1668
  %1027 = add i64 %1026, 6
  %1028 = load i64, i64* %PC.i1668
  %1029 = add i64 %1028, 6
  store i64 %1029, i64* %PC.i1668
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1031 = load i8, i8* %1030, align 1
  %1032 = icmp ne i8 %1031, 0
  %1033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1034 = load i8, i8* %1033, align 1
  %1035 = icmp ne i8 %1034, 0
  %1036 = xor i1 %1032, %1035
  %1037 = xor i1 %1036, true
  %1038 = zext i1 %1037 to i8
  store i8 %1038, i8* %BRANCH_TAKEN, align 1
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1040 = select i1 %1036, i64 %1027, i64 %1025
  store i64 %1040, i64* %1039, align 8
  store %struct.Memory* %loadMem_44165f, %struct.Memory** %MEMORY
  %loadBr_44165f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44165f = icmp eq i8 %loadBr_44165f, 1
  br i1 %cmpBr_44165f, label %block_.L_4416f7, label %block_441665

block_441665:                                     ; preds = %block_.L_44164e
  %loadMem_441665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1042 = getelementptr inbounds %struct.GPR, %struct.GPR* %1041, i32 0, i32 33
  %1043 = getelementptr inbounds %struct.Reg, %struct.Reg* %1042, i32 0, i32 0
  %PC.i1665 = bitcast %union.anon* %1043 to i64*
  %1044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1045 = getelementptr inbounds %struct.GPR, %struct.GPR* %1044, i32 0, i32 9
  %1046 = getelementptr inbounds %struct.Reg, %struct.Reg* %1045, i32 0, i32 0
  %RSI.i1666 = bitcast %union.anon* %1046 to i64*
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1048 = getelementptr inbounds %struct.GPR, %struct.GPR* %1047, i32 0, i32 15
  %1049 = getelementptr inbounds %struct.Reg, %struct.Reg* %1048, i32 0, i32 0
  %RBP.i1667 = bitcast %union.anon* %1049 to i64*
  %1050 = load i64, i64* %RBP.i1667
  %1051 = sub i64 %1050, 42
  %1052 = load i64, i64* %PC.i1665
  %1053 = add i64 %1052, 4
  store i64 %1053, i64* %PC.i1665
  store i64 %1051, i64* %RSI.i1666, align 8
  store %struct.Memory* %loadMem_441665, %struct.Memory** %MEMORY
  %loadMem_441669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1055 = getelementptr inbounds %struct.GPR, %struct.GPR* %1054, i32 0, i32 33
  %1056 = getelementptr inbounds %struct.Reg, %struct.Reg* %1055, i32 0, i32 0
  %PC.i1662 = bitcast %union.anon* %1056 to i64*
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1058 = getelementptr inbounds %struct.GPR, %struct.GPR* %1057, i32 0, i32 7
  %1059 = getelementptr inbounds %struct.Reg, %struct.Reg* %1058, i32 0, i32 0
  %RDX.i1663 = bitcast %union.anon* %1059 to i64*
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1061 = getelementptr inbounds %struct.GPR, %struct.GPR* %1060, i32 0, i32 15
  %1062 = getelementptr inbounds %struct.Reg, %struct.Reg* %1061, i32 0, i32 0
  %RBP.i1664 = bitcast %union.anon* %1062 to i64*
  %1063 = load i64, i64* %RBP.i1664
  %1064 = sub i64 %1063, 36
  %1065 = load i64, i64* %PC.i1662
  %1066 = add i64 %1065, 4
  store i64 %1066, i64* %PC.i1662
  store i64 %1064, i64* %RDX.i1663, align 8
  store %struct.Memory* %loadMem_441669, %struct.Memory** %MEMORY
  %loadMem_44166d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1068 = getelementptr inbounds %struct.GPR, %struct.GPR* %1067, i32 0, i32 33
  %1069 = getelementptr inbounds %struct.Reg, %struct.Reg* %1068, i32 0, i32 0
  %PC.i1659 = bitcast %union.anon* %1069 to i64*
  %1070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1071 = getelementptr inbounds %struct.GPR, %struct.GPR* %1070, i32 0, i32 5
  %1072 = getelementptr inbounds %struct.Reg, %struct.Reg* %1071, i32 0, i32 0
  %RCX.i1660 = bitcast %union.anon* %1072 to i64*
  %1073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1074 = getelementptr inbounds %struct.GPR, %struct.GPR* %1073, i32 0, i32 15
  %1075 = getelementptr inbounds %struct.Reg, %struct.Reg* %1074, i32 0, i32 0
  %RBP.i1661 = bitcast %union.anon* %1075 to i64*
  %1076 = load i64, i64* %RBP.i1661
  %1077 = sub i64 %1076, 40
  %1078 = load i64, i64* %PC.i1659
  %1079 = add i64 %1078, 4
  store i64 %1079, i64* %PC.i1659
  store i64 %1077, i64* %RCX.i1660, align 8
  store %struct.Memory* %loadMem_44166d, %struct.Memory** %MEMORY
  %loadMem_441671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1081 = getelementptr inbounds %struct.GPR, %struct.GPR* %1080, i32 0, i32 33
  %1082 = getelementptr inbounds %struct.Reg, %struct.Reg* %1081, i32 0, i32 0
  %PC.i1656 = bitcast %union.anon* %1082 to i64*
  %1083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1084 = getelementptr inbounds %struct.GPR, %struct.GPR* %1083, i32 0, i32 15
  %1085 = getelementptr inbounds %struct.Reg, %struct.Reg* %1084, i32 0, i32 0
  %RBP.i1657 = bitcast %union.anon* %1085 to i64*
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1087 = getelementptr inbounds %struct.GPR, %struct.GPR* %1086, i32 0, i32 17
  %1088 = getelementptr inbounds %struct.Reg, %struct.Reg* %1087, i32 0, i32 0
  %R8.i1658 = bitcast %union.anon* %1088 to i64*
  %1089 = load i64, i64* %RBP.i1657
  %1090 = sub i64 %1089, 44
  %1091 = load i64, i64* %PC.i1656
  %1092 = add i64 %1091, 4
  store i64 %1092, i64* %PC.i1656
  store i64 %1090, i64* %R8.i1658, align 8
  store %struct.Memory* %loadMem_441671, %struct.Memory** %MEMORY
  %loadMem_441675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1094 = getelementptr inbounds %struct.GPR, %struct.GPR* %1093, i32 0, i32 33
  %1095 = getelementptr inbounds %struct.Reg, %struct.Reg* %1094, i32 0, i32 0
  %PC.i1654 = bitcast %union.anon* %1095 to i64*
  %1096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1097 = getelementptr inbounds %struct.GPR, %struct.GPR* %1096, i32 0, i32 15
  %1098 = getelementptr inbounds %struct.Reg, %struct.Reg* %1097, i32 0, i32 0
  %RBP.i1655 = bitcast %union.anon* %1098 to i64*
  %1099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1100 = getelementptr inbounds %struct.GPR, %struct.GPR* %1099, i32 0, i32 19
  %1101 = getelementptr inbounds %struct.Reg, %struct.Reg* %1100, i32 0, i32 0
  %R9.i = bitcast %union.anon* %1101 to i64*
  %1102 = load i64, i64* %RBP.i1655
  %1103 = sub i64 %1102, 46
  %1104 = load i64, i64* %PC.i1654
  %1105 = add i64 %1104, 4
  store i64 %1105, i64* %PC.i1654
  store i64 %1103, i64* %R9.i, align 8
  store %struct.Memory* %loadMem_441675, %struct.Memory** %MEMORY
  %loadMem_441679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1107 = getelementptr inbounds %struct.GPR, %struct.GPR* %1106, i32 0, i32 33
  %1108 = getelementptr inbounds %struct.Reg, %struct.Reg* %1107, i32 0, i32 0
  %PC.i1651 = bitcast %union.anon* %1108 to i64*
  %1109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1110 = getelementptr inbounds %struct.GPR, %struct.GPR* %1109, i32 0, i32 1
  %1111 = getelementptr inbounds %struct.Reg, %struct.Reg* %1110, i32 0, i32 0
  %RAX.i1652 = bitcast %union.anon* %1111 to i64*
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1113 = getelementptr inbounds %struct.GPR, %struct.GPR* %1112, i32 0, i32 15
  %1114 = getelementptr inbounds %struct.Reg, %struct.Reg* %1113, i32 0, i32 0
  %RBP.i1653 = bitcast %union.anon* %1114 to i64*
  %1115 = load i64, i64* %RBP.i1653
  %1116 = sub i64 %1115, 256
  %1117 = load i64, i64* %PC.i1651
  %1118 = add i64 %1117, 7
  store i64 %1118, i64* %PC.i1651
  store i64 %1116, i64* %RAX.i1652, align 8
  store %struct.Memory* %loadMem_441679, %struct.Memory** %MEMORY
  %loadMem_441680 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1120 = getelementptr inbounds %struct.GPR, %struct.GPR* %1119, i32 0, i32 33
  %1121 = getelementptr inbounds %struct.Reg, %struct.Reg* %1120, i32 0, i32 0
  %PC.i1648 = bitcast %union.anon* %1121 to i64*
  %1122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1123 = getelementptr inbounds %struct.GPR, %struct.GPR* %1122, i32 0, i32 11
  %1124 = getelementptr inbounds %struct.Reg, %struct.Reg* %1123, i32 0, i32 0
  %RDI.i1649 = bitcast %union.anon* %1124 to i64*
  %1125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1126 = getelementptr inbounds %struct.GPR, %struct.GPR* %1125, i32 0, i32 15
  %1127 = getelementptr inbounds %struct.Reg, %struct.Reg* %1126, i32 0, i32 0
  %RBP.i1650 = bitcast %union.anon* %1127 to i64*
  %1128 = load i64, i64* %RBP.i1650
  %1129 = sub i64 %1128, 56
  %1130 = load i64, i64* %PC.i1648
  %1131 = add i64 %1130, 4
  store i64 %1131, i64* %PC.i1648
  %1132 = inttoptr i64 %1129 to i32*
  %1133 = load i32, i32* %1132
  %1134 = sext i32 %1133 to i64
  store i64 %1134, i64* %RDI.i1649, align 8
  store %struct.Memory* %loadMem_441680, %struct.Memory** %MEMORY
  %loadMem_441684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1136 = getelementptr inbounds %struct.GPR, %struct.GPR* %1135, i32 0, i32 33
  %1137 = getelementptr inbounds %struct.Reg, %struct.Reg* %1136, i32 0, i32 0
  %PC.i1646 = bitcast %union.anon* %1137 to i64*
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1139 = getelementptr inbounds %struct.GPR, %struct.GPR* %1138, i32 0, i32 11
  %1140 = getelementptr inbounds %struct.Reg, %struct.Reg* %1139, i32 0, i32 0
  %RDI.i1647 = bitcast %union.anon* %1140 to i64*
  %1141 = load i64, i64* %RDI.i1647
  %1142 = load i64, i64* %PC.i1646
  %1143 = add i64 %1142, 4
  store i64 %1143, i64* %PC.i1646
  %1144 = shl i64 %1141, 5
  %1145 = icmp slt i64 %1144, 0
  %1146 = shl i64 %1144, 1
  store i64 %1146, i64* %RDI.i1647, align 8
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1148 = zext i1 %1145 to i8
  store i8 %1148, i8* %1147, align 1
  %1149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1150 = trunc i64 %1146 to i32
  %1151 = and i32 %1150, 254
  %1152 = call i32 @llvm.ctpop.i32(i32 %1151)
  %1153 = trunc i32 %1152 to i8
  %1154 = and i8 %1153, 1
  %1155 = xor i8 %1154, 1
  store i8 %1155, i8* %1149, align 1
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1156, align 1
  %1157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1158 = icmp eq i64 %1146, 0
  %1159 = zext i1 %1158 to i8
  store i8 %1159, i8* %1157, align 1
  %1160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1161 = lshr i64 %1146, 63
  %1162 = trunc i64 %1161 to i8
  store i8 %1162, i8* %1160, align 1
  %1163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1163, align 1
  store %struct.Memory* %loadMem_441684, %struct.Memory** %MEMORY
  %loadMem_441688 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1165 = getelementptr inbounds %struct.GPR, %struct.GPR* %1164, i32 0, i32 33
  %1166 = getelementptr inbounds %struct.Reg, %struct.Reg* %1165, i32 0, i32 0
  %PC.i1643 = bitcast %union.anon* %1166 to i64*
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1168 = getelementptr inbounds %struct.GPR, %struct.GPR* %1167, i32 0, i32 1
  %1169 = getelementptr inbounds %struct.Reg, %struct.Reg* %1168, i32 0, i32 0
  %RAX.i1644 = bitcast %union.anon* %1169 to i64*
  %1170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1171 = getelementptr inbounds %struct.GPR, %struct.GPR* %1170, i32 0, i32 11
  %1172 = getelementptr inbounds %struct.Reg, %struct.Reg* %1171, i32 0, i32 0
  %RDI.i1645 = bitcast %union.anon* %1172 to i64*
  %1173 = load i64, i64* %RAX.i1644
  %1174 = load i64, i64* %RDI.i1645
  %1175 = load i64, i64* %PC.i1643
  %1176 = add i64 %1175, 3
  store i64 %1176, i64* %PC.i1643
  %1177 = add i64 %1174, %1173
  store i64 %1177, i64* %RAX.i1644, align 8
  %1178 = icmp ult i64 %1177, %1173
  %1179 = icmp ult i64 %1177, %1174
  %1180 = or i1 %1178, %1179
  %1181 = zext i1 %1180 to i8
  %1182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1181, i8* %1182, align 1
  %1183 = trunc i64 %1177 to i32
  %1184 = and i32 %1183, 255
  %1185 = call i32 @llvm.ctpop.i32(i32 %1184)
  %1186 = trunc i32 %1185 to i8
  %1187 = and i8 %1186, 1
  %1188 = xor i8 %1187, 1
  %1189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1188, i8* %1189, align 1
  %1190 = xor i64 %1174, %1173
  %1191 = xor i64 %1190, %1177
  %1192 = lshr i64 %1191, 4
  %1193 = trunc i64 %1192 to i8
  %1194 = and i8 %1193, 1
  %1195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1194, i8* %1195, align 1
  %1196 = icmp eq i64 %1177, 0
  %1197 = zext i1 %1196 to i8
  %1198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1197, i8* %1198, align 1
  %1199 = lshr i64 %1177, 63
  %1200 = trunc i64 %1199 to i8
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1200, i8* %1201, align 1
  %1202 = lshr i64 %1173, 63
  %1203 = lshr i64 %1174, 63
  %1204 = xor i64 %1199, %1202
  %1205 = xor i64 %1199, %1203
  %1206 = add i64 %1204, %1205
  %1207 = icmp eq i64 %1206, 2
  %1208 = zext i1 %1207 to i8
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1208, i8* %1209, align 1
  store %struct.Memory* %loadMem_441688, %struct.Memory** %MEMORY
  %loadMem_44168b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1211 = getelementptr inbounds %struct.GPR, %struct.GPR* %1210, i32 0, i32 33
  %1212 = getelementptr inbounds %struct.Reg, %struct.Reg* %1211, i32 0, i32 0
  %PC.i1640 = bitcast %union.anon* %1212 to i64*
  %1213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1214 = getelementptr inbounds %struct.GPR, %struct.GPR* %1213, i32 0, i32 21
  %1215 = getelementptr inbounds %struct.Reg, %struct.Reg* %1214, i32 0, i32 0
  %R10D.i1641 = bitcast %union.anon* %1215 to i32*
  %1216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1217 = getelementptr inbounds %struct.GPR, %struct.GPR* %1216, i32 0, i32 15
  %1218 = getelementptr inbounds %struct.Reg, %struct.Reg* %1217, i32 0, i32 0
  %RBP.i1642 = bitcast %union.anon* %1218 to i64*
  %1219 = bitcast i32* %R10D.i1641 to i64*
  %1220 = load i64, i64* %RBP.i1642
  %1221 = sub i64 %1220, 20
  %1222 = load i64, i64* %PC.i1640
  %1223 = add i64 %1222, 4
  store i64 %1223, i64* %PC.i1640
  %1224 = inttoptr i64 %1221 to i32*
  %1225 = load i32, i32* %1224
  %1226 = zext i32 %1225 to i64
  store i64 %1226, i64* %1219, align 8
  store %struct.Memory* %loadMem_44168b, %struct.Memory** %MEMORY
  %loadMem_44168f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1228 = getelementptr inbounds %struct.GPR, %struct.GPR* %1227, i32 0, i32 33
  %1229 = getelementptr inbounds %struct.Reg, %struct.Reg* %1228, i32 0, i32 0
  %PC.i1638 = bitcast %union.anon* %1229 to i64*
  %1230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1231 = getelementptr inbounds %struct.GPR, %struct.GPR* %1230, i32 0, i32 21
  %1232 = getelementptr inbounds %struct.Reg, %struct.Reg* %1231, i32 0, i32 0
  %R10D.i1639 = bitcast %union.anon* %1232 to i32*
  %1233 = bitcast i32* %R10D.i1639 to i64*
  %1234 = load i32, i32* %R10D.i1639
  %1235 = zext i32 %1234 to i64
  %1236 = load i64, i64* %PC.i1638
  %1237 = add i64 %1236, 4
  store i64 %1237, i64* %PC.i1638
  %1238 = shl i64 %1235, 32
  %1239 = ashr exact i64 %1238, 32
  %1240 = ashr i64 %1239, 1
  %1241 = lshr i64 %1240, 1
  %1242 = trunc i64 %1240 to i8
  %1243 = and i8 %1242, 1
  %1244 = trunc i64 %1241 to i32
  %1245 = and i64 %1241, 4294967295
  store i64 %1245, i64* %1233, align 8
  %1246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1243, i8* %1246, align 1
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1248 = and i32 %1244, 255
  %1249 = call i32 @llvm.ctpop.i32(i32 %1248)
  %1250 = trunc i32 %1249 to i8
  %1251 = and i8 %1250, 1
  %1252 = xor i8 %1251, 1
  store i8 %1252, i8* %1247, align 1
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1253, align 1
  %1254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1255 = icmp eq i32 %1244, 0
  %1256 = zext i1 %1255 to i8
  store i8 %1256, i8* %1254, align 1
  %1257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1258 = lshr i32 %1244, 31
  %1259 = trunc i32 %1258 to i8
  store i8 %1259, i8* %1257, align 1
  %1260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1260, align 1
  store %struct.Memory* %loadMem_44168f, %struct.Memory** %MEMORY
  %loadMem_441693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1262 = getelementptr inbounds %struct.GPR, %struct.GPR* %1261, i32 0, i32 33
  %1263 = getelementptr inbounds %struct.Reg, %struct.Reg* %1262, i32 0, i32 0
  %PC.i1635 = bitcast %union.anon* %1263 to i64*
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1265 = getelementptr inbounds %struct.GPR, %struct.GPR* %1264, i32 0, i32 21
  %1266 = getelementptr inbounds %struct.Reg, %struct.Reg* %1265, i32 0, i32 0
  %R10D.i1636 = bitcast %union.anon* %1266 to i32*
  %1267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1268 = getelementptr inbounds %struct.GPR, %struct.GPR* %1267, i32 0, i32 11
  %1269 = getelementptr inbounds %struct.Reg, %struct.Reg* %1268, i32 0, i32 0
  %RDI.i1637 = bitcast %union.anon* %1269 to i64*
  %1270 = load i32, i32* %R10D.i1636
  %1271 = zext i32 %1270 to i64
  %1272 = load i64, i64* %PC.i1635
  %1273 = add i64 %1272, 3
  store i64 %1273, i64* %PC.i1635
  %1274 = shl i64 %1271, 32
  %1275 = ashr exact i64 %1274, 32
  store i64 %1275, i64* %RDI.i1637, align 8
  store %struct.Memory* %loadMem_441693, %struct.Memory** %MEMORY
  %loadMem_441696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1277 = getelementptr inbounds %struct.GPR, %struct.GPR* %1276, i32 0, i32 33
  %1278 = getelementptr inbounds %struct.Reg, %struct.Reg* %1277, i32 0, i32 0
  %PC.i1633 = bitcast %union.anon* %1278 to i64*
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1280 = getelementptr inbounds %struct.GPR, %struct.GPR* %1279, i32 0, i32 11
  %1281 = getelementptr inbounds %struct.Reg, %struct.Reg* %1280, i32 0, i32 0
  %RDI.i1634 = bitcast %union.anon* %1281 to i64*
  %1282 = load i64, i64* %RDI.i1634
  %1283 = load i64, i64* %PC.i1633
  %1284 = add i64 %1283, 4
  store i64 %1284, i64* %PC.i1633
  %1285 = shl i64 %1282, 3
  %1286 = icmp slt i64 %1285, 0
  %1287 = shl i64 %1285, 1
  store i64 %1287, i64* %RDI.i1634, align 8
  %1288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1289 = zext i1 %1286 to i8
  store i8 %1289, i8* %1288, align 1
  %1290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1291 = trunc i64 %1287 to i32
  %1292 = and i32 %1291, 254
  %1293 = call i32 @llvm.ctpop.i32(i32 %1292)
  %1294 = trunc i32 %1293 to i8
  %1295 = and i8 %1294, 1
  %1296 = xor i8 %1295, 1
  store i8 %1296, i8* %1290, align 1
  %1297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1297, align 1
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1299 = icmp eq i64 %1287, 0
  %1300 = zext i1 %1299 to i8
  store i8 %1300, i8* %1298, align 1
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1302 = lshr i64 %1287, 63
  %1303 = trunc i64 %1302 to i8
  store i8 %1303, i8* %1301, align 1
  %1304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1304, align 1
  store %struct.Memory* %loadMem_441696, %struct.Memory** %MEMORY
  %loadMem_44169a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1306 = getelementptr inbounds %struct.GPR, %struct.GPR* %1305, i32 0, i32 33
  %1307 = getelementptr inbounds %struct.Reg, %struct.Reg* %1306, i32 0, i32 0
  %PC.i1630 = bitcast %union.anon* %1307 to i64*
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1309 = getelementptr inbounds %struct.GPR, %struct.GPR* %1308, i32 0, i32 1
  %1310 = getelementptr inbounds %struct.Reg, %struct.Reg* %1309, i32 0, i32 0
  %RAX.i1631 = bitcast %union.anon* %1310 to i64*
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1312 = getelementptr inbounds %struct.GPR, %struct.GPR* %1311, i32 0, i32 11
  %1313 = getelementptr inbounds %struct.Reg, %struct.Reg* %1312, i32 0, i32 0
  %RDI.i1632 = bitcast %union.anon* %1313 to i64*
  %1314 = load i64, i64* %RAX.i1631
  %1315 = load i64, i64* %RDI.i1632
  %1316 = load i64, i64* %PC.i1630
  %1317 = add i64 %1316, 3
  store i64 %1317, i64* %PC.i1630
  %1318 = add i64 %1315, %1314
  store i64 %1318, i64* %RAX.i1631, align 8
  %1319 = icmp ult i64 %1318, %1314
  %1320 = icmp ult i64 %1318, %1315
  %1321 = or i1 %1319, %1320
  %1322 = zext i1 %1321 to i8
  %1323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1322, i8* %1323, align 1
  %1324 = trunc i64 %1318 to i32
  %1325 = and i32 %1324, 255
  %1326 = call i32 @llvm.ctpop.i32(i32 %1325)
  %1327 = trunc i32 %1326 to i8
  %1328 = and i8 %1327, 1
  %1329 = xor i8 %1328, 1
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1329, i8* %1330, align 1
  %1331 = xor i64 %1315, %1314
  %1332 = xor i64 %1331, %1318
  %1333 = lshr i64 %1332, 4
  %1334 = trunc i64 %1333 to i8
  %1335 = and i8 %1334, 1
  %1336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1335, i8* %1336, align 1
  %1337 = icmp eq i64 %1318, 0
  %1338 = zext i1 %1337 to i8
  %1339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1338, i8* %1339, align 1
  %1340 = lshr i64 %1318, 63
  %1341 = trunc i64 %1340 to i8
  %1342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1341, i8* %1342, align 1
  %1343 = lshr i64 %1314, 63
  %1344 = lshr i64 %1315, 63
  %1345 = xor i64 %1340, %1343
  %1346 = xor i64 %1340, %1344
  %1347 = add i64 %1345, %1346
  %1348 = icmp eq i64 %1347, 2
  %1349 = zext i1 %1348 to i8
  %1350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1349, i8* %1350, align 1
  store %struct.Memory* %loadMem_44169a, %struct.Memory** %MEMORY
  %loadMem_44169d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1352 = getelementptr inbounds %struct.GPR, %struct.GPR* %1351, i32 0, i32 33
  %1353 = getelementptr inbounds %struct.Reg, %struct.Reg* %1352, i32 0, i32 0
  %PC.i1627 = bitcast %union.anon* %1353 to i64*
  %1354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1355 = getelementptr inbounds %struct.GPR, %struct.GPR* %1354, i32 0, i32 21
  %1356 = getelementptr inbounds %struct.Reg, %struct.Reg* %1355, i32 0, i32 0
  %R10D.i1628 = bitcast %union.anon* %1356 to i32*
  %1357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1358 = getelementptr inbounds %struct.GPR, %struct.GPR* %1357, i32 0, i32 15
  %1359 = getelementptr inbounds %struct.Reg, %struct.Reg* %1358, i32 0, i32 0
  %RBP.i1629 = bitcast %union.anon* %1359 to i64*
  %1360 = bitcast i32* %R10D.i1628 to i64*
  %1361 = load i64, i64* %RBP.i1629
  %1362 = sub i64 %1361, 24
  %1363 = load i64, i64* %PC.i1627
  %1364 = add i64 %1363, 4
  store i64 %1364, i64* %PC.i1627
  %1365 = inttoptr i64 %1362 to i32*
  %1366 = load i32, i32* %1365
  %1367 = zext i32 %1366 to i64
  store i64 %1367, i64* %1360, align 8
  store %struct.Memory* %loadMem_44169d, %struct.Memory** %MEMORY
  %loadMem_4416a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1369 = getelementptr inbounds %struct.GPR, %struct.GPR* %1368, i32 0, i32 33
  %1370 = getelementptr inbounds %struct.Reg, %struct.Reg* %1369, i32 0, i32 0
  %PC.i1625 = bitcast %union.anon* %1370 to i64*
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1372 = getelementptr inbounds %struct.GPR, %struct.GPR* %1371, i32 0, i32 21
  %1373 = getelementptr inbounds %struct.Reg, %struct.Reg* %1372, i32 0, i32 0
  %R10D.i1626 = bitcast %union.anon* %1373 to i32*
  %1374 = bitcast i32* %R10D.i1626 to i64*
  %1375 = load i32, i32* %R10D.i1626
  %1376 = zext i32 %1375 to i64
  %1377 = load i64, i64* %PC.i1625
  %1378 = add i64 %1377, 4
  store i64 %1378, i64* %PC.i1625
  %1379 = shl i64 %1376, 32
  %1380 = ashr exact i64 %1379, 32
  %1381 = ashr i64 %1380, 1
  %1382 = lshr i64 %1381, 1
  %1383 = trunc i64 %1381 to i8
  %1384 = and i8 %1383, 1
  %1385 = trunc i64 %1382 to i32
  %1386 = and i64 %1382, 4294967295
  store i64 %1386, i64* %1374, align 8
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1384, i8* %1387, align 1
  %1388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1389 = and i32 %1385, 255
  %1390 = call i32 @llvm.ctpop.i32(i32 %1389)
  %1391 = trunc i32 %1390 to i8
  %1392 = and i8 %1391, 1
  %1393 = xor i8 %1392, 1
  store i8 %1393, i8* %1388, align 1
  %1394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1394, align 1
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1396 = icmp eq i32 %1385, 0
  %1397 = zext i1 %1396 to i8
  store i8 %1397, i8* %1395, align 1
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1399 = lshr i32 %1385, 31
  %1400 = trunc i32 %1399 to i8
  store i8 %1400, i8* %1398, align 1
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1401, align 1
  store %struct.Memory* %loadMem_4416a1, %struct.Memory** %MEMORY
  %loadMem_4416a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1403 = getelementptr inbounds %struct.GPR, %struct.GPR* %1402, i32 0, i32 33
  %1404 = getelementptr inbounds %struct.Reg, %struct.Reg* %1403, i32 0, i32 0
  %PC.i1622 = bitcast %union.anon* %1404 to i64*
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1406 = getelementptr inbounds %struct.GPR, %struct.GPR* %1405, i32 0, i32 21
  %1407 = getelementptr inbounds %struct.Reg, %struct.Reg* %1406, i32 0, i32 0
  %R10D.i1623 = bitcast %union.anon* %1407 to i32*
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1409 = getelementptr inbounds %struct.GPR, %struct.GPR* %1408, i32 0, i32 11
  %1410 = getelementptr inbounds %struct.Reg, %struct.Reg* %1409, i32 0, i32 0
  %RDI.i1624 = bitcast %union.anon* %1410 to i64*
  %1411 = load i32, i32* %R10D.i1623
  %1412 = zext i32 %1411 to i64
  %1413 = load i64, i64* %PC.i1622
  %1414 = add i64 %1413, 3
  store i64 %1414, i64* %PC.i1622
  %1415 = shl i64 %1412, 32
  %1416 = ashr exact i64 %1415, 32
  store i64 %1416, i64* %RDI.i1624, align 8
  store %struct.Memory* %loadMem_4416a5, %struct.Memory** %MEMORY
  %loadMem_4416a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1418 = getelementptr inbounds %struct.GPR, %struct.GPR* %1417, i32 0, i32 33
  %1419 = getelementptr inbounds %struct.Reg, %struct.Reg* %1418, i32 0, i32 0
  %PC.i1618 = bitcast %union.anon* %1419 to i64*
  %1420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1421 = getelementptr inbounds %struct.GPR, %struct.GPR* %1420, i32 0, i32 21
  %1422 = getelementptr inbounds %struct.Reg, %struct.Reg* %1421, i32 0, i32 0
  %R10D.i1619 = bitcast %union.anon* %1422 to i32*
  %1423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1424 = getelementptr inbounds %struct.GPR, %struct.GPR* %1423, i32 0, i32 1
  %1425 = getelementptr inbounds %struct.Reg, %struct.Reg* %1424, i32 0, i32 0
  %RAX.i1620 = bitcast %union.anon* %1425 to i64*
  %1426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1427 = getelementptr inbounds %struct.GPR, %struct.GPR* %1426, i32 0, i32 11
  %1428 = getelementptr inbounds %struct.Reg, %struct.Reg* %1427, i32 0, i32 0
  %RDI.i1621 = bitcast %union.anon* %1428 to i64*
  %1429 = bitcast i32* %R10D.i1619 to i64*
  %1430 = load i64, i64* %RAX.i1620
  %1431 = load i64, i64* %RDI.i1621
  %1432 = mul i64 %1431, 4
  %1433 = add i64 %1432, %1430
  %1434 = load i64, i64* %PC.i1618
  %1435 = add i64 %1434, 4
  store i64 %1435, i64* %PC.i1618
  %1436 = inttoptr i64 %1433 to i32*
  %1437 = load i32, i32* %1436
  %1438 = zext i32 %1437 to i64
  store i64 %1438, i64* %1429, align 8
  store %struct.Memory* %loadMem_4416a8, %struct.Memory** %MEMORY
  %loadMem_4416ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %1439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1440 = getelementptr inbounds %struct.GPR, %struct.GPR* %1439, i32 0, i32 33
  %1441 = getelementptr inbounds %struct.Reg, %struct.Reg* %1440, i32 0, i32 0
  %PC.i1615 = bitcast %union.anon* %1441 to i64*
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1443 = getelementptr inbounds %struct.GPR, %struct.GPR* %1442, i32 0, i32 21
  %1444 = getelementptr inbounds %struct.Reg, %struct.Reg* %1443, i32 0, i32 0
  %R10D.i1616 = bitcast %union.anon* %1444 to i32*
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1446 = getelementptr inbounds %struct.GPR, %struct.GPR* %1445, i32 0, i32 15
  %1447 = getelementptr inbounds %struct.Reg, %struct.Reg* %1446, i32 0, i32 0
  %RBP.i1617 = bitcast %union.anon* %1447 to i64*
  %1448 = load i64, i64* %RBP.i1617
  %1449 = sub i64 %1448, 16
  %1450 = load i32, i32* %R10D.i1616
  %1451 = zext i32 %1450 to i64
  %1452 = load i64, i64* %PC.i1615
  %1453 = add i64 %1452, 4
  store i64 %1453, i64* %PC.i1615
  %1454 = inttoptr i64 %1449 to i32*
  store i32 %1450, i32* %1454
  store %struct.Memory* %loadMem_4416ac, %struct.Memory** %MEMORY
  %loadMem_4416b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1456 = getelementptr inbounds %struct.GPR, %struct.GPR* %1455, i32 0, i32 33
  %1457 = getelementptr inbounds %struct.Reg, %struct.Reg* %1456, i32 0, i32 0
  %PC.i1612 = bitcast %union.anon* %1457 to i64*
  %1458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1459 = getelementptr inbounds %struct.GPR, %struct.GPR* %1458, i32 0, i32 11
  %1460 = getelementptr inbounds %struct.Reg, %struct.Reg* %1459, i32 0, i32 0
  %RDI.i1613 = bitcast %union.anon* %1460 to i64*
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1462 = getelementptr inbounds %struct.GPR, %struct.GPR* %1461, i32 0, i32 15
  %1463 = getelementptr inbounds %struct.Reg, %struct.Reg* %1462, i32 0, i32 0
  %RBP.i1614 = bitcast %union.anon* %1463 to i64*
  %1464 = load i64, i64* %RBP.i1614
  %1465 = sub i64 %1464, 16
  %1466 = load i64, i64* %PC.i1612
  %1467 = add i64 %1466, 3
  store i64 %1467, i64* %PC.i1612
  %1468 = inttoptr i64 %1465 to i32*
  %1469 = load i32, i32* %1468
  %1470 = zext i32 %1469 to i64
  store i64 %1470, i64* %RDI.i1613, align 8
  store %struct.Memory* %loadMem_4416b0, %struct.Memory** %MEMORY
  %loadMem1_4416b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1472 = getelementptr inbounds %struct.GPR, %struct.GPR* %1471, i32 0, i32 33
  %1473 = getelementptr inbounds %struct.Reg, %struct.Reg* %1472, i32 0, i32 0
  %PC.i1611 = bitcast %union.anon* %1473 to i64*
  %1474 = load i64, i64* %PC.i1611
  %1475 = add i64 %1474, -2675
  %1476 = load i64, i64* %PC.i1611
  %1477 = add i64 %1476, 5
  %1478 = load i64, i64* %PC.i1611
  %1479 = add i64 %1478, 5
  store i64 %1479, i64* %PC.i1611
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1481 = load i64, i64* %1480, align 8
  %1482 = add i64 %1481, -8
  %1483 = inttoptr i64 %1482 to i64*
  store i64 %1477, i64* %1483
  store i64 %1482, i64* %1480, align 8
  %1484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1475, i64* %1484, align 8
  store %struct.Memory* %loadMem1_4416b3, %struct.Memory** %MEMORY
  %loadMem2_4416b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4416b3 = load i64, i64* %3
  %call2_4416b3 = call %struct.Memory* @sub_440c40.SetModesAndRefframe(%struct.State* %0, i64 %loadPC_4416b3, %struct.Memory* %loadMem2_4416b3)
  store %struct.Memory* %call2_4416b3, %struct.Memory** %MEMORY
  %loadMem_4416b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1486 = getelementptr inbounds %struct.GPR, %struct.GPR* %1485, i32 0, i32 33
  %1487 = getelementptr inbounds %struct.Reg, %struct.Reg* %1486, i32 0, i32 0
  %PC.i1608 = bitcast %union.anon* %1487 to i64*
  %1488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1489 = getelementptr inbounds %struct.GPR, %struct.GPR* %1488, i32 0, i32 11
  %1490 = getelementptr inbounds %struct.Reg, %struct.Reg* %1489, i32 0, i32 0
  %RDI.i1609 = bitcast %union.anon* %1490 to i64*
  %1491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1492 = getelementptr inbounds %struct.GPR, %struct.GPR* %1491, i32 0, i32 15
  %1493 = getelementptr inbounds %struct.Reg, %struct.Reg* %1492, i32 0, i32 0
  %RBP.i1610 = bitcast %union.anon* %1493 to i64*
  %1494 = load i64, i64* %RBP.i1610
  %1495 = sub i64 %1494, 12
  %1496 = load i64, i64* %PC.i1608
  %1497 = add i64 %1496, 3
  store i64 %1497, i64* %PC.i1608
  %1498 = inttoptr i64 %1495 to i32*
  %1499 = load i32, i32* %1498
  %1500 = zext i32 %1499 to i64
  store i64 %1500, i64* %RDI.i1609, align 8
  store %struct.Memory* %loadMem_4416b8, %struct.Memory** %MEMORY
  %loadMem_4416bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1502 = getelementptr inbounds %struct.GPR, %struct.GPR* %1501, i32 0, i32 33
  %1503 = getelementptr inbounds %struct.Reg, %struct.Reg* %1502, i32 0, i32 0
  %PC.i1605 = bitcast %union.anon* %1503 to i64*
  %1504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1505 = getelementptr inbounds %struct.GPR, %struct.GPR* %1504, i32 0, i32 9
  %1506 = getelementptr inbounds %struct.Reg, %struct.Reg* %1505, i32 0, i32 0
  %RSI.i1606 = bitcast %union.anon* %1506 to i64*
  %1507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1508 = getelementptr inbounds %struct.GPR, %struct.GPR* %1507, i32 0, i32 15
  %1509 = getelementptr inbounds %struct.Reg, %struct.Reg* %1508, i32 0, i32 0
  %RBP.i1607 = bitcast %union.anon* %1509 to i64*
  %1510 = load i64, i64* %RBP.i1607
  %1511 = sub i64 %1510, 24
  %1512 = load i64, i64* %PC.i1605
  %1513 = add i64 %1512, 3
  store i64 %1513, i64* %PC.i1605
  %1514 = inttoptr i64 %1511 to i32*
  %1515 = load i32, i32* %1514
  %1516 = zext i32 %1515 to i64
  store i64 %1516, i64* %RSI.i1606, align 8
  store %struct.Memory* %loadMem_4416bb, %struct.Memory** %MEMORY
  %loadMem_4416be = load %struct.Memory*, %struct.Memory** %MEMORY
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1518 = getelementptr inbounds %struct.GPR, %struct.GPR* %1517, i32 0, i32 33
  %1519 = getelementptr inbounds %struct.Reg, %struct.Reg* %1518, i32 0, i32 0
  %PC.i1602 = bitcast %union.anon* %1519 to i64*
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1521 = getelementptr inbounds %struct.GPR, %struct.GPR* %1520, i32 0, i32 7
  %1522 = getelementptr inbounds %struct.Reg, %struct.Reg* %1521, i32 0, i32 0
  %RDX.i1603 = bitcast %union.anon* %1522 to i64*
  %1523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1524 = getelementptr inbounds %struct.GPR, %struct.GPR* %1523, i32 0, i32 15
  %1525 = getelementptr inbounds %struct.Reg, %struct.Reg* %1524, i32 0, i32 0
  %RBP.i1604 = bitcast %union.anon* %1525 to i64*
  %1526 = load i64, i64* %RBP.i1604
  %1527 = sub i64 %1526, 20
  %1528 = load i64, i64* %PC.i1602
  %1529 = add i64 %1528, 3
  store i64 %1529, i64* %PC.i1602
  %1530 = inttoptr i64 %1527 to i32*
  %1531 = load i32, i32* %1530
  %1532 = zext i32 %1531 to i64
  store i64 %1532, i64* %RDX.i1603, align 8
  store %struct.Memory* %loadMem_4416be, %struct.Memory** %MEMORY
  %loadMem_4416c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1534 = getelementptr inbounds %struct.GPR, %struct.GPR* %1533, i32 0, i32 33
  %1535 = getelementptr inbounds %struct.Reg, %struct.Reg* %1534, i32 0, i32 0
  %PC.i1599 = bitcast %union.anon* %1535 to i64*
  %1536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1537 = getelementptr inbounds %struct.GPR, %struct.GPR* %1536, i32 0, i32 5
  %1538 = getelementptr inbounds %struct.Reg, %struct.Reg* %1537, i32 0, i32 0
  %RCX.i1600 = bitcast %union.anon* %1538 to i64*
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1540 = getelementptr inbounds %struct.GPR, %struct.GPR* %1539, i32 0, i32 15
  %1541 = getelementptr inbounds %struct.Reg, %struct.Reg* %1540, i32 0, i32 0
  %RBP.i1601 = bitcast %union.anon* %1541 to i64*
  %1542 = load i64, i64* %RBP.i1601
  %1543 = sub i64 %1542, 42
  %1544 = load i64, i64* %PC.i1599
  %1545 = add i64 %1544, 4
  store i64 %1545, i64* %PC.i1599
  %1546 = inttoptr i64 %1543 to i16*
  %1547 = load i16, i16* %1546
  %1548 = sext i16 %1547 to i64
  %1549 = and i64 %1548, 4294967295
  store i64 %1549, i64* %RCX.i1600, align 8
  store %struct.Memory* %loadMem_4416c1, %struct.Memory** %MEMORY
  %loadMem_4416c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1551 = getelementptr inbounds %struct.GPR, %struct.GPR* %1550, i32 0, i32 33
  %1552 = getelementptr inbounds %struct.Reg, %struct.Reg* %1551, i32 0, i32 0
  %PC.i1597 = bitcast %union.anon* %1552 to i64*
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1554 = getelementptr inbounds %struct.GPR, %struct.GPR* %1553, i32 0, i32 17
  %1555 = getelementptr inbounds %struct.Reg, %struct.Reg* %1554, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %1555 to i32*
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1557 = getelementptr inbounds %struct.GPR, %struct.GPR* %1556, i32 0, i32 15
  %1558 = getelementptr inbounds %struct.Reg, %struct.Reg* %1557, i32 0, i32 0
  %RBP.i1598 = bitcast %union.anon* %1558 to i64*
  %1559 = bitcast i32* %R8D.i to i64*
  %1560 = load i64, i64* %RBP.i1598
  %1561 = sub i64 %1560, 36
  %1562 = load i64, i64* %PC.i1597
  %1563 = add i64 %1562, 4
  store i64 %1563, i64* %PC.i1597
  %1564 = inttoptr i64 %1561 to i32*
  %1565 = load i32, i32* %1564
  %1566 = zext i32 %1565 to i64
  store i64 %1566, i64* %1559, align 8
  store %struct.Memory* %loadMem_4416c5, %struct.Memory** %MEMORY
  %loadMem_4416c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1568 = getelementptr inbounds %struct.GPR, %struct.GPR* %1567, i32 0, i32 33
  %1569 = getelementptr inbounds %struct.Reg, %struct.Reg* %1568, i32 0, i32 0
  %PC.i1594 = bitcast %union.anon* %1569 to i64*
  %1570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1571 = getelementptr inbounds %struct.GPR, %struct.GPR* %1570, i32 0, i32 19
  %1572 = getelementptr inbounds %struct.Reg, %struct.Reg* %1571, i32 0, i32 0
  %R9D.i1595 = bitcast %union.anon* %1572 to i32*
  %1573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1574 = getelementptr inbounds %struct.GPR, %struct.GPR* %1573, i32 0, i32 15
  %1575 = getelementptr inbounds %struct.Reg, %struct.Reg* %1574, i32 0, i32 0
  %RBP.i1596 = bitcast %union.anon* %1575 to i64*
  %1576 = bitcast i32* %R9D.i1595 to i64*
  %1577 = load i64, i64* %RBP.i1596
  %1578 = sub i64 %1577, 40
  %1579 = load i64, i64* %PC.i1594
  %1580 = add i64 %1579, 4
  store i64 %1580, i64* %PC.i1594
  %1581 = inttoptr i64 %1578 to i32*
  %1582 = load i32, i32* %1581
  %1583 = zext i32 %1582 to i64
  store i64 %1583, i64* %1576, align 8
  store %struct.Memory* %loadMem_4416c9, %struct.Memory** %MEMORY
  %loadMem_4416cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1585 = getelementptr inbounds %struct.GPR, %struct.GPR* %1584, i32 0, i32 33
  %1586 = getelementptr inbounds %struct.Reg, %struct.Reg* %1585, i32 0, i32 0
  %PC.i1591 = bitcast %union.anon* %1586 to i64*
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1588 = getelementptr inbounds %struct.GPR, %struct.GPR* %1587, i32 0, i32 23
  %1589 = getelementptr inbounds %struct.Reg, %struct.Reg* %1588, i32 0, i32 0
  %R11W.i1592 = bitcast %union.anon* %1589 to i16*
  %1590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1591 = getelementptr inbounds %struct.GPR, %struct.GPR* %1590, i32 0, i32 15
  %1592 = getelementptr inbounds %struct.Reg, %struct.Reg* %1591, i32 0, i32 0
  %RBP.i1593 = bitcast %union.anon* %1592 to i64*
  %1593 = load i64, i64* %RBP.i1593
  %1594 = sub i64 %1593, 44
  %1595 = load i64, i64* %PC.i1591
  %1596 = add i64 %1595, 5
  store i64 %1596, i64* %PC.i1591
  %1597 = inttoptr i64 %1594 to i16*
  %1598 = load i16, i16* %1597
  store i16 %1598, i16* %R11W.i1592, align 2
  store %struct.Memory* %loadMem_4416cd, %struct.Memory** %MEMORY
  %loadMem_4416d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1600 = getelementptr inbounds %struct.GPR, %struct.GPR* %1599, i32 0, i32 33
  %1601 = getelementptr inbounds %struct.Reg, %struct.Reg* %1600, i32 0, i32 0
  %PC.i1589 = bitcast %union.anon* %1601 to i64*
  %1602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1603 = getelementptr inbounds %struct.GPR, %struct.GPR* %1602, i32 0, i32 23
  %1604 = getelementptr inbounds %struct.Reg, %struct.Reg* %1603, i32 0, i32 0
  %R11W.i = bitcast %union.anon* %1604 to i16*
  %1605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1606 = getelementptr inbounds %struct.GPR, %struct.GPR* %1605, i32 0, i32 21
  %1607 = getelementptr inbounds %struct.Reg, %struct.Reg* %1606, i32 0, i32 0
  %R10D.i1590 = bitcast %union.anon* %1607 to i32*
  %1608 = bitcast i32* %R10D.i1590 to i64*
  %1609 = load i16, i16* %R11W.i
  %1610 = zext i16 %1609 to i64
  %1611 = load i64, i64* %PC.i1589
  %1612 = add i64 %1611, 4
  store i64 %1612, i64* %PC.i1589
  %1613 = trunc i64 %1610 to i32
  %1614 = shl i32 %1613, 16
  %1615 = ashr exact i32 %1614, 16
  %1616 = zext i32 %1615 to i64
  store i64 %1616, i64* %1608, align 8
  store %struct.Memory* %loadMem_4416d2, %struct.Memory** %MEMORY
  %loadMem_4416d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1618 = getelementptr inbounds %struct.GPR, %struct.GPR* %1617, i32 0, i32 33
  %1619 = getelementptr inbounds %struct.Reg, %struct.Reg* %1618, i32 0, i32 0
  %PC.i1586 = bitcast %union.anon* %1619 to i64*
  %1620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1621 = getelementptr inbounds %struct.GPR, %struct.GPR* %1620, i32 0, i32 21
  %1622 = getelementptr inbounds %struct.Reg, %struct.Reg* %1621, i32 0, i32 0
  %R10D.i1587 = bitcast %union.anon* %1622 to i32*
  %1623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1624 = getelementptr inbounds %struct.GPR, %struct.GPR* %1623, i32 0, i32 13
  %1625 = getelementptr inbounds %struct.Reg, %struct.Reg* %1624, i32 0, i32 0
  %RSP.i1588 = bitcast %union.anon* %1625 to i64*
  %1626 = load i64, i64* %RSP.i1588
  %1627 = load i32, i32* %R10D.i1587
  %1628 = zext i32 %1627 to i64
  %1629 = load i64, i64* %PC.i1586
  %1630 = add i64 %1629, 4
  store i64 %1630, i64* %PC.i1586
  %1631 = inttoptr i64 %1626 to i32*
  store i32 %1627, i32* %1631
  store %struct.Memory* %loadMem_4416d6, %struct.Memory** %MEMORY
  %loadMem_4416da = load %struct.Memory*, %struct.Memory** %MEMORY
  %1632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1633 = getelementptr inbounds %struct.GPR, %struct.GPR* %1632, i32 0, i32 33
  %1634 = getelementptr inbounds %struct.Reg, %struct.Reg* %1633, i32 0, i32 0
  %PC.i1583 = bitcast %union.anon* %1634 to i64*
  %1635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1636 = getelementptr inbounds %struct.GPR, %struct.GPR* %1635, i32 0, i32 21
  %1637 = getelementptr inbounds %struct.Reg, %struct.Reg* %1636, i32 0, i32 0
  %R10D.i1584 = bitcast %union.anon* %1637 to i32*
  %1638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1639 = getelementptr inbounds %struct.GPR, %struct.GPR* %1638, i32 0, i32 15
  %1640 = getelementptr inbounds %struct.Reg, %struct.Reg* %1639, i32 0, i32 0
  %RBP.i1585 = bitcast %union.anon* %1640 to i64*
  %1641 = bitcast i32* %R10D.i1584 to i64*
  %1642 = load i64, i64* %RBP.i1585
  %1643 = sub i64 %1642, 46
  %1644 = load i64, i64* %PC.i1583
  %1645 = add i64 %1644, 5
  store i64 %1645, i64* %PC.i1583
  %1646 = inttoptr i64 %1643 to i16*
  %1647 = load i16, i16* %1646
  %1648 = sext i16 %1647 to i64
  %1649 = and i64 %1648, 4294967295
  store i64 %1649, i64* %1641, align 8
  store %struct.Memory* %loadMem_4416da, %struct.Memory** %MEMORY
  %loadMem_4416df = load %struct.Memory*, %struct.Memory** %MEMORY
  %1650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1651 = getelementptr inbounds %struct.GPR, %struct.GPR* %1650, i32 0, i32 33
  %1652 = getelementptr inbounds %struct.Reg, %struct.Reg* %1651, i32 0, i32 0
  %PC.i1580 = bitcast %union.anon* %1652 to i64*
  %1653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1654 = getelementptr inbounds %struct.GPR, %struct.GPR* %1653, i32 0, i32 21
  %1655 = getelementptr inbounds %struct.Reg, %struct.Reg* %1654, i32 0, i32 0
  %R10D.i1581 = bitcast %union.anon* %1655 to i32*
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1657 = getelementptr inbounds %struct.GPR, %struct.GPR* %1656, i32 0, i32 13
  %1658 = getelementptr inbounds %struct.Reg, %struct.Reg* %1657, i32 0, i32 0
  %RSP.i1582 = bitcast %union.anon* %1658 to i64*
  %1659 = load i64, i64* %RSP.i1582
  %1660 = add i64 %1659, 8
  %1661 = load i32, i32* %R10D.i1581
  %1662 = zext i32 %1661 to i64
  %1663 = load i64, i64* %PC.i1580
  %1664 = add i64 %1663, 5
  store i64 %1664, i64* %PC.i1580
  %1665 = inttoptr i64 %1660 to i32*
  store i32 %1661, i32* %1665
  store %struct.Memory* %loadMem_4416df, %struct.Memory** %MEMORY
  %loadMem1_4416e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1667 = getelementptr inbounds %struct.GPR, %struct.GPR* %1666, i32 0, i32 33
  %1668 = getelementptr inbounds %struct.Reg, %struct.Reg* %1667, i32 0, i32 0
  %PC.i1579 = bitcast %union.anon* %1668 to i64*
  %1669 = load i64, i64* %PC.i1579
  %1670 = add i64 %1669, -6692
  %1671 = load i64, i64* %PC.i1579
  %1672 = add i64 %1671, 5
  %1673 = load i64, i64* %PC.i1579
  %1674 = add i64 %1673, 5
  store i64 %1674, i64* %PC.i1579
  %1675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1676 = load i64, i64* %1675, align 8
  %1677 = add i64 %1676, -8
  %1678 = inttoptr i64 %1677 to i64*
  store i64 %1672, i64* %1678
  store i64 %1677, i64* %1675, align 8
  %1679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1670, i64* %1679, align 8
  store %struct.Memory* %loadMem1_4416e4, %struct.Memory** %MEMORY
  %loadMem2_4416e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4416e4 = load i64, i64* %3
  %call2_4416e4 = call %struct.Memory* @sub_43fcc0.ChromaPrediction4x4(%struct.State* %0, i64 %loadPC_4416e4, %struct.Memory* %loadMem2_4416e4)
  store %struct.Memory* %call2_4416e4, %struct.Memory** %MEMORY
  %loadMem_4416e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1681 = getelementptr inbounds %struct.GPR, %struct.GPR* %1680, i32 0, i32 33
  %1682 = getelementptr inbounds %struct.Reg, %struct.Reg* %1681, i32 0, i32 0
  %PC.i1576 = bitcast %union.anon* %1682 to i64*
  %1683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1684 = getelementptr inbounds %struct.GPR, %struct.GPR* %1683, i32 0, i32 1
  %1685 = getelementptr inbounds %struct.Reg, %struct.Reg* %1684, i32 0, i32 0
  %RAX.i1577 = bitcast %union.anon* %1685 to i64*
  %1686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1687 = getelementptr inbounds %struct.GPR, %struct.GPR* %1686, i32 0, i32 15
  %1688 = getelementptr inbounds %struct.Reg, %struct.Reg* %1687, i32 0, i32 0
  %RBP.i1578 = bitcast %union.anon* %1688 to i64*
  %1689 = load i64, i64* %RBP.i1578
  %1690 = sub i64 %1689, 24
  %1691 = load i64, i64* %PC.i1576
  %1692 = add i64 %1691, 3
  store i64 %1692, i64* %PC.i1576
  %1693 = inttoptr i64 %1690 to i32*
  %1694 = load i32, i32* %1693
  %1695 = zext i32 %1694 to i64
  store i64 %1695, i64* %RAX.i1577, align 8
  store %struct.Memory* %loadMem_4416e9, %struct.Memory** %MEMORY
  %loadMem_4416ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %1696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1697 = getelementptr inbounds %struct.GPR, %struct.GPR* %1696, i32 0, i32 33
  %1698 = getelementptr inbounds %struct.Reg, %struct.Reg* %1697, i32 0, i32 0
  %PC.i1574 = bitcast %union.anon* %1698 to i64*
  %1699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1700 = getelementptr inbounds %struct.GPR, %struct.GPR* %1699, i32 0, i32 1
  %1701 = getelementptr inbounds %struct.Reg, %struct.Reg* %1700, i32 0, i32 0
  %RAX.i1575 = bitcast %union.anon* %1701 to i64*
  %1702 = load i64, i64* %RAX.i1575
  %1703 = load i64, i64* %PC.i1574
  %1704 = add i64 %1703, 3
  store i64 %1704, i64* %PC.i1574
  %1705 = trunc i64 %1702 to i32
  %1706 = add i32 4, %1705
  %1707 = zext i32 %1706 to i64
  store i64 %1707, i64* %RAX.i1575, align 8
  %1708 = icmp ult i32 %1706, %1705
  %1709 = icmp ult i32 %1706, 4
  %1710 = or i1 %1708, %1709
  %1711 = zext i1 %1710 to i8
  %1712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1711, i8* %1712, align 1
  %1713 = and i32 %1706, 255
  %1714 = call i32 @llvm.ctpop.i32(i32 %1713)
  %1715 = trunc i32 %1714 to i8
  %1716 = and i8 %1715, 1
  %1717 = xor i8 %1716, 1
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1717, i8* %1718, align 1
  %1719 = xor i64 4, %1702
  %1720 = trunc i64 %1719 to i32
  %1721 = xor i32 %1720, %1706
  %1722 = lshr i32 %1721, 4
  %1723 = trunc i32 %1722 to i8
  %1724 = and i8 %1723, 1
  %1725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1724, i8* %1725, align 1
  %1726 = icmp eq i32 %1706, 0
  %1727 = zext i1 %1726 to i8
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1727, i8* %1728, align 1
  %1729 = lshr i32 %1706, 31
  %1730 = trunc i32 %1729 to i8
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1730, i8* %1731, align 1
  %1732 = lshr i32 %1705, 31
  %1733 = xor i32 %1729, %1732
  %1734 = add i32 %1733, %1729
  %1735 = icmp eq i32 %1734, 2
  %1736 = zext i1 %1735 to i8
  %1737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1736, i8* %1737, align 1
  store %struct.Memory* %loadMem_4416ec, %struct.Memory** %MEMORY
  %loadMem_4416ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %1738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1739 = getelementptr inbounds %struct.GPR, %struct.GPR* %1738, i32 0, i32 33
  %1740 = getelementptr inbounds %struct.Reg, %struct.Reg* %1739, i32 0, i32 0
  %PC.i1571 = bitcast %union.anon* %1740 to i64*
  %1741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1742 = getelementptr inbounds %struct.GPR, %struct.GPR* %1741, i32 0, i32 1
  %1743 = getelementptr inbounds %struct.Reg, %struct.Reg* %1742, i32 0, i32 0
  %EAX.i1572 = bitcast %union.anon* %1743 to i32*
  %1744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1745 = getelementptr inbounds %struct.GPR, %struct.GPR* %1744, i32 0, i32 15
  %1746 = getelementptr inbounds %struct.Reg, %struct.Reg* %1745, i32 0, i32 0
  %RBP.i1573 = bitcast %union.anon* %1746 to i64*
  %1747 = load i64, i64* %RBP.i1573
  %1748 = sub i64 %1747, 24
  %1749 = load i32, i32* %EAX.i1572
  %1750 = zext i32 %1749 to i64
  %1751 = load i64, i64* %PC.i1571
  %1752 = add i64 %1751, 3
  store i64 %1752, i64* %PC.i1571
  %1753 = inttoptr i64 %1748 to i32*
  store i32 %1749, i32* %1753
  store %struct.Memory* %loadMem_4416ef, %struct.Memory** %MEMORY
  %loadMem_4416f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1755 = getelementptr inbounds %struct.GPR, %struct.GPR* %1754, i32 0, i32 33
  %1756 = getelementptr inbounds %struct.Reg, %struct.Reg* %1755, i32 0, i32 0
  %PC.i1570 = bitcast %union.anon* %1756 to i64*
  %1757 = load i64, i64* %PC.i1570
  %1758 = add i64 %1757, -164
  %1759 = load i64, i64* %PC.i1570
  %1760 = add i64 %1759, 5
  store i64 %1760, i64* %PC.i1570
  %1761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1758, i64* %1761, align 8
  store %struct.Memory* %loadMem_4416f2, %struct.Memory** %MEMORY
  br label %block_.L_44164e

block_.L_4416f7:                                  ; preds = %block_.L_44164e
  %loadMem_4416f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1763 = getelementptr inbounds %struct.GPR, %struct.GPR* %1762, i32 0, i32 33
  %1764 = getelementptr inbounds %struct.Reg, %struct.Reg* %1763, i32 0, i32 0
  %PC.i1569 = bitcast %union.anon* %1764 to i64*
  %1765 = load i64, i64* %PC.i1569
  %1766 = add i64 %1765, 5
  %1767 = load i64, i64* %PC.i1569
  %1768 = add i64 %1767, 5
  store i64 %1768, i64* %PC.i1569
  %1769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1766, i64* %1769, align 8
  store %struct.Memory* %loadMem_4416f7, %struct.Memory** %MEMORY
  br label %block_.L_4416fc

block_.L_4416fc:                                  ; preds = %block_.L_4416f7
  %loadMem_4416fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1771 = getelementptr inbounds %struct.GPR, %struct.GPR* %1770, i32 0, i32 33
  %1772 = getelementptr inbounds %struct.Reg, %struct.Reg* %1771, i32 0, i32 0
  %PC.i1566 = bitcast %union.anon* %1772 to i64*
  %1773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1774 = getelementptr inbounds %struct.GPR, %struct.GPR* %1773, i32 0, i32 1
  %1775 = getelementptr inbounds %struct.Reg, %struct.Reg* %1774, i32 0, i32 0
  %RAX.i1567 = bitcast %union.anon* %1775 to i64*
  %1776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1777 = getelementptr inbounds %struct.GPR, %struct.GPR* %1776, i32 0, i32 15
  %1778 = getelementptr inbounds %struct.Reg, %struct.Reg* %1777, i32 0, i32 0
  %RBP.i1568 = bitcast %union.anon* %1778 to i64*
  %1779 = load i64, i64* %RBP.i1568
  %1780 = sub i64 %1779, 20
  %1781 = load i64, i64* %PC.i1566
  %1782 = add i64 %1781, 3
  store i64 %1782, i64* %PC.i1566
  %1783 = inttoptr i64 %1780 to i32*
  %1784 = load i32, i32* %1783
  %1785 = zext i32 %1784 to i64
  store i64 %1785, i64* %RAX.i1567, align 8
  store %struct.Memory* %loadMem_4416fc, %struct.Memory** %MEMORY
  %loadMem_4416ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %1786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1787 = getelementptr inbounds %struct.GPR, %struct.GPR* %1786, i32 0, i32 33
  %1788 = getelementptr inbounds %struct.Reg, %struct.Reg* %1787, i32 0, i32 0
  %PC.i1564 = bitcast %union.anon* %1788 to i64*
  %1789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1790 = getelementptr inbounds %struct.GPR, %struct.GPR* %1789, i32 0, i32 1
  %1791 = getelementptr inbounds %struct.Reg, %struct.Reg* %1790, i32 0, i32 0
  %RAX.i1565 = bitcast %union.anon* %1791 to i64*
  %1792 = load i64, i64* %RAX.i1565
  %1793 = load i64, i64* %PC.i1564
  %1794 = add i64 %1793, 3
  store i64 %1794, i64* %PC.i1564
  %1795 = trunc i64 %1792 to i32
  %1796 = add i32 4, %1795
  %1797 = zext i32 %1796 to i64
  store i64 %1797, i64* %RAX.i1565, align 8
  %1798 = icmp ult i32 %1796, %1795
  %1799 = icmp ult i32 %1796, 4
  %1800 = or i1 %1798, %1799
  %1801 = zext i1 %1800 to i8
  %1802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1801, i8* %1802, align 1
  %1803 = and i32 %1796, 255
  %1804 = call i32 @llvm.ctpop.i32(i32 %1803)
  %1805 = trunc i32 %1804 to i8
  %1806 = and i8 %1805, 1
  %1807 = xor i8 %1806, 1
  %1808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1807, i8* %1808, align 1
  %1809 = xor i64 4, %1792
  %1810 = trunc i64 %1809 to i32
  %1811 = xor i32 %1810, %1796
  %1812 = lshr i32 %1811, 4
  %1813 = trunc i32 %1812 to i8
  %1814 = and i8 %1813, 1
  %1815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1814, i8* %1815, align 1
  %1816 = icmp eq i32 %1796, 0
  %1817 = zext i1 %1816 to i8
  %1818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1817, i8* %1818, align 1
  %1819 = lshr i32 %1796, 31
  %1820 = trunc i32 %1819 to i8
  %1821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1820, i8* %1821, align 1
  %1822 = lshr i32 %1795, 31
  %1823 = xor i32 %1819, %1822
  %1824 = add i32 %1823, %1819
  %1825 = icmp eq i32 %1824, 2
  %1826 = zext i1 %1825 to i8
  %1827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1826, i8* %1827, align 1
  store %struct.Memory* %loadMem_4416ff, %struct.Memory** %MEMORY
  %loadMem_441702 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1829 = getelementptr inbounds %struct.GPR, %struct.GPR* %1828, i32 0, i32 33
  %1830 = getelementptr inbounds %struct.Reg, %struct.Reg* %1829, i32 0, i32 0
  %PC.i1561 = bitcast %union.anon* %1830 to i64*
  %1831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1832 = getelementptr inbounds %struct.GPR, %struct.GPR* %1831, i32 0, i32 1
  %1833 = getelementptr inbounds %struct.Reg, %struct.Reg* %1832, i32 0, i32 0
  %EAX.i1562 = bitcast %union.anon* %1833 to i32*
  %1834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1835 = getelementptr inbounds %struct.GPR, %struct.GPR* %1834, i32 0, i32 15
  %1836 = getelementptr inbounds %struct.Reg, %struct.Reg* %1835, i32 0, i32 0
  %RBP.i1563 = bitcast %union.anon* %1836 to i64*
  %1837 = load i64, i64* %RBP.i1563
  %1838 = sub i64 %1837, 20
  %1839 = load i32, i32* %EAX.i1562
  %1840 = zext i32 %1839 to i64
  %1841 = load i64, i64* %PC.i1561
  %1842 = add i64 %1841, 3
  store i64 %1842, i64* %PC.i1561
  %1843 = inttoptr i64 %1838 to i32*
  store i32 %1839, i32* %1843
  store %struct.Memory* %loadMem_441702, %struct.Memory** %MEMORY
  %loadMem_441705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1845 = getelementptr inbounds %struct.GPR, %struct.GPR* %1844, i32 0, i32 33
  %1846 = getelementptr inbounds %struct.Reg, %struct.Reg* %1845, i32 0, i32 0
  %PC.i1560 = bitcast %union.anon* %1846 to i64*
  %1847 = load i64, i64* %PC.i1560
  %1848 = add i64 %1847, -213
  %1849 = load i64, i64* %PC.i1560
  %1850 = add i64 %1849, 5
  store i64 %1850, i64* %PC.i1560
  %1851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1848, i64* %1851, align 8
  store %struct.Memory* %loadMem_441705, %struct.Memory** %MEMORY
  br label %block_.L_441630

block_.L_44170a:                                  ; preds = %block_.L_441630
  %loadMem_44170a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1853 = getelementptr inbounds %struct.GPR, %struct.GPR* %1852, i32 0, i32 33
  %1854 = getelementptr inbounds %struct.Reg, %struct.Reg* %1853, i32 0, i32 0
  %PC.i1558 = bitcast %union.anon* %1854 to i64*
  %1855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1856 = getelementptr inbounds %struct.GPR, %struct.GPR* %1855, i32 0, i32 1
  %1857 = getelementptr inbounds %struct.Reg, %struct.Reg* %1856, i32 0, i32 0
  %RAX.i1559 = bitcast %union.anon* %1857 to i64*
  %1858 = load i64, i64* %PC.i1558
  %1859 = add i64 %1858, 8
  store i64 %1859, i64* %PC.i1558
  %1860 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1860, i64* %RAX.i1559, align 8
  store %struct.Memory* %loadMem_44170a, %struct.Memory** %MEMORY
  %loadMem_441712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1862 = getelementptr inbounds %struct.GPR, %struct.GPR* %1861, i32 0, i32 33
  %1863 = getelementptr inbounds %struct.Reg, %struct.Reg* %1862, i32 0, i32 0
  %PC.i1556 = bitcast %union.anon* %1863 to i64*
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1865 = getelementptr inbounds %struct.GPR, %struct.GPR* %1864, i32 0, i32 1
  %1866 = getelementptr inbounds %struct.Reg, %struct.Reg* %1865, i32 0, i32 0
  %RAX.i1557 = bitcast %union.anon* %1866 to i64*
  %1867 = load i64, i64* %RAX.i1557
  %1868 = add i64 %1867, 72392
  %1869 = load i64, i64* %PC.i1556
  %1870 = add i64 %1869, 7
  store i64 %1870, i64* %PC.i1556
  %1871 = inttoptr i64 %1868 to i32*
  %1872 = load i32, i32* %1871
  %1873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1873, align 1
  %1874 = and i32 %1872, 255
  %1875 = call i32 @llvm.ctpop.i32(i32 %1874)
  %1876 = trunc i32 %1875 to i8
  %1877 = and i8 %1876, 1
  %1878 = xor i8 %1877, 1
  %1879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1878, i8* %1879, align 1
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1880, align 1
  %1881 = icmp eq i32 %1872, 0
  %1882 = zext i1 %1881 to i8
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1882, i8* %1883, align 1
  %1884 = lshr i32 %1872, 31
  %1885 = trunc i32 %1884 to i8
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1885, i8* %1886, align 1
  %1887 = lshr i32 %1872, 31
  %1888 = xor i32 %1884, %1887
  %1889 = add i32 %1888, %1887
  %1890 = icmp eq i32 %1889, 2
  %1891 = zext i1 %1890 to i8
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1891, i8* %1892, align 1
  store %struct.Memory* %loadMem_441712, %struct.Memory** %MEMORY
  %loadMem_441719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1894 = getelementptr inbounds %struct.GPR, %struct.GPR* %1893, i32 0, i32 33
  %1895 = getelementptr inbounds %struct.Reg, %struct.Reg* %1894, i32 0, i32 0
  %PC.i1555 = bitcast %union.anon* %1895 to i64*
  %1896 = load i64, i64* %PC.i1555
  %1897 = add i64 %1896, 323
  %1898 = load i64, i64* %PC.i1555
  %1899 = add i64 %1898, 6
  %1900 = load i64, i64* %PC.i1555
  %1901 = add i64 %1900, 6
  store i64 %1901, i64* %PC.i1555
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1903 = load i8, i8* %1902, align 1
  store i8 %1903, i8* %BRANCH_TAKEN, align 1
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1905 = icmp ne i8 %1903, 0
  %1906 = select i1 %1905, i64 %1897, i64 %1899
  store i64 %1906, i64* %1904, align 8
  store %struct.Memory* %loadMem_441719, %struct.Memory** %MEMORY
  %loadBr_441719 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441719 = icmp eq i8 %loadBr_441719, 1
  br i1 %cmpBr_441719, label %block_.L_44185c, label %block_44171f

block_44171f:                                     ; preds = %block_.L_44170a
  %loadMem_44171f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1908 = getelementptr inbounds %struct.GPR, %struct.GPR* %1907, i32 0, i32 33
  %1909 = getelementptr inbounds %struct.Reg, %struct.Reg* %1908, i32 0, i32 0
  %PC.i1553 = bitcast %union.anon* %1909 to i64*
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1911 = getelementptr inbounds %struct.GPR, %struct.GPR* %1910, i32 0, i32 15
  %1912 = getelementptr inbounds %struct.Reg, %struct.Reg* %1911, i32 0, i32 0
  %RBP.i1554 = bitcast %union.anon* %1912 to i64*
  %1913 = load i64, i64* %RBP.i1554
  %1914 = sub i64 %1913, 28
  %1915 = load i64, i64* %PC.i1553
  %1916 = add i64 %1915, 7
  store i64 %1916, i64* %PC.i1553
  %1917 = inttoptr i64 %1914 to i32*
  store i32 0, i32* %1917
  store %struct.Memory* %loadMem_44171f, %struct.Memory** %MEMORY
  br label %block_.L_441726

block_.L_441726:                                  ; preds = %block_.L_441849, %block_44171f
  %loadMem_441726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1919 = getelementptr inbounds %struct.GPR, %struct.GPR* %1918, i32 0, i32 33
  %1920 = getelementptr inbounds %struct.Reg, %struct.Reg* %1919, i32 0, i32 0
  %PC.i1550 = bitcast %union.anon* %1920 to i64*
  %1921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1922 = getelementptr inbounds %struct.GPR, %struct.GPR* %1921, i32 0, i32 1
  %1923 = getelementptr inbounds %struct.Reg, %struct.Reg* %1922, i32 0, i32 0
  %RAX.i1551 = bitcast %union.anon* %1923 to i64*
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1925 = getelementptr inbounds %struct.GPR, %struct.GPR* %1924, i32 0, i32 15
  %1926 = getelementptr inbounds %struct.Reg, %struct.Reg* %1925, i32 0, i32 0
  %RBP.i1552 = bitcast %union.anon* %1926 to i64*
  %1927 = load i64, i64* %RBP.i1552
  %1928 = sub i64 %1927, 28
  %1929 = load i64, i64* %PC.i1550
  %1930 = add i64 %1929, 3
  store i64 %1930, i64* %PC.i1550
  %1931 = inttoptr i64 %1928 to i32*
  %1932 = load i32, i32* %1931
  %1933 = zext i32 %1932 to i64
  store i64 %1933, i64* %RAX.i1551, align 8
  store %struct.Memory* %loadMem_441726, %struct.Memory** %MEMORY
  %loadMem_441729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1935 = getelementptr inbounds %struct.GPR, %struct.GPR* %1934, i32 0, i32 33
  %1936 = getelementptr inbounds %struct.Reg, %struct.Reg* %1935, i32 0, i32 0
  %PC.i1548 = bitcast %union.anon* %1936 to i64*
  %1937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1938 = getelementptr inbounds %struct.GPR, %struct.GPR* %1937, i32 0, i32 5
  %1939 = getelementptr inbounds %struct.Reg, %struct.Reg* %1938, i32 0, i32 0
  %RCX.i1549 = bitcast %union.anon* %1939 to i64*
  %1940 = load i64, i64* %PC.i1548
  %1941 = add i64 %1940, 8
  store i64 %1941, i64* %PC.i1548
  %1942 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1942, i64* %RCX.i1549, align 8
  store %struct.Memory* %loadMem_441729, %struct.Memory** %MEMORY
  %loadMem_441731 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1944 = getelementptr inbounds %struct.GPR, %struct.GPR* %1943, i32 0, i32 33
  %1945 = getelementptr inbounds %struct.Reg, %struct.Reg* %1944, i32 0, i32 0
  %PC.i1545 = bitcast %union.anon* %1945 to i64*
  %1946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1947 = getelementptr inbounds %struct.GPR, %struct.GPR* %1946, i32 0, i32 1
  %1948 = getelementptr inbounds %struct.Reg, %struct.Reg* %1947, i32 0, i32 0
  %EAX.i1546 = bitcast %union.anon* %1948 to i32*
  %1949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1950 = getelementptr inbounds %struct.GPR, %struct.GPR* %1949, i32 0, i32 5
  %1951 = getelementptr inbounds %struct.Reg, %struct.Reg* %1950, i32 0, i32 0
  %RCX.i1547 = bitcast %union.anon* %1951 to i64*
  %1952 = load i32, i32* %EAX.i1546
  %1953 = zext i32 %1952 to i64
  %1954 = load i64, i64* %RCX.i1547
  %1955 = add i64 %1954, 72712
  %1956 = load i64, i64* %PC.i1545
  %1957 = add i64 %1956, 6
  store i64 %1957, i64* %PC.i1545
  %1958 = inttoptr i64 %1955 to i32*
  %1959 = load i32, i32* %1958
  %1960 = sub i32 %1952, %1959
  %1961 = icmp ult i32 %1952, %1959
  %1962 = zext i1 %1961 to i8
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1962, i8* %1963, align 1
  %1964 = and i32 %1960, 255
  %1965 = call i32 @llvm.ctpop.i32(i32 %1964)
  %1966 = trunc i32 %1965 to i8
  %1967 = and i8 %1966, 1
  %1968 = xor i8 %1967, 1
  %1969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1968, i8* %1969, align 1
  %1970 = xor i32 %1959, %1952
  %1971 = xor i32 %1970, %1960
  %1972 = lshr i32 %1971, 4
  %1973 = trunc i32 %1972 to i8
  %1974 = and i8 %1973, 1
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1974, i8* %1975, align 1
  %1976 = icmp eq i32 %1960, 0
  %1977 = zext i1 %1976 to i8
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1977, i8* %1978, align 1
  %1979 = lshr i32 %1960, 31
  %1980 = trunc i32 %1979 to i8
  %1981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1980, i8* %1981, align 1
  %1982 = lshr i32 %1952, 31
  %1983 = lshr i32 %1959, 31
  %1984 = xor i32 %1983, %1982
  %1985 = xor i32 %1979, %1982
  %1986 = add i32 %1985, %1984
  %1987 = icmp eq i32 %1986, 2
  %1988 = zext i1 %1987 to i8
  %1989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1988, i8* %1989, align 1
  store %struct.Memory* %loadMem_441731, %struct.Memory** %MEMORY
  %loadMem_441737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1991 = getelementptr inbounds %struct.GPR, %struct.GPR* %1990, i32 0, i32 33
  %1992 = getelementptr inbounds %struct.Reg, %struct.Reg* %1991, i32 0, i32 0
  %PC.i1544 = bitcast %union.anon* %1992 to i64*
  %1993 = load i64, i64* %PC.i1544
  %1994 = add i64 %1993, 288
  %1995 = load i64, i64* %PC.i1544
  %1996 = add i64 %1995, 6
  %1997 = load i64, i64* %PC.i1544
  %1998 = add i64 %1997, 6
  store i64 %1998, i64* %PC.i1544
  %1999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2000 = load i8, i8* %1999, align 1
  %2001 = icmp ne i8 %2000, 0
  %2002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2003 = load i8, i8* %2002, align 1
  %2004 = icmp ne i8 %2003, 0
  %2005 = xor i1 %2001, %2004
  %2006 = xor i1 %2005, true
  %2007 = zext i1 %2006 to i8
  store i8 %2007, i8* %BRANCH_TAKEN, align 1
  %2008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2009 = select i1 %2005, i64 %1996, i64 %1994
  store i64 %2009, i64* %2008, align 8
  store %struct.Memory* %loadMem_441737, %struct.Memory** %MEMORY
  %loadBr_441737 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441737 = icmp eq i8 %loadBr_441737, 1
  br i1 %cmpBr_441737, label %block_.L_441857, label %block_44173d

block_44173d:                                     ; preds = %block_.L_441726
  %loadMem_44173d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2011 = getelementptr inbounds %struct.GPR, %struct.GPR* %2010, i32 0, i32 33
  %2012 = getelementptr inbounds %struct.Reg, %struct.Reg* %2011, i32 0, i32 0
  %PC.i1542 = bitcast %union.anon* %2012 to i64*
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2014 = getelementptr inbounds %struct.GPR, %struct.GPR* %2013, i32 0, i32 15
  %2015 = getelementptr inbounds %struct.Reg, %struct.Reg* %2014, i32 0, i32 0
  %RBP.i1543 = bitcast %union.anon* %2015 to i64*
  %2016 = load i64, i64* %RBP.i1543
  %2017 = sub i64 %2016, 32
  %2018 = load i64, i64* %PC.i1542
  %2019 = add i64 %2018, 7
  store i64 %2019, i64* %PC.i1542
  %2020 = inttoptr i64 %2017 to i32*
  store i32 0, i32* %2020
  store %struct.Memory* %loadMem_44173d, %struct.Memory** %MEMORY
  br label %block_.L_441744

block_.L_441744:                                  ; preds = %block_.L_441836, %block_44173d
  %loadMem_441744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2022 = getelementptr inbounds %struct.GPR, %struct.GPR* %2021, i32 0, i32 33
  %2023 = getelementptr inbounds %struct.Reg, %struct.Reg* %2022, i32 0, i32 0
  %PC.i1539 = bitcast %union.anon* %2023 to i64*
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2025 = getelementptr inbounds %struct.GPR, %struct.GPR* %2024, i32 0, i32 1
  %2026 = getelementptr inbounds %struct.Reg, %struct.Reg* %2025, i32 0, i32 0
  %RAX.i1540 = bitcast %union.anon* %2026 to i64*
  %2027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2028 = getelementptr inbounds %struct.GPR, %struct.GPR* %2027, i32 0, i32 15
  %2029 = getelementptr inbounds %struct.Reg, %struct.Reg* %2028, i32 0, i32 0
  %RBP.i1541 = bitcast %union.anon* %2029 to i64*
  %2030 = load i64, i64* %RBP.i1541
  %2031 = sub i64 %2030, 32
  %2032 = load i64, i64* %PC.i1539
  %2033 = add i64 %2032, 3
  store i64 %2033, i64* %PC.i1539
  %2034 = inttoptr i64 %2031 to i32*
  %2035 = load i32, i32* %2034
  %2036 = zext i32 %2035 to i64
  store i64 %2036, i64* %RAX.i1540, align 8
  store %struct.Memory* %loadMem_441744, %struct.Memory** %MEMORY
  %loadMem_441747 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2038 = getelementptr inbounds %struct.GPR, %struct.GPR* %2037, i32 0, i32 33
  %2039 = getelementptr inbounds %struct.Reg, %struct.Reg* %2038, i32 0, i32 0
  %PC.i1537 = bitcast %union.anon* %2039 to i64*
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2041 = getelementptr inbounds %struct.GPR, %struct.GPR* %2040, i32 0, i32 5
  %2042 = getelementptr inbounds %struct.Reg, %struct.Reg* %2041, i32 0, i32 0
  %RCX.i1538 = bitcast %union.anon* %2042 to i64*
  %2043 = load i64, i64* %PC.i1537
  %2044 = add i64 %2043, 8
  store i64 %2044, i64* %PC.i1537
  %2045 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2045, i64* %RCX.i1538, align 8
  store %struct.Memory* %loadMem_441747, %struct.Memory** %MEMORY
  %loadMem_44174f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2047 = getelementptr inbounds %struct.GPR, %struct.GPR* %2046, i32 0, i32 33
  %2048 = getelementptr inbounds %struct.Reg, %struct.Reg* %2047, i32 0, i32 0
  %PC.i1534 = bitcast %union.anon* %2048 to i64*
  %2049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2050 = getelementptr inbounds %struct.GPR, %struct.GPR* %2049, i32 0, i32 1
  %2051 = getelementptr inbounds %struct.Reg, %struct.Reg* %2050, i32 0, i32 0
  %EAX.i1535 = bitcast %union.anon* %2051 to i32*
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2053 = getelementptr inbounds %struct.GPR, %struct.GPR* %2052, i32 0, i32 5
  %2054 = getelementptr inbounds %struct.Reg, %struct.Reg* %2053, i32 0, i32 0
  %RCX.i1536 = bitcast %union.anon* %2054 to i64*
  %2055 = load i32, i32* %EAX.i1535
  %2056 = zext i32 %2055 to i64
  %2057 = load i64, i64* %RCX.i1536
  %2058 = add i64 %2057, 72708
  %2059 = load i64, i64* %PC.i1534
  %2060 = add i64 %2059, 6
  store i64 %2060, i64* %PC.i1534
  %2061 = inttoptr i64 %2058 to i32*
  %2062 = load i32, i32* %2061
  %2063 = sub i32 %2055, %2062
  %2064 = icmp ult i32 %2055, %2062
  %2065 = zext i1 %2064 to i8
  %2066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2065, i8* %2066, align 1
  %2067 = and i32 %2063, 255
  %2068 = call i32 @llvm.ctpop.i32(i32 %2067)
  %2069 = trunc i32 %2068 to i8
  %2070 = and i8 %2069, 1
  %2071 = xor i8 %2070, 1
  %2072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2071, i8* %2072, align 1
  %2073 = xor i32 %2062, %2055
  %2074 = xor i32 %2073, %2063
  %2075 = lshr i32 %2074, 4
  %2076 = trunc i32 %2075 to i8
  %2077 = and i8 %2076, 1
  %2078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2077, i8* %2078, align 1
  %2079 = icmp eq i32 %2063, 0
  %2080 = zext i1 %2079 to i8
  %2081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2080, i8* %2081, align 1
  %2082 = lshr i32 %2063, 31
  %2083 = trunc i32 %2082 to i8
  %2084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2083, i8* %2084, align 1
  %2085 = lshr i32 %2055, 31
  %2086 = lshr i32 %2062, 31
  %2087 = xor i32 %2086, %2085
  %2088 = xor i32 %2082, %2085
  %2089 = add i32 %2088, %2087
  %2090 = icmp eq i32 %2089, 2
  %2091 = zext i1 %2090 to i8
  %2092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2091, i8* %2092, align 1
  store %struct.Memory* %loadMem_44174f, %struct.Memory** %MEMORY
  %loadMem_441755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2094 = getelementptr inbounds %struct.GPR, %struct.GPR* %2093, i32 0, i32 33
  %2095 = getelementptr inbounds %struct.Reg, %struct.Reg* %2094, i32 0, i32 0
  %PC.i1533 = bitcast %union.anon* %2095 to i64*
  %2096 = load i64, i64* %PC.i1533
  %2097 = add i64 %2096, 239
  %2098 = load i64, i64* %PC.i1533
  %2099 = add i64 %2098, 6
  %2100 = load i64, i64* %PC.i1533
  %2101 = add i64 %2100, 6
  store i64 %2101, i64* %PC.i1533
  %2102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2103 = load i8, i8* %2102, align 1
  %2104 = icmp ne i8 %2103, 0
  %2105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2106 = load i8, i8* %2105, align 1
  %2107 = icmp ne i8 %2106, 0
  %2108 = xor i1 %2104, %2107
  %2109 = xor i1 %2108, true
  %2110 = zext i1 %2109 to i8
  store i8 %2110, i8* %BRANCH_TAKEN, align 1
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2112 = select i1 %2108, i64 %2099, i64 %2097
  store i64 %2112, i64* %2111, align 8
  store %struct.Memory* %loadMem_441755, %struct.Memory** %MEMORY
  %loadBr_441755 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441755 = icmp eq i8 %loadBr_441755, 1
  br i1 %cmpBr_441755, label %block_.L_441844, label %block_44175b

block_44175b:                                     ; preds = %block_.L_441744
  %loadMem_44175b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2114 = getelementptr inbounds %struct.GPR, %struct.GPR* %2113, i32 0, i32 33
  %2115 = getelementptr inbounds %struct.Reg, %struct.Reg* %2114, i32 0, i32 0
  %PC.i1531 = bitcast %union.anon* %2115 to i64*
  %2116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2117 = getelementptr inbounds %struct.GPR, %struct.GPR* %2116, i32 0, i32 1
  %2118 = getelementptr inbounds %struct.Reg, %struct.Reg* %2117, i32 0, i32 0
  %RAX.i1532 = bitcast %union.anon* %2118 to i64*
  %2119 = load i64, i64* %PC.i1531
  %2120 = add i64 %2119, 8
  store i64 %2120, i64* %PC.i1531
  %2121 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2121, i64* %RAX.i1532, align 8
  store %struct.Memory* %loadMem_44175b, %struct.Memory** %MEMORY
  %loadMem_441763 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2123 = getelementptr inbounds %struct.GPR, %struct.GPR* %2122, i32 0, i32 33
  %2124 = getelementptr inbounds %struct.Reg, %struct.Reg* %2123, i32 0, i32 0
  %PC.i1529 = bitcast %union.anon* %2124 to i64*
  %2125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2126 = getelementptr inbounds %struct.GPR, %struct.GPR* %2125, i32 0, i32 1
  %2127 = getelementptr inbounds %struct.Reg, %struct.Reg* %2126, i32 0, i32 0
  %RAX.i1530 = bitcast %union.anon* %2127 to i64*
  %2128 = load i64, i64* %RAX.i1530
  %2129 = add i64 %2128, 72724
  %2130 = load i64, i64* %PC.i1529
  %2131 = add i64 %2130, 7
  store i64 %2131, i64* %PC.i1529
  %2132 = inttoptr i64 %2129 to i32*
  %2133 = load i32, i32* %2132
  %2134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2134, align 1
  %2135 = and i32 %2133, 255
  %2136 = call i32 @llvm.ctpop.i32(i32 %2135)
  %2137 = trunc i32 %2136 to i8
  %2138 = and i8 %2137, 1
  %2139 = xor i8 %2138, 1
  %2140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2139, i8* %2140, align 1
  %2141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2141, align 1
  %2142 = icmp eq i32 %2133, 0
  %2143 = zext i1 %2142 to i8
  %2144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2143, i8* %2144, align 1
  %2145 = lshr i32 %2133, 31
  %2146 = trunc i32 %2145 to i8
  %2147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2146, i8* %2147, align 1
  %2148 = lshr i32 %2133, 31
  %2149 = xor i32 %2145, %2148
  %2150 = add i32 %2149, %2148
  %2151 = icmp eq i32 %2150, 2
  %2152 = zext i1 %2151 to i8
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2152, i8* %2153, align 1
  store %struct.Memory* %loadMem_441763, %struct.Memory** %MEMORY
  %loadMem_44176a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2155 = getelementptr inbounds %struct.GPR, %struct.GPR* %2154, i32 0, i32 33
  %2156 = getelementptr inbounds %struct.Reg, %struct.Reg* %2155, i32 0, i32 0
  %PC.i1528 = bitcast %union.anon* %2156 to i64*
  %2157 = load i64, i64* %PC.i1528
  %2158 = add i64 %2157, 115
  %2159 = load i64, i64* %PC.i1528
  %2160 = add i64 %2159, 6
  %2161 = load i64, i64* %PC.i1528
  %2162 = add i64 %2161, 6
  store i64 %2162, i64* %PC.i1528
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2164 = load i8, i8* %2163, align 1
  %2165 = icmp eq i8 %2164, 0
  %2166 = zext i1 %2165 to i8
  store i8 %2166, i8* %BRANCH_TAKEN, align 1
  %2167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2168 = select i1 %2165, i64 %2158, i64 %2160
  store i64 %2168, i64* %2167, align 8
  store %struct.Memory* %loadMem_44176a, %struct.Memory** %MEMORY
  %loadBr_44176a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44176a = icmp eq i8 %loadBr_44176a, 1
  br i1 %cmpBr_44176a, label %block_.L_4417dd, label %block_441770

block_441770:                                     ; preds = %block_44175b
  %loadMem_441770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2170 = getelementptr inbounds %struct.GPR, %struct.GPR* %2169, i32 0, i32 33
  %2171 = getelementptr inbounds %struct.Reg, %struct.Reg* %2170, i32 0, i32 0
  %PC.i1526 = bitcast %union.anon* %2171 to i64*
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2173 = getelementptr inbounds %struct.GPR, %struct.GPR* %2172, i32 0, i32 1
  %2174 = getelementptr inbounds %struct.Reg, %struct.Reg* %2173, i32 0, i32 0
  %RAX.i1527 = bitcast %union.anon* %2174 to i64*
  %2175 = load i64, i64* %PC.i1526
  %2176 = add i64 %2175, 8
  store i64 %2176, i64* %PC.i1526
  %2177 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2177, i64* %RAX.i1527, align 8
  store %struct.Memory* %loadMem_441770, %struct.Memory** %MEMORY
  %loadMem_441778 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2179 = getelementptr inbounds %struct.GPR, %struct.GPR* %2178, i32 0, i32 33
  %2180 = getelementptr inbounds %struct.Reg, %struct.Reg* %2179, i32 0, i32 0
  %PC.i1524 = bitcast %union.anon* %2180 to i64*
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2182 = getelementptr inbounds %struct.GPR, %struct.GPR* %2181, i32 0, i32 1
  %2183 = getelementptr inbounds %struct.Reg, %struct.Reg* %2182, i32 0, i32 0
  %RAX.i1525 = bitcast %union.anon* %2183 to i64*
  %2184 = load i64, i64* %RAX.i1525
  %2185 = load i64, i64* %PC.i1524
  %2186 = add i64 %2185, 6
  store i64 %2186, i64* %PC.i1524
  %2187 = add i64 12600, %2184
  store i64 %2187, i64* %RAX.i1525, align 8
  %2188 = icmp ult i64 %2187, %2184
  %2189 = icmp ult i64 %2187, 12600
  %2190 = or i1 %2188, %2189
  %2191 = zext i1 %2190 to i8
  %2192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2191, i8* %2192, align 1
  %2193 = trunc i64 %2187 to i32
  %2194 = and i32 %2193, 255
  %2195 = call i32 @llvm.ctpop.i32(i32 %2194)
  %2196 = trunc i32 %2195 to i8
  %2197 = and i8 %2196, 1
  %2198 = xor i8 %2197, 1
  %2199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2198, i8* %2199, align 1
  %2200 = xor i64 12600, %2184
  %2201 = xor i64 %2200, %2187
  %2202 = lshr i64 %2201, 4
  %2203 = trunc i64 %2202 to i8
  %2204 = and i8 %2203, 1
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2204, i8* %2205, align 1
  %2206 = icmp eq i64 %2187, 0
  %2207 = zext i1 %2206 to i8
  %2208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2207, i8* %2208, align 1
  %2209 = lshr i64 %2187, 63
  %2210 = trunc i64 %2209 to i8
  %2211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2210, i8* %2211, align 1
  %2212 = lshr i64 %2184, 63
  %2213 = xor i64 %2209, %2212
  %2214 = add i64 %2213, %2209
  %2215 = icmp eq i64 %2214, 2
  %2216 = zext i1 %2215 to i8
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2216, i8* %2217, align 1
  store %struct.Memory* %loadMem_441778, %struct.Memory** %MEMORY
  %loadMem_44177e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2219 = getelementptr inbounds %struct.GPR, %struct.GPR* %2218, i32 0, i32 33
  %2220 = getelementptr inbounds %struct.Reg, %struct.Reg* %2219, i32 0, i32 0
  %PC.i1521 = bitcast %union.anon* %2220 to i64*
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2222 = getelementptr inbounds %struct.GPR, %struct.GPR* %2221, i32 0, i32 5
  %2223 = getelementptr inbounds %struct.Reg, %struct.Reg* %2222, i32 0, i32 0
  %RCX.i1522 = bitcast %union.anon* %2223 to i64*
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2225 = getelementptr inbounds %struct.GPR, %struct.GPR* %2224, i32 0, i32 15
  %2226 = getelementptr inbounds %struct.Reg, %struct.Reg* %2225, i32 0, i32 0
  %RBP.i1523 = bitcast %union.anon* %2226 to i64*
  %2227 = load i64, i64* %RBP.i1523
  %2228 = sub i64 %2227, 32
  %2229 = load i64, i64* %PC.i1521
  %2230 = add i64 %2229, 4
  store i64 %2230, i64* %PC.i1521
  %2231 = inttoptr i64 %2228 to i32*
  %2232 = load i32, i32* %2231
  %2233 = sext i32 %2232 to i64
  store i64 %2233, i64* %RCX.i1522, align 8
  store %struct.Memory* %loadMem_44177e, %struct.Memory** %MEMORY
  %loadMem_441782 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2235 = getelementptr inbounds %struct.GPR, %struct.GPR* %2234, i32 0, i32 33
  %2236 = getelementptr inbounds %struct.Reg, %struct.Reg* %2235, i32 0, i32 0
  %PC.i1519 = bitcast %union.anon* %2236 to i64*
  %2237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2238 = getelementptr inbounds %struct.GPR, %struct.GPR* %2237, i32 0, i32 5
  %2239 = getelementptr inbounds %struct.Reg, %struct.Reg* %2238, i32 0, i32 0
  %RCX.i1520 = bitcast %union.anon* %2239 to i64*
  %2240 = load i64, i64* %RCX.i1520
  %2241 = load i64, i64* %PC.i1519
  %2242 = add i64 %2241, 4
  store i64 %2242, i64* %PC.i1519
  %2243 = shl i64 %2240, 4
  %2244 = icmp slt i64 %2243, 0
  %2245 = shl i64 %2243, 1
  store i64 %2245, i64* %RCX.i1520, align 8
  %2246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2247 = zext i1 %2244 to i8
  store i8 %2247, i8* %2246, align 1
  %2248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2249 = trunc i64 %2245 to i32
  %2250 = and i32 %2249, 254
  %2251 = call i32 @llvm.ctpop.i32(i32 %2250)
  %2252 = trunc i32 %2251 to i8
  %2253 = and i8 %2252, 1
  %2254 = xor i8 %2253, 1
  store i8 %2254, i8* %2248, align 1
  %2255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2255, align 1
  %2256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2257 = icmp eq i64 %2245, 0
  %2258 = zext i1 %2257 to i8
  store i8 %2258, i8* %2256, align 1
  %2259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2260 = lshr i64 %2245, 63
  %2261 = trunc i64 %2260 to i8
  store i8 %2261, i8* %2259, align 1
  %2262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2262, align 1
  store %struct.Memory* %loadMem_441782, %struct.Memory** %MEMORY
  %loadMem_441786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2264 = getelementptr inbounds %struct.GPR, %struct.GPR* %2263, i32 0, i32 33
  %2265 = getelementptr inbounds %struct.Reg, %struct.Reg* %2264, i32 0, i32 0
  %PC.i1516 = bitcast %union.anon* %2265 to i64*
  %2266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2267 = getelementptr inbounds %struct.GPR, %struct.GPR* %2266, i32 0, i32 1
  %2268 = getelementptr inbounds %struct.Reg, %struct.Reg* %2267, i32 0, i32 0
  %RAX.i1517 = bitcast %union.anon* %2268 to i64*
  %2269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2270 = getelementptr inbounds %struct.GPR, %struct.GPR* %2269, i32 0, i32 5
  %2271 = getelementptr inbounds %struct.Reg, %struct.Reg* %2270, i32 0, i32 0
  %RCX.i1518 = bitcast %union.anon* %2271 to i64*
  %2272 = load i64, i64* %RAX.i1517
  %2273 = load i64, i64* %RCX.i1518
  %2274 = load i64, i64* %PC.i1516
  %2275 = add i64 %2274, 3
  store i64 %2275, i64* %PC.i1516
  %2276 = add i64 %2273, %2272
  store i64 %2276, i64* %RAX.i1517, align 8
  %2277 = icmp ult i64 %2276, %2272
  %2278 = icmp ult i64 %2276, %2273
  %2279 = or i1 %2277, %2278
  %2280 = zext i1 %2279 to i8
  %2281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2280, i8* %2281, align 1
  %2282 = trunc i64 %2276 to i32
  %2283 = and i32 %2282, 255
  %2284 = call i32 @llvm.ctpop.i32(i32 %2283)
  %2285 = trunc i32 %2284 to i8
  %2286 = and i8 %2285, 1
  %2287 = xor i8 %2286, 1
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2287, i8* %2288, align 1
  %2289 = xor i64 %2273, %2272
  %2290 = xor i64 %2289, %2276
  %2291 = lshr i64 %2290, 4
  %2292 = trunc i64 %2291 to i8
  %2293 = and i8 %2292, 1
  %2294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2293, i8* %2294, align 1
  %2295 = icmp eq i64 %2276, 0
  %2296 = zext i1 %2295 to i8
  %2297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2296, i8* %2297, align 1
  %2298 = lshr i64 %2276, 63
  %2299 = trunc i64 %2298 to i8
  %2300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2299, i8* %2300, align 1
  %2301 = lshr i64 %2272, 63
  %2302 = lshr i64 %2273, 63
  %2303 = xor i64 %2298, %2301
  %2304 = xor i64 %2298, %2302
  %2305 = add i64 %2303, %2304
  %2306 = icmp eq i64 %2305, 2
  %2307 = zext i1 %2306 to i8
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2307, i8* %2308, align 1
  store %struct.Memory* %loadMem_441786, %struct.Memory** %MEMORY
  %loadMem_441789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2310 = getelementptr inbounds %struct.GPR, %struct.GPR* %2309, i32 0, i32 33
  %2311 = getelementptr inbounds %struct.Reg, %struct.Reg* %2310, i32 0, i32 0
  %PC.i1513 = bitcast %union.anon* %2311 to i64*
  %2312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2313 = getelementptr inbounds %struct.GPR, %struct.GPR* %2312, i32 0, i32 5
  %2314 = getelementptr inbounds %struct.Reg, %struct.Reg* %2313, i32 0, i32 0
  %RCX.i1514 = bitcast %union.anon* %2314 to i64*
  %2315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2316 = getelementptr inbounds %struct.GPR, %struct.GPR* %2315, i32 0, i32 15
  %2317 = getelementptr inbounds %struct.Reg, %struct.Reg* %2316, i32 0, i32 0
  %RBP.i1515 = bitcast %union.anon* %2317 to i64*
  %2318 = load i64, i64* %RBP.i1515
  %2319 = sub i64 %2318, 28
  %2320 = load i64, i64* %PC.i1513
  %2321 = add i64 %2320, 4
  store i64 %2321, i64* %PC.i1513
  %2322 = inttoptr i64 %2319 to i32*
  %2323 = load i32, i32* %2322
  %2324 = sext i32 %2323 to i64
  store i64 %2324, i64* %RCX.i1514, align 8
  store %struct.Memory* %loadMem_441789, %struct.Memory** %MEMORY
  %loadMem_44178d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2326 = getelementptr inbounds %struct.GPR, %struct.GPR* %2325, i32 0, i32 33
  %2327 = getelementptr inbounds %struct.Reg, %struct.Reg* %2326, i32 0, i32 0
  %PC.i1509 = bitcast %union.anon* %2327 to i64*
  %2328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2329 = getelementptr inbounds %struct.GPR, %struct.GPR* %2328, i32 0, i32 7
  %2330 = getelementptr inbounds %struct.Reg, %struct.Reg* %2329, i32 0, i32 0
  %DX.i1510 = bitcast %union.anon* %2330 to i16*
  %2331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2332 = getelementptr inbounds %struct.GPR, %struct.GPR* %2331, i32 0, i32 1
  %2333 = getelementptr inbounds %struct.Reg, %struct.Reg* %2332, i32 0, i32 0
  %RAX.i1511 = bitcast %union.anon* %2333 to i64*
  %2334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2335 = getelementptr inbounds %struct.GPR, %struct.GPR* %2334, i32 0, i32 5
  %2336 = getelementptr inbounds %struct.Reg, %struct.Reg* %2335, i32 0, i32 0
  %RCX.i1512 = bitcast %union.anon* %2336 to i64*
  %2337 = load i64, i64* %RAX.i1511
  %2338 = load i64, i64* %RCX.i1512
  %2339 = mul i64 %2338, 2
  %2340 = add i64 %2339, %2337
  %2341 = load i64, i64* %PC.i1509
  %2342 = add i64 %2341, 4
  store i64 %2342, i64* %PC.i1509
  %2343 = inttoptr i64 %2340 to i16*
  %2344 = load i16, i16* %2343
  store i16 %2344, i16* %DX.i1510, align 2
  store %struct.Memory* %loadMem_44178d, %struct.Memory** %MEMORY
  %loadMem_441791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2346 = getelementptr inbounds %struct.GPR, %struct.GPR* %2345, i32 0, i32 33
  %2347 = getelementptr inbounds %struct.Reg, %struct.Reg* %2346, i32 0, i32 0
  %PC.i1507 = bitcast %union.anon* %2347 to i64*
  %2348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2349 = getelementptr inbounds %struct.GPR, %struct.GPR* %2348, i32 0, i32 1
  %2350 = getelementptr inbounds %struct.Reg, %struct.Reg* %2349, i32 0, i32 0
  %RAX.i1508 = bitcast %union.anon* %2350 to i64*
  %2351 = load i64, i64* %PC.i1507
  %2352 = add i64 %2351, 8
  store i64 %2352, i64* %PC.i1507
  %2353 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %2353, i64* %RAX.i1508, align 8
  store %struct.Memory* %loadMem_441791, %struct.Memory** %MEMORY
  %loadMem_441799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2355 = getelementptr inbounds %struct.GPR, %struct.GPR* %2354, i32 0, i32 33
  %2356 = getelementptr inbounds %struct.Reg, %struct.Reg* %2355, i32 0, i32 0
  %PC.i1505 = bitcast %union.anon* %2356 to i64*
  %2357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2358 = getelementptr inbounds %struct.GPR, %struct.GPR* %2357, i32 0, i32 1
  %2359 = getelementptr inbounds %struct.Reg, %struct.Reg* %2358, i32 0, i32 0
  %RAX.i1506 = bitcast %union.anon* %2359 to i64*
  %2360 = load i64, i64* %RAX.i1506
  %2361 = add i64 %2360, 6464
  %2362 = load i64, i64* %PC.i1505
  %2363 = add i64 %2362, 7
  store i64 %2363, i64* %PC.i1505
  %2364 = inttoptr i64 %2361 to i64*
  %2365 = load i64, i64* %2364
  store i64 %2365, i64* %RAX.i1506, align 8
  store %struct.Memory* %loadMem_441799, %struct.Memory** %MEMORY
  %loadMem_4417a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2367 = getelementptr inbounds %struct.GPR, %struct.GPR* %2366, i32 0, i32 33
  %2368 = getelementptr inbounds %struct.Reg, %struct.Reg* %2367, i32 0, i32 0
  %PC.i1502 = bitcast %union.anon* %2368 to i64*
  %2369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2370 = getelementptr inbounds %struct.GPR, %struct.GPR* %2369, i32 0, i32 5
  %2371 = getelementptr inbounds %struct.Reg, %struct.Reg* %2370, i32 0, i32 0
  %RCX.i1503 = bitcast %union.anon* %2371 to i64*
  %2372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2373 = getelementptr inbounds %struct.GPR, %struct.GPR* %2372, i32 0, i32 15
  %2374 = getelementptr inbounds %struct.Reg, %struct.Reg* %2373, i32 0, i32 0
  %RBP.i1504 = bitcast %union.anon* %2374 to i64*
  %2375 = load i64, i64* %RBP.i1504
  %2376 = sub i64 %2375, 12
  %2377 = load i64, i64* %PC.i1502
  %2378 = add i64 %2377, 4
  store i64 %2378, i64* %PC.i1502
  %2379 = inttoptr i64 %2376 to i32*
  %2380 = load i32, i32* %2379
  %2381 = sext i32 %2380 to i64
  store i64 %2381, i64* %RCX.i1503, align 8
  store %struct.Memory* %loadMem_4417a0, %struct.Memory** %MEMORY
  %loadMem_4417a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2383 = getelementptr inbounds %struct.GPR, %struct.GPR* %2382, i32 0, i32 33
  %2384 = getelementptr inbounds %struct.Reg, %struct.Reg* %2383, i32 0, i32 0
  %PC.i1499 = bitcast %union.anon* %2384 to i64*
  %2385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2386 = getelementptr inbounds %struct.GPR, %struct.GPR* %2385, i32 0, i32 1
  %2387 = getelementptr inbounds %struct.Reg, %struct.Reg* %2386, i32 0, i32 0
  %RAX.i1500 = bitcast %union.anon* %2387 to i64*
  %2388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2389 = getelementptr inbounds %struct.GPR, %struct.GPR* %2388, i32 0, i32 5
  %2390 = getelementptr inbounds %struct.Reg, %struct.Reg* %2389, i32 0, i32 0
  %RCX.i1501 = bitcast %union.anon* %2390 to i64*
  %2391 = load i64, i64* %RAX.i1500
  %2392 = load i64, i64* %RCX.i1501
  %2393 = mul i64 %2392, 8
  %2394 = add i64 %2393, %2391
  %2395 = load i64, i64* %PC.i1499
  %2396 = add i64 %2395, 4
  store i64 %2396, i64* %PC.i1499
  %2397 = inttoptr i64 %2394 to i64*
  %2398 = load i64, i64* %2397
  store i64 %2398, i64* %RAX.i1500, align 8
  store %struct.Memory* %loadMem_4417a4, %struct.Memory** %MEMORY
  %loadMem_4417a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2400 = getelementptr inbounds %struct.GPR, %struct.GPR* %2399, i32 0, i32 33
  %2401 = getelementptr inbounds %struct.Reg, %struct.Reg* %2400, i32 0, i32 0
  %PC.i1497 = bitcast %union.anon* %2401 to i64*
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2403 = getelementptr inbounds %struct.GPR, %struct.GPR* %2402, i32 0, i32 5
  %2404 = getelementptr inbounds %struct.Reg, %struct.Reg* %2403, i32 0, i32 0
  %RCX.i1498 = bitcast %union.anon* %2404 to i64*
  %2405 = load i64, i64* %PC.i1497
  %2406 = add i64 %2405, 8
  store i64 %2406, i64* %PC.i1497
  %2407 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2407, i64* %RCX.i1498, align 8
  store %struct.Memory* %loadMem_4417a8, %struct.Memory** %MEMORY
  %loadMem_4417b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2409 = getelementptr inbounds %struct.GPR, %struct.GPR* %2408, i32 0, i32 33
  %2410 = getelementptr inbounds %struct.Reg, %struct.Reg* %2409, i32 0, i32 0
  %PC.i1494 = bitcast %union.anon* %2410 to i64*
  %2411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2412 = getelementptr inbounds %struct.GPR, %struct.GPR* %2411, i32 0, i32 5
  %2413 = getelementptr inbounds %struct.Reg, %struct.Reg* %2412, i32 0, i32 0
  %RCX.i1495 = bitcast %union.anon* %2413 to i64*
  %2414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2415 = getelementptr inbounds %struct.GPR, %struct.GPR* %2414, i32 0, i32 9
  %2416 = getelementptr inbounds %struct.Reg, %struct.Reg* %2415, i32 0, i32 0
  %RSI.i1496 = bitcast %union.anon* %2416 to i64*
  %2417 = load i64, i64* %RCX.i1495
  %2418 = add i64 %2417, 164
  %2419 = load i64, i64* %PC.i1494
  %2420 = add i64 %2419, 6
  store i64 %2420, i64* %PC.i1494
  %2421 = inttoptr i64 %2418 to i32*
  %2422 = load i32, i32* %2421
  %2423 = zext i32 %2422 to i64
  store i64 %2423, i64* %RSI.i1496, align 8
  store %struct.Memory* %loadMem_4417b0, %struct.Memory** %MEMORY
  %loadMem_4417b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2425 = getelementptr inbounds %struct.GPR, %struct.GPR* %2424, i32 0, i32 33
  %2426 = getelementptr inbounds %struct.Reg, %struct.Reg* %2425, i32 0, i32 0
  %PC.i1491 = bitcast %union.anon* %2426 to i64*
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2428 = getelementptr inbounds %struct.GPR, %struct.GPR* %2427, i32 0, i32 9
  %2429 = getelementptr inbounds %struct.Reg, %struct.Reg* %2428, i32 0, i32 0
  %RSI.i1492 = bitcast %union.anon* %2429 to i64*
  %2430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2431 = getelementptr inbounds %struct.GPR, %struct.GPR* %2430, i32 0, i32 15
  %2432 = getelementptr inbounds %struct.Reg, %struct.Reg* %2431, i32 0, i32 0
  %RBP.i1493 = bitcast %union.anon* %2432 to i64*
  %2433 = load i64, i64* %RSI.i1492
  %2434 = load i64, i64* %RBP.i1493
  %2435 = sub i64 %2434, 28
  %2436 = load i64, i64* %PC.i1491
  %2437 = add i64 %2436, 3
  store i64 %2437, i64* %PC.i1491
  %2438 = trunc i64 %2433 to i32
  %2439 = inttoptr i64 %2435 to i32*
  %2440 = load i32, i32* %2439
  %2441 = add i32 %2440, %2438
  %2442 = zext i32 %2441 to i64
  store i64 %2442, i64* %RSI.i1492, align 8
  %2443 = icmp ult i32 %2441, %2438
  %2444 = icmp ult i32 %2441, %2440
  %2445 = or i1 %2443, %2444
  %2446 = zext i1 %2445 to i8
  %2447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2446, i8* %2447, align 1
  %2448 = and i32 %2441, 255
  %2449 = call i32 @llvm.ctpop.i32(i32 %2448)
  %2450 = trunc i32 %2449 to i8
  %2451 = and i8 %2450, 1
  %2452 = xor i8 %2451, 1
  %2453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2452, i8* %2453, align 1
  %2454 = xor i32 %2440, %2438
  %2455 = xor i32 %2454, %2441
  %2456 = lshr i32 %2455, 4
  %2457 = trunc i32 %2456 to i8
  %2458 = and i8 %2457, 1
  %2459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2458, i8* %2459, align 1
  %2460 = icmp eq i32 %2441, 0
  %2461 = zext i1 %2460 to i8
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2461, i8* %2462, align 1
  %2463 = lshr i32 %2441, 31
  %2464 = trunc i32 %2463 to i8
  %2465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2464, i8* %2465, align 1
  %2466 = lshr i32 %2438, 31
  %2467 = lshr i32 %2440, 31
  %2468 = xor i32 %2463, %2466
  %2469 = xor i32 %2463, %2467
  %2470 = add i32 %2468, %2469
  %2471 = icmp eq i32 %2470, 2
  %2472 = zext i1 %2471 to i8
  %2473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2472, i8* %2473, align 1
  store %struct.Memory* %loadMem_4417b6, %struct.Memory** %MEMORY
  %loadMem_4417b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2475 = getelementptr inbounds %struct.GPR, %struct.GPR* %2474, i32 0, i32 33
  %2476 = getelementptr inbounds %struct.Reg, %struct.Reg* %2475, i32 0, i32 0
  %PC.i1488 = bitcast %union.anon* %2476 to i64*
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2478 = getelementptr inbounds %struct.GPR, %struct.GPR* %2477, i32 0, i32 9
  %2479 = getelementptr inbounds %struct.Reg, %struct.Reg* %2478, i32 0, i32 0
  %ESI.i1489 = bitcast %union.anon* %2479 to i32*
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2481 = getelementptr inbounds %struct.GPR, %struct.GPR* %2480, i32 0, i32 5
  %2482 = getelementptr inbounds %struct.Reg, %struct.Reg* %2481, i32 0, i32 0
  %RCX.i1490 = bitcast %union.anon* %2482 to i64*
  %2483 = load i32, i32* %ESI.i1489
  %2484 = zext i32 %2483 to i64
  %2485 = load i64, i64* %PC.i1488
  %2486 = add i64 %2485, 3
  store i64 %2486, i64* %PC.i1488
  %2487 = shl i64 %2484, 32
  %2488 = ashr exact i64 %2487, 32
  store i64 %2488, i64* %RCX.i1490, align 8
  store %struct.Memory* %loadMem_4417b9, %struct.Memory** %MEMORY
  %loadMem_4417bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2490 = getelementptr inbounds %struct.GPR, %struct.GPR* %2489, i32 0, i32 33
  %2491 = getelementptr inbounds %struct.Reg, %struct.Reg* %2490, i32 0, i32 0
  %PC.i1485 = bitcast %union.anon* %2491 to i64*
  %2492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2493 = getelementptr inbounds %struct.GPR, %struct.GPR* %2492, i32 0, i32 1
  %2494 = getelementptr inbounds %struct.Reg, %struct.Reg* %2493, i32 0, i32 0
  %RAX.i1486 = bitcast %union.anon* %2494 to i64*
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2496 = getelementptr inbounds %struct.GPR, %struct.GPR* %2495, i32 0, i32 5
  %2497 = getelementptr inbounds %struct.Reg, %struct.Reg* %2496, i32 0, i32 0
  %RCX.i1487 = bitcast %union.anon* %2497 to i64*
  %2498 = load i64, i64* %RAX.i1486
  %2499 = load i64, i64* %RCX.i1487
  %2500 = mul i64 %2499, 8
  %2501 = add i64 %2500, %2498
  %2502 = load i64, i64* %PC.i1485
  %2503 = add i64 %2502, 4
  store i64 %2503, i64* %PC.i1485
  %2504 = inttoptr i64 %2501 to i64*
  %2505 = load i64, i64* %2504
  store i64 %2505, i64* %RAX.i1486, align 8
  store %struct.Memory* %loadMem_4417bc, %struct.Memory** %MEMORY
  %loadMem_4417c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2507 = getelementptr inbounds %struct.GPR, %struct.GPR* %2506, i32 0, i32 33
  %2508 = getelementptr inbounds %struct.Reg, %struct.Reg* %2507, i32 0, i32 0
  %PC.i1483 = bitcast %union.anon* %2508 to i64*
  %2509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2510 = getelementptr inbounds %struct.GPR, %struct.GPR* %2509, i32 0, i32 5
  %2511 = getelementptr inbounds %struct.Reg, %struct.Reg* %2510, i32 0, i32 0
  %RCX.i1484 = bitcast %union.anon* %2511 to i64*
  %2512 = load i64, i64* %PC.i1483
  %2513 = add i64 %2512, 8
  store i64 %2513, i64* %PC.i1483
  %2514 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2514, i64* %RCX.i1484, align 8
  store %struct.Memory* %loadMem_4417c0, %struct.Memory** %MEMORY
  %loadMem_4417c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2516 = getelementptr inbounds %struct.GPR, %struct.GPR* %2515, i32 0, i32 33
  %2517 = getelementptr inbounds %struct.Reg, %struct.Reg* %2516, i32 0, i32 0
  %PC.i1480 = bitcast %union.anon* %2517 to i64*
  %2518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2519 = getelementptr inbounds %struct.GPR, %struct.GPR* %2518, i32 0, i32 5
  %2520 = getelementptr inbounds %struct.Reg, %struct.Reg* %2519, i32 0, i32 0
  %RCX.i1481 = bitcast %union.anon* %2520 to i64*
  %2521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2522 = getelementptr inbounds %struct.GPR, %struct.GPR* %2521, i32 0, i32 9
  %2523 = getelementptr inbounds %struct.Reg, %struct.Reg* %2522, i32 0, i32 0
  %RSI.i1482 = bitcast %union.anon* %2523 to i64*
  %2524 = load i64, i64* %RCX.i1481
  %2525 = add i64 %2524, 160
  %2526 = load i64, i64* %PC.i1480
  %2527 = add i64 %2526, 6
  store i64 %2527, i64* %PC.i1480
  %2528 = inttoptr i64 %2525 to i32*
  %2529 = load i32, i32* %2528
  %2530 = zext i32 %2529 to i64
  store i64 %2530, i64* %RSI.i1482, align 8
  store %struct.Memory* %loadMem_4417c8, %struct.Memory** %MEMORY
  %loadMem_4417ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %2531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2532 = getelementptr inbounds %struct.GPR, %struct.GPR* %2531, i32 0, i32 33
  %2533 = getelementptr inbounds %struct.Reg, %struct.Reg* %2532, i32 0, i32 0
  %PC.i1477 = bitcast %union.anon* %2533 to i64*
  %2534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2535 = getelementptr inbounds %struct.GPR, %struct.GPR* %2534, i32 0, i32 9
  %2536 = getelementptr inbounds %struct.Reg, %struct.Reg* %2535, i32 0, i32 0
  %RSI.i1478 = bitcast %union.anon* %2536 to i64*
  %2537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2538 = getelementptr inbounds %struct.GPR, %struct.GPR* %2537, i32 0, i32 15
  %2539 = getelementptr inbounds %struct.Reg, %struct.Reg* %2538, i32 0, i32 0
  %RBP.i1479 = bitcast %union.anon* %2539 to i64*
  %2540 = load i64, i64* %RSI.i1478
  %2541 = load i64, i64* %RBP.i1479
  %2542 = sub i64 %2541, 32
  %2543 = load i64, i64* %PC.i1477
  %2544 = add i64 %2543, 3
  store i64 %2544, i64* %PC.i1477
  %2545 = trunc i64 %2540 to i32
  %2546 = inttoptr i64 %2542 to i32*
  %2547 = load i32, i32* %2546
  %2548 = add i32 %2547, %2545
  %2549 = zext i32 %2548 to i64
  store i64 %2549, i64* %RSI.i1478, align 8
  %2550 = icmp ult i32 %2548, %2545
  %2551 = icmp ult i32 %2548, %2547
  %2552 = or i1 %2550, %2551
  %2553 = zext i1 %2552 to i8
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2553, i8* %2554, align 1
  %2555 = and i32 %2548, 255
  %2556 = call i32 @llvm.ctpop.i32(i32 %2555)
  %2557 = trunc i32 %2556 to i8
  %2558 = and i8 %2557, 1
  %2559 = xor i8 %2558, 1
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2559, i8* %2560, align 1
  %2561 = xor i32 %2547, %2545
  %2562 = xor i32 %2561, %2548
  %2563 = lshr i32 %2562, 4
  %2564 = trunc i32 %2563 to i8
  %2565 = and i8 %2564, 1
  %2566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2565, i8* %2566, align 1
  %2567 = icmp eq i32 %2548, 0
  %2568 = zext i1 %2567 to i8
  %2569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2568, i8* %2569, align 1
  %2570 = lshr i32 %2548, 31
  %2571 = trunc i32 %2570 to i8
  %2572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2571, i8* %2572, align 1
  %2573 = lshr i32 %2545, 31
  %2574 = lshr i32 %2547, 31
  %2575 = xor i32 %2570, %2573
  %2576 = xor i32 %2570, %2574
  %2577 = add i32 %2575, %2576
  %2578 = icmp eq i32 %2577, 2
  %2579 = zext i1 %2578 to i8
  %2580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2579, i8* %2580, align 1
  store %struct.Memory* %loadMem_4417ce, %struct.Memory** %MEMORY
  %loadMem_4417d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2582 = getelementptr inbounds %struct.GPR, %struct.GPR* %2581, i32 0, i32 33
  %2583 = getelementptr inbounds %struct.Reg, %struct.Reg* %2582, i32 0, i32 0
  %PC.i1474 = bitcast %union.anon* %2583 to i64*
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2585 = getelementptr inbounds %struct.GPR, %struct.GPR* %2584, i32 0, i32 9
  %2586 = getelementptr inbounds %struct.Reg, %struct.Reg* %2585, i32 0, i32 0
  %ESI.i1475 = bitcast %union.anon* %2586 to i32*
  %2587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2588 = getelementptr inbounds %struct.GPR, %struct.GPR* %2587, i32 0, i32 5
  %2589 = getelementptr inbounds %struct.Reg, %struct.Reg* %2588, i32 0, i32 0
  %RCX.i1476 = bitcast %union.anon* %2589 to i64*
  %2590 = load i32, i32* %ESI.i1475
  %2591 = zext i32 %2590 to i64
  %2592 = load i64, i64* %PC.i1474
  %2593 = add i64 %2592, 3
  store i64 %2593, i64* %PC.i1474
  %2594 = shl i64 %2591, 32
  %2595 = ashr exact i64 %2594, 32
  store i64 %2595, i64* %RCX.i1476, align 8
  store %struct.Memory* %loadMem_4417d1, %struct.Memory** %MEMORY
  %loadMem_4417d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2597 = getelementptr inbounds %struct.GPR, %struct.GPR* %2596, i32 0, i32 33
  %2598 = getelementptr inbounds %struct.Reg, %struct.Reg* %2597, i32 0, i32 0
  %PC.i1470 = bitcast %union.anon* %2598 to i64*
  %2599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2600 = getelementptr inbounds %struct.GPR, %struct.GPR* %2599, i32 0, i32 7
  %2601 = getelementptr inbounds %struct.Reg, %struct.Reg* %2600, i32 0, i32 0
  %DX.i1471 = bitcast %union.anon* %2601 to i16*
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2603 = getelementptr inbounds %struct.GPR, %struct.GPR* %2602, i32 0, i32 1
  %2604 = getelementptr inbounds %struct.Reg, %struct.Reg* %2603, i32 0, i32 0
  %RAX.i1472 = bitcast %union.anon* %2604 to i64*
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2606 = getelementptr inbounds %struct.GPR, %struct.GPR* %2605, i32 0, i32 5
  %2607 = getelementptr inbounds %struct.Reg, %struct.Reg* %2606, i32 0, i32 0
  %RCX.i1473 = bitcast %union.anon* %2607 to i64*
  %2608 = load i64, i64* %RAX.i1472
  %2609 = load i64, i64* %RCX.i1473
  %2610 = mul i64 %2609, 2
  %2611 = add i64 %2610, %2608
  %2612 = load i16, i16* %DX.i1471
  %2613 = zext i16 %2612 to i64
  %2614 = load i64, i64* %PC.i1470
  %2615 = add i64 %2614, 4
  store i64 %2615, i64* %PC.i1470
  %2616 = inttoptr i64 %2611 to i16*
  store i16 %2612, i16* %2616
  store %struct.Memory* %loadMem_4417d4, %struct.Memory** %MEMORY
  %loadMem_4417d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2618 = getelementptr inbounds %struct.GPR, %struct.GPR* %2617, i32 0, i32 33
  %2619 = getelementptr inbounds %struct.Reg, %struct.Reg* %2618, i32 0, i32 0
  %PC.i1469 = bitcast %union.anon* %2619 to i64*
  %2620 = load i64, i64* %PC.i1469
  %2621 = add i64 %2620, 89
  %2622 = load i64, i64* %PC.i1469
  %2623 = add i64 %2622, 5
  store i64 %2623, i64* %PC.i1469
  %2624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2621, i64* %2624, align 8
  store %struct.Memory* %loadMem_4417d8, %struct.Memory** %MEMORY
  br label %block_.L_441831

block_.L_4417dd:                                  ; preds = %block_44175b
  %loadMem_4417dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2626 = getelementptr inbounds %struct.GPR, %struct.GPR* %2625, i32 0, i32 33
  %2627 = getelementptr inbounds %struct.Reg, %struct.Reg* %2626, i32 0, i32 0
  %PC.i1467 = bitcast %union.anon* %2627 to i64*
  %2628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2629 = getelementptr inbounds %struct.GPR, %struct.GPR* %2628, i32 0, i32 15
  %2630 = getelementptr inbounds %struct.Reg, %struct.Reg* %2629, i32 0, i32 0
  %RBP.i1468 = bitcast %union.anon* %2630 to i64*
  %2631 = load i64, i64* %RBP.i1468
  %2632 = sub i64 %2631, 12
  %2633 = load i64, i64* %PC.i1467
  %2634 = add i64 %2633, 4
  store i64 %2634, i64* %PC.i1467
  %2635 = inttoptr i64 %2632 to i32*
  %2636 = load i32, i32* %2635
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2637, align 1
  %2638 = and i32 %2636, 255
  %2639 = call i32 @llvm.ctpop.i32(i32 %2638)
  %2640 = trunc i32 %2639 to i8
  %2641 = and i8 %2640, 1
  %2642 = xor i8 %2641, 1
  %2643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2642, i8* %2643, align 1
  %2644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2644, align 1
  %2645 = icmp eq i32 %2636, 0
  %2646 = zext i1 %2645 to i8
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2646, i8* %2647, align 1
  %2648 = lshr i32 %2636, 31
  %2649 = trunc i32 %2648 to i8
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2649, i8* %2650, align 1
  %2651 = lshr i32 %2636, 31
  %2652 = xor i32 %2648, %2651
  %2653 = add i32 %2652, %2651
  %2654 = icmp eq i32 %2653, 2
  %2655 = zext i1 %2654 to i8
  %2656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2655, i8* %2656, align 1
  store %struct.Memory* %loadMem_4417dd, %struct.Memory** %MEMORY
  %loadMem_4417e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2658 = getelementptr inbounds %struct.GPR, %struct.GPR* %2657, i32 0, i32 33
  %2659 = getelementptr inbounds %struct.Reg, %struct.Reg* %2658, i32 0, i32 0
  %PC.i1466 = bitcast %union.anon* %2659 to i64*
  %2660 = load i64, i64* %PC.i1466
  %2661 = add i64 %2660, 43
  %2662 = load i64, i64* %PC.i1466
  %2663 = add i64 %2662, 6
  %2664 = load i64, i64* %PC.i1466
  %2665 = add i64 %2664, 6
  store i64 %2665, i64* %PC.i1466
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2667 = load i8, i8* %2666, align 1
  %2668 = icmp eq i8 %2667, 0
  %2669 = zext i1 %2668 to i8
  store i8 %2669, i8* %BRANCH_TAKEN, align 1
  %2670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2671 = select i1 %2668, i64 %2661, i64 %2663
  store i64 %2671, i64* %2670, align 8
  store %struct.Memory* %loadMem_4417e1, %struct.Memory** %MEMORY
  %loadBr_4417e1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4417e1 = icmp eq i8 %loadBr_4417e1, 1
  br i1 %cmpBr_4417e1, label %block_.L_44180c, label %block_4417e7

block_4417e7:                                     ; preds = %block_.L_4417dd
  %loadMem_4417e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2673 = getelementptr inbounds %struct.GPR, %struct.GPR* %2672, i32 0, i32 33
  %2674 = getelementptr inbounds %struct.Reg, %struct.Reg* %2673, i32 0, i32 0
  %PC.i1464 = bitcast %union.anon* %2674 to i64*
  %2675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2676 = getelementptr inbounds %struct.GPR, %struct.GPR* %2675, i32 0, i32 1
  %2677 = getelementptr inbounds %struct.Reg, %struct.Reg* %2676, i32 0, i32 0
  %RAX.i1465 = bitcast %union.anon* %2677 to i64*
  %2678 = load i64, i64* %PC.i1464
  %2679 = add i64 %2678, 10
  store i64 %2679, i64* %PC.i1464
  store i64 ptrtoint (%G__0x6f8f20_type* @G__0x6f8f20 to i64), i64* %RAX.i1465, align 8
  store %struct.Memory* %loadMem_4417e7, %struct.Memory** %MEMORY
  %loadMem_4417f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2681 = getelementptr inbounds %struct.GPR, %struct.GPR* %2680, i32 0, i32 33
  %2682 = getelementptr inbounds %struct.Reg, %struct.Reg* %2681, i32 0, i32 0
  %PC.i1461 = bitcast %union.anon* %2682 to i64*
  %2683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2684 = getelementptr inbounds %struct.GPR, %struct.GPR* %2683, i32 0, i32 5
  %2685 = getelementptr inbounds %struct.Reg, %struct.Reg* %2684, i32 0, i32 0
  %RCX.i1462 = bitcast %union.anon* %2685 to i64*
  %2686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2687 = getelementptr inbounds %struct.GPR, %struct.GPR* %2686, i32 0, i32 15
  %2688 = getelementptr inbounds %struct.Reg, %struct.Reg* %2687, i32 0, i32 0
  %RBP.i1463 = bitcast %union.anon* %2688 to i64*
  %2689 = load i64, i64* %RBP.i1463
  %2690 = sub i64 %2689, 32
  %2691 = load i64, i64* %PC.i1461
  %2692 = add i64 %2691, 4
  store i64 %2692, i64* %PC.i1461
  %2693 = inttoptr i64 %2690 to i32*
  %2694 = load i32, i32* %2693
  %2695 = sext i32 %2694 to i64
  store i64 %2695, i64* %RCX.i1462, align 8
  store %struct.Memory* %loadMem_4417f1, %struct.Memory** %MEMORY
  %loadMem_4417f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2697 = getelementptr inbounds %struct.GPR, %struct.GPR* %2696, i32 0, i32 33
  %2698 = getelementptr inbounds %struct.Reg, %struct.Reg* %2697, i32 0, i32 0
  %PC.i1459 = bitcast %union.anon* %2698 to i64*
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2700 = getelementptr inbounds %struct.GPR, %struct.GPR* %2699, i32 0, i32 5
  %2701 = getelementptr inbounds %struct.Reg, %struct.Reg* %2700, i32 0, i32 0
  %RCX.i1460 = bitcast %union.anon* %2701 to i64*
  %2702 = load i64, i64* %RCX.i1460
  %2703 = load i64, i64* %PC.i1459
  %2704 = add i64 %2703, 4
  store i64 %2704, i64* %PC.i1459
  %2705 = shl i64 %2702, 5
  %2706 = icmp slt i64 %2705, 0
  %2707 = shl i64 %2705, 1
  store i64 %2707, i64* %RCX.i1460, align 8
  %2708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2709 = zext i1 %2706 to i8
  store i8 %2709, i8* %2708, align 1
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2711 = trunc i64 %2707 to i32
  %2712 = and i32 %2711, 254
  %2713 = call i32 @llvm.ctpop.i32(i32 %2712)
  %2714 = trunc i32 %2713 to i8
  %2715 = and i8 %2714, 1
  %2716 = xor i8 %2715, 1
  store i8 %2716, i8* %2710, align 1
  %2717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2717, align 1
  %2718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2719 = icmp eq i64 %2707, 0
  %2720 = zext i1 %2719 to i8
  store i8 %2720, i8* %2718, align 1
  %2721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2722 = lshr i64 %2707, 63
  %2723 = trunc i64 %2722 to i8
  store i8 %2723, i8* %2721, align 1
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2724, align 1
  store %struct.Memory* %loadMem_4417f5, %struct.Memory** %MEMORY
  %loadMem_4417f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2726 = getelementptr inbounds %struct.GPR, %struct.GPR* %2725, i32 0, i32 33
  %2727 = getelementptr inbounds %struct.Reg, %struct.Reg* %2726, i32 0, i32 0
  %PC.i1456 = bitcast %union.anon* %2727 to i64*
  %2728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2729 = getelementptr inbounds %struct.GPR, %struct.GPR* %2728, i32 0, i32 1
  %2730 = getelementptr inbounds %struct.Reg, %struct.Reg* %2729, i32 0, i32 0
  %RAX.i1457 = bitcast %union.anon* %2730 to i64*
  %2731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2732 = getelementptr inbounds %struct.GPR, %struct.GPR* %2731, i32 0, i32 5
  %2733 = getelementptr inbounds %struct.Reg, %struct.Reg* %2732, i32 0, i32 0
  %RCX.i1458 = bitcast %union.anon* %2733 to i64*
  %2734 = load i64, i64* %RAX.i1457
  %2735 = load i64, i64* %RCX.i1458
  %2736 = load i64, i64* %PC.i1456
  %2737 = add i64 %2736, 3
  store i64 %2737, i64* %PC.i1456
  %2738 = add i64 %2735, %2734
  store i64 %2738, i64* %RAX.i1457, align 8
  %2739 = icmp ult i64 %2738, %2734
  %2740 = icmp ult i64 %2738, %2735
  %2741 = or i1 %2739, %2740
  %2742 = zext i1 %2741 to i8
  %2743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2742, i8* %2743, align 1
  %2744 = trunc i64 %2738 to i32
  %2745 = and i32 %2744, 255
  %2746 = call i32 @llvm.ctpop.i32(i32 %2745)
  %2747 = trunc i32 %2746 to i8
  %2748 = and i8 %2747, 1
  %2749 = xor i8 %2748, 1
  %2750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2749, i8* %2750, align 1
  %2751 = xor i64 %2735, %2734
  %2752 = xor i64 %2751, %2738
  %2753 = lshr i64 %2752, 4
  %2754 = trunc i64 %2753 to i8
  %2755 = and i8 %2754, 1
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2755, i8* %2756, align 1
  %2757 = icmp eq i64 %2738, 0
  %2758 = zext i1 %2757 to i8
  %2759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2758, i8* %2759, align 1
  %2760 = lshr i64 %2738, 63
  %2761 = trunc i64 %2760 to i8
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2761, i8* %2762, align 1
  %2763 = lshr i64 %2734, 63
  %2764 = lshr i64 %2735, 63
  %2765 = xor i64 %2760, %2763
  %2766 = xor i64 %2760, %2764
  %2767 = add i64 %2765, %2766
  %2768 = icmp eq i64 %2767, 2
  %2769 = zext i1 %2768 to i8
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2769, i8* %2770, align 1
  store %struct.Memory* %loadMem_4417f9, %struct.Memory** %MEMORY
  %loadMem_4417fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2772 = getelementptr inbounds %struct.GPR, %struct.GPR* %2771, i32 0, i32 33
  %2773 = getelementptr inbounds %struct.Reg, %struct.Reg* %2772, i32 0, i32 0
  %PC.i1453 = bitcast %union.anon* %2773 to i64*
  %2774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2775 = getelementptr inbounds %struct.GPR, %struct.GPR* %2774, i32 0, i32 5
  %2776 = getelementptr inbounds %struct.Reg, %struct.Reg* %2775, i32 0, i32 0
  %RCX.i1454 = bitcast %union.anon* %2776 to i64*
  %2777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2778 = getelementptr inbounds %struct.GPR, %struct.GPR* %2777, i32 0, i32 15
  %2779 = getelementptr inbounds %struct.Reg, %struct.Reg* %2778, i32 0, i32 0
  %RBP.i1455 = bitcast %union.anon* %2779 to i64*
  %2780 = load i64, i64* %RBP.i1455
  %2781 = sub i64 %2780, 28
  %2782 = load i64, i64* %PC.i1453
  %2783 = add i64 %2782, 4
  store i64 %2783, i64* %PC.i1453
  %2784 = inttoptr i64 %2781 to i32*
  %2785 = load i32, i32* %2784
  %2786 = sext i32 %2785 to i64
  store i64 %2786, i64* %RCX.i1454, align 8
  store %struct.Memory* %loadMem_4417fc, %struct.Memory** %MEMORY
  %loadMem_441800 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2788 = getelementptr inbounds %struct.GPR, %struct.GPR* %2787, i32 0, i32 33
  %2789 = getelementptr inbounds %struct.Reg, %struct.Reg* %2788, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %2789 to i64*
  %2790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2791 = getelementptr inbounds %struct.GPR, %struct.GPR* %2790, i32 0, i32 1
  %2792 = getelementptr inbounds %struct.Reg, %struct.Reg* %2791, i32 0, i32 0
  %RAX.i1451 = bitcast %union.anon* %2792 to i64*
  %2793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2794 = getelementptr inbounds %struct.GPR, %struct.GPR* %2793, i32 0, i32 5
  %2795 = getelementptr inbounds %struct.Reg, %struct.Reg* %2794, i32 0, i32 0
  %RCX.i1452 = bitcast %union.anon* %2795 to i64*
  %2796 = load i64, i64* %RAX.i1451
  %2797 = load i64, i64* %RCX.i1452
  %2798 = mul i64 %2797, 4
  %2799 = add i64 %2798, %2796
  %2800 = load i64, i64* %PC.i1450
  %2801 = add i64 %2800, 7
  store i64 %2801, i64* %PC.i1450
  %2802 = inttoptr i64 %2799 to i32*
  store i32 0, i32* %2802
  store %struct.Memory* %loadMem_441800, %struct.Memory** %MEMORY
  %loadMem_441807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2804 = getelementptr inbounds %struct.GPR, %struct.GPR* %2803, i32 0, i32 33
  %2805 = getelementptr inbounds %struct.Reg, %struct.Reg* %2804, i32 0, i32 0
  %PC.i1449 = bitcast %union.anon* %2805 to i64*
  %2806 = load i64, i64* %PC.i1449
  %2807 = add i64 %2806, 37
  %2808 = load i64, i64* %PC.i1449
  %2809 = add i64 %2808, 5
  store i64 %2809, i64* %PC.i1449
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2807, i64* %2810, align 8
  store %struct.Memory* %loadMem_441807, %struct.Memory** %MEMORY
  br label %block_.L_44182c

block_.L_44180c:                                  ; preds = %block_.L_4417dd
  %loadMem_44180c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2812 = getelementptr inbounds %struct.GPR, %struct.GPR* %2811, i32 0, i32 33
  %2813 = getelementptr inbounds %struct.Reg, %struct.Reg* %2812, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %2813 to i64*
  %2814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2815 = getelementptr inbounds %struct.GPR, %struct.GPR* %2814, i32 0, i32 1
  %2816 = getelementptr inbounds %struct.Reg, %struct.Reg* %2815, i32 0, i32 0
  %RAX.i1448 = bitcast %union.anon* %2816 to i64*
  %2817 = load i64, i64* %PC.i1447
  %2818 = add i64 %2817, 10
  store i64 %2818, i64* %PC.i1447
  store i64 ptrtoint (%G__0x6d2ec0_type* @G__0x6d2ec0 to i64), i64* %RAX.i1448, align 8
  store %struct.Memory* %loadMem_44180c, %struct.Memory** %MEMORY
  %loadMem_441816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2820 = getelementptr inbounds %struct.GPR, %struct.GPR* %2819, i32 0, i32 33
  %2821 = getelementptr inbounds %struct.Reg, %struct.Reg* %2820, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %2821 to i64*
  %2822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2823 = getelementptr inbounds %struct.GPR, %struct.GPR* %2822, i32 0, i32 5
  %2824 = getelementptr inbounds %struct.Reg, %struct.Reg* %2823, i32 0, i32 0
  %RCX.i1445 = bitcast %union.anon* %2824 to i64*
  %2825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2826 = getelementptr inbounds %struct.GPR, %struct.GPR* %2825, i32 0, i32 15
  %2827 = getelementptr inbounds %struct.Reg, %struct.Reg* %2826, i32 0, i32 0
  %RBP.i1446 = bitcast %union.anon* %2827 to i64*
  %2828 = load i64, i64* %RBP.i1446
  %2829 = sub i64 %2828, 32
  %2830 = load i64, i64* %PC.i1444
  %2831 = add i64 %2830, 4
  store i64 %2831, i64* %PC.i1444
  %2832 = inttoptr i64 %2829 to i32*
  %2833 = load i32, i32* %2832
  %2834 = sext i32 %2833 to i64
  store i64 %2834, i64* %RCX.i1445, align 8
  store %struct.Memory* %loadMem_441816, %struct.Memory** %MEMORY
  %loadMem_44181a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2836 = getelementptr inbounds %struct.GPR, %struct.GPR* %2835, i32 0, i32 33
  %2837 = getelementptr inbounds %struct.Reg, %struct.Reg* %2836, i32 0, i32 0
  %PC.i1442 = bitcast %union.anon* %2837 to i64*
  %2838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2839 = getelementptr inbounds %struct.GPR, %struct.GPR* %2838, i32 0, i32 5
  %2840 = getelementptr inbounds %struct.Reg, %struct.Reg* %2839, i32 0, i32 0
  %RCX.i1443 = bitcast %union.anon* %2840 to i64*
  %2841 = load i64, i64* %RCX.i1443
  %2842 = load i64, i64* %PC.i1442
  %2843 = add i64 %2842, 4
  store i64 %2843, i64* %PC.i1442
  %2844 = shl i64 %2841, 5
  %2845 = icmp slt i64 %2844, 0
  %2846 = shl i64 %2844, 1
  store i64 %2846, i64* %RCX.i1443, align 8
  %2847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2848 = zext i1 %2845 to i8
  store i8 %2848, i8* %2847, align 1
  %2849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2850 = trunc i64 %2846 to i32
  %2851 = and i32 %2850, 254
  %2852 = call i32 @llvm.ctpop.i32(i32 %2851)
  %2853 = trunc i32 %2852 to i8
  %2854 = and i8 %2853, 1
  %2855 = xor i8 %2854, 1
  store i8 %2855, i8* %2849, align 1
  %2856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2856, align 1
  %2857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2858 = icmp eq i64 %2846, 0
  %2859 = zext i1 %2858 to i8
  store i8 %2859, i8* %2857, align 1
  %2860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2861 = lshr i64 %2846, 63
  %2862 = trunc i64 %2861 to i8
  store i8 %2862, i8* %2860, align 1
  %2863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2863, align 1
  store %struct.Memory* %loadMem_44181a, %struct.Memory** %MEMORY
  %loadMem_44181e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2865 = getelementptr inbounds %struct.GPR, %struct.GPR* %2864, i32 0, i32 33
  %2866 = getelementptr inbounds %struct.Reg, %struct.Reg* %2865, i32 0, i32 0
  %PC.i1439 = bitcast %union.anon* %2866 to i64*
  %2867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2868 = getelementptr inbounds %struct.GPR, %struct.GPR* %2867, i32 0, i32 1
  %2869 = getelementptr inbounds %struct.Reg, %struct.Reg* %2868, i32 0, i32 0
  %RAX.i1440 = bitcast %union.anon* %2869 to i64*
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2871 = getelementptr inbounds %struct.GPR, %struct.GPR* %2870, i32 0, i32 5
  %2872 = getelementptr inbounds %struct.Reg, %struct.Reg* %2871, i32 0, i32 0
  %RCX.i1441 = bitcast %union.anon* %2872 to i64*
  %2873 = load i64, i64* %RAX.i1440
  %2874 = load i64, i64* %RCX.i1441
  %2875 = load i64, i64* %PC.i1439
  %2876 = add i64 %2875, 3
  store i64 %2876, i64* %PC.i1439
  %2877 = add i64 %2874, %2873
  store i64 %2877, i64* %RAX.i1440, align 8
  %2878 = icmp ult i64 %2877, %2873
  %2879 = icmp ult i64 %2877, %2874
  %2880 = or i1 %2878, %2879
  %2881 = zext i1 %2880 to i8
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2881, i8* %2882, align 1
  %2883 = trunc i64 %2877 to i32
  %2884 = and i32 %2883, 255
  %2885 = call i32 @llvm.ctpop.i32(i32 %2884)
  %2886 = trunc i32 %2885 to i8
  %2887 = and i8 %2886, 1
  %2888 = xor i8 %2887, 1
  %2889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2888, i8* %2889, align 1
  %2890 = xor i64 %2874, %2873
  %2891 = xor i64 %2890, %2877
  %2892 = lshr i64 %2891, 4
  %2893 = trunc i64 %2892 to i8
  %2894 = and i8 %2893, 1
  %2895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2894, i8* %2895, align 1
  %2896 = icmp eq i64 %2877, 0
  %2897 = zext i1 %2896 to i8
  %2898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2897, i8* %2898, align 1
  %2899 = lshr i64 %2877, 63
  %2900 = trunc i64 %2899 to i8
  %2901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2900, i8* %2901, align 1
  %2902 = lshr i64 %2873, 63
  %2903 = lshr i64 %2874, 63
  %2904 = xor i64 %2899, %2902
  %2905 = xor i64 %2899, %2903
  %2906 = add i64 %2904, %2905
  %2907 = icmp eq i64 %2906, 2
  %2908 = zext i1 %2907 to i8
  %2909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2908, i8* %2909, align 1
  store %struct.Memory* %loadMem_44181e, %struct.Memory** %MEMORY
  %loadMem_441821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2911 = getelementptr inbounds %struct.GPR, %struct.GPR* %2910, i32 0, i32 33
  %2912 = getelementptr inbounds %struct.Reg, %struct.Reg* %2911, i32 0, i32 0
  %PC.i1436 = bitcast %union.anon* %2912 to i64*
  %2913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2914 = getelementptr inbounds %struct.GPR, %struct.GPR* %2913, i32 0, i32 5
  %2915 = getelementptr inbounds %struct.Reg, %struct.Reg* %2914, i32 0, i32 0
  %RCX.i1437 = bitcast %union.anon* %2915 to i64*
  %2916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2917 = getelementptr inbounds %struct.GPR, %struct.GPR* %2916, i32 0, i32 15
  %2918 = getelementptr inbounds %struct.Reg, %struct.Reg* %2917, i32 0, i32 0
  %RBP.i1438 = bitcast %union.anon* %2918 to i64*
  %2919 = load i64, i64* %RBP.i1438
  %2920 = sub i64 %2919, 28
  %2921 = load i64, i64* %PC.i1436
  %2922 = add i64 %2921, 4
  store i64 %2922, i64* %PC.i1436
  %2923 = inttoptr i64 %2920 to i32*
  %2924 = load i32, i32* %2923
  %2925 = sext i32 %2924 to i64
  store i64 %2925, i64* %RCX.i1437, align 8
  store %struct.Memory* %loadMem_441821, %struct.Memory** %MEMORY
  %loadMem_441825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2927 = getelementptr inbounds %struct.GPR, %struct.GPR* %2926, i32 0, i32 33
  %2928 = getelementptr inbounds %struct.Reg, %struct.Reg* %2927, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %2928 to i64*
  %2929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2930 = getelementptr inbounds %struct.GPR, %struct.GPR* %2929, i32 0, i32 1
  %2931 = getelementptr inbounds %struct.Reg, %struct.Reg* %2930, i32 0, i32 0
  %RAX.i1434 = bitcast %union.anon* %2931 to i64*
  %2932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2933 = getelementptr inbounds %struct.GPR, %struct.GPR* %2932, i32 0, i32 5
  %2934 = getelementptr inbounds %struct.Reg, %struct.Reg* %2933, i32 0, i32 0
  %RCX.i1435 = bitcast %union.anon* %2934 to i64*
  %2935 = load i64, i64* %RAX.i1434
  %2936 = load i64, i64* %RCX.i1435
  %2937 = mul i64 %2936, 4
  %2938 = add i64 %2937, %2935
  %2939 = load i64, i64* %PC.i1433
  %2940 = add i64 %2939, 7
  store i64 %2940, i64* %PC.i1433
  %2941 = inttoptr i64 %2938 to i32*
  store i32 0, i32* %2941
  store %struct.Memory* %loadMem_441825, %struct.Memory** %MEMORY
  br label %block_.L_44182c

block_.L_44182c:                                  ; preds = %block_.L_44180c, %block_4417e7
  %loadMem_44182c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2943 = getelementptr inbounds %struct.GPR, %struct.GPR* %2942, i32 0, i32 33
  %2944 = getelementptr inbounds %struct.Reg, %struct.Reg* %2943, i32 0, i32 0
  %PC.i1432 = bitcast %union.anon* %2944 to i64*
  %2945 = load i64, i64* %PC.i1432
  %2946 = add i64 %2945, 5
  %2947 = load i64, i64* %PC.i1432
  %2948 = add i64 %2947, 5
  store i64 %2948, i64* %PC.i1432
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2946, i64* %2949, align 8
  store %struct.Memory* %loadMem_44182c, %struct.Memory** %MEMORY
  br label %block_.L_441831

block_.L_441831:                                  ; preds = %block_.L_44182c, %block_441770
  %loadMem_441831 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2951 = getelementptr inbounds %struct.GPR, %struct.GPR* %2950, i32 0, i32 33
  %2952 = getelementptr inbounds %struct.Reg, %struct.Reg* %2951, i32 0, i32 0
  %PC.i1431 = bitcast %union.anon* %2952 to i64*
  %2953 = load i64, i64* %PC.i1431
  %2954 = add i64 %2953, 5
  %2955 = load i64, i64* %PC.i1431
  %2956 = add i64 %2955, 5
  store i64 %2956, i64* %PC.i1431
  %2957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2954, i64* %2957, align 8
  store %struct.Memory* %loadMem_441831, %struct.Memory** %MEMORY
  br label %block_.L_441836

block_.L_441836:                                  ; preds = %block_.L_441831
  %loadMem_441836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2959 = getelementptr inbounds %struct.GPR, %struct.GPR* %2958, i32 0, i32 33
  %2960 = getelementptr inbounds %struct.Reg, %struct.Reg* %2959, i32 0, i32 0
  %PC.i1428 = bitcast %union.anon* %2960 to i64*
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2962 = getelementptr inbounds %struct.GPR, %struct.GPR* %2961, i32 0, i32 1
  %2963 = getelementptr inbounds %struct.Reg, %struct.Reg* %2962, i32 0, i32 0
  %RAX.i1429 = bitcast %union.anon* %2963 to i64*
  %2964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2965 = getelementptr inbounds %struct.GPR, %struct.GPR* %2964, i32 0, i32 15
  %2966 = getelementptr inbounds %struct.Reg, %struct.Reg* %2965, i32 0, i32 0
  %RBP.i1430 = bitcast %union.anon* %2966 to i64*
  %2967 = load i64, i64* %RBP.i1430
  %2968 = sub i64 %2967, 32
  %2969 = load i64, i64* %PC.i1428
  %2970 = add i64 %2969, 3
  store i64 %2970, i64* %PC.i1428
  %2971 = inttoptr i64 %2968 to i32*
  %2972 = load i32, i32* %2971
  %2973 = zext i32 %2972 to i64
  store i64 %2973, i64* %RAX.i1429, align 8
  store %struct.Memory* %loadMem_441836, %struct.Memory** %MEMORY
  %loadMem_441839 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2975 = getelementptr inbounds %struct.GPR, %struct.GPR* %2974, i32 0, i32 33
  %2976 = getelementptr inbounds %struct.Reg, %struct.Reg* %2975, i32 0, i32 0
  %PC.i1426 = bitcast %union.anon* %2976 to i64*
  %2977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2978 = getelementptr inbounds %struct.GPR, %struct.GPR* %2977, i32 0, i32 1
  %2979 = getelementptr inbounds %struct.Reg, %struct.Reg* %2978, i32 0, i32 0
  %RAX.i1427 = bitcast %union.anon* %2979 to i64*
  %2980 = load i64, i64* %RAX.i1427
  %2981 = load i64, i64* %PC.i1426
  %2982 = add i64 %2981, 3
  store i64 %2982, i64* %PC.i1426
  %2983 = trunc i64 %2980 to i32
  %2984 = add i32 1, %2983
  %2985 = zext i32 %2984 to i64
  store i64 %2985, i64* %RAX.i1427, align 8
  %2986 = icmp ult i32 %2984, %2983
  %2987 = icmp ult i32 %2984, 1
  %2988 = or i1 %2986, %2987
  %2989 = zext i1 %2988 to i8
  %2990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2989, i8* %2990, align 1
  %2991 = and i32 %2984, 255
  %2992 = call i32 @llvm.ctpop.i32(i32 %2991)
  %2993 = trunc i32 %2992 to i8
  %2994 = and i8 %2993, 1
  %2995 = xor i8 %2994, 1
  %2996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2995, i8* %2996, align 1
  %2997 = xor i64 1, %2980
  %2998 = trunc i64 %2997 to i32
  %2999 = xor i32 %2998, %2984
  %3000 = lshr i32 %2999, 4
  %3001 = trunc i32 %3000 to i8
  %3002 = and i8 %3001, 1
  %3003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3002, i8* %3003, align 1
  %3004 = icmp eq i32 %2984, 0
  %3005 = zext i1 %3004 to i8
  %3006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3005, i8* %3006, align 1
  %3007 = lshr i32 %2984, 31
  %3008 = trunc i32 %3007 to i8
  %3009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3008, i8* %3009, align 1
  %3010 = lshr i32 %2983, 31
  %3011 = xor i32 %3007, %3010
  %3012 = add i32 %3011, %3007
  %3013 = icmp eq i32 %3012, 2
  %3014 = zext i1 %3013 to i8
  %3015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3014, i8* %3015, align 1
  store %struct.Memory* %loadMem_441839, %struct.Memory** %MEMORY
  %loadMem_44183c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3017 = getelementptr inbounds %struct.GPR, %struct.GPR* %3016, i32 0, i32 33
  %3018 = getelementptr inbounds %struct.Reg, %struct.Reg* %3017, i32 0, i32 0
  %PC.i1423 = bitcast %union.anon* %3018 to i64*
  %3019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3020 = getelementptr inbounds %struct.GPR, %struct.GPR* %3019, i32 0, i32 1
  %3021 = getelementptr inbounds %struct.Reg, %struct.Reg* %3020, i32 0, i32 0
  %EAX.i1424 = bitcast %union.anon* %3021 to i32*
  %3022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3023 = getelementptr inbounds %struct.GPR, %struct.GPR* %3022, i32 0, i32 15
  %3024 = getelementptr inbounds %struct.Reg, %struct.Reg* %3023, i32 0, i32 0
  %RBP.i1425 = bitcast %union.anon* %3024 to i64*
  %3025 = load i64, i64* %RBP.i1425
  %3026 = sub i64 %3025, 32
  %3027 = load i32, i32* %EAX.i1424
  %3028 = zext i32 %3027 to i64
  %3029 = load i64, i64* %PC.i1423
  %3030 = add i64 %3029, 3
  store i64 %3030, i64* %PC.i1423
  %3031 = inttoptr i64 %3026 to i32*
  store i32 %3027, i32* %3031
  store %struct.Memory* %loadMem_44183c, %struct.Memory** %MEMORY
  %loadMem_44183f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3033 = getelementptr inbounds %struct.GPR, %struct.GPR* %3032, i32 0, i32 33
  %3034 = getelementptr inbounds %struct.Reg, %struct.Reg* %3033, i32 0, i32 0
  %PC.i1422 = bitcast %union.anon* %3034 to i64*
  %3035 = load i64, i64* %PC.i1422
  %3036 = add i64 %3035, -251
  %3037 = load i64, i64* %PC.i1422
  %3038 = add i64 %3037, 5
  store i64 %3038, i64* %PC.i1422
  %3039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3036, i64* %3039, align 8
  store %struct.Memory* %loadMem_44183f, %struct.Memory** %MEMORY
  br label %block_.L_441744

block_.L_441844:                                  ; preds = %block_.L_441744
  %loadMem_441844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3041 = getelementptr inbounds %struct.GPR, %struct.GPR* %3040, i32 0, i32 33
  %3042 = getelementptr inbounds %struct.Reg, %struct.Reg* %3041, i32 0, i32 0
  %PC.i1421 = bitcast %union.anon* %3042 to i64*
  %3043 = load i64, i64* %PC.i1421
  %3044 = add i64 %3043, 5
  %3045 = load i64, i64* %PC.i1421
  %3046 = add i64 %3045, 5
  store i64 %3046, i64* %PC.i1421
  %3047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3044, i64* %3047, align 8
  store %struct.Memory* %loadMem_441844, %struct.Memory** %MEMORY
  br label %block_.L_441849

block_.L_441849:                                  ; preds = %block_.L_441844
  %loadMem_441849 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3049 = getelementptr inbounds %struct.GPR, %struct.GPR* %3048, i32 0, i32 33
  %3050 = getelementptr inbounds %struct.Reg, %struct.Reg* %3049, i32 0, i32 0
  %PC.i1418 = bitcast %union.anon* %3050 to i64*
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3052 = getelementptr inbounds %struct.GPR, %struct.GPR* %3051, i32 0, i32 1
  %3053 = getelementptr inbounds %struct.Reg, %struct.Reg* %3052, i32 0, i32 0
  %RAX.i1419 = bitcast %union.anon* %3053 to i64*
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3055 = getelementptr inbounds %struct.GPR, %struct.GPR* %3054, i32 0, i32 15
  %3056 = getelementptr inbounds %struct.Reg, %struct.Reg* %3055, i32 0, i32 0
  %RBP.i1420 = bitcast %union.anon* %3056 to i64*
  %3057 = load i64, i64* %RBP.i1420
  %3058 = sub i64 %3057, 28
  %3059 = load i64, i64* %PC.i1418
  %3060 = add i64 %3059, 3
  store i64 %3060, i64* %PC.i1418
  %3061 = inttoptr i64 %3058 to i32*
  %3062 = load i32, i32* %3061
  %3063 = zext i32 %3062 to i64
  store i64 %3063, i64* %RAX.i1419, align 8
  store %struct.Memory* %loadMem_441849, %struct.Memory** %MEMORY
  %loadMem_44184c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3065 = getelementptr inbounds %struct.GPR, %struct.GPR* %3064, i32 0, i32 33
  %3066 = getelementptr inbounds %struct.Reg, %struct.Reg* %3065, i32 0, i32 0
  %PC.i1416 = bitcast %union.anon* %3066 to i64*
  %3067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3068 = getelementptr inbounds %struct.GPR, %struct.GPR* %3067, i32 0, i32 1
  %3069 = getelementptr inbounds %struct.Reg, %struct.Reg* %3068, i32 0, i32 0
  %RAX.i1417 = bitcast %union.anon* %3069 to i64*
  %3070 = load i64, i64* %RAX.i1417
  %3071 = load i64, i64* %PC.i1416
  %3072 = add i64 %3071, 3
  store i64 %3072, i64* %PC.i1416
  %3073 = trunc i64 %3070 to i32
  %3074 = add i32 1, %3073
  %3075 = zext i32 %3074 to i64
  store i64 %3075, i64* %RAX.i1417, align 8
  %3076 = icmp ult i32 %3074, %3073
  %3077 = icmp ult i32 %3074, 1
  %3078 = or i1 %3076, %3077
  %3079 = zext i1 %3078 to i8
  %3080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3079, i8* %3080, align 1
  %3081 = and i32 %3074, 255
  %3082 = call i32 @llvm.ctpop.i32(i32 %3081)
  %3083 = trunc i32 %3082 to i8
  %3084 = and i8 %3083, 1
  %3085 = xor i8 %3084, 1
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3085, i8* %3086, align 1
  %3087 = xor i64 1, %3070
  %3088 = trunc i64 %3087 to i32
  %3089 = xor i32 %3088, %3074
  %3090 = lshr i32 %3089, 4
  %3091 = trunc i32 %3090 to i8
  %3092 = and i8 %3091, 1
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3092, i8* %3093, align 1
  %3094 = icmp eq i32 %3074, 0
  %3095 = zext i1 %3094 to i8
  %3096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3095, i8* %3096, align 1
  %3097 = lshr i32 %3074, 31
  %3098 = trunc i32 %3097 to i8
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3098, i8* %3099, align 1
  %3100 = lshr i32 %3073, 31
  %3101 = xor i32 %3097, %3100
  %3102 = add i32 %3101, %3097
  %3103 = icmp eq i32 %3102, 2
  %3104 = zext i1 %3103 to i8
  %3105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3104, i8* %3105, align 1
  store %struct.Memory* %loadMem_44184c, %struct.Memory** %MEMORY
  %loadMem_44184f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3107 = getelementptr inbounds %struct.GPR, %struct.GPR* %3106, i32 0, i32 33
  %3108 = getelementptr inbounds %struct.Reg, %struct.Reg* %3107, i32 0, i32 0
  %PC.i1413 = bitcast %union.anon* %3108 to i64*
  %3109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3110 = getelementptr inbounds %struct.GPR, %struct.GPR* %3109, i32 0, i32 1
  %3111 = getelementptr inbounds %struct.Reg, %struct.Reg* %3110, i32 0, i32 0
  %EAX.i1414 = bitcast %union.anon* %3111 to i32*
  %3112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3113 = getelementptr inbounds %struct.GPR, %struct.GPR* %3112, i32 0, i32 15
  %3114 = getelementptr inbounds %struct.Reg, %struct.Reg* %3113, i32 0, i32 0
  %RBP.i1415 = bitcast %union.anon* %3114 to i64*
  %3115 = load i64, i64* %RBP.i1415
  %3116 = sub i64 %3115, 28
  %3117 = load i32, i32* %EAX.i1414
  %3118 = zext i32 %3117 to i64
  %3119 = load i64, i64* %PC.i1413
  %3120 = add i64 %3119, 3
  store i64 %3120, i64* %PC.i1413
  %3121 = inttoptr i64 %3116 to i32*
  store i32 %3117, i32* %3121
  store %struct.Memory* %loadMem_44184f, %struct.Memory** %MEMORY
  %loadMem_441852 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3123 = getelementptr inbounds %struct.GPR, %struct.GPR* %3122, i32 0, i32 33
  %3124 = getelementptr inbounds %struct.Reg, %struct.Reg* %3123, i32 0, i32 0
  %PC.i1412 = bitcast %union.anon* %3124 to i64*
  %3125 = load i64, i64* %PC.i1412
  %3126 = add i64 %3125, -300
  %3127 = load i64, i64* %PC.i1412
  %3128 = add i64 %3127, 5
  store i64 %3128, i64* %PC.i1412
  %3129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3126, i64* %3129, align 8
  store %struct.Memory* %loadMem_441852, %struct.Memory** %MEMORY
  br label %block_.L_441726

block_.L_441857:                                  ; preds = %block_.L_441726
  %loadMem_441857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3131 = getelementptr inbounds %struct.GPR, %struct.GPR* %3130, i32 0, i32 33
  %3132 = getelementptr inbounds %struct.Reg, %struct.Reg* %3131, i32 0, i32 0
  %PC.i1411 = bitcast %union.anon* %3132 to i64*
  %3133 = load i64, i64* %PC.i1411
  %3134 = add i64 %3133, 878
  %3135 = load i64, i64* %PC.i1411
  %3136 = add i64 %3135, 5
  store i64 %3136, i64* %PC.i1411
  %3137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3134, i64* %3137, align 8
  store %struct.Memory* %loadMem_441857, %struct.Memory** %MEMORY
  br label %block_.L_441bc5

block_.L_44185c:                                  ; preds = %block_.L_44170a
  %loadMem_44185c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3139 = getelementptr inbounds %struct.GPR, %struct.GPR* %3138, i32 0, i32 33
  %3140 = getelementptr inbounds %struct.Reg, %struct.Reg* %3139, i32 0, i32 0
  %PC.i1409 = bitcast %union.anon* %3140 to i64*
  %3141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3142 = getelementptr inbounds %struct.GPR, %struct.GPR* %3141, i32 0, i32 15
  %3143 = getelementptr inbounds %struct.Reg, %struct.Reg* %3142, i32 0, i32 0
  %RBP.i1410 = bitcast %union.anon* %3143 to i64*
  %3144 = load i64, i64* %RBP.i1410
  %3145 = sub i64 %3144, 52
  %3146 = load i64, i64* %PC.i1409
  %3147 = add i64 %3146, 4
  store i64 %3147, i64* %PC.i1409
  %3148 = inttoptr i64 %3145 to i32*
  %3149 = load i32, i32* %3148
  %3150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3150, align 1
  %3151 = and i32 %3149, 255
  %3152 = call i32 @llvm.ctpop.i32(i32 %3151)
  %3153 = trunc i32 %3152 to i8
  %3154 = and i8 %3153, 1
  %3155 = xor i8 %3154, 1
  %3156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3155, i8* %3156, align 1
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3157, align 1
  %3158 = icmp eq i32 %3149, 0
  %3159 = zext i1 %3158 to i8
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3159, i8* %3160, align 1
  %3161 = lshr i32 %3149, 31
  %3162 = trunc i32 %3161 to i8
  %3163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3162, i8* %3163, align 1
  %3164 = lshr i32 %3149, 31
  %3165 = xor i32 %3161, %3164
  %3166 = add i32 %3165, %3164
  %3167 = icmp eq i32 %3166, 2
  %3168 = zext i1 %3167 to i8
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3168, i8* %3169, align 1
  store %struct.Memory* %loadMem_44185c, %struct.Memory** %MEMORY
  %loadMem_441860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3171 = getelementptr inbounds %struct.GPR, %struct.GPR* %3170, i32 0, i32 33
  %3172 = getelementptr inbounds %struct.Reg, %struct.Reg* %3171, i32 0, i32 0
  %PC.i1408 = bitcast %union.anon* %3172 to i64*
  %3173 = load i64, i64* %PC.i1408
  %3174 = add i64 %3173, 132
  %3175 = load i64, i64* %PC.i1408
  %3176 = add i64 %3175, 6
  %3177 = load i64, i64* %PC.i1408
  %3178 = add i64 %3177, 6
  store i64 %3178, i64* %PC.i1408
  %3179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3180 = load i8, i8* %3179, align 1
  store i8 %3180, i8* %BRANCH_TAKEN, align 1
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3182 = icmp ne i8 %3180, 0
  %3183 = select i1 %3182, i64 %3174, i64 %3176
  store i64 %3183, i64* %3181, align 8
  store %struct.Memory* %loadMem_441860, %struct.Memory** %MEMORY
  %loadBr_441860 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441860 = icmp eq i8 %loadBr_441860, 1
  br i1 %cmpBr_441860, label %block_.L_4418e4, label %block_441866

block_441866:                                     ; preds = %block_.L_44185c
  %loadMem_441866 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3185 = getelementptr inbounds %struct.GPR, %struct.GPR* %3184, i32 0, i32 33
  %3186 = getelementptr inbounds %struct.Reg, %struct.Reg* %3185, i32 0, i32 0
  %PC.i1406 = bitcast %union.anon* %3186 to i64*
  %3187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3188 = getelementptr inbounds %struct.GPR, %struct.GPR* %3187, i32 0, i32 1
  %3189 = getelementptr inbounds %struct.Reg, %struct.Reg* %3188, i32 0, i32 0
  %RAX.i1407 = bitcast %union.anon* %3189 to i64*
  %3190 = load i64, i64* %PC.i1406
  %3191 = add i64 %3190, 8
  store i64 %3191, i64* %PC.i1406
  %3192 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3192, i64* %RAX.i1407, align 8
  store %struct.Memory* %loadMem_441866, %struct.Memory** %MEMORY
  %loadMem_44186e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3194 = getelementptr inbounds %struct.GPR, %struct.GPR* %3193, i32 0, i32 33
  %3195 = getelementptr inbounds %struct.Reg, %struct.Reg* %3194, i32 0, i32 0
  %PC.i1404 = bitcast %union.anon* %3195 to i64*
  %3196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3197 = getelementptr inbounds %struct.GPR, %struct.GPR* %3196, i32 0, i32 1
  %3198 = getelementptr inbounds %struct.Reg, %struct.Reg* %3197, i32 0, i32 0
  %RAX.i1405 = bitcast %union.anon* %3198 to i64*
  %3199 = load i64, i64* %RAX.i1405
  %3200 = add i64 %3199, 24
  %3201 = load i64, i64* %PC.i1404
  %3202 = add i64 %3201, 4
  store i64 %3202, i64* %PC.i1404
  %3203 = inttoptr i64 %3200 to i32*
  %3204 = load i32, i32* %3203
  %3205 = sub i32 %3204, 3
  %3206 = icmp ult i32 %3204, 3
  %3207 = zext i1 %3206 to i8
  %3208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3207, i8* %3208, align 1
  %3209 = and i32 %3205, 255
  %3210 = call i32 @llvm.ctpop.i32(i32 %3209)
  %3211 = trunc i32 %3210 to i8
  %3212 = and i8 %3211, 1
  %3213 = xor i8 %3212, 1
  %3214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3213, i8* %3214, align 1
  %3215 = xor i32 %3204, 3
  %3216 = xor i32 %3215, %3205
  %3217 = lshr i32 %3216, 4
  %3218 = trunc i32 %3217 to i8
  %3219 = and i8 %3218, 1
  %3220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3219, i8* %3220, align 1
  %3221 = icmp eq i32 %3205, 0
  %3222 = zext i1 %3221 to i8
  %3223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3222, i8* %3223, align 1
  %3224 = lshr i32 %3205, 31
  %3225 = trunc i32 %3224 to i8
  %3226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3225, i8* %3226, align 1
  %3227 = lshr i32 %3204, 31
  %3228 = xor i32 %3224, %3227
  %3229 = add i32 %3228, %3227
  %3230 = icmp eq i32 %3229, 2
  %3231 = zext i1 %3230 to i8
  %3232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3231, i8* %3232, align 1
  store %struct.Memory* %loadMem_44186e, %struct.Memory** %MEMORY
  %loadMem_441872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3234 = getelementptr inbounds %struct.GPR, %struct.GPR* %3233, i32 0, i32 33
  %3235 = getelementptr inbounds %struct.Reg, %struct.Reg* %3234, i32 0, i32 0
  %PC.i1403 = bitcast %union.anon* %3235 to i64*
  %3236 = load i64, i64* %PC.i1403
  %3237 = add i64 %3236, 114
  %3238 = load i64, i64* %PC.i1403
  %3239 = add i64 %3238, 6
  %3240 = load i64, i64* %PC.i1403
  %3241 = add i64 %3240, 6
  store i64 %3241, i64* %PC.i1403
  %3242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3243 = load i8, i8* %3242, align 1
  %3244 = icmp eq i8 %3243, 0
  %3245 = zext i1 %3244 to i8
  store i8 %3245, i8* %BRANCH_TAKEN, align 1
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3247 = select i1 %3244, i64 %3237, i64 %3239
  store i64 %3247, i64* %3246, align 8
  store %struct.Memory* %loadMem_441872, %struct.Memory** %MEMORY
  %loadBr_441872 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441872 = icmp eq i8 %loadBr_441872, 1
  br i1 %cmpBr_441872, label %block_.L_4418e4, label %block_441878

block_441878:                                     ; preds = %block_441866
  %loadMem_441878 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3249 = getelementptr inbounds %struct.GPR, %struct.GPR* %3248, i32 0, i32 33
  %3250 = getelementptr inbounds %struct.Reg, %struct.Reg* %3249, i32 0, i32 0
  %PC.i1401 = bitcast %union.anon* %3250 to i64*
  %3251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3252 = getelementptr inbounds %struct.GPR, %struct.GPR* %3251, i32 0, i32 15
  %3253 = getelementptr inbounds %struct.Reg, %struct.Reg* %3252, i32 0, i32 0
  %RBP.i1402 = bitcast %union.anon* %3253 to i64*
  %3254 = load i64, i64* %RBP.i1402
  %3255 = sub i64 %3254, 28
  %3256 = load i64, i64* %PC.i1401
  %3257 = add i64 %3256, 7
  store i64 %3257, i64* %PC.i1401
  %3258 = inttoptr i64 %3255 to i32*
  store i32 0, i32* %3258
  store %struct.Memory* %loadMem_441878, %struct.Memory** %MEMORY
  br label %block_.L_44187f

block_.L_44187f:                                  ; preds = %block_.L_4418d1, %block_441878
  %loadMem_44187f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3260 = getelementptr inbounds %struct.GPR, %struct.GPR* %3259, i32 0, i32 33
  %3261 = getelementptr inbounds %struct.Reg, %struct.Reg* %3260, i32 0, i32 0
  %PC.i1399 = bitcast %union.anon* %3261 to i64*
  %3262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3263 = getelementptr inbounds %struct.GPR, %struct.GPR* %3262, i32 0, i32 15
  %3264 = getelementptr inbounds %struct.Reg, %struct.Reg* %3263, i32 0, i32 0
  %RBP.i1400 = bitcast %union.anon* %3264 to i64*
  %3265 = load i64, i64* %RBP.i1400
  %3266 = sub i64 %3265, 28
  %3267 = load i64, i64* %PC.i1399
  %3268 = add i64 %3267, 4
  store i64 %3268, i64* %PC.i1399
  %3269 = inttoptr i64 %3266 to i32*
  %3270 = load i32, i32* %3269
  %3271 = sub i32 %3270, 8
  %3272 = icmp ult i32 %3270, 8
  %3273 = zext i1 %3272 to i8
  %3274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3273, i8* %3274, align 1
  %3275 = and i32 %3271, 255
  %3276 = call i32 @llvm.ctpop.i32(i32 %3275)
  %3277 = trunc i32 %3276 to i8
  %3278 = and i8 %3277, 1
  %3279 = xor i8 %3278, 1
  %3280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3279, i8* %3280, align 1
  %3281 = xor i32 %3270, 8
  %3282 = xor i32 %3281, %3271
  %3283 = lshr i32 %3282, 4
  %3284 = trunc i32 %3283 to i8
  %3285 = and i8 %3284, 1
  %3286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3285, i8* %3286, align 1
  %3287 = icmp eq i32 %3271, 0
  %3288 = zext i1 %3287 to i8
  %3289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3288, i8* %3289, align 1
  %3290 = lshr i32 %3271, 31
  %3291 = trunc i32 %3290 to i8
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3291, i8* %3292, align 1
  %3293 = lshr i32 %3270, 31
  %3294 = xor i32 %3290, %3293
  %3295 = add i32 %3294, %3293
  %3296 = icmp eq i32 %3295, 2
  %3297 = zext i1 %3296 to i8
  %3298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3297, i8* %3298, align 1
  store %struct.Memory* %loadMem_44187f, %struct.Memory** %MEMORY
  %loadMem_441883 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3300 = getelementptr inbounds %struct.GPR, %struct.GPR* %3299, i32 0, i32 33
  %3301 = getelementptr inbounds %struct.Reg, %struct.Reg* %3300, i32 0, i32 0
  %PC.i1398 = bitcast %union.anon* %3301 to i64*
  %3302 = load i64, i64* %PC.i1398
  %3303 = add i64 %3302, 92
  %3304 = load i64, i64* %PC.i1398
  %3305 = add i64 %3304, 6
  %3306 = load i64, i64* %PC.i1398
  %3307 = add i64 %3306, 6
  store i64 %3307, i64* %PC.i1398
  %3308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3309 = load i8, i8* %3308, align 1
  %3310 = icmp ne i8 %3309, 0
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3312 = load i8, i8* %3311, align 1
  %3313 = icmp ne i8 %3312, 0
  %3314 = xor i1 %3310, %3313
  %3315 = xor i1 %3314, true
  %3316 = zext i1 %3315 to i8
  store i8 %3316, i8* %BRANCH_TAKEN, align 1
  %3317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3318 = select i1 %3314, i64 %3305, i64 %3303
  store i64 %3318, i64* %3317, align 8
  store %struct.Memory* %loadMem_441883, %struct.Memory** %MEMORY
  %loadBr_441883 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441883 = icmp eq i8 %loadBr_441883, 1
  br i1 %cmpBr_441883, label %block_.L_4418df, label %block_441889

block_441889:                                     ; preds = %block_.L_44187f
  %loadMem_441889 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3320 = getelementptr inbounds %struct.GPR, %struct.GPR* %3319, i32 0, i32 33
  %3321 = getelementptr inbounds %struct.Reg, %struct.Reg* %3320, i32 0, i32 0
  %PC.i1396 = bitcast %union.anon* %3321 to i64*
  %3322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3323 = getelementptr inbounds %struct.GPR, %struct.GPR* %3322, i32 0, i32 15
  %3324 = getelementptr inbounds %struct.Reg, %struct.Reg* %3323, i32 0, i32 0
  %RBP.i1397 = bitcast %union.anon* %3324 to i64*
  %3325 = load i64, i64* %RBP.i1397
  %3326 = sub i64 %3325, 32
  %3327 = load i64, i64* %PC.i1396
  %3328 = add i64 %3327, 7
  store i64 %3328, i64* %PC.i1396
  %3329 = inttoptr i64 %3326 to i32*
  store i32 0, i32* %3329
  store %struct.Memory* %loadMem_441889, %struct.Memory** %MEMORY
  br label %block_.L_441890

block_.L_441890:                                  ; preds = %block_44189a, %block_441889
  %loadMem_441890 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3331 = getelementptr inbounds %struct.GPR, %struct.GPR* %3330, i32 0, i32 33
  %3332 = getelementptr inbounds %struct.Reg, %struct.Reg* %3331, i32 0, i32 0
  %PC.i1394 = bitcast %union.anon* %3332 to i64*
  %3333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3334 = getelementptr inbounds %struct.GPR, %struct.GPR* %3333, i32 0, i32 15
  %3335 = getelementptr inbounds %struct.Reg, %struct.Reg* %3334, i32 0, i32 0
  %RBP.i1395 = bitcast %union.anon* %3335 to i64*
  %3336 = load i64, i64* %RBP.i1395
  %3337 = sub i64 %3336, 32
  %3338 = load i64, i64* %PC.i1394
  %3339 = add i64 %3338, 4
  store i64 %3339, i64* %PC.i1394
  %3340 = inttoptr i64 %3337 to i32*
  %3341 = load i32, i32* %3340
  %3342 = sub i32 %3341, 8
  %3343 = icmp ult i32 %3341, 8
  %3344 = zext i1 %3343 to i8
  %3345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3344, i8* %3345, align 1
  %3346 = and i32 %3342, 255
  %3347 = call i32 @llvm.ctpop.i32(i32 %3346)
  %3348 = trunc i32 %3347 to i8
  %3349 = and i8 %3348, 1
  %3350 = xor i8 %3349, 1
  %3351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3350, i8* %3351, align 1
  %3352 = xor i32 %3341, 8
  %3353 = xor i32 %3352, %3342
  %3354 = lshr i32 %3353, 4
  %3355 = trunc i32 %3354 to i8
  %3356 = and i8 %3355, 1
  %3357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3356, i8* %3357, align 1
  %3358 = icmp eq i32 %3342, 0
  %3359 = zext i1 %3358 to i8
  %3360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3359, i8* %3360, align 1
  %3361 = lshr i32 %3342, 31
  %3362 = trunc i32 %3361 to i8
  %3363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3362, i8* %3363, align 1
  %3364 = lshr i32 %3341, 31
  %3365 = xor i32 %3361, %3364
  %3366 = add i32 %3365, %3364
  %3367 = icmp eq i32 %3366, 2
  %3368 = zext i1 %3367 to i8
  %3369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3368, i8* %3369, align 1
  store %struct.Memory* %loadMem_441890, %struct.Memory** %MEMORY
  %loadMem_441894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3371 = getelementptr inbounds %struct.GPR, %struct.GPR* %3370, i32 0, i32 33
  %3372 = getelementptr inbounds %struct.Reg, %struct.Reg* %3371, i32 0, i32 0
  %PC.i1393 = bitcast %union.anon* %3372 to i64*
  %3373 = load i64, i64* %PC.i1393
  %3374 = add i64 %3373, 56
  %3375 = load i64, i64* %PC.i1393
  %3376 = add i64 %3375, 6
  %3377 = load i64, i64* %PC.i1393
  %3378 = add i64 %3377, 6
  store i64 %3378, i64* %PC.i1393
  %3379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3380 = load i8, i8* %3379, align 1
  %3381 = icmp ne i8 %3380, 0
  %3382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3383 = load i8, i8* %3382, align 1
  %3384 = icmp ne i8 %3383, 0
  %3385 = xor i1 %3381, %3384
  %3386 = xor i1 %3385, true
  %3387 = zext i1 %3386 to i8
  store i8 %3387, i8* %BRANCH_TAKEN, align 1
  %3388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3389 = select i1 %3385, i64 %3376, i64 %3374
  store i64 %3389, i64* %3388, align 8
  store %struct.Memory* %loadMem_441894, %struct.Memory** %MEMORY
  %loadBr_441894 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441894 = icmp eq i8 %loadBr_441894, 1
  br i1 %cmpBr_441894, label %block_.L_4418cc, label %block_44189a

block_44189a:                                     ; preds = %block_.L_441890
  %loadMem_44189a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3391 = getelementptr inbounds %struct.GPR, %struct.GPR* %3390, i32 0, i32 33
  %3392 = getelementptr inbounds %struct.Reg, %struct.Reg* %3391, i32 0, i32 0
  %PC.i1391 = bitcast %union.anon* %3392 to i64*
  %3393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3394 = getelementptr inbounds %struct.GPR, %struct.GPR* %3393, i32 0, i32 1
  %3395 = getelementptr inbounds %struct.Reg, %struct.Reg* %3394, i32 0, i32 0
  %RAX.i1392 = bitcast %union.anon* %3395 to i64*
  %3396 = load i64, i64* %PC.i1391
  %3397 = add i64 %3396, 8
  store i64 %3397, i64* %PC.i1391
  %3398 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3398, i64* %RAX.i1392, align 8
  store %struct.Memory* %loadMem_44189a, %struct.Memory** %MEMORY
  %loadMem_4418a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3400 = getelementptr inbounds %struct.GPR, %struct.GPR* %3399, i32 0, i32 33
  %3401 = getelementptr inbounds %struct.Reg, %struct.Reg* %3400, i32 0, i32 0
  %PC.i1389 = bitcast %union.anon* %3401 to i64*
  %3402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3403 = getelementptr inbounds %struct.GPR, %struct.GPR* %3402, i32 0, i32 1
  %3404 = getelementptr inbounds %struct.Reg, %struct.Reg* %3403, i32 0, i32 0
  %RAX.i1390 = bitcast %union.anon* %3404 to i64*
  %3405 = load i64, i64* %RAX.i1390
  %3406 = load i64, i64* %PC.i1389
  %3407 = add i64 %3406, 6
  store i64 %3407, i64* %PC.i1389
  %3408 = add i64 13112, %3405
  store i64 %3408, i64* %RAX.i1390, align 8
  %3409 = icmp ult i64 %3408, %3405
  %3410 = icmp ult i64 %3408, 13112
  %3411 = or i1 %3409, %3410
  %3412 = zext i1 %3411 to i8
  %3413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3412, i8* %3413, align 1
  %3414 = trunc i64 %3408 to i32
  %3415 = and i32 %3414, 255
  %3416 = call i32 @llvm.ctpop.i32(i32 %3415)
  %3417 = trunc i32 %3416 to i8
  %3418 = and i8 %3417, 1
  %3419 = xor i8 %3418, 1
  %3420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3419, i8* %3420, align 1
  %3421 = xor i64 13112, %3405
  %3422 = xor i64 %3421, %3408
  %3423 = lshr i64 %3422, 4
  %3424 = trunc i64 %3423 to i8
  %3425 = and i8 %3424, 1
  %3426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3425, i8* %3426, align 1
  %3427 = icmp eq i64 %3408, 0
  %3428 = zext i1 %3427 to i8
  %3429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3428, i8* %3429, align 1
  %3430 = lshr i64 %3408, 63
  %3431 = trunc i64 %3430 to i8
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3431, i8* %3432, align 1
  %3433 = lshr i64 %3405, 63
  %3434 = xor i64 %3430, %3433
  %3435 = add i64 %3434, %3430
  %3436 = icmp eq i64 %3435, 2
  %3437 = zext i1 %3436 to i8
  %3438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3437, i8* %3438, align 1
  store %struct.Memory* %loadMem_4418a2, %struct.Memory** %MEMORY
  %loadMem_4418a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3440 = getelementptr inbounds %struct.GPR, %struct.GPR* %3439, i32 0, i32 33
  %3441 = getelementptr inbounds %struct.Reg, %struct.Reg* %3440, i32 0, i32 0
  %PC.i1386 = bitcast %union.anon* %3441 to i64*
  %3442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3443 = getelementptr inbounds %struct.GPR, %struct.GPR* %3442, i32 0, i32 5
  %3444 = getelementptr inbounds %struct.Reg, %struct.Reg* %3443, i32 0, i32 0
  %RCX.i1387 = bitcast %union.anon* %3444 to i64*
  %3445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3446 = getelementptr inbounds %struct.GPR, %struct.GPR* %3445, i32 0, i32 15
  %3447 = getelementptr inbounds %struct.Reg, %struct.Reg* %3446, i32 0, i32 0
  %RBP.i1388 = bitcast %union.anon* %3447 to i64*
  %3448 = load i64, i64* %RBP.i1388
  %3449 = sub i64 %3448, 32
  %3450 = load i64, i64* %PC.i1386
  %3451 = add i64 %3450, 4
  store i64 %3451, i64* %PC.i1386
  %3452 = inttoptr i64 %3449 to i32*
  %3453 = load i32, i32* %3452
  %3454 = sext i32 %3453 to i64
  store i64 %3454, i64* %RCX.i1387, align 8
  store %struct.Memory* %loadMem_4418a8, %struct.Memory** %MEMORY
  %loadMem_4418ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %3455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3456 = getelementptr inbounds %struct.GPR, %struct.GPR* %3455, i32 0, i32 33
  %3457 = getelementptr inbounds %struct.Reg, %struct.Reg* %3456, i32 0, i32 0
  %PC.i1384 = bitcast %union.anon* %3457 to i64*
  %3458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3459 = getelementptr inbounds %struct.GPR, %struct.GPR* %3458, i32 0, i32 5
  %3460 = getelementptr inbounds %struct.Reg, %struct.Reg* %3459, i32 0, i32 0
  %RCX.i1385 = bitcast %union.anon* %3460 to i64*
  %3461 = load i64, i64* %RCX.i1385
  %3462 = load i64, i64* %PC.i1384
  %3463 = add i64 %3462, 4
  store i64 %3463, i64* %PC.i1384
  %3464 = shl i64 %3461, 5
  %3465 = icmp slt i64 %3464, 0
  %3466 = shl i64 %3464, 1
  store i64 %3466, i64* %RCX.i1385, align 8
  %3467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3468 = zext i1 %3465 to i8
  store i8 %3468, i8* %3467, align 1
  %3469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3470 = trunc i64 %3466 to i32
  %3471 = and i32 %3470, 254
  %3472 = call i32 @llvm.ctpop.i32(i32 %3471)
  %3473 = trunc i32 %3472 to i8
  %3474 = and i8 %3473, 1
  %3475 = xor i8 %3474, 1
  store i8 %3475, i8* %3469, align 1
  %3476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3476, align 1
  %3477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3478 = icmp eq i64 %3466, 0
  %3479 = zext i1 %3478 to i8
  store i8 %3479, i8* %3477, align 1
  %3480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3481 = lshr i64 %3466, 63
  %3482 = trunc i64 %3481 to i8
  store i8 %3482, i8* %3480, align 1
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3483, align 1
  store %struct.Memory* %loadMem_4418ac, %struct.Memory** %MEMORY
  %loadMem_4418b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3485 = getelementptr inbounds %struct.GPR, %struct.GPR* %3484, i32 0, i32 33
  %3486 = getelementptr inbounds %struct.Reg, %struct.Reg* %3485, i32 0, i32 0
  %PC.i1381 = bitcast %union.anon* %3486 to i64*
  %3487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3488 = getelementptr inbounds %struct.GPR, %struct.GPR* %3487, i32 0, i32 1
  %3489 = getelementptr inbounds %struct.Reg, %struct.Reg* %3488, i32 0, i32 0
  %RAX.i1382 = bitcast %union.anon* %3489 to i64*
  %3490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3491 = getelementptr inbounds %struct.GPR, %struct.GPR* %3490, i32 0, i32 5
  %3492 = getelementptr inbounds %struct.Reg, %struct.Reg* %3491, i32 0, i32 0
  %RCX.i1383 = bitcast %union.anon* %3492 to i64*
  %3493 = load i64, i64* %RAX.i1382
  %3494 = load i64, i64* %RCX.i1383
  %3495 = load i64, i64* %PC.i1381
  %3496 = add i64 %3495, 3
  store i64 %3496, i64* %PC.i1381
  %3497 = add i64 %3494, %3493
  store i64 %3497, i64* %RAX.i1382, align 8
  %3498 = icmp ult i64 %3497, %3493
  %3499 = icmp ult i64 %3497, %3494
  %3500 = or i1 %3498, %3499
  %3501 = zext i1 %3500 to i8
  %3502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3501, i8* %3502, align 1
  %3503 = trunc i64 %3497 to i32
  %3504 = and i32 %3503, 255
  %3505 = call i32 @llvm.ctpop.i32(i32 %3504)
  %3506 = trunc i32 %3505 to i8
  %3507 = and i8 %3506, 1
  %3508 = xor i8 %3507, 1
  %3509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3508, i8* %3509, align 1
  %3510 = xor i64 %3494, %3493
  %3511 = xor i64 %3510, %3497
  %3512 = lshr i64 %3511, 4
  %3513 = trunc i64 %3512 to i8
  %3514 = and i8 %3513, 1
  %3515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3514, i8* %3515, align 1
  %3516 = icmp eq i64 %3497, 0
  %3517 = zext i1 %3516 to i8
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3517, i8* %3518, align 1
  %3519 = lshr i64 %3497, 63
  %3520 = trunc i64 %3519 to i8
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3520, i8* %3521, align 1
  %3522 = lshr i64 %3493, 63
  %3523 = lshr i64 %3494, 63
  %3524 = xor i64 %3519, %3522
  %3525 = xor i64 %3519, %3523
  %3526 = add i64 %3524, %3525
  %3527 = icmp eq i64 %3526, 2
  %3528 = zext i1 %3527 to i8
  %3529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3528, i8* %3529, align 1
  store %struct.Memory* %loadMem_4418b0, %struct.Memory** %MEMORY
  %loadMem_4418b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3531 = getelementptr inbounds %struct.GPR, %struct.GPR* %3530, i32 0, i32 33
  %3532 = getelementptr inbounds %struct.Reg, %struct.Reg* %3531, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %3532 to i64*
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3534 = getelementptr inbounds %struct.GPR, %struct.GPR* %3533, i32 0, i32 5
  %3535 = getelementptr inbounds %struct.Reg, %struct.Reg* %3534, i32 0, i32 0
  %RCX.i1379 = bitcast %union.anon* %3535 to i64*
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 15
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %RBP.i1380 = bitcast %union.anon* %3538 to i64*
  %3539 = load i64, i64* %RBP.i1380
  %3540 = sub i64 %3539, 28
  %3541 = load i64, i64* %PC.i1378
  %3542 = add i64 %3541, 4
  store i64 %3542, i64* %PC.i1378
  %3543 = inttoptr i64 %3540 to i32*
  %3544 = load i32, i32* %3543
  %3545 = sext i32 %3544 to i64
  store i64 %3545, i64* %RCX.i1379, align 8
  store %struct.Memory* %loadMem_4418b3, %struct.Memory** %MEMORY
  %loadMem_4418b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3547 = getelementptr inbounds %struct.GPR, %struct.GPR* %3546, i32 0, i32 33
  %3548 = getelementptr inbounds %struct.Reg, %struct.Reg* %3547, i32 0, i32 0
  %PC.i1375 = bitcast %union.anon* %3548 to i64*
  %3549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3550 = getelementptr inbounds %struct.GPR, %struct.GPR* %3549, i32 0, i32 1
  %3551 = getelementptr inbounds %struct.Reg, %struct.Reg* %3550, i32 0, i32 0
  %RAX.i1376 = bitcast %union.anon* %3551 to i64*
  %3552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3553 = getelementptr inbounds %struct.GPR, %struct.GPR* %3552, i32 0, i32 5
  %3554 = getelementptr inbounds %struct.Reg, %struct.Reg* %3553, i32 0, i32 0
  %RCX.i1377 = bitcast %union.anon* %3554 to i64*
  %3555 = load i64, i64* %RAX.i1376
  %3556 = load i64, i64* %RCX.i1377
  %3557 = mul i64 %3556, 4
  %3558 = add i64 %3557, %3555
  %3559 = load i64, i64* %PC.i1375
  %3560 = add i64 %3559, 7
  store i64 %3560, i64* %PC.i1375
  %3561 = inttoptr i64 %3558 to i32*
  store i32 0, i32* %3561
  store %struct.Memory* %loadMem_4418b7, %struct.Memory** %MEMORY
  %loadMem_4418be = load %struct.Memory*, %struct.Memory** %MEMORY
  %3562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3563 = getelementptr inbounds %struct.GPR, %struct.GPR* %3562, i32 0, i32 33
  %3564 = getelementptr inbounds %struct.Reg, %struct.Reg* %3563, i32 0, i32 0
  %PC.i1372 = bitcast %union.anon* %3564 to i64*
  %3565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3566 = getelementptr inbounds %struct.GPR, %struct.GPR* %3565, i32 0, i32 1
  %3567 = getelementptr inbounds %struct.Reg, %struct.Reg* %3566, i32 0, i32 0
  %RAX.i1373 = bitcast %union.anon* %3567 to i64*
  %3568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3569 = getelementptr inbounds %struct.GPR, %struct.GPR* %3568, i32 0, i32 15
  %3570 = getelementptr inbounds %struct.Reg, %struct.Reg* %3569, i32 0, i32 0
  %RBP.i1374 = bitcast %union.anon* %3570 to i64*
  %3571 = load i64, i64* %RBP.i1374
  %3572 = sub i64 %3571, 32
  %3573 = load i64, i64* %PC.i1372
  %3574 = add i64 %3573, 3
  store i64 %3574, i64* %PC.i1372
  %3575 = inttoptr i64 %3572 to i32*
  %3576 = load i32, i32* %3575
  %3577 = zext i32 %3576 to i64
  store i64 %3577, i64* %RAX.i1373, align 8
  store %struct.Memory* %loadMem_4418be, %struct.Memory** %MEMORY
  %loadMem_4418c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3579 = getelementptr inbounds %struct.GPR, %struct.GPR* %3578, i32 0, i32 33
  %3580 = getelementptr inbounds %struct.Reg, %struct.Reg* %3579, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %3580 to i64*
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3582 = getelementptr inbounds %struct.GPR, %struct.GPR* %3581, i32 0, i32 1
  %3583 = getelementptr inbounds %struct.Reg, %struct.Reg* %3582, i32 0, i32 0
  %RAX.i1371 = bitcast %union.anon* %3583 to i64*
  %3584 = load i64, i64* %RAX.i1371
  %3585 = load i64, i64* %PC.i1370
  %3586 = add i64 %3585, 3
  store i64 %3586, i64* %PC.i1370
  %3587 = trunc i64 %3584 to i32
  %3588 = add i32 1, %3587
  %3589 = zext i32 %3588 to i64
  store i64 %3589, i64* %RAX.i1371, align 8
  %3590 = icmp ult i32 %3588, %3587
  %3591 = icmp ult i32 %3588, 1
  %3592 = or i1 %3590, %3591
  %3593 = zext i1 %3592 to i8
  %3594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3593, i8* %3594, align 1
  %3595 = and i32 %3588, 255
  %3596 = call i32 @llvm.ctpop.i32(i32 %3595)
  %3597 = trunc i32 %3596 to i8
  %3598 = and i8 %3597, 1
  %3599 = xor i8 %3598, 1
  %3600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3599, i8* %3600, align 1
  %3601 = xor i64 1, %3584
  %3602 = trunc i64 %3601 to i32
  %3603 = xor i32 %3602, %3588
  %3604 = lshr i32 %3603, 4
  %3605 = trunc i32 %3604 to i8
  %3606 = and i8 %3605, 1
  %3607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3606, i8* %3607, align 1
  %3608 = icmp eq i32 %3588, 0
  %3609 = zext i1 %3608 to i8
  %3610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3609, i8* %3610, align 1
  %3611 = lshr i32 %3588, 31
  %3612 = trunc i32 %3611 to i8
  %3613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3612, i8* %3613, align 1
  %3614 = lshr i32 %3587, 31
  %3615 = xor i32 %3611, %3614
  %3616 = add i32 %3615, %3611
  %3617 = icmp eq i32 %3616, 2
  %3618 = zext i1 %3617 to i8
  %3619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3618, i8* %3619, align 1
  store %struct.Memory* %loadMem_4418c1, %struct.Memory** %MEMORY
  %loadMem_4418c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3621 = getelementptr inbounds %struct.GPR, %struct.GPR* %3620, i32 0, i32 33
  %3622 = getelementptr inbounds %struct.Reg, %struct.Reg* %3621, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %3622 to i64*
  %3623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3624 = getelementptr inbounds %struct.GPR, %struct.GPR* %3623, i32 0, i32 1
  %3625 = getelementptr inbounds %struct.Reg, %struct.Reg* %3624, i32 0, i32 0
  %EAX.i1368 = bitcast %union.anon* %3625 to i32*
  %3626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3627 = getelementptr inbounds %struct.GPR, %struct.GPR* %3626, i32 0, i32 15
  %3628 = getelementptr inbounds %struct.Reg, %struct.Reg* %3627, i32 0, i32 0
  %RBP.i1369 = bitcast %union.anon* %3628 to i64*
  %3629 = load i64, i64* %RBP.i1369
  %3630 = sub i64 %3629, 32
  %3631 = load i32, i32* %EAX.i1368
  %3632 = zext i32 %3631 to i64
  %3633 = load i64, i64* %PC.i1367
  %3634 = add i64 %3633, 3
  store i64 %3634, i64* %PC.i1367
  %3635 = inttoptr i64 %3630 to i32*
  store i32 %3631, i32* %3635
  store %struct.Memory* %loadMem_4418c4, %struct.Memory** %MEMORY
  %loadMem_4418c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3637 = getelementptr inbounds %struct.GPR, %struct.GPR* %3636, i32 0, i32 33
  %3638 = getelementptr inbounds %struct.Reg, %struct.Reg* %3637, i32 0, i32 0
  %PC.i1366 = bitcast %union.anon* %3638 to i64*
  %3639 = load i64, i64* %PC.i1366
  %3640 = add i64 %3639, -55
  %3641 = load i64, i64* %PC.i1366
  %3642 = add i64 %3641, 5
  store i64 %3642, i64* %PC.i1366
  %3643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3640, i64* %3643, align 8
  store %struct.Memory* %loadMem_4418c7, %struct.Memory** %MEMORY
  br label %block_.L_441890

block_.L_4418cc:                                  ; preds = %block_.L_441890
  %loadMem_4418cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3645 = getelementptr inbounds %struct.GPR, %struct.GPR* %3644, i32 0, i32 33
  %3646 = getelementptr inbounds %struct.Reg, %struct.Reg* %3645, i32 0, i32 0
  %PC.i1365 = bitcast %union.anon* %3646 to i64*
  %3647 = load i64, i64* %PC.i1365
  %3648 = add i64 %3647, 5
  %3649 = load i64, i64* %PC.i1365
  %3650 = add i64 %3649, 5
  store i64 %3650, i64* %PC.i1365
  %3651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3648, i64* %3651, align 8
  store %struct.Memory* %loadMem_4418cc, %struct.Memory** %MEMORY
  br label %block_.L_4418d1

block_.L_4418d1:                                  ; preds = %block_.L_4418cc
  %loadMem_4418d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3653 = getelementptr inbounds %struct.GPR, %struct.GPR* %3652, i32 0, i32 33
  %3654 = getelementptr inbounds %struct.Reg, %struct.Reg* %3653, i32 0, i32 0
  %PC.i1362 = bitcast %union.anon* %3654 to i64*
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3656 = getelementptr inbounds %struct.GPR, %struct.GPR* %3655, i32 0, i32 1
  %3657 = getelementptr inbounds %struct.Reg, %struct.Reg* %3656, i32 0, i32 0
  %RAX.i1363 = bitcast %union.anon* %3657 to i64*
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3659 = getelementptr inbounds %struct.GPR, %struct.GPR* %3658, i32 0, i32 15
  %3660 = getelementptr inbounds %struct.Reg, %struct.Reg* %3659, i32 0, i32 0
  %RBP.i1364 = bitcast %union.anon* %3660 to i64*
  %3661 = load i64, i64* %RBP.i1364
  %3662 = sub i64 %3661, 28
  %3663 = load i64, i64* %PC.i1362
  %3664 = add i64 %3663, 3
  store i64 %3664, i64* %PC.i1362
  %3665 = inttoptr i64 %3662 to i32*
  %3666 = load i32, i32* %3665
  %3667 = zext i32 %3666 to i64
  store i64 %3667, i64* %RAX.i1363, align 8
  store %struct.Memory* %loadMem_4418d1, %struct.Memory** %MEMORY
  %loadMem_4418d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3669 = getelementptr inbounds %struct.GPR, %struct.GPR* %3668, i32 0, i32 33
  %3670 = getelementptr inbounds %struct.Reg, %struct.Reg* %3669, i32 0, i32 0
  %PC.i1360 = bitcast %union.anon* %3670 to i64*
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3672 = getelementptr inbounds %struct.GPR, %struct.GPR* %3671, i32 0, i32 1
  %3673 = getelementptr inbounds %struct.Reg, %struct.Reg* %3672, i32 0, i32 0
  %RAX.i1361 = bitcast %union.anon* %3673 to i64*
  %3674 = load i64, i64* %RAX.i1361
  %3675 = load i64, i64* %PC.i1360
  %3676 = add i64 %3675, 3
  store i64 %3676, i64* %PC.i1360
  %3677 = trunc i64 %3674 to i32
  %3678 = add i32 1, %3677
  %3679 = zext i32 %3678 to i64
  store i64 %3679, i64* %RAX.i1361, align 8
  %3680 = icmp ult i32 %3678, %3677
  %3681 = icmp ult i32 %3678, 1
  %3682 = or i1 %3680, %3681
  %3683 = zext i1 %3682 to i8
  %3684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3683, i8* %3684, align 1
  %3685 = and i32 %3678, 255
  %3686 = call i32 @llvm.ctpop.i32(i32 %3685)
  %3687 = trunc i32 %3686 to i8
  %3688 = and i8 %3687, 1
  %3689 = xor i8 %3688, 1
  %3690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3689, i8* %3690, align 1
  %3691 = xor i64 1, %3674
  %3692 = trunc i64 %3691 to i32
  %3693 = xor i32 %3692, %3678
  %3694 = lshr i32 %3693, 4
  %3695 = trunc i32 %3694 to i8
  %3696 = and i8 %3695, 1
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3696, i8* %3697, align 1
  %3698 = icmp eq i32 %3678, 0
  %3699 = zext i1 %3698 to i8
  %3700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3699, i8* %3700, align 1
  %3701 = lshr i32 %3678, 31
  %3702 = trunc i32 %3701 to i8
  %3703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3702, i8* %3703, align 1
  %3704 = lshr i32 %3677, 31
  %3705 = xor i32 %3701, %3704
  %3706 = add i32 %3705, %3701
  %3707 = icmp eq i32 %3706, 2
  %3708 = zext i1 %3707 to i8
  %3709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3708, i8* %3709, align 1
  store %struct.Memory* %loadMem_4418d4, %struct.Memory** %MEMORY
  %loadMem_4418d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3711 = getelementptr inbounds %struct.GPR, %struct.GPR* %3710, i32 0, i32 33
  %3712 = getelementptr inbounds %struct.Reg, %struct.Reg* %3711, i32 0, i32 0
  %PC.i1357 = bitcast %union.anon* %3712 to i64*
  %3713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3714 = getelementptr inbounds %struct.GPR, %struct.GPR* %3713, i32 0, i32 1
  %3715 = getelementptr inbounds %struct.Reg, %struct.Reg* %3714, i32 0, i32 0
  %EAX.i1358 = bitcast %union.anon* %3715 to i32*
  %3716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3717 = getelementptr inbounds %struct.GPR, %struct.GPR* %3716, i32 0, i32 15
  %3718 = getelementptr inbounds %struct.Reg, %struct.Reg* %3717, i32 0, i32 0
  %RBP.i1359 = bitcast %union.anon* %3718 to i64*
  %3719 = load i64, i64* %RBP.i1359
  %3720 = sub i64 %3719, 28
  %3721 = load i32, i32* %EAX.i1358
  %3722 = zext i32 %3721 to i64
  %3723 = load i64, i64* %PC.i1357
  %3724 = add i64 %3723, 3
  store i64 %3724, i64* %PC.i1357
  %3725 = inttoptr i64 %3720 to i32*
  store i32 %3721, i32* %3725
  store %struct.Memory* %loadMem_4418d7, %struct.Memory** %MEMORY
  %loadMem_4418da = load %struct.Memory*, %struct.Memory** %MEMORY
  %3726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3727 = getelementptr inbounds %struct.GPR, %struct.GPR* %3726, i32 0, i32 33
  %3728 = getelementptr inbounds %struct.Reg, %struct.Reg* %3727, i32 0, i32 0
  %PC.i1356 = bitcast %union.anon* %3728 to i64*
  %3729 = load i64, i64* %PC.i1356
  %3730 = add i64 %3729, -91
  %3731 = load i64, i64* %PC.i1356
  %3732 = add i64 %3731, 5
  store i64 %3732, i64* %PC.i1356
  %3733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3730, i64* %3733, align 8
  store %struct.Memory* %loadMem_4418da, %struct.Memory** %MEMORY
  br label %block_.L_44187f

block_.L_4418df:                                  ; preds = %block_.L_44187f
  %loadMem_4418df = load %struct.Memory*, %struct.Memory** %MEMORY
  %3734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3735 = getelementptr inbounds %struct.GPR, %struct.GPR* %3734, i32 0, i32 33
  %3736 = getelementptr inbounds %struct.Reg, %struct.Reg* %3735, i32 0, i32 0
  %PC.i1355 = bitcast %union.anon* %3736 to i64*
  %3737 = load i64, i64* %PC.i1355
  %3738 = add i64 %3737, 737
  %3739 = load i64, i64* %PC.i1355
  %3740 = add i64 %3739, 5
  store i64 %3740, i64* %PC.i1355
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3738, i64* %3741, align 8
  store %struct.Memory* %loadMem_4418df, %struct.Memory** %MEMORY
  br label %block_.L_441bc0

block_.L_4418e4:                                  ; preds = %block_441866, %block_.L_44185c
  %loadMem_4418e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3743 = getelementptr inbounds %struct.GPR, %struct.GPR* %3742, i32 0, i32 33
  %3744 = getelementptr inbounds %struct.Reg, %struct.Reg* %3743, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %3744 to i64*
  %3745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3746 = getelementptr inbounds %struct.GPR, %struct.GPR* %3745, i32 0, i32 15
  %3747 = getelementptr inbounds %struct.Reg, %struct.Reg* %3746, i32 0, i32 0
  %RBP.i1354 = bitcast %union.anon* %3747 to i64*
  %3748 = load i64, i64* %RBP.i1354
  %3749 = sub i64 %3748, 52
  %3750 = load i64, i64* %PC.i1353
  %3751 = add i64 %3750, 4
  store i64 %3751, i64* %PC.i1353
  %3752 = inttoptr i64 %3749 to i32*
  %3753 = load i32, i32* %3752
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3754, align 1
  %3755 = and i32 %3753, 255
  %3756 = call i32 @llvm.ctpop.i32(i32 %3755)
  %3757 = trunc i32 %3756 to i8
  %3758 = and i8 %3757, 1
  %3759 = xor i8 %3758, 1
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3759, i8* %3760, align 1
  %3761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3761, align 1
  %3762 = icmp eq i32 %3753, 0
  %3763 = zext i1 %3762 to i8
  %3764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3763, i8* %3764, align 1
  %3765 = lshr i32 %3753, 31
  %3766 = trunc i32 %3765 to i8
  %3767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3766, i8* %3767, align 1
  %3768 = lshr i32 %3753, 31
  %3769 = xor i32 %3765, %3768
  %3770 = add i32 %3769, %3768
  %3771 = icmp eq i32 %3770, 2
  %3772 = zext i1 %3771 to i8
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3772, i8* %3773, align 1
  store %struct.Memory* %loadMem_4418e4, %struct.Memory** %MEMORY
  %loadMem_4418e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3775 = getelementptr inbounds %struct.GPR, %struct.GPR* %3774, i32 0, i32 33
  %3776 = getelementptr inbounds %struct.Reg, %struct.Reg* %3775, i32 0, i32 0
  %PC.i1352 = bitcast %union.anon* %3776 to i64*
  %3777 = load i64, i64* %PC.i1352
  %3778 = add i64 %3777, 323
  %3779 = load i64, i64* %PC.i1352
  %3780 = add i64 %3779, 6
  %3781 = load i64, i64* %PC.i1352
  %3782 = add i64 %3781, 6
  store i64 %3782, i64* %PC.i1352
  %3783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3784 = load i8, i8* %3783, align 1
  store i8 %3784, i8* %BRANCH_TAKEN, align 1
  %3785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3786 = icmp ne i8 %3784, 0
  %3787 = select i1 %3786, i64 %3778, i64 %3780
  store i64 %3787, i64* %3785, align 8
  store %struct.Memory* %loadMem_4418e8, %struct.Memory** %MEMORY
  %loadBr_4418e8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4418e8 = icmp eq i8 %loadBr_4418e8, 1
  br i1 %cmpBr_4418e8, label %block_.L_441a2b, label %block_4418ee

block_4418ee:                                     ; preds = %block_.L_4418e4
  %loadMem_4418ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %3788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3789 = getelementptr inbounds %struct.GPR, %struct.GPR* %3788, i32 0, i32 33
  %3790 = getelementptr inbounds %struct.Reg, %struct.Reg* %3789, i32 0, i32 0
  %PC.i1350 = bitcast %union.anon* %3790 to i64*
  %3791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3792 = getelementptr inbounds %struct.GPR, %struct.GPR* %3791, i32 0, i32 15
  %3793 = getelementptr inbounds %struct.Reg, %struct.Reg* %3792, i32 0, i32 0
  %RBP.i1351 = bitcast %union.anon* %3793 to i64*
  %3794 = load i64, i64* %RBP.i1351
  %3795 = sub i64 %3794, 28
  %3796 = load i64, i64* %PC.i1350
  %3797 = add i64 %3796, 7
  store i64 %3797, i64* %PC.i1350
  %3798 = inttoptr i64 %3795 to i32*
  store i32 0, i32* %3798
  store %struct.Memory* %loadMem_4418ee, %struct.Memory** %MEMORY
  br label %block_.L_4418f5

block_.L_4418f5:                                  ; preds = %block_.L_441a18, %block_4418ee
  %loadMem_4418f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3800 = getelementptr inbounds %struct.GPR, %struct.GPR* %3799, i32 0, i32 33
  %3801 = getelementptr inbounds %struct.Reg, %struct.Reg* %3800, i32 0, i32 0
  %PC.i1347 = bitcast %union.anon* %3801 to i64*
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3803 = getelementptr inbounds %struct.GPR, %struct.GPR* %3802, i32 0, i32 1
  %3804 = getelementptr inbounds %struct.Reg, %struct.Reg* %3803, i32 0, i32 0
  %RAX.i1348 = bitcast %union.anon* %3804 to i64*
  %3805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3806 = getelementptr inbounds %struct.GPR, %struct.GPR* %3805, i32 0, i32 15
  %3807 = getelementptr inbounds %struct.Reg, %struct.Reg* %3806, i32 0, i32 0
  %RBP.i1349 = bitcast %union.anon* %3807 to i64*
  %3808 = load i64, i64* %RBP.i1349
  %3809 = sub i64 %3808, 28
  %3810 = load i64, i64* %PC.i1347
  %3811 = add i64 %3810, 3
  store i64 %3811, i64* %PC.i1347
  %3812 = inttoptr i64 %3809 to i32*
  %3813 = load i32, i32* %3812
  %3814 = zext i32 %3813 to i64
  store i64 %3814, i64* %RAX.i1348, align 8
  store %struct.Memory* %loadMem_4418f5, %struct.Memory** %MEMORY
  %loadMem_4418f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3816 = getelementptr inbounds %struct.GPR, %struct.GPR* %3815, i32 0, i32 33
  %3817 = getelementptr inbounds %struct.Reg, %struct.Reg* %3816, i32 0, i32 0
  %PC.i1345 = bitcast %union.anon* %3817 to i64*
  %3818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3819 = getelementptr inbounds %struct.GPR, %struct.GPR* %3818, i32 0, i32 5
  %3820 = getelementptr inbounds %struct.Reg, %struct.Reg* %3819, i32 0, i32 0
  %RCX.i1346 = bitcast %union.anon* %3820 to i64*
  %3821 = load i64, i64* %PC.i1345
  %3822 = add i64 %3821, 8
  store i64 %3822, i64* %PC.i1345
  %3823 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3823, i64* %RCX.i1346, align 8
  store %struct.Memory* %loadMem_4418f8, %struct.Memory** %MEMORY
  %loadMem_441900 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3825 = getelementptr inbounds %struct.GPR, %struct.GPR* %3824, i32 0, i32 33
  %3826 = getelementptr inbounds %struct.Reg, %struct.Reg* %3825, i32 0, i32 0
  %PC.i1342 = bitcast %union.anon* %3826 to i64*
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3828 = getelementptr inbounds %struct.GPR, %struct.GPR* %3827, i32 0, i32 1
  %3829 = getelementptr inbounds %struct.Reg, %struct.Reg* %3828, i32 0, i32 0
  %EAX.i1343 = bitcast %union.anon* %3829 to i32*
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3831 = getelementptr inbounds %struct.GPR, %struct.GPR* %3830, i32 0, i32 5
  %3832 = getelementptr inbounds %struct.Reg, %struct.Reg* %3831, i32 0, i32 0
  %RCX.i1344 = bitcast %union.anon* %3832 to i64*
  %3833 = load i32, i32* %EAX.i1343
  %3834 = zext i32 %3833 to i64
  %3835 = load i64, i64* %RCX.i1344
  %3836 = add i64 %3835, 72712
  %3837 = load i64, i64* %PC.i1342
  %3838 = add i64 %3837, 6
  store i64 %3838, i64* %PC.i1342
  %3839 = inttoptr i64 %3836 to i32*
  %3840 = load i32, i32* %3839
  %3841 = sub i32 %3833, %3840
  %3842 = icmp ult i32 %3833, %3840
  %3843 = zext i1 %3842 to i8
  %3844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3843, i8* %3844, align 1
  %3845 = and i32 %3841, 255
  %3846 = call i32 @llvm.ctpop.i32(i32 %3845)
  %3847 = trunc i32 %3846 to i8
  %3848 = and i8 %3847, 1
  %3849 = xor i8 %3848, 1
  %3850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3849, i8* %3850, align 1
  %3851 = xor i32 %3840, %3833
  %3852 = xor i32 %3851, %3841
  %3853 = lshr i32 %3852, 4
  %3854 = trunc i32 %3853 to i8
  %3855 = and i8 %3854, 1
  %3856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3855, i8* %3856, align 1
  %3857 = icmp eq i32 %3841, 0
  %3858 = zext i1 %3857 to i8
  %3859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3858, i8* %3859, align 1
  %3860 = lshr i32 %3841, 31
  %3861 = trunc i32 %3860 to i8
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3861, i8* %3862, align 1
  %3863 = lshr i32 %3833, 31
  %3864 = lshr i32 %3840, 31
  %3865 = xor i32 %3864, %3863
  %3866 = xor i32 %3860, %3863
  %3867 = add i32 %3866, %3865
  %3868 = icmp eq i32 %3867, 2
  %3869 = zext i1 %3868 to i8
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3869, i8* %3870, align 1
  store %struct.Memory* %loadMem_441900, %struct.Memory** %MEMORY
  %loadMem_441906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3872 = getelementptr inbounds %struct.GPR, %struct.GPR* %3871, i32 0, i32 33
  %3873 = getelementptr inbounds %struct.Reg, %struct.Reg* %3872, i32 0, i32 0
  %PC.i1341 = bitcast %union.anon* %3873 to i64*
  %3874 = load i64, i64* %PC.i1341
  %3875 = add i64 %3874, 288
  %3876 = load i64, i64* %PC.i1341
  %3877 = add i64 %3876, 6
  %3878 = load i64, i64* %PC.i1341
  %3879 = add i64 %3878, 6
  store i64 %3879, i64* %PC.i1341
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3881 = load i8, i8* %3880, align 1
  %3882 = icmp ne i8 %3881, 0
  %3883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3884 = load i8, i8* %3883, align 1
  %3885 = icmp ne i8 %3884, 0
  %3886 = xor i1 %3882, %3885
  %3887 = xor i1 %3886, true
  %3888 = zext i1 %3887 to i8
  store i8 %3888, i8* %BRANCH_TAKEN, align 1
  %3889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3890 = select i1 %3886, i64 %3877, i64 %3875
  store i64 %3890, i64* %3889, align 8
  store %struct.Memory* %loadMem_441906, %struct.Memory** %MEMORY
  %loadBr_441906 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441906 = icmp eq i8 %loadBr_441906, 1
  br i1 %cmpBr_441906, label %block_.L_441a26, label %block_44190c

block_44190c:                                     ; preds = %block_.L_4418f5
  %loadMem_44190c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3892 = getelementptr inbounds %struct.GPR, %struct.GPR* %3891, i32 0, i32 33
  %3893 = getelementptr inbounds %struct.Reg, %struct.Reg* %3892, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %3893 to i64*
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3895 = getelementptr inbounds %struct.GPR, %struct.GPR* %3894, i32 0, i32 15
  %3896 = getelementptr inbounds %struct.Reg, %struct.Reg* %3895, i32 0, i32 0
  %RBP.i1340 = bitcast %union.anon* %3896 to i64*
  %3897 = load i64, i64* %RBP.i1340
  %3898 = sub i64 %3897, 32
  %3899 = load i64, i64* %PC.i1339
  %3900 = add i64 %3899, 7
  store i64 %3900, i64* %PC.i1339
  %3901 = inttoptr i64 %3898 to i32*
  store i32 0, i32* %3901
  store %struct.Memory* %loadMem_44190c, %struct.Memory** %MEMORY
  br label %block_.L_441913

block_.L_441913:                                  ; preds = %block_.L_441a05, %block_44190c
  %loadMem_441913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3903 = getelementptr inbounds %struct.GPR, %struct.GPR* %3902, i32 0, i32 33
  %3904 = getelementptr inbounds %struct.Reg, %struct.Reg* %3903, i32 0, i32 0
  %PC.i1336 = bitcast %union.anon* %3904 to i64*
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3906 = getelementptr inbounds %struct.GPR, %struct.GPR* %3905, i32 0, i32 1
  %3907 = getelementptr inbounds %struct.Reg, %struct.Reg* %3906, i32 0, i32 0
  %RAX.i1337 = bitcast %union.anon* %3907 to i64*
  %3908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3909 = getelementptr inbounds %struct.GPR, %struct.GPR* %3908, i32 0, i32 15
  %3910 = getelementptr inbounds %struct.Reg, %struct.Reg* %3909, i32 0, i32 0
  %RBP.i1338 = bitcast %union.anon* %3910 to i64*
  %3911 = load i64, i64* %RBP.i1338
  %3912 = sub i64 %3911, 32
  %3913 = load i64, i64* %PC.i1336
  %3914 = add i64 %3913, 3
  store i64 %3914, i64* %PC.i1336
  %3915 = inttoptr i64 %3912 to i32*
  %3916 = load i32, i32* %3915
  %3917 = zext i32 %3916 to i64
  store i64 %3917, i64* %RAX.i1337, align 8
  store %struct.Memory* %loadMem_441913, %struct.Memory** %MEMORY
  %loadMem_441916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3919 = getelementptr inbounds %struct.GPR, %struct.GPR* %3918, i32 0, i32 33
  %3920 = getelementptr inbounds %struct.Reg, %struct.Reg* %3919, i32 0, i32 0
  %PC.i1334 = bitcast %union.anon* %3920 to i64*
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3922 = getelementptr inbounds %struct.GPR, %struct.GPR* %3921, i32 0, i32 5
  %3923 = getelementptr inbounds %struct.Reg, %struct.Reg* %3922, i32 0, i32 0
  %RCX.i1335 = bitcast %union.anon* %3923 to i64*
  %3924 = load i64, i64* %PC.i1334
  %3925 = add i64 %3924, 8
  store i64 %3925, i64* %PC.i1334
  %3926 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3926, i64* %RCX.i1335, align 8
  store %struct.Memory* %loadMem_441916, %struct.Memory** %MEMORY
  %loadMem_44191e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3928 = getelementptr inbounds %struct.GPR, %struct.GPR* %3927, i32 0, i32 33
  %3929 = getelementptr inbounds %struct.Reg, %struct.Reg* %3928, i32 0, i32 0
  %PC.i1331 = bitcast %union.anon* %3929 to i64*
  %3930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3931 = getelementptr inbounds %struct.GPR, %struct.GPR* %3930, i32 0, i32 1
  %3932 = getelementptr inbounds %struct.Reg, %struct.Reg* %3931, i32 0, i32 0
  %EAX.i1332 = bitcast %union.anon* %3932 to i32*
  %3933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3934 = getelementptr inbounds %struct.GPR, %struct.GPR* %3933, i32 0, i32 5
  %3935 = getelementptr inbounds %struct.Reg, %struct.Reg* %3934, i32 0, i32 0
  %RCX.i1333 = bitcast %union.anon* %3935 to i64*
  %3936 = load i32, i32* %EAX.i1332
  %3937 = zext i32 %3936 to i64
  %3938 = load i64, i64* %RCX.i1333
  %3939 = add i64 %3938, 72708
  %3940 = load i64, i64* %PC.i1331
  %3941 = add i64 %3940, 6
  store i64 %3941, i64* %PC.i1331
  %3942 = inttoptr i64 %3939 to i32*
  %3943 = load i32, i32* %3942
  %3944 = sub i32 %3936, %3943
  %3945 = icmp ult i32 %3936, %3943
  %3946 = zext i1 %3945 to i8
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3946, i8* %3947, align 1
  %3948 = and i32 %3944, 255
  %3949 = call i32 @llvm.ctpop.i32(i32 %3948)
  %3950 = trunc i32 %3949 to i8
  %3951 = and i8 %3950, 1
  %3952 = xor i8 %3951, 1
  %3953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3952, i8* %3953, align 1
  %3954 = xor i32 %3943, %3936
  %3955 = xor i32 %3954, %3944
  %3956 = lshr i32 %3955, 4
  %3957 = trunc i32 %3956 to i8
  %3958 = and i8 %3957, 1
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3958, i8* %3959, align 1
  %3960 = icmp eq i32 %3944, 0
  %3961 = zext i1 %3960 to i8
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3961, i8* %3962, align 1
  %3963 = lshr i32 %3944, 31
  %3964 = trunc i32 %3963 to i8
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3964, i8* %3965, align 1
  %3966 = lshr i32 %3936, 31
  %3967 = lshr i32 %3943, 31
  %3968 = xor i32 %3967, %3966
  %3969 = xor i32 %3963, %3966
  %3970 = add i32 %3969, %3968
  %3971 = icmp eq i32 %3970, 2
  %3972 = zext i1 %3971 to i8
  %3973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3972, i8* %3973, align 1
  store %struct.Memory* %loadMem_44191e, %struct.Memory** %MEMORY
  %loadMem_441924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3975 = getelementptr inbounds %struct.GPR, %struct.GPR* %3974, i32 0, i32 33
  %3976 = getelementptr inbounds %struct.Reg, %struct.Reg* %3975, i32 0, i32 0
  %PC.i1330 = bitcast %union.anon* %3976 to i64*
  %3977 = load i64, i64* %PC.i1330
  %3978 = add i64 %3977, 239
  %3979 = load i64, i64* %PC.i1330
  %3980 = add i64 %3979, 6
  %3981 = load i64, i64* %PC.i1330
  %3982 = add i64 %3981, 6
  store i64 %3982, i64* %PC.i1330
  %3983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3984 = load i8, i8* %3983, align 1
  %3985 = icmp ne i8 %3984, 0
  %3986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3987 = load i8, i8* %3986, align 1
  %3988 = icmp ne i8 %3987, 0
  %3989 = xor i1 %3985, %3988
  %3990 = xor i1 %3989, true
  %3991 = zext i1 %3990 to i8
  store i8 %3991, i8* %BRANCH_TAKEN, align 1
  %3992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3993 = select i1 %3989, i64 %3980, i64 %3978
  store i64 %3993, i64* %3992, align 8
  store %struct.Memory* %loadMem_441924, %struct.Memory** %MEMORY
  %loadBr_441924 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441924 = icmp eq i8 %loadBr_441924, 1
  br i1 %cmpBr_441924, label %block_.L_441a13, label %block_44192a

block_44192a:                                     ; preds = %block_.L_441913
  %loadMem_44192a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3995 = getelementptr inbounds %struct.GPR, %struct.GPR* %3994, i32 0, i32 33
  %3996 = getelementptr inbounds %struct.Reg, %struct.Reg* %3995, i32 0, i32 0
  %PC.i1328 = bitcast %union.anon* %3996 to i64*
  %3997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3998 = getelementptr inbounds %struct.GPR, %struct.GPR* %3997, i32 0, i32 1
  %3999 = getelementptr inbounds %struct.Reg, %struct.Reg* %3998, i32 0, i32 0
  %RAX.i1329 = bitcast %union.anon* %3999 to i64*
  %4000 = load i64, i64* %PC.i1328
  %4001 = add i64 %4000, 8
  store i64 %4001, i64* %PC.i1328
  %4002 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4002, i64* %RAX.i1329, align 8
  store %struct.Memory* %loadMem_44192a, %struct.Memory** %MEMORY
  %loadMem_441932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4004 = getelementptr inbounds %struct.GPR, %struct.GPR* %4003, i32 0, i32 33
  %4005 = getelementptr inbounds %struct.Reg, %struct.Reg* %4004, i32 0, i32 0
  %PC.i1326 = bitcast %union.anon* %4005 to i64*
  %4006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4007 = getelementptr inbounds %struct.GPR, %struct.GPR* %4006, i32 0, i32 1
  %4008 = getelementptr inbounds %struct.Reg, %struct.Reg* %4007, i32 0, i32 0
  %RAX.i1327 = bitcast %union.anon* %4008 to i64*
  %4009 = load i64, i64* %RAX.i1327
  %4010 = add i64 %4009, 72724
  %4011 = load i64, i64* %PC.i1326
  %4012 = add i64 %4011, 7
  store i64 %4012, i64* %PC.i1326
  %4013 = inttoptr i64 %4010 to i32*
  %4014 = load i32, i32* %4013
  %4015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4015, align 1
  %4016 = and i32 %4014, 255
  %4017 = call i32 @llvm.ctpop.i32(i32 %4016)
  %4018 = trunc i32 %4017 to i8
  %4019 = and i8 %4018, 1
  %4020 = xor i8 %4019, 1
  %4021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4020, i8* %4021, align 1
  %4022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4022, align 1
  %4023 = icmp eq i32 %4014, 0
  %4024 = zext i1 %4023 to i8
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4024, i8* %4025, align 1
  %4026 = lshr i32 %4014, 31
  %4027 = trunc i32 %4026 to i8
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4027, i8* %4028, align 1
  %4029 = lshr i32 %4014, 31
  %4030 = xor i32 %4026, %4029
  %4031 = add i32 %4030, %4029
  %4032 = icmp eq i32 %4031, 2
  %4033 = zext i1 %4032 to i8
  %4034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4033, i8* %4034, align 1
  store %struct.Memory* %loadMem_441932, %struct.Memory** %MEMORY
  %loadMem_441939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4036 = getelementptr inbounds %struct.GPR, %struct.GPR* %4035, i32 0, i32 33
  %4037 = getelementptr inbounds %struct.Reg, %struct.Reg* %4036, i32 0, i32 0
  %PC.i1325 = bitcast %union.anon* %4037 to i64*
  %4038 = load i64, i64* %PC.i1325
  %4039 = add i64 %4038, 115
  %4040 = load i64, i64* %PC.i1325
  %4041 = add i64 %4040, 6
  %4042 = load i64, i64* %PC.i1325
  %4043 = add i64 %4042, 6
  store i64 %4043, i64* %PC.i1325
  %4044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4045 = load i8, i8* %4044, align 1
  %4046 = icmp eq i8 %4045, 0
  %4047 = zext i1 %4046 to i8
  store i8 %4047, i8* %BRANCH_TAKEN, align 1
  %4048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4049 = select i1 %4046, i64 %4039, i64 %4041
  store i64 %4049, i64* %4048, align 8
  store %struct.Memory* %loadMem_441939, %struct.Memory** %MEMORY
  %loadBr_441939 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441939 = icmp eq i8 %loadBr_441939, 1
  br i1 %cmpBr_441939, label %block_.L_4419ac, label %block_44193f

block_44193f:                                     ; preds = %block_44192a
  %loadMem_44193f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4051 = getelementptr inbounds %struct.GPR, %struct.GPR* %4050, i32 0, i32 33
  %4052 = getelementptr inbounds %struct.Reg, %struct.Reg* %4051, i32 0, i32 0
  %PC.i1323 = bitcast %union.anon* %4052 to i64*
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4054 = getelementptr inbounds %struct.GPR, %struct.GPR* %4053, i32 0, i32 1
  %4055 = getelementptr inbounds %struct.Reg, %struct.Reg* %4054, i32 0, i32 0
  %RAX.i1324 = bitcast %union.anon* %4055 to i64*
  %4056 = load i64, i64* %PC.i1323
  %4057 = add i64 %4056, 8
  store i64 %4057, i64* %PC.i1323
  %4058 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4058, i64* %RAX.i1324, align 8
  store %struct.Memory* %loadMem_44193f, %struct.Memory** %MEMORY
  %loadMem_441947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4060 = getelementptr inbounds %struct.GPR, %struct.GPR* %4059, i32 0, i32 33
  %4061 = getelementptr inbounds %struct.Reg, %struct.Reg* %4060, i32 0, i32 0
  %PC.i1321 = bitcast %union.anon* %4061 to i64*
  %4062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4063 = getelementptr inbounds %struct.GPR, %struct.GPR* %4062, i32 0, i32 1
  %4064 = getelementptr inbounds %struct.Reg, %struct.Reg* %4063, i32 0, i32 0
  %RAX.i1322 = bitcast %union.anon* %4064 to i64*
  %4065 = load i64, i64* %RAX.i1322
  %4066 = load i64, i64* %PC.i1321
  %4067 = add i64 %4066, 6
  store i64 %4067, i64* %PC.i1321
  %4068 = add i64 12600, %4065
  store i64 %4068, i64* %RAX.i1322, align 8
  %4069 = icmp ult i64 %4068, %4065
  %4070 = icmp ult i64 %4068, 12600
  %4071 = or i1 %4069, %4070
  %4072 = zext i1 %4071 to i8
  %4073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4072, i8* %4073, align 1
  %4074 = trunc i64 %4068 to i32
  %4075 = and i32 %4074, 255
  %4076 = call i32 @llvm.ctpop.i32(i32 %4075)
  %4077 = trunc i32 %4076 to i8
  %4078 = and i8 %4077, 1
  %4079 = xor i8 %4078, 1
  %4080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4079, i8* %4080, align 1
  %4081 = xor i64 12600, %4065
  %4082 = xor i64 %4081, %4068
  %4083 = lshr i64 %4082, 4
  %4084 = trunc i64 %4083 to i8
  %4085 = and i8 %4084, 1
  %4086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4085, i8* %4086, align 1
  %4087 = icmp eq i64 %4068, 0
  %4088 = zext i1 %4087 to i8
  %4089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4088, i8* %4089, align 1
  %4090 = lshr i64 %4068, 63
  %4091 = trunc i64 %4090 to i8
  %4092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4091, i8* %4092, align 1
  %4093 = lshr i64 %4065, 63
  %4094 = xor i64 %4090, %4093
  %4095 = add i64 %4094, %4090
  %4096 = icmp eq i64 %4095, 2
  %4097 = zext i1 %4096 to i8
  %4098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4097, i8* %4098, align 1
  store %struct.Memory* %loadMem_441947, %struct.Memory** %MEMORY
  %loadMem_44194d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4100 = getelementptr inbounds %struct.GPR, %struct.GPR* %4099, i32 0, i32 33
  %4101 = getelementptr inbounds %struct.Reg, %struct.Reg* %4100, i32 0, i32 0
  %PC.i1318 = bitcast %union.anon* %4101 to i64*
  %4102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4103 = getelementptr inbounds %struct.GPR, %struct.GPR* %4102, i32 0, i32 5
  %4104 = getelementptr inbounds %struct.Reg, %struct.Reg* %4103, i32 0, i32 0
  %RCX.i1319 = bitcast %union.anon* %4104 to i64*
  %4105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4106 = getelementptr inbounds %struct.GPR, %struct.GPR* %4105, i32 0, i32 15
  %4107 = getelementptr inbounds %struct.Reg, %struct.Reg* %4106, i32 0, i32 0
  %RBP.i1320 = bitcast %union.anon* %4107 to i64*
  %4108 = load i64, i64* %RBP.i1320
  %4109 = sub i64 %4108, 32
  %4110 = load i64, i64* %PC.i1318
  %4111 = add i64 %4110, 4
  store i64 %4111, i64* %PC.i1318
  %4112 = inttoptr i64 %4109 to i32*
  %4113 = load i32, i32* %4112
  %4114 = sext i32 %4113 to i64
  store i64 %4114, i64* %RCX.i1319, align 8
  store %struct.Memory* %loadMem_44194d, %struct.Memory** %MEMORY
  %loadMem_441951 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4116 = getelementptr inbounds %struct.GPR, %struct.GPR* %4115, i32 0, i32 33
  %4117 = getelementptr inbounds %struct.Reg, %struct.Reg* %4116, i32 0, i32 0
  %PC.i1316 = bitcast %union.anon* %4117 to i64*
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4119 = getelementptr inbounds %struct.GPR, %struct.GPR* %4118, i32 0, i32 5
  %4120 = getelementptr inbounds %struct.Reg, %struct.Reg* %4119, i32 0, i32 0
  %RCX.i1317 = bitcast %union.anon* %4120 to i64*
  %4121 = load i64, i64* %RCX.i1317
  %4122 = load i64, i64* %PC.i1316
  %4123 = add i64 %4122, 4
  store i64 %4123, i64* %PC.i1316
  %4124 = shl i64 %4121, 4
  %4125 = icmp slt i64 %4124, 0
  %4126 = shl i64 %4124, 1
  store i64 %4126, i64* %RCX.i1317, align 8
  %4127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4128 = zext i1 %4125 to i8
  store i8 %4128, i8* %4127, align 1
  %4129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4130 = trunc i64 %4126 to i32
  %4131 = and i32 %4130, 254
  %4132 = call i32 @llvm.ctpop.i32(i32 %4131)
  %4133 = trunc i32 %4132 to i8
  %4134 = and i8 %4133, 1
  %4135 = xor i8 %4134, 1
  store i8 %4135, i8* %4129, align 1
  %4136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4136, align 1
  %4137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4138 = icmp eq i64 %4126, 0
  %4139 = zext i1 %4138 to i8
  store i8 %4139, i8* %4137, align 1
  %4140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4141 = lshr i64 %4126, 63
  %4142 = trunc i64 %4141 to i8
  store i8 %4142, i8* %4140, align 1
  %4143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4143, align 1
  store %struct.Memory* %loadMem_441951, %struct.Memory** %MEMORY
  %loadMem_441955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4145 = getelementptr inbounds %struct.GPR, %struct.GPR* %4144, i32 0, i32 33
  %4146 = getelementptr inbounds %struct.Reg, %struct.Reg* %4145, i32 0, i32 0
  %PC.i1313 = bitcast %union.anon* %4146 to i64*
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4148 = getelementptr inbounds %struct.GPR, %struct.GPR* %4147, i32 0, i32 1
  %4149 = getelementptr inbounds %struct.Reg, %struct.Reg* %4148, i32 0, i32 0
  %RAX.i1314 = bitcast %union.anon* %4149 to i64*
  %4150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4151 = getelementptr inbounds %struct.GPR, %struct.GPR* %4150, i32 0, i32 5
  %4152 = getelementptr inbounds %struct.Reg, %struct.Reg* %4151, i32 0, i32 0
  %RCX.i1315 = bitcast %union.anon* %4152 to i64*
  %4153 = load i64, i64* %RAX.i1314
  %4154 = load i64, i64* %RCX.i1315
  %4155 = load i64, i64* %PC.i1313
  %4156 = add i64 %4155, 3
  store i64 %4156, i64* %PC.i1313
  %4157 = add i64 %4154, %4153
  store i64 %4157, i64* %RAX.i1314, align 8
  %4158 = icmp ult i64 %4157, %4153
  %4159 = icmp ult i64 %4157, %4154
  %4160 = or i1 %4158, %4159
  %4161 = zext i1 %4160 to i8
  %4162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4161, i8* %4162, align 1
  %4163 = trunc i64 %4157 to i32
  %4164 = and i32 %4163, 255
  %4165 = call i32 @llvm.ctpop.i32(i32 %4164)
  %4166 = trunc i32 %4165 to i8
  %4167 = and i8 %4166, 1
  %4168 = xor i8 %4167, 1
  %4169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4168, i8* %4169, align 1
  %4170 = xor i64 %4154, %4153
  %4171 = xor i64 %4170, %4157
  %4172 = lshr i64 %4171, 4
  %4173 = trunc i64 %4172 to i8
  %4174 = and i8 %4173, 1
  %4175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4174, i8* %4175, align 1
  %4176 = icmp eq i64 %4157, 0
  %4177 = zext i1 %4176 to i8
  %4178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4177, i8* %4178, align 1
  %4179 = lshr i64 %4157, 63
  %4180 = trunc i64 %4179 to i8
  %4181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4180, i8* %4181, align 1
  %4182 = lshr i64 %4153, 63
  %4183 = lshr i64 %4154, 63
  %4184 = xor i64 %4179, %4182
  %4185 = xor i64 %4179, %4183
  %4186 = add i64 %4184, %4185
  %4187 = icmp eq i64 %4186, 2
  %4188 = zext i1 %4187 to i8
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4188, i8* %4189, align 1
  store %struct.Memory* %loadMem_441955, %struct.Memory** %MEMORY
  %loadMem_441958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4191 = getelementptr inbounds %struct.GPR, %struct.GPR* %4190, i32 0, i32 33
  %4192 = getelementptr inbounds %struct.Reg, %struct.Reg* %4191, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %4192 to i64*
  %4193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4194 = getelementptr inbounds %struct.GPR, %struct.GPR* %4193, i32 0, i32 5
  %4195 = getelementptr inbounds %struct.Reg, %struct.Reg* %4194, i32 0, i32 0
  %RCX.i1311 = bitcast %union.anon* %4195 to i64*
  %4196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4197 = getelementptr inbounds %struct.GPR, %struct.GPR* %4196, i32 0, i32 15
  %4198 = getelementptr inbounds %struct.Reg, %struct.Reg* %4197, i32 0, i32 0
  %RBP.i1312 = bitcast %union.anon* %4198 to i64*
  %4199 = load i64, i64* %RBP.i1312
  %4200 = sub i64 %4199, 28
  %4201 = load i64, i64* %PC.i1310
  %4202 = add i64 %4201, 4
  store i64 %4202, i64* %PC.i1310
  %4203 = inttoptr i64 %4200 to i32*
  %4204 = load i32, i32* %4203
  %4205 = sext i32 %4204 to i64
  store i64 %4205, i64* %RCX.i1311, align 8
  store %struct.Memory* %loadMem_441958, %struct.Memory** %MEMORY
  %loadMem_44195c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4207 = getelementptr inbounds %struct.GPR, %struct.GPR* %4206, i32 0, i32 33
  %4208 = getelementptr inbounds %struct.Reg, %struct.Reg* %4207, i32 0, i32 0
  %PC.i1306 = bitcast %union.anon* %4208 to i64*
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4210 = getelementptr inbounds %struct.GPR, %struct.GPR* %4209, i32 0, i32 7
  %4211 = getelementptr inbounds %struct.Reg, %struct.Reg* %4210, i32 0, i32 0
  %DX.i1307 = bitcast %union.anon* %4211 to i16*
  %4212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4213 = getelementptr inbounds %struct.GPR, %struct.GPR* %4212, i32 0, i32 1
  %4214 = getelementptr inbounds %struct.Reg, %struct.Reg* %4213, i32 0, i32 0
  %RAX.i1308 = bitcast %union.anon* %4214 to i64*
  %4215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4216 = getelementptr inbounds %struct.GPR, %struct.GPR* %4215, i32 0, i32 5
  %4217 = getelementptr inbounds %struct.Reg, %struct.Reg* %4216, i32 0, i32 0
  %RCX.i1309 = bitcast %union.anon* %4217 to i64*
  %4218 = load i64, i64* %RAX.i1308
  %4219 = load i64, i64* %RCX.i1309
  %4220 = mul i64 %4219, 2
  %4221 = add i64 %4220, %4218
  %4222 = load i64, i64* %PC.i1306
  %4223 = add i64 %4222, 4
  store i64 %4223, i64* %PC.i1306
  %4224 = inttoptr i64 %4221 to i16*
  %4225 = load i16, i16* %4224
  store i16 %4225, i16* %DX.i1307, align 2
  store %struct.Memory* %loadMem_44195c, %struct.Memory** %MEMORY
  %loadMem_441960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4227 = getelementptr inbounds %struct.GPR, %struct.GPR* %4226, i32 0, i32 33
  %4228 = getelementptr inbounds %struct.Reg, %struct.Reg* %4227, i32 0, i32 0
  %PC.i1304 = bitcast %union.anon* %4228 to i64*
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4230 = getelementptr inbounds %struct.GPR, %struct.GPR* %4229, i32 0, i32 1
  %4231 = getelementptr inbounds %struct.Reg, %struct.Reg* %4230, i32 0, i32 0
  %RAX.i1305 = bitcast %union.anon* %4231 to i64*
  %4232 = load i64, i64* %PC.i1304
  %4233 = add i64 %4232, 8
  store i64 %4233, i64* %PC.i1304
  %4234 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %4234, i64* %RAX.i1305, align 8
  store %struct.Memory* %loadMem_441960, %struct.Memory** %MEMORY
  %loadMem_441968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4236 = getelementptr inbounds %struct.GPR, %struct.GPR* %4235, i32 0, i32 33
  %4237 = getelementptr inbounds %struct.Reg, %struct.Reg* %4236, i32 0, i32 0
  %PC.i1302 = bitcast %union.anon* %4237 to i64*
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4239 = getelementptr inbounds %struct.GPR, %struct.GPR* %4238, i32 0, i32 1
  %4240 = getelementptr inbounds %struct.Reg, %struct.Reg* %4239, i32 0, i32 0
  %RAX.i1303 = bitcast %union.anon* %4240 to i64*
  %4241 = load i64, i64* %RAX.i1303
  %4242 = add i64 %4241, 6464
  %4243 = load i64, i64* %PC.i1302
  %4244 = add i64 %4243, 7
  store i64 %4244, i64* %PC.i1302
  %4245 = inttoptr i64 %4242 to i64*
  %4246 = load i64, i64* %4245
  store i64 %4246, i64* %RAX.i1303, align 8
  store %struct.Memory* %loadMem_441968, %struct.Memory** %MEMORY
  %loadMem_44196f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4248 = getelementptr inbounds %struct.GPR, %struct.GPR* %4247, i32 0, i32 33
  %4249 = getelementptr inbounds %struct.Reg, %struct.Reg* %4248, i32 0, i32 0
  %PC.i1299 = bitcast %union.anon* %4249 to i64*
  %4250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4251 = getelementptr inbounds %struct.GPR, %struct.GPR* %4250, i32 0, i32 5
  %4252 = getelementptr inbounds %struct.Reg, %struct.Reg* %4251, i32 0, i32 0
  %RCX.i1300 = bitcast %union.anon* %4252 to i64*
  %4253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4254 = getelementptr inbounds %struct.GPR, %struct.GPR* %4253, i32 0, i32 15
  %4255 = getelementptr inbounds %struct.Reg, %struct.Reg* %4254, i32 0, i32 0
  %RBP.i1301 = bitcast %union.anon* %4255 to i64*
  %4256 = load i64, i64* %RBP.i1301
  %4257 = sub i64 %4256, 12
  %4258 = load i64, i64* %PC.i1299
  %4259 = add i64 %4258, 4
  store i64 %4259, i64* %PC.i1299
  %4260 = inttoptr i64 %4257 to i32*
  %4261 = load i32, i32* %4260
  %4262 = sext i32 %4261 to i64
  store i64 %4262, i64* %RCX.i1300, align 8
  store %struct.Memory* %loadMem_44196f, %struct.Memory** %MEMORY
  %loadMem_441973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4264 = getelementptr inbounds %struct.GPR, %struct.GPR* %4263, i32 0, i32 33
  %4265 = getelementptr inbounds %struct.Reg, %struct.Reg* %4264, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %4265 to i64*
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4267 = getelementptr inbounds %struct.GPR, %struct.GPR* %4266, i32 0, i32 1
  %4268 = getelementptr inbounds %struct.Reg, %struct.Reg* %4267, i32 0, i32 0
  %RAX.i1297 = bitcast %union.anon* %4268 to i64*
  %4269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4270 = getelementptr inbounds %struct.GPR, %struct.GPR* %4269, i32 0, i32 5
  %4271 = getelementptr inbounds %struct.Reg, %struct.Reg* %4270, i32 0, i32 0
  %RCX.i1298 = bitcast %union.anon* %4271 to i64*
  %4272 = load i64, i64* %RAX.i1297
  %4273 = load i64, i64* %RCX.i1298
  %4274 = mul i64 %4273, 8
  %4275 = add i64 %4274, %4272
  %4276 = load i64, i64* %PC.i1296
  %4277 = add i64 %4276, 4
  store i64 %4277, i64* %PC.i1296
  %4278 = inttoptr i64 %4275 to i64*
  %4279 = load i64, i64* %4278
  store i64 %4279, i64* %RAX.i1297, align 8
  store %struct.Memory* %loadMem_441973, %struct.Memory** %MEMORY
  %loadMem_441977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4281 = getelementptr inbounds %struct.GPR, %struct.GPR* %4280, i32 0, i32 33
  %4282 = getelementptr inbounds %struct.Reg, %struct.Reg* %4281, i32 0, i32 0
  %PC.i1294 = bitcast %union.anon* %4282 to i64*
  %4283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4284 = getelementptr inbounds %struct.GPR, %struct.GPR* %4283, i32 0, i32 5
  %4285 = getelementptr inbounds %struct.Reg, %struct.Reg* %4284, i32 0, i32 0
  %RCX.i1295 = bitcast %union.anon* %4285 to i64*
  %4286 = load i64, i64* %PC.i1294
  %4287 = add i64 %4286, 8
  store i64 %4287, i64* %PC.i1294
  %4288 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4288, i64* %RCX.i1295, align 8
  store %struct.Memory* %loadMem_441977, %struct.Memory** %MEMORY
  %loadMem_44197f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4290 = getelementptr inbounds %struct.GPR, %struct.GPR* %4289, i32 0, i32 33
  %4291 = getelementptr inbounds %struct.Reg, %struct.Reg* %4290, i32 0, i32 0
  %PC.i1291 = bitcast %union.anon* %4291 to i64*
  %4292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4293 = getelementptr inbounds %struct.GPR, %struct.GPR* %4292, i32 0, i32 5
  %4294 = getelementptr inbounds %struct.Reg, %struct.Reg* %4293, i32 0, i32 0
  %RCX.i1292 = bitcast %union.anon* %4294 to i64*
  %4295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4296 = getelementptr inbounds %struct.GPR, %struct.GPR* %4295, i32 0, i32 9
  %4297 = getelementptr inbounds %struct.Reg, %struct.Reg* %4296, i32 0, i32 0
  %RSI.i1293 = bitcast %union.anon* %4297 to i64*
  %4298 = load i64, i64* %RCX.i1292
  %4299 = add i64 %4298, 164
  %4300 = load i64, i64* %PC.i1291
  %4301 = add i64 %4300, 6
  store i64 %4301, i64* %PC.i1291
  %4302 = inttoptr i64 %4299 to i32*
  %4303 = load i32, i32* %4302
  %4304 = zext i32 %4303 to i64
  store i64 %4304, i64* %RSI.i1293, align 8
  store %struct.Memory* %loadMem_44197f, %struct.Memory** %MEMORY
  %loadMem_441985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4306 = getelementptr inbounds %struct.GPR, %struct.GPR* %4305, i32 0, i32 33
  %4307 = getelementptr inbounds %struct.Reg, %struct.Reg* %4306, i32 0, i32 0
  %PC.i1288 = bitcast %union.anon* %4307 to i64*
  %4308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4309 = getelementptr inbounds %struct.GPR, %struct.GPR* %4308, i32 0, i32 9
  %4310 = getelementptr inbounds %struct.Reg, %struct.Reg* %4309, i32 0, i32 0
  %RSI.i1289 = bitcast %union.anon* %4310 to i64*
  %4311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4312 = getelementptr inbounds %struct.GPR, %struct.GPR* %4311, i32 0, i32 15
  %4313 = getelementptr inbounds %struct.Reg, %struct.Reg* %4312, i32 0, i32 0
  %RBP.i1290 = bitcast %union.anon* %4313 to i64*
  %4314 = load i64, i64* %RSI.i1289
  %4315 = load i64, i64* %RBP.i1290
  %4316 = sub i64 %4315, 28
  %4317 = load i64, i64* %PC.i1288
  %4318 = add i64 %4317, 3
  store i64 %4318, i64* %PC.i1288
  %4319 = trunc i64 %4314 to i32
  %4320 = inttoptr i64 %4316 to i32*
  %4321 = load i32, i32* %4320
  %4322 = add i32 %4321, %4319
  %4323 = zext i32 %4322 to i64
  store i64 %4323, i64* %RSI.i1289, align 8
  %4324 = icmp ult i32 %4322, %4319
  %4325 = icmp ult i32 %4322, %4321
  %4326 = or i1 %4324, %4325
  %4327 = zext i1 %4326 to i8
  %4328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4327, i8* %4328, align 1
  %4329 = and i32 %4322, 255
  %4330 = call i32 @llvm.ctpop.i32(i32 %4329)
  %4331 = trunc i32 %4330 to i8
  %4332 = and i8 %4331, 1
  %4333 = xor i8 %4332, 1
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4333, i8* %4334, align 1
  %4335 = xor i32 %4321, %4319
  %4336 = xor i32 %4335, %4322
  %4337 = lshr i32 %4336, 4
  %4338 = trunc i32 %4337 to i8
  %4339 = and i8 %4338, 1
  %4340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4339, i8* %4340, align 1
  %4341 = icmp eq i32 %4322, 0
  %4342 = zext i1 %4341 to i8
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4342, i8* %4343, align 1
  %4344 = lshr i32 %4322, 31
  %4345 = trunc i32 %4344 to i8
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4345, i8* %4346, align 1
  %4347 = lshr i32 %4319, 31
  %4348 = lshr i32 %4321, 31
  %4349 = xor i32 %4344, %4347
  %4350 = xor i32 %4344, %4348
  %4351 = add i32 %4349, %4350
  %4352 = icmp eq i32 %4351, 2
  %4353 = zext i1 %4352 to i8
  %4354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4353, i8* %4354, align 1
  store %struct.Memory* %loadMem_441985, %struct.Memory** %MEMORY
  %loadMem_441988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4356 = getelementptr inbounds %struct.GPR, %struct.GPR* %4355, i32 0, i32 33
  %4357 = getelementptr inbounds %struct.Reg, %struct.Reg* %4356, i32 0, i32 0
  %PC.i1285 = bitcast %union.anon* %4357 to i64*
  %4358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4359 = getelementptr inbounds %struct.GPR, %struct.GPR* %4358, i32 0, i32 9
  %4360 = getelementptr inbounds %struct.Reg, %struct.Reg* %4359, i32 0, i32 0
  %ESI.i1286 = bitcast %union.anon* %4360 to i32*
  %4361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4362 = getelementptr inbounds %struct.GPR, %struct.GPR* %4361, i32 0, i32 5
  %4363 = getelementptr inbounds %struct.Reg, %struct.Reg* %4362, i32 0, i32 0
  %RCX.i1287 = bitcast %union.anon* %4363 to i64*
  %4364 = load i32, i32* %ESI.i1286
  %4365 = zext i32 %4364 to i64
  %4366 = load i64, i64* %PC.i1285
  %4367 = add i64 %4366, 3
  store i64 %4367, i64* %PC.i1285
  %4368 = shl i64 %4365, 32
  %4369 = ashr exact i64 %4368, 32
  store i64 %4369, i64* %RCX.i1287, align 8
  store %struct.Memory* %loadMem_441988, %struct.Memory** %MEMORY
  %loadMem_44198b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4371 = getelementptr inbounds %struct.GPR, %struct.GPR* %4370, i32 0, i32 33
  %4372 = getelementptr inbounds %struct.Reg, %struct.Reg* %4371, i32 0, i32 0
  %PC.i1282 = bitcast %union.anon* %4372 to i64*
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4374 = getelementptr inbounds %struct.GPR, %struct.GPR* %4373, i32 0, i32 1
  %4375 = getelementptr inbounds %struct.Reg, %struct.Reg* %4374, i32 0, i32 0
  %RAX.i1283 = bitcast %union.anon* %4375 to i64*
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4377 = getelementptr inbounds %struct.GPR, %struct.GPR* %4376, i32 0, i32 5
  %4378 = getelementptr inbounds %struct.Reg, %struct.Reg* %4377, i32 0, i32 0
  %RCX.i1284 = bitcast %union.anon* %4378 to i64*
  %4379 = load i64, i64* %RAX.i1283
  %4380 = load i64, i64* %RCX.i1284
  %4381 = mul i64 %4380, 8
  %4382 = add i64 %4381, %4379
  %4383 = load i64, i64* %PC.i1282
  %4384 = add i64 %4383, 4
  store i64 %4384, i64* %PC.i1282
  %4385 = inttoptr i64 %4382 to i64*
  %4386 = load i64, i64* %4385
  store i64 %4386, i64* %RAX.i1283, align 8
  store %struct.Memory* %loadMem_44198b, %struct.Memory** %MEMORY
  %loadMem_44198f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4388 = getelementptr inbounds %struct.GPR, %struct.GPR* %4387, i32 0, i32 33
  %4389 = getelementptr inbounds %struct.Reg, %struct.Reg* %4388, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %4389 to i64*
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4391 = getelementptr inbounds %struct.GPR, %struct.GPR* %4390, i32 0, i32 5
  %4392 = getelementptr inbounds %struct.Reg, %struct.Reg* %4391, i32 0, i32 0
  %RCX.i1281 = bitcast %union.anon* %4392 to i64*
  %4393 = load i64, i64* %PC.i1280
  %4394 = add i64 %4393, 8
  store i64 %4394, i64* %PC.i1280
  %4395 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4395, i64* %RCX.i1281, align 8
  store %struct.Memory* %loadMem_44198f, %struct.Memory** %MEMORY
  %loadMem_441997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4397 = getelementptr inbounds %struct.GPR, %struct.GPR* %4396, i32 0, i32 33
  %4398 = getelementptr inbounds %struct.Reg, %struct.Reg* %4397, i32 0, i32 0
  %PC.i1277 = bitcast %union.anon* %4398 to i64*
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4400 = getelementptr inbounds %struct.GPR, %struct.GPR* %4399, i32 0, i32 5
  %4401 = getelementptr inbounds %struct.Reg, %struct.Reg* %4400, i32 0, i32 0
  %RCX.i1278 = bitcast %union.anon* %4401 to i64*
  %4402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4403 = getelementptr inbounds %struct.GPR, %struct.GPR* %4402, i32 0, i32 9
  %4404 = getelementptr inbounds %struct.Reg, %struct.Reg* %4403, i32 0, i32 0
  %RSI.i1279 = bitcast %union.anon* %4404 to i64*
  %4405 = load i64, i64* %RCX.i1278
  %4406 = add i64 %4405, 160
  %4407 = load i64, i64* %PC.i1277
  %4408 = add i64 %4407, 6
  store i64 %4408, i64* %PC.i1277
  %4409 = inttoptr i64 %4406 to i32*
  %4410 = load i32, i32* %4409
  %4411 = zext i32 %4410 to i64
  store i64 %4411, i64* %RSI.i1279, align 8
  store %struct.Memory* %loadMem_441997, %struct.Memory** %MEMORY
  %loadMem_44199d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4413 = getelementptr inbounds %struct.GPR, %struct.GPR* %4412, i32 0, i32 33
  %4414 = getelementptr inbounds %struct.Reg, %struct.Reg* %4413, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %4414 to i64*
  %4415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4416 = getelementptr inbounds %struct.GPR, %struct.GPR* %4415, i32 0, i32 9
  %4417 = getelementptr inbounds %struct.Reg, %struct.Reg* %4416, i32 0, i32 0
  %RSI.i1275 = bitcast %union.anon* %4417 to i64*
  %4418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4419 = getelementptr inbounds %struct.GPR, %struct.GPR* %4418, i32 0, i32 15
  %4420 = getelementptr inbounds %struct.Reg, %struct.Reg* %4419, i32 0, i32 0
  %RBP.i1276 = bitcast %union.anon* %4420 to i64*
  %4421 = load i64, i64* %RSI.i1275
  %4422 = load i64, i64* %RBP.i1276
  %4423 = sub i64 %4422, 32
  %4424 = load i64, i64* %PC.i1274
  %4425 = add i64 %4424, 3
  store i64 %4425, i64* %PC.i1274
  %4426 = trunc i64 %4421 to i32
  %4427 = inttoptr i64 %4423 to i32*
  %4428 = load i32, i32* %4427
  %4429 = add i32 %4428, %4426
  %4430 = zext i32 %4429 to i64
  store i64 %4430, i64* %RSI.i1275, align 8
  %4431 = icmp ult i32 %4429, %4426
  %4432 = icmp ult i32 %4429, %4428
  %4433 = or i1 %4431, %4432
  %4434 = zext i1 %4433 to i8
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4434, i8* %4435, align 1
  %4436 = and i32 %4429, 255
  %4437 = call i32 @llvm.ctpop.i32(i32 %4436)
  %4438 = trunc i32 %4437 to i8
  %4439 = and i8 %4438, 1
  %4440 = xor i8 %4439, 1
  %4441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4440, i8* %4441, align 1
  %4442 = xor i32 %4428, %4426
  %4443 = xor i32 %4442, %4429
  %4444 = lshr i32 %4443, 4
  %4445 = trunc i32 %4444 to i8
  %4446 = and i8 %4445, 1
  %4447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4446, i8* %4447, align 1
  %4448 = icmp eq i32 %4429, 0
  %4449 = zext i1 %4448 to i8
  %4450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4449, i8* %4450, align 1
  %4451 = lshr i32 %4429, 31
  %4452 = trunc i32 %4451 to i8
  %4453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4452, i8* %4453, align 1
  %4454 = lshr i32 %4426, 31
  %4455 = lshr i32 %4428, 31
  %4456 = xor i32 %4451, %4454
  %4457 = xor i32 %4451, %4455
  %4458 = add i32 %4456, %4457
  %4459 = icmp eq i32 %4458, 2
  %4460 = zext i1 %4459 to i8
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4460, i8* %4461, align 1
  store %struct.Memory* %loadMem_44199d, %struct.Memory** %MEMORY
  %loadMem_4419a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4463 = getelementptr inbounds %struct.GPR, %struct.GPR* %4462, i32 0, i32 33
  %4464 = getelementptr inbounds %struct.Reg, %struct.Reg* %4463, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %4464 to i64*
  %4465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4466 = getelementptr inbounds %struct.GPR, %struct.GPR* %4465, i32 0, i32 9
  %4467 = getelementptr inbounds %struct.Reg, %struct.Reg* %4466, i32 0, i32 0
  %ESI.i1272 = bitcast %union.anon* %4467 to i32*
  %4468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4469 = getelementptr inbounds %struct.GPR, %struct.GPR* %4468, i32 0, i32 5
  %4470 = getelementptr inbounds %struct.Reg, %struct.Reg* %4469, i32 0, i32 0
  %RCX.i1273 = bitcast %union.anon* %4470 to i64*
  %4471 = load i32, i32* %ESI.i1272
  %4472 = zext i32 %4471 to i64
  %4473 = load i64, i64* %PC.i1271
  %4474 = add i64 %4473, 3
  store i64 %4474, i64* %PC.i1271
  %4475 = shl i64 %4472, 32
  %4476 = ashr exact i64 %4475, 32
  store i64 %4476, i64* %RCX.i1273, align 8
  store %struct.Memory* %loadMem_4419a0, %struct.Memory** %MEMORY
  %loadMem_4419a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4478 = getelementptr inbounds %struct.GPR, %struct.GPR* %4477, i32 0, i32 33
  %4479 = getelementptr inbounds %struct.Reg, %struct.Reg* %4478, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %4479 to i64*
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4481 = getelementptr inbounds %struct.GPR, %struct.GPR* %4480, i32 0, i32 7
  %4482 = getelementptr inbounds %struct.Reg, %struct.Reg* %4481, i32 0, i32 0
  %DX.i = bitcast %union.anon* %4482 to i16*
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4484 = getelementptr inbounds %struct.GPR, %struct.GPR* %4483, i32 0, i32 1
  %4485 = getelementptr inbounds %struct.Reg, %struct.Reg* %4484, i32 0, i32 0
  %RAX.i1269 = bitcast %union.anon* %4485 to i64*
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4487 = getelementptr inbounds %struct.GPR, %struct.GPR* %4486, i32 0, i32 5
  %4488 = getelementptr inbounds %struct.Reg, %struct.Reg* %4487, i32 0, i32 0
  %RCX.i1270 = bitcast %union.anon* %4488 to i64*
  %4489 = load i64, i64* %RAX.i1269
  %4490 = load i64, i64* %RCX.i1270
  %4491 = mul i64 %4490, 2
  %4492 = add i64 %4491, %4489
  %4493 = load i16, i16* %DX.i
  %4494 = zext i16 %4493 to i64
  %4495 = load i64, i64* %PC.i1268
  %4496 = add i64 %4495, 4
  store i64 %4496, i64* %PC.i1268
  %4497 = inttoptr i64 %4492 to i16*
  store i16 %4493, i16* %4497
  store %struct.Memory* %loadMem_4419a3, %struct.Memory** %MEMORY
  %loadMem_4419a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4499 = getelementptr inbounds %struct.GPR, %struct.GPR* %4498, i32 0, i32 33
  %4500 = getelementptr inbounds %struct.Reg, %struct.Reg* %4499, i32 0, i32 0
  %PC.i1267 = bitcast %union.anon* %4500 to i64*
  %4501 = load i64, i64* %PC.i1267
  %4502 = add i64 %4501, 89
  %4503 = load i64, i64* %PC.i1267
  %4504 = add i64 %4503, 5
  store i64 %4504, i64* %PC.i1267
  %4505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4502, i64* %4505, align 8
  store %struct.Memory* %loadMem_4419a7, %struct.Memory** %MEMORY
  br label %block_.L_441a00

block_.L_4419ac:                                  ; preds = %block_44192a
  %loadMem_4419ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %4506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4507 = getelementptr inbounds %struct.GPR, %struct.GPR* %4506, i32 0, i32 33
  %4508 = getelementptr inbounds %struct.Reg, %struct.Reg* %4507, i32 0, i32 0
  %PC.i1265 = bitcast %union.anon* %4508 to i64*
  %4509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4510 = getelementptr inbounds %struct.GPR, %struct.GPR* %4509, i32 0, i32 15
  %4511 = getelementptr inbounds %struct.Reg, %struct.Reg* %4510, i32 0, i32 0
  %RBP.i1266 = bitcast %union.anon* %4511 to i64*
  %4512 = load i64, i64* %RBP.i1266
  %4513 = sub i64 %4512, 12
  %4514 = load i64, i64* %PC.i1265
  %4515 = add i64 %4514, 4
  store i64 %4515, i64* %PC.i1265
  %4516 = inttoptr i64 %4513 to i32*
  %4517 = load i32, i32* %4516
  %4518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4518, align 1
  %4519 = and i32 %4517, 255
  %4520 = call i32 @llvm.ctpop.i32(i32 %4519)
  %4521 = trunc i32 %4520 to i8
  %4522 = and i8 %4521, 1
  %4523 = xor i8 %4522, 1
  %4524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4523, i8* %4524, align 1
  %4525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4525, align 1
  %4526 = icmp eq i32 %4517, 0
  %4527 = zext i1 %4526 to i8
  %4528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4527, i8* %4528, align 1
  %4529 = lshr i32 %4517, 31
  %4530 = trunc i32 %4529 to i8
  %4531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4530, i8* %4531, align 1
  %4532 = lshr i32 %4517, 31
  %4533 = xor i32 %4529, %4532
  %4534 = add i32 %4533, %4532
  %4535 = icmp eq i32 %4534, 2
  %4536 = zext i1 %4535 to i8
  %4537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4536, i8* %4537, align 1
  store %struct.Memory* %loadMem_4419ac, %struct.Memory** %MEMORY
  %loadMem_4419b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4539 = getelementptr inbounds %struct.GPR, %struct.GPR* %4538, i32 0, i32 33
  %4540 = getelementptr inbounds %struct.Reg, %struct.Reg* %4539, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %4540 to i64*
  %4541 = load i64, i64* %PC.i1264
  %4542 = add i64 %4541, 43
  %4543 = load i64, i64* %PC.i1264
  %4544 = add i64 %4543, 6
  %4545 = load i64, i64* %PC.i1264
  %4546 = add i64 %4545, 6
  store i64 %4546, i64* %PC.i1264
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4548 = load i8, i8* %4547, align 1
  %4549 = icmp eq i8 %4548, 0
  %4550 = zext i1 %4549 to i8
  store i8 %4550, i8* %BRANCH_TAKEN, align 1
  %4551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4552 = select i1 %4549, i64 %4542, i64 %4544
  store i64 %4552, i64* %4551, align 8
  store %struct.Memory* %loadMem_4419b0, %struct.Memory** %MEMORY
  %loadBr_4419b0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4419b0 = icmp eq i8 %loadBr_4419b0, 1
  br i1 %cmpBr_4419b0, label %block_.L_4419db, label %block_4419b6

block_4419b6:                                     ; preds = %block_.L_4419ac
  %loadMem_4419b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4554 = getelementptr inbounds %struct.GPR, %struct.GPR* %4553, i32 0, i32 33
  %4555 = getelementptr inbounds %struct.Reg, %struct.Reg* %4554, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %4555 to i64*
  %4556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4557 = getelementptr inbounds %struct.GPR, %struct.GPR* %4556, i32 0, i32 1
  %4558 = getelementptr inbounds %struct.Reg, %struct.Reg* %4557, i32 0, i32 0
  %RAX.i1263 = bitcast %union.anon* %4558 to i64*
  %4559 = load i64, i64* %PC.i1262
  %4560 = add i64 %4559, 10
  store i64 %4560, i64* %PC.i1262
  store i64 ptrtoint (%G__0x6f8f20_type* @G__0x6f8f20 to i64), i64* %RAX.i1263, align 8
  store %struct.Memory* %loadMem_4419b6, %struct.Memory** %MEMORY
  %loadMem_4419c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4562 = getelementptr inbounds %struct.GPR, %struct.GPR* %4561, i32 0, i32 33
  %4563 = getelementptr inbounds %struct.Reg, %struct.Reg* %4562, i32 0, i32 0
  %PC.i1259 = bitcast %union.anon* %4563 to i64*
  %4564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4565 = getelementptr inbounds %struct.GPR, %struct.GPR* %4564, i32 0, i32 5
  %4566 = getelementptr inbounds %struct.Reg, %struct.Reg* %4565, i32 0, i32 0
  %RCX.i1260 = bitcast %union.anon* %4566 to i64*
  %4567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4568 = getelementptr inbounds %struct.GPR, %struct.GPR* %4567, i32 0, i32 15
  %4569 = getelementptr inbounds %struct.Reg, %struct.Reg* %4568, i32 0, i32 0
  %RBP.i1261 = bitcast %union.anon* %4569 to i64*
  %4570 = load i64, i64* %RBP.i1261
  %4571 = sub i64 %4570, 32
  %4572 = load i64, i64* %PC.i1259
  %4573 = add i64 %4572, 4
  store i64 %4573, i64* %PC.i1259
  %4574 = inttoptr i64 %4571 to i32*
  %4575 = load i32, i32* %4574
  %4576 = sext i32 %4575 to i64
  store i64 %4576, i64* %RCX.i1260, align 8
  store %struct.Memory* %loadMem_4419c0, %struct.Memory** %MEMORY
  %loadMem_4419c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4578 = getelementptr inbounds %struct.GPR, %struct.GPR* %4577, i32 0, i32 33
  %4579 = getelementptr inbounds %struct.Reg, %struct.Reg* %4578, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %4579 to i64*
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4581 = getelementptr inbounds %struct.GPR, %struct.GPR* %4580, i32 0, i32 5
  %4582 = getelementptr inbounds %struct.Reg, %struct.Reg* %4581, i32 0, i32 0
  %RCX.i1258 = bitcast %union.anon* %4582 to i64*
  %4583 = load i64, i64* %RCX.i1258
  %4584 = load i64, i64* %PC.i1257
  %4585 = add i64 %4584, 4
  store i64 %4585, i64* %PC.i1257
  %4586 = shl i64 %4583, 5
  %4587 = icmp slt i64 %4586, 0
  %4588 = shl i64 %4586, 1
  store i64 %4588, i64* %RCX.i1258, align 8
  %4589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4590 = zext i1 %4587 to i8
  store i8 %4590, i8* %4589, align 1
  %4591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4592 = trunc i64 %4588 to i32
  %4593 = and i32 %4592, 254
  %4594 = call i32 @llvm.ctpop.i32(i32 %4593)
  %4595 = trunc i32 %4594 to i8
  %4596 = and i8 %4595, 1
  %4597 = xor i8 %4596, 1
  store i8 %4597, i8* %4591, align 1
  %4598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4598, align 1
  %4599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4600 = icmp eq i64 %4588, 0
  %4601 = zext i1 %4600 to i8
  store i8 %4601, i8* %4599, align 1
  %4602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4603 = lshr i64 %4588, 63
  %4604 = trunc i64 %4603 to i8
  store i8 %4604, i8* %4602, align 1
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4605, align 1
  store %struct.Memory* %loadMem_4419c4, %struct.Memory** %MEMORY
  %loadMem_4419c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4607 = getelementptr inbounds %struct.GPR, %struct.GPR* %4606, i32 0, i32 33
  %4608 = getelementptr inbounds %struct.Reg, %struct.Reg* %4607, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %4608 to i64*
  %4609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4610 = getelementptr inbounds %struct.GPR, %struct.GPR* %4609, i32 0, i32 1
  %4611 = getelementptr inbounds %struct.Reg, %struct.Reg* %4610, i32 0, i32 0
  %RAX.i1255 = bitcast %union.anon* %4611 to i64*
  %4612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4613 = getelementptr inbounds %struct.GPR, %struct.GPR* %4612, i32 0, i32 5
  %4614 = getelementptr inbounds %struct.Reg, %struct.Reg* %4613, i32 0, i32 0
  %RCX.i1256 = bitcast %union.anon* %4614 to i64*
  %4615 = load i64, i64* %RAX.i1255
  %4616 = load i64, i64* %RCX.i1256
  %4617 = load i64, i64* %PC.i1254
  %4618 = add i64 %4617, 3
  store i64 %4618, i64* %PC.i1254
  %4619 = add i64 %4616, %4615
  store i64 %4619, i64* %RAX.i1255, align 8
  %4620 = icmp ult i64 %4619, %4615
  %4621 = icmp ult i64 %4619, %4616
  %4622 = or i1 %4620, %4621
  %4623 = zext i1 %4622 to i8
  %4624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4623, i8* %4624, align 1
  %4625 = trunc i64 %4619 to i32
  %4626 = and i32 %4625, 255
  %4627 = call i32 @llvm.ctpop.i32(i32 %4626)
  %4628 = trunc i32 %4627 to i8
  %4629 = and i8 %4628, 1
  %4630 = xor i8 %4629, 1
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4630, i8* %4631, align 1
  %4632 = xor i64 %4616, %4615
  %4633 = xor i64 %4632, %4619
  %4634 = lshr i64 %4633, 4
  %4635 = trunc i64 %4634 to i8
  %4636 = and i8 %4635, 1
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4636, i8* %4637, align 1
  %4638 = icmp eq i64 %4619, 0
  %4639 = zext i1 %4638 to i8
  %4640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4639, i8* %4640, align 1
  %4641 = lshr i64 %4619, 63
  %4642 = trunc i64 %4641 to i8
  %4643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4642, i8* %4643, align 1
  %4644 = lshr i64 %4615, 63
  %4645 = lshr i64 %4616, 63
  %4646 = xor i64 %4641, %4644
  %4647 = xor i64 %4641, %4645
  %4648 = add i64 %4646, %4647
  %4649 = icmp eq i64 %4648, 2
  %4650 = zext i1 %4649 to i8
  %4651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4650, i8* %4651, align 1
  store %struct.Memory* %loadMem_4419c8, %struct.Memory** %MEMORY
  %loadMem_4419cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4653 = getelementptr inbounds %struct.GPR, %struct.GPR* %4652, i32 0, i32 33
  %4654 = getelementptr inbounds %struct.Reg, %struct.Reg* %4653, i32 0, i32 0
  %PC.i1251 = bitcast %union.anon* %4654 to i64*
  %4655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4656 = getelementptr inbounds %struct.GPR, %struct.GPR* %4655, i32 0, i32 5
  %4657 = getelementptr inbounds %struct.Reg, %struct.Reg* %4656, i32 0, i32 0
  %RCX.i1252 = bitcast %union.anon* %4657 to i64*
  %4658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4659 = getelementptr inbounds %struct.GPR, %struct.GPR* %4658, i32 0, i32 15
  %4660 = getelementptr inbounds %struct.Reg, %struct.Reg* %4659, i32 0, i32 0
  %RBP.i1253 = bitcast %union.anon* %4660 to i64*
  %4661 = load i64, i64* %RBP.i1253
  %4662 = sub i64 %4661, 28
  %4663 = load i64, i64* %PC.i1251
  %4664 = add i64 %4663, 4
  store i64 %4664, i64* %PC.i1251
  %4665 = inttoptr i64 %4662 to i32*
  %4666 = load i32, i32* %4665
  %4667 = sext i32 %4666 to i64
  store i64 %4667, i64* %RCX.i1252, align 8
  store %struct.Memory* %loadMem_4419cb, %struct.Memory** %MEMORY
  %loadMem_4419cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4669 = getelementptr inbounds %struct.GPR, %struct.GPR* %4668, i32 0, i32 33
  %4670 = getelementptr inbounds %struct.Reg, %struct.Reg* %4669, i32 0, i32 0
  %PC.i1248 = bitcast %union.anon* %4670 to i64*
  %4671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4672 = getelementptr inbounds %struct.GPR, %struct.GPR* %4671, i32 0, i32 1
  %4673 = getelementptr inbounds %struct.Reg, %struct.Reg* %4672, i32 0, i32 0
  %RAX.i1249 = bitcast %union.anon* %4673 to i64*
  %4674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4675 = getelementptr inbounds %struct.GPR, %struct.GPR* %4674, i32 0, i32 5
  %4676 = getelementptr inbounds %struct.Reg, %struct.Reg* %4675, i32 0, i32 0
  %RCX.i1250 = bitcast %union.anon* %4676 to i64*
  %4677 = load i64, i64* %RAX.i1249
  %4678 = load i64, i64* %RCX.i1250
  %4679 = mul i64 %4678, 4
  %4680 = add i64 %4679, %4677
  %4681 = load i64, i64* %PC.i1248
  %4682 = add i64 %4681, 7
  store i64 %4682, i64* %PC.i1248
  %4683 = inttoptr i64 %4680 to i32*
  store i32 0, i32* %4683
  store %struct.Memory* %loadMem_4419cf, %struct.Memory** %MEMORY
  %loadMem_4419d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4685 = getelementptr inbounds %struct.GPR, %struct.GPR* %4684, i32 0, i32 33
  %4686 = getelementptr inbounds %struct.Reg, %struct.Reg* %4685, i32 0, i32 0
  %PC.i1247 = bitcast %union.anon* %4686 to i64*
  %4687 = load i64, i64* %PC.i1247
  %4688 = add i64 %4687, 37
  %4689 = load i64, i64* %PC.i1247
  %4690 = add i64 %4689, 5
  store i64 %4690, i64* %PC.i1247
  %4691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4688, i64* %4691, align 8
  store %struct.Memory* %loadMem_4419d6, %struct.Memory** %MEMORY
  br label %block_.L_4419fb

block_.L_4419db:                                  ; preds = %block_.L_4419ac
  %loadMem_4419db = load %struct.Memory*, %struct.Memory** %MEMORY
  %4692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4693 = getelementptr inbounds %struct.GPR, %struct.GPR* %4692, i32 0, i32 33
  %4694 = getelementptr inbounds %struct.Reg, %struct.Reg* %4693, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %4694 to i64*
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4696 = getelementptr inbounds %struct.GPR, %struct.GPR* %4695, i32 0, i32 1
  %4697 = getelementptr inbounds %struct.Reg, %struct.Reg* %4696, i32 0, i32 0
  %RAX.i1246 = bitcast %union.anon* %4697 to i64*
  %4698 = load i64, i64* %PC.i1245
  %4699 = add i64 %4698, 10
  store i64 %4699, i64* %PC.i1245
  store i64 ptrtoint (%G__0x6d2ec0_type* @G__0x6d2ec0 to i64), i64* %RAX.i1246, align 8
  store %struct.Memory* %loadMem_4419db, %struct.Memory** %MEMORY
  %loadMem_4419e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4701 = getelementptr inbounds %struct.GPR, %struct.GPR* %4700, i32 0, i32 33
  %4702 = getelementptr inbounds %struct.Reg, %struct.Reg* %4701, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %4702 to i64*
  %4703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4704 = getelementptr inbounds %struct.GPR, %struct.GPR* %4703, i32 0, i32 5
  %4705 = getelementptr inbounds %struct.Reg, %struct.Reg* %4704, i32 0, i32 0
  %RCX.i1243 = bitcast %union.anon* %4705 to i64*
  %4706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4707 = getelementptr inbounds %struct.GPR, %struct.GPR* %4706, i32 0, i32 15
  %4708 = getelementptr inbounds %struct.Reg, %struct.Reg* %4707, i32 0, i32 0
  %RBP.i1244 = bitcast %union.anon* %4708 to i64*
  %4709 = load i64, i64* %RBP.i1244
  %4710 = sub i64 %4709, 32
  %4711 = load i64, i64* %PC.i1242
  %4712 = add i64 %4711, 4
  store i64 %4712, i64* %PC.i1242
  %4713 = inttoptr i64 %4710 to i32*
  %4714 = load i32, i32* %4713
  %4715 = sext i32 %4714 to i64
  store i64 %4715, i64* %RCX.i1243, align 8
  store %struct.Memory* %loadMem_4419e5, %struct.Memory** %MEMORY
  %loadMem_4419e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4717 = getelementptr inbounds %struct.GPR, %struct.GPR* %4716, i32 0, i32 33
  %4718 = getelementptr inbounds %struct.Reg, %struct.Reg* %4717, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %4718 to i64*
  %4719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4720 = getelementptr inbounds %struct.GPR, %struct.GPR* %4719, i32 0, i32 5
  %4721 = getelementptr inbounds %struct.Reg, %struct.Reg* %4720, i32 0, i32 0
  %RCX.i1241 = bitcast %union.anon* %4721 to i64*
  %4722 = load i64, i64* %RCX.i1241
  %4723 = load i64, i64* %PC.i1240
  %4724 = add i64 %4723, 4
  store i64 %4724, i64* %PC.i1240
  %4725 = shl i64 %4722, 5
  %4726 = icmp slt i64 %4725, 0
  %4727 = shl i64 %4725, 1
  store i64 %4727, i64* %RCX.i1241, align 8
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4729 = zext i1 %4726 to i8
  store i8 %4729, i8* %4728, align 1
  %4730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4731 = trunc i64 %4727 to i32
  %4732 = and i32 %4731, 254
  %4733 = call i32 @llvm.ctpop.i32(i32 %4732)
  %4734 = trunc i32 %4733 to i8
  %4735 = and i8 %4734, 1
  %4736 = xor i8 %4735, 1
  store i8 %4736, i8* %4730, align 1
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4737, align 1
  %4738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4739 = icmp eq i64 %4727, 0
  %4740 = zext i1 %4739 to i8
  store i8 %4740, i8* %4738, align 1
  %4741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4742 = lshr i64 %4727, 63
  %4743 = trunc i64 %4742 to i8
  store i8 %4743, i8* %4741, align 1
  %4744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4744, align 1
  store %struct.Memory* %loadMem_4419e9, %struct.Memory** %MEMORY
  %loadMem_4419ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4746 = getelementptr inbounds %struct.GPR, %struct.GPR* %4745, i32 0, i32 33
  %4747 = getelementptr inbounds %struct.Reg, %struct.Reg* %4746, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %4747 to i64*
  %4748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4749 = getelementptr inbounds %struct.GPR, %struct.GPR* %4748, i32 0, i32 1
  %4750 = getelementptr inbounds %struct.Reg, %struct.Reg* %4749, i32 0, i32 0
  %RAX.i1238 = bitcast %union.anon* %4750 to i64*
  %4751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4752 = getelementptr inbounds %struct.GPR, %struct.GPR* %4751, i32 0, i32 5
  %4753 = getelementptr inbounds %struct.Reg, %struct.Reg* %4752, i32 0, i32 0
  %RCX.i1239 = bitcast %union.anon* %4753 to i64*
  %4754 = load i64, i64* %RAX.i1238
  %4755 = load i64, i64* %RCX.i1239
  %4756 = load i64, i64* %PC.i1237
  %4757 = add i64 %4756, 3
  store i64 %4757, i64* %PC.i1237
  %4758 = add i64 %4755, %4754
  store i64 %4758, i64* %RAX.i1238, align 8
  %4759 = icmp ult i64 %4758, %4754
  %4760 = icmp ult i64 %4758, %4755
  %4761 = or i1 %4759, %4760
  %4762 = zext i1 %4761 to i8
  %4763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4762, i8* %4763, align 1
  %4764 = trunc i64 %4758 to i32
  %4765 = and i32 %4764, 255
  %4766 = call i32 @llvm.ctpop.i32(i32 %4765)
  %4767 = trunc i32 %4766 to i8
  %4768 = and i8 %4767, 1
  %4769 = xor i8 %4768, 1
  %4770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4769, i8* %4770, align 1
  %4771 = xor i64 %4755, %4754
  %4772 = xor i64 %4771, %4758
  %4773 = lshr i64 %4772, 4
  %4774 = trunc i64 %4773 to i8
  %4775 = and i8 %4774, 1
  %4776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4775, i8* %4776, align 1
  %4777 = icmp eq i64 %4758, 0
  %4778 = zext i1 %4777 to i8
  %4779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4778, i8* %4779, align 1
  %4780 = lshr i64 %4758, 63
  %4781 = trunc i64 %4780 to i8
  %4782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4781, i8* %4782, align 1
  %4783 = lshr i64 %4754, 63
  %4784 = lshr i64 %4755, 63
  %4785 = xor i64 %4780, %4783
  %4786 = xor i64 %4780, %4784
  %4787 = add i64 %4785, %4786
  %4788 = icmp eq i64 %4787, 2
  %4789 = zext i1 %4788 to i8
  %4790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4789, i8* %4790, align 1
  store %struct.Memory* %loadMem_4419ed, %struct.Memory** %MEMORY
  %loadMem_4419f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4792 = getelementptr inbounds %struct.GPR, %struct.GPR* %4791, i32 0, i32 33
  %4793 = getelementptr inbounds %struct.Reg, %struct.Reg* %4792, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %4793 to i64*
  %4794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4795 = getelementptr inbounds %struct.GPR, %struct.GPR* %4794, i32 0, i32 5
  %4796 = getelementptr inbounds %struct.Reg, %struct.Reg* %4795, i32 0, i32 0
  %RCX.i1235 = bitcast %union.anon* %4796 to i64*
  %4797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4798 = getelementptr inbounds %struct.GPR, %struct.GPR* %4797, i32 0, i32 15
  %4799 = getelementptr inbounds %struct.Reg, %struct.Reg* %4798, i32 0, i32 0
  %RBP.i1236 = bitcast %union.anon* %4799 to i64*
  %4800 = load i64, i64* %RBP.i1236
  %4801 = sub i64 %4800, 28
  %4802 = load i64, i64* %PC.i1234
  %4803 = add i64 %4802, 4
  store i64 %4803, i64* %PC.i1234
  %4804 = inttoptr i64 %4801 to i32*
  %4805 = load i32, i32* %4804
  %4806 = sext i32 %4805 to i64
  store i64 %4806, i64* %RCX.i1235, align 8
  store %struct.Memory* %loadMem_4419f0, %struct.Memory** %MEMORY
  %loadMem_4419f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4808 = getelementptr inbounds %struct.GPR, %struct.GPR* %4807, i32 0, i32 33
  %4809 = getelementptr inbounds %struct.Reg, %struct.Reg* %4808, i32 0, i32 0
  %PC.i1231 = bitcast %union.anon* %4809 to i64*
  %4810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4811 = getelementptr inbounds %struct.GPR, %struct.GPR* %4810, i32 0, i32 1
  %4812 = getelementptr inbounds %struct.Reg, %struct.Reg* %4811, i32 0, i32 0
  %RAX.i1232 = bitcast %union.anon* %4812 to i64*
  %4813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4814 = getelementptr inbounds %struct.GPR, %struct.GPR* %4813, i32 0, i32 5
  %4815 = getelementptr inbounds %struct.Reg, %struct.Reg* %4814, i32 0, i32 0
  %RCX.i1233 = bitcast %union.anon* %4815 to i64*
  %4816 = load i64, i64* %RAX.i1232
  %4817 = load i64, i64* %RCX.i1233
  %4818 = mul i64 %4817, 4
  %4819 = add i64 %4818, %4816
  %4820 = load i64, i64* %PC.i1231
  %4821 = add i64 %4820, 7
  store i64 %4821, i64* %PC.i1231
  %4822 = inttoptr i64 %4819 to i32*
  store i32 0, i32* %4822
  store %struct.Memory* %loadMem_4419f4, %struct.Memory** %MEMORY
  br label %block_.L_4419fb

block_.L_4419fb:                                  ; preds = %block_.L_4419db, %block_4419b6
  %loadMem_4419fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4824 = getelementptr inbounds %struct.GPR, %struct.GPR* %4823, i32 0, i32 33
  %4825 = getelementptr inbounds %struct.Reg, %struct.Reg* %4824, i32 0, i32 0
  %PC.i1230 = bitcast %union.anon* %4825 to i64*
  %4826 = load i64, i64* %PC.i1230
  %4827 = add i64 %4826, 5
  %4828 = load i64, i64* %PC.i1230
  %4829 = add i64 %4828, 5
  store i64 %4829, i64* %PC.i1230
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4827, i64* %4830, align 8
  store %struct.Memory* %loadMem_4419fb, %struct.Memory** %MEMORY
  br label %block_.L_441a00

block_.L_441a00:                                  ; preds = %block_.L_4419fb, %block_44193f
  %loadMem_441a00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4832 = getelementptr inbounds %struct.GPR, %struct.GPR* %4831, i32 0, i32 33
  %4833 = getelementptr inbounds %struct.Reg, %struct.Reg* %4832, i32 0, i32 0
  %PC.i1229 = bitcast %union.anon* %4833 to i64*
  %4834 = load i64, i64* %PC.i1229
  %4835 = add i64 %4834, 5
  %4836 = load i64, i64* %PC.i1229
  %4837 = add i64 %4836, 5
  store i64 %4837, i64* %PC.i1229
  %4838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4835, i64* %4838, align 8
  store %struct.Memory* %loadMem_441a00, %struct.Memory** %MEMORY
  br label %block_.L_441a05

block_.L_441a05:                                  ; preds = %block_.L_441a00
  %loadMem_441a05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4840 = getelementptr inbounds %struct.GPR, %struct.GPR* %4839, i32 0, i32 33
  %4841 = getelementptr inbounds %struct.Reg, %struct.Reg* %4840, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %4841 to i64*
  %4842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4843 = getelementptr inbounds %struct.GPR, %struct.GPR* %4842, i32 0, i32 1
  %4844 = getelementptr inbounds %struct.Reg, %struct.Reg* %4843, i32 0, i32 0
  %RAX.i1227 = bitcast %union.anon* %4844 to i64*
  %4845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4846 = getelementptr inbounds %struct.GPR, %struct.GPR* %4845, i32 0, i32 15
  %4847 = getelementptr inbounds %struct.Reg, %struct.Reg* %4846, i32 0, i32 0
  %RBP.i1228 = bitcast %union.anon* %4847 to i64*
  %4848 = load i64, i64* %RBP.i1228
  %4849 = sub i64 %4848, 32
  %4850 = load i64, i64* %PC.i1226
  %4851 = add i64 %4850, 3
  store i64 %4851, i64* %PC.i1226
  %4852 = inttoptr i64 %4849 to i32*
  %4853 = load i32, i32* %4852
  %4854 = zext i32 %4853 to i64
  store i64 %4854, i64* %RAX.i1227, align 8
  store %struct.Memory* %loadMem_441a05, %struct.Memory** %MEMORY
  %loadMem_441a08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4856 = getelementptr inbounds %struct.GPR, %struct.GPR* %4855, i32 0, i32 33
  %4857 = getelementptr inbounds %struct.Reg, %struct.Reg* %4856, i32 0, i32 0
  %PC.i1224 = bitcast %union.anon* %4857 to i64*
  %4858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4859 = getelementptr inbounds %struct.GPR, %struct.GPR* %4858, i32 0, i32 1
  %4860 = getelementptr inbounds %struct.Reg, %struct.Reg* %4859, i32 0, i32 0
  %RAX.i1225 = bitcast %union.anon* %4860 to i64*
  %4861 = load i64, i64* %RAX.i1225
  %4862 = load i64, i64* %PC.i1224
  %4863 = add i64 %4862, 3
  store i64 %4863, i64* %PC.i1224
  %4864 = trunc i64 %4861 to i32
  %4865 = add i32 1, %4864
  %4866 = zext i32 %4865 to i64
  store i64 %4866, i64* %RAX.i1225, align 8
  %4867 = icmp ult i32 %4865, %4864
  %4868 = icmp ult i32 %4865, 1
  %4869 = or i1 %4867, %4868
  %4870 = zext i1 %4869 to i8
  %4871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4870, i8* %4871, align 1
  %4872 = and i32 %4865, 255
  %4873 = call i32 @llvm.ctpop.i32(i32 %4872)
  %4874 = trunc i32 %4873 to i8
  %4875 = and i8 %4874, 1
  %4876 = xor i8 %4875, 1
  %4877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4876, i8* %4877, align 1
  %4878 = xor i64 1, %4861
  %4879 = trunc i64 %4878 to i32
  %4880 = xor i32 %4879, %4865
  %4881 = lshr i32 %4880, 4
  %4882 = trunc i32 %4881 to i8
  %4883 = and i8 %4882, 1
  %4884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4883, i8* %4884, align 1
  %4885 = icmp eq i32 %4865, 0
  %4886 = zext i1 %4885 to i8
  %4887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4886, i8* %4887, align 1
  %4888 = lshr i32 %4865, 31
  %4889 = trunc i32 %4888 to i8
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4889, i8* %4890, align 1
  %4891 = lshr i32 %4864, 31
  %4892 = xor i32 %4888, %4891
  %4893 = add i32 %4892, %4888
  %4894 = icmp eq i32 %4893, 2
  %4895 = zext i1 %4894 to i8
  %4896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4895, i8* %4896, align 1
  store %struct.Memory* %loadMem_441a08, %struct.Memory** %MEMORY
  %loadMem_441a0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4898 = getelementptr inbounds %struct.GPR, %struct.GPR* %4897, i32 0, i32 33
  %4899 = getelementptr inbounds %struct.Reg, %struct.Reg* %4898, i32 0, i32 0
  %PC.i1221 = bitcast %union.anon* %4899 to i64*
  %4900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4901 = getelementptr inbounds %struct.GPR, %struct.GPR* %4900, i32 0, i32 1
  %4902 = getelementptr inbounds %struct.Reg, %struct.Reg* %4901, i32 0, i32 0
  %EAX.i1222 = bitcast %union.anon* %4902 to i32*
  %4903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4904 = getelementptr inbounds %struct.GPR, %struct.GPR* %4903, i32 0, i32 15
  %4905 = getelementptr inbounds %struct.Reg, %struct.Reg* %4904, i32 0, i32 0
  %RBP.i1223 = bitcast %union.anon* %4905 to i64*
  %4906 = load i64, i64* %RBP.i1223
  %4907 = sub i64 %4906, 32
  %4908 = load i32, i32* %EAX.i1222
  %4909 = zext i32 %4908 to i64
  %4910 = load i64, i64* %PC.i1221
  %4911 = add i64 %4910, 3
  store i64 %4911, i64* %PC.i1221
  %4912 = inttoptr i64 %4907 to i32*
  store i32 %4908, i32* %4912
  store %struct.Memory* %loadMem_441a0b, %struct.Memory** %MEMORY
  %loadMem_441a0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4914 = getelementptr inbounds %struct.GPR, %struct.GPR* %4913, i32 0, i32 33
  %4915 = getelementptr inbounds %struct.Reg, %struct.Reg* %4914, i32 0, i32 0
  %PC.i1220 = bitcast %union.anon* %4915 to i64*
  %4916 = load i64, i64* %PC.i1220
  %4917 = add i64 %4916, -251
  %4918 = load i64, i64* %PC.i1220
  %4919 = add i64 %4918, 5
  store i64 %4919, i64* %PC.i1220
  %4920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4917, i64* %4920, align 8
  store %struct.Memory* %loadMem_441a0e, %struct.Memory** %MEMORY
  br label %block_.L_441913

block_.L_441a13:                                  ; preds = %block_.L_441913
  %loadMem_441a13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4922 = getelementptr inbounds %struct.GPR, %struct.GPR* %4921, i32 0, i32 33
  %4923 = getelementptr inbounds %struct.Reg, %struct.Reg* %4922, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %4923 to i64*
  %4924 = load i64, i64* %PC.i1219
  %4925 = add i64 %4924, 5
  %4926 = load i64, i64* %PC.i1219
  %4927 = add i64 %4926, 5
  store i64 %4927, i64* %PC.i1219
  %4928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4925, i64* %4928, align 8
  store %struct.Memory* %loadMem_441a13, %struct.Memory** %MEMORY
  br label %block_.L_441a18

block_.L_441a18:                                  ; preds = %block_.L_441a13
  %loadMem_441a18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4930 = getelementptr inbounds %struct.GPR, %struct.GPR* %4929, i32 0, i32 33
  %4931 = getelementptr inbounds %struct.Reg, %struct.Reg* %4930, i32 0, i32 0
  %PC.i1216 = bitcast %union.anon* %4931 to i64*
  %4932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4933 = getelementptr inbounds %struct.GPR, %struct.GPR* %4932, i32 0, i32 1
  %4934 = getelementptr inbounds %struct.Reg, %struct.Reg* %4933, i32 0, i32 0
  %RAX.i1217 = bitcast %union.anon* %4934 to i64*
  %4935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4936 = getelementptr inbounds %struct.GPR, %struct.GPR* %4935, i32 0, i32 15
  %4937 = getelementptr inbounds %struct.Reg, %struct.Reg* %4936, i32 0, i32 0
  %RBP.i1218 = bitcast %union.anon* %4937 to i64*
  %4938 = load i64, i64* %RBP.i1218
  %4939 = sub i64 %4938, 28
  %4940 = load i64, i64* %PC.i1216
  %4941 = add i64 %4940, 3
  store i64 %4941, i64* %PC.i1216
  %4942 = inttoptr i64 %4939 to i32*
  %4943 = load i32, i32* %4942
  %4944 = zext i32 %4943 to i64
  store i64 %4944, i64* %RAX.i1217, align 8
  store %struct.Memory* %loadMem_441a18, %struct.Memory** %MEMORY
  %loadMem_441a1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4946 = getelementptr inbounds %struct.GPR, %struct.GPR* %4945, i32 0, i32 33
  %4947 = getelementptr inbounds %struct.Reg, %struct.Reg* %4946, i32 0, i32 0
  %PC.i1214 = bitcast %union.anon* %4947 to i64*
  %4948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4949 = getelementptr inbounds %struct.GPR, %struct.GPR* %4948, i32 0, i32 1
  %4950 = getelementptr inbounds %struct.Reg, %struct.Reg* %4949, i32 0, i32 0
  %RAX.i1215 = bitcast %union.anon* %4950 to i64*
  %4951 = load i64, i64* %RAX.i1215
  %4952 = load i64, i64* %PC.i1214
  %4953 = add i64 %4952, 3
  store i64 %4953, i64* %PC.i1214
  %4954 = trunc i64 %4951 to i32
  %4955 = add i32 1, %4954
  %4956 = zext i32 %4955 to i64
  store i64 %4956, i64* %RAX.i1215, align 8
  %4957 = icmp ult i32 %4955, %4954
  %4958 = icmp ult i32 %4955, 1
  %4959 = or i1 %4957, %4958
  %4960 = zext i1 %4959 to i8
  %4961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4960, i8* %4961, align 1
  %4962 = and i32 %4955, 255
  %4963 = call i32 @llvm.ctpop.i32(i32 %4962)
  %4964 = trunc i32 %4963 to i8
  %4965 = and i8 %4964, 1
  %4966 = xor i8 %4965, 1
  %4967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4966, i8* %4967, align 1
  %4968 = xor i64 1, %4951
  %4969 = trunc i64 %4968 to i32
  %4970 = xor i32 %4969, %4955
  %4971 = lshr i32 %4970, 4
  %4972 = trunc i32 %4971 to i8
  %4973 = and i8 %4972, 1
  %4974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4973, i8* %4974, align 1
  %4975 = icmp eq i32 %4955, 0
  %4976 = zext i1 %4975 to i8
  %4977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4976, i8* %4977, align 1
  %4978 = lshr i32 %4955, 31
  %4979 = trunc i32 %4978 to i8
  %4980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4979, i8* %4980, align 1
  %4981 = lshr i32 %4954, 31
  %4982 = xor i32 %4978, %4981
  %4983 = add i32 %4982, %4978
  %4984 = icmp eq i32 %4983, 2
  %4985 = zext i1 %4984 to i8
  %4986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4985, i8* %4986, align 1
  store %struct.Memory* %loadMem_441a1b, %struct.Memory** %MEMORY
  %loadMem_441a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4988 = getelementptr inbounds %struct.GPR, %struct.GPR* %4987, i32 0, i32 33
  %4989 = getelementptr inbounds %struct.Reg, %struct.Reg* %4988, i32 0, i32 0
  %PC.i1211 = bitcast %union.anon* %4989 to i64*
  %4990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4991 = getelementptr inbounds %struct.GPR, %struct.GPR* %4990, i32 0, i32 1
  %4992 = getelementptr inbounds %struct.Reg, %struct.Reg* %4991, i32 0, i32 0
  %EAX.i1212 = bitcast %union.anon* %4992 to i32*
  %4993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4994 = getelementptr inbounds %struct.GPR, %struct.GPR* %4993, i32 0, i32 15
  %4995 = getelementptr inbounds %struct.Reg, %struct.Reg* %4994, i32 0, i32 0
  %RBP.i1213 = bitcast %union.anon* %4995 to i64*
  %4996 = load i64, i64* %RBP.i1213
  %4997 = sub i64 %4996, 28
  %4998 = load i32, i32* %EAX.i1212
  %4999 = zext i32 %4998 to i64
  %5000 = load i64, i64* %PC.i1211
  %5001 = add i64 %5000, 3
  store i64 %5001, i64* %PC.i1211
  %5002 = inttoptr i64 %4997 to i32*
  store i32 %4998, i32* %5002
  store %struct.Memory* %loadMem_441a1e, %struct.Memory** %MEMORY
  %loadMem_441a21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5004 = getelementptr inbounds %struct.GPR, %struct.GPR* %5003, i32 0, i32 33
  %5005 = getelementptr inbounds %struct.Reg, %struct.Reg* %5004, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %5005 to i64*
  %5006 = load i64, i64* %PC.i1210
  %5007 = add i64 %5006, -300
  %5008 = load i64, i64* %PC.i1210
  %5009 = add i64 %5008, 5
  store i64 %5009, i64* %PC.i1210
  %5010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5007, i64* %5010, align 8
  store %struct.Memory* %loadMem_441a21, %struct.Memory** %MEMORY
  br label %block_.L_4418f5

block_.L_441a26:                                  ; preds = %block_.L_4418f5
  %loadMem_441a26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5012 = getelementptr inbounds %struct.GPR, %struct.GPR* %5011, i32 0, i32 33
  %5013 = getelementptr inbounds %struct.Reg, %struct.Reg* %5012, i32 0, i32 0
  %PC.i1209 = bitcast %union.anon* %5013 to i64*
  %5014 = load i64, i64* %PC.i1209
  %5015 = add i64 %5014, 405
  %5016 = load i64, i64* %PC.i1209
  %5017 = add i64 %5016, 5
  store i64 %5017, i64* %PC.i1209
  %5018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5015, i64* %5018, align 8
  store %struct.Memory* %loadMem_441a26, %struct.Memory** %MEMORY
  br label %block_.L_441bbb

block_.L_441a2b:                                  ; preds = %block_.L_4418e4
  %loadMem_441a2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5020 = getelementptr inbounds %struct.GPR, %struct.GPR* %5019, i32 0, i32 33
  %5021 = getelementptr inbounds %struct.Reg, %struct.Reg* %5020, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %5021 to i64*
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5023 = getelementptr inbounds %struct.GPR, %struct.GPR* %5022, i32 0, i32 15
  %5024 = getelementptr inbounds %struct.Reg, %struct.Reg* %5023, i32 0, i32 0
  %RBP.i1208 = bitcast %union.anon* %5024 to i64*
  %5025 = load i64, i64* %RBP.i1208
  %5026 = sub i64 %5025, 28
  %5027 = load i64, i64* %PC.i1207
  %5028 = add i64 %5027, 7
  store i64 %5028, i64* %PC.i1207
  %5029 = inttoptr i64 %5026 to i32*
  store i32 0, i32* %5029
  store %struct.Memory* %loadMem_441a2b, %struct.Memory** %MEMORY
  br label %block_.L_441a32

block_.L_441a32:                                  ; preds = %block_.L_441ba8, %block_.L_441a2b
  %loadMem_441a32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5031 = getelementptr inbounds %struct.GPR, %struct.GPR* %5030, i32 0, i32 33
  %5032 = getelementptr inbounds %struct.Reg, %struct.Reg* %5031, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %5032 to i64*
  %5033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5034 = getelementptr inbounds %struct.GPR, %struct.GPR* %5033, i32 0, i32 1
  %5035 = getelementptr inbounds %struct.Reg, %struct.Reg* %5034, i32 0, i32 0
  %RAX.i1205 = bitcast %union.anon* %5035 to i64*
  %5036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5037 = getelementptr inbounds %struct.GPR, %struct.GPR* %5036, i32 0, i32 15
  %5038 = getelementptr inbounds %struct.Reg, %struct.Reg* %5037, i32 0, i32 0
  %RBP.i1206 = bitcast %union.anon* %5038 to i64*
  %5039 = load i64, i64* %RBP.i1206
  %5040 = sub i64 %5039, 28
  %5041 = load i64, i64* %PC.i1204
  %5042 = add i64 %5041, 3
  store i64 %5042, i64* %PC.i1204
  %5043 = inttoptr i64 %5040 to i32*
  %5044 = load i32, i32* %5043
  %5045 = zext i32 %5044 to i64
  store i64 %5045, i64* %RAX.i1205, align 8
  store %struct.Memory* %loadMem_441a32, %struct.Memory** %MEMORY
  %loadMem_441a35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5047 = getelementptr inbounds %struct.GPR, %struct.GPR* %5046, i32 0, i32 33
  %5048 = getelementptr inbounds %struct.Reg, %struct.Reg* %5047, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %5048 to i64*
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5050 = getelementptr inbounds %struct.GPR, %struct.GPR* %5049, i32 0, i32 5
  %5051 = getelementptr inbounds %struct.Reg, %struct.Reg* %5050, i32 0, i32 0
  %RCX.i1203 = bitcast %union.anon* %5051 to i64*
  %5052 = load i64, i64* %PC.i1202
  %5053 = add i64 %5052, 8
  store i64 %5053, i64* %PC.i1202
  %5054 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5054, i64* %RCX.i1203, align 8
  store %struct.Memory* %loadMem_441a35, %struct.Memory** %MEMORY
  %loadMem_441a3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5056 = getelementptr inbounds %struct.GPR, %struct.GPR* %5055, i32 0, i32 33
  %5057 = getelementptr inbounds %struct.Reg, %struct.Reg* %5056, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %5057 to i64*
  %5058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5059 = getelementptr inbounds %struct.GPR, %struct.GPR* %5058, i32 0, i32 1
  %5060 = getelementptr inbounds %struct.Reg, %struct.Reg* %5059, i32 0, i32 0
  %EAX.i1200 = bitcast %union.anon* %5060 to i32*
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5062 = getelementptr inbounds %struct.GPR, %struct.GPR* %5061, i32 0, i32 5
  %5063 = getelementptr inbounds %struct.Reg, %struct.Reg* %5062, i32 0, i32 0
  %RCX.i1201 = bitcast %union.anon* %5063 to i64*
  %5064 = load i32, i32* %EAX.i1200
  %5065 = zext i32 %5064 to i64
  %5066 = load i64, i64* %RCX.i1201
  %5067 = add i64 %5066, 72712
  %5068 = load i64, i64* %PC.i1199
  %5069 = add i64 %5068, 6
  store i64 %5069, i64* %PC.i1199
  %5070 = inttoptr i64 %5067 to i32*
  %5071 = load i32, i32* %5070
  %5072 = sub i32 %5064, %5071
  %5073 = icmp ult i32 %5064, %5071
  %5074 = zext i1 %5073 to i8
  %5075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5074, i8* %5075, align 1
  %5076 = and i32 %5072, 255
  %5077 = call i32 @llvm.ctpop.i32(i32 %5076)
  %5078 = trunc i32 %5077 to i8
  %5079 = and i8 %5078, 1
  %5080 = xor i8 %5079, 1
  %5081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5080, i8* %5081, align 1
  %5082 = xor i32 %5071, %5064
  %5083 = xor i32 %5082, %5072
  %5084 = lshr i32 %5083, 4
  %5085 = trunc i32 %5084 to i8
  %5086 = and i8 %5085, 1
  %5087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5086, i8* %5087, align 1
  %5088 = icmp eq i32 %5072, 0
  %5089 = zext i1 %5088 to i8
  %5090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5089, i8* %5090, align 1
  %5091 = lshr i32 %5072, 31
  %5092 = trunc i32 %5091 to i8
  %5093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5092, i8* %5093, align 1
  %5094 = lshr i32 %5064, 31
  %5095 = lshr i32 %5071, 31
  %5096 = xor i32 %5095, %5094
  %5097 = xor i32 %5091, %5094
  %5098 = add i32 %5097, %5096
  %5099 = icmp eq i32 %5098, 2
  %5100 = zext i1 %5099 to i8
  %5101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5100, i8* %5101, align 1
  store %struct.Memory* %loadMem_441a3d, %struct.Memory** %MEMORY
  %loadMem_441a43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5103 = getelementptr inbounds %struct.GPR, %struct.GPR* %5102, i32 0, i32 33
  %5104 = getelementptr inbounds %struct.Reg, %struct.Reg* %5103, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %5104 to i64*
  %5105 = load i64, i64* %PC.i1198
  %5106 = add i64 %5105, 371
  %5107 = load i64, i64* %PC.i1198
  %5108 = add i64 %5107, 6
  %5109 = load i64, i64* %PC.i1198
  %5110 = add i64 %5109, 6
  store i64 %5110, i64* %PC.i1198
  %5111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5112 = load i8, i8* %5111, align 1
  %5113 = icmp ne i8 %5112, 0
  %5114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5115 = load i8, i8* %5114, align 1
  %5116 = icmp ne i8 %5115, 0
  %5117 = xor i1 %5113, %5116
  %5118 = xor i1 %5117, true
  %5119 = zext i1 %5118 to i8
  store i8 %5119, i8* %BRANCH_TAKEN, align 1
  %5120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5121 = select i1 %5117, i64 %5108, i64 %5106
  store i64 %5121, i64* %5120, align 8
  store %struct.Memory* %loadMem_441a43, %struct.Memory** %MEMORY
  %loadBr_441a43 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441a43 = icmp eq i8 %loadBr_441a43, 1
  br i1 %cmpBr_441a43, label %block_.L_441bb6, label %block_441a49

block_441a49:                                     ; preds = %block_.L_441a32
  %loadMem_441a49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5123 = getelementptr inbounds %struct.GPR, %struct.GPR* %5122, i32 0, i32 33
  %5124 = getelementptr inbounds %struct.Reg, %struct.Reg* %5123, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %5124 to i64*
  %5125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5126 = getelementptr inbounds %struct.GPR, %struct.GPR* %5125, i32 0, i32 15
  %5127 = getelementptr inbounds %struct.Reg, %struct.Reg* %5126, i32 0, i32 0
  %RBP.i1197 = bitcast %union.anon* %5127 to i64*
  %5128 = load i64, i64* %RBP.i1197
  %5129 = sub i64 %5128, 32
  %5130 = load i64, i64* %PC.i1196
  %5131 = add i64 %5130, 7
  store i64 %5131, i64* %PC.i1196
  %5132 = inttoptr i64 %5129 to i32*
  store i32 0, i32* %5132
  store %struct.Memory* %loadMem_441a49, %struct.Memory** %MEMORY
  br label %block_.L_441a50

block_.L_441a50:                                  ; preds = %block_.L_441b95, %block_441a49
  %loadMem_441a50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5134 = getelementptr inbounds %struct.GPR, %struct.GPR* %5133, i32 0, i32 33
  %5135 = getelementptr inbounds %struct.Reg, %struct.Reg* %5134, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %5135 to i64*
  %5136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5137 = getelementptr inbounds %struct.GPR, %struct.GPR* %5136, i32 0, i32 1
  %5138 = getelementptr inbounds %struct.Reg, %struct.Reg* %5137, i32 0, i32 0
  %RAX.i1194 = bitcast %union.anon* %5138 to i64*
  %5139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5140 = getelementptr inbounds %struct.GPR, %struct.GPR* %5139, i32 0, i32 15
  %5141 = getelementptr inbounds %struct.Reg, %struct.Reg* %5140, i32 0, i32 0
  %RBP.i1195 = bitcast %union.anon* %5141 to i64*
  %5142 = load i64, i64* %RBP.i1195
  %5143 = sub i64 %5142, 32
  %5144 = load i64, i64* %PC.i1193
  %5145 = add i64 %5144, 3
  store i64 %5145, i64* %PC.i1193
  %5146 = inttoptr i64 %5143 to i32*
  %5147 = load i32, i32* %5146
  %5148 = zext i32 %5147 to i64
  store i64 %5148, i64* %RAX.i1194, align 8
  store %struct.Memory* %loadMem_441a50, %struct.Memory** %MEMORY
  %loadMem_441a53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5150 = getelementptr inbounds %struct.GPR, %struct.GPR* %5149, i32 0, i32 33
  %5151 = getelementptr inbounds %struct.Reg, %struct.Reg* %5150, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %5151 to i64*
  %5152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5153 = getelementptr inbounds %struct.GPR, %struct.GPR* %5152, i32 0, i32 5
  %5154 = getelementptr inbounds %struct.Reg, %struct.Reg* %5153, i32 0, i32 0
  %RCX.i1192 = bitcast %union.anon* %5154 to i64*
  %5155 = load i64, i64* %PC.i1191
  %5156 = add i64 %5155, 8
  store i64 %5156, i64* %PC.i1191
  %5157 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5157, i64* %RCX.i1192, align 8
  store %struct.Memory* %loadMem_441a53, %struct.Memory** %MEMORY
  %loadMem_441a5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5159 = getelementptr inbounds %struct.GPR, %struct.GPR* %5158, i32 0, i32 33
  %5160 = getelementptr inbounds %struct.Reg, %struct.Reg* %5159, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %5160 to i64*
  %5161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5162 = getelementptr inbounds %struct.GPR, %struct.GPR* %5161, i32 0, i32 1
  %5163 = getelementptr inbounds %struct.Reg, %struct.Reg* %5162, i32 0, i32 0
  %EAX.i1189 = bitcast %union.anon* %5163 to i32*
  %5164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5165 = getelementptr inbounds %struct.GPR, %struct.GPR* %5164, i32 0, i32 5
  %5166 = getelementptr inbounds %struct.Reg, %struct.Reg* %5165, i32 0, i32 0
  %RCX.i1190 = bitcast %union.anon* %5166 to i64*
  %5167 = load i32, i32* %EAX.i1189
  %5168 = zext i32 %5167 to i64
  %5169 = load i64, i64* %RCX.i1190
  %5170 = add i64 %5169, 72708
  %5171 = load i64, i64* %PC.i1188
  %5172 = add i64 %5171, 6
  store i64 %5172, i64* %PC.i1188
  %5173 = inttoptr i64 %5170 to i32*
  %5174 = load i32, i32* %5173
  %5175 = sub i32 %5167, %5174
  %5176 = icmp ult i32 %5167, %5174
  %5177 = zext i1 %5176 to i8
  %5178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5177, i8* %5178, align 1
  %5179 = and i32 %5175, 255
  %5180 = call i32 @llvm.ctpop.i32(i32 %5179)
  %5181 = trunc i32 %5180 to i8
  %5182 = and i8 %5181, 1
  %5183 = xor i8 %5182, 1
  %5184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5183, i8* %5184, align 1
  %5185 = xor i32 %5174, %5167
  %5186 = xor i32 %5185, %5175
  %5187 = lshr i32 %5186, 4
  %5188 = trunc i32 %5187 to i8
  %5189 = and i8 %5188, 1
  %5190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5189, i8* %5190, align 1
  %5191 = icmp eq i32 %5175, 0
  %5192 = zext i1 %5191 to i8
  %5193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5192, i8* %5193, align 1
  %5194 = lshr i32 %5175, 31
  %5195 = trunc i32 %5194 to i8
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5195, i8* %5196, align 1
  %5197 = lshr i32 %5167, 31
  %5198 = lshr i32 %5174, 31
  %5199 = xor i32 %5198, %5197
  %5200 = xor i32 %5194, %5197
  %5201 = add i32 %5200, %5199
  %5202 = icmp eq i32 %5201, 2
  %5203 = zext i1 %5202 to i8
  %5204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5203, i8* %5204, align 1
  store %struct.Memory* %loadMem_441a5b, %struct.Memory** %MEMORY
  %loadMem_441a61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5206 = getelementptr inbounds %struct.GPR, %struct.GPR* %5205, i32 0, i32 33
  %5207 = getelementptr inbounds %struct.Reg, %struct.Reg* %5206, i32 0, i32 0
  %PC.i1187 = bitcast %union.anon* %5207 to i64*
  %5208 = load i64, i64* %PC.i1187
  %5209 = add i64 %5208, 322
  %5210 = load i64, i64* %PC.i1187
  %5211 = add i64 %5210, 6
  %5212 = load i64, i64* %PC.i1187
  %5213 = add i64 %5212, 6
  store i64 %5213, i64* %PC.i1187
  %5214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5215 = load i8, i8* %5214, align 1
  %5216 = icmp ne i8 %5215, 0
  %5217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5218 = load i8, i8* %5217, align 1
  %5219 = icmp ne i8 %5218, 0
  %5220 = xor i1 %5216, %5219
  %5221 = xor i1 %5220, true
  %5222 = zext i1 %5221 to i8
  store i8 %5222, i8* %BRANCH_TAKEN, align 1
  %5223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5224 = select i1 %5220, i64 %5211, i64 %5209
  store i64 %5224, i64* %5223, align 8
  store %struct.Memory* %loadMem_441a61, %struct.Memory** %MEMORY
  %loadBr_441a61 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441a61 = icmp eq i8 %loadBr_441a61, 1
  br i1 %cmpBr_441a61, label %block_.L_441ba3, label %block_441a67

block_441a67:                                     ; preds = %block_.L_441a50
  %loadMem_441a67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5226 = getelementptr inbounds %struct.GPR, %struct.GPR* %5225, i32 0, i32 33
  %5227 = getelementptr inbounds %struct.Reg, %struct.Reg* %5226, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %5227 to i64*
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5229 = getelementptr inbounds %struct.GPR, %struct.GPR* %5228, i32 0, i32 1
  %5230 = getelementptr inbounds %struct.Reg, %struct.Reg* %5229, i32 0, i32 0
  %RAX.i1186 = bitcast %union.anon* %5230 to i64*
  %5231 = load i64, i64* %PC.i1185
  %5232 = add i64 %5231, 8
  store i64 %5232, i64* %PC.i1185
  %5233 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5233, i64* %RAX.i1186, align 8
  store %struct.Memory* %loadMem_441a67, %struct.Memory** %MEMORY
  %loadMem_441a6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5235 = getelementptr inbounds %struct.GPR, %struct.GPR* %5234, i32 0, i32 33
  %5236 = getelementptr inbounds %struct.Reg, %struct.Reg* %5235, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %5236 to i64*
  %5237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5238 = getelementptr inbounds %struct.GPR, %struct.GPR* %5237, i32 0, i32 1
  %5239 = getelementptr inbounds %struct.Reg, %struct.Reg* %5238, i32 0, i32 0
  %RAX.i1184 = bitcast %union.anon* %5239 to i64*
  %5240 = load i64, i64* %RAX.i1184
  %5241 = add i64 %5240, 72724
  %5242 = load i64, i64* %PC.i1183
  %5243 = add i64 %5242, 7
  store i64 %5243, i64* %PC.i1183
  %5244 = inttoptr i64 %5241 to i32*
  %5245 = load i32, i32* %5244
  %5246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5246, align 1
  %5247 = and i32 %5245, 255
  %5248 = call i32 @llvm.ctpop.i32(i32 %5247)
  %5249 = trunc i32 %5248 to i8
  %5250 = and i8 %5249, 1
  %5251 = xor i8 %5250, 1
  %5252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5251, i8* %5252, align 1
  %5253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5253, align 1
  %5254 = icmp eq i32 %5245, 0
  %5255 = zext i1 %5254 to i8
  %5256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5255, i8* %5256, align 1
  %5257 = lshr i32 %5245, 31
  %5258 = trunc i32 %5257 to i8
  %5259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5258, i8* %5259, align 1
  %5260 = lshr i32 %5245, 31
  %5261 = xor i32 %5257, %5260
  %5262 = add i32 %5261, %5260
  %5263 = icmp eq i32 %5262, 2
  %5264 = zext i1 %5263 to i8
  %5265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5264, i8* %5265, align 1
  store %struct.Memory* %loadMem_441a6f, %struct.Memory** %MEMORY
  %loadMem_441a76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5267 = getelementptr inbounds %struct.GPR, %struct.GPR* %5266, i32 0, i32 33
  %5268 = getelementptr inbounds %struct.Reg, %struct.Reg* %5267, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %5268 to i64*
  %5269 = load i64, i64* %PC.i1182
  %5270 = add i64 %5269, 142
  %5271 = load i64, i64* %PC.i1182
  %5272 = add i64 %5271, 6
  %5273 = load i64, i64* %PC.i1182
  %5274 = add i64 %5273, 6
  store i64 %5274, i64* %PC.i1182
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5276 = load i8, i8* %5275, align 1
  %5277 = icmp eq i8 %5276, 0
  %5278 = zext i1 %5277 to i8
  store i8 %5278, i8* %BRANCH_TAKEN, align 1
  %5279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5280 = select i1 %5277, i64 %5270, i64 %5272
  store i64 %5280, i64* %5279, align 8
  store %struct.Memory* %loadMem_441a76, %struct.Memory** %MEMORY
  %loadBr_441a76 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441a76 = icmp eq i8 %loadBr_441a76, 1
  br i1 %cmpBr_441a76, label %block_.L_441b04, label %block_441a7c

block_441a7c:                                     ; preds = %block_441a67
  %loadMem_441a7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5282 = getelementptr inbounds %struct.GPR, %struct.GPR* %5281, i32 0, i32 33
  %5283 = getelementptr inbounds %struct.Reg, %struct.Reg* %5282, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %5283 to i64*
  %5284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5285 = getelementptr inbounds %struct.GPR, %struct.GPR* %5284, i32 0, i32 1
  %5286 = getelementptr inbounds %struct.Reg, %struct.Reg* %5285, i32 0, i32 0
  %RAX.i1181 = bitcast %union.anon* %5286 to i64*
  %5287 = load i64, i64* %PC.i1180
  %5288 = add i64 %5287, 8
  store i64 %5288, i64* %PC.i1180
  %5289 = load i64, i64* bitcast (%G_0x6f6f90_type* @G_0x6f6f90 to i64*)
  store i64 %5289, i64* %RAX.i1181, align 8
  store %struct.Memory* %loadMem_441a7c, %struct.Memory** %MEMORY
  %loadMem_441a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5291 = getelementptr inbounds %struct.GPR, %struct.GPR* %5290, i32 0, i32 33
  %5292 = getelementptr inbounds %struct.Reg, %struct.Reg* %5291, i32 0, i32 0
  %PC.i1177 = bitcast %union.anon* %5292 to i64*
  %5293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5294 = getelementptr inbounds %struct.GPR, %struct.GPR* %5293, i32 0, i32 5
  %5295 = getelementptr inbounds %struct.Reg, %struct.Reg* %5294, i32 0, i32 0
  %RCX.i1178 = bitcast %union.anon* %5295 to i64*
  %5296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5297 = getelementptr inbounds %struct.GPR, %struct.GPR* %5296, i32 0, i32 15
  %5298 = getelementptr inbounds %struct.Reg, %struct.Reg* %5297, i32 0, i32 0
  %RBP.i1179 = bitcast %union.anon* %5298 to i64*
  %5299 = load i64, i64* %RBP.i1179
  %5300 = sub i64 %5299, 12
  %5301 = load i64, i64* %PC.i1177
  %5302 = add i64 %5301, 4
  store i64 %5302, i64* %PC.i1177
  %5303 = inttoptr i64 %5300 to i32*
  %5304 = load i32, i32* %5303
  %5305 = sext i32 %5304 to i64
  store i64 %5305, i64* %RCX.i1178, align 8
  store %struct.Memory* %loadMem_441a84, %struct.Memory** %MEMORY
  %loadMem_441a88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5307 = getelementptr inbounds %struct.GPR, %struct.GPR* %5306, i32 0, i32 33
  %5308 = getelementptr inbounds %struct.Reg, %struct.Reg* %5307, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %5308 to i64*
  %5309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5310 = getelementptr inbounds %struct.GPR, %struct.GPR* %5309, i32 0, i32 1
  %5311 = getelementptr inbounds %struct.Reg, %struct.Reg* %5310, i32 0, i32 0
  %RAX.i1175 = bitcast %union.anon* %5311 to i64*
  %5312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5313 = getelementptr inbounds %struct.GPR, %struct.GPR* %5312, i32 0, i32 5
  %5314 = getelementptr inbounds %struct.Reg, %struct.Reg* %5313, i32 0, i32 0
  %RCX.i1176 = bitcast %union.anon* %5314 to i64*
  %5315 = load i64, i64* %RAX.i1175
  %5316 = load i64, i64* %RCX.i1176
  %5317 = mul i64 %5316, 8
  %5318 = add i64 %5317, %5315
  %5319 = load i64, i64* %PC.i1174
  %5320 = add i64 %5319, 4
  store i64 %5320, i64* %PC.i1174
  %5321 = inttoptr i64 %5318 to i64*
  %5322 = load i64, i64* %5321
  store i64 %5322, i64* %RAX.i1175, align 8
  store %struct.Memory* %loadMem_441a88, %struct.Memory** %MEMORY
  %loadMem_441a8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5324 = getelementptr inbounds %struct.GPR, %struct.GPR* %5323, i32 0, i32 33
  %5325 = getelementptr inbounds %struct.Reg, %struct.Reg* %5324, i32 0, i32 0
  %PC.i1172 = bitcast %union.anon* %5325 to i64*
  %5326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5327 = getelementptr inbounds %struct.GPR, %struct.GPR* %5326, i32 0, i32 5
  %5328 = getelementptr inbounds %struct.Reg, %struct.Reg* %5327, i32 0, i32 0
  %RCX.i1173 = bitcast %union.anon* %5328 to i64*
  %5329 = load i64, i64* %PC.i1172
  %5330 = add i64 %5329, 8
  store i64 %5330, i64* %PC.i1172
  %5331 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5331, i64* %RCX.i1173, align 8
  store %struct.Memory* %loadMem_441a8c, %struct.Memory** %MEMORY
  %loadMem_441a94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5333 = getelementptr inbounds %struct.GPR, %struct.GPR* %5332, i32 0, i32 33
  %5334 = getelementptr inbounds %struct.Reg, %struct.Reg* %5333, i32 0, i32 0
  %PC.i1169 = bitcast %union.anon* %5334 to i64*
  %5335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5336 = getelementptr inbounds %struct.GPR, %struct.GPR* %5335, i32 0, i32 5
  %5337 = getelementptr inbounds %struct.Reg, %struct.Reg* %5336, i32 0, i32 0
  %RCX.i1170 = bitcast %union.anon* %5337 to i64*
  %5338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5339 = getelementptr inbounds %struct.GPR, %struct.GPR* %5338, i32 0, i32 7
  %5340 = getelementptr inbounds %struct.Reg, %struct.Reg* %5339, i32 0, i32 0
  %RDX.i1171 = bitcast %union.anon* %5340 to i64*
  %5341 = load i64, i64* %RCX.i1170
  %5342 = add i64 %5341, 180
  %5343 = load i64, i64* %PC.i1169
  %5344 = add i64 %5343, 6
  store i64 %5344, i64* %PC.i1169
  %5345 = inttoptr i64 %5342 to i32*
  %5346 = load i32, i32* %5345
  %5347 = zext i32 %5346 to i64
  store i64 %5347, i64* %RDX.i1171, align 8
  store %struct.Memory* %loadMem_441a94, %struct.Memory** %MEMORY
  %loadMem_441a9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5349 = getelementptr inbounds %struct.GPR, %struct.GPR* %5348, i32 0, i32 33
  %5350 = getelementptr inbounds %struct.Reg, %struct.Reg* %5349, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %5350 to i64*
  %5351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5352 = getelementptr inbounds %struct.GPR, %struct.GPR* %5351, i32 0, i32 7
  %5353 = getelementptr inbounds %struct.Reg, %struct.Reg* %5352, i32 0, i32 0
  %RDX.i1167 = bitcast %union.anon* %5353 to i64*
  %5354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5355 = getelementptr inbounds %struct.GPR, %struct.GPR* %5354, i32 0, i32 15
  %5356 = getelementptr inbounds %struct.Reg, %struct.Reg* %5355, i32 0, i32 0
  %RBP.i1168 = bitcast %union.anon* %5356 to i64*
  %5357 = load i64, i64* %RDX.i1167
  %5358 = load i64, i64* %RBP.i1168
  %5359 = sub i64 %5358, 28
  %5360 = load i64, i64* %PC.i1166
  %5361 = add i64 %5360, 3
  store i64 %5361, i64* %PC.i1166
  %5362 = trunc i64 %5357 to i32
  %5363 = inttoptr i64 %5359 to i32*
  %5364 = load i32, i32* %5363
  %5365 = add i32 %5364, %5362
  %5366 = zext i32 %5365 to i64
  store i64 %5366, i64* %RDX.i1167, align 8
  %5367 = icmp ult i32 %5365, %5362
  %5368 = icmp ult i32 %5365, %5364
  %5369 = or i1 %5367, %5368
  %5370 = zext i1 %5369 to i8
  %5371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5370, i8* %5371, align 1
  %5372 = and i32 %5365, 255
  %5373 = call i32 @llvm.ctpop.i32(i32 %5372)
  %5374 = trunc i32 %5373 to i8
  %5375 = and i8 %5374, 1
  %5376 = xor i8 %5375, 1
  %5377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5376, i8* %5377, align 1
  %5378 = xor i32 %5364, %5362
  %5379 = xor i32 %5378, %5365
  %5380 = lshr i32 %5379, 4
  %5381 = trunc i32 %5380 to i8
  %5382 = and i8 %5381, 1
  %5383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5382, i8* %5383, align 1
  %5384 = icmp eq i32 %5365, 0
  %5385 = zext i1 %5384 to i8
  %5386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5385, i8* %5386, align 1
  %5387 = lshr i32 %5365, 31
  %5388 = trunc i32 %5387 to i8
  %5389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5388, i8* %5389, align 1
  %5390 = lshr i32 %5362, 31
  %5391 = lshr i32 %5364, 31
  %5392 = xor i32 %5387, %5390
  %5393 = xor i32 %5387, %5391
  %5394 = add i32 %5392, %5393
  %5395 = icmp eq i32 %5394, 2
  %5396 = zext i1 %5395 to i8
  %5397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5396, i8* %5397, align 1
  store %struct.Memory* %loadMem_441a9a, %struct.Memory** %MEMORY
  %loadMem_441a9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5399 = getelementptr inbounds %struct.GPR, %struct.GPR* %5398, i32 0, i32 33
  %5400 = getelementptr inbounds %struct.Reg, %struct.Reg* %5399, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %5400 to i64*
  %5401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5402 = getelementptr inbounds %struct.GPR, %struct.GPR* %5401, i32 0, i32 7
  %5403 = getelementptr inbounds %struct.Reg, %struct.Reg* %5402, i32 0, i32 0
  %EDX.i1164 = bitcast %union.anon* %5403 to i32*
  %5404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5405 = getelementptr inbounds %struct.GPR, %struct.GPR* %5404, i32 0, i32 5
  %5406 = getelementptr inbounds %struct.Reg, %struct.Reg* %5405, i32 0, i32 0
  %RCX.i1165 = bitcast %union.anon* %5406 to i64*
  %5407 = load i32, i32* %EDX.i1164
  %5408 = zext i32 %5407 to i64
  %5409 = load i64, i64* %PC.i1163
  %5410 = add i64 %5409, 3
  store i64 %5410, i64* %PC.i1163
  %5411 = shl i64 %5408, 32
  %5412 = ashr exact i64 %5411, 32
  store i64 %5412, i64* %RCX.i1165, align 8
  store %struct.Memory* %loadMem_441a9d, %struct.Memory** %MEMORY
  %loadMem_441aa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5414 = getelementptr inbounds %struct.GPR, %struct.GPR* %5413, i32 0, i32 33
  %5415 = getelementptr inbounds %struct.Reg, %struct.Reg* %5414, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %5415 to i64*
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5417 = getelementptr inbounds %struct.GPR, %struct.GPR* %5416, i32 0, i32 1
  %5418 = getelementptr inbounds %struct.Reg, %struct.Reg* %5417, i32 0, i32 0
  %RAX.i1161 = bitcast %union.anon* %5418 to i64*
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5420 = getelementptr inbounds %struct.GPR, %struct.GPR* %5419, i32 0, i32 5
  %5421 = getelementptr inbounds %struct.Reg, %struct.Reg* %5420, i32 0, i32 0
  %RCX.i1162 = bitcast %union.anon* %5421 to i64*
  %5422 = load i64, i64* %RAX.i1161
  %5423 = load i64, i64* %RCX.i1162
  %5424 = mul i64 %5423, 8
  %5425 = add i64 %5424, %5422
  %5426 = load i64, i64* %PC.i1160
  %5427 = add i64 %5426, 4
  store i64 %5427, i64* %PC.i1160
  %5428 = inttoptr i64 %5425 to i64*
  %5429 = load i64, i64* %5428
  store i64 %5429, i64* %RAX.i1161, align 8
  store %struct.Memory* %loadMem_441aa0, %struct.Memory** %MEMORY
  %loadMem_441aa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5431 = getelementptr inbounds %struct.GPR, %struct.GPR* %5430, i32 0, i32 33
  %5432 = getelementptr inbounds %struct.Reg, %struct.Reg* %5431, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %5432 to i64*
  %5433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5434 = getelementptr inbounds %struct.GPR, %struct.GPR* %5433, i32 0, i32 5
  %5435 = getelementptr inbounds %struct.Reg, %struct.Reg* %5434, i32 0, i32 0
  %RCX.i1159 = bitcast %union.anon* %5435 to i64*
  %5436 = load i64, i64* %PC.i1158
  %5437 = add i64 %5436, 8
  store i64 %5437, i64* %PC.i1158
  %5438 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5438, i64* %RCX.i1159, align 8
  store %struct.Memory* %loadMem_441aa4, %struct.Memory** %MEMORY
  %loadMem_441aac = load %struct.Memory*, %struct.Memory** %MEMORY
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5440 = getelementptr inbounds %struct.GPR, %struct.GPR* %5439, i32 0, i32 33
  %5441 = getelementptr inbounds %struct.Reg, %struct.Reg* %5440, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %5441 to i64*
  %5442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5443 = getelementptr inbounds %struct.GPR, %struct.GPR* %5442, i32 0, i32 5
  %5444 = getelementptr inbounds %struct.Reg, %struct.Reg* %5443, i32 0, i32 0
  %RCX.i1156 = bitcast %union.anon* %5444 to i64*
  %5445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5446 = getelementptr inbounds %struct.GPR, %struct.GPR* %5445, i32 0, i32 7
  %5447 = getelementptr inbounds %struct.Reg, %struct.Reg* %5446, i32 0, i32 0
  %RDX.i1157 = bitcast %union.anon* %5447 to i64*
  %5448 = load i64, i64* %RCX.i1156
  %5449 = add i64 %5448, 176
  %5450 = load i64, i64* %PC.i1155
  %5451 = add i64 %5450, 6
  store i64 %5451, i64* %PC.i1155
  %5452 = inttoptr i64 %5449 to i32*
  %5453 = load i32, i32* %5452
  %5454 = zext i32 %5453 to i64
  store i64 %5454, i64* %RDX.i1157, align 8
  store %struct.Memory* %loadMem_441aac, %struct.Memory** %MEMORY
  %loadMem_441ab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5456 = getelementptr inbounds %struct.GPR, %struct.GPR* %5455, i32 0, i32 33
  %5457 = getelementptr inbounds %struct.Reg, %struct.Reg* %5456, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %5457 to i64*
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5459 = getelementptr inbounds %struct.GPR, %struct.GPR* %5458, i32 0, i32 7
  %5460 = getelementptr inbounds %struct.Reg, %struct.Reg* %5459, i32 0, i32 0
  %RDX.i1153 = bitcast %union.anon* %5460 to i64*
  %5461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5462 = getelementptr inbounds %struct.GPR, %struct.GPR* %5461, i32 0, i32 15
  %5463 = getelementptr inbounds %struct.Reg, %struct.Reg* %5462, i32 0, i32 0
  %RBP.i1154 = bitcast %union.anon* %5463 to i64*
  %5464 = load i64, i64* %RDX.i1153
  %5465 = load i64, i64* %RBP.i1154
  %5466 = sub i64 %5465, 32
  %5467 = load i64, i64* %PC.i1152
  %5468 = add i64 %5467, 3
  store i64 %5468, i64* %PC.i1152
  %5469 = trunc i64 %5464 to i32
  %5470 = inttoptr i64 %5466 to i32*
  %5471 = load i32, i32* %5470
  %5472 = add i32 %5471, %5469
  %5473 = zext i32 %5472 to i64
  store i64 %5473, i64* %RDX.i1153, align 8
  %5474 = icmp ult i32 %5472, %5469
  %5475 = icmp ult i32 %5472, %5471
  %5476 = or i1 %5474, %5475
  %5477 = zext i1 %5476 to i8
  %5478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5477, i8* %5478, align 1
  %5479 = and i32 %5472, 255
  %5480 = call i32 @llvm.ctpop.i32(i32 %5479)
  %5481 = trunc i32 %5480 to i8
  %5482 = and i8 %5481, 1
  %5483 = xor i8 %5482, 1
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5483, i8* %5484, align 1
  %5485 = xor i32 %5471, %5469
  %5486 = xor i32 %5485, %5472
  %5487 = lshr i32 %5486, 4
  %5488 = trunc i32 %5487 to i8
  %5489 = and i8 %5488, 1
  %5490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5489, i8* %5490, align 1
  %5491 = icmp eq i32 %5472, 0
  %5492 = zext i1 %5491 to i8
  %5493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5492, i8* %5493, align 1
  %5494 = lshr i32 %5472, 31
  %5495 = trunc i32 %5494 to i8
  %5496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5495, i8* %5496, align 1
  %5497 = lshr i32 %5469, 31
  %5498 = lshr i32 %5471, 31
  %5499 = xor i32 %5494, %5497
  %5500 = xor i32 %5494, %5498
  %5501 = add i32 %5499, %5500
  %5502 = icmp eq i32 %5501, 2
  %5503 = zext i1 %5502 to i8
  %5504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5503, i8* %5504, align 1
  store %struct.Memory* %loadMem_441ab2, %struct.Memory** %MEMORY
  %loadMem_441ab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5506 = getelementptr inbounds %struct.GPR, %struct.GPR* %5505, i32 0, i32 33
  %5507 = getelementptr inbounds %struct.Reg, %struct.Reg* %5506, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %5507 to i64*
  %5508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5509 = getelementptr inbounds %struct.GPR, %struct.GPR* %5508, i32 0, i32 7
  %5510 = getelementptr inbounds %struct.Reg, %struct.Reg* %5509, i32 0, i32 0
  %EDX.i1150 = bitcast %union.anon* %5510 to i32*
  %5511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5512 = getelementptr inbounds %struct.GPR, %struct.GPR* %5511, i32 0, i32 5
  %5513 = getelementptr inbounds %struct.Reg, %struct.Reg* %5512, i32 0, i32 0
  %RCX.i1151 = bitcast %union.anon* %5513 to i64*
  %5514 = load i32, i32* %EDX.i1150
  %5515 = zext i32 %5514 to i64
  %5516 = load i64, i64* %PC.i1149
  %5517 = add i64 %5516, 3
  store i64 %5517, i64* %PC.i1149
  %5518 = shl i64 %5515, 32
  %5519 = ashr exact i64 %5518, 32
  store i64 %5519, i64* %RCX.i1151, align 8
  store %struct.Memory* %loadMem_441ab5, %struct.Memory** %MEMORY
  %loadMem_441ab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5521 = getelementptr inbounds %struct.GPR, %struct.GPR* %5520, i32 0, i32 33
  %5522 = getelementptr inbounds %struct.Reg, %struct.Reg* %5521, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %5522 to i64*
  %5523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5524 = getelementptr inbounds %struct.GPR, %struct.GPR* %5523, i32 0, i32 1
  %5525 = getelementptr inbounds %struct.Reg, %struct.Reg* %5524, i32 0, i32 0
  %RAX.i1146 = bitcast %union.anon* %5525 to i64*
  %5526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5527 = getelementptr inbounds %struct.GPR, %struct.GPR* %5526, i32 0, i32 5
  %5528 = getelementptr inbounds %struct.Reg, %struct.Reg* %5527, i32 0, i32 0
  %RCX.i1147 = bitcast %union.anon* %5528 to i64*
  %5529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5530 = getelementptr inbounds %struct.GPR, %struct.GPR* %5529, i32 0, i32 7
  %5531 = getelementptr inbounds %struct.Reg, %struct.Reg* %5530, i32 0, i32 0
  %RDX.i1148 = bitcast %union.anon* %5531 to i64*
  %5532 = load i64, i64* %RAX.i1146
  %5533 = load i64, i64* %RCX.i1147
  %5534 = mul i64 %5533, 2
  %5535 = add i64 %5534, %5532
  %5536 = load i64, i64* %PC.i1145
  %5537 = add i64 %5536, 4
  store i64 %5537, i64* %PC.i1145
  %5538 = inttoptr i64 %5535 to i16*
  %5539 = load i16, i16* %5538
  %5540 = zext i16 %5539 to i64
  store i64 %5540, i64* %RDX.i1148, align 8
  store %struct.Memory* %loadMem_441ab8, %struct.Memory** %MEMORY
  %loadMem_441abc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5542 = getelementptr inbounds %struct.GPR, %struct.GPR* %5541, i32 0, i32 33
  %5543 = getelementptr inbounds %struct.Reg, %struct.Reg* %5542, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %5543 to i64*
  %5544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5545 = getelementptr inbounds %struct.GPR, %struct.GPR* %5544, i32 0, i32 1
  %5546 = getelementptr inbounds %struct.Reg, %struct.Reg* %5545, i32 0, i32 0
  %RAX.i1144 = bitcast %union.anon* %5546 to i64*
  %5547 = load i64, i64* %PC.i1143
  %5548 = add i64 %5547, 8
  store i64 %5548, i64* %PC.i1143
  %5549 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5549, i64* %RAX.i1144, align 8
  store %struct.Memory* %loadMem_441abc, %struct.Memory** %MEMORY
  %loadMem_441ac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5551 = getelementptr inbounds %struct.GPR, %struct.GPR* %5550, i32 0, i32 33
  %5552 = getelementptr inbounds %struct.Reg, %struct.Reg* %5551, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %5552 to i64*
  %5553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5554 = getelementptr inbounds %struct.GPR, %struct.GPR* %5553, i32 0, i32 1
  %5555 = getelementptr inbounds %struct.Reg, %struct.Reg* %5554, i32 0, i32 0
  %RAX.i1142 = bitcast %union.anon* %5555 to i64*
  %5556 = load i64, i64* %RAX.i1142
  %5557 = load i64, i64* %PC.i1141
  %5558 = add i64 %5557, 6
  store i64 %5558, i64* %PC.i1141
  %5559 = add i64 12600, %5556
  store i64 %5559, i64* %RAX.i1142, align 8
  %5560 = icmp ult i64 %5559, %5556
  %5561 = icmp ult i64 %5559, 12600
  %5562 = or i1 %5560, %5561
  %5563 = zext i1 %5562 to i8
  %5564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5563, i8* %5564, align 1
  %5565 = trunc i64 %5559 to i32
  %5566 = and i32 %5565, 255
  %5567 = call i32 @llvm.ctpop.i32(i32 %5566)
  %5568 = trunc i32 %5567 to i8
  %5569 = and i8 %5568, 1
  %5570 = xor i8 %5569, 1
  %5571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5570, i8* %5571, align 1
  %5572 = xor i64 12600, %5556
  %5573 = xor i64 %5572, %5559
  %5574 = lshr i64 %5573, 4
  %5575 = trunc i64 %5574 to i8
  %5576 = and i8 %5575, 1
  %5577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5576, i8* %5577, align 1
  %5578 = icmp eq i64 %5559, 0
  %5579 = zext i1 %5578 to i8
  %5580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5579, i8* %5580, align 1
  %5581 = lshr i64 %5559, 63
  %5582 = trunc i64 %5581 to i8
  %5583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5582, i8* %5583, align 1
  %5584 = lshr i64 %5556, 63
  %5585 = xor i64 %5581, %5584
  %5586 = add i64 %5585, %5581
  %5587 = icmp eq i64 %5586, 2
  %5588 = zext i1 %5587 to i8
  %5589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5588, i8* %5589, align 1
  store %struct.Memory* %loadMem_441ac4, %struct.Memory** %MEMORY
  %loadMem_441aca = load %struct.Memory*, %struct.Memory** %MEMORY
  %5590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5591 = getelementptr inbounds %struct.GPR, %struct.GPR* %5590, i32 0, i32 33
  %5592 = getelementptr inbounds %struct.Reg, %struct.Reg* %5591, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %5592 to i64*
  %5593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5594 = getelementptr inbounds %struct.GPR, %struct.GPR* %5593, i32 0, i32 5
  %5595 = getelementptr inbounds %struct.Reg, %struct.Reg* %5594, i32 0, i32 0
  %RCX.i1139 = bitcast %union.anon* %5595 to i64*
  %5596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5597 = getelementptr inbounds %struct.GPR, %struct.GPR* %5596, i32 0, i32 15
  %5598 = getelementptr inbounds %struct.Reg, %struct.Reg* %5597, i32 0, i32 0
  %RBP.i1140 = bitcast %union.anon* %5598 to i64*
  %5599 = load i64, i64* %RBP.i1140
  %5600 = sub i64 %5599, 32
  %5601 = load i64, i64* %PC.i1138
  %5602 = add i64 %5601, 4
  store i64 %5602, i64* %PC.i1138
  %5603 = inttoptr i64 %5600 to i32*
  %5604 = load i32, i32* %5603
  %5605 = sext i32 %5604 to i64
  store i64 %5605, i64* %RCX.i1139, align 8
  store %struct.Memory* %loadMem_441aca, %struct.Memory** %MEMORY
  %loadMem_441ace = load %struct.Memory*, %struct.Memory** %MEMORY
  %5606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5607 = getelementptr inbounds %struct.GPR, %struct.GPR* %5606, i32 0, i32 33
  %5608 = getelementptr inbounds %struct.Reg, %struct.Reg* %5607, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %5608 to i64*
  %5609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5610 = getelementptr inbounds %struct.GPR, %struct.GPR* %5609, i32 0, i32 5
  %5611 = getelementptr inbounds %struct.Reg, %struct.Reg* %5610, i32 0, i32 0
  %RCX.i1137 = bitcast %union.anon* %5611 to i64*
  %5612 = load i64, i64* %RCX.i1137
  %5613 = load i64, i64* %PC.i1136
  %5614 = add i64 %5613, 4
  store i64 %5614, i64* %PC.i1136
  %5615 = shl i64 %5612, 4
  %5616 = icmp slt i64 %5615, 0
  %5617 = shl i64 %5615, 1
  store i64 %5617, i64* %RCX.i1137, align 8
  %5618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5619 = zext i1 %5616 to i8
  store i8 %5619, i8* %5618, align 1
  %5620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5621 = trunc i64 %5617 to i32
  %5622 = and i32 %5621, 254
  %5623 = call i32 @llvm.ctpop.i32(i32 %5622)
  %5624 = trunc i32 %5623 to i8
  %5625 = and i8 %5624, 1
  %5626 = xor i8 %5625, 1
  store i8 %5626, i8* %5620, align 1
  %5627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5627, align 1
  %5628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5629 = icmp eq i64 %5617, 0
  %5630 = zext i1 %5629 to i8
  store i8 %5630, i8* %5628, align 1
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5632 = lshr i64 %5617, 63
  %5633 = trunc i64 %5632 to i8
  store i8 %5633, i8* %5631, align 1
  %5634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5634, align 1
  store %struct.Memory* %loadMem_441ace, %struct.Memory** %MEMORY
  %loadMem_441ad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5636 = getelementptr inbounds %struct.GPR, %struct.GPR* %5635, i32 0, i32 33
  %5637 = getelementptr inbounds %struct.Reg, %struct.Reg* %5636, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %5637 to i64*
  %5638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5639 = getelementptr inbounds %struct.GPR, %struct.GPR* %5638, i32 0, i32 1
  %5640 = getelementptr inbounds %struct.Reg, %struct.Reg* %5639, i32 0, i32 0
  %RAX.i1134 = bitcast %union.anon* %5640 to i64*
  %5641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5642 = getelementptr inbounds %struct.GPR, %struct.GPR* %5641, i32 0, i32 5
  %5643 = getelementptr inbounds %struct.Reg, %struct.Reg* %5642, i32 0, i32 0
  %RCX.i1135 = bitcast %union.anon* %5643 to i64*
  %5644 = load i64, i64* %RAX.i1134
  %5645 = load i64, i64* %RCX.i1135
  %5646 = load i64, i64* %PC.i1133
  %5647 = add i64 %5646, 3
  store i64 %5647, i64* %PC.i1133
  %5648 = add i64 %5645, %5644
  store i64 %5648, i64* %RAX.i1134, align 8
  %5649 = icmp ult i64 %5648, %5644
  %5650 = icmp ult i64 %5648, %5645
  %5651 = or i1 %5649, %5650
  %5652 = zext i1 %5651 to i8
  %5653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5652, i8* %5653, align 1
  %5654 = trunc i64 %5648 to i32
  %5655 = and i32 %5654, 255
  %5656 = call i32 @llvm.ctpop.i32(i32 %5655)
  %5657 = trunc i32 %5656 to i8
  %5658 = and i8 %5657, 1
  %5659 = xor i8 %5658, 1
  %5660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5659, i8* %5660, align 1
  %5661 = xor i64 %5645, %5644
  %5662 = xor i64 %5661, %5648
  %5663 = lshr i64 %5662, 4
  %5664 = trunc i64 %5663 to i8
  %5665 = and i8 %5664, 1
  %5666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5665, i8* %5666, align 1
  %5667 = icmp eq i64 %5648, 0
  %5668 = zext i1 %5667 to i8
  %5669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5668, i8* %5669, align 1
  %5670 = lshr i64 %5648, 63
  %5671 = trunc i64 %5670 to i8
  %5672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5671, i8* %5672, align 1
  %5673 = lshr i64 %5644, 63
  %5674 = lshr i64 %5645, 63
  %5675 = xor i64 %5670, %5673
  %5676 = xor i64 %5670, %5674
  %5677 = add i64 %5675, %5676
  %5678 = icmp eq i64 %5677, 2
  %5679 = zext i1 %5678 to i8
  %5680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5679, i8* %5680, align 1
  store %struct.Memory* %loadMem_441ad2, %struct.Memory** %MEMORY
  %loadMem_441ad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5682 = getelementptr inbounds %struct.GPR, %struct.GPR* %5681, i32 0, i32 33
  %5683 = getelementptr inbounds %struct.Reg, %struct.Reg* %5682, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %5683 to i64*
  %5684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5685 = getelementptr inbounds %struct.GPR, %struct.GPR* %5684, i32 0, i32 5
  %5686 = getelementptr inbounds %struct.Reg, %struct.Reg* %5685, i32 0, i32 0
  %RCX.i1131 = bitcast %union.anon* %5686 to i64*
  %5687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5688 = getelementptr inbounds %struct.GPR, %struct.GPR* %5687, i32 0, i32 15
  %5689 = getelementptr inbounds %struct.Reg, %struct.Reg* %5688, i32 0, i32 0
  %RBP.i1132 = bitcast %union.anon* %5689 to i64*
  %5690 = load i64, i64* %RBP.i1132
  %5691 = sub i64 %5690, 28
  %5692 = load i64, i64* %PC.i1130
  %5693 = add i64 %5692, 4
  store i64 %5693, i64* %PC.i1130
  %5694 = inttoptr i64 %5691 to i32*
  %5695 = load i32, i32* %5694
  %5696 = sext i32 %5695 to i64
  store i64 %5696, i64* %RCX.i1131, align 8
  store %struct.Memory* %loadMem_441ad5, %struct.Memory** %MEMORY
  %loadMem_441ad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5698 = getelementptr inbounds %struct.GPR, %struct.GPR* %5697, i32 0, i32 33
  %5699 = getelementptr inbounds %struct.Reg, %struct.Reg* %5698, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %5699 to i64*
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5701 = getelementptr inbounds %struct.GPR, %struct.GPR* %5700, i32 0, i32 1
  %5702 = getelementptr inbounds %struct.Reg, %struct.Reg* %5701, i32 0, i32 0
  %RAX.i1127 = bitcast %union.anon* %5702 to i64*
  %5703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5704 = getelementptr inbounds %struct.GPR, %struct.GPR* %5703, i32 0, i32 5
  %5705 = getelementptr inbounds %struct.Reg, %struct.Reg* %5704, i32 0, i32 0
  %RCX.i1128 = bitcast %union.anon* %5705 to i64*
  %5706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5707 = getelementptr inbounds %struct.GPR, %struct.GPR* %5706, i32 0, i32 9
  %5708 = getelementptr inbounds %struct.Reg, %struct.Reg* %5707, i32 0, i32 0
  %RSI.i1129 = bitcast %union.anon* %5708 to i64*
  %5709 = load i64, i64* %RAX.i1127
  %5710 = load i64, i64* %RCX.i1128
  %5711 = mul i64 %5710, 2
  %5712 = add i64 %5711, %5709
  %5713 = load i64, i64* %PC.i1126
  %5714 = add i64 %5713, 4
  store i64 %5714, i64* %PC.i1126
  %5715 = inttoptr i64 %5712 to i16*
  %5716 = load i16, i16* %5715
  %5717 = zext i16 %5716 to i64
  store i64 %5717, i64* %RSI.i1129, align 8
  store %struct.Memory* %loadMem_441ad9, %struct.Memory** %MEMORY
  %loadMem_441add = load %struct.Memory*, %struct.Memory** %MEMORY
  %5718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5719 = getelementptr inbounds %struct.GPR, %struct.GPR* %5718, i32 0, i32 33
  %5720 = getelementptr inbounds %struct.Reg, %struct.Reg* %5719, i32 0, i32 0
  %PC.i1123 = bitcast %union.anon* %5720 to i64*
  %5721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5722 = getelementptr inbounds %struct.GPR, %struct.GPR* %5721, i32 0, i32 9
  %5723 = getelementptr inbounds %struct.Reg, %struct.Reg* %5722, i32 0, i32 0
  %ESI.i1124 = bitcast %union.anon* %5723 to i32*
  %5724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5725 = getelementptr inbounds %struct.GPR, %struct.GPR* %5724, i32 0, i32 7
  %5726 = getelementptr inbounds %struct.Reg, %struct.Reg* %5725, i32 0, i32 0
  %RDX.i1125 = bitcast %union.anon* %5726 to i64*
  %5727 = load i64, i64* %RDX.i1125
  %5728 = load i32, i32* %ESI.i1124
  %5729 = zext i32 %5728 to i64
  %5730 = load i64, i64* %PC.i1123
  %5731 = add i64 %5730, 2
  store i64 %5731, i64* %PC.i1123
  %5732 = trunc i64 %5727 to i32
  %5733 = sub i32 %5732, %5728
  %5734 = zext i32 %5733 to i64
  store i64 %5734, i64* %RDX.i1125, align 8
  %5735 = icmp ult i32 %5732, %5728
  %5736 = zext i1 %5735 to i8
  %5737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5736, i8* %5737, align 1
  %5738 = and i32 %5733, 255
  %5739 = call i32 @llvm.ctpop.i32(i32 %5738)
  %5740 = trunc i32 %5739 to i8
  %5741 = and i8 %5740, 1
  %5742 = xor i8 %5741, 1
  %5743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5742, i8* %5743, align 1
  %5744 = xor i64 %5729, %5727
  %5745 = trunc i64 %5744 to i32
  %5746 = xor i32 %5745, %5733
  %5747 = lshr i32 %5746, 4
  %5748 = trunc i32 %5747 to i8
  %5749 = and i8 %5748, 1
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5749, i8* %5750, align 1
  %5751 = icmp eq i32 %5733, 0
  %5752 = zext i1 %5751 to i8
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5752, i8* %5753, align 1
  %5754 = lshr i32 %5733, 31
  %5755 = trunc i32 %5754 to i8
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5755, i8* %5756, align 1
  %5757 = lshr i32 %5732, 31
  %5758 = lshr i32 %5728, 31
  %5759 = xor i32 %5758, %5757
  %5760 = xor i32 %5754, %5757
  %5761 = add i32 %5760, %5759
  %5762 = icmp eq i32 %5761, 2
  %5763 = zext i1 %5762 to i8
  %5764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5763, i8* %5764, align 1
  store %struct.Memory* %loadMem_441add, %struct.Memory** %MEMORY
  %loadMem_441adf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5766 = getelementptr inbounds %struct.GPR, %struct.GPR* %5765, i32 0, i32 33
  %5767 = getelementptr inbounds %struct.Reg, %struct.Reg* %5766, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %5767 to i64*
  %5768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5769 = getelementptr inbounds %struct.GPR, %struct.GPR* %5768, i32 0, i32 1
  %5770 = getelementptr inbounds %struct.Reg, %struct.Reg* %5769, i32 0, i32 0
  %RAX.i1122 = bitcast %union.anon* %5770 to i64*
  %5771 = load i64, i64* %PC.i1121
  %5772 = add i64 %5771, 8
  store i64 %5772, i64* %PC.i1121
  %5773 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5773, i64* %RAX.i1122, align 8
  store %struct.Memory* %loadMem_441adf, %struct.Memory** %MEMORY
  %loadMem_441ae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5775 = getelementptr inbounds %struct.GPR, %struct.GPR* %5774, i32 0, i32 33
  %5776 = getelementptr inbounds %struct.Reg, %struct.Reg* %5775, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %5776 to i64*
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5778 = getelementptr inbounds %struct.GPR, %struct.GPR* %5777, i32 0, i32 1
  %5779 = getelementptr inbounds %struct.Reg, %struct.Reg* %5778, i32 0, i32 0
  %RAX.i1120 = bitcast %union.anon* %5779 to i64*
  %5780 = load i64, i64* %RAX.i1120
  %5781 = load i64, i64* %PC.i1119
  %5782 = add i64 %5781, 6
  store i64 %5782, i64* %PC.i1119
  %5783 = add i64 13112, %5780
  store i64 %5783, i64* %RAX.i1120, align 8
  %5784 = icmp ult i64 %5783, %5780
  %5785 = icmp ult i64 %5783, 13112
  %5786 = or i1 %5784, %5785
  %5787 = zext i1 %5786 to i8
  %5788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5787, i8* %5788, align 1
  %5789 = trunc i64 %5783 to i32
  %5790 = and i32 %5789, 255
  %5791 = call i32 @llvm.ctpop.i32(i32 %5790)
  %5792 = trunc i32 %5791 to i8
  %5793 = and i8 %5792, 1
  %5794 = xor i8 %5793, 1
  %5795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5794, i8* %5795, align 1
  %5796 = xor i64 13112, %5780
  %5797 = xor i64 %5796, %5783
  %5798 = lshr i64 %5797, 4
  %5799 = trunc i64 %5798 to i8
  %5800 = and i8 %5799, 1
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5800, i8* %5801, align 1
  %5802 = icmp eq i64 %5783, 0
  %5803 = zext i1 %5802 to i8
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5803, i8* %5804, align 1
  %5805 = lshr i64 %5783, 63
  %5806 = trunc i64 %5805 to i8
  %5807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5806, i8* %5807, align 1
  %5808 = lshr i64 %5780, 63
  %5809 = xor i64 %5805, %5808
  %5810 = add i64 %5809, %5805
  %5811 = icmp eq i64 %5810, 2
  %5812 = zext i1 %5811 to i8
  %5813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5812, i8* %5813, align 1
  store %struct.Memory* %loadMem_441ae7, %struct.Memory** %MEMORY
  %loadMem_441aed = load %struct.Memory*, %struct.Memory** %MEMORY
  %5814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5815 = getelementptr inbounds %struct.GPR, %struct.GPR* %5814, i32 0, i32 33
  %5816 = getelementptr inbounds %struct.Reg, %struct.Reg* %5815, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %5816 to i64*
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5818 = getelementptr inbounds %struct.GPR, %struct.GPR* %5817, i32 0, i32 5
  %5819 = getelementptr inbounds %struct.Reg, %struct.Reg* %5818, i32 0, i32 0
  %RCX.i1117 = bitcast %union.anon* %5819 to i64*
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5821 = getelementptr inbounds %struct.GPR, %struct.GPR* %5820, i32 0, i32 15
  %5822 = getelementptr inbounds %struct.Reg, %struct.Reg* %5821, i32 0, i32 0
  %RBP.i1118 = bitcast %union.anon* %5822 to i64*
  %5823 = load i64, i64* %RBP.i1118
  %5824 = sub i64 %5823, 32
  %5825 = load i64, i64* %PC.i1116
  %5826 = add i64 %5825, 4
  store i64 %5826, i64* %PC.i1116
  %5827 = inttoptr i64 %5824 to i32*
  %5828 = load i32, i32* %5827
  %5829 = sext i32 %5828 to i64
  store i64 %5829, i64* %RCX.i1117, align 8
  store %struct.Memory* %loadMem_441aed, %struct.Memory** %MEMORY
  %loadMem_441af1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5831 = getelementptr inbounds %struct.GPR, %struct.GPR* %5830, i32 0, i32 33
  %5832 = getelementptr inbounds %struct.Reg, %struct.Reg* %5831, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %5832 to i64*
  %5833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5834 = getelementptr inbounds %struct.GPR, %struct.GPR* %5833, i32 0, i32 5
  %5835 = getelementptr inbounds %struct.Reg, %struct.Reg* %5834, i32 0, i32 0
  %RCX.i1115 = bitcast %union.anon* %5835 to i64*
  %5836 = load i64, i64* %RCX.i1115
  %5837 = load i64, i64* %PC.i1114
  %5838 = add i64 %5837, 4
  store i64 %5838, i64* %PC.i1114
  %5839 = shl i64 %5836, 5
  %5840 = icmp slt i64 %5839, 0
  %5841 = shl i64 %5839, 1
  store i64 %5841, i64* %RCX.i1115, align 8
  %5842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5843 = zext i1 %5840 to i8
  store i8 %5843, i8* %5842, align 1
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5845 = trunc i64 %5841 to i32
  %5846 = and i32 %5845, 254
  %5847 = call i32 @llvm.ctpop.i32(i32 %5846)
  %5848 = trunc i32 %5847 to i8
  %5849 = and i8 %5848, 1
  %5850 = xor i8 %5849, 1
  store i8 %5850, i8* %5844, align 1
  %5851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5851, align 1
  %5852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5853 = icmp eq i64 %5841, 0
  %5854 = zext i1 %5853 to i8
  store i8 %5854, i8* %5852, align 1
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5856 = lshr i64 %5841, 63
  %5857 = trunc i64 %5856 to i8
  store i8 %5857, i8* %5855, align 1
  %5858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5858, align 1
  store %struct.Memory* %loadMem_441af1, %struct.Memory** %MEMORY
  %loadMem_441af5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5860 = getelementptr inbounds %struct.GPR, %struct.GPR* %5859, i32 0, i32 33
  %5861 = getelementptr inbounds %struct.Reg, %struct.Reg* %5860, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %5861 to i64*
  %5862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5863 = getelementptr inbounds %struct.GPR, %struct.GPR* %5862, i32 0, i32 1
  %5864 = getelementptr inbounds %struct.Reg, %struct.Reg* %5863, i32 0, i32 0
  %RAX.i1112 = bitcast %union.anon* %5864 to i64*
  %5865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5866 = getelementptr inbounds %struct.GPR, %struct.GPR* %5865, i32 0, i32 5
  %5867 = getelementptr inbounds %struct.Reg, %struct.Reg* %5866, i32 0, i32 0
  %RCX.i1113 = bitcast %union.anon* %5867 to i64*
  %5868 = load i64, i64* %RAX.i1112
  %5869 = load i64, i64* %RCX.i1113
  %5870 = load i64, i64* %PC.i1111
  %5871 = add i64 %5870, 3
  store i64 %5871, i64* %PC.i1111
  %5872 = add i64 %5869, %5868
  store i64 %5872, i64* %RAX.i1112, align 8
  %5873 = icmp ult i64 %5872, %5868
  %5874 = icmp ult i64 %5872, %5869
  %5875 = or i1 %5873, %5874
  %5876 = zext i1 %5875 to i8
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5876, i8* %5877, align 1
  %5878 = trunc i64 %5872 to i32
  %5879 = and i32 %5878, 255
  %5880 = call i32 @llvm.ctpop.i32(i32 %5879)
  %5881 = trunc i32 %5880 to i8
  %5882 = and i8 %5881, 1
  %5883 = xor i8 %5882, 1
  %5884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5883, i8* %5884, align 1
  %5885 = xor i64 %5869, %5868
  %5886 = xor i64 %5885, %5872
  %5887 = lshr i64 %5886, 4
  %5888 = trunc i64 %5887 to i8
  %5889 = and i8 %5888, 1
  %5890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5889, i8* %5890, align 1
  %5891 = icmp eq i64 %5872, 0
  %5892 = zext i1 %5891 to i8
  %5893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5892, i8* %5893, align 1
  %5894 = lshr i64 %5872, 63
  %5895 = trunc i64 %5894 to i8
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5895, i8* %5896, align 1
  %5897 = lshr i64 %5868, 63
  %5898 = lshr i64 %5869, 63
  %5899 = xor i64 %5894, %5897
  %5900 = xor i64 %5894, %5898
  %5901 = add i64 %5899, %5900
  %5902 = icmp eq i64 %5901, 2
  %5903 = zext i1 %5902 to i8
  %5904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5903, i8* %5904, align 1
  store %struct.Memory* %loadMem_441af5, %struct.Memory** %MEMORY
  %loadMem_441af8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5906 = getelementptr inbounds %struct.GPR, %struct.GPR* %5905, i32 0, i32 33
  %5907 = getelementptr inbounds %struct.Reg, %struct.Reg* %5906, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %5907 to i64*
  %5908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5909 = getelementptr inbounds %struct.GPR, %struct.GPR* %5908, i32 0, i32 5
  %5910 = getelementptr inbounds %struct.Reg, %struct.Reg* %5909, i32 0, i32 0
  %RCX.i1109 = bitcast %union.anon* %5910 to i64*
  %5911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5912 = getelementptr inbounds %struct.GPR, %struct.GPR* %5911, i32 0, i32 15
  %5913 = getelementptr inbounds %struct.Reg, %struct.Reg* %5912, i32 0, i32 0
  %RBP.i1110 = bitcast %union.anon* %5913 to i64*
  %5914 = load i64, i64* %RBP.i1110
  %5915 = sub i64 %5914, 28
  %5916 = load i64, i64* %PC.i1108
  %5917 = add i64 %5916, 4
  store i64 %5917, i64* %PC.i1108
  %5918 = inttoptr i64 %5915 to i32*
  %5919 = load i32, i32* %5918
  %5920 = sext i32 %5919 to i64
  store i64 %5920, i64* %RCX.i1109, align 8
  store %struct.Memory* %loadMem_441af8, %struct.Memory** %MEMORY
  %loadMem_441afc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5922 = getelementptr inbounds %struct.GPR, %struct.GPR* %5921, i32 0, i32 33
  %5923 = getelementptr inbounds %struct.Reg, %struct.Reg* %5922, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %5923 to i64*
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5925 = getelementptr inbounds %struct.GPR, %struct.GPR* %5924, i32 0, i32 7
  %5926 = getelementptr inbounds %struct.Reg, %struct.Reg* %5925, i32 0, i32 0
  %EDX.i1105 = bitcast %union.anon* %5926 to i32*
  %5927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5928 = getelementptr inbounds %struct.GPR, %struct.GPR* %5927, i32 0, i32 1
  %5929 = getelementptr inbounds %struct.Reg, %struct.Reg* %5928, i32 0, i32 0
  %RAX.i1106 = bitcast %union.anon* %5929 to i64*
  %5930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5931 = getelementptr inbounds %struct.GPR, %struct.GPR* %5930, i32 0, i32 5
  %5932 = getelementptr inbounds %struct.Reg, %struct.Reg* %5931, i32 0, i32 0
  %RCX.i1107 = bitcast %union.anon* %5932 to i64*
  %5933 = load i64, i64* %RAX.i1106
  %5934 = load i64, i64* %RCX.i1107
  %5935 = mul i64 %5934, 4
  %5936 = add i64 %5935, %5933
  %5937 = load i32, i32* %EDX.i1105
  %5938 = zext i32 %5937 to i64
  %5939 = load i64, i64* %PC.i1104
  %5940 = add i64 %5939, 3
  store i64 %5940, i64* %PC.i1104
  %5941 = inttoptr i64 %5936 to i32*
  store i32 %5937, i32* %5941
  store %struct.Memory* %loadMem_441afc, %struct.Memory** %MEMORY
  %loadMem_441aff = load %struct.Memory*, %struct.Memory** %MEMORY
  %5942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5943 = getelementptr inbounds %struct.GPR, %struct.GPR* %5942, i32 0, i32 33
  %5944 = getelementptr inbounds %struct.Reg, %struct.Reg* %5943, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %5944 to i64*
  %5945 = load i64, i64* %PC.i1103
  %5946 = add i64 %5945, 145
  %5947 = load i64, i64* %PC.i1103
  %5948 = add i64 %5947, 5
  store i64 %5948, i64* %PC.i1103
  %5949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5946, i64* %5949, align 8
  store %struct.Memory* %loadMem_441aff, %struct.Memory** %MEMORY
  br label %block_.L_441b90

block_.L_441b04:                                  ; preds = %block_441a67
  %loadMem_441b04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5951 = getelementptr inbounds %struct.GPR, %struct.GPR* %5950, i32 0, i32 33
  %5952 = getelementptr inbounds %struct.Reg, %struct.Reg* %5951, i32 0, i32 0
  %PC.i1101 = bitcast %union.anon* %5952 to i64*
  %5953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5954 = getelementptr inbounds %struct.GPR, %struct.GPR* %5953, i32 0, i32 15
  %5955 = getelementptr inbounds %struct.Reg, %struct.Reg* %5954, i32 0, i32 0
  %RBP.i1102 = bitcast %union.anon* %5955 to i64*
  %5956 = load i64, i64* %RBP.i1102
  %5957 = sub i64 %5956, 12
  %5958 = load i64, i64* %PC.i1101
  %5959 = add i64 %5958, 4
  store i64 %5959, i64* %PC.i1101
  %5960 = inttoptr i64 %5957 to i32*
  %5961 = load i32, i32* %5960
  %5962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5962, align 1
  %5963 = and i32 %5961, 255
  %5964 = call i32 @llvm.ctpop.i32(i32 %5963)
  %5965 = trunc i32 %5964 to i8
  %5966 = and i8 %5965, 1
  %5967 = xor i8 %5966, 1
  %5968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5967, i8* %5968, align 1
  %5969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5969, align 1
  %5970 = icmp eq i32 %5961, 0
  %5971 = zext i1 %5970 to i8
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5971, i8* %5972, align 1
  %5973 = lshr i32 %5961, 31
  %5974 = trunc i32 %5973 to i8
  %5975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5974, i8* %5975, align 1
  %5976 = lshr i32 %5961, 31
  %5977 = xor i32 %5973, %5976
  %5978 = add i32 %5977, %5976
  %5979 = icmp eq i32 %5978, 2
  %5980 = zext i1 %5979 to i8
  %5981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5980, i8* %5981, align 1
  store %struct.Memory* %loadMem_441b04, %struct.Memory** %MEMORY
  %loadMem_441b08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5983 = getelementptr inbounds %struct.GPR, %struct.GPR* %5982, i32 0, i32 33
  %5984 = getelementptr inbounds %struct.Reg, %struct.Reg* %5983, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %5984 to i64*
  %5985 = load i64, i64* %PC.i1100
  %5986 = add i64 %5985, 71
  %5987 = load i64, i64* %PC.i1100
  %5988 = add i64 %5987, 6
  %5989 = load i64, i64* %PC.i1100
  %5990 = add i64 %5989, 6
  store i64 %5990, i64* %PC.i1100
  %5991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5992 = load i8, i8* %5991, align 1
  %5993 = icmp eq i8 %5992, 0
  %5994 = zext i1 %5993 to i8
  store i8 %5994, i8* %BRANCH_TAKEN, align 1
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5996 = select i1 %5993, i64 %5986, i64 %5988
  store i64 %5996, i64* %5995, align 8
  store %struct.Memory* %loadMem_441b08, %struct.Memory** %MEMORY
  %loadBr_441b08 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441b08 = icmp eq i8 %loadBr_441b08, 1
  br i1 %cmpBr_441b08, label %block_.L_441b4f, label %block_441b0e

block_441b0e:                                     ; preds = %block_.L_441b04
  %loadMem_441b0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5998 = getelementptr inbounds %struct.GPR, %struct.GPR* %5997, i32 0, i32 33
  %5999 = getelementptr inbounds %struct.Reg, %struct.Reg* %5998, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %5999 to i64*
  %6000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6001 = getelementptr inbounds %struct.GPR, %struct.GPR* %6000, i32 0, i32 1
  %6002 = getelementptr inbounds %struct.Reg, %struct.Reg* %6001, i32 0, i32 0
  %RAX.i1099 = bitcast %union.anon* %6002 to i64*
  %6003 = load i64, i64* %PC.i1098
  %6004 = add i64 %6003, 10
  store i64 %6004, i64* %PC.i1098
  store i64 ptrtoint (%G__0x6f6fa0_type* @G__0x6f6fa0 to i64), i64* %RAX.i1099, align 8
  store %struct.Memory* %loadMem_441b0e, %struct.Memory** %MEMORY
  %loadMem_441b18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6006 = getelementptr inbounds %struct.GPR, %struct.GPR* %6005, i32 0, i32 33
  %6007 = getelementptr inbounds %struct.Reg, %struct.Reg* %6006, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %6007 to i64*
  %6008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6009 = getelementptr inbounds %struct.GPR, %struct.GPR* %6008, i32 0, i32 5
  %6010 = getelementptr inbounds %struct.Reg, %struct.Reg* %6009, i32 0, i32 0
  %RCX.i1096 = bitcast %union.anon* %6010 to i64*
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6012 = getelementptr inbounds %struct.GPR, %struct.GPR* %6011, i32 0, i32 15
  %6013 = getelementptr inbounds %struct.Reg, %struct.Reg* %6012, i32 0, i32 0
  %RBP.i1097 = bitcast %union.anon* %6013 to i64*
  %6014 = load i64, i64* %RBP.i1097
  %6015 = sub i64 %6014, 32
  %6016 = load i64, i64* %PC.i1095
  %6017 = add i64 %6016, 4
  store i64 %6017, i64* %PC.i1095
  %6018 = inttoptr i64 %6015 to i32*
  %6019 = load i32, i32* %6018
  %6020 = sext i32 %6019 to i64
  store i64 %6020, i64* %RCX.i1096, align 8
  store %struct.Memory* %loadMem_441b18, %struct.Memory** %MEMORY
  %loadMem_441b1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6022 = getelementptr inbounds %struct.GPR, %struct.GPR* %6021, i32 0, i32 33
  %6023 = getelementptr inbounds %struct.Reg, %struct.Reg* %6022, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %6023 to i64*
  %6024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6025 = getelementptr inbounds %struct.GPR, %struct.GPR* %6024, i32 0, i32 5
  %6026 = getelementptr inbounds %struct.Reg, %struct.Reg* %6025, i32 0, i32 0
  %RCX.i1094 = bitcast %union.anon* %6026 to i64*
  %6027 = load i64, i64* %RCX.i1094
  %6028 = load i64, i64* %PC.i1093
  %6029 = add i64 %6028, 4
  store i64 %6029, i64* %PC.i1093
  %6030 = shl i64 %6027, 5
  %6031 = icmp slt i64 %6030, 0
  %6032 = shl i64 %6030, 1
  store i64 %6032, i64* %RCX.i1094, align 8
  %6033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6034 = zext i1 %6031 to i8
  store i8 %6034, i8* %6033, align 1
  %6035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6036 = trunc i64 %6032 to i32
  %6037 = and i32 %6036, 254
  %6038 = call i32 @llvm.ctpop.i32(i32 %6037)
  %6039 = trunc i32 %6038 to i8
  %6040 = and i8 %6039, 1
  %6041 = xor i8 %6040, 1
  store i8 %6041, i8* %6035, align 1
  %6042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6042, align 1
  %6043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6044 = icmp eq i64 %6032, 0
  %6045 = zext i1 %6044 to i8
  store i8 %6045, i8* %6043, align 1
  %6046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6047 = lshr i64 %6032, 63
  %6048 = trunc i64 %6047 to i8
  store i8 %6048, i8* %6046, align 1
  %6049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6049, align 1
  store %struct.Memory* %loadMem_441b1c, %struct.Memory** %MEMORY
  %loadMem_441b20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6051 = getelementptr inbounds %struct.GPR, %struct.GPR* %6050, i32 0, i32 33
  %6052 = getelementptr inbounds %struct.Reg, %struct.Reg* %6051, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %6052 to i64*
  %6053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6054 = getelementptr inbounds %struct.GPR, %struct.GPR* %6053, i32 0, i32 1
  %6055 = getelementptr inbounds %struct.Reg, %struct.Reg* %6054, i32 0, i32 0
  %RAX.i1091 = bitcast %union.anon* %6055 to i64*
  %6056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6057 = getelementptr inbounds %struct.GPR, %struct.GPR* %6056, i32 0, i32 5
  %6058 = getelementptr inbounds %struct.Reg, %struct.Reg* %6057, i32 0, i32 0
  %RCX.i1092 = bitcast %union.anon* %6058 to i64*
  %6059 = load i64, i64* %RAX.i1091
  %6060 = load i64, i64* %RCX.i1092
  %6061 = load i64, i64* %PC.i1090
  %6062 = add i64 %6061, 3
  store i64 %6062, i64* %PC.i1090
  %6063 = add i64 %6060, %6059
  store i64 %6063, i64* %RAX.i1091, align 8
  %6064 = icmp ult i64 %6063, %6059
  %6065 = icmp ult i64 %6063, %6060
  %6066 = or i1 %6064, %6065
  %6067 = zext i1 %6066 to i8
  %6068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6067, i8* %6068, align 1
  %6069 = trunc i64 %6063 to i32
  %6070 = and i32 %6069, 255
  %6071 = call i32 @llvm.ctpop.i32(i32 %6070)
  %6072 = trunc i32 %6071 to i8
  %6073 = and i8 %6072, 1
  %6074 = xor i8 %6073, 1
  %6075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6074, i8* %6075, align 1
  %6076 = xor i64 %6060, %6059
  %6077 = xor i64 %6076, %6063
  %6078 = lshr i64 %6077, 4
  %6079 = trunc i64 %6078 to i8
  %6080 = and i8 %6079, 1
  %6081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6080, i8* %6081, align 1
  %6082 = icmp eq i64 %6063, 0
  %6083 = zext i1 %6082 to i8
  %6084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6083, i8* %6084, align 1
  %6085 = lshr i64 %6063, 63
  %6086 = trunc i64 %6085 to i8
  %6087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6086, i8* %6087, align 1
  %6088 = lshr i64 %6059, 63
  %6089 = lshr i64 %6060, 63
  %6090 = xor i64 %6085, %6088
  %6091 = xor i64 %6085, %6089
  %6092 = add i64 %6090, %6091
  %6093 = icmp eq i64 %6092, 2
  %6094 = zext i1 %6093 to i8
  %6095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6094, i8* %6095, align 1
  store %struct.Memory* %loadMem_441b20, %struct.Memory** %MEMORY
  %loadMem_441b23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6097 = getelementptr inbounds %struct.GPR, %struct.GPR* %6096, i32 0, i32 33
  %6098 = getelementptr inbounds %struct.Reg, %struct.Reg* %6097, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %6098 to i64*
  %6099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6100 = getelementptr inbounds %struct.GPR, %struct.GPR* %6099, i32 0, i32 5
  %6101 = getelementptr inbounds %struct.Reg, %struct.Reg* %6100, i32 0, i32 0
  %RCX.i1088 = bitcast %union.anon* %6101 to i64*
  %6102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6103 = getelementptr inbounds %struct.GPR, %struct.GPR* %6102, i32 0, i32 15
  %6104 = getelementptr inbounds %struct.Reg, %struct.Reg* %6103, i32 0, i32 0
  %RBP.i1089 = bitcast %union.anon* %6104 to i64*
  %6105 = load i64, i64* %RBP.i1089
  %6106 = sub i64 %6105, 28
  %6107 = load i64, i64* %PC.i1087
  %6108 = add i64 %6107, 4
  store i64 %6108, i64* %PC.i1087
  %6109 = inttoptr i64 %6106 to i32*
  %6110 = load i32, i32* %6109
  %6111 = sext i32 %6110 to i64
  store i64 %6111, i64* %RCX.i1088, align 8
  store %struct.Memory* %loadMem_441b23, %struct.Memory** %MEMORY
  %loadMem_441b27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6113 = getelementptr inbounds %struct.GPR, %struct.GPR* %6112, i32 0, i32 33
  %6114 = getelementptr inbounds %struct.Reg, %struct.Reg* %6113, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %6114 to i64*
  %6115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6116 = getelementptr inbounds %struct.GPR, %struct.GPR* %6115, i32 0, i32 1
  %6117 = getelementptr inbounds %struct.Reg, %struct.Reg* %6116, i32 0, i32 0
  %RAX.i1084 = bitcast %union.anon* %6117 to i64*
  %6118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6119 = getelementptr inbounds %struct.GPR, %struct.GPR* %6118, i32 0, i32 5
  %6120 = getelementptr inbounds %struct.Reg, %struct.Reg* %6119, i32 0, i32 0
  %RCX.i1085 = bitcast %union.anon* %6120 to i64*
  %6121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6122 = getelementptr inbounds %struct.GPR, %struct.GPR* %6121, i32 0, i32 7
  %6123 = getelementptr inbounds %struct.Reg, %struct.Reg* %6122, i32 0, i32 0
  %RDX.i1086 = bitcast %union.anon* %6123 to i64*
  %6124 = load i64, i64* %RAX.i1084
  %6125 = load i64, i64* %RCX.i1085
  %6126 = mul i64 %6125, 4
  %6127 = add i64 %6126, %6124
  %6128 = load i64, i64* %PC.i1083
  %6129 = add i64 %6128, 3
  store i64 %6129, i64* %PC.i1083
  %6130 = inttoptr i64 %6127 to i32*
  %6131 = load i32, i32* %6130
  %6132 = zext i32 %6131 to i64
  store i64 %6132, i64* %RDX.i1086, align 8
  store %struct.Memory* %loadMem_441b27, %struct.Memory** %MEMORY
  %loadMem_441b2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6134 = getelementptr inbounds %struct.GPR, %struct.GPR* %6133, i32 0, i32 33
  %6135 = getelementptr inbounds %struct.Reg, %struct.Reg* %6134, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %6135 to i64*
  %6136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6137 = getelementptr inbounds %struct.GPR, %struct.GPR* %6136, i32 0, i32 1
  %6138 = getelementptr inbounds %struct.Reg, %struct.Reg* %6137, i32 0, i32 0
  %RAX.i1082 = bitcast %union.anon* %6138 to i64*
  %6139 = load i64, i64* %PC.i1081
  %6140 = add i64 %6139, 8
  store i64 %6140, i64* %PC.i1081
  %6141 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6141, i64* %RAX.i1082, align 8
  store %struct.Memory* %loadMem_441b2a, %struct.Memory** %MEMORY
  %loadMem_441b32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6143 = getelementptr inbounds %struct.GPR, %struct.GPR* %6142, i32 0, i32 33
  %6144 = getelementptr inbounds %struct.Reg, %struct.Reg* %6143, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %6144 to i64*
  %6145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6146 = getelementptr inbounds %struct.GPR, %struct.GPR* %6145, i32 0, i32 1
  %6147 = getelementptr inbounds %struct.Reg, %struct.Reg* %6146, i32 0, i32 0
  %RAX.i1080 = bitcast %union.anon* %6147 to i64*
  %6148 = load i64, i64* %RAX.i1080
  %6149 = load i64, i64* %PC.i1079
  %6150 = add i64 %6149, 6
  store i64 %6150, i64* %PC.i1079
  %6151 = add i64 13112, %6148
  store i64 %6151, i64* %RAX.i1080, align 8
  %6152 = icmp ult i64 %6151, %6148
  %6153 = icmp ult i64 %6151, 13112
  %6154 = or i1 %6152, %6153
  %6155 = zext i1 %6154 to i8
  %6156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6155, i8* %6156, align 1
  %6157 = trunc i64 %6151 to i32
  %6158 = and i32 %6157, 255
  %6159 = call i32 @llvm.ctpop.i32(i32 %6158)
  %6160 = trunc i32 %6159 to i8
  %6161 = and i8 %6160, 1
  %6162 = xor i8 %6161, 1
  %6163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6162, i8* %6163, align 1
  %6164 = xor i64 13112, %6148
  %6165 = xor i64 %6164, %6151
  %6166 = lshr i64 %6165, 4
  %6167 = trunc i64 %6166 to i8
  %6168 = and i8 %6167, 1
  %6169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6168, i8* %6169, align 1
  %6170 = icmp eq i64 %6151, 0
  %6171 = zext i1 %6170 to i8
  %6172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6171, i8* %6172, align 1
  %6173 = lshr i64 %6151, 63
  %6174 = trunc i64 %6173 to i8
  %6175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6174, i8* %6175, align 1
  %6176 = lshr i64 %6148, 63
  %6177 = xor i64 %6173, %6176
  %6178 = add i64 %6177, %6173
  %6179 = icmp eq i64 %6178, 2
  %6180 = zext i1 %6179 to i8
  %6181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6180, i8* %6181, align 1
  store %struct.Memory* %loadMem_441b32, %struct.Memory** %MEMORY
  %loadMem_441b38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6183 = getelementptr inbounds %struct.GPR, %struct.GPR* %6182, i32 0, i32 33
  %6184 = getelementptr inbounds %struct.Reg, %struct.Reg* %6183, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %6184 to i64*
  %6185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6186 = getelementptr inbounds %struct.GPR, %struct.GPR* %6185, i32 0, i32 5
  %6187 = getelementptr inbounds %struct.Reg, %struct.Reg* %6186, i32 0, i32 0
  %RCX.i1077 = bitcast %union.anon* %6187 to i64*
  %6188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6189 = getelementptr inbounds %struct.GPR, %struct.GPR* %6188, i32 0, i32 15
  %6190 = getelementptr inbounds %struct.Reg, %struct.Reg* %6189, i32 0, i32 0
  %RBP.i1078 = bitcast %union.anon* %6190 to i64*
  %6191 = load i64, i64* %RBP.i1078
  %6192 = sub i64 %6191, 32
  %6193 = load i64, i64* %PC.i1076
  %6194 = add i64 %6193, 4
  store i64 %6194, i64* %PC.i1076
  %6195 = inttoptr i64 %6192 to i32*
  %6196 = load i32, i32* %6195
  %6197 = sext i32 %6196 to i64
  store i64 %6197, i64* %RCX.i1077, align 8
  store %struct.Memory* %loadMem_441b38, %struct.Memory** %MEMORY
  %loadMem_441b3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6199 = getelementptr inbounds %struct.GPR, %struct.GPR* %6198, i32 0, i32 33
  %6200 = getelementptr inbounds %struct.Reg, %struct.Reg* %6199, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %6200 to i64*
  %6201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6202 = getelementptr inbounds %struct.GPR, %struct.GPR* %6201, i32 0, i32 5
  %6203 = getelementptr inbounds %struct.Reg, %struct.Reg* %6202, i32 0, i32 0
  %RCX.i1075 = bitcast %union.anon* %6203 to i64*
  %6204 = load i64, i64* %RCX.i1075
  %6205 = load i64, i64* %PC.i1074
  %6206 = add i64 %6205, 4
  store i64 %6206, i64* %PC.i1074
  %6207 = shl i64 %6204, 5
  %6208 = icmp slt i64 %6207, 0
  %6209 = shl i64 %6207, 1
  store i64 %6209, i64* %RCX.i1075, align 8
  %6210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6211 = zext i1 %6208 to i8
  store i8 %6211, i8* %6210, align 1
  %6212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6213 = trunc i64 %6209 to i32
  %6214 = and i32 %6213, 254
  %6215 = call i32 @llvm.ctpop.i32(i32 %6214)
  %6216 = trunc i32 %6215 to i8
  %6217 = and i8 %6216, 1
  %6218 = xor i8 %6217, 1
  store i8 %6218, i8* %6212, align 1
  %6219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6219, align 1
  %6220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6221 = icmp eq i64 %6209, 0
  %6222 = zext i1 %6221 to i8
  store i8 %6222, i8* %6220, align 1
  %6223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6224 = lshr i64 %6209, 63
  %6225 = trunc i64 %6224 to i8
  store i8 %6225, i8* %6223, align 1
  %6226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6226, align 1
  store %struct.Memory* %loadMem_441b3c, %struct.Memory** %MEMORY
  %loadMem_441b40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6228 = getelementptr inbounds %struct.GPR, %struct.GPR* %6227, i32 0, i32 33
  %6229 = getelementptr inbounds %struct.Reg, %struct.Reg* %6228, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %6229 to i64*
  %6230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6231 = getelementptr inbounds %struct.GPR, %struct.GPR* %6230, i32 0, i32 1
  %6232 = getelementptr inbounds %struct.Reg, %struct.Reg* %6231, i32 0, i32 0
  %RAX.i1072 = bitcast %union.anon* %6232 to i64*
  %6233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6234 = getelementptr inbounds %struct.GPR, %struct.GPR* %6233, i32 0, i32 5
  %6235 = getelementptr inbounds %struct.Reg, %struct.Reg* %6234, i32 0, i32 0
  %RCX.i1073 = bitcast %union.anon* %6235 to i64*
  %6236 = load i64, i64* %RAX.i1072
  %6237 = load i64, i64* %RCX.i1073
  %6238 = load i64, i64* %PC.i1071
  %6239 = add i64 %6238, 3
  store i64 %6239, i64* %PC.i1071
  %6240 = add i64 %6237, %6236
  store i64 %6240, i64* %RAX.i1072, align 8
  %6241 = icmp ult i64 %6240, %6236
  %6242 = icmp ult i64 %6240, %6237
  %6243 = or i1 %6241, %6242
  %6244 = zext i1 %6243 to i8
  %6245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6244, i8* %6245, align 1
  %6246 = trunc i64 %6240 to i32
  %6247 = and i32 %6246, 255
  %6248 = call i32 @llvm.ctpop.i32(i32 %6247)
  %6249 = trunc i32 %6248 to i8
  %6250 = and i8 %6249, 1
  %6251 = xor i8 %6250, 1
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6251, i8* %6252, align 1
  %6253 = xor i64 %6237, %6236
  %6254 = xor i64 %6253, %6240
  %6255 = lshr i64 %6254, 4
  %6256 = trunc i64 %6255 to i8
  %6257 = and i8 %6256, 1
  %6258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6257, i8* %6258, align 1
  %6259 = icmp eq i64 %6240, 0
  %6260 = zext i1 %6259 to i8
  %6261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6260, i8* %6261, align 1
  %6262 = lshr i64 %6240, 63
  %6263 = trunc i64 %6262 to i8
  %6264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6263, i8* %6264, align 1
  %6265 = lshr i64 %6236, 63
  %6266 = lshr i64 %6237, 63
  %6267 = xor i64 %6262, %6265
  %6268 = xor i64 %6262, %6266
  %6269 = add i64 %6267, %6268
  %6270 = icmp eq i64 %6269, 2
  %6271 = zext i1 %6270 to i8
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6271, i8* %6272, align 1
  store %struct.Memory* %loadMem_441b40, %struct.Memory** %MEMORY
  %loadMem_441b43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6274 = getelementptr inbounds %struct.GPR, %struct.GPR* %6273, i32 0, i32 33
  %6275 = getelementptr inbounds %struct.Reg, %struct.Reg* %6274, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %6275 to i64*
  %6276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6277 = getelementptr inbounds %struct.GPR, %struct.GPR* %6276, i32 0, i32 5
  %6278 = getelementptr inbounds %struct.Reg, %struct.Reg* %6277, i32 0, i32 0
  %RCX.i1069 = bitcast %union.anon* %6278 to i64*
  %6279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6280 = getelementptr inbounds %struct.GPR, %struct.GPR* %6279, i32 0, i32 15
  %6281 = getelementptr inbounds %struct.Reg, %struct.Reg* %6280, i32 0, i32 0
  %RBP.i1070 = bitcast %union.anon* %6281 to i64*
  %6282 = load i64, i64* %RBP.i1070
  %6283 = sub i64 %6282, 28
  %6284 = load i64, i64* %PC.i1068
  %6285 = add i64 %6284, 4
  store i64 %6285, i64* %PC.i1068
  %6286 = inttoptr i64 %6283 to i32*
  %6287 = load i32, i32* %6286
  %6288 = sext i32 %6287 to i64
  store i64 %6288, i64* %RCX.i1069, align 8
  store %struct.Memory* %loadMem_441b43, %struct.Memory** %MEMORY
  %loadMem_441b47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6290 = getelementptr inbounds %struct.GPR, %struct.GPR* %6289, i32 0, i32 33
  %6291 = getelementptr inbounds %struct.Reg, %struct.Reg* %6290, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %6291 to i64*
  %6292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6293 = getelementptr inbounds %struct.GPR, %struct.GPR* %6292, i32 0, i32 7
  %6294 = getelementptr inbounds %struct.Reg, %struct.Reg* %6293, i32 0, i32 0
  %EDX.i1065 = bitcast %union.anon* %6294 to i32*
  %6295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6296 = getelementptr inbounds %struct.GPR, %struct.GPR* %6295, i32 0, i32 1
  %6297 = getelementptr inbounds %struct.Reg, %struct.Reg* %6296, i32 0, i32 0
  %RAX.i1066 = bitcast %union.anon* %6297 to i64*
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6299 = getelementptr inbounds %struct.GPR, %struct.GPR* %6298, i32 0, i32 5
  %6300 = getelementptr inbounds %struct.Reg, %struct.Reg* %6299, i32 0, i32 0
  %RCX.i1067 = bitcast %union.anon* %6300 to i64*
  %6301 = load i64, i64* %RAX.i1066
  %6302 = load i64, i64* %RCX.i1067
  %6303 = mul i64 %6302, 4
  %6304 = add i64 %6303, %6301
  %6305 = load i32, i32* %EDX.i1065
  %6306 = zext i32 %6305 to i64
  %6307 = load i64, i64* %PC.i1064
  %6308 = add i64 %6307, 3
  store i64 %6308, i64* %PC.i1064
  %6309 = inttoptr i64 %6304 to i32*
  store i32 %6305, i32* %6309
  store %struct.Memory* %loadMem_441b47, %struct.Memory** %MEMORY
  %loadMem_441b4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6311 = getelementptr inbounds %struct.GPR, %struct.GPR* %6310, i32 0, i32 33
  %6312 = getelementptr inbounds %struct.Reg, %struct.Reg* %6311, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %6312 to i64*
  %6313 = load i64, i64* %PC.i1063
  %6314 = add i64 %6313, 65
  %6315 = load i64, i64* %PC.i1063
  %6316 = add i64 %6315, 5
  store i64 %6316, i64* %PC.i1063
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6314, i64* %6317, align 8
  store %struct.Memory* %loadMem_441b4a, %struct.Memory** %MEMORY
  br label %block_.L_441b8b

block_.L_441b4f:                                  ; preds = %block_.L_441b04
  %loadMem_441b4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6319 = getelementptr inbounds %struct.GPR, %struct.GPR* %6318, i32 0, i32 33
  %6320 = getelementptr inbounds %struct.Reg, %struct.Reg* %6319, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %6320 to i64*
  %6321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6322 = getelementptr inbounds %struct.GPR, %struct.GPR* %6321, i32 0, i32 1
  %6323 = getelementptr inbounds %struct.Reg, %struct.Reg* %6322, i32 0, i32 0
  %RAX.i1062 = bitcast %union.anon* %6323 to i64*
  %6324 = load i64, i64* %PC.i1061
  %6325 = add i64 %6324, 10
  store i64 %6325, i64* %PC.i1061
  store i64 ptrtoint (%G__0x6d40f0_type* @G__0x6d40f0 to i64), i64* %RAX.i1062, align 8
  store %struct.Memory* %loadMem_441b4f, %struct.Memory** %MEMORY
  %loadMem_441b59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6327 = getelementptr inbounds %struct.GPR, %struct.GPR* %6326, i32 0, i32 33
  %6328 = getelementptr inbounds %struct.Reg, %struct.Reg* %6327, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %6328 to i64*
  %6329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6330 = getelementptr inbounds %struct.GPR, %struct.GPR* %6329, i32 0, i32 5
  %6331 = getelementptr inbounds %struct.Reg, %struct.Reg* %6330, i32 0, i32 0
  %RCX.i1059 = bitcast %union.anon* %6331 to i64*
  %6332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6333 = getelementptr inbounds %struct.GPR, %struct.GPR* %6332, i32 0, i32 15
  %6334 = getelementptr inbounds %struct.Reg, %struct.Reg* %6333, i32 0, i32 0
  %RBP.i1060 = bitcast %union.anon* %6334 to i64*
  %6335 = load i64, i64* %RBP.i1060
  %6336 = sub i64 %6335, 32
  %6337 = load i64, i64* %PC.i1058
  %6338 = add i64 %6337, 4
  store i64 %6338, i64* %PC.i1058
  %6339 = inttoptr i64 %6336 to i32*
  %6340 = load i32, i32* %6339
  %6341 = sext i32 %6340 to i64
  store i64 %6341, i64* %RCX.i1059, align 8
  store %struct.Memory* %loadMem_441b59, %struct.Memory** %MEMORY
  %loadMem_441b5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6343 = getelementptr inbounds %struct.GPR, %struct.GPR* %6342, i32 0, i32 33
  %6344 = getelementptr inbounds %struct.Reg, %struct.Reg* %6343, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %6344 to i64*
  %6345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6346 = getelementptr inbounds %struct.GPR, %struct.GPR* %6345, i32 0, i32 5
  %6347 = getelementptr inbounds %struct.Reg, %struct.Reg* %6346, i32 0, i32 0
  %RCX.i1057 = bitcast %union.anon* %6347 to i64*
  %6348 = load i64, i64* %RCX.i1057
  %6349 = load i64, i64* %PC.i1056
  %6350 = add i64 %6349, 4
  store i64 %6350, i64* %PC.i1056
  %6351 = shl i64 %6348, 5
  %6352 = icmp slt i64 %6351, 0
  %6353 = shl i64 %6351, 1
  store i64 %6353, i64* %RCX.i1057, align 8
  %6354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6355 = zext i1 %6352 to i8
  store i8 %6355, i8* %6354, align 1
  %6356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6357 = trunc i64 %6353 to i32
  %6358 = and i32 %6357, 254
  %6359 = call i32 @llvm.ctpop.i32(i32 %6358)
  %6360 = trunc i32 %6359 to i8
  %6361 = and i8 %6360, 1
  %6362 = xor i8 %6361, 1
  store i8 %6362, i8* %6356, align 1
  %6363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6363, align 1
  %6364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6365 = icmp eq i64 %6353, 0
  %6366 = zext i1 %6365 to i8
  store i8 %6366, i8* %6364, align 1
  %6367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6368 = lshr i64 %6353, 63
  %6369 = trunc i64 %6368 to i8
  store i8 %6369, i8* %6367, align 1
  %6370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6370, align 1
  store %struct.Memory* %loadMem_441b5d, %struct.Memory** %MEMORY
  %loadMem_441b61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6372 = getelementptr inbounds %struct.GPR, %struct.GPR* %6371, i32 0, i32 33
  %6373 = getelementptr inbounds %struct.Reg, %struct.Reg* %6372, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %6373 to i64*
  %6374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6375 = getelementptr inbounds %struct.GPR, %struct.GPR* %6374, i32 0, i32 1
  %6376 = getelementptr inbounds %struct.Reg, %struct.Reg* %6375, i32 0, i32 0
  %RAX.i1054 = bitcast %union.anon* %6376 to i64*
  %6377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6378 = getelementptr inbounds %struct.GPR, %struct.GPR* %6377, i32 0, i32 5
  %6379 = getelementptr inbounds %struct.Reg, %struct.Reg* %6378, i32 0, i32 0
  %RCX.i1055 = bitcast %union.anon* %6379 to i64*
  %6380 = load i64, i64* %RAX.i1054
  %6381 = load i64, i64* %RCX.i1055
  %6382 = load i64, i64* %PC.i1053
  %6383 = add i64 %6382, 3
  store i64 %6383, i64* %PC.i1053
  %6384 = add i64 %6381, %6380
  store i64 %6384, i64* %RAX.i1054, align 8
  %6385 = icmp ult i64 %6384, %6380
  %6386 = icmp ult i64 %6384, %6381
  %6387 = or i1 %6385, %6386
  %6388 = zext i1 %6387 to i8
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6388, i8* %6389, align 1
  %6390 = trunc i64 %6384 to i32
  %6391 = and i32 %6390, 255
  %6392 = call i32 @llvm.ctpop.i32(i32 %6391)
  %6393 = trunc i32 %6392 to i8
  %6394 = and i8 %6393, 1
  %6395 = xor i8 %6394, 1
  %6396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6395, i8* %6396, align 1
  %6397 = xor i64 %6381, %6380
  %6398 = xor i64 %6397, %6384
  %6399 = lshr i64 %6398, 4
  %6400 = trunc i64 %6399 to i8
  %6401 = and i8 %6400, 1
  %6402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6401, i8* %6402, align 1
  %6403 = icmp eq i64 %6384, 0
  %6404 = zext i1 %6403 to i8
  %6405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6404, i8* %6405, align 1
  %6406 = lshr i64 %6384, 63
  %6407 = trunc i64 %6406 to i8
  %6408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6407, i8* %6408, align 1
  %6409 = lshr i64 %6380, 63
  %6410 = lshr i64 %6381, 63
  %6411 = xor i64 %6406, %6409
  %6412 = xor i64 %6406, %6410
  %6413 = add i64 %6411, %6412
  %6414 = icmp eq i64 %6413, 2
  %6415 = zext i1 %6414 to i8
  %6416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6415, i8* %6416, align 1
  store %struct.Memory* %loadMem_441b61, %struct.Memory** %MEMORY
  %loadMem_441b64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6418 = getelementptr inbounds %struct.GPR, %struct.GPR* %6417, i32 0, i32 33
  %6419 = getelementptr inbounds %struct.Reg, %struct.Reg* %6418, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %6419 to i64*
  %6420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6421 = getelementptr inbounds %struct.GPR, %struct.GPR* %6420, i32 0, i32 5
  %6422 = getelementptr inbounds %struct.Reg, %struct.Reg* %6421, i32 0, i32 0
  %RCX.i1051 = bitcast %union.anon* %6422 to i64*
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6424 = getelementptr inbounds %struct.GPR, %struct.GPR* %6423, i32 0, i32 15
  %6425 = getelementptr inbounds %struct.Reg, %struct.Reg* %6424, i32 0, i32 0
  %RBP.i1052 = bitcast %union.anon* %6425 to i64*
  %6426 = load i64, i64* %RBP.i1052
  %6427 = sub i64 %6426, 28
  %6428 = load i64, i64* %PC.i1050
  %6429 = add i64 %6428, 4
  store i64 %6429, i64* %PC.i1050
  %6430 = inttoptr i64 %6427 to i32*
  %6431 = load i32, i32* %6430
  %6432 = sext i32 %6431 to i64
  store i64 %6432, i64* %RCX.i1051, align 8
  store %struct.Memory* %loadMem_441b64, %struct.Memory** %MEMORY
  %loadMem_441b68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6434 = getelementptr inbounds %struct.GPR, %struct.GPR* %6433, i32 0, i32 33
  %6435 = getelementptr inbounds %struct.Reg, %struct.Reg* %6434, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %6435 to i64*
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6437 = getelementptr inbounds %struct.GPR, %struct.GPR* %6436, i32 0, i32 1
  %6438 = getelementptr inbounds %struct.Reg, %struct.Reg* %6437, i32 0, i32 0
  %RAX.i1047 = bitcast %union.anon* %6438 to i64*
  %6439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6440 = getelementptr inbounds %struct.GPR, %struct.GPR* %6439, i32 0, i32 5
  %6441 = getelementptr inbounds %struct.Reg, %struct.Reg* %6440, i32 0, i32 0
  %RCX.i1048 = bitcast %union.anon* %6441 to i64*
  %6442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6443 = getelementptr inbounds %struct.GPR, %struct.GPR* %6442, i32 0, i32 7
  %6444 = getelementptr inbounds %struct.Reg, %struct.Reg* %6443, i32 0, i32 0
  %RDX.i1049 = bitcast %union.anon* %6444 to i64*
  %6445 = load i64, i64* %RAX.i1047
  %6446 = load i64, i64* %RCX.i1048
  %6447 = mul i64 %6446, 4
  %6448 = add i64 %6447, %6445
  %6449 = load i64, i64* %PC.i1046
  %6450 = add i64 %6449, 3
  store i64 %6450, i64* %PC.i1046
  %6451 = inttoptr i64 %6448 to i32*
  %6452 = load i32, i32* %6451
  %6453 = zext i32 %6452 to i64
  store i64 %6453, i64* %RDX.i1049, align 8
  store %struct.Memory* %loadMem_441b68, %struct.Memory** %MEMORY
  %loadMem_441b6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6455 = getelementptr inbounds %struct.GPR, %struct.GPR* %6454, i32 0, i32 33
  %6456 = getelementptr inbounds %struct.Reg, %struct.Reg* %6455, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %6456 to i64*
  %6457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6458 = getelementptr inbounds %struct.GPR, %struct.GPR* %6457, i32 0, i32 1
  %6459 = getelementptr inbounds %struct.Reg, %struct.Reg* %6458, i32 0, i32 0
  %RAX.i1045 = bitcast %union.anon* %6459 to i64*
  %6460 = load i64, i64* %PC.i1044
  %6461 = add i64 %6460, 8
  store i64 %6461, i64* %PC.i1044
  %6462 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6462, i64* %RAX.i1045, align 8
  store %struct.Memory* %loadMem_441b6b, %struct.Memory** %MEMORY
  %loadMem_441b73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6464 = getelementptr inbounds %struct.GPR, %struct.GPR* %6463, i32 0, i32 33
  %6465 = getelementptr inbounds %struct.Reg, %struct.Reg* %6464, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %6465 to i64*
  %6466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6467 = getelementptr inbounds %struct.GPR, %struct.GPR* %6466, i32 0, i32 1
  %6468 = getelementptr inbounds %struct.Reg, %struct.Reg* %6467, i32 0, i32 0
  %RAX.i1043 = bitcast %union.anon* %6468 to i64*
  %6469 = load i64, i64* %RAX.i1043
  %6470 = load i64, i64* %PC.i1042
  %6471 = add i64 %6470, 6
  store i64 %6471, i64* %PC.i1042
  %6472 = add i64 13112, %6469
  store i64 %6472, i64* %RAX.i1043, align 8
  %6473 = icmp ult i64 %6472, %6469
  %6474 = icmp ult i64 %6472, 13112
  %6475 = or i1 %6473, %6474
  %6476 = zext i1 %6475 to i8
  %6477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6476, i8* %6477, align 1
  %6478 = trunc i64 %6472 to i32
  %6479 = and i32 %6478, 255
  %6480 = call i32 @llvm.ctpop.i32(i32 %6479)
  %6481 = trunc i32 %6480 to i8
  %6482 = and i8 %6481, 1
  %6483 = xor i8 %6482, 1
  %6484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6483, i8* %6484, align 1
  %6485 = xor i64 13112, %6469
  %6486 = xor i64 %6485, %6472
  %6487 = lshr i64 %6486, 4
  %6488 = trunc i64 %6487 to i8
  %6489 = and i8 %6488, 1
  %6490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6489, i8* %6490, align 1
  %6491 = icmp eq i64 %6472, 0
  %6492 = zext i1 %6491 to i8
  %6493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6492, i8* %6493, align 1
  %6494 = lshr i64 %6472, 63
  %6495 = trunc i64 %6494 to i8
  %6496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6495, i8* %6496, align 1
  %6497 = lshr i64 %6469, 63
  %6498 = xor i64 %6494, %6497
  %6499 = add i64 %6498, %6494
  %6500 = icmp eq i64 %6499, 2
  %6501 = zext i1 %6500 to i8
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6501, i8* %6502, align 1
  store %struct.Memory* %loadMem_441b73, %struct.Memory** %MEMORY
  %loadMem_441b79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6504 = getelementptr inbounds %struct.GPR, %struct.GPR* %6503, i32 0, i32 33
  %6505 = getelementptr inbounds %struct.Reg, %struct.Reg* %6504, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %6505 to i64*
  %6506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6507 = getelementptr inbounds %struct.GPR, %struct.GPR* %6506, i32 0, i32 5
  %6508 = getelementptr inbounds %struct.Reg, %struct.Reg* %6507, i32 0, i32 0
  %RCX.i1040 = bitcast %union.anon* %6508 to i64*
  %6509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6510 = getelementptr inbounds %struct.GPR, %struct.GPR* %6509, i32 0, i32 15
  %6511 = getelementptr inbounds %struct.Reg, %struct.Reg* %6510, i32 0, i32 0
  %RBP.i1041 = bitcast %union.anon* %6511 to i64*
  %6512 = load i64, i64* %RBP.i1041
  %6513 = sub i64 %6512, 32
  %6514 = load i64, i64* %PC.i1039
  %6515 = add i64 %6514, 4
  store i64 %6515, i64* %PC.i1039
  %6516 = inttoptr i64 %6513 to i32*
  %6517 = load i32, i32* %6516
  %6518 = sext i32 %6517 to i64
  store i64 %6518, i64* %RCX.i1040, align 8
  store %struct.Memory* %loadMem_441b79, %struct.Memory** %MEMORY
  %loadMem_441b7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6520 = getelementptr inbounds %struct.GPR, %struct.GPR* %6519, i32 0, i32 33
  %6521 = getelementptr inbounds %struct.Reg, %struct.Reg* %6520, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %6521 to i64*
  %6522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6523 = getelementptr inbounds %struct.GPR, %struct.GPR* %6522, i32 0, i32 5
  %6524 = getelementptr inbounds %struct.Reg, %struct.Reg* %6523, i32 0, i32 0
  %RCX.i1038 = bitcast %union.anon* %6524 to i64*
  %6525 = load i64, i64* %RCX.i1038
  %6526 = load i64, i64* %PC.i1037
  %6527 = add i64 %6526, 4
  store i64 %6527, i64* %PC.i1037
  %6528 = shl i64 %6525, 5
  %6529 = icmp slt i64 %6528, 0
  %6530 = shl i64 %6528, 1
  store i64 %6530, i64* %RCX.i1038, align 8
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6532 = zext i1 %6529 to i8
  store i8 %6532, i8* %6531, align 1
  %6533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6534 = trunc i64 %6530 to i32
  %6535 = and i32 %6534, 254
  %6536 = call i32 @llvm.ctpop.i32(i32 %6535)
  %6537 = trunc i32 %6536 to i8
  %6538 = and i8 %6537, 1
  %6539 = xor i8 %6538, 1
  store i8 %6539, i8* %6533, align 1
  %6540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6540, align 1
  %6541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6542 = icmp eq i64 %6530, 0
  %6543 = zext i1 %6542 to i8
  store i8 %6543, i8* %6541, align 1
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6545 = lshr i64 %6530, 63
  %6546 = trunc i64 %6545 to i8
  store i8 %6546, i8* %6544, align 1
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6547, align 1
  store %struct.Memory* %loadMem_441b7d, %struct.Memory** %MEMORY
  %loadMem_441b81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6549 = getelementptr inbounds %struct.GPR, %struct.GPR* %6548, i32 0, i32 33
  %6550 = getelementptr inbounds %struct.Reg, %struct.Reg* %6549, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %6550 to i64*
  %6551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6552 = getelementptr inbounds %struct.GPR, %struct.GPR* %6551, i32 0, i32 1
  %6553 = getelementptr inbounds %struct.Reg, %struct.Reg* %6552, i32 0, i32 0
  %RAX.i1035 = bitcast %union.anon* %6553 to i64*
  %6554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6555 = getelementptr inbounds %struct.GPR, %struct.GPR* %6554, i32 0, i32 5
  %6556 = getelementptr inbounds %struct.Reg, %struct.Reg* %6555, i32 0, i32 0
  %RCX.i1036 = bitcast %union.anon* %6556 to i64*
  %6557 = load i64, i64* %RAX.i1035
  %6558 = load i64, i64* %RCX.i1036
  %6559 = load i64, i64* %PC.i1034
  %6560 = add i64 %6559, 3
  store i64 %6560, i64* %PC.i1034
  %6561 = add i64 %6558, %6557
  store i64 %6561, i64* %RAX.i1035, align 8
  %6562 = icmp ult i64 %6561, %6557
  %6563 = icmp ult i64 %6561, %6558
  %6564 = or i1 %6562, %6563
  %6565 = zext i1 %6564 to i8
  %6566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6565, i8* %6566, align 1
  %6567 = trunc i64 %6561 to i32
  %6568 = and i32 %6567, 255
  %6569 = call i32 @llvm.ctpop.i32(i32 %6568)
  %6570 = trunc i32 %6569 to i8
  %6571 = and i8 %6570, 1
  %6572 = xor i8 %6571, 1
  %6573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6572, i8* %6573, align 1
  %6574 = xor i64 %6558, %6557
  %6575 = xor i64 %6574, %6561
  %6576 = lshr i64 %6575, 4
  %6577 = trunc i64 %6576 to i8
  %6578 = and i8 %6577, 1
  %6579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6578, i8* %6579, align 1
  %6580 = icmp eq i64 %6561, 0
  %6581 = zext i1 %6580 to i8
  %6582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6581, i8* %6582, align 1
  %6583 = lshr i64 %6561, 63
  %6584 = trunc i64 %6583 to i8
  %6585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6584, i8* %6585, align 1
  %6586 = lshr i64 %6557, 63
  %6587 = lshr i64 %6558, 63
  %6588 = xor i64 %6583, %6586
  %6589 = xor i64 %6583, %6587
  %6590 = add i64 %6588, %6589
  %6591 = icmp eq i64 %6590, 2
  %6592 = zext i1 %6591 to i8
  %6593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6592, i8* %6593, align 1
  store %struct.Memory* %loadMem_441b81, %struct.Memory** %MEMORY
  %loadMem_441b84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6595 = getelementptr inbounds %struct.GPR, %struct.GPR* %6594, i32 0, i32 33
  %6596 = getelementptr inbounds %struct.Reg, %struct.Reg* %6595, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %6596 to i64*
  %6597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6598 = getelementptr inbounds %struct.GPR, %struct.GPR* %6597, i32 0, i32 5
  %6599 = getelementptr inbounds %struct.Reg, %struct.Reg* %6598, i32 0, i32 0
  %RCX.i1032 = bitcast %union.anon* %6599 to i64*
  %6600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6601 = getelementptr inbounds %struct.GPR, %struct.GPR* %6600, i32 0, i32 15
  %6602 = getelementptr inbounds %struct.Reg, %struct.Reg* %6601, i32 0, i32 0
  %RBP.i1033 = bitcast %union.anon* %6602 to i64*
  %6603 = load i64, i64* %RBP.i1033
  %6604 = sub i64 %6603, 28
  %6605 = load i64, i64* %PC.i1031
  %6606 = add i64 %6605, 4
  store i64 %6606, i64* %PC.i1031
  %6607 = inttoptr i64 %6604 to i32*
  %6608 = load i32, i32* %6607
  %6609 = sext i32 %6608 to i64
  store i64 %6609, i64* %RCX.i1032, align 8
  store %struct.Memory* %loadMem_441b84, %struct.Memory** %MEMORY
  %loadMem_441b88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6611 = getelementptr inbounds %struct.GPR, %struct.GPR* %6610, i32 0, i32 33
  %6612 = getelementptr inbounds %struct.Reg, %struct.Reg* %6611, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %6612 to i64*
  %6613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6614 = getelementptr inbounds %struct.GPR, %struct.GPR* %6613, i32 0, i32 7
  %6615 = getelementptr inbounds %struct.Reg, %struct.Reg* %6614, i32 0, i32 0
  %EDX.i1028 = bitcast %union.anon* %6615 to i32*
  %6616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6617 = getelementptr inbounds %struct.GPR, %struct.GPR* %6616, i32 0, i32 1
  %6618 = getelementptr inbounds %struct.Reg, %struct.Reg* %6617, i32 0, i32 0
  %RAX.i1029 = bitcast %union.anon* %6618 to i64*
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6620 = getelementptr inbounds %struct.GPR, %struct.GPR* %6619, i32 0, i32 5
  %6621 = getelementptr inbounds %struct.Reg, %struct.Reg* %6620, i32 0, i32 0
  %RCX.i1030 = bitcast %union.anon* %6621 to i64*
  %6622 = load i64, i64* %RAX.i1029
  %6623 = load i64, i64* %RCX.i1030
  %6624 = mul i64 %6623, 4
  %6625 = add i64 %6624, %6622
  %6626 = load i32, i32* %EDX.i1028
  %6627 = zext i32 %6626 to i64
  %6628 = load i64, i64* %PC.i1027
  %6629 = add i64 %6628, 3
  store i64 %6629, i64* %PC.i1027
  %6630 = inttoptr i64 %6625 to i32*
  store i32 %6626, i32* %6630
  store %struct.Memory* %loadMem_441b88, %struct.Memory** %MEMORY
  br label %block_.L_441b8b

block_.L_441b8b:                                  ; preds = %block_.L_441b4f, %block_441b0e
  %loadMem_441b8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6632 = getelementptr inbounds %struct.GPR, %struct.GPR* %6631, i32 0, i32 33
  %6633 = getelementptr inbounds %struct.Reg, %struct.Reg* %6632, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %6633 to i64*
  %6634 = load i64, i64* %PC.i1026
  %6635 = add i64 %6634, 5
  %6636 = load i64, i64* %PC.i1026
  %6637 = add i64 %6636, 5
  store i64 %6637, i64* %PC.i1026
  %6638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6635, i64* %6638, align 8
  store %struct.Memory* %loadMem_441b8b, %struct.Memory** %MEMORY
  br label %block_.L_441b90

block_.L_441b90:                                  ; preds = %block_.L_441b8b, %block_441a7c
  %loadMem_441b90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6640 = getelementptr inbounds %struct.GPR, %struct.GPR* %6639, i32 0, i32 33
  %6641 = getelementptr inbounds %struct.Reg, %struct.Reg* %6640, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %6641 to i64*
  %6642 = load i64, i64* %PC.i1025
  %6643 = add i64 %6642, 5
  %6644 = load i64, i64* %PC.i1025
  %6645 = add i64 %6644, 5
  store i64 %6645, i64* %PC.i1025
  %6646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6643, i64* %6646, align 8
  store %struct.Memory* %loadMem_441b90, %struct.Memory** %MEMORY
  br label %block_.L_441b95

block_.L_441b95:                                  ; preds = %block_.L_441b90
  %loadMem_441b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6648 = getelementptr inbounds %struct.GPR, %struct.GPR* %6647, i32 0, i32 33
  %6649 = getelementptr inbounds %struct.Reg, %struct.Reg* %6648, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %6649 to i64*
  %6650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6651 = getelementptr inbounds %struct.GPR, %struct.GPR* %6650, i32 0, i32 1
  %6652 = getelementptr inbounds %struct.Reg, %struct.Reg* %6651, i32 0, i32 0
  %RAX.i1023 = bitcast %union.anon* %6652 to i64*
  %6653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6654 = getelementptr inbounds %struct.GPR, %struct.GPR* %6653, i32 0, i32 15
  %6655 = getelementptr inbounds %struct.Reg, %struct.Reg* %6654, i32 0, i32 0
  %RBP.i1024 = bitcast %union.anon* %6655 to i64*
  %6656 = load i64, i64* %RBP.i1024
  %6657 = sub i64 %6656, 32
  %6658 = load i64, i64* %PC.i1022
  %6659 = add i64 %6658, 3
  store i64 %6659, i64* %PC.i1022
  %6660 = inttoptr i64 %6657 to i32*
  %6661 = load i32, i32* %6660
  %6662 = zext i32 %6661 to i64
  store i64 %6662, i64* %RAX.i1023, align 8
  store %struct.Memory* %loadMem_441b95, %struct.Memory** %MEMORY
  %loadMem_441b98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6664 = getelementptr inbounds %struct.GPR, %struct.GPR* %6663, i32 0, i32 33
  %6665 = getelementptr inbounds %struct.Reg, %struct.Reg* %6664, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %6665 to i64*
  %6666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6667 = getelementptr inbounds %struct.GPR, %struct.GPR* %6666, i32 0, i32 1
  %6668 = getelementptr inbounds %struct.Reg, %struct.Reg* %6667, i32 0, i32 0
  %RAX.i1021 = bitcast %union.anon* %6668 to i64*
  %6669 = load i64, i64* %RAX.i1021
  %6670 = load i64, i64* %PC.i1020
  %6671 = add i64 %6670, 3
  store i64 %6671, i64* %PC.i1020
  %6672 = trunc i64 %6669 to i32
  %6673 = add i32 1, %6672
  %6674 = zext i32 %6673 to i64
  store i64 %6674, i64* %RAX.i1021, align 8
  %6675 = icmp ult i32 %6673, %6672
  %6676 = icmp ult i32 %6673, 1
  %6677 = or i1 %6675, %6676
  %6678 = zext i1 %6677 to i8
  %6679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6678, i8* %6679, align 1
  %6680 = and i32 %6673, 255
  %6681 = call i32 @llvm.ctpop.i32(i32 %6680)
  %6682 = trunc i32 %6681 to i8
  %6683 = and i8 %6682, 1
  %6684 = xor i8 %6683, 1
  %6685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6684, i8* %6685, align 1
  %6686 = xor i64 1, %6669
  %6687 = trunc i64 %6686 to i32
  %6688 = xor i32 %6687, %6673
  %6689 = lshr i32 %6688, 4
  %6690 = trunc i32 %6689 to i8
  %6691 = and i8 %6690, 1
  %6692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6691, i8* %6692, align 1
  %6693 = icmp eq i32 %6673, 0
  %6694 = zext i1 %6693 to i8
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6694, i8* %6695, align 1
  %6696 = lshr i32 %6673, 31
  %6697 = trunc i32 %6696 to i8
  %6698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6697, i8* %6698, align 1
  %6699 = lshr i32 %6672, 31
  %6700 = xor i32 %6696, %6699
  %6701 = add i32 %6700, %6696
  %6702 = icmp eq i32 %6701, 2
  %6703 = zext i1 %6702 to i8
  %6704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6703, i8* %6704, align 1
  store %struct.Memory* %loadMem_441b98, %struct.Memory** %MEMORY
  %loadMem_441b9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6706 = getelementptr inbounds %struct.GPR, %struct.GPR* %6705, i32 0, i32 33
  %6707 = getelementptr inbounds %struct.Reg, %struct.Reg* %6706, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %6707 to i64*
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6709 = getelementptr inbounds %struct.GPR, %struct.GPR* %6708, i32 0, i32 1
  %6710 = getelementptr inbounds %struct.Reg, %struct.Reg* %6709, i32 0, i32 0
  %EAX.i1018 = bitcast %union.anon* %6710 to i32*
  %6711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6712 = getelementptr inbounds %struct.GPR, %struct.GPR* %6711, i32 0, i32 15
  %6713 = getelementptr inbounds %struct.Reg, %struct.Reg* %6712, i32 0, i32 0
  %RBP.i1019 = bitcast %union.anon* %6713 to i64*
  %6714 = load i64, i64* %RBP.i1019
  %6715 = sub i64 %6714, 32
  %6716 = load i32, i32* %EAX.i1018
  %6717 = zext i32 %6716 to i64
  %6718 = load i64, i64* %PC.i1017
  %6719 = add i64 %6718, 3
  store i64 %6719, i64* %PC.i1017
  %6720 = inttoptr i64 %6715 to i32*
  store i32 %6716, i32* %6720
  store %struct.Memory* %loadMem_441b9b, %struct.Memory** %MEMORY
  %loadMem_441b9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6722 = getelementptr inbounds %struct.GPR, %struct.GPR* %6721, i32 0, i32 33
  %6723 = getelementptr inbounds %struct.Reg, %struct.Reg* %6722, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %6723 to i64*
  %6724 = load i64, i64* %PC.i1016
  %6725 = add i64 %6724, -334
  %6726 = load i64, i64* %PC.i1016
  %6727 = add i64 %6726, 5
  store i64 %6727, i64* %PC.i1016
  %6728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6725, i64* %6728, align 8
  store %struct.Memory* %loadMem_441b9e, %struct.Memory** %MEMORY
  br label %block_.L_441a50

block_.L_441ba3:                                  ; preds = %block_.L_441a50
  %loadMem_441ba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6730 = getelementptr inbounds %struct.GPR, %struct.GPR* %6729, i32 0, i32 33
  %6731 = getelementptr inbounds %struct.Reg, %struct.Reg* %6730, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %6731 to i64*
  %6732 = load i64, i64* %PC.i1015
  %6733 = add i64 %6732, 5
  %6734 = load i64, i64* %PC.i1015
  %6735 = add i64 %6734, 5
  store i64 %6735, i64* %PC.i1015
  %6736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6733, i64* %6736, align 8
  store %struct.Memory* %loadMem_441ba3, %struct.Memory** %MEMORY
  br label %block_.L_441ba8

block_.L_441ba8:                                  ; preds = %block_.L_441ba3
  %loadMem_441ba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6738 = getelementptr inbounds %struct.GPR, %struct.GPR* %6737, i32 0, i32 33
  %6739 = getelementptr inbounds %struct.Reg, %struct.Reg* %6738, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %6739 to i64*
  %6740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6741 = getelementptr inbounds %struct.GPR, %struct.GPR* %6740, i32 0, i32 1
  %6742 = getelementptr inbounds %struct.Reg, %struct.Reg* %6741, i32 0, i32 0
  %RAX.i1013 = bitcast %union.anon* %6742 to i64*
  %6743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6744 = getelementptr inbounds %struct.GPR, %struct.GPR* %6743, i32 0, i32 15
  %6745 = getelementptr inbounds %struct.Reg, %struct.Reg* %6744, i32 0, i32 0
  %RBP.i1014 = bitcast %union.anon* %6745 to i64*
  %6746 = load i64, i64* %RBP.i1014
  %6747 = sub i64 %6746, 28
  %6748 = load i64, i64* %PC.i1012
  %6749 = add i64 %6748, 3
  store i64 %6749, i64* %PC.i1012
  %6750 = inttoptr i64 %6747 to i32*
  %6751 = load i32, i32* %6750
  %6752 = zext i32 %6751 to i64
  store i64 %6752, i64* %RAX.i1013, align 8
  store %struct.Memory* %loadMem_441ba8, %struct.Memory** %MEMORY
  %loadMem_441bab = load %struct.Memory*, %struct.Memory** %MEMORY
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6754 = getelementptr inbounds %struct.GPR, %struct.GPR* %6753, i32 0, i32 33
  %6755 = getelementptr inbounds %struct.Reg, %struct.Reg* %6754, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %6755 to i64*
  %6756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6757 = getelementptr inbounds %struct.GPR, %struct.GPR* %6756, i32 0, i32 1
  %6758 = getelementptr inbounds %struct.Reg, %struct.Reg* %6757, i32 0, i32 0
  %RAX.i1011 = bitcast %union.anon* %6758 to i64*
  %6759 = load i64, i64* %RAX.i1011
  %6760 = load i64, i64* %PC.i1010
  %6761 = add i64 %6760, 3
  store i64 %6761, i64* %PC.i1010
  %6762 = trunc i64 %6759 to i32
  %6763 = add i32 1, %6762
  %6764 = zext i32 %6763 to i64
  store i64 %6764, i64* %RAX.i1011, align 8
  %6765 = icmp ult i32 %6763, %6762
  %6766 = icmp ult i32 %6763, 1
  %6767 = or i1 %6765, %6766
  %6768 = zext i1 %6767 to i8
  %6769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6768, i8* %6769, align 1
  %6770 = and i32 %6763, 255
  %6771 = call i32 @llvm.ctpop.i32(i32 %6770)
  %6772 = trunc i32 %6771 to i8
  %6773 = and i8 %6772, 1
  %6774 = xor i8 %6773, 1
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6774, i8* %6775, align 1
  %6776 = xor i64 1, %6759
  %6777 = trunc i64 %6776 to i32
  %6778 = xor i32 %6777, %6763
  %6779 = lshr i32 %6778, 4
  %6780 = trunc i32 %6779 to i8
  %6781 = and i8 %6780, 1
  %6782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6781, i8* %6782, align 1
  %6783 = icmp eq i32 %6763, 0
  %6784 = zext i1 %6783 to i8
  %6785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6784, i8* %6785, align 1
  %6786 = lshr i32 %6763, 31
  %6787 = trunc i32 %6786 to i8
  %6788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6787, i8* %6788, align 1
  %6789 = lshr i32 %6762, 31
  %6790 = xor i32 %6786, %6789
  %6791 = add i32 %6790, %6786
  %6792 = icmp eq i32 %6791, 2
  %6793 = zext i1 %6792 to i8
  %6794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6793, i8* %6794, align 1
  store %struct.Memory* %loadMem_441bab, %struct.Memory** %MEMORY
  %loadMem_441bae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6796 = getelementptr inbounds %struct.GPR, %struct.GPR* %6795, i32 0, i32 33
  %6797 = getelementptr inbounds %struct.Reg, %struct.Reg* %6796, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %6797 to i64*
  %6798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6799 = getelementptr inbounds %struct.GPR, %struct.GPR* %6798, i32 0, i32 1
  %6800 = getelementptr inbounds %struct.Reg, %struct.Reg* %6799, i32 0, i32 0
  %EAX.i1008 = bitcast %union.anon* %6800 to i32*
  %6801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6802 = getelementptr inbounds %struct.GPR, %struct.GPR* %6801, i32 0, i32 15
  %6803 = getelementptr inbounds %struct.Reg, %struct.Reg* %6802, i32 0, i32 0
  %RBP.i1009 = bitcast %union.anon* %6803 to i64*
  %6804 = load i64, i64* %RBP.i1009
  %6805 = sub i64 %6804, 28
  %6806 = load i32, i32* %EAX.i1008
  %6807 = zext i32 %6806 to i64
  %6808 = load i64, i64* %PC.i1007
  %6809 = add i64 %6808, 3
  store i64 %6809, i64* %PC.i1007
  %6810 = inttoptr i64 %6805 to i32*
  store i32 %6806, i32* %6810
  store %struct.Memory* %loadMem_441bae, %struct.Memory** %MEMORY
  %loadMem_441bb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6812 = getelementptr inbounds %struct.GPR, %struct.GPR* %6811, i32 0, i32 33
  %6813 = getelementptr inbounds %struct.Reg, %struct.Reg* %6812, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %6813 to i64*
  %6814 = load i64, i64* %PC.i1006
  %6815 = add i64 %6814, -383
  %6816 = load i64, i64* %PC.i1006
  %6817 = add i64 %6816, 5
  store i64 %6817, i64* %PC.i1006
  %6818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6815, i64* %6818, align 8
  store %struct.Memory* %loadMem_441bb1, %struct.Memory** %MEMORY
  br label %block_.L_441a32

block_.L_441bb6:                                  ; preds = %block_.L_441a32
  %loadMem_441bb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6820 = getelementptr inbounds %struct.GPR, %struct.GPR* %6819, i32 0, i32 33
  %6821 = getelementptr inbounds %struct.Reg, %struct.Reg* %6820, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %6821 to i64*
  %6822 = load i64, i64* %PC.i1005
  %6823 = add i64 %6822, 5
  %6824 = load i64, i64* %PC.i1005
  %6825 = add i64 %6824, 5
  store i64 %6825, i64* %PC.i1005
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6823, i64* %6826, align 8
  store %struct.Memory* %loadMem_441bb6, %struct.Memory** %MEMORY
  br label %block_.L_441bbb

block_.L_441bbb:                                  ; preds = %block_.L_441bb6, %block_.L_441a26
  %loadMem_441bbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6828 = getelementptr inbounds %struct.GPR, %struct.GPR* %6827, i32 0, i32 33
  %6829 = getelementptr inbounds %struct.Reg, %struct.Reg* %6828, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %6829 to i64*
  %6830 = load i64, i64* %PC.i1004
  %6831 = add i64 %6830, 5
  %6832 = load i64, i64* %PC.i1004
  %6833 = add i64 %6832, 5
  store i64 %6833, i64* %PC.i1004
  %6834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6831, i64* %6834, align 8
  store %struct.Memory* %loadMem_441bbb, %struct.Memory** %MEMORY
  br label %block_.L_441bc0

block_.L_441bc0:                                  ; preds = %block_.L_441bbb, %block_.L_4418df
  %loadMem_441bc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6836 = getelementptr inbounds %struct.GPR, %struct.GPR* %6835, i32 0, i32 33
  %6837 = getelementptr inbounds %struct.Reg, %struct.Reg* %6836, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %6837 to i64*
  %6838 = load i64, i64* %PC.i1003
  %6839 = add i64 %6838, 5
  %6840 = load i64, i64* %PC.i1003
  %6841 = add i64 %6840, 5
  store i64 %6841, i64* %PC.i1003
  %6842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6839, i64* %6842, align 8
  store %struct.Memory* %loadMem_441bc0, %struct.Memory** %MEMORY
  br label %block_.L_441bc5

block_.L_441bc5:                                  ; preds = %block_.L_441bc0, %block_.L_441857
  %loadMem_441bc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6844 = getelementptr inbounds %struct.GPR, %struct.GPR* %6843, i32 0, i32 33
  %6845 = getelementptr inbounds %struct.Reg, %struct.Reg* %6844, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %6845 to i64*
  %6846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6847 = getelementptr inbounds %struct.GPR, %struct.GPR* %6846, i32 0, i32 15
  %6848 = getelementptr inbounds %struct.Reg, %struct.Reg* %6847, i32 0, i32 0
  %RBP.i1002 = bitcast %union.anon* %6848 to i64*
  %6849 = load i64, i64* %RBP.i1002
  %6850 = sub i64 %6849, 52
  %6851 = load i64, i64* %PC.i1001
  %6852 = add i64 %6851, 4
  store i64 %6852, i64* %PC.i1001
  %6853 = inttoptr i64 %6850 to i32*
  %6854 = load i32, i32* %6853
  %6855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6855, align 1
  %6856 = and i32 %6854, 255
  %6857 = call i32 @llvm.ctpop.i32(i32 %6856)
  %6858 = trunc i32 %6857 to i8
  %6859 = and i8 %6858, 1
  %6860 = xor i8 %6859, 1
  %6861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6860, i8* %6861, align 1
  %6862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6862, align 1
  %6863 = icmp eq i32 %6854, 0
  %6864 = zext i1 %6863 to i8
  %6865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6864, i8* %6865, align 1
  %6866 = lshr i32 %6854, 31
  %6867 = trunc i32 %6866 to i8
  %6868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6867, i8* %6868, align 1
  %6869 = lshr i32 %6854, 31
  %6870 = xor i32 %6866, %6869
  %6871 = add i32 %6870, %6869
  %6872 = icmp eq i32 %6871, 2
  %6873 = zext i1 %6872 to i8
  %6874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6873, i8* %6874, align 1
  store %struct.Memory* %loadMem_441bc5, %struct.Memory** %MEMORY
  %loadMem_441bc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6876 = getelementptr inbounds %struct.GPR, %struct.GPR* %6875, i32 0, i32 33
  %6877 = getelementptr inbounds %struct.Reg, %struct.Reg* %6876, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %6877 to i64*
  %6878 = load i64, i64* %PC.i1000
  %6879 = add i64 %6878, 49
  %6880 = load i64, i64* %PC.i1000
  %6881 = add i64 %6880, 6
  %6882 = load i64, i64* %PC.i1000
  %6883 = add i64 %6882, 6
  store i64 %6883, i64* %PC.i1000
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6885 = load i8, i8* %6884, align 1
  store i8 %6885, i8* %BRANCH_TAKEN, align 1
  %6886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6887 = icmp ne i8 %6885, 0
  %6888 = select i1 %6887, i64 %6879, i64 %6881
  store i64 %6888, i64* %6886, align 8
  store %struct.Memory* %loadMem_441bc9, %struct.Memory** %MEMORY
  %loadBr_441bc9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441bc9 = icmp eq i8 %loadBr_441bc9, 1
  br i1 %cmpBr_441bc9, label %block_.L_441bfa, label %block_441bcf

block_441bcf:                                     ; preds = %block_.L_441bc5
  %loadMem_441bcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6890 = getelementptr inbounds %struct.GPR, %struct.GPR* %6889, i32 0, i32 33
  %6891 = getelementptr inbounds %struct.Reg, %struct.Reg* %6890, i32 0, i32 0
  %PC.i998 = bitcast %union.anon* %6891 to i64*
  %6892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6893 = getelementptr inbounds %struct.GPR, %struct.GPR* %6892, i32 0, i32 1
  %6894 = getelementptr inbounds %struct.Reg, %struct.Reg* %6893, i32 0, i32 0
  %RAX.i999 = bitcast %union.anon* %6894 to i64*
  %6895 = load i64, i64* %PC.i998
  %6896 = add i64 %6895, 8
  store i64 %6896, i64* %PC.i998
  %6897 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6897, i64* %RAX.i999, align 8
  store %struct.Memory* %loadMem_441bcf, %struct.Memory** %MEMORY
  %loadMem_441bd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6899 = getelementptr inbounds %struct.GPR, %struct.GPR* %6898, i32 0, i32 33
  %6900 = getelementptr inbounds %struct.Reg, %struct.Reg* %6899, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %6900 to i64*
  %6901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6902 = getelementptr inbounds %struct.GPR, %struct.GPR* %6901, i32 0, i32 1
  %6903 = getelementptr inbounds %struct.Reg, %struct.Reg* %6902, i32 0, i32 0
  %RAX.i997 = bitcast %union.anon* %6903 to i64*
  %6904 = load i64, i64* %RAX.i997
  %6905 = add i64 %6904, 24
  %6906 = load i64, i64* %PC.i996
  %6907 = add i64 %6906, 4
  store i64 %6907, i64* %PC.i996
  %6908 = inttoptr i64 %6905 to i32*
  %6909 = load i32, i32* %6908
  %6910 = sub i32 %6909, 3
  %6911 = icmp ult i32 %6909, 3
  %6912 = zext i1 %6911 to i8
  %6913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6912, i8* %6913, align 1
  %6914 = and i32 %6910, 255
  %6915 = call i32 @llvm.ctpop.i32(i32 %6914)
  %6916 = trunc i32 %6915 to i8
  %6917 = and i8 %6916, 1
  %6918 = xor i8 %6917, 1
  %6919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6918, i8* %6919, align 1
  %6920 = xor i32 %6909, 3
  %6921 = xor i32 %6920, %6910
  %6922 = lshr i32 %6921, 4
  %6923 = trunc i32 %6922 to i8
  %6924 = and i8 %6923, 1
  %6925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6924, i8* %6925, align 1
  %6926 = icmp eq i32 %6910, 0
  %6927 = zext i1 %6926 to i8
  %6928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6927, i8* %6928, align 1
  %6929 = lshr i32 %6910, 31
  %6930 = trunc i32 %6929 to i8
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6930, i8* %6931, align 1
  %6932 = lshr i32 %6909, 31
  %6933 = xor i32 %6929, %6932
  %6934 = add i32 %6933, %6932
  %6935 = icmp eq i32 %6934, 2
  %6936 = zext i1 %6935 to i8
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6936, i8* %6937, align 1
  store %struct.Memory* %loadMem_441bd7, %struct.Memory** %MEMORY
  %loadMem_441bdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6939 = getelementptr inbounds %struct.GPR, %struct.GPR* %6938, i32 0, i32 33
  %6940 = getelementptr inbounds %struct.Reg, %struct.Reg* %6939, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %6940 to i64*
  %6941 = load i64, i64* %PC.i995
  %6942 = add i64 %6941, 31
  %6943 = load i64, i64* %PC.i995
  %6944 = add i64 %6943, 6
  %6945 = load i64, i64* %PC.i995
  %6946 = add i64 %6945, 6
  store i64 %6946, i64* %PC.i995
  %6947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6948 = load i8, i8* %6947, align 1
  %6949 = icmp eq i8 %6948, 0
  %6950 = zext i1 %6949 to i8
  store i8 %6950, i8* %BRANCH_TAKEN, align 1
  %6951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6952 = select i1 %6949, i64 %6942, i64 %6944
  store i64 %6952, i64* %6951, align 8
  store %struct.Memory* %loadMem_441bdb, %struct.Memory** %MEMORY
  %loadBr_441bdb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441bdb = icmp eq i8 %loadBr_441bdb, 1
  br i1 %cmpBr_441bdb, label %block_.L_441bfa, label %block_441be1

block_441be1:                                     ; preds = %block_441bcf
  %loadMem_441be1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6954 = getelementptr inbounds %struct.GPR, %struct.GPR* %6953, i32 0, i32 33
  %6955 = getelementptr inbounds %struct.Reg, %struct.Reg* %6954, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %6955 to i64*
  %6956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6957 = getelementptr inbounds %struct.GPR, %struct.GPR* %6956, i32 0, i32 11
  %6958 = getelementptr inbounds %struct.Reg, %struct.Reg* %6957, i32 0, i32 0
  %RDI.i993 = bitcast %union.anon* %6958 to i64*
  %6959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6960 = getelementptr inbounds %struct.GPR, %struct.GPR* %6959, i32 0, i32 15
  %6961 = getelementptr inbounds %struct.Reg, %struct.Reg* %6960, i32 0, i32 0
  %RBP.i994 = bitcast %union.anon* %6961 to i64*
  %6962 = load i64, i64* %RBP.i994
  %6963 = sub i64 %6962, 12
  %6964 = load i64, i64* %PC.i992
  %6965 = add i64 %6964, 3
  store i64 %6965, i64* %PC.i992
  %6966 = inttoptr i64 %6963 to i32*
  %6967 = load i32, i32* %6966
  %6968 = zext i32 %6967 to i64
  store i64 %6968, i64* %RDI.i993, align 8
  store %struct.Memory* %loadMem_441be1, %struct.Memory** %MEMORY
  %loadMem_441be4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6970 = getelementptr inbounds %struct.GPR, %struct.GPR* %6969, i32 0, i32 33
  %6971 = getelementptr inbounds %struct.Reg, %struct.Reg* %6970, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %6971 to i64*
  %6972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6973 = getelementptr inbounds %struct.GPR, %struct.GPR* %6972, i32 0, i32 1
  %6974 = getelementptr inbounds %struct.Reg, %struct.Reg* %6973, i32 0, i32 0
  %RAX.i990 = bitcast %union.anon* %6974 to i64*
  %6975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6976 = getelementptr inbounds %struct.GPR, %struct.GPR* %6975, i32 0, i32 15
  %6977 = getelementptr inbounds %struct.Reg, %struct.Reg* %6976, i32 0, i32 0
  %RBP.i991 = bitcast %union.anon* %6977 to i64*
  %6978 = load i64, i64* %RBP.i991
  %6979 = sub i64 %6978, 8
  %6980 = load i64, i64* %PC.i989
  %6981 = add i64 %6980, 4
  store i64 %6981, i64* %PC.i989
  %6982 = inttoptr i64 %6979 to i64*
  %6983 = load i64, i64* %6982
  store i64 %6983, i64* %RAX.i990, align 8
  store %struct.Memory* %loadMem_441be4, %struct.Memory** %MEMORY
  %loadMem_441be8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6985 = getelementptr inbounds %struct.GPR, %struct.GPR* %6984, i32 0, i32 33
  %6986 = getelementptr inbounds %struct.Reg, %struct.Reg* %6985, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %6986 to i64*
  %6987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6988 = getelementptr inbounds %struct.GPR, %struct.GPR* %6987, i32 0, i32 1
  %6989 = getelementptr inbounds %struct.Reg, %struct.Reg* %6988, i32 0, i32 0
  %RAX.i987 = bitcast %union.anon* %6989 to i64*
  %6990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6991 = getelementptr inbounds %struct.GPR, %struct.GPR* %6990, i32 0, i32 9
  %6992 = getelementptr inbounds %struct.Reg, %struct.Reg* %6991, i32 0, i32 0
  %RSI.i988 = bitcast %union.anon* %6992 to i64*
  %6993 = load i64, i64* %RAX.i987
  %6994 = load i64, i64* %PC.i986
  %6995 = add i64 %6994, 2
  store i64 %6995, i64* %PC.i986
  %6996 = inttoptr i64 %6993 to i32*
  %6997 = load i32, i32* %6996
  %6998 = zext i32 %6997 to i64
  store i64 %6998, i64* %RSI.i988, align 8
  store %struct.Memory* %loadMem_441be8, %struct.Memory** %MEMORY
  %loadMem1_441bea = load %struct.Memory*, %struct.Memory** %MEMORY
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7000 = getelementptr inbounds %struct.GPR, %struct.GPR* %6999, i32 0, i32 33
  %7001 = getelementptr inbounds %struct.Reg, %struct.Reg* %7000, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %7001 to i64*
  %7002 = load i64, i64* %PC.i985
  %7003 = add i64 %7002, -215354
  %7004 = load i64, i64* %PC.i985
  %7005 = add i64 %7004, 5
  %7006 = load i64, i64* %PC.i985
  %7007 = add i64 %7006, 5
  store i64 %7007, i64* %PC.i985
  %7008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7009 = load i64, i64* %7008, align 8
  %7010 = add i64 %7009, -8
  %7011 = inttoptr i64 %7010 to i64*
  store i64 %7005, i64* %7011
  store i64 %7010, i64* %7008, align 8
  %7012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7003, i64* %7012, align 8
  store %struct.Memory* %loadMem1_441bea, %struct.Memory** %MEMORY
  %loadMem2_441bea = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_441bea = load i64, i64* %3
  %call2_441bea = call %struct.Memory* @sub_40d2b0.dct_chroma_sp(%struct.State* %0, i64 %loadPC_441bea, %struct.Memory* %loadMem2_441bea)
  store %struct.Memory* %call2_441bea, %struct.Memory** %MEMORY
  %loadMem_441bef = load %struct.Memory*, %struct.Memory** %MEMORY
  %7013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7014 = getelementptr inbounds %struct.GPR, %struct.GPR* %7013, i32 0, i32 33
  %7015 = getelementptr inbounds %struct.Reg, %struct.Reg* %7014, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %7015 to i64*
  %7016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7017 = getelementptr inbounds %struct.GPR, %struct.GPR* %7016, i32 0, i32 5
  %7018 = getelementptr inbounds %struct.Reg, %struct.Reg* %7017, i32 0, i32 0
  %RCX.i983 = bitcast %union.anon* %7018 to i64*
  %7019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7020 = getelementptr inbounds %struct.GPR, %struct.GPR* %7019, i32 0, i32 15
  %7021 = getelementptr inbounds %struct.Reg, %struct.Reg* %7020, i32 0, i32 0
  %RBP.i984 = bitcast %union.anon* %7021 to i64*
  %7022 = load i64, i64* %RBP.i984
  %7023 = sub i64 %7022, 8
  %7024 = load i64, i64* %PC.i982
  %7025 = add i64 %7024, 4
  store i64 %7025, i64* %PC.i982
  %7026 = inttoptr i64 %7023 to i64*
  %7027 = load i64, i64* %7026
  store i64 %7027, i64* %RCX.i983, align 8
  store %struct.Memory* %loadMem_441bef, %struct.Memory** %MEMORY
  %loadMem_441bf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7029 = getelementptr inbounds %struct.GPR, %struct.GPR* %7028, i32 0, i32 33
  %7030 = getelementptr inbounds %struct.Reg, %struct.Reg* %7029, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %7030 to i64*
  %7031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7032 = getelementptr inbounds %struct.GPR, %struct.GPR* %7031, i32 0, i32 1
  %7033 = getelementptr inbounds %struct.Reg, %struct.Reg* %7032, i32 0, i32 0
  %EAX.i980 = bitcast %union.anon* %7033 to i32*
  %7034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7035 = getelementptr inbounds %struct.GPR, %struct.GPR* %7034, i32 0, i32 5
  %7036 = getelementptr inbounds %struct.Reg, %struct.Reg* %7035, i32 0, i32 0
  %RCX.i981 = bitcast %union.anon* %7036 to i64*
  %7037 = load i64, i64* %RCX.i981
  %7038 = load i32, i32* %EAX.i980
  %7039 = zext i32 %7038 to i64
  %7040 = load i64, i64* %PC.i979
  %7041 = add i64 %7040, 2
  store i64 %7041, i64* %PC.i979
  %7042 = inttoptr i64 %7037 to i32*
  store i32 %7038, i32* %7042
  store %struct.Memory* %loadMem_441bf3, %struct.Memory** %MEMORY
  %loadMem_441bf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7044 = getelementptr inbounds %struct.GPR, %struct.GPR* %7043, i32 0, i32 33
  %7045 = getelementptr inbounds %struct.Reg, %struct.Reg* %7044, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %7045 to i64*
  %7046 = load i64, i64* %PC.i978
  %7047 = add i64 %7046, 511
  %7048 = load i64, i64* %PC.i978
  %7049 = add i64 %7048, 5
  store i64 %7049, i64* %PC.i978
  %7050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7047, i64* %7050, align 8
  store %struct.Memory* %loadMem_441bf5, %struct.Memory** %MEMORY
  br label %block_.L_441df4

block_.L_441bfa:                                  ; preds = %block_441bcf, %block_.L_441bc5
  %loadMem_441bfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7052 = getelementptr inbounds %struct.GPR, %struct.GPR* %7051, i32 0, i32 33
  %7053 = getelementptr inbounds %struct.Reg, %struct.Reg* %7052, i32 0, i32 0
  %PC.i976 = bitcast %union.anon* %7053 to i64*
  %7054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7055 = getelementptr inbounds %struct.GPR, %struct.GPR* %7054, i32 0, i32 1
  %7056 = getelementptr inbounds %struct.Reg, %struct.Reg* %7055, i32 0, i32 0
  %RAX.i977 = bitcast %union.anon* %7056 to i64*
  %7057 = load i64, i64* %PC.i976
  %7058 = add i64 %7057, 8
  store i64 %7058, i64* %PC.i976
  %7059 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7059, i64* %RAX.i977, align 8
  store %struct.Memory* %loadMem_441bfa, %struct.Memory** %MEMORY
  %loadMem_441c02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7061 = getelementptr inbounds %struct.GPR, %struct.GPR* %7060, i32 0, i32 33
  %7062 = getelementptr inbounds %struct.Reg, %struct.Reg* %7061, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %7062 to i64*
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7064 = getelementptr inbounds %struct.GPR, %struct.GPR* %7063, i32 0, i32 1
  %7065 = getelementptr inbounds %struct.Reg, %struct.Reg* %7064, i32 0, i32 0
  %RAX.i975 = bitcast %union.anon* %7065 to i64*
  %7066 = load i64, i64* %RAX.i975
  %7067 = add i64 %7066, 72392
  %7068 = load i64, i64* %PC.i974
  %7069 = add i64 %7068, 7
  store i64 %7069, i64* %PC.i974
  %7070 = inttoptr i64 %7067 to i32*
  %7071 = load i32, i32* %7070
  %7072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7072, align 1
  %7073 = and i32 %7071, 255
  %7074 = call i32 @llvm.ctpop.i32(i32 %7073)
  %7075 = trunc i32 %7074 to i8
  %7076 = and i8 %7075, 1
  %7077 = xor i8 %7076, 1
  %7078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7077, i8* %7078, align 1
  %7079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7079, align 1
  %7080 = icmp eq i32 %7071, 0
  %7081 = zext i1 %7080 to i8
  %7082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7081, i8* %7082, align 1
  %7083 = lshr i32 %7071, 31
  %7084 = trunc i32 %7083 to i8
  %7085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7084, i8* %7085, align 1
  %7086 = lshr i32 %7071, 31
  %7087 = xor i32 %7083, %7086
  %7088 = add i32 %7087, %7086
  %7089 = icmp eq i32 %7088, 2
  %7090 = zext i1 %7089 to i8
  %7091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7090, i8* %7091, align 1
  store %struct.Memory* %loadMem_441c02, %struct.Memory** %MEMORY
  %loadMem_441c09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7093 = getelementptr inbounds %struct.GPR, %struct.GPR* %7092, i32 0, i32 33
  %7094 = getelementptr inbounds %struct.Reg, %struct.Reg* %7093, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %7094 to i64*
  %7095 = load i64, i64* %PC.i973
  %7096 = add i64 %7095, 486
  %7097 = load i64, i64* %PC.i973
  %7098 = add i64 %7097, 6
  %7099 = load i64, i64* %PC.i973
  %7100 = add i64 %7099, 6
  store i64 %7100, i64* %PC.i973
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7102 = load i8, i8* %7101, align 1
  %7103 = icmp eq i8 %7102, 0
  %7104 = zext i1 %7103 to i8
  store i8 %7104, i8* %BRANCH_TAKEN, align 1
  %7105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7106 = select i1 %7103, i64 %7096, i64 %7098
  store i64 %7106, i64* %7105, align 8
  store %struct.Memory* %loadMem_441c09, %struct.Memory** %MEMORY
  %loadBr_441c09 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441c09 = icmp eq i8 %loadBr_441c09, 1
  br i1 %cmpBr_441c09, label %block_.L_441def, label %block_441c0f

block_441c0f:                                     ; preds = %block_.L_441bfa
  %loadMem_441c0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7108 = getelementptr inbounds %struct.GPR, %struct.GPR* %7107, i32 0, i32 33
  %7109 = getelementptr inbounds %struct.Reg, %struct.Reg* %7108, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %7109 to i64*
  %7110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7111 = getelementptr inbounds %struct.GPR, %struct.GPR* %7110, i32 0, i32 15
  %7112 = getelementptr inbounds %struct.Reg, %struct.Reg* %7111, i32 0, i32 0
  %RBP.i972 = bitcast %union.anon* %7112 to i64*
  %7113 = load i64, i64* %RBP.i972
  %7114 = sub i64 %7113, 52
  %7115 = load i64, i64* %PC.i971
  %7116 = add i64 %7115, 4
  store i64 %7116, i64* %PC.i971
  %7117 = inttoptr i64 %7114 to i32*
  %7118 = load i32, i32* %7117
  %7119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7119, align 1
  %7120 = and i32 %7118, 255
  %7121 = call i32 @llvm.ctpop.i32(i32 %7120)
  %7122 = trunc i32 %7121 to i8
  %7123 = and i8 %7122, 1
  %7124 = xor i8 %7123, 1
  %7125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7124, i8* %7125, align 1
  %7126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7126, align 1
  %7127 = icmp eq i32 %7118, 0
  %7128 = zext i1 %7127 to i8
  %7129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7128, i8* %7129, align 1
  %7130 = lshr i32 %7118, 31
  %7131 = trunc i32 %7130 to i8
  %7132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7131, i8* %7132, align 1
  %7133 = lshr i32 %7118, 31
  %7134 = xor i32 %7130, %7133
  %7135 = add i32 %7134, %7133
  %7136 = icmp eq i32 %7135, 2
  %7137 = zext i1 %7136 to i8
  %7138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7137, i8* %7138, align 1
  store %struct.Memory* %loadMem_441c0f, %struct.Memory** %MEMORY
  %loadMem_441c13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7140 = getelementptr inbounds %struct.GPR, %struct.GPR* %7139, i32 0, i32 33
  %7141 = getelementptr inbounds %struct.Reg, %struct.Reg* %7140, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %7141 to i64*
  %7142 = load i64, i64* %PC.i970
  %7143 = add i64 %7142, 476
  %7144 = load i64, i64* %PC.i970
  %7145 = add i64 %7144, 6
  %7146 = load i64, i64* %PC.i970
  %7147 = add i64 %7146, 6
  store i64 %7147, i64* %PC.i970
  %7148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7149 = load i8, i8* %7148, align 1
  %7150 = icmp eq i8 %7149, 0
  %7151 = zext i1 %7150 to i8
  store i8 %7151, i8* %BRANCH_TAKEN, align 1
  %7152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7153 = select i1 %7150, i64 %7143, i64 %7145
  store i64 %7153, i64* %7152, align 8
  store %struct.Memory* %loadMem_441c13, %struct.Memory** %MEMORY
  %loadBr_441c13 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441c13 = icmp eq i8 %loadBr_441c13, 1
  br i1 %cmpBr_441c13, label %block_.L_441def, label %block_441c19

block_441c19:                                     ; preds = %block_441c0f
  %loadMem_441c19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7155 = getelementptr inbounds %struct.GPR, %struct.GPR* %7154, i32 0, i32 33
  %7156 = getelementptr inbounds %struct.Reg, %struct.Reg* %7155, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %7156 to i64*
  %7157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7158 = getelementptr inbounds %struct.GPR, %struct.GPR* %7157, i32 0, i32 1
  %7159 = getelementptr inbounds %struct.Reg, %struct.Reg* %7158, i32 0, i32 0
  %RAX.i969 = bitcast %union.anon* %7159 to i64*
  %7160 = load i64, i64* %PC.i968
  %7161 = add i64 %7160, 8
  store i64 %7161, i64* %PC.i968
  %7162 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7162, i64* %RAX.i969, align 8
  store %struct.Memory* %loadMem_441c19, %struct.Memory** %MEMORY
  %loadMem_441c21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7164 = getelementptr inbounds %struct.GPR, %struct.GPR* %7163, i32 0, i32 33
  %7165 = getelementptr inbounds %struct.Reg, %struct.Reg* %7164, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %7165 to i64*
  %7166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7167 = getelementptr inbounds %struct.GPR, %struct.GPR* %7166, i32 0, i32 1
  %7168 = getelementptr inbounds %struct.Reg, %struct.Reg* %7167, i32 0, i32 0
  %RAX.i967 = bitcast %union.anon* %7168 to i64*
  %7169 = load i64, i64* %RAX.i967
  %7170 = add i64 %7169, 24
  %7171 = load i64, i64* %PC.i966
  %7172 = add i64 %7171, 4
  store i64 %7172, i64* %PC.i966
  %7173 = inttoptr i64 %7170 to i32*
  %7174 = load i32, i32* %7173
  %7175 = sub i32 %7174, 3
  %7176 = icmp ult i32 %7174, 3
  %7177 = zext i1 %7176 to i8
  %7178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7177, i8* %7178, align 1
  %7179 = and i32 %7175, 255
  %7180 = call i32 @llvm.ctpop.i32(i32 %7179)
  %7181 = trunc i32 %7180 to i8
  %7182 = and i8 %7181, 1
  %7183 = xor i8 %7182, 1
  %7184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7183, i8* %7184, align 1
  %7185 = xor i32 %7174, 3
  %7186 = xor i32 %7185, %7175
  %7187 = lshr i32 %7186, 4
  %7188 = trunc i32 %7187 to i8
  %7189 = and i8 %7188, 1
  %7190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7189, i8* %7190, align 1
  %7191 = icmp eq i32 %7175, 0
  %7192 = zext i1 %7191 to i8
  %7193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7192, i8* %7193, align 1
  %7194 = lshr i32 %7175, 31
  %7195 = trunc i32 %7194 to i8
  %7196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7195, i8* %7196, align 1
  %7197 = lshr i32 %7174, 31
  %7198 = xor i32 %7194, %7197
  %7199 = add i32 %7198, %7197
  %7200 = icmp eq i32 %7199, 2
  %7201 = zext i1 %7200 to i8
  %7202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7201, i8* %7202, align 1
  store %struct.Memory* %loadMem_441c21, %struct.Memory** %MEMORY
  %loadMem_441c25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7204 = getelementptr inbounds %struct.GPR, %struct.GPR* %7203, i32 0, i32 33
  %7205 = getelementptr inbounds %struct.Reg, %struct.Reg* %7204, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %7205 to i64*
  %7206 = load i64, i64* %PC.i965
  %7207 = add i64 %7206, 147
  %7208 = load i64, i64* %PC.i965
  %7209 = add i64 %7208, 6
  %7210 = load i64, i64* %PC.i965
  %7211 = add i64 %7210, 6
  store i64 %7211, i64* %PC.i965
  %7212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7213 = load i8, i8* %7212, align 1
  %7214 = icmp eq i8 %7213, 0
  %7215 = zext i1 %7214 to i8
  store i8 %7215, i8* %BRANCH_TAKEN, align 1
  %7216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7217 = select i1 %7214, i64 %7207, i64 %7209
  store i64 %7217, i64* %7216, align 8
  store %struct.Memory* %loadMem_441c25, %struct.Memory** %MEMORY
  %loadBr_441c25 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441c25 = icmp eq i8 %loadBr_441c25, 1
  br i1 %cmpBr_441c25, label %block_.L_441cb8, label %block_441c2b

block_441c2b:                                     ; preds = %block_441c19
  %loadMem_441c2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7219 = getelementptr inbounds %struct.GPR, %struct.GPR* %7218, i32 0, i32 33
  %7220 = getelementptr inbounds %struct.Reg, %struct.Reg* %7219, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %7220 to i64*
  %7221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7222 = getelementptr inbounds %struct.GPR, %struct.GPR* %7221, i32 0, i32 1
  %7223 = getelementptr inbounds %struct.Reg, %struct.Reg* %7222, i32 0, i32 0
  %RAX.i964 = bitcast %union.anon* %7223 to i64*
  %7224 = load i64, i64* %PC.i963
  %7225 = add i64 %7224, 8
  store i64 %7225, i64* %PC.i963
  %7226 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7226, i64* %RAX.i964, align 8
  store %struct.Memory* %loadMem_441c2b, %struct.Memory** %MEMORY
  %loadMem_441c33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7228 = getelementptr inbounds %struct.GPR, %struct.GPR* %7227, i32 0, i32 33
  %7229 = getelementptr inbounds %struct.Reg, %struct.Reg* %7228, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %7229 to i64*
  %7230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7231 = getelementptr inbounds %struct.GPR, %struct.GPR* %7230, i32 0, i32 1
  %7232 = getelementptr inbounds %struct.Reg, %struct.Reg* %7231, i32 0, i32 0
  %RAX.i962 = bitcast %union.anon* %7232 to i64*
  %7233 = load i64, i64* %RAX.i962
  %7234 = add i64 %7233, 14168
  %7235 = load i64, i64* %PC.i961
  %7236 = add i64 %7235, 7
  store i64 %7236, i64* %PC.i961
  %7237 = inttoptr i64 %7234 to i64*
  %7238 = load i64, i64* %7237
  store i64 %7238, i64* %RAX.i962, align 8
  store %struct.Memory* %loadMem_441c33, %struct.Memory** %MEMORY
  %loadMem_441c3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7240 = getelementptr inbounds %struct.GPR, %struct.GPR* %7239, i32 0, i32 33
  %7241 = getelementptr inbounds %struct.Reg, %struct.Reg* %7240, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %7241 to i64*
  %7242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7243 = getelementptr inbounds %struct.GPR, %struct.GPR* %7242, i32 0, i32 5
  %7244 = getelementptr inbounds %struct.Reg, %struct.Reg* %7243, i32 0, i32 0
  %RCX.i960 = bitcast %union.anon* %7244 to i64*
  %7245 = load i64, i64* %PC.i959
  %7246 = add i64 %7245, 8
  store i64 %7246, i64* %PC.i959
  %7247 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7247, i64* %RCX.i960, align 8
  store %struct.Memory* %loadMem_441c3a, %struct.Memory** %MEMORY
  %loadMem_441c42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7249 = getelementptr inbounds %struct.GPR, %struct.GPR* %7248, i32 0, i32 33
  %7250 = getelementptr inbounds %struct.Reg, %struct.Reg* %7249, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %7250 to i64*
  %7251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7252 = getelementptr inbounds %struct.GPR, %struct.GPR* %7251, i32 0, i32 5
  %7253 = getelementptr inbounds %struct.Reg, %struct.Reg* %7252, i32 0, i32 0
  %RCX.i958 = bitcast %union.anon* %7253 to i64*
  %7254 = load i64, i64* %RCX.i958
  %7255 = add i64 %7254, 12
  %7256 = load i64, i64* %PC.i957
  %7257 = add i64 %7256, 4
  store i64 %7257, i64* %PC.i957
  %7258 = inttoptr i64 %7255 to i32*
  %7259 = load i32, i32* %7258
  %7260 = sext i32 %7259 to i64
  store i64 %7260, i64* %RCX.i958, align 8
  store %struct.Memory* %loadMem_441c42, %struct.Memory** %MEMORY
  %loadMem_441c46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7262 = getelementptr inbounds %struct.GPR, %struct.GPR* %7261, i32 0, i32 33
  %7263 = getelementptr inbounds %struct.Reg, %struct.Reg* %7262, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %7263 to i64*
  %7264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7265 = getelementptr inbounds %struct.GPR, %struct.GPR* %7264, i32 0, i32 5
  %7266 = getelementptr inbounds %struct.Reg, %struct.Reg* %7265, i32 0, i32 0
  %RCX.i956 = bitcast %union.anon* %7266 to i64*
  %7267 = load i64, i64* %RCX.i956
  %7268 = load i64, i64* %PC.i955
  %7269 = add i64 %7268, 7
  store i64 %7269, i64* %PC.i955
  %7270 = sext i64 %7267 to i128
  %7271 = and i128 %7270, -18446744073709551616
  %7272 = zext i64 %7267 to i128
  %7273 = or i128 %7271, %7272
  %7274 = mul i128 632, %7273
  %7275 = trunc i128 %7274 to i64
  store i64 %7275, i64* %RCX.i956, align 8
  %7276 = sext i64 %7275 to i128
  %7277 = icmp ne i128 %7276, %7274
  %7278 = zext i1 %7277 to i8
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7278, i8* %7279, align 1
  %7280 = trunc i128 %7274 to i32
  %7281 = and i32 %7280, 255
  %7282 = call i32 @llvm.ctpop.i32(i32 %7281)
  %7283 = trunc i32 %7282 to i8
  %7284 = and i8 %7283, 1
  %7285 = xor i8 %7284, 1
  %7286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7285, i8* %7286, align 1
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7287, align 1
  %7288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7288, align 1
  %7289 = lshr i64 %7275, 63
  %7290 = trunc i64 %7289 to i8
  %7291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7290, i8* %7291, align 1
  %7292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7278, i8* %7292, align 1
  store %struct.Memory* %loadMem_441c46, %struct.Memory** %MEMORY
  %loadMem_441c4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7294 = getelementptr inbounds %struct.GPR, %struct.GPR* %7293, i32 0, i32 33
  %7295 = getelementptr inbounds %struct.Reg, %struct.Reg* %7294, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %7295 to i64*
  %7296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7297 = getelementptr inbounds %struct.GPR, %struct.GPR* %7296, i32 0, i32 1
  %7298 = getelementptr inbounds %struct.Reg, %struct.Reg* %7297, i32 0, i32 0
  %RAX.i953 = bitcast %union.anon* %7298 to i64*
  %7299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7300 = getelementptr inbounds %struct.GPR, %struct.GPR* %7299, i32 0, i32 5
  %7301 = getelementptr inbounds %struct.Reg, %struct.Reg* %7300, i32 0, i32 0
  %RCX.i954 = bitcast %union.anon* %7301 to i64*
  %7302 = load i64, i64* %RAX.i953
  %7303 = load i64, i64* %RCX.i954
  %7304 = load i64, i64* %PC.i952
  %7305 = add i64 %7304, 3
  store i64 %7305, i64* %PC.i952
  %7306 = add i64 %7303, %7302
  store i64 %7306, i64* %RAX.i953, align 8
  %7307 = icmp ult i64 %7306, %7302
  %7308 = icmp ult i64 %7306, %7303
  %7309 = or i1 %7307, %7308
  %7310 = zext i1 %7309 to i8
  %7311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7310, i8* %7311, align 1
  %7312 = trunc i64 %7306 to i32
  %7313 = and i32 %7312, 255
  %7314 = call i32 @llvm.ctpop.i32(i32 %7313)
  %7315 = trunc i32 %7314 to i8
  %7316 = and i8 %7315, 1
  %7317 = xor i8 %7316, 1
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7317, i8* %7318, align 1
  %7319 = xor i64 %7303, %7302
  %7320 = xor i64 %7319, %7306
  %7321 = lshr i64 %7320, 4
  %7322 = trunc i64 %7321 to i8
  %7323 = and i8 %7322, 1
  %7324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7323, i8* %7324, align 1
  %7325 = icmp eq i64 %7306, 0
  %7326 = zext i1 %7325 to i8
  %7327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7326, i8* %7327, align 1
  %7328 = lshr i64 %7306, 63
  %7329 = trunc i64 %7328 to i8
  %7330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7329, i8* %7330, align 1
  %7331 = lshr i64 %7302, 63
  %7332 = lshr i64 %7303, 63
  %7333 = xor i64 %7328, %7331
  %7334 = xor i64 %7328, %7332
  %7335 = add i64 %7333, %7334
  %7336 = icmp eq i64 %7335, 2
  %7337 = zext i1 %7336 to i8
  %7338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7337, i8* %7338, align 1
  store %struct.Memory* %loadMem_441c4d, %struct.Memory** %MEMORY
  %loadMem_441c50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7340 = getelementptr inbounds %struct.GPR, %struct.GPR* %7339, i32 0, i32 33
  %7341 = getelementptr inbounds %struct.Reg, %struct.Reg* %7340, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %7341 to i64*
  %7342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7343 = getelementptr inbounds %struct.GPR, %struct.GPR* %7342, i32 0, i32 1
  %7344 = getelementptr inbounds %struct.Reg, %struct.Reg* %7343, i32 0, i32 0
  %RAX.i951 = bitcast %union.anon* %7344 to i64*
  %7345 = load i64, i64* %RAX.i951
  %7346 = add i64 %7345, 72
  %7347 = load i64, i64* %PC.i950
  %7348 = add i64 %7347, 4
  store i64 %7348, i64* %PC.i950
  %7349 = inttoptr i64 %7346 to i32*
  %7350 = load i32, i32* %7349
  %7351 = sub i32 %7350, 9
  %7352 = icmp ult i32 %7350, 9
  %7353 = zext i1 %7352 to i8
  %7354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7353, i8* %7354, align 1
  %7355 = and i32 %7351, 255
  %7356 = call i32 @llvm.ctpop.i32(i32 %7355)
  %7357 = trunc i32 %7356 to i8
  %7358 = and i8 %7357, 1
  %7359 = xor i8 %7358, 1
  %7360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7359, i8* %7360, align 1
  %7361 = xor i32 %7350, 9
  %7362 = xor i32 %7361, %7351
  %7363 = lshr i32 %7362, 4
  %7364 = trunc i32 %7363 to i8
  %7365 = and i8 %7364, 1
  %7366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7365, i8* %7366, align 1
  %7367 = icmp eq i32 %7351, 0
  %7368 = zext i1 %7367 to i8
  %7369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7368, i8* %7369, align 1
  %7370 = lshr i32 %7351, 31
  %7371 = trunc i32 %7370 to i8
  %7372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7371, i8* %7372, align 1
  %7373 = lshr i32 %7350, 31
  %7374 = xor i32 %7370, %7373
  %7375 = add i32 %7374, %7373
  %7376 = icmp eq i32 %7375, 2
  %7377 = zext i1 %7376 to i8
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7377, i8* %7378, align 1
  store %struct.Memory* %loadMem_441c50, %struct.Memory** %MEMORY
  %loadMem_441c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7380 = getelementptr inbounds %struct.GPR, %struct.GPR* %7379, i32 0, i32 33
  %7381 = getelementptr inbounds %struct.Reg, %struct.Reg* %7380, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %7381 to i64*
  %7382 = load i64, i64* %PC.i949
  %7383 = add i64 %7382, 100
  %7384 = load i64, i64* %PC.i949
  %7385 = add i64 %7384, 6
  %7386 = load i64, i64* %PC.i949
  %7387 = add i64 %7386, 6
  store i64 %7387, i64* %PC.i949
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7389 = load i8, i8* %7388, align 1
  store i8 %7389, i8* %BRANCH_TAKEN, align 1
  %7390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7391 = icmp ne i8 %7389, 0
  %7392 = select i1 %7391, i64 %7383, i64 %7385
  store i64 %7392, i64* %7390, align 8
  store %struct.Memory* %loadMem_441c54, %struct.Memory** %MEMORY
  %loadBr_441c54 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441c54 = icmp eq i8 %loadBr_441c54, 1
  br i1 %cmpBr_441c54, label %block_.L_441cb8, label %block_441c5a

block_441c5a:                                     ; preds = %block_441c2b
  %loadMem_441c5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7394 = getelementptr inbounds %struct.GPR, %struct.GPR* %7393, i32 0, i32 33
  %7395 = getelementptr inbounds %struct.Reg, %struct.Reg* %7394, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %7395 to i64*
  %7396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7397 = getelementptr inbounds %struct.GPR, %struct.GPR* %7396, i32 0, i32 1
  %7398 = getelementptr inbounds %struct.Reg, %struct.Reg* %7397, i32 0, i32 0
  %RAX.i948 = bitcast %union.anon* %7398 to i64*
  %7399 = load i64, i64* %PC.i947
  %7400 = add i64 %7399, 8
  store i64 %7400, i64* %PC.i947
  %7401 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7401, i64* %RAX.i948, align 8
  store %struct.Memory* %loadMem_441c5a, %struct.Memory** %MEMORY
  %loadMem_441c62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7403 = getelementptr inbounds %struct.GPR, %struct.GPR* %7402, i32 0, i32 33
  %7404 = getelementptr inbounds %struct.Reg, %struct.Reg* %7403, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %7404 to i64*
  %7405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7406 = getelementptr inbounds %struct.GPR, %struct.GPR* %7405, i32 0, i32 1
  %7407 = getelementptr inbounds %struct.Reg, %struct.Reg* %7406, i32 0, i32 0
  %RAX.i946 = bitcast %union.anon* %7407 to i64*
  %7408 = load i64, i64* %RAX.i946
  %7409 = add i64 %7408, 14168
  %7410 = load i64, i64* %PC.i945
  %7411 = add i64 %7410, 7
  store i64 %7411, i64* %PC.i945
  %7412 = inttoptr i64 %7409 to i64*
  %7413 = load i64, i64* %7412
  store i64 %7413, i64* %RAX.i946, align 8
  store %struct.Memory* %loadMem_441c62, %struct.Memory** %MEMORY
  %loadMem_441c69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7415 = getelementptr inbounds %struct.GPR, %struct.GPR* %7414, i32 0, i32 33
  %7416 = getelementptr inbounds %struct.Reg, %struct.Reg* %7415, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %7416 to i64*
  %7417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7418 = getelementptr inbounds %struct.GPR, %struct.GPR* %7417, i32 0, i32 5
  %7419 = getelementptr inbounds %struct.Reg, %struct.Reg* %7418, i32 0, i32 0
  %RCX.i944 = bitcast %union.anon* %7419 to i64*
  %7420 = load i64, i64* %PC.i943
  %7421 = add i64 %7420, 8
  store i64 %7421, i64* %PC.i943
  %7422 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7422, i64* %RCX.i944, align 8
  store %struct.Memory* %loadMem_441c69, %struct.Memory** %MEMORY
  %loadMem_441c71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7424 = getelementptr inbounds %struct.GPR, %struct.GPR* %7423, i32 0, i32 33
  %7425 = getelementptr inbounds %struct.Reg, %struct.Reg* %7424, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %7425 to i64*
  %7426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7427 = getelementptr inbounds %struct.GPR, %struct.GPR* %7426, i32 0, i32 5
  %7428 = getelementptr inbounds %struct.Reg, %struct.Reg* %7427, i32 0, i32 0
  %RCX.i942 = bitcast %union.anon* %7428 to i64*
  %7429 = load i64, i64* %RCX.i942
  %7430 = add i64 %7429, 12
  %7431 = load i64, i64* %PC.i941
  %7432 = add i64 %7431, 4
  store i64 %7432, i64* %PC.i941
  %7433 = inttoptr i64 %7430 to i32*
  %7434 = load i32, i32* %7433
  %7435 = sext i32 %7434 to i64
  store i64 %7435, i64* %RCX.i942, align 8
  store %struct.Memory* %loadMem_441c71, %struct.Memory** %MEMORY
  %loadMem_441c75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7437 = getelementptr inbounds %struct.GPR, %struct.GPR* %7436, i32 0, i32 33
  %7438 = getelementptr inbounds %struct.Reg, %struct.Reg* %7437, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %7438 to i64*
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7440 = getelementptr inbounds %struct.GPR, %struct.GPR* %7439, i32 0, i32 5
  %7441 = getelementptr inbounds %struct.Reg, %struct.Reg* %7440, i32 0, i32 0
  %RCX.i940 = bitcast %union.anon* %7441 to i64*
  %7442 = load i64, i64* %RCX.i940
  %7443 = load i64, i64* %PC.i939
  %7444 = add i64 %7443, 7
  store i64 %7444, i64* %PC.i939
  %7445 = sext i64 %7442 to i128
  %7446 = and i128 %7445, -18446744073709551616
  %7447 = zext i64 %7442 to i128
  %7448 = or i128 %7446, %7447
  %7449 = mul i128 632, %7448
  %7450 = trunc i128 %7449 to i64
  store i64 %7450, i64* %RCX.i940, align 8
  %7451 = sext i64 %7450 to i128
  %7452 = icmp ne i128 %7451, %7449
  %7453 = zext i1 %7452 to i8
  %7454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7453, i8* %7454, align 1
  %7455 = trunc i128 %7449 to i32
  %7456 = and i32 %7455, 255
  %7457 = call i32 @llvm.ctpop.i32(i32 %7456)
  %7458 = trunc i32 %7457 to i8
  %7459 = and i8 %7458, 1
  %7460 = xor i8 %7459, 1
  %7461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7460, i8* %7461, align 1
  %7462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7462, align 1
  %7463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7463, align 1
  %7464 = lshr i64 %7450, 63
  %7465 = trunc i64 %7464 to i8
  %7466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7465, i8* %7466, align 1
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7453, i8* %7467, align 1
  store %struct.Memory* %loadMem_441c75, %struct.Memory** %MEMORY
  %loadMem_441c7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7469 = getelementptr inbounds %struct.GPR, %struct.GPR* %7468, i32 0, i32 33
  %7470 = getelementptr inbounds %struct.Reg, %struct.Reg* %7469, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %7470 to i64*
  %7471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7472 = getelementptr inbounds %struct.GPR, %struct.GPR* %7471, i32 0, i32 1
  %7473 = getelementptr inbounds %struct.Reg, %struct.Reg* %7472, i32 0, i32 0
  %RAX.i937 = bitcast %union.anon* %7473 to i64*
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7475 = getelementptr inbounds %struct.GPR, %struct.GPR* %7474, i32 0, i32 5
  %7476 = getelementptr inbounds %struct.Reg, %struct.Reg* %7475, i32 0, i32 0
  %RCX.i938 = bitcast %union.anon* %7476 to i64*
  %7477 = load i64, i64* %RAX.i937
  %7478 = load i64, i64* %RCX.i938
  %7479 = load i64, i64* %PC.i936
  %7480 = add i64 %7479, 3
  store i64 %7480, i64* %PC.i936
  %7481 = add i64 %7478, %7477
  store i64 %7481, i64* %RAX.i937, align 8
  %7482 = icmp ult i64 %7481, %7477
  %7483 = icmp ult i64 %7481, %7478
  %7484 = or i1 %7482, %7483
  %7485 = zext i1 %7484 to i8
  %7486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7485, i8* %7486, align 1
  %7487 = trunc i64 %7481 to i32
  %7488 = and i32 %7487, 255
  %7489 = call i32 @llvm.ctpop.i32(i32 %7488)
  %7490 = trunc i32 %7489 to i8
  %7491 = and i8 %7490, 1
  %7492 = xor i8 %7491, 1
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7492, i8* %7493, align 1
  %7494 = xor i64 %7478, %7477
  %7495 = xor i64 %7494, %7481
  %7496 = lshr i64 %7495, 4
  %7497 = trunc i64 %7496 to i8
  %7498 = and i8 %7497, 1
  %7499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7498, i8* %7499, align 1
  %7500 = icmp eq i64 %7481, 0
  %7501 = zext i1 %7500 to i8
  %7502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7501, i8* %7502, align 1
  %7503 = lshr i64 %7481, 63
  %7504 = trunc i64 %7503 to i8
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7504, i8* %7505, align 1
  %7506 = lshr i64 %7477, 63
  %7507 = lshr i64 %7478, 63
  %7508 = xor i64 %7503, %7506
  %7509 = xor i64 %7503, %7507
  %7510 = add i64 %7508, %7509
  %7511 = icmp eq i64 %7510, 2
  %7512 = zext i1 %7511 to i8
  %7513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7512, i8* %7513, align 1
  store %struct.Memory* %loadMem_441c7c, %struct.Memory** %MEMORY
  %loadMem_441c7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7515 = getelementptr inbounds %struct.GPR, %struct.GPR* %7514, i32 0, i32 33
  %7516 = getelementptr inbounds %struct.Reg, %struct.Reg* %7515, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %7516 to i64*
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7518 = getelementptr inbounds %struct.GPR, %struct.GPR* %7517, i32 0, i32 1
  %7519 = getelementptr inbounds %struct.Reg, %struct.Reg* %7518, i32 0, i32 0
  %RAX.i935 = bitcast %union.anon* %7519 to i64*
  %7520 = load i64, i64* %RAX.i935
  %7521 = add i64 %7520, 72
  %7522 = load i64, i64* %PC.i934
  %7523 = add i64 %7522, 4
  store i64 %7523, i64* %PC.i934
  %7524 = inttoptr i64 %7521 to i32*
  %7525 = load i32, i32* %7524
  %7526 = sub i32 %7525, 10
  %7527 = icmp ult i32 %7525, 10
  %7528 = zext i1 %7527 to i8
  %7529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7528, i8* %7529, align 1
  %7530 = and i32 %7526, 255
  %7531 = call i32 @llvm.ctpop.i32(i32 %7530)
  %7532 = trunc i32 %7531 to i8
  %7533 = and i8 %7532, 1
  %7534 = xor i8 %7533, 1
  %7535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7534, i8* %7535, align 1
  %7536 = xor i32 %7525, 10
  %7537 = xor i32 %7536, %7526
  %7538 = lshr i32 %7537, 4
  %7539 = trunc i32 %7538 to i8
  %7540 = and i8 %7539, 1
  %7541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7540, i8* %7541, align 1
  %7542 = icmp eq i32 %7526, 0
  %7543 = zext i1 %7542 to i8
  %7544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7543, i8* %7544, align 1
  %7545 = lshr i32 %7526, 31
  %7546 = trunc i32 %7545 to i8
  %7547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7546, i8* %7547, align 1
  %7548 = lshr i32 %7525, 31
  %7549 = xor i32 %7545, %7548
  %7550 = add i32 %7549, %7548
  %7551 = icmp eq i32 %7550, 2
  %7552 = zext i1 %7551 to i8
  %7553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7552, i8* %7553, align 1
  store %struct.Memory* %loadMem_441c7f, %struct.Memory** %MEMORY
  %loadMem_441c83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7555 = getelementptr inbounds %struct.GPR, %struct.GPR* %7554, i32 0, i32 33
  %7556 = getelementptr inbounds %struct.Reg, %struct.Reg* %7555, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %7556 to i64*
  %7557 = load i64, i64* %PC.i933
  %7558 = add i64 %7557, 53
  %7559 = load i64, i64* %PC.i933
  %7560 = add i64 %7559, 6
  %7561 = load i64, i64* %PC.i933
  %7562 = add i64 %7561, 6
  store i64 %7562, i64* %PC.i933
  %7563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7564 = load i8, i8* %7563, align 1
  store i8 %7564, i8* %BRANCH_TAKEN, align 1
  %7565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7566 = icmp ne i8 %7564, 0
  %7567 = select i1 %7566, i64 %7558, i64 %7560
  store i64 %7567, i64* %7565, align 8
  store %struct.Memory* %loadMem_441c83, %struct.Memory** %MEMORY
  %loadBr_441c83 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441c83 = icmp eq i8 %loadBr_441c83, 1
  br i1 %cmpBr_441c83, label %block_.L_441cb8, label %block_441c89

block_441c89:                                     ; preds = %block_441c5a
  %loadMem_441c89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7569 = getelementptr inbounds %struct.GPR, %struct.GPR* %7568, i32 0, i32 33
  %7570 = getelementptr inbounds %struct.Reg, %struct.Reg* %7569, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %7570 to i64*
  %7571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7572 = getelementptr inbounds %struct.GPR, %struct.GPR* %7571, i32 0, i32 1
  %7573 = getelementptr inbounds %struct.Reg, %struct.Reg* %7572, i32 0, i32 0
  %RAX.i932 = bitcast %union.anon* %7573 to i64*
  %7574 = load i64, i64* %PC.i931
  %7575 = add i64 %7574, 8
  store i64 %7575, i64* %PC.i931
  %7576 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7576, i64* %RAX.i932, align 8
  store %struct.Memory* %loadMem_441c89, %struct.Memory** %MEMORY
  %loadMem_441c91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7578 = getelementptr inbounds %struct.GPR, %struct.GPR* %7577, i32 0, i32 33
  %7579 = getelementptr inbounds %struct.Reg, %struct.Reg* %7578, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %7579 to i64*
  %7580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7581 = getelementptr inbounds %struct.GPR, %struct.GPR* %7580, i32 0, i32 1
  %7582 = getelementptr inbounds %struct.Reg, %struct.Reg* %7581, i32 0, i32 0
  %RAX.i930 = bitcast %union.anon* %7582 to i64*
  %7583 = load i64, i64* %RAX.i930
  %7584 = add i64 %7583, 14168
  %7585 = load i64, i64* %PC.i929
  %7586 = add i64 %7585, 7
  store i64 %7586, i64* %PC.i929
  %7587 = inttoptr i64 %7584 to i64*
  %7588 = load i64, i64* %7587
  store i64 %7588, i64* %RAX.i930, align 8
  store %struct.Memory* %loadMem_441c91, %struct.Memory** %MEMORY
  %loadMem_441c98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7590 = getelementptr inbounds %struct.GPR, %struct.GPR* %7589, i32 0, i32 33
  %7591 = getelementptr inbounds %struct.Reg, %struct.Reg* %7590, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %7591 to i64*
  %7592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7593 = getelementptr inbounds %struct.GPR, %struct.GPR* %7592, i32 0, i32 5
  %7594 = getelementptr inbounds %struct.Reg, %struct.Reg* %7593, i32 0, i32 0
  %RCX.i928 = bitcast %union.anon* %7594 to i64*
  %7595 = load i64, i64* %PC.i927
  %7596 = add i64 %7595, 8
  store i64 %7596, i64* %PC.i927
  %7597 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7597, i64* %RCX.i928, align 8
  store %struct.Memory* %loadMem_441c98, %struct.Memory** %MEMORY
  %loadMem_441ca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7599 = getelementptr inbounds %struct.GPR, %struct.GPR* %7598, i32 0, i32 33
  %7600 = getelementptr inbounds %struct.Reg, %struct.Reg* %7599, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %7600 to i64*
  %7601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7602 = getelementptr inbounds %struct.GPR, %struct.GPR* %7601, i32 0, i32 5
  %7603 = getelementptr inbounds %struct.Reg, %struct.Reg* %7602, i32 0, i32 0
  %RCX.i926 = bitcast %union.anon* %7603 to i64*
  %7604 = load i64, i64* %RCX.i926
  %7605 = add i64 %7604, 12
  %7606 = load i64, i64* %PC.i925
  %7607 = add i64 %7606, 4
  store i64 %7607, i64* %PC.i925
  %7608 = inttoptr i64 %7605 to i32*
  %7609 = load i32, i32* %7608
  %7610 = sext i32 %7609 to i64
  store i64 %7610, i64* %RCX.i926, align 8
  store %struct.Memory* %loadMem_441ca0, %struct.Memory** %MEMORY
  %loadMem_441ca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7612 = getelementptr inbounds %struct.GPR, %struct.GPR* %7611, i32 0, i32 33
  %7613 = getelementptr inbounds %struct.Reg, %struct.Reg* %7612, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %7613 to i64*
  %7614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7615 = getelementptr inbounds %struct.GPR, %struct.GPR* %7614, i32 0, i32 5
  %7616 = getelementptr inbounds %struct.Reg, %struct.Reg* %7615, i32 0, i32 0
  %RCX.i924 = bitcast %union.anon* %7616 to i64*
  %7617 = load i64, i64* %RCX.i924
  %7618 = load i64, i64* %PC.i923
  %7619 = add i64 %7618, 7
  store i64 %7619, i64* %PC.i923
  %7620 = sext i64 %7617 to i128
  %7621 = and i128 %7620, -18446744073709551616
  %7622 = zext i64 %7617 to i128
  %7623 = or i128 %7621, %7622
  %7624 = mul i128 632, %7623
  %7625 = trunc i128 %7624 to i64
  store i64 %7625, i64* %RCX.i924, align 8
  %7626 = sext i64 %7625 to i128
  %7627 = icmp ne i128 %7626, %7624
  %7628 = zext i1 %7627 to i8
  %7629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7628, i8* %7629, align 1
  %7630 = trunc i128 %7624 to i32
  %7631 = and i32 %7630, 255
  %7632 = call i32 @llvm.ctpop.i32(i32 %7631)
  %7633 = trunc i32 %7632 to i8
  %7634 = and i8 %7633, 1
  %7635 = xor i8 %7634, 1
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7635, i8* %7636, align 1
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7637, align 1
  %7638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7638, align 1
  %7639 = lshr i64 %7625, 63
  %7640 = trunc i64 %7639 to i8
  %7641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7640, i8* %7641, align 1
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7628, i8* %7642, align 1
  store %struct.Memory* %loadMem_441ca4, %struct.Memory** %MEMORY
  %loadMem_441cab = load %struct.Memory*, %struct.Memory** %MEMORY
  %7643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7644 = getelementptr inbounds %struct.GPR, %struct.GPR* %7643, i32 0, i32 33
  %7645 = getelementptr inbounds %struct.Reg, %struct.Reg* %7644, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %7645 to i64*
  %7646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7647 = getelementptr inbounds %struct.GPR, %struct.GPR* %7646, i32 0, i32 1
  %7648 = getelementptr inbounds %struct.Reg, %struct.Reg* %7647, i32 0, i32 0
  %RAX.i921 = bitcast %union.anon* %7648 to i64*
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7650 = getelementptr inbounds %struct.GPR, %struct.GPR* %7649, i32 0, i32 5
  %7651 = getelementptr inbounds %struct.Reg, %struct.Reg* %7650, i32 0, i32 0
  %RCX.i922 = bitcast %union.anon* %7651 to i64*
  %7652 = load i64, i64* %RAX.i921
  %7653 = load i64, i64* %RCX.i922
  %7654 = load i64, i64* %PC.i920
  %7655 = add i64 %7654, 3
  store i64 %7655, i64* %PC.i920
  %7656 = add i64 %7653, %7652
  store i64 %7656, i64* %RAX.i921, align 8
  %7657 = icmp ult i64 %7656, %7652
  %7658 = icmp ult i64 %7656, %7653
  %7659 = or i1 %7657, %7658
  %7660 = zext i1 %7659 to i8
  %7661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7660, i8* %7661, align 1
  %7662 = trunc i64 %7656 to i32
  %7663 = and i32 %7662, 255
  %7664 = call i32 @llvm.ctpop.i32(i32 %7663)
  %7665 = trunc i32 %7664 to i8
  %7666 = and i8 %7665, 1
  %7667 = xor i8 %7666, 1
  %7668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7667, i8* %7668, align 1
  %7669 = xor i64 %7653, %7652
  %7670 = xor i64 %7669, %7656
  %7671 = lshr i64 %7670, 4
  %7672 = trunc i64 %7671 to i8
  %7673 = and i8 %7672, 1
  %7674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7673, i8* %7674, align 1
  %7675 = icmp eq i64 %7656, 0
  %7676 = zext i1 %7675 to i8
  %7677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7676, i8* %7677, align 1
  %7678 = lshr i64 %7656, 63
  %7679 = trunc i64 %7678 to i8
  %7680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7679, i8* %7680, align 1
  %7681 = lshr i64 %7652, 63
  %7682 = lshr i64 %7653, 63
  %7683 = xor i64 %7678, %7681
  %7684 = xor i64 %7678, %7682
  %7685 = add i64 %7683, %7684
  %7686 = icmp eq i64 %7685, 2
  %7687 = zext i1 %7686 to i8
  %7688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7687, i8* %7688, align 1
  store %struct.Memory* %loadMem_441cab, %struct.Memory** %MEMORY
  %loadMem_441cae = load %struct.Memory*, %struct.Memory** %MEMORY
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7690 = getelementptr inbounds %struct.GPR, %struct.GPR* %7689, i32 0, i32 33
  %7691 = getelementptr inbounds %struct.Reg, %struct.Reg* %7690, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %7691 to i64*
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7693 = getelementptr inbounds %struct.GPR, %struct.GPR* %7692, i32 0, i32 1
  %7694 = getelementptr inbounds %struct.Reg, %struct.Reg* %7693, i32 0, i32 0
  %RAX.i919 = bitcast %union.anon* %7694 to i64*
  %7695 = load i64, i64* %RAX.i919
  %7696 = add i64 %7695, 72
  %7697 = load i64, i64* %PC.i918
  %7698 = add i64 %7697, 4
  store i64 %7698, i64* %PC.i918
  %7699 = inttoptr i64 %7696 to i32*
  %7700 = load i32, i32* %7699
  %7701 = sub i32 %7700, 13
  %7702 = icmp ult i32 %7700, 13
  %7703 = zext i1 %7702 to i8
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7703, i8* %7704, align 1
  %7705 = and i32 %7701, 255
  %7706 = call i32 @llvm.ctpop.i32(i32 %7705)
  %7707 = trunc i32 %7706 to i8
  %7708 = and i8 %7707, 1
  %7709 = xor i8 %7708, 1
  %7710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7709, i8* %7710, align 1
  %7711 = xor i32 %7700, 13
  %7712 = xor i32 %7711, %7701
  %7713 = lshr i32 %7712, 4
  %7714 = trunc i32 %7713 to i8
  %7715 = and i8 %7714, 1
  %7716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7715, i8* %7716, align 1
  %7717 = icmp eq i32 %7701, 0
  %7718 = zext i1 %7717 to i8
  %7719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7718, i8* %7719, align 1
  %7720 = lshr i32 %7701, 31
  %7721 = trunc i32 %7720 to i8
  %7722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7721, i8* %7722, align 1
  %7723 = lshr i32 %7700, 31
  %7724 = xor i32 %7720, %7723
  %7725 = add i32 %7724, %7723
  %7726 = icmp eq i32 %7725, 2
  %7727 = zext i1 %7726 to i8
  %7728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7727, i8* %7728, align 1
  store %struct.Memory* %loadMem_441cae, %struct.Memory** %MEMORY
  %loadMem_441cb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7730 = getelementptr inbounds %struct.GPR, %struct.GPR* %7729, i32 0, i32 33
  %7731 = getelementptr inbounds %struct.Reg, %struct.Reg* %7730, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %7731 to i64*
  %7732 = load i64, i64* %PC.i917
  %7733 = add i64 %7732, 31
  %7734 = load i64, i64* %PC.i917
  %7735 = add i64 %7734, 6
  %7736 = load i64, i64* %PC.i917
  %7737 = add i64 %7736, 6
  store i64 %7737, i64* %PC.i917
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7739 = load i8, i8* %7738, align 1
  %7740 = icmp eq i8 %7739, 0
  %7741 = zext i1 %7740 to i8
  store i8 %7741, i8* %BRANCH_TAKEN, align 1
  %7742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7743 = select i1 %7740, i64 %7733, i64 %7735
  store i64 %7743, i64* %7742, align 8
  store %struct.Memory* %loadMem_441cb2, %struct.Memory** %MEMORY
  %loadBr_441cb2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441cb2 = icmp eq i8 %loadBr_441cb2, 1
  br i1 %cmpBr_441cb2, label %block_.L_441cd1, label %block_.L_441cb8

block_.L_441cb8:                                  ; preds = %block_441c89, %block_441c5a, %block_441c2b, %block_441c19
  %loadMem_441cb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7745 = getelementptr inbounds %struct.GPR, %struct.GPR* %7744, i32 0, i32 33
  %7746 = getelementptr inbounds %struct.Reg, %struct.Reg* %7745, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %7746 to i64*
  %7747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7748 = getelementptr inbounds %struct.GPR, %struct.GPR* %7747, i32 0, i32 11
  %7749 = getelementptr inbounds %struct.Reg, %struct.Reg* %7748, i32 0, i32 0
  %RDI.i915 = bitcast %union.anon* %7749 to i64*
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7751 = getelementptr inbounds %struct.GPR, %struct.GPR* %7750, i32 0, i32 15
  %7752 = getelementptr inbounds %struct.Reg, %struct.Reg* %7751, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %7752 to i64*
  %7753 = load i64, i64* %RBP.i916
  %7754 = sub i64 %7753, 12
  %7755 = load i64, i64* %PC.i914
  %7756 = add i64 %7755, 3
  store i64 %7756, i64* %PC.i914
  %7757 = inttoptr i64 %7754 to i32*
  %7758 = load i32, i32* %7757
  %7759 = zext i32 %7758 to i64
  store i64 %7759, i64* %RDI.i915, align 8
  store %struct.Memory* %loadMem_441cb8, %struct.Memory** %MEMORY
  %loadMem_441cbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7761 = getelementptr inbounds %struct.GPR, %struct.GPR* %7760, i32 0, i32 33
  %7762 = getelementptr inbounds %struct.Reg, %struct.Reg* %7761, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %7762 to i64*
  %7763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7764 = getelementptr inbounds %struct.GPR, %struct.GPR* %7763, i32 0, i32 1
  %7765 = getelementptr inbounds %struct.Reg, %struct.Reg* %7764, i32 0, i32 0
  %RAX.i912 = bitcast %union.anon* %7765 to i64*
  %7766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7767 = getelementptr inbounds %struct.GPR, %struct.GPR* %7766, i32 0, i32 15
  %7768 = getelementptr inbounds %struct.Reg, %struct.Reg* %7767, i32 0, i32 0
  %RBP.i913 = bitcast %union.anon* %7768 to i64*
  %7769 = load i64, i64* %RBP.i913
  %7770 = sub i64 %7769, 8
  %7771 = load i64, i64* %PC.i911
  %7772 = add i64 %7771, 4
  store i64 %7772, i64* %PC.i911
  %7773 = inttoptr i64 %7770 to i64*
  %7774 = load i64, i64* %7773
  store i64 %7774, i64* %RAX.i912, align 8
  store %struct.Memory* %loadMem_441cbb, %struct.Memory** %MEMORY
  %loadMem_441cbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7776 = getelementptr inbounds %struct.GPR, %struct.GPR* %7775, i32 0, i32 33
  %7777 = getelementptr inbounds %struct.Reg, %struct.Reg* %7776, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %7777 to i64*
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7779 = getelementptr inbounds %struct.GPR, %struct.GPR* %7778, i32 0, i32 1
  %7780 = getelementptr inbounds %struct.Reg, %struct.Reg* %7779, i32 0, i32 0
  %RAX.i909 = bitcast %union.anon* %7780 to i64*
  %7781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7782 = getelementptr inbounds %struct.GPR, %struct.GPR* %7781, i32 0, i32 9
  %7783 = getelementptr inbounds %struct.Reg, %struct.Reg* %7782, i32 0, i32 0
  %RSI.i910 = bitcast %union.anon* %7783 to i64*
  %7784 = load i64, i64* %RAX.i909
  %7785 = load i64, i64* %PC.i908
  %7786 = add i64 %7785, 2
  store i64 %7786, i64* %PC.i908
  %7787 = inttoptr i64 %7784 to i32*
  %7788 = load i32, i32* %7787
  %7789 = zext i32 %7788 to i64
  store i64 %7789, i64* %RSI.i910, align 8
  store %struct.Memory* %loadMem_441cbf, %struct.Memory** %MEMORY
  %loadMem1_441cc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7791 = getelementptr inbounds %struct.GPR, %struct.GPR* %7790, i32 0, i32 33
  %7792 = getelementptr inbounds %struct.Reg, %struct.Reg* %7791, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %7792 to i64*
  %7793 = load i64, i64* %PC.i907
  %7794 = add i64 %7793, -239617
  %7795 = load i64, i64* %PC.i907
  %7796 = add i64 %7795, 5
  %7797 = load i64, i64* %PC.i907
  %7798 = add i64 %7797, 5
  store i64 %7798, i64* %PC.i907
  %7799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7800 = load i64, i64* %7799, align 8
  %7801 = add i64 %7800, -8
  %7802 = inttoptr i64 %7801 to i64*
  store i64 %7796, i64* %7802
  store i64 %7801, i64* %7799, align 8
  %7803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7794, i64* %7803, align 8
  store %struct.Memory* %loadMem1_441cc1, %struct.Memory** %MEMORY
  %loadMem2_441cc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_441cc1 = load i64, i64* %3
  %call2_441cc1 = call %struct.Memory* @sub_4074c0.dct_chroma(%struct.State* %0, i64 %loadPC_441cc1, %struct.Memory* %loadMem2_441cc1)
  store %struct.Memory* %call2_441cc1, %struct.Memory** %MEMORY
  %loadMem_441cc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7805 = getelementptr inbounds %struct.GPR, %struct.GPR* %7804, i32 0, i32 33
  %7806 = getelementptr inbounds %struct.Reg, %struct.Reg* %7805, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %7806 to i64*
  %7807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7808 = getelementptr inbounds %struct.GPR, %struct.GPR* %7807, i32 0, i32 5
  %7809 = getelementptr inbounds %struct.Reg, %struct.Reg* %7808, i32 0, i32 0
  %RCX.i905 = bitcast %union.anon* %7809 to i64*
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7811 = getelementptr inbounds %struct.GPR, %struct.GPR* %7810, i32 0, i32 15
  %7812 = getelementptr inbounds %struct.Reg, %struct.Reg* %7811, i32 0, i32 0
  %RBP.i906 = bitcast %union.anon* %7812 to i64*
  %7813 = load i64, i64* %RBP.i906
  %7814 = sub i64 %7813, 8
  %7815 = load i64, i64* %PC.i904
  %7816 = add i64 %7815, 4
  store i64 %7816, i64* %PC.i904
  %7817 = inttoptr i64 %7814 to i64*
  %7818 = load i64, i64* %7817
  store i64 %7818, i64* %RCX.i905, align 8
  store %struct.Memory* %loadMem_441cc6, %struct.Memory** %MEMORY
  %loadMem_441cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %7819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7820 = getelementptr inbounds %struct.GPR, %struct.GPR* %7819, i32 0, i32 33
  %7821 = getelementptr inbounds %struct.Reg, %struct.Reg* %7820, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %7821 to i64*
  %7822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7823 = getelementptr inbounds %struct.GPR, %struct.GPR* %7822, i32 0, i32 1
  %7824 = getelementptr inbounds %struct.Reg, %struct.Reg* %7823, i32 0, i32 0
  %EAX.i902 = bitcast %union.anon* %7824 to i32*
  %7825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7826 = getelementptr inbounds %struct.GPR, %struct.GPR* %7825, i32 0, i32 5
  %7827 = getelementptr inbounds %struct.Reg, %struct.Reg* %7826, i32 0, i32 0
  %RCX.i903 = bitcast %union.anon* %7827 to i64*
  %7828 = load i64, i64* %RCX.i903
  %7829 = load i32, i32* %EAX.i902
  %7830 = zext i32 %7829 to i64
  %7831 = load i64, i64* %PC.i901
  %7832 = add i64 %7831, 2
  store i64 %7832, i64* %PC.i901
  %7833 = inttoptr i64 %7828 to i32*
  store i32 %7829, i32* %7833
  store %struct.Memory* %loadMem_441cca, %struct.Memory** %MEMORY
  %loadMem_441ccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7835 = getelementptr inbounds %struct.GPR, %struct.GPR* %7834, i32 0, i32 33
  %7836 = getelementptr inbounds %struct.Reg, %struct.Reg* %7835, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %7836 to i64*
  %7837 = load i64, i64* %PC.i900
  %7838 = add i64 %7837, 25
  %7839 = load i64, i64* %PC.i900
  %7840 = add i64 %7839, 5
  store i64 %7840, i64* %PC.i900
  %7841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7838, i64* %7841, align 8
  store %struct.Memory* %loadMem_441ccc, %struct.Memory** %MEMORY
  br label %block_.L_441ce5

block_.L_441cd1:                                  ; preds = %block_441c89
  %loadMem_441cd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7843 = getelementptr inbounds %struct.GPR, %struct.GPR* %7842, i32 0, i32 33
  %7844 = getelementptr inbounds %struct.Reg, %struct.Reg* %7843, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %7844 to i64*
  %7845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7846 = getelementptr inbounds %struct.GPR, %struct.GPR* %7845, i32 0, i32 11
  %7847 = getelementptr inbounds %struct.Reg, %struct.Reg* %7846, i32 0, i32 0
  %RDI.i898 = bitcast %union.anon* %7847 to i64*
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7849 = getelementptr inbounds %struct.GPR, %struct.GPR* %7848, i32 0, i32 15
  %7850 = getelementptr inbounds %struct.Reg, %struct.Reg* %7849, i32 0, i32 0
  %RBP.i899 = bitcast %union.anon* %7850 to i64*
  %7851 = load i64, i64* %RBP.i899
  %7852 = sub i64 %7851, 12
  %7853 = load i64, i64* %PC.i897
  %7854 = add i64 %7853, 3
  store i64 %7854, i64* %PC.i897
  %7855 = inttoptr i64 %7852 to i32*
  %7856 = load i32, i32* %7855
  %7857 = zext i32 %7856 to i64
  store i64 %7857, i64* %RDI.i898, align 8
  store %struct.Memory* %loadMem_441cd1, %struct.Memory** %MEMORY
  %loadMem_441cd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7859 = getelementptr inbounds %struct.GPR, %struct.GPR* %7858, i32 0, i32 33
  %7860 = getelementptr inbounds %struct.Reg, %struct.Reg* %7859, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %7860 to i64*
  %7861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7862 = getelementptr inbounds %struct.GPR, %struct.GPR* %7861, i32 0, i32 1
  %7863 = getelementptr inbounds %struct.Reg, %struct.Reg* %7862, i32 0, i32 0
  %RAX.i895 = bitcast %union.anon* %7863 to i64*
  %7864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7865 = getelementptr inbounds %struct.GPR, %struct.GPR* %7864, i32 0, i32 15
  %7866 = getelementptr inbounds %struct.Reg, %struct.Reg* %7865, i32 0, i32 0
  %RBP.i896 = bitcast %union.anon* %7866 to i64*
  %7867 = load i64, i64* %RBP.i896
  %7868 = sub i64 %7867, 8
  %7869 = load i64, i64* %PC.i894
  %7870 = add i64 %7869, 4
  store i64 %7870, i64* %PC.i894
  %7871 = inttoptr i64 %7868 to i64*
  %7872 = load i64, i64* %7871
  store i64 %7872, i64* %RAX.i895, align 8
  store %struct.Memory* %loadMem_441cd4, %struct.Memory** %MEMORY
  %loadMem_441cd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7874 = getelementptr inbounds %struct.GPR, %struct.GPR* %7873, i32 0, i32 33
  %7875 = getelementptr inbounds %struct.Reg, %struct.Reg* %7874, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %7875 to i64*
  %7876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7877 = getelementptr inbounds %struct.GPR, %struct.GPR* %7876, i32 0, i32 1
  %7878 = getelementptr inbounds %struct.Reg, %struct.Reg* %7877, i32 0, i32 0
  %RAX.i892 = bitcast %union.anon* %7878 to i64*
  %7879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7880 = getelementptr inbounds %struct.GPR, %struct.GPR* %7879, i32 0, i32 9
  %7881 = getelementptr inbounds %struct.Reg, %struct.Reg* %7880, i32 0, i32 0
  %RSI.i893 = bitcast %union.anon* %7881 to i64*
  %7882 = load i64, i64* %RAX.i892
  %7883 = load i64, i64* %PC.i891
  %7884 = add i64 %7883, 2
  store i64 %7884, i64* %PC.i891
  %7885 = inttoptr i64 %7882 to i32*
  %7886 = load i32, i32* %7885
  %7887 = zext i32 %7886 to i64
  store i64 %7887, i64* %RSI.i893, align 8
  store %struct.Memory* %loadMem_441cd8, %struct.Memory** %MEMORY
  %loadMem1_441cda = load %struct.Memory*, %struct.Memory** %MEMORY
  %7888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7889 = getelementptr inbounds %struct.GPR, %struct.GPR* %7888, i32 0, i32 33
  %7890 = getelementptr inbounds %struct.Reg, %struct.Reg* %7889, i32 0, i32 0
  %PC.i890 = bitcast %union.anon* %7890 to i64*
  %7891 = load i64, i64* %PC.i890
  %7892 = add i64 %7891, -215594
  %7893 = load i64, i64* %PC.i890
  %7894 = add i64 %7893, 5
  %7895 = load i64, i64* %PC.i890
  %7896 = add i64 %7895, 5
  store i64 %7896, i64* %PC.i890
  %7897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7898 = load i64, i64* %7897, align 8
  %7899 = add i64 %7898, -8
  %7900 = inttoptr i64 %7899 to i64*
  store i64 %7894, i64* %7900
  store i64 %7899, i64* %7897, align 8
  %7901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7892, i64* %7901, align 8
  store %struct.Memory* %loadMem1_441cda, %struct.Memory** %MEMORY
  %loadMem2_441cda = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_441cda = load i64, i64* %3
  %call2_441cda = call %struct.Memory* @sub_40d2b0.dct_chroma_sp(%struct.State* %0, i64 %loadPC_441cda, %struct.Memory* %loadMem2_441cda)
  store %struct.Memory* %call2_441cda, %struct.Memory** %MEMORY
  %loadMem_441cdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7903 = getelementptr inbounds %struct.GPR, %struct.GPR* %7902, i32 0, i32 33
  %7904 = getelementptr inbounds %struct.Reg, %struct.Reg* %7903, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %7904 to i64*
  %7905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7906 = getelementptr inbounds %struct.GPR, %struct.GPR* %7905, i32 0, i32 5
  %7907 = getelementptr inbounds %struct.Reg, %struct.Reg* %7906, i32 0, i32 0
  %RCX.i888 = bitcast %union.anon* %7907 to i64*
  %7908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7909 = getelementptr inbounds %struct.GPR, %struct.GPR* %7908, i32 0, i32 15
  %7910 = getelementptr inbounds %struct.Reg, %struct.Reg* %7909, i32 0, i32 0
  %RBP.i889 = bitcast %union.anon* %7910 to i64*
  %7911 = load i64, i64* %RBP.i889
  %7912 = sub i64 %7911, 8
  %7913 = load i64, i64* %PC.i887
  %7914 = add i64 %7913, 4
  store i64 %7914, i64* %PC.i887
  %7915 = inttoptr i64 %7912 to i64*
  %7916 = load i64, i64* %7915
  store i64 %7916, i64* %RCX.i888, align 8
  store %struct.Memory* %loadMem_441cdf, %struct.Memory** %MEMORY
  %loadMem_441ce3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7918 = getelementptr inbounds %struct.GPR, %struct.GPR* %7917, i32 0, i32 33
  %7919 = getelementptr inbounds %struct.Reg, %struct.Reg* %7918, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %7919 to i64*
  %7920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7921 = getelementptr inbounds %struct.GPR, %struct.GPR* %7920, i32 0, i32 1
  %7922 = getelementptr inbounds %struct.Reg, %struct.Reg* %7921, i32 0, i32 0
  %EAX.i885 = bitcast %union.anon* %7922 to i32*
  %7923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7924 = getelementptr inbounds %struct.GPR, %struct.GPR* %7923, i32 0, i32 5
  %7925 = getelementptr inbounds %struct.Reg, %struct.Reg* %7924, i32 0, i32 0
  %RCX.i886 = bitcast %union.anon* %7925 to i64*
  %7926 = load i64, i64* %RCX.i886
  %7927 = load i32, i32* %EAX.i885
  %7928 = zext i32 %7927 to i64
  %7929 = load i64, i64* %PC.i884
  %7930 = add i64 %7929, 2
  store i64 %7930, i64* %PC.i884
  %7931 = inttoptr i64 %7926 to i32*
  store i32 %7927, i32* %7931
  store %struct.Memory* %loadMem_441ce3, %struct.Memory** %MEMORY
  br label %block_.L_441ce5

block_.L_441ce5:                                  ; preds = %block_.L_441cd1, %block_.L_441cb8
  %loadMem_441ce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7933 = getelementptr inbounds %struct.GPR, %struct.GPR* %7932, i32 0, i32 33
  %7934 = getelementptr inbounds %struct.Reg, %struct.Reg* %7933, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %7934 to i64*
  %7935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7936 = getelementptr inbounds %struct.GPR, %struct.GPR* %7935, i32 0, i32 1
  %7937 = getelementptr inbounds %struct.Reg, %struct.Reg* %7936, i32 0, i32 0
  %RAX.i883 = bitcast %union.anon* %7937 to i64*
  %7938 = load i64, i64* %PC.i882
  %7939 = add i64 %7938, 8
  store i64 %7939, i64* %PC.i882
  %7940 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7940, i64* %RAX.i883, align 8
  store %struct.Memory* %loadMem_441ce5, %struct.Memory** %MEMORY
  %loadMem_441ced = load %struct.Memory*, %struct.Memory** %MEMORY
  %7941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7942 = getelementptr inbounds %struct.GPR, %struct.GPR* %7941, i32 0, i32 33
  %7943 = getelementptr inbounds %struct.Reg, %struct.Reg* %7942, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %7943 to i64*
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7945 = getelementptr inbounds %struct.GPR, %struct.GPR* %7944, i32 0, i32 1
  %7946 = getelementptr inbounds %struct.Reg, %struct.Reg* %7945, i32 0, i32 0
  %RAX.i881 = bitcast %union.anon* %7946 to i64*
  %7947 = load i64, i64* %RAX.i881
  %7948 = add i64 %7947, 72724
  %7949 = load i64, i64* %PC.i880
  %7950 = add i64 %7949, 7
  store i64 %7950, i64* %PC.i880
  %7951 = inttoptr i64 %7948 to i32*
  %7952 = load i32, i32* %7951
  %7953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7953, align 1
  %7954 = and i32 %7952, 255
  %7955 = call i32 @llvm.ctpop.i32(i32 %7954)
  %7956 = trunc i32 %7955 to i8
  %7957 = and i8 %7956, 1
  %7958 = xor i8 %7957, 1
  %7959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7958, i8* %7959, align 1
  %7960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7960, align 1
  %7961 = icmp eq i32 %7952, 0
  %7962 = zext i1 %7961 to i8
  %7963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7962, i8* %7963, align 1
  %7964 = lshr i32 %7952, 31
  %7965 = trunc i32 %7964 to i8
  %7966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7965, i8* %7966, align 1
  %7967 = lshr i32 %7952, 31
  %7968 = xor i32 %7964, %7967
  %7969 = add i32 %7968, %7967
  %7970 = icmp eq i32 %7969, 2
  %7971 = zext i1 %7970 to i8
  %7972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7971, i8* %7972, align 1
  store %struct.Memory* %loadMem_441ced, %struct.Memory** %MEMORY
  %loadMem_441cf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7974 = getelementptr inbounds %struct.GPR, %struct.GPR* %7973, i32 0, i32 33
  %7975 = getelementptr inbounds %struct.Reg, %struct.Reg* %7974, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %7975 to i64*
  %7976 = load i64, i64* %PC.i879
  %7977 = add i64 %7976, 246
  %7978 = load i64, i64* %PC.i879
  %7979 = add i64 %7978, 6
  %7980 = load i64, i64* %PC.i879
  %7981 = add i64 %7980, 6
  store i64 %7981, i64* %PC.i879
  %7982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7983 = load i8, i8* %7982, align 1
  store i8 %7983, i8* %BRANCH_TAKEN, align 1
  %7984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7985 = icmp ne i8 %7983, 0
  %7986 = select i1 %7985, i64 %7977, i64 %7979
  store i64 %7986, i64* %7984, align 8
  store %struct.Memory* %loadMem_441cf4, %struct.Memory** %MEMORY
  %loadBr_441cf4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441cf4 = icmp eq i8 %loadBr_441cf4, 1
  br i1 %cmpBr_441cf4, label %block_.L_441dea, label %block_441cfa

block_441cfa:                                     ; preds = %block_.L_441ce5
  %loadMem_441cfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7988 = getelementptr inbounds %struct.GPR, %struct.GPR* %7987, i32 0, i32 33
  %7989 = getelementptr inbounds %struct.Reg, %struct.Reg* %7988, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %7989 to i64*
  %7990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7991 = getelementptr inbounds %struct.GPR, %struct.GPR* %7990, i32 0, i32 15
  %7992 = getelementptr inbounds %struct.Reg, %struct.Reg* %7991, i32 0, i32 0
  %RBP.i878 = bitcast %union.anon* %7992 to i64*
  %7993 = load i64, i64* %RBP.i878
  %7994 = sub i64 %7993, 28
  %7995 = load i64, i64* %PC.i877
  %7996 = add i64 %7995, 7
  store i64 %7996, i64* %PC.i877
  %7997 = inttoptr i64 %7994 to i32*
  store i32 0, i32* %7997
  store %struct.Memory* %loadMem_441cfa, %struct.Memory** %MEMORY
  br label %block_.L_441d01

block_.L_441d01:                                  ; preds = %block_.L_441dd7, %block_441cfa
  %loadMem_441d01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7999 = getelementptr inbounds %struct.GPR, %struct.GPR* %7998, i32 0, i32 33
  %8000 = getelementptr inbounds %struct.Reg, %struct.Reg* %7999, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %8000 to i64*
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8002 = getelementptr inbounds %struct.GPR, %struct.GPR* %8001, i32 0, i32 1
  %8003 = getelementptr inbounds %struct.Reg, %struct.Reg* %8002, i32 0, i32 0
  %RAX.i875 = bitcast %union.anon* %8003 to i64*
  %8004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8005 = getelementptr inbounds %struct.GPR, %struct.GPR* %8004, i32 0, i32 15
  %8006 = getelementptr inbounds %struct.Reg, %struct.Reg* %8005, i32 0, i32 0
  %RBP.i876 = bitcast %union.anon* %8006 to i64*
  %8007 = load i64, i64* %RBP.i876
  %8008 = sub i64 %8007, 28
  %8009 = load i64, i64* %PC.i874
  %8010 = add i64 %8009, 3
  store i64 %8010, i64* %PC.i874
  %8011 = inttoptr i64 %8008 to i32*
  %8012 = load i32, i32* %8011
  %8013 = zext i32 %8012 to i64
  store i64 %8013, i64* %RAX.i875, align 8
  store %struct.Memory* %loadMem_441d01, %struct.Memory** %MEMORY
  %loadMem_441d04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8015 = getelementptr inbounds %struct.GPR, %struct.GPR* %8014, i32 0, i32 33
  %8016 = getelementptr inbounds %struct.Reg, %struct.Reg* %8015, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %8016 to i64*
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8018 = getelementptr inbounds %struct.GPR, %struct.GPR* %8017, i32 0, i32 5
  %8019 = getelementptr inbounds %struct.Reg, %struct.Reg* %8018, i32 0, i32 0
  %RCX.i873 = bitcast %union.anon* %8019 to i64*
  %8020 = load i64, i64* %PC.i872
  %8021 = add i64 %8020, 8
  store i64 %8021, i64* %PC.i872
  %8022 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8022, i64* %RCX.i873, align 8
  store %struct.Memory* %loadMem_441d04, %struct.Memory** %MEMORY
  %loadMem_441d0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8024 = getelementptr inbounds %struct.GPR, %struct.GPR* %8023, i32 0, i32 33
  %8025 = getelementptr inbounds %struct.Reg, %struct.Reg* %8024, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %8025 to i64*
  %8026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8027 = getelementptr inbounds %struct.GPR, %struct.GPR* %8026, i32 0, i32 1
  %8028 = getelementptr inbounds %struct.Reg, %struct.Reg* %8027, i32 0, i32 0
  %EAX.i870 = bitcast %union.anon* %8028 to i32*
  %8029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8030 = getelementptr inbounds %struct.GPR, %struct.GPR* %8029, i32 0, i32 5
  %8031 = getelementptr inbounds %struct.Reg, %struct.Reg* %8030, i32 0, i32 0
  %RCX.i871 = bitcast %union.anon* %8031 to i64*
  %8032 = load i32, i32* %EAX.i870
  %8033 = zext i32 %8032 to i64
  %8034 = load i64, i64* %RCX.i871
  %8035 = add i64 %8034, 72712
  %8036 = load i64, i64* %PC.i869
  %8037 = add i64 %8036, 6
  store i64 %8037, i64* %PC.i869
  %8038 = inttoptr i64 %8035 to i32*
  %8039 = load i32, i32* %8038
  %8040 = sub i32 %8032, %8039
  %8041 = icmp ult i32 %8032, %8039
  %8042 = zext i1 %8041 to i8
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8042, i8* %8043, align 1
  %8044 = and i32 %8040, 255
  %8045 = call i32 @llvm.ctpop.i32(i32 %8044)
  %8046 = trunc i32 %8045 to i8
  %8047 = and i8 %8046, 1
  %8048 = xor i8 %8047, 1
  %8049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8048, i8* %8049, align 1
  %8050 = xor i32 %8039, %8032
  %8051 = xor i32 %8050, %8040
  %8052 = lshr i32 %8051, 4
  %8053 = trunc i32 %8052 to i8
  %8054 = and i8 %8053, 1
  %8055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8054, i8* %8055, align 1
  %8056 = icmp eq i32 %8040, 0
  %8057 = zext i1 %8056 to i8
  %8058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8057, i8* %8058, align 1
  %8059 = lshr i32 %8040, 31
  %8060 = trunc i32 %8059 to i8
  %8061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8060, i8* %8061, align 1
  %8062 = lshr i32 %8032, 31
  %8063 = lshr i32 %8039, 31
  %8064 = xor i32 %8063, %8062
  %8065 = xor i32 %8059, %8062
  %8066 = add i32 %8065, %8064
  %8067 = icmp eq i32 %8066, 2
  %8068 = zext i1 %8067 to i8
  %8069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8068, i8* %8069, align 1
  store %struct.Memory* %loadMem_441d0c, %struct.Memory** %MEMORY
  %loadMem_441d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8071 = getelementptr inbounds %struct.GPR, %struct.GPR* %8070, i32 0, i32 33
  %8072 = getelementptr inbounds %struct.Reg, %struct.Reg* %8071, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %8072 to i64*
  %8073 = load i64, i64* %PC.i868
  %8074 = add i64 %8073, 211
  %8075 = load i64, i64* %PC.i868
  %8076 = add i64 %8075, 6
  %8077 = load i64, i64* %PC.i868
  %8078 = add i64 %8077, 6
  store i64 %8078, i64* %PC.i868
  %8079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8080 = load i8, i8* %8079, align 1
  %8081 = icmp ne i8 %8080, 0
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8083 = load i8, i8* %8082, align 1
  %8084 = icmp ne i8 %8083, 0
  %8085 = xor i1 %8081, %8084
  %8086 = xor i1 %8085, true
  %8087 = zext i1 %8086 to i8
  store i8 %8087, i8* %BRANCH_TAKEN, align 1
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8089 = select i1 %8085, i64 %8076, i64 %8074
  store i64 %8089, i64* %8088, align 8
  store %struct.Memory* %loadMem_441d12, %struct.Memory** %MEMORY
  %loadBr_441d12 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441d12 = icmp eq i8 %loadBr_441d12, 1
  br i1 %cmpBr_441d12, label %block_.L_441de5, label %block_441d18

block_441d18:                                     ; preds = %block_.L_441d01
  %loadMem_441d18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8091 = getelementptr inbounds %struct.GPR, %struct.GPR* %8090, i32 0, i32 33
  %8092 = getelementptr inbounds %struct.Reg, %struct.Reg* %8091, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %8092 to i64*
  %8093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8094 = getelementptr inbounds %struct.GPR, %struct.GPR* %8093, i32 0, i32 15
  %8095 = getelementptr inbounds %struct.Reg, %struct.Reg* %8094, i32 0, i32 0
  %RBP.i867 = bitcast %union.anon* %8095 to i64*
  %8096 = load i64, i64* %RBP.i867
  %8097 = sub i64 %8096, 32
  %8098 = load i64, i64* %PC.i866
  %8099 = add i64 %8098, 7
  store i64 %8099, i64* %PC.i866
  %8100 = inttoptr i64 %8097 to i32*
  store i32 0, i32* %8100
  store %struct.Memory* %loadMem_441d18, %struct.Memory** %MEMORY
  br label %block_.L_441d1f

block_.L_441d1f:                                  ; preds = %block_.L_441dc4, %block_441d18
  %loadMem_441d1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8102 = getelementptr inbounds %struct.GPR, %struct.GPR* %8101, i32 0, i32 33
  %8103 = getelementptr inbounds %struct.Reg, %struct.Reg* %8102, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %8103 to i64*
  %8104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8105 = getelementptr inbounds %struct.GPR, %struct.GPR* %8104, i32 0, i32 1
  %8106 = getelementptr inbounds %struct.Reg, %struct.Reg* %8105, i32 0, i32 0
  %RAX.i864 = bitcast %union.anon* %8106 to i64*
  %8107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8108 = getelementptr inbounds %struct.GPR, %struct.GPR* %8107, i32 0, i32 15
  %8109 = getelementptr inbounds %struct.Reg, %struct.Reg* %8108, i32 0, i32 0
  %RBP.i865 = bitcast %union.anon* %8109 to i64*
  %8110 = load i64, i64* %RBP.i865
  %8111 = sub i64 %8110, 32
  %8112 = load i64, i64* %PC.i863
  %8113 = add i64 %8112, 3
  store i64 %8113, i64* %PC.i863
  %8114 = inttoptr i64 %8111 to i32*
  %8115 = load i32, i32* %8114
  %8116 = zext i32 %8115 to i64
  store i64 %8116, i64* %RAX.i864, align 8
  store %struct.Memory* %loadMem_441d1f, %struct.Memory** %MEMORY
  %loadMem_441d22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8118 = getelementptr inbounds %struct.GPR, %struct.GPR* %8117, i32 0, i32 33
  %8119 = getelementptr inbounds %struct.Reg, %struct.Reg* %8118, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %8119 to i64*
  %8120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8121 = getelementptr inbounds %struct.GPR, %struct.GPR* %8120, i32 0, i32 5
  %8122 = getelementptr inbounds %struct.Reg, %struct.Reg* %8121, i32 0, i32 0
  %RCX.i862 = bitcast %union.anon* %8122 to i64*
  %8123 = load i64, i64* %PC.i861
  %8124 = add i64 %8123, 8
  store i64 %8124, i64* %PC.i861
  %8125 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8125, i64* %RCX.i862, align 8
  store %struct.Memory* %loadMem_441d22, %struct.Memory** %MEMORY
  %loadMem_441d2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8127 = getelementptr inbounds %struct.GPR, %struct.GPR* %8126, i32 0, i32 33
  %8128 = getelementptr inbounds %struct.Reg, %struct.Reg* %8127, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %8128 to i64*
  %8129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8130 = getelementptr inbounds %struct.GPR, %struct.GPR* %8129, i32 0, i32 1
  %8131 = getelementptr inbounds %struct.Reg, %struct.Reg* %8130, i32 0, i32 0
  %EAX.i859 = bitcast %union.anon* %8131 to i32*
  %8132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8133 = getelementptr inbounds %struct.GPR, %struct.GPR* %8132, i32 0, i32 5
  %8134 = getelementptr inbounds %struct.Reg, %struct.Reg* %8133, i32 0, i32 0
  %RCX.i860 = bitcast %union.anon* %8134 to i64*
  %8135 = load i32, i32* %EAX.i859
  %8136 = zext i32 %8135 to i64
  %8137 = load i64, i64* %RCX.i860
  %8138 = add i64 %8137, 72708
  %8139 = load i64, i64* %PC.i858
  %8140 = add i64 %8139, 6
  store i64 %8140, i64* %PC.i858
  %8141 = inttoptr i64 %8138 to i32*
  %8142 = load i32, i32* %8141
  %8143 = sub i32 %8135, %8142
  %8144 = icmp ult i32 %8135, %8142
  %8145 = zext i1 %8144 to i8
  %8146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8145, i8* %8146, align 1
  %8147 = and i32 %8143, 255
  %8148 = call i32 @llvm.ctpop.i32(i32 %8147)
  %8149 = trunc i32 %8148 to i8
  %8150 = and i8 %8149, 1
  %8151 = xor i8 %8150, 1
  %8152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8151, i8* %8152, align 1
  %8153 = xor i32 %8142, %8135
  %8154 = xor i32 %8153, %8143
  %8155 = lshr i32 %8154, 4
  %8156 = trunc i32 %8155 to i8
  %8157 = and i8 %8156, 1
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8157, i8* %8158, align 1
  %8159 = icmp eq i32 %8143, 0
  %8160 = zext i1 %8159 to i8
  %8161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8160, i8* %8161, align 1
  %8162 = lshr i32 %8143, 31
  %8163 = trunc i32 %8162 to i8
  %8164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8163, i8* %8164, align 1
  %8165 = lshr i32 %8135, 31
  %8166 = lshr i32 %8142, 31
  %8167 = xor i32 %8166, %8165
  %8168 = xor i32 %8162, %8165
  %8169 = add i32 %8168, %8167
  %8170 = icmp eq i32 %8169, 2
  %8171 = zext i1 %8170 to i8
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8171, i8* %8172, align 1
  store %struct.Memory* %loadMem_441d2a, %struct.Memory** %MEMORY
  %loadMem_441d30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8174 = getelementptr inbounds %struct.GPR, %struct.GPR* %8173, i32 0, i32 33
  %8175 = getelementptr inbounds %struct.Reg, %struct.Reg* %8174, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %8175 to i64*
  %8176 = load i64, i64* %PC.i857
  %8177 = add i64 %8176, 162
  %8178 = load i64, i64* %PC.i857
  %8179 = add i64 %8178, 6
  %8180 = load i64, i64* %PC.i857
  %8181 = add i64 %8180, 6
  store i64 %8181, i64* %PC.i857
  %8182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8183 = load i8, i8* %8182, align 1
  %8184 = icmp ne i8 %8183, 0
  %8185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8186 = load i8, i8* %8185, align 1
  %8187 = icmp ne i8 %8186, 0
  %8188 = xor i1 %8184, %8187
  %8189 = xor i1 %8188, true
  %8190 = zext i1 %8189 to i8
  store i8 %8190, i8* %BRANCH_TAKEN, align 1
  %8191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8192 = select i1 %8188, i64 %8179, i64 %8177
  store i64 %8192, i64* %8191, align 8
  store %struct.Memory* %loadMem_441d30, %struct.Memory** %MEMORY
  %loadBr_441d30 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441d30 = icmp eq i8 %loadBr_441d30, 1
  br i1 %cmpBr_441d30, label %block_.L_441dd2, label %block_441d36

block_441d36:                                     ; preds = %block_.L_441d1f
  %loadMem_441d36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8194 = getelementptr inbounds %struct.GPR, %struct.GPR* %8193, i32 0, i32 33
  %8195 = getelementptr inbounds %struct.Reg, %struct.Reg* %8194, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %8195 to i64*
  %8196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8197 = getelementptr inbounds %struct.GPR, %struct.GPR* %8196, i32 0, i32 15
  %8198 = getelementptr inbounds %struct.Reg, %struct.Reg* %8197, i32 0, i32 0
  %RBP.i856 = bitcast %union.anon* %8198 to i64*
  %8199 = load i64, i64* %RBP.i856
  %8200 = sub i64 %8199, 12
  %8201 = load i64, i64* %PC.i855
  %8202 = add i64 %8201, 4
  store i64 %8202, i64* %PC.i855
  %8203 = inttoptr i64 %8200 to i32*
  %8204 = load i32, i32* %8203
  %8205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8205, align 1
  %8206 = and i32 %8204, 255
  %8207 = call i32 @llvm.ctpop.i32(i32 %8206)
  %8208 = trunc i32 %8207 to i8
  %8209 = and i8 %8208, 1
  %8210 = xor i8 %8209, 1
  %8211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8210, i8* %8211, align 1
  %8212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8212, align 1
  %8213 = icmp eq i32 %8204, 0
  %8214 = zext i1 %8213 to i8
  %8215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8214, i8* %8215, align 1
  %8216 = lshr i32 %8204, 31
  %8217 = trunc i32 %8216 to i8
  %8218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8217, i8* %8218, align 1
  %8219 = lshr i32 %8204, 31
  %8220 = xor i32 %8216, %8219
  %8221 = add i32 %8220, %8219
  %8222 = icmp eq i32 %8221, 2
  %8223 = zext i1 %8222 to i8
  %8224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8223, i8* %8224, align 1
  store %struct.Memory* %loadMem_441d36, %struct.Memory** %MEMORY
  %loadMem_441d3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8226 = getelementptr inbounds %struct.GPR, %struct.GPR* %8225, i32 0, i32 33
  %8227 = getelementptr inbounds %struct.Reg, %struct.Reg* %8226, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %8227 to i64*
  %8228 = load i64, i64* %PC.i854
  %8229 = add i64 %8228, 72
  %8230 = load i64, i64* %PC.i854
  %8231 = add i64 %8230, 6
  %8232 = load i64, i64* %PC.i854
  %8233 = add i64 %8232, 6
  store i64 %8233, i64* %PC.i854
  %8234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8235 = load i8, i8* %8234, align 1
  %8236 = icmp eq i8 %8235, 0
  %8237 = zext i1 %8236 to i8
  store i8 %8237, i8* %BRANCH_TAKEN, align 1
  %8238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8239 = select i1 %8236, i64 %8229, i64 %8231
  store i64 %8239, i64* %8238, align 8
  store %struct.Memory* %loadMem_441d3a, %struct.Memory** %MEMORY
  %loadBr_441d3a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441d3a = icmp eq i8 %loadBr_441d3a, 1
  br i1 %cmpBr_441d3a, label %block_.L_441d82, label %block_441d40

block_441d40:                                     ; preds = %block_441d36
  %loadMem_441d40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8241 = getelementptr inbounds %struct.GPR, %struct.GPR* %8240, i32 0, i32 33
  %8242 = getelementptr inbounds %struct.Reg, %struct.Reg* %8241, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %8242 to i64*
  %8243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8244 = getelementptr inbounds %struct.GPR, %struct.GPR* %8243, i32 0, i32 1
  %8245 = getelementptr inbounds %struct.Reg, %struct.Reg* %8244, i32 0, i32 0
  %RAX.i853 = bitcast %union.anon* %8245 to i64*
  %8246 = load i64, i64* %PC.i852
  %8247 = add i64 %8246, 10
  store i64 %8247, i64* %PC.i852
  store i64 ptrtoint (%G__0x6f8f20_type* @G__0x6f8f20 to i64), i64* %RAX.i853, align 8
  store %struct.Memory* %loadMem_441d40, %struct.Memory** %MEMORY
  %loadMem_441d4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8249 = getelementptr inbounds %struct.GPR, %struct.GPR* %8248, i32 0, i32 33
  %8250 = getelementptr inbounds %struct.Reg, %struct.Reg* %8249, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %8250 to i64*
  %8251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8252 = getelementptr inbounds %struct.GPR, %struct.GPR* %8251, i32 0, i32 5
  %8253 = getelementptr inbounds %struct.Reg, %struct.Reg* %8252, i32 0, i32 0
  %RCX.i851 = bitcast %union.anon* %8253 to i64*
  %8254 = load i64, i64* %PC.i850
  %8255 = add i64 %8254, 8
  store i64 %8255, i64* %PC.i850
  %8256 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8256, i64* %RCX.i851, align 8
  store %struct.Memory* %loadMem_441d4a, %struct.Memory** %MEMORY
  %loadMem_441d52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8258 = getelementptr inbounds %struct.GPR, %struct.GPR* %8257, i32 0, i32 33
  %8259 = getelementptr inbounds %struct.Reg, %struct.Reg* %8258, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %8259 to i64*
  %8260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8261 = getelementptr inbounds %struct.GPR, %struct.GPR* %8260, i32 0, i32 5
  %8262 = getelementptr inbounds %struct.Reg, %struct.Reg* %8261, i32 0, i32 0
  %RCX.i849 = bitcast %union.anon* %8262 to i64*
  %8263 = load i64, i64* %RCX.i849
  %8264 = load i64, i64* %PC.i848
  %8265 = add i64 %8264, 7
  store i64 %8265, i64* %PC.i848
  %8266 = add i64 13112, %8263
  store i64 %8266, i64* %RCX.i849, align 8
  %8267 = icmp ult i64 %8266, %8263
  %8268 = icmp ult i64 %8266, 13112
  %8269 = or i1 %8267, %8268
  %8270 = zext i1 %8269 to i8
  %8271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8270, i8* %8271, align 1
  %8272 = trunc i64 %8266 to i32
  %8273 = and i32 %8272, 255
  %8274 = call i32 @llvm.ctpop.i32(i32 %8273)
  %8275 = trunc i32 %8274 to i8
  %8276 = and i8 %8275, 1
  %8277 = xor i8 %8276, 1
  %8278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8277, i8* %8278, align 1
  %8279 = xor i64 13112, %8263
  %8280 = xor i64 %8279, %8266
  %8281 = lshr i64 %8280, 4
  %8282 = trunc i64 %8281 to i8
  %8283 = and i8 %8282, 1
  %8284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8283, i8* %8284, align 1
  %8285 = icmp eq i64 %8266, 0
  %8286 = zext i1 %8285 to i8
  %8287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8286, i8* %8287, align 1
  %8288 = lshr i64 %8266, 63
  %8289 = trunc i64 %8288 to i8
  %8290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8289, i8* %8290, align 1
  %8291 = lshr i64 %8263, 63
  %8292 = xor i64 %8288, %8291
  %8293 = add i64 %8292, %8288
  %8294 = icmp eq i64 %8293, 2
  %8295 = zext i1 %8294 to i8
  %8296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8295, i8* %8296, align 1
  store %struct.Memory* %loadMem_441d52, %struct.Memory** %MEMORY
  %loadMem_441d59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8298 = getelementptr inbounds %struct.GPR, %struct.GPR* %8297, i32 0, i32 33
  %8299 = getelementptr inbounds %struct.Reg, %struct.Reg* %8298, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %8299 to i64*
  %8300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8301 = getelementptr inbounds %struct.GPR, %struct.GPR* %8300, i32 0, i32 7
  %8302 = getelementptr inbounds %struct.Reg, %struct.Reg* %8301, i32 0, i32 0
  %RDX.i846 = bitcast %union.anon* %8302 to i64*
  %8303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8304 = getelementptr inbounds %struct.GPR, %struct.GPR* %8303, i32 0, i32 15
  %8305 = getelementptr inbounds %struct.Reg, %struct.Reg* %8304, i32 0, i32 0
  %RBP.i847 = bitcast %union.anon* %8305 to i64*
  %8306 = load i64, i64* %RBP.i847
  %8307 = sub i64 %8306, 32
  %8308 = load i64, i64* %PC.i845
  %8309 = add i64 %8308, 4
  store i64 %8309, i64* %PC.i845
  %8310 = inttoptr i64 %8307 to i32*
  %8311 = load i32, i32* %8310
  %8312 = sext i32 %8311 to i64
  store i64 %8312, i64* %RDX.i846, align 8
  store %struct.Memory* %loadMem_441d59, %struct.Memory** %MEMORY
  %loadMem_441d5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8314 = getelementptr inbounds %struct.GPR, %struct.GPR* %8313, i32 0, i32 33
  %8315 = getelementptr inbounds %struct.Reg, %struct.Reg* %8314, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %8315 to i64*
  %8316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8317 = getelementptr inbounds %struct.GPR, %struct.GPR* %8316, i32 0, i32 7
  %8318 = getelementptr inbounds %struct.Reg, %struct.Reg* %8317, i32 0, i32 0
  %RDX.i844 = bitcast %union.anon* %8318 to i64*
  %8319 = load i64, i64* %RDX.i844
  %8320 = load i64, i64* %PC.i843
  %8321 = add i64 %8320, 4
  store i64 %8321, i64* %PC.i843
  %8322 = shl i64 %8319, 5
  %8323 = icmp slt i64 %8322, 0
  %8324 = shl i64 %8322, 1
  store i64 %8324, i64* %RDX.i844, align 8
  %8325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8326 = zext i1 %8323 to i8
  store i8 %8326, i8* %8325, align 1
  %8327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8328 = trunc i64 %8324 to i32
  %8329 = and i32 %8328, 254
  %8330 = call i32 @llvm.ctpop.i32(i32 %8329)
  %8331 = trunc i32 %8330 to i8
  %8332 = and i8 %8331, 1
  %8333 = xor i8 %8332, 1
  store i8 %8333, i8* %8327, align 1
  %8334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8334, align 1
  %8335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8336 = icmp eq i64 %8324, 0
  %8337 = zext i1 %8336 to i8
  store i8 %8337, i8* %8335, align 1
  %8338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8339 = lshr i64 %8324, 63
  %8340 = trunc i64 %8339 to i8
  store i8 %8340, i8* %8338, align 1
  %8341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8341, align 1
  store %struct.Memory* %loadMem_441d5d, %struct.Memory** %MEMORY
  %loadMem_441d61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8343 = getelementptr inbounds %struct.GPR, %struct.GPR* %8342, i32 0, i32 33
  %8344 = getelementptr inbounds %struct.Reg, %struct.Reg* %8343, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %8344 to i64*
  %8345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8346 = getelementptr inbounds %struct.GPR, %struct.GPR* %8345, i32 0, i32 5
  %8347 = getelementptr inbounds %struct.Reg, %struct.Reg* %8346, i32 0, i32 0
  %RCX.i841 = bitcast %union.anon* %8347 to i64*
  %8348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8349 = getelementptr inbounds %struct.GPR, %struct.GPR* %8348, i32 0, i32 7
  %8350 = getelementptr inbounds %struct.Reg, %struct.Reg* %8349, i32 0, i32 0
  %RDX.i842 = bitcast %union.anon* %8350 to i64*
  %8351 = load i64, i64* %RCX.i841
  %8352 = load i64, i64* %RDX.i842
  %8353 = load i64, i64* %PC.i840
  %8354 = add i64 %8353, 3
  store i64 %8354, i64* %PC.i840
  %8355 = add i64 %8352, %8351
  store i64 %8355, i64* %RCX.i841, align 8
  %8356 = icmp ult i64 %8355, %8351
  %8357 = icmp ult i64 %8355, %8352
  %8358 = or i1 %8356, %8357
  %8359 = zext i1 %8358 to i8
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8359, i8* %8360, align 1
  %8361 = trunc i64 %8355 to i32
  %8362 = and i32 %8361, 255
  %8363 = call i32 @llvm.ctpop.i32(i32 %8362)
  %8364 = trunc i32 %8363 to i8
  %8365 = and i8 %8364, 1
  %8366 = xor i8 %8365, 1
  %8367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8366, i8* %8367, align 1
  %8368 = xor i64 %8352, %8351
  %8369 = xor i64 %8368, %8355
  %8370 = lshr i64 %8369, 4
  %8371 = trunc i64 %8370 to i8
  %8372 = and i8 %8371, 1
  %8373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8372, i8* %8373, align 1
  %8374 = icmp eq i64 %8355, 0
  %8375 = zext i1 %8374 to i8
  %8376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8375, i8* %8376, align 1
  %8377 = lshr i64 %8355, 63
  %8378 = trunc i64 %8377 to i8
  %8379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8378, i8* %8379, align 1
  %8380 = lshr i64 %8351, 63
  %8381 = lshr i64 %8352, 63
  %8382 = xor i64 %8377, %8380
  %8383 = xor i64 %8377, %8381
  %8384 = add i64 %8382, %8383
  %8385 = icmp eq i64 %8384, 2
  %8386 = zext i1 %8385 to i8
  %8387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8386, i8* %8387, align 1
  store %struct.Memory* %loadMem_441d61, %struct.Memory** %MEMORY
  %loadMem_441d64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8389 = getelementptr inbounds %struct.GPR, %struct.GPR* %8388, i32 0, i32 33
  %8390 = getelementptr inbounds %struct.Reg, %struct.Reg* %8389, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %8390 to i64*
  %8391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8392 = getelementptr inbounds %struct.GPR, %struct.GPR* %8391, i32 0, i32 7
  %8393 = getelementptr inbounds %struct.Reg, %struct.Reg* %8392, i32 0, i32 0
  %RDX.i838 = bitcast %union.anon* %8393 to i64*
  %8394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8395 = getelementptr inbounds %struct.GPR, %struct.GPR* %8394, i32 0, i32 15
  %8396 = getelementptr inbounds %struct.Reg, %struct.Reg* %8395, i32 0, i32 0
  %RBP.i839 = bitcast %union.anon* %8396 to i64*
  %8397 = load i64, i64* %RBP.i839
  %8398 = sub i64 %8397, 28
  %8399 = load i64, i64* %PC.i837
  %8400 = add i64 %8399, 4
  store i64 %8400, i64* %PC.i837
  %8401 = inttoptr i64 %8398 to i32*
  %8402 = load i32, i32* %8401
  %8403 = sext i32 %8402 to i64
  store i64 %8403, i64* %RDX.i838, align 8
  store %struct.Memory* %loadMem_441d64, %struct.Memory** %MEMORY
  %loadMem_441d68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8405 = getelementptr inbounds %struct.GPR, %struct.GPR* %8404, i32 0, i32 33
  %8406 = getelementptr inbounds %struct.Reg, %struct.Reg* %8405, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %8406 to i64*
  %8407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8408 = getelementptr inbounds %struct.GPR, %struct.GPR* %8407, i32 0, i32 5
  %8409 = getelementptr inbounds %struct.Reg, %struct.Reg* %8408, i32 0, i32 0
  %RCX.i834 = bitcast %union.anon* %8409 to i64*
  %8410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8411 = getelementptr inbounds %struct.GPR, %struct.GPR* %8410, i32 0, i32 7
  %8412 = getelementptr inbounds %struct.Reg, %struct.Reg* %8411, i32 0, i32 0
  %RDX.i835 = bitcast %union.anon* %8412 to i64*
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8414 = getelementptr inbounds %struct.GPR, %struct.GPR* %8413, i32 0, i32 9
  %8415 = getelementptr inbounds %struct.Reg, %struct.Reg* %8414, i32 0, i32 0
  %RSI.i836 = bitcast %union.anon* %8415 to i64*
  %8416 = load i64, i64* %RCX.i834
  %8417 = load i64, i64* %RDX.i835
  %8418 = mul i64 %8417, 4
  %8419 = add i64 %8418, %8416
  %8420 = load i64, i64* %PC.i833
  %8421 = add i64 %8420, 3
  store i64 %8421, i64* %PC.i833
  %8422 = inttoptr i64 %8419 to i32*
  %8423 = load i32, i32* %8422
  %8424 = zext i32 %8423 to i64
  store i64 %8424, i64* %RSI.i836, align 8
  store %struct.Memory* %loadMem_441d68, %struct.Memory** %MEMORY
  %loadMem_441d6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8426 = getelementptr inbounds %struct.GPR, %struct.GPR* %8425, i32 0, i32 33
  %8427 = getelementptr inbounds %struct.Reg, %struct.Reg* %8426, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %8427 to i64*
  %8428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8429 = getelementptr inbounds %struct.GPR, %struct.GPR* %8428, i32 0, i32 5
  %8430 = getelementptr inbounds %struct.Reg, %struct.Reg* %8429, i32 0, i32 0
  %RCX.i831 = bitcast %union.anon* %8430 to i64*
  %8431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8432 = getelementptr inbounds %struct.GPR, %struct.GPR* %8431, i32 0, i32 15
  %8433 = getelementptr inbounds %struct.Reg, %struct.Reg* %8432, i32 0, i32 0
  %RBP.i832 = bitcast %union.anon* %8433 to i64*
  %8434 = load i64, i64* %RBP.i832
  %8435 = sub i64 %8434, 32
  %8436 = load i64, i64* %PC.i830
  %8437 = add i64 %8436, 4
  store i64 %8437, i64* %PC.i830
  %8438 = inttoptr i64 %8435 to i32*
  %8439 = load i32, i32* %8438
  %8440 = sext i32 %8439 to i64
  store i64 %8440, i64* %RCX.i831, align 8
  store %struct.Memory* %loadMem_441d6b, %struct.Memory** %MEMORY
  %loadMem_441d6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8442 = getelementptr inbounds %struct.GPR, %struct.GPR* %8441, i32 0, i32 33
  %8443 = getelementptr inbounds %struct.Reg, %struct.Reg* %8442, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %8443 to i64*
  %8444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8445 = getelementptr inbounds %struct.GPR, %struct.GPR* %8444, i32 0, i32 5
  %8446 = getelementptr inbounds %struct.Reg, %struct.Reg* %8445, i32 0, i32 0
  %RCX.i829 = bitcast %union.anon* %8446 to i64*
  %8447 = load i64, i64* %RCX.i829
  %8448 = load i64, i64* %PC.i828
  %8449 = add i64 %8448, 4
  store i64 %8449, i64* %PC.i828
  %8450 = shl i64 %8447, 5
  %8451 = icmp slt i64 %8450, 0
  %8452 = shl i64 %8450, 1
  store i64 %8452, i64* %RCX.i829, align 8
  %8453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8454 = zext i1 %8451 to i8
  store i8 %8454, i8* %8453, align 1
  %8455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8456 = trunc i64 %8452 to i32
  %8457 = and i32 %8456, 254
  %8458 = call i32 @llvm.ctpop.i32(i32 %8457)
  %8459 = trunc i32 %8458 to i8
  %8460 = and i8 %8459, 1
  %8461 = xor i8 %8460, 1
  store i8 %8461, i8* %8455, align 1
  %8462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8462, align 1
  %8463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8464 = icmp eq i64 %8452, 0
  %8465 = zext i1 %8464 to i8
  store i8 %8465, i8* %8463, align 1
  %8466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8467 = lshr i64 %8452, 63
  %8468 = trunc i64 %8467 to i8
  store i8 %8468, i8* %8466, align 1
  %8469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8469, align 1
  store %struct.Memory* %loadMem_441d6f, %struct.Memory** %MEMORY
  %loadMem_441d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8471 = getelementptr inbounds %struct.GPR, %struct.GPR* %8470, i32 0, i32 33
  %8472 = getelementptr inbounds %struct.Reg, %struct.Reg* %8471, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %8472 to i64*
  %8473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8474 = getelementptr inbounds %struct.GPR, %struct.GPR* %8473, i32 0, i32 1
  %8475 = getelementptr inbounds %struct.Reg, %struct.Reg* %8474, i32 0, i32 0
  %RAX.i826 = bitcast %union.anon* %8475 to i64*
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8477 = getelementptr inbounds %struct.GPR, %struct.GPR* %8476, i32 0, i32 5
  %8478 = getelementptr inbounds %struct.Reg, %struct.Reg* %8477, i32 0, i32 0
  %RCX.i827 = bitcast %union.anon* %8478 to i64*
  %8479 = load i64, i64* %RAX.i826
  %8480 = load i64, i64* %RCX.i827
  %8481 = load i64, i64* %PC.i825
  %8482 = add i64 %8481, 3
  store i64 %8482, i64* %PC.i825
  %8483 = add i64 %8480, %8479
  store i64 %8483, i64* %RAX.i826, align 8
  %8484 = icmp ult i64 %8483, %8479
  %8485 = icmp ult i64 %8483, %8480
  %8486 = or i1 %8484, %8485
  %8487 = zext i1 %8486 to i8
  %8488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8487, i8* %8488, align 1
  %8489 = trunc i64 %8483 to i32
  %8490 = and i32 %8489, 255
  %8491 = call i32 @llvm.ctpop.i32(i32 %8490)
  %8492 = trunc i32 %8491 to i8
  %8493 = and i8 %8492, 1
  %8494 = xor i8 %8493, 1
  %8495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8494, i8* %8495, align 1
  %8496 = xor i64 %8480, %8479
  %8497 = xor i64 %8496, %8483
  %8498 = lshr i64 %8497, 4
  %8499 = trunc i64 %8498 to i8
  %8500 = and i8 %8499, 1
  %8501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8500, i8* %8501, align 1
  %8502 = icmp eq i64 %8483, 0
  %8503 = zext i1 %8502 to i8
  %8504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8503, i8* %8504, align 1
  %8505 = lshr i64 %8483, 63
  %8506 = trunc i64 %8505 to i8
  %8507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8506, i8* %8507, align 1
  %8508 = lshr i64 %8479, 63
  %8509 = lshr i64 %8480, 63
  %8510 = xor i64 %8505, %8508
  %8511 = xor i64 %8505, %8509
  %8512 = add i64 %8510, %8511
  %8513 = icmp eq i64 %8512, 2
  %8514 = zext i1 %8513 to i8
  %8515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8514, i8* %8515, align 1
  store %struct.Memory* %loadMem_441d73, %struct.Memory** %MEMORY
  %loadMem_441d76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8517 = getelementptr inbounds %struct.GPR, %struct.GPR* %8516, i32 0, i32 33
  %8518 = getelementptr inbounds %struct.Reg, %struct.Reg* %8517, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %8518 to i64*
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8520 = getelementptr inbounds %struct.GPR, %struct.GPR* %8519, i32 0, i32 5
  %8521 = getelementptr inbounds %struct.Reg, %struct.Reg* %8520, i32 0, i32 0
  %RCX.i823 = bitcast %union.anon* %8521 to i64*
  %8522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8523 = getelementptr inbounds %struct.GPR, %struct.GPR* %8522, i32 0, i32 15
  %8524 = getelementptr inbounds %struct.Reg, %struct.Reg* %8523, i32 0, i32 0
  %RBP.i824 = bitcast %union.anon* %8524 to i64*
  %8525 = load i64, i64* %RBP.i824
  %8526 = sub i64 %8525, 28
  %8527 = load i64, i64* %PC.i822
  %8528 = add i64 %8527, 4
  store i64 %8528, i64* %PC.i822
  %8529 = inttoptr i64 %8526 to i32*
  %8530 = load i32, i32* %8529
  %8531 = sext i32 %8530 to i64
  store i64 %8531, i64* %RCX.i823, align 8
  store %struct.Memory* %loadMem_441d76, %struct.Memory** %MEMORY
  %loadMem_441d7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8533 = getelementptr inbounds %struct.GPR, %struct.GPR* %8532, i32 0, i32 33
  %8534 = getelementptr inbounds %struct.Reg, %struct.Reg* %8533, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %8534 to i64*
  %8535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8536 = getelementptr inbounds %struct.GPR, %struct.GPR* %8535, i32 0, i32 9
  %8537 = getelementptr inbounds %struct.Reg, %struct.Reg* %8536, i32 0, i32 0
  %ESI.i819 = bitcast %union.anon* %8537 to i32*
  %8538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8539 = getelementptr inbounds %struct.GPR, %struct.GPR* %8538, i32 0, i32 1
  %8540 = getelementptr inbounds %struct.Reg, %struct.Reg* %8539, i32 0, i32 0
  %RAX.i820 = bitcast %union.anon* %8540 to i64*
  %8541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8542 = getelementptr inbounds %struct.GPR, %struct.GPR* %8541, i32 0, i32 5
  %8543 = getelementptr inbounds %struct.Reg, %struct.Reg* %8542, i32 0, i32 0
  %RCX.i821 = bitcast %union.anon* %8543 to i64*
  %8544 = load i64, i64* %RAX.i820
  %8545 = load i64, i64* %RCX.i821
  %8546 = mul i64 %8545, 4
  %8547 = add i64 %8546, %8544
  %8548 = load i32, i32* %ESI.i819
  %8549 = zext i32 %8548 to i64
  %8550 = load i64, i64* %PC.i818
  %8551 = add i64 %8550, 3
  store i64 %8551, i64* %PC.i818
  %8552 = inttoptr i64 %8547 to i32*
  store i32 %8548, i32* %8552
  store %struct.Memory* %loadMem_441d7a, %struct.Memory** %MEMORY
  %loadMem_441d7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8554 = getelementptr inbounds %struct.GPR, %struct.GPR* %8553, i32 0, i32 33
  %8555 = getelementptr inbounds %struct.Reg, %struct.Reg* %8554, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %8555 to i64*
  %8556 = load i64, i64* %PC.i817
  %8557 = add i64 %8556, 66
  %8558 = load i64, i64* %PC.i817
  %8559 = add i64 %8558, 5
  store i64 %8559, i64* %PC.i817
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8557, i64* %8560, align 8
  store %struct.Memory* %loadMem_441d7d, %struct.Memory** %MEMORY
  br label %block_.L_441dbf

block_.L_441d82:                                  ; preds = %block_441d36
  %loadMem_441d82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8562 = getelementptr inbounds %struct.GPR, %struct.GPR* %8561, i32 0, i32 33
  %8563 = getelementptr inbounds %struct.Reg, %struct.Reg* %8562, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %8563 to i64*
  %8564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8565 = getelementptr inbounds %struct.GPR, %struct.GPR* %8564, i32 0, i32 1
  %8566 = getelementptr inbounds %struct.Reg, %struct.Reg* %8565, i32 0, i32 0
  %RAX.i816 = bitcast %union.anon* %8566 to i64*
  %8567 = load i64, i64* %PC.i815
  %8568 = add i64 %8567, 10
  store i64 %8568, i64* %PC.i815
  store i64 ptrtoint (%G__0x6d2ec0_type* @G__0x6d2ec0 to i64), i64* %RAX.i816, align 8
  store %struct.Memory* %loadMem_441d82, %struct.Memory** %MEMORY
  %loadMem_441d8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8570 = getelementptr inbounds %struct.GPR, %struct.GPR* %8569, i32 0, i32 33
  %8571 = getelementptr inbounds %struct.Reg, %struct.Reg* %8570, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %8571 to i64*
  %8572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8573 = getelementptr inbounds %struct.GPR, %struct.GPR* %8572, i32 0, i32 5
  %8574 = getelementptr inbounds %struct.Reg, %struct.Reg* %8573, i32 0, i32 0
  %RCX.i814 = bitcast %union.anon* %8574 to i64*
  %8575 = load i64, i64* %PC.i813
  %8576 = add i64 %8575, 8
  store i64 %8576, i64* %PC.i813
  %8577 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8577, i64* %RCX.i814, align 8
  store %struct.Memory* %loadMem_441d8c, %struct.Memory** %MEMORY
  %loadMem_441d94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8579 = getelementptr inbounds %struct.GPR, %struct.GPR* %8578, i32 0, i32 33
  %8580 = getelementptr inbounds %struct.Reg, %struct.Reg* %8579, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %8580 to i64*
  %8581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8582 = getelementptr inbounds %struct.GPR, %struct.GPR* %8581, i32 0, i32 5
  %8583 = getelementptr inbounds %struct.Reg, %struct.Reg* %8582, i32 0, i32 0
  %RCX.i812 = bitcast %union.anon* %8583 to i64*
  %8584 = load i64, i64* %RCX.i812
  %8585 = load i64, i64* %PC.i811
  %8586 = add i64 %8585, 7
  store i64 %8586, i64* %PC.i811
  %8587 = add i64 13112, %8584
  store i64 %8587, i64* %RCX.i812, align 8
  %8588 = icmp ult i64 %8587, %8584
  %8589 = icmp ult i64 %8587, 13112
  %8590 = or i1 %8588, %8589
  %8591 = zext i1 %8590 to i8
  %8592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8591, i8* %8592, align 1
  %8593 = trunc i64 %8587 to i32
  %8594 = and i32 %8593, 255
  %8595 = call i32 @llvm.ctpop.i32(i32 %8594)
  %8596 = trunc i32 %8595 to i8
  %8597 = and i8 %8596, 1
  %8598 = xor i8 %8597, 1
  %8599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8598, i8* %8599, align 1
  %8600 = xor i64 13112, %8584
  %8601 = xor i64 %8600, %8587
  %8602 = lshr i64 %8601, 4
  %8603 = trunc i64 %8602 to i8
  %8604 = and i8 %8603, 1
  %8605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8604, i8* %8605, align 1
  %8606 = icmp eq i64 %8587, 0
  %8607 = zext i1 %8606 to i8
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8607, i8* %8608, align 1
  %8609 = lshr i64 %8587, 63
  %8610 = trunc i64 %8609 to i8
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8610, i8* %8611, align 1
  %8612 = lshr i64 %8584, 63
  %8613 = xor i64 %8609, %8612
  %8614 = add i64 %8613, %8609
  %8615 = icmp eq i64 %8614, 2
  %8616 = zext i1 %8615 to i8
  %8617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8616, i8* %8617, align 1
  store %struct.Memory* %loadMem_441d94, %struct.Memory** %MEMORY
  %loadMem_441d9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8619 = getelementptr inbounds %struct.GPR, %struct.GPR* %8618, i32 0, i32 33
  %8620 = getelementptr inbounds %struct.Reg, %struct.Reg* %8619, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %8620 to i64*
  %8621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8622 = getelementptr inbounds %struct.GPR, %struct.GPR* %8621, i32 0, i32 7
  %8623 = getelementptr inbounds %struct.Reg, %struct.Reg* %8622, i32 0, i32 0
  %RDX.i809 = bitcast %union.anon* %8623 to i64*
  %8624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8625 = getelementptr inbounds %struct.GPR, %struct.GPR* %8624, i32 0, i32 15
  %8626 = getelementptr inbounds %struct.Reg, %struct.Reg* %8625, i32 0, i32 0
  %RBP.i810 = bitcast %union.anon* %8626 to i64*
  %8627 = load i64, i64* %RBP.i810
  %8628 = sub i64 %8627, 32
  %8629 = load i64, i64* %PC.i808
  %8630 = add i64 %8629, 4
  store i64 %8630, i64* %PC.i808
  %8631 = inttoptr i64 %8628 to i32*
  %8632 = load i32, i32* %8631
  %8633 = sext i32 %8632 to i64
  store i64 %8633, i64* %RDX.i809, align 8
  store %struct.Memory* %loadMem_441d9b, %struct.Memory** %MEMORY
  %loadMem_441d9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8635 = getelementptr inbounds %struct.GPR, %struct.GPR* %8634, i32 0, i32 33
  %8636 = getelementptr inbounds %struct.Reg, %struct.Reg* %8635, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %8636 to i64*
  %8637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8638 = getelementptr inbounds %struct.GPR, %struct.GPR* %8637, i32 0, i32 7
  %8639 = getelementptr inbounds %struct.Reg, %struct.Reg* %8638, i32 0, i32 0
  %RDX.i807 = bitcast %union.anon* %8639 to i64*
  %8640 = load i64, i64* %RDX.i807
  %8641 = load i64, i64* %PC.i806
  %8642 = add i64 %8641, 4
  store i64 %8642, i64* %PC.i806
  %8643 = shl i64 %8640, 5
  %8644 = icmp slt i64 %8643, 0
  %8645 = shl i64 %8643, 1
  store i64 %8645, i64* %RDX.i807, align 8
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8647 = zext i1 %8644 to i8
  store i8 %8647, i8* %8646, align 1
  %8648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8649 = trunc i64 %8645 to i32
  %8650 = and i32 %8649, 254
  %8651 = call i32 @llvm.ctpop.i32(i32 %8650)
  %8652 = trunc i32 %8651 to i8
  %8653 = and i8 %8652, 1
  %8654 = xor i8 %8653, 1
  store i8 %8654, i8* %8648, align 1
  %8655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8655, align 1
  %8656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8657 = icmp eq i64 %8645, 0
  %8658 = zext i1 %8657 to i8
  store i8 %8658, i8* %8656, align 1
  %8659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8660 = lshr i64 %8645, 63
  %8661 = trunc i64 %8660 to i8
  store i8 %8661, i8* %8659, align 1
  %8662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8662, align 1
  store %struct.Memory* %loadMem_441d9f, %struct.Memory** %MEMORY
  %loadMem_441da3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8664 = getelementptr inbounds %struct.GPR, %struct.GPR* %8663, i32 0, i32 33
  %8665 = getelementptr inbounds %struct.Reg, %struct.Reg* %8664, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %8665 to i64*
  %8666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8667 = getelementptr inbounds %struct.GPR, %struct.GPR* %8666, i32 0, i32 5
  %8668 = getelementptr inbounds %struct.Reg, %struct.Reg* %8667, i32 0, i32 0
  %RCX.i804 = bitcast %union.anon* %8668 to i64*
  %8669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8670 = getelementptr inbounds %struct.GPR, %struct.GPR* %8669, i32 0, i32 7
  %8671 = getelementptr inbounds %struct.Reg, %struct.Reg* %8670, i32 0, i32 0
  %RDX.i805 = bitcast %union.anon* %8671 to i64*
  %8672 = load i64, i64* %RCX.i804
  %8673 = load i64, i64* %RDX.i805
  %8674 = load i64, i64* %PC.i803
  %8675 = add i64 %8674, 3
  store i64 %8675, i64* %PC.i803
  %8676 = add i64 %8673, %8672
  store i64 %8676, i64* %RCX.i804, align 8
  %8677 = icmp ult i64 %8676, %8672
  %8678 = icmp ult i64 %8676, %8673
  %8679 = or i1 %8677, %8678
  %8680 = zext i1 %8679 to i8
  %8681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8680, i8* %8681, align 1
  %8682 = trunc i64 %8676 to i32
  %8683 = and i32 %8682, 255
  %8684 = call i32 @llvm.ctpop.i32(i32 %8683)
  %8685 = trunc i32 %8684 to i8
  %8686 = and i8 %8685, 1
  %8687 = xor i8 %8686, 1
  %8688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8687, i8* %8688, align 1
  %8689 = xor i64 %8673, %8672
  %8690 = xor i64 %8689, %8676
  %8691 = lshr i64 %8690, 4
  %8692 = trunc i64 %8691 to i8
  %8693 = and i8 %8692, 1
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8693, i8* %8694, align 1
  %8695 = icmp eq i64 %8676, 0
  %8696 = zext i1 %8695 to i8
  %8697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8696, i8* %8697, align 1
  %8698 = lshr i64 %8676, 63
  %8699 = trunc i64 %8698 to i8
  %8700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8699, i8* %8700, align 1
  %8701 = lshr i64 %8672, 63
  %8702 = lshr i64 %8673, 63
  %8703 = xor i64 %8698, %8701
  %8704 = xor i64 %8698, %8702
  %8705 = add i64 %8703, %8704
  %8706 = icmp eq i64 %8705, 2
  %8707 = zext i1 %8706 to i8
  %8708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8707, i8* %8708, align 1
  store %struct.Memory* %loadMem_441da3, %struct.Memory** %MEMORY
  %loadMem_441da6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8710 = getelementptr inbounds %struct.GPR, %struct.GPR* %8709, i32 0, i32 33
  %8711 = getelementptr inbounds %struct.Reg, %struct.Reg* %8710, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %8711 to i64*
  %8712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8713 = getelementptr inbounds %struct.GPR, %struct.GPR* %8712, i32 0, i32 7
  %8714 = getelementptr inbounds %struct.Reg, %struct.Reg* %8713, i32 0, i32 0
  %RDX.i801 = bitcast %union.anon* %8714 to i64*
  %8715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8716 = getelementptr inbounds %struct.GPR, %struct.GPR* %8715, i32 0, i32 15
  %8717 = getelementptr inbounds %struct.Reg, %struct.Reg* %8716, i32 0, i32 0
  %RBP.i802 = bitcast %union.anon* %8717 to i64*
  %8718 = load i64, i64* %RBP.i802
  %8719 = sub i64 %8718, 28
  %8720 = load i64, i64* %PC.i800
  %8721 = add i64 %8720, 4
  store i64 %8721, i64* %PC.i800
  %8722 = inttoptr i64 %8719 to i32*
  %8723 = load i32, i32* %8722
  %8724 = sext i32 %8723 to i64
  store i64 %8724, i64* %RDX.i801, align 8
  store %struct.Memory* %loadMem_441da6, %struct.Memory** %MEMORY
  %loadMem_441daa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8726 = getelementptr inbounds %struct.GPR, %struct.GPR* %8725, i32 0, i32 33
  %8727 = getelementptr inbounds %struct.Reg, %struct.Reg* %8726, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %8727 to i64*
  %8728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8729 = getelementptr inbounds %struct.GPR, %struct.GPR* %8728, i32 0, i32 5
  %8730 = getelementptr inbounds %struct.Reg, %struct.Reg* %8729, i32 0, i32 0
  %RCX.i797 = bitcast %union.anon* %8730 to i64*
  %8731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8732 = getelementptr inbounds %struct.GPR, %struct.GPR* %8731, i32 0, i32 7
  %8733 = getelementptr inbounds %struct.Reg, %struct.Reg* %8732, i32 0, i32 0
  %RDX.i798 = bitcast %union.anon* %8733 to i64*
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8735 = getelementptr inbounds %struct.GPR, %struct.GPR* %8734, i32 0, i32 9
  %8736 = getelementptr inbounds %struct.Reg, %struct.Reg* %8735, i32 0, i32 0
  %RSI.i799 = bitcast %union.anon* %8736 to i64*
  %8737 = load i64, i64* %RCX.i797
  %8738 = load i64, i64* %RDX.i798
  %8739 = mul i64 %8738, 4
  %8740 = add i64 %8739, %8737
  %8741 = load i64, i64* %PC.i796
  %8742 = add i64 %8741, 3
  store i64 %8742, i64* %PC.i796
  %8743 = inttoptr i64 %8740 to i32*
  %8744 = load i32, i32* %8743
  %8745 = zext i32 %8744 to i64
  store i64 %8745, i64* %RSI.i799, align 8
  store %struct.Memory* %loadMem_441daa, %struct.Memory** %MEMORY
  %loadMem_441dad = load %struct.Memory*, %struct.Memory** %MEMORY
  %8746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8747 = getelementptr inbounds %struct.GPR, %struct.GPR* %8746, i32 0, i32 33
  %8748 = getelementptr inbounds %struct.Reg, %struct.Reg* %8747, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %8748 to i64*
  %8749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8750 = getelementptr inbounds %struct.GPR, %struct.GPR* %8749, i32 0, i32 5
  %8751 = getelementptr inbounds %struct.Reg, %struct.Reg* %8750, i32 0, i32 0
  %RCX.i794 = bitcast %union.anon* %8751 to i64*
  %8752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8753 = getelementptr inbounds %struct.GPR, %struct.GPR* %8752, i32 0, i32 15
  %8754 = getelementptr inbounds %struct.Reg, %struct.Reg* %8753, i32 0, i32 0
  %RBP.i795 = bitcast %union.anon* %8754 to i64*
  %8755 = load i64, i64* %RBP.i795
  %8756 = sub i64 %8755, 32
  %8757 = load i64, i64* %PC.i793
  %8758 = add i64 %8757, 4
  store i64 %8758, i64* %PC.i793
  %8759 = inttoptr i64 %8756 to i32*
  %8760 = load i32, i32* %8759
  %8761 = sext i32 %8760 to i64
  store i64 %8761, i64* %RCX.i794, align 8
  store %struct.Memory* %loadMem_441dad, %struct.Memory** %MEMORY
  %loadMem_441db1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8763 = getelementptr inbounds %struct.GPR, %struct.GPR* %8762, i32 0, i32 33
  %8764 = getelementptr inbounds %struct.Reg, %struct.Reg* %8763, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %8764 to i64*
  %8765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8766 = getelementptr inbounds %struct.GPR, %struct.GPR* %8765, i32 0, i32 5
  %8767 = getelementptr inbounds %struct.Reg, %struct.Reg* %8766, i32 0, i32 0
  %RCX.i792 = bitcast %union.anon* %8767 to i64*
  %8768 = load i64, i64* %RCX.i792
  %8769 = load i64, i64* %PC.i791
  %8770 = add i64 %8769, 4
  store i64 %8770, i64* %PC.i791
  %8771 = shl i64 %8768, 5
  %8772 = icmp slt i64 %8771, 0
  %8773 = shl i64 %8771, 1
  store i64 %8773, i64* %RCX.i792, align 8
  %8774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8775 = zext i1 %8772 to i8
  store i8 %8775, i8* %8774, align 1
  %8776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8777 = trunc i64 %8773 to i32
  %8778 = and i32 %8777, 254
  %8779 = call i32 @llvm.ctpop.i32(i32 %8778)
  %8780 = trunc i32 %8779 to i8
  %8781 = and i8 %8780, 1
  %8782 = xor i8 %8781, 1
  store i8 %8782, i8* %8776, align 1
  %8783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8783, align 1
  %8784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8785 = icmp eq i64 %8773, 0
  %8786 = zext i1 %8785 to i8
  store i8 %8786, i8* %8784, align 1
  %8787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8788 = lshr i64 %8773, 63
  %8789 = trunc i64 %8788 to i8
  store i8 %8789, i8* %8787, align 1
  %8790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8790, align 1
  store %struct.Memory* %loadMem_441db1, %struct.Memory** %MEMORY
  %loadMem_441db5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8792 = getelementptr inbounds %struct.GPR, %struct.GPR* %8791, i32 0, i32 33
  %8793 = getelementptr inbounds %struct.Reg, %struct.Reg* %8792, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %8793 to i64*
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8795 = getelementptr inbounds %struct.GPR, %struct.GPR* %8794, i32 0, i32 1
  %8796 = getelementptr inbounds %struct.Reg, %struct.Reg* %8795, i32 0, i32 0
  %RAX.i789 = bitcast %union.anon* %8796 to i64*
  %8797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8798 = getelementptr inbounds %struct.GPR, %struct.GPR* %8797, i32 0, i32 5
  %8799 = getelementptr inbounds %struct.Reg, %struct.Reg* %8798, i32 0, i32 0
  %RCX.i790 = bitcast %union.anon* %8799 to i64*
  %8800 = load i64, i64* %RAX.i789
  %8801 = load i64, i64* %RCX.i790
  %8802 = load i64, i64* %PC.i788
  %8803 = add i64 %8802, 3
  store i64 %8803, i64* %PC.i788
  %8804 = add i64 %8801, %8800
  store i64 %8804, i64* %RAX.i789, align 8
  %8805 = icmp ult i64 %8804, %8800
  %8806 = icmp ult i64 %8804, %8801
  %8807 = or i1 %8805, %8806
  %8808 = zext i1 %8807 to i8
  %8809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8808, i8* %8809, align 1
  %8810 = trunc i64 %8804 to i32
  %8811 = and i32 %8810, 255
  %8812 = call i32 @llvm.ctpop.i32(i32 %8811)
  %8813 = trunc i32 %8812 to i8
  %8814 = and i8 %8813, 1
  %8815 = xor i8 %8814, 1
  %8816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8815, i8* %8816, align 1
  %8817 = xor i64 %8801, %8800
  %8818 = xor i64 %8817, %8804
  %8819 = lshr i64 %8818, 4
  %8820 = trunc i64 %8819 to i8
  %8821 = and i8 %8820, 1
  %8822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8821, i8* %8822, align 1
  %8823 = icmp eq i64 %8804, 0
  %8824 = zext i1 %8823 to i8
  %8825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8824, i8* %8825, align 1
  %8826 = lshr i64 %8804, 63
  %8827 = trunc i64 %8826 to i8
  %8828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8827, i8* %8828, align 1
  %8829 = lshr i64 %8800, 63
  %8830 = lshr i64 %8801, 63
  %8831 = xor i64 %8826, %8829
  %8832 = xor i64 %8826, %8830
  %8833 = add i64 %8831, %8832
  %8834 = icmp eq i64 %8833, 2
  %8835 = zext i1 %8834 to i8
  %8836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8835, i8* %8836, align 1
  store %struct.Memory* %loadMem_441db5, %struct.Memory** %MEMORY
  %loadMem_441db8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8838 = getelementptr inbounds %struct.GPR, %struct.GPR* %8837, i32 0, i32 33
  %8839 = getelementptr inbounds %struct.Reg, %struct.Reg* %8838, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %8839 to i64*
  %8840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8841 = getelementptr inbounds %struct.GPR, %struct.GPR* %8840, i32 0, i32 5
  %8842 = getelementptr inbounds %struct.Reg, %struct.Reg* %8841, i32 0, i32 0
  %RCX.i786 = bitcast %union.anon* %8842 to i64*
  %8843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8844 = getelementptr inbounds %struct.GPR, %struct.GPR* %8843, i32 0, i32 15
  %8845 = getelementptr inbounds %struct.Reg, %struct.Reg* %8844, i32 0, i32 0
  %RBP.i787 = bitcast %union.anon* %8845 to i64*
  %8846 = load i64, i64* %RBP.i787
  %8847 = sub i64 %8846, 28
  %8848 = load i64, i64* %PC.i785
  %8849 = add i64 %8848, 4
  store i64 %8849, i64* %PC.i785
  %8850 = inttoptr i64 %8847 to i32*
  %8851 = load i32, i32* %8850
  %8852 = sext i32 %8851 to i64
  store i64 %8852, i64* %RCX.i786, align 8
  store %struct.Memory* %loadMem_441db8, %struct.Memory** %MEMORY
  %loadMem_441dbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8854 = getelementptr inbounds %struct.GPR, %struct.GPR* %8853, i32 0, i32 33
  %8855 = getelementptr inbounds %struct.Reg, %struct.Reg* %8854, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %8855 to i64*
  %8856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8857 = getelementptr inbounds %struct.GPR, %struct.GPR* %8856, i32 0, i32 9
  %8858 = getelementptr inbounds %struct.Reg, %struct.Reg* %8857, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %8858 to i32*
  %8859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8860 = getelementptr inbounds %struct.GPR, %struct.GPR* %8859, i32 0, i32 1
  %8861 = getelementptr inbounds %struct.Reg, %struct.Reg* %8860, i32 0, i32 0
  %RAX.i783 = bitcast %union.anon* %8861 to i64*
  %8862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8863 = getelementptr inbounds %struct.GPR, %struct.GPR* %8862, i32 0, i32 5
  %8864 = getelementptr inbounds %struct.Reg, %struct.Reg* %8863, i32 0, i32 0
  %RCX.i784 = bitcast %union.anon* %8864 to i64*
  %8865 = load i64, i64* %RAX.i783
  %8866 = load i64, i64* %RCX.i784
  %8867 = mul i64 %8866, 4
  %8868 = add i64 %8867, %8865
  %8869 = load i32, i32* %ESI.i
  %8870 = zext i32 %8869 to i64
  %8871 = load i64, i64* %PC.i782
  %8872 = add i64 %8871, 3
  store i64 %8872, i64* %PC.i782
  %8873 = inttoptr i64 %8868 to i32*
  store i32 %8869, i32* %8873
  store %struct.Memory* %loadMem_441dbc, %struct.Memory** %MEMORY
  br label %block_.L_441dbf

block_.L_441dbf:                                  ; preds = %block_.L_441d82, %block_441d40
  %loadMem_441dbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8875 = getelementptr inbounds %struct.GPR, %struct.GPR* %8874, i32 0, i32 33
  %8876 = getelementptr inbounds %struct.Reg, %struct.Reg* %8875, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %8876 to i64*
  %8877 = load i64, i64* %PC.i781
  %8878 = add i64 %8877, 5
  %8879 = load i64, i64* %PC.i781
  %8880 = add i64 %8879, 5
  store i64 %8880, i64* %PC.i781
  %8881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8878, i64* %8881, align 8
  store %struct.Memory* %loadMem_441dbf, %struct.Memory** %MEMORY
  br label %block_.L_441dc4

block_.L_441dc4:                                  ; preds = %block_.L_441dbf
  %loadMem_441dc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8883 = getelementptr inbounds %struct.GPR, %struct.GPR* %8882, i32 0, i32 33
  %8884 = getelementptr inbounds %struct.Reg, %struct.Reg* %8883, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %8884 to i64*
  %8885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8886 = getelementptr inbounds %struct.GPR, %struct.GPR* %8885, i32 0, i32 1
  %8887 = getelementptr inbounds %struct.Reg, %struct.Reg* %8886, i32 0, i32 0
  %RAX.i779 = bitcast %union.anon* %8887 to i64*
  %8888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8889 = getelementptr inbounds %struct.GPR, %struct.GPR* %8888, i32 0, i32 15
  %8890 = getelementptr inbounds %struct.Reg, %struct.Reg* %8889, i32 0, i32 0
  %RBP.i780 = bitcast %union.anon* %8890 to i64*
  %8891 = load i64, i64* %RBP.i780
  %8892 = sub i64 %8891, 32
  %8893 = load i64, i64* %PC.i778
  %8894 = add i64 %8893, 3
  store i64 %8894, i64* %PC.i778
  %8895 = inttoptr i64 %8892 to i32*
  %8896 = load i32, i32* %8895
  %8897 = zext i32 %8896 to i64
  store i64 %8897, i64* %RAX.i779, align 8
  store %struct.Memory* %loadMem_441dc4, %struct.Memory** %MEMORY
  %loadMem_441dc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8899 = getelementptr inbounds %struct.GPR, %struct.GPR* %8898, i32 0, i32 33
  %8900 = getelementptr inbounds %struct.Reg, %struct.Reg* %8899, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %8900 to i64*
  %8901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8902 = getelementptr inbounds %struct.GPR, %struct.GPR* %8901, i32 0, i32 1
  %8903 = getelementptr inbounds %struct.Reg, %struct.Reg* %8902, i32 0, i32 0
  %RAX.i777 = bitcast %union.anon* %8903 to i64*
  %8904 = load i64, i64* %RAX.i777
  %8905 = load i64, i64* %PC.i776
  %8906 = add i64 %8905, 3
  store i64 %8906, i64* %PC.i776
  %8907 = trunc i64 %8904 to i32
  %8908 = add i32 1, %8907
  %8909 = zext i32 %8908 to i64
  store i64 %8909, i64* %RAX.i777, align 8
  %8910 = icmp ult i32 %8908, %8907
  %8911 = icmp ult i32 %8908, 1
  %8912 = or i1 %8910, %8911
  %8913 = zext i1 %8912 to i8
  %8914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8913, i8* %8914, align 1
  %8915 = and i32 %8908, 255
  %8916 = call i32 @llvm.ctpop.i32(i32 %8915)
  %8917 = trunc i32 %8916 to i8
  %8918 = and i8 %8917, 1
  %8919 = xor i8 %8918, 1
  %8920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8919, i8* %8920, align 1
  %8921 = xor i64 1, %8904
  %8922 = trunc i64 %8921 to i32
  %8923 = xor i32 %8922, %8908
  %8924 = lshr i32 %8923, 4
  %8925 = trunc i32 %8924 to i8
  %8926 = and i8 %8925, 1
  %8927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8926, i8* %8927, align 1
  %8928 = icmp eq i32 %8908, 0
  %8929 = zext i1 %8928 to i8
  %8930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8929, i8* %8930, align 1
  %8931 = lshr i32 %8908, 31
  %8932 = trunc i32 %8931 to i8
  %8933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8932, i8* %8933, align 1
  %8934 = lshr i32 %8907, 31
  %8935 = xor i32 %8931, %8934
  %8936 = add i32 %8935, %8931
  %8937 = icmp eq i32 %8936, 2
  %8938 = zext i1 %8937 to i8
  %8939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8938, i8* %8939, align 1
  store %struct.Memory* %loadMem_441dc7, %struct.Memory** %MEMORY
  %loadMem_441dca = load %struct.Memory*, %struct.Memory** %MEMORY
  %8940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8941 = getelementptr inbounds %struct.GPR, %struct.GPR* %8940, i32 0, i32 33
  %8942 = getelementptr inbounds %struct.Reg, %struct.Reg* %8941, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %8942 to i64*
  %8943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8944 = getelementptr inbounds %struct.GPR, %struct.GPR* %8943, i32 0, i32 1
  %8945 = getelementptr inbounds %struct.Reg, %struct.Reg* %8944, i32 0, i32 0
  %EAX.i774 = bitcast %union.anon* %8945 to i32*
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8947 = getelementptr inbounds %struct.GPR, %struct.GPR* %8946, i32 0, i32 15
  %8948 = getelementptr inbounds %struct.Reg, %struct.Reg* %8947, i32 0, i32 0
  %RBP.i775 = bitcast %union.anon* %8948 to i64*
  %8949 = load i64, i64* %RBP.i775
  %8950 = sub i64 %8949, 32
  %8951 = load i32, i32* %EAX.i774
  %8952 = zext i32 %8951 to i64
  %8953 = load i64, i64* %PC.i773
  %8954 = add i64 %8953, 3
  store i64 %8954, i64* %PC.i773
  %8955 = inttoptr i64 %8950 to i32*
  store i32 %8951, i32* %8955
  store %struct.Memory* %loadMem_441dca, %struct.Memory** %MEMORY
  %loadMem_441dcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8957 = getelementptr inbounds %struct.GPR, %struct.GPR* %8956, i32 0, i32 33
  %8958 = getelementptr inbounds %struct.Reg, %struct.Reg* %8957, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %8958 to i64*
  %8959 = load i64, i64* %PC.i772
  %8960 = add i64 %8959, -174
  %8961 = load i64, i64* %PC.i772
  %8962 = add i64 %8961, 5
  store i64 %8962, i64* %PC.i772
  %8963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8960, i64* %8963, align 8
  store %struct.Memory* %loadMem_441dcd, %struct.Memory** %MEMORY
  br label %block_.L_441d1f

block_.L_441dd2:                                  ; preds = %block_.L_441d1f
  %loadMem_441dd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8965 = getelementptr inbounds %struct.GPR, %struct.GPR* %8964, i32 0, i32 33
  %8966 = getelementptr inbounds %struct.Reg, %struct.Reg* %8965, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %8966 to i64*
  %8967 = load i64, i64* %PC.i771
  %8968 = add i64 %8967, 5
  %8969 = load i64, i64* %PC.i771
  %8970 = add i64 %8969, 5
  store i64 %8970, i64* %PC.i771
  %8971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8968, i64* %8971, align 8
  store %struct.Memory* %loadMem_441dd2, %struct.Memory** %MEMORY
  br label %block_.L_441dd7

block_.L_441dd7:                                  ; preds = %block_.L_441dd2
  %loadMem_441dd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8973 = getelementptr inbounds %struct.GPR, %struct.GPR* %8972, i32 0, i32 33
  %8974 = getelementptr inbounds %struct.Reg, %struct.Reg* %8973, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %8974 to i64*
  %8975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8976 = getelementptr inbounds %struct.GPR, %struct.GPR* %8975, i32 0, i32 1
  %8977 = getelementptr inbounds %struct.Reg, %struct.Reg* %8976, i32 0, i32 0
  %RAX.i769 = bitcast %union.anon* %8977 to i64*
  %8978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8979 = getelementptr inbounds %struct.GPR, %struct.GPR* %8978, i32 0, i32 15
  %8980 = getelementptr inbounds %struct.Reg, %struct.Reg* %8979, i32 0, i32 0
  %RBP.i770 = bitcast %union.anon* %8980 to i64*
  %8981 = load i64, i64* %RBP.i770
  %8982 = sub i64 %8981, 28
  %8983 = load i64, i64* %PC.i768
  %8984 = add i64 %8983, 3
  store i64 %8984, i64* %PC.i768
  %8985 = inttoptr i64 %8982 to i32*
  %8986 = load i32, i32* %8985
  %8987 = zext i32 %8986 to i64
  store i64 %8987, i64* %RAX.i769, align 8
  store %struct.Memory* %loadMem_441dd7, %struct.Memory** %MEMORY
  %loadMem_441dda = load %struct.Memory*, %struct.Memory** %MEMORY
  %8988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8989 = getelementptr inbounds %struct.GPR, %struct.GPR* %8988, i32 0, i32 33
  %8990 = getelementptr inbounds %struct.Reg, %struct.Reg* %8989, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %8990 to i64*
  %8991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8992 = getelementptr inbounds %struct.GPR, %struct.GPR* %8991, i32 0, i32 1
  %8993 = getelementptr inbounds %struct.Reg, %struct.Reg* %8992, i32 0, i32 0
  %RAX.i767 = bitcast %union.anon* %8993 to i64*
  %8994 = load i64, i64* %RAX.i767
  %8995 = load i64, i64* %PC.i766
  %8996 = add i64 %8995, 3
  store i64 %8996, i64* %PC.i766
  %8997 = trunc i64 %8994 to i32
  %8998 = add i32 1, %8997
  %8999 = zext i32 %8998 to i64
  store i64 %8999, i64* %RAX.i767, align 8
  %9000 = icmp ult i32 %8998, %8997
  %9001 = icmp ult i32 %8998, 1
  %9002 = or i1 %9000, %9001
  %9003 = zext i1 %9002 to i8
  %9004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9003, i8* %9004, align 1
  %9005 = and i32 %8998, 255
  %9006 = call i32 @llvm.ctpop.i32(i32 %9005)
  %9007 = trunc i32 %9006 to i8
  %9008 = and i8 %9007, 1
  %9009 = xor i8 %9008, 1
  %9010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9009, i8* %9010, align 1
  %9011 = xor i64 1, %8994
  %9012 = trunc i64 %9011 to i32
  %9013 = xor i32 %9012, %8998
  %9014 = lshr i32 %9013, 4
  %9015 = trunc i32 %9014 to i8
  %9016 = and i8 %9015, 1
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9016, i8* %9017, align 1
  %9018 = icmp eq i32 %8998, 0
  %9019 = zext i1 %9018 to i8
  %9020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9019, i8* %9020, align 1
  %9021 = lshr i32 %8998, 31
  %9022 = trunc i32 %9021 to i8
  %9023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9022, i8* %9023, align 1
  %9024 = lshr i32 %8997, 31
  %9025 = xor i32 %9021, %9024
  %9026 = add i32 %9025, %9021
  %9027 = icmp eq i32 %9026, 2
  %9028 = zext i1 %9027 to i8
  %9029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9028, i8* %9029, align 1
  store %struct.Memory* %loadMem_441dda, %struct.Memory** %MEMORY
  %loadMem_441ddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9031 = getelementptr inbounds %struct.GPR, %struct.GPR* %9030, i32 0, i32 33
  %9032 = getelementptr inbounds %struct.Reg, %struct.Reg* %9031, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %9032 to i64*
  %9033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9034 = getelementptr inbounds %struct.GPR, %struct.GPR* %9033, i32 0, i32 1
  %9035 = getelementptr inbounds %struct.Reg, %struct.Reg* %9034, i32 0, i32 0
  %EAX.i764 = bitcast %union.anon* %9035 to i32*
  %9036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9037 = getelementptr inbounds %struct.GPR, %struct.GPR* %9036, i32 0, i32 15
  %9038 = getelementptr inbounds %struct.Reg, %struct.Reg* %9037, i32 0, i32 0
  %RBP.i765 = bitcast %union.anon* %9038 to i64*
  %9039 = load i64, i64* %RBP.i765
  %9040 = sub i64 %9039, 28
  %9041 = load i32, i32* %EAX.i764
  %9042 = zext i32 %9041 to i64
  %9043 = load i64, i64* %PC.i763
  %9044 = add i64 %9043, 3
  store i64 %9044, i64* %PC.i763
  %9045 = inttoptr i64 %9040 to i32*
  store i32 %9041, i32* %9045
  store %struct.Memory* %loadMem_441ddd, %struct.Memory** %MEMORY
  %loadMem_441de0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9047 = getelementptr inbounds %struct.GPR, %struct.GPR* %9046, i32 0, i32 33
  %9048 = getelementptr inbounds %struct.Reg, %struct.Reg* %9047, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %9048 to i64*
  %9049 = load i64, i64* %PC.i762
  %9050 = add i64 %9049, -223
  %9051 = load i64, i64* %PC.i762
  %9052 = add i64 %9051, 5
  store i64 %9052, i64* %PC.i762
  %9053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9050, i64* %9053, align 8
  store %struct.Memory* %loadMem_441de0, %struct.Memory** %MEMORY
  br label %block_.L_441d01

block_.L_441de5:                                  ; preds = %block_.L_441d01
  %loadMem_441de5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9055 = getelementptr inbounds %struct.GPR, %struct.GPR* %9054, i32 0, i32 33
  %9056 = getelementptr inbounds %struct.Reg, %struct.Reg* %9055, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %9056 to i64*
  %9057 = load i64, i64* %PC.i761
  %9058 = add i64 %9057, 5
  %9059 = load i64, i64* %PC.i761
  %9060 = add i64 %9059, 5
  store i64 %9060, i64* %PC.i761
  %9061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9058, i64* %9061, align 8
  store %struct.Memory* %loadMem_441de5, %struct.Memory** %MEMORY
  br label %block_.L_441dea

block_.L_441dea:                                  ; preds = %block_.L_441de5, %block_.L_441ce5
  %loadMem_441dea = load %struct.Memory*, %struct.Memory** %MEMORY
  %9062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9063 = getelementptr inbounds %struct.GPR, %struct.GPR* %9062, i32 0, i32 33
  %9064 = getelementptr inbounds %struct.Reg, %struct.Reg* %9063, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %9064 to i64*
  %9065 = load i64, i64* %PC.i760
  %9066 = add i64 %9065, 5
  %9067 = load i64, i64* %PC.i760
  %9068 = add i64 %9067, 5
  store i64 %9068, i64* %PC.i760
  %9069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9066, i64* %9069, align 8
  store %struct.Memory* %loadMem_441dea, %struct.Memory** %MEMORY
  br label %block_.L_441def

block_.L_441def:                                  ; preds = %block_.L_441dea, %block_441c0f, %block_.L_441bfa
  %loadMem_441def = load %struct.Memory*, %struct.Memory** %MEMORY
  %9070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9071 = getelementptr inbounds %struct.GPR, %struct.GPR* %9070, i32 0, i32 33
  %9072 = getelementptr inbounds %struct.Reg, %struct.Reg* %9071, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %9072 to i64*
  %9073 = load i64, i64* %PC.i759
  %9074 = add i64 %9073, 5
  %9075 = load i64, i64* %PC.i759
  %9076 = add i64 %9075, 5
  store i64 %9076, i64* %PC.i759
  %9077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9074, i64* %9077, align 8
  store %struct.Memory* %loadMem_441def, %struct.Memory** %MEMORY
  br label %block_.L_441df4

block_.L_441df4:                                  ; preds = %block_.L_441def, %block_441be1
  %loadMem_441df4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9079 = getelementptr inbounds %struct.GPR, %struct.GPR* %9078, i32 0, i32 33
  %9080 = getelementptr inbounds %struct.Reg, %struct.Reg* %9079, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %9080 to i64*
  %9081 = load i64, i64* %PC.i758
  %9082 = add i64 %9081, 5
  %9083 = load i64, i64* %PC.i758
  %9084 = add i64 %9083, 5
  store i64 %9084, i64* %PC.i758
  %9085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9082, i64* %9085, align 8
  store %struct.Memory* %loadMem_441df4, %struct.Memory** %MEMORY
  br label %block_.L_441df9

block_.L_441df9:                                  ; preds = %block_.L_441df4
  %loadMem_441df9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9087 = getelementptr inbounds %struct.GPR, %struct.GPR* %9086, i32 0, i32 33
  %9088 = getelementptr inbounds %struct.Reg, %struct.Reg* %9087, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %9088 to i64*
  %9089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9090 = getelementptr inbounds %struct.GPR, %struct.GPR* %9089, i32 0, i32 1
  %9091 = getelementptr inbounds %struct.Reg, %struct.Reg* %9090, i32 0, i32 0
  %RAX.i756 = bitcast %union.anon* %9091 to i64*
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9093 = getelementptr inbounds %struct.GPR, %struct.GPR* %9092, i32 0, i32 15
  %9094 = getelementptr inbounds %struct.Reg, %struct.Reg* %9093, i32 0, i32 0
  %RBP.i757 = bitcast %union.anon* %9094 to i64*
  %9095 = load i64, i64* %RBP.i757
  %9096 = sub i64 %9095, 12
  %9097 = load i64, i64* %PC.i755
  %9098 = add i64 %9097, 3
  store i64 %9098, i64* %PC.i755
  %9099 = inttoptr i64 %9096 to i32*
  %9100 = load i32, i32* %9099
  %9101 = zext i32 %9100 to i64
  store i64 %9101, i64* %RAX.i756, align 8
  store %struct.Memory* %loadMem_441df9, %struct.Memory** %MEMORY
  %loadMem_441dfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9103 = getelementptr inbounds %struct.GPR, %struct.GPR* %9102, i32 0, i32 33
  %9104 = getelementptr inbounds %struct.Reg, %struct.Reg* %9103, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %9104 to i64*
  %9105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9106 = getelementptr inbounds %struct.GPR, %struct.GPR* %9105, i32 0, i32 1
  %9107 = getelementptr inbounds %struct.Reg, %struct.Reg* %9106, i32 0, i32 0
  %RAX.i754 = bitcast %union.anon* %9107 to i64*
  %9108 = load i64, i64* %RAX.i754
  %9109 = load i64, i64* %PC.i753
  %9110 = add i64 %9109, 3
  store i64 %9110, i64* %PC.i753
  %9111 = trunc i64 %9108 to i32
  %9112 = add i32 1, %9111
  %9113 = zext i32 %9112 to i64
  store i64 %9113, i64* %RAX.i754, align 8
  %9114 = icmp ult i32 %9112, %9111
  %9115 = icmp ult i32 %9112, 1
  %9116 = or i1 %9114, %9115
  %9117 = zext i1 %9116 to i8
  %9118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9117, i8* %9118, align 1
  %9119 = and i32 %9112, 255
  %9120 = call i32 @llvm.ctpop.i32(i32 %9119)
  %9121 = trunc i32 %9120 to i8
  %9122 = and i8 %9121, 1
  %9123 = xor i8 %9122, 1
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9123, i8* %9124, align 1
  %9125 = xor i64 1, %9108
  %9126 = trunc i64 %9125 to i32
  %9127 = xor i32 %9126, %9112
  %9128 = lshr i32 %9127, 4
  %9129 = trunc i32 %9128 to i8
  %9130 = and i8 %9129, 1
  %9131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9130, i8* %9131, align 1
  %9132 = icmp eq i32 %9112, 0
  %9133 = zext i1 %9132 to i8
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9133, i8* %9134, align 1
  %9135 = lshr i32 %9112, 31
  %9136 = trunc i32 %9135 to i8
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9136, i8* %9137, align 1
  %9138 = lshr i32 %9111, 31
  %9139 = xor i32 %9135, %9138
  %9140 = add i32 %9139, %9135
  %9141 = icmp eq i32 %9140, 2
  %9142 = zext i1 %9141 to i8
  %9143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9142, i8* %9143, align 1
  store %struct.Memory* %loadMem_441dfc, %struct.Memory** %MEMORY
  %loadMem_441dff = load %struct.Memory*, %struct.Memory** %MEMORY
  %9144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9145 = getelementptr inbounds %struct.GPR, %struct.GPR* %9144, i32 0, i32 33
  %9146 = getelementptr inbounds %struct.Reg, %struct.Reg* %9145, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %9146 to i64*
  %9147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9148 = getelementptr inbounds %struct.GPR, %struct.GPR* %9147, i32 0, i32 1
  %9149 = getelementptr inbounds %struct.Reg, %struct.Reg* %9148, i32 0, i32 0
  %EAX.i751 = bitcast %union.anon* %9149 to i32*
  %9150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9151 = getelementptr inbounds %struct.GPR, %struct.GPR* %9150, i32 0, i32 15
  %9152 = getelementptr inbounds %struct.Reg, %struct.Reg* %9151, i32 0, i32 0
  %RBP.i752 = bitcast %union.anon* %9152 to i64*
  %9153 = load i64, i64* %RBP.i752
  %9154 = sub i64 %9153, 12
  %9155 = load i32, i32* %EAX.i751
  %9156 = zext i32 %9155 to i64
  %9157 = load i64, i64* %PC.i750
  %9158 = add i64 %9157, 3
  store i64 %9158, i64* %PC.i750
  %9159 = inttoptr i64 %9154 to i32*
  store i32 %9155, i32* %9159
  store %struct.Memory* %loadMem_441dff, %struct.Memory** %MEMORY
  %loadMem_441e02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9161 = getelementptr inbounds %struct.GPR, %struct.GPR* %9160, i32 0, i32 33
  %9162 = getelementptr inbounds %struct.Reg, %struct.Reg* %9161, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %9162 to i64*
  %9163 = load i64, i64* %PC.i749
  %9164 = add i64 %9163, -2026
  %9165 = load i64, i64* %PC.i749
  %9166 = add i64 %9165, 5
  store i64 %9166, i64* %PC.i749
  %9167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9164, i64* %9167, align 8
  store %struct.Memory* %loadMem_441e02, %struct.Memory** %MEMORY
  br label %block_.L_441618

block_.L_441e07:                                  ; preds = %block_.L_441618
  %loadMem_441e07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9169 = getelementptr inbounds %struct.GPR, %struct.GPR* %9168, i32 0, i32 33
  %9170 = getelementptr inbounds %struct.Reg, %struct.Reg* %9169, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %9170 to i64*
  %9171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9172 = getelementptr inbounds %struct.GPR, %struct.GPR* %9171, i32 0, i32 1
  %9173 = getelementptr inbounds %struct.Reg, %struct.Reg* %9172, i32 0, i32 0
  %RAX.i747 = bitcast %union.anon* %9173 to i64*
  %9174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9175 = getelementptr inbounds %struct.GPR, %struct.GPR* %9174, i32 0, i32 15
  %9176 = getelementptr inbounds %struct.Reg, %struct.Reg* %9175, i32 0, i32 0
  %RBP.i748 = bitcast %union.anon* %9176 to i64*
  %9177 = load i64, i64* %RBP.i748
  %9178 = sub i64 %9177, 8
  %9179 = load i64, i64* %PC.i746
  %9180 = add i64 %9179, 4
  store i64 %9180, i64* %PC.i746
  %9181 = inttoptr i64 %9178 to i64*
  %9182 = load i64, i64* %9181
  store i64 %9182, i64* %RAX.i747, align 8
  store %struct.Memory* %loadMem_441e07, %struct.Memory** %MEMORY
  %loadMem_441e0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9184 = getelementptr inbounds %struct.GPR, %struct.GPR* %9183, i32 0, i32 33
  %9185 = getelementptr inbounds %struct.Reg, %struct.Reg* %9184, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %9185 to i64*
  %9186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9187 = getelementptr inbounds %struct.GPR, %struct.GPR* %9186, i32 0, i32 1
  %9188 = getelementptr inbounds %struct.Reg, %struct.Reg* %9187, i32 0, i32 0
  %RAX.i744 = bitcast %union.anon* %9188 to i64*
  %9189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9190 = getelementptr inbounds %struct.GPR, %struct.GPR* %9189, i32 0, i32 5
  %9191 = getelementptr inbounds %struct.Reg, %struct.Reg* %9190, i32 0, i32 0
  %RCX.i745 = bitcast %union.anon* %9191 to i64*
  %9192 = load i64, i64* %RAX.i744
  %9193 = load i64, i64* %PC.i743
  %9194 = add i64 %9193, 2
  store i64 %9194, i64* %PC.i743
  %9195 = inttoptr i64 %9192 to i32*
  %9196 = load i32, i32* %9195
  %9197 = zext i32 %9196 to i64
  store i64 %9197, i64* %RCX.i745, align 8
  store %struct.Memory* %loadMem_441e0b, %struct.Memory** %MEMORY
  %loadMem_441e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9199 = getelementptr inbounds %struct.GPR, %struct.GPR* %9198, i32 0, i32 33
  %9200 = getelementptr inbounds %struct.Reg, %struct.Reg* %9199, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %9200 to i64*
  %9201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9202 = getelementptr inbounds %struct.GPR, %struct.GPR* %9201, i32 0, i32 5
  %9203 = getelementptr inbounds %struct.Reg, %struct.Reg* %9202, i32 0, i32 0
  %RCX.i742 = bitcast %union.anon* %9203 to i64*
  %9204 = load i64, i64* %RCX.i742
  %9205 = load i64, i64* %PC.i741
  %9206 = add i64 %9205, 3
  store i64 %9206, i64* %PC.i741
  %9207 = and i64 %9204, 4294967295
  %9208 = shl i64 %9207, 3
  %9209 = trunc i64 %9208 to i32
  %9210 = icmp slt i32 %9209, 0
  %9211 = shl i32 %9209, 1
  %9212 = zext i32 %9211 to i64
  store i64 %9212, i64* %RCX.i742, align 8
  %9213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9214 = zext i1 %9210 to i8
  store i8 %9214, i8* %9213, align 1
  %9215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9216 = and i32 %9211, 254
  %9217 = call i32 @llvm.ctpop.i32(i32 %9216)
  %9218 = trunc i32 %9217 to i8
  %9219 = and i8 %9218, 1
  %9220 = xor i8 %9219, 1
  store i8 %9220, i8* %9215, align 1
  %9221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9221, align 1
  %9222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9223 = icmp eq i32 %9211, 0
  %9224 = zext i1 %9223 to i8
  store i8 %9224, i8* %9222, align 1
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9226 = lshr i32 %9211, 31
  %9227 = trunc i32 %9226 to i8
  store i8 %9227, i8* %9225, align 1
  %9228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9228, align 1
  store %struct.Memory* %loadMem_441e0d, %struct.Memory** %MEMORY
  %loadMem_441e10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9230 = getelementptr inbounds %struct.GPR, %struct.GPR* %9229, i32 0, i32 33
  %9231 = getelementptr inbounds %struct.Reg, %struct.Reg* %9230, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %9231 to i64*
  %9232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9233 = getelementptr inbounds %struct.GPR, %struct.GPR* %9232, i32 0, i32 1
  %9234 = getelementptr inbounds %struct.Reg, %struct.Reg* %9233, i32 0, i32 0
  %RAX.i740 = bitcast %union.anon* %9234 to i64*
  %9235 = load i64, i64* %PC.i739
  %9236 = add i64 %9235, 8
  store i64 %9236, i64* %PC.i739
  %9237 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9237, i64* %RAX.i740, align 8
  store %struct.Memory* %loadMem_441e10, %struct.Memory** %MEMORY
  %loadMem_441e18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9239 = getelementptr inbounds %struct.GPR, %struct.GPR* %9238, i32 0, i32 33
  %9240 = getelementptr inbounds %struct.Reg, %struct.Reg* %9239, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %9240 to i64*
  %9241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9242 = getelementptr inbounds %struct.GPR, %struct.GPR* %9241, i32 0, i32 1
  %9243 = getelementptr inbounds %struct.Reg, %struct.Reg* %9242, i32 0, i32 0
  %RAX.i738 = bitcast %union.anon* %9243 to i64*
  %9244 = load i64, i64* %RAX.i738
  %9245 = add i64 %9244, 14168
  %9246 = load i64, i64* %PC.i737
  %9247 = add i64 %9246, 7
  store i64 %9247, i64* %PC.i737
  %9248 = inttoptr i64 %9245 to i64*
  %9249 = load i64, i64* %9248
  store i64 %9249, i64* %RAX.i738, align 8
  store %struct.Memory* %loadMem_441e18, %struct.Memory** %MEMORY
  %loadMem_441e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9251 = getelementptr inbounds %struct.GPR, %struct.GPR* %9250, i32 0, i32 33
  %9252 = getelementptr inbounds %struct.Reg, %struct.Reg* %9251, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %9252 to i64*
  %9253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9254 = getelementptr inbounds %struct.GPR, %struct.GPR* %9253, i32 0, i32 7
  %9255 = getelementptr inbounds %struct.Reg, %struct.Reg* %9254, i32 0, i32 0
  %RDX.i736 = bitcast %union.anon* %9255 to i64*
  %9256 = load i64, i64* %PC.i735
  %9257 = add i64 %9256, 8
  store i64 %9257, i64* %PC.i735
  %9258 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9258, i64* %RDX.i736, align 8
  store %struct.Memory* %loadMem_441e1f, %struct.Memory** %MEMORY
  %loadMem_441e27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9260 = getelementptr inbounds %struct.GPR, %struct.GPR* %9259, i32 0, i32 33
  %9261 = getelementptr inbounds %struct.Reg, %struct.Reg* %9260, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %9261 to i64*
  %9262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9263 = getelementptr inbounds %struct.GPR, %struct.GPR* %9262, i32 0, i32 7
  %9264 = getelementptr inbounds %struct.Reg, %struct.Reg* %9263, i32 0, i32 0
  %RDX.i734 = bitcast %union.anon* %9264 to i64*
  %9265 = load i64, i64* %RDX.i734
  %9266 = add i64 %9265, 12
  %9267 = load i64, i64* %PC.i733
  %9268 = add i64 %9267, 4
  store i64 %9268, i64* %PC.i733
  %9269 = inttoptr i64 %9266 to i32*
  %9270 = load i32, i32* %9269
  %9271 = sext i32 %9270 to i64
  store i64 %9271, i64* %RDX.i734, align 8
  store %struct.Memory* %loadMem_441e27, %struct.Memory** %MEMORY
  %loadMem_441e2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9273 = getelementptr inbounds %struct.GPR, %struct.GPR* %9272, i32 0, i32 33
  %9274 = getelementptr inbounds %struct.Reg, %struct.Reg* %9273, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %9274 to i64*
  %9275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9276 = getelementptr inbounds %struct.GPR, %struct.GPR* %9275, i32 0, i32 7
  %9277 = getelementptr inbounds %struct.Reg, %struct.Reg* %9276, i32 0, i32 0
  %RDX.i732 = bitcast %union.anon* %9277 to i64*
  %9278 = load i64, i64* %RDX.i732
  %9279 = load i64, i64* %PC.i731
  %9280 = add i64 %9279, 7
  store i64 %9280, i64* %PC.i731
  %9281 = sext i64 %9278 to i128
  %9282 = and i128 %9281, -18446744073709551616
  %9283 = zext i64 %9278 to i128
  %9284 = or i128 %9282, %9283
  %9285 = mul i128 632, %9284
  %9286 = trunc i128 %9285 to i64
  store i64 %9286, i64* %RDX.i732, align 8
  %9287 = sext i64 %9286 to i128
  %9288 = icmp ne i128 %9287, %9285
  %9289 = zext i1 %9288 to i8
  %9290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9289, i8* %9290, align 1
  %9291 = trunc i128 %9285 to i32
  %9292 = and i32 %9291, 255
  %9293 = call i32 @llvm.ctpop.i32(i32 %9292)
  %9294 = trunc i32 %9293 to i8
  %9295 = and i8 %9294, 1
  %9296 = xor i8 %9295, 1
  %9297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9296, i8* %9297, align 1
  %9298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9298, align 1
  %9299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9299, align 1
  %9300 = lshr i64 %9286, 63
  %9301 = trunc i64 %9300 to i8
  %9302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9301, i8* %9302, align 1
  %9303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9289, i8* %9303, align 1
  store %struct.Memory* %loadMem_441e2b, %struct.Memory** %MEMORY
  %loadMem_441e32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9305 = getelementptr inbounds %struct.GPR, %struct.GPR* %9304, i32 0, i32 33
  %9306 = getelementptr inbounds %struct.Reg, %struct.Reg* %9305, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %9306 to i64*
  %9307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9308 = getelementptr inbounds %struct.GPR, %struct.GPR* %9307, i32 0, i32 1
  %9309 = getelementptr inbounds %struct.Reg, %struct.Reg* %9308, i32 0, i32 0
  %RAX.i729 = bitcast %union.anon* %9309 to i64*
  %9310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9311 = getelementptr inbounds %struct.GPR, %struct.GPR* %9310, i32 0, i32 7
  %9312 = getelementptr inbounds %struct.Reg, %struct.Reg* %9311, i32 0, i32 0
  %RDX.i730 = bitcast %union.anon* %9312 to i64*
  %9313 = load i64, i64* %RAX.i729
  %9314 = load i64, i64* %RDX.i730
  %9315 = load i64, i64* %PC.i728
  %9316 = add i64 %9315, 3
  store i64 %9316, i64* %PC.i728
  %9317 = add i64 %9314, %9313
  store i64 %9317, i64* %RAX.i729, align 8
  %9318 = icmp ult i64 %9317, %9313
  %9319 = icmp ult i64 %9317, %9314
  %9320 = or i1 %9318, %9319
  %9321 = zext i1 %9320 to i8
  %9322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9321, i8* %9322, align 1
  %9323 = trunc i64 %9317 to i32
  %9324 = and i32 %9323, 255
  %9325 = call i32 @llvm.ctpop.i32(i32 %9324)
  %9326 = trunc i32 %9325 to i8
  %9327 = and i8 %9326, 1
  %9328 = xor i8 %9327, 1
  %9329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9328, i8* %9329, align 1
  %9330 = xor i64 %9314, %9313
  %9331 = xor i64 %9330, %9317
  %9332 = lshr i64 %9331, 4
  %9333 = trunc i64 %9332 to i8
  %9334 = and i8 %9333, 1
  %9335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9334, i8* %9335, align 1
  %9336 = icmp eq i64 %9317, 0
  %9337 = zext i1 %9336 to i8
  %9338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9337, i8* %9338, align 1
  %9339 = lshr i64 %9317, 63
  %9340 = trunc i64 %9339 to i8
  %9341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9340, i8* %9341, align 1
  %9342 = lshr i64 %9313, 63
  %9343 = lshr i64 %9314, 63
  %9344 = xor i64 %9339, %9342
  %9345 = xor i64 %9339, %9343
  %9346 = add i64 %9344, %9345
  %9347 = icmp eq i64 %9346, 2
  %9348 = zext i1 %9347 to i8
  %9349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9348, i8* %9349, align 1
  store %struct.Memory* %loadMem_441e32, %struct.Memory** %MEMORY
  %loadMem_441e35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9351 = getelementptr inbounds %struct.GPR, %struct.GPR* %9350, i32 0, i32 33
  %9352 = getelementptr inbounds %struct.Reg, %struct.Reg* %9351, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %9352 to i64*
  %9353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9354 = getelementptr inbounds %struct.GPR, %struct.GPR* %9353, i32 0, i32 1
  %9355 = getelementptr inbounds %struct.Reg, %struct.Reg* %9354, i32 0, i32 0
  %RAX.i726 = bitcast %union.anon* %9355 to i64*
  %9356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9357 = getelementptr inbounds %struct.GPR, %struct.GPR* %9356, i32 0, i32 5
  %9358 = getelementptr inbounds %struct.Reg, %struct.Reg* %9357, i32 0, i32 0
  %RCX.i727 = bitcast %union.anon* %9358 to i64*
  %9359 = load i64, i64* %RCX.i727
  %9360 = load i64, i64* %RAX.i726
  %9361 = add i64 %9360, 460
  %9362 = load i64, i64* %PC.i725
  %9363 = add i64 %9362, 6
  store i64 %9363, i64* %PC.i725
  %9364 = trunc i64 %9359 to i32
  %9365 = inttoptr i64 %9361 to i32*
  %9366 = load i32, i32* %9365
  %9367 = add i32 %9366, %9364
  %9368 = zext i32 %9367 to i64
  store i64 %9368, i64* %RCX.i727, align 8
  %9369 = icmp ult i32 %9367, %9364
  %9370 = icmp ult i32 %9367, %9366
  %9371 = or i1 %9369, %9370
  %9372 = zext i1 %9371 to i8
  %9373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9372, i8* %9373, align 1
  %9374 = and i32 %9367, 255
  %9375 = call i32 @llvm.ctpop.i32(i32 %9374)
  %9376 = trunc i32 %9375 to i8
  %9377 = and i8 %9376, 1
  %9378 = xor i8 %9377, 1
  %9379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9378, i8* %9379, align 1
  %9380 = xor i32 %9366, %9364
  %9381 = xor i32 %9380, %9367
  %9382 = lshr i32 %9381, 4
  %9383 = trunc i32 %9382 to i8
  %9384 = and i8 %9383, 1
  %9385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9384, i8* %9385, align 1
  %9386 = icmp eq i32 %9367, 0
  %9387 = zext i1 %9386 to i8
  %9388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9387, i8* %9388, align 1
  %9389 = lshr i32 %9367, 31
  %9390 = trunc i32 %9389 to i8
  %9391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9390, i8* %9391, align 1
  %9392 = lshr i32 %9364, 31
  %9393 = lshr i32 %9366, 31
  %9394 = xor i32 %9389, %9392
  %9395 = xor i32 %9389, %9393
  %9396 = add i32 %9394, %9395
  %9397 = icmp eq i32 %9396, 2
  %9398 = zext i1 %9397 to i8
  %9399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9398, i8* %9399, align 1
  store %struct.Memory* %loadMem_441e35, %struct.Memory** %MEMORY
  %loadMem_441e3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9401 = getelementptr inbounds %struct.GPR, %struct.GPR* %9400, i32 0, i32 33
  %9402 = getelementptr inbounds %struct.Reg, %struct.Reg* %9401, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %9402 to i64*
  %9403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9404 = getelementptr inbounds %struct.GPR, %struct.GPR* %9403, i32 0, i32 5
  %9405 = getelementptr inbounds %struct.Reg, %struct.Reg* %9404, i32 0, i32 0
  %ECX.i723 = bitcast %union.anon* %9405 to i32*
  %9406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9407 = getelementptr inbounds %struct.GPR, %struct.GPR* %9406, i32 0, i32 1
  %9408 = getelementptr inbounds %struct.Reg, %struct.Reg* %9407, i32 0, i32 0
  %RAX.i724 = bitcast %union.anon* %9408 to i64*
  %9409 = load i64, i64* %RAX.i724
  %9410 = add i64 %9409, 460
  %9411 = load i32, i32* %ECX.i723
  %9412 = zext i32 %9411 to i64
  %9413 = load i64, i64* %PC.i722
  %9414 = add i64 %9413, 6
  store i64 %9414, i64* %PC.i722
  %9415 = inttoptr i64 %9410 to i32*
  store i32 %9411, i32* %9415
  store %struct.Memory* %loadMem_441e3b, %struct.Memory** %MEMORY
  %loadMem_441e41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9417 = getelementptr inbounds %struct.GPR, %struct.GPR* %9416, i32 0, i32 33
  %9418 = getelementptr inbounds %struct.Reg, %struct.Reg* %9417, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %9418 to i64*
  %9419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9420 = getelementptr inbounds %struct.GPR, %struct.GPR* %9419, i32 0, i32 1
  %9421 = getelementptr inbounds %struct.Reg, %struct.Reg* %9420, i32 0, i32 0
  %RAX.i721 = bitcast %union.anon* %9421 to i64*
  %9422 = load i64, i64* %PC.i720
  %9423 = add i64 %9422, 8
  store i64 %9423, i64* %PC.i720
  %9424 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9424, i64* %RAX.i721, align 8
  store %struct.Memory* %loadMem_441e41, %struct.Memory** %MEMORY
  %loadMem_441e49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9426 = getelementptr inbounds %struct.GPR, %struct.GPR* %9425, i32 0, i32 33
  %9427 = getelementptr inbounds %struct.Reg, %struct.Reg* %9426, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %9427 to i64*
  %9428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9429 = getelementptr inbounds %struct.GPR, %struct.GPR* %9428, i32 0, i32 1
  %9430 = getelementptr inbounds %struct.Reg, %struct.Reg* %9429, i32 0, i32 0
  %RAX.i719 = bitcast %union.anon* %9430 to i64*
  %9431 = load i64, i64* %RAX.i719
  %9432 = add i64 %9431, 72724
  %9433 = load i64, i64* %PC.i718
  %9434 = add i64 %9433, 7
  store i64 %9434, i64* %PC.i718
  %9435 = inttoptr i64 %9432 to i32*
  %9436 = load i32, i32* %9435
  %9437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9437, align 1
  %9438 = and i32 %9436, 255
  %9439 = call i32 @llvm.ctpop.i32(i32 %9438)
  %9440 = trunc i32 %9439 to i8
  %9441 = and i8 %9440, 1
  %9442 = xor i8 %9441, 1
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9442, i8* %9443, align 1
  %9444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9444, align 1
  %9445 = icmp eq i32 %9436, 0
  %9446 = zext i1 %9445 to i8
  %9447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9446, i8* %9447, align 1
  %9448 = lshr i32 %9436, 31
  %9449 = trunc i32 %9448 to i8
  %9450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9449, i8* %9450, align 1
  %9451 = lshr i32 %9436, 31
  %9452 = xor i32 %9448, %9451
  %9453 = add i32 %9452, %9451
  %9454 = icmp eq i32 %9453, 2
  %9455 = zext i1 %9454 to i8
  %9456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9455, i8* %9456, align 1
  store %struct.Memory* %loadMem_441e49, %struct.Memory** %MEMORY
  %loadMem_441e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9458 = getelementptr inbounds %struct.GPR, %struct.GPR* %9457, i32 0, i32 33
  %9459 = getelementptr inbounds %struct.Reg, %struct.Reg* %9458, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %9459 to i64*
  %9460 = load i64, i64* %PC.i717
  %9461 = add i64 %9460, 1377
  %9462 = load i64, i64* %PC.i717
  %9463 = add i64 %9462, 6
  %9464 = load i64, i64* %PC.i717
  %9465 = add i64 %9464, 6
  store i64 %9465, i64* %PC.i717
  %9466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9467 = load i8, i8* %9466, align 1
  store i8 %9467, i8* %BRANCH_TAKEN, align 1
  %9468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9469 = icmp ne i8 %9467, 0
  %9470 = select i1 %9469, i64 %9461, i64 %9463
  store i64 %9470, i64* %9468, align 8
  store %struct.Memory* %loadMem_441e50, %struct.Memory** %MEMORY
  %loadBr_441e50 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441e50 = icmp eq i8 %loadBr_441e50, 1
  br i1 %cmpBr_441e50, label %block_.L_4423b1, label %block_441e56

block_441e56:                                     ; preds = %block_.L_441e07
  %loadMem_441e56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9472 = getelementptr inbounds %struct.GPR, %struct.GPR* %9471, i32 0, i32 33
  %9473 = getelementptr inbounds %struct.Reg, %struct.Reg* %9472, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %9473 to i64*
  %9474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9475 = getelementptr inbounds %struct.GPR, %struct.GPR* %9474, i32 0, i32 15
  %9476 = getelementptr inbounds %struct.Reg, %struct.Reg* %9475, i32 0, i32 0
  %RBP.i716 = bitcast %union.anon* %9476 to i64*
  %9477 = load i64, i64* %RBP.i716
  %9478 = sub i64 %9477, 28
  %9479 = load i64, i64* %PC.i715
  %9480 = add i64 %9479, 7
  store i64 %9480, i64* %PC.i715
  %9481 = inttoptr i64 %9478 to i32*
  store i32 0, i32* %9481
  store %struct.Memory* %loadMem_441e56, %struct.Memory** %MEMORY
  br label %block_.L_441e5d

block_.L_441e5d:                                  ; preds = %block_.L_44239e, %block_441e56
  %loadMem_441e5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9483 = getelementptr inbounds %struct.GPR, %struct.GPR* %9482, i32 0, i32 33
  %9484 = getelementptr inbounds %struct.Reg, %struct.Reg* %9483, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %9484 to i64*
  %9485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9486 = getelementptr inbounds %struct.GPR, %struct.GPR* %9485, i32 0, i32 15
  %9487 = getelementptr inbounds %struct.Reg, %struct.Reg* %9486, i32 0, i32 0
  %RBP.i714 = bitcast %union.anon* %9487 to i64*
  %9488 = load i64, i64* %RBP.i714
  %9489 = sub i64 %9488, 28
  %9490 = load i64, i64* %PC.i713
  %9491 = add i64 %9490, 4
  store i64 %9491, i64* %PC.i713
  %9492 = inttoptr i64 %9489 to i32*
  %9493 = load i32, i32* %9492
  %9494 = sub i32 %9493, 16
  %9495 = icmp ult i32 %9493, 16
  %9496 = zext i1 %9495 to i8
  %9497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9496, i8* %9497, align 1
  %9498 = and i32 %9494, 255
  %9499 = call i32 @llvm.ctpop.i32(i32 %9498)
  %9500 = trunc i32 %9499 to i8
  %9501 = and i8 %9500, 1
  %9502 = xor i8 %9501, 1
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9502, i8* %9503, align 1
  %9504 = xor i32 %9493, 16
  %9505 = xor i32 %9504, %9494
  %9506 = lshr i32 %9505, 4
  %9507 = trunc i32 %9506 to i8
  %9508 = and i8 %9507, 1
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9508, i8* %9509, align 1
  %9510 = icmp eq i32 %9494, 0
  %9511 = zext i1 %9510 to i8
  %9512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9511, i8* %9512, align 1
  %9513 = lshr i32 %9494, 31
  %9514 = trunc i32 %9513 to i8
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9514, i8* %9515, align 1
  %9516 = lshr i32 %9493, 31
  %9517 = xor i32 %9513, %9516
  %9518 = add i32 %9517, %9516
  %9519 = icmp eq i32 %9518, 2
  %9520 = zext i1 %9519 to i8
  %9521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9520, i8* %9521, align 1
  store %struct.Memory* %loadMem_441e5d, %struct.Memory** %MEMORY
  %loadMem_441e61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9523 = getelementptr inbounds %struct.GPR, %struct.GPR* %9522, i32 0, i32 33
  %9524 = getelementptr inbounds %struct.Reg, %struct.Reg* %9523, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %9524 to i64*
  %9525 = load i64, i64* %PC.i712
  %9526 = add i64 %9525, 1355
  %9527 = load i64, i64* %PC.i712
  %9528 = add i64 %9527, 6
  %9529 = load i64, i64* %PC.i712
  %9530 = add i64 %9529, 6
  store i64 %9530, i64* %PC.i712
  %9531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9532 = load i8, i8* %9531, align 1
  %9533 = icmp ne i8 %9532, 0
  %9534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9535 = load i8, i8* %9534, align 1
  %9536 = icmp ne i8 %9535, 0
  %9537 = xor i1 %9533, %9536
  %9538 = xor i1 %9537, true
  %9539 = zext i1 %9538 to i8
  store i8 %9539, i8* %BRANCH_TAKEN, align 1
  %9540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9541 = select i1 %9537, i64 %9528, i64 %9526
  store i64 %9541, i64* %9540, align 8
  store %struct.Memory* %loadMem_441e61, %struct.Memory** %MEMORY
  %loadBr_441e61 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441e61 = icmp eq i8 %loadBr_441e61, 1
  br i1 %cmpBr_441e61, label %block_.L_4423ac, label %block_441e67

block_441e67:                                     ; preds = %block_.L_441e5d
  %loadMem_441e67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9543 = getelementptr inbounds %struct.GPR, %struct.GPR* %9542, i32 0, i32 33
  %9544 = getelementptr inbounds %struct.Reg, %struct.Reg* %9543, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %9544 to i64*
  %9545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9546 = getelementptr inbounds %struct.GPR, %struct.GPR* %9545, i32 0, i32 15
  %9547 = getelementptr inbounds %struct.Reg, %struct.Reg* %9546, i32 0, i32 0
  %RBP.i711 = bitcast %union.anon* %9547 to i64*
  %9548 = load i64, i64* %RBP.i711
  %9549 = sub i64 %9548, 32
  %9550 = load i64, i64* %PC.i710
  %9551 = add i64 %9550, 7
  store i64 %9551, i64* %PC.i710
  %9552 = inttoptr i64 %9549 to i32*
  store i32 0, i32* %9552
  store %struct.Memory* %loadMem_441e67, %struct.Memory** %MEMORY
  br label %block_.L_441e6e

block_.L_441e6e:                                  ; preds = %block_.L_44233f, %block_441e67
  %loadMem_441e6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9554 = getelementptr inbounds %struct.GPR, %struct.GPR* %9553, i32 0, i32 33
  %9555 = getelementptr inbounds %struct.Reg, %struct.Reg* %9554, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %9555 to i64*
  %9556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9557 = getelementptr inbounds %struct.GPR, %struct.GPR* %9556, i32 0, i32 15
  %9558 = getelementptr inbounds %struct.Reg, %struct.Reg* %9557, i32 0, i32 0
  %RBP.i709 = bitcast %union.anon* %9558 to i64*
  %9559 = load i64, i64* %RBP.i709
  %9560 = sub i64 %9559, 32
  %9561 = load i64, i64* %PC.i708
  %9562 = add i64 %9561, 4
  store i64 %9562, i64* %PC.i708
  %9563 = inttoptr i64 %9560 to i32*
  %9564 = load i32, i32* %9563
  %9565 = sub i32 %9564, 16
  %9566 = icmp ult i32 %9564, 16
  %9567 = zext i1 %9566 to i8
  %9568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9567, i8* %9568, align 1
  %9569 = and i32 %9565, 255
  %9570 = call i32 @llvm.ctpop.i32(i32 %9569)
  %9571 = trunc i32 %9570 to i8
  %9572 = and i8 %9571, 1
  %9573 = xor i8 %9572, 1
  %9574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9573, i8* %9574, align 1
  %9575 = xor i32 %9564, 16
  %9576 = xor i32 %9575, %9565
  %9577 = lshr i32 %9576, 4
  %9578 = trunc i32 %9577 to i8
  %9579 = and i8 %9578, 1
  %9580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9579, i8* %9580, align 1
  %9581 = icmp eq i32 %9565, 0
  %9582 = zext i1 %9581 to i8
  %9583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9582, i8* %9583, align 1
  %9584 = lshr i32 %9565, 31
  %9585 = trunc i32 %9584 to i8
  %9586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9585, i8* %9586, align 1
  %9587 = lshr i32 %9564, 31
  %9588 = xor i32 %9584, %9587
  %9589 = add i32 %9588, %9587
  %9590 = icmp eq i32 %9589, 2
  %9591 = zext i1 %9590 to i8
  %9592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9591, i8* %9592, align 1
  store %struct.Memory* %loadMem_441e6e, %struct.Memory** %MEMORY
  %loadMem_441e72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9594 = getelementptr inbounds %struct.GPR, %struct.GPR* %9593, i32 0, i32 33
  %9595 = getelementptr inbounds %struct.Reg, %struct.Reg* %9594, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %9595 to i64*
  %9596 = load i64, i64* %PC.i707
  %9597 = add i64 %9596, 1319
  %9598 = load i64, i64* %PC.i707
  %9599 = add i64 %9598, 6
  %9600 = load i64, i64* %PC.i707
  %9601 = add i64 %9600, 6
  store i64 %9601, i64* %PC.i707
  %9602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9603 = load i8, i8* %9602, align 1
  %9604 = icmp ne i8 %9603, 0
  %9605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9606 = load i8, i8* %9605, align 1
  %9607 = icmp ne i8 %9606, 0
  %9608 = xor i1 %9604, %9607
  %9609 = xor i1 %9608, true
  %9610 = zext i1 %9609 to i8
  store i8 %9610, i8* %BRANCH_TAKEN, align 1
  %9611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9612 = select i1 %9608, i64 %9599, i64 %9597
  store i64 %9612, i64* %9611, align 8
  store %struct.Memory* %loadMem_441e72, %struct.Memory** %MEMORY
  %loadBr_441e72 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441e72 = icmp eq i8 %loadBr_441e72, 1
  br i1 %cmpBr_441e72, label %block_.L_442399, label %block_441e78

block_441e78:                                     ; preds = %block_.L_441e6e
  %loadMem_441e78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9614 = getelementptr inbounds %struct.GPR, %struct.GPR* %9613, i32 0, i32 33
  %9615 = getelementptr inbounds %struct.Reg, %struct.Reg* %9614, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %9615 to i64*
  %9616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9617 = getelementptr inbounds %struct.GPR, %struct.GPR* %9616, i32 0, i32 1
  %9618 = getelementptr inbounds %struct.Reg, %struct.Reg* %9617, i32 0, i32 0
  %EAX.i705 = bitcast %union.anon* %9618 to i32*
  %9619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9620 = getelementptr inbounds %struct.GPR, %struct.GPR* %9619, i32 0, i32 1
  %9621 = getelementptr inbounds %struct.Reg, %struct.Reg* %9620, i32 0, i32 0
  %RAX.i706 = bitcast %union.anon* %9621 to i64*
  %9622 = load i64, i64* %RAX.i706
  %9623 = load i32, i32* %EAX.i705
  %9624 = zext i32 %9623 to i64
  %9625 = load i64, i64* %PC.i704
  %9626 = add i64 %9625, 2
  store i64 %9626, i64* %PC.i704
  %9627 = xor i64 %9624, %9622
  %9628 = trunc i64 %9627 to i32
  %9629 = and i64 %9627, 4294967295
  store i64 %9629, i64* %RAX.i706, align 8
  %9630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9630, align 1
  %9631 = and i32 %9628, 255
  %9632 = call i32 @llvm.ctpop.i32(i32 %9631)
  %9633 = trunc i32 %9632 to i8
  %9634 = and i8 %9633, 1
  %9635 = xor i8 %9634, 1
  %9636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9635, i8* %9636, align 1
  %9637 = icmp eq i32 %9628, 0
  %9638 = zext i1 %9637 to i8
  %9639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9638, i8* %9639, align 1
  %9640 = lshr i32 %9628, 31
  %9641 = trunc i32 %9640 to i8
  %9642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9641, i8* %9642, align 1
  %9643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9643, align 1
  %9644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9644, align 1
  store %struct.Memory* %loadMem_441e78, %struct.Memory** %MEMORY
  %loadMem_441e7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9646 = getelementptr inbounds %struct.GPR, %struct.GPR* %9645, i32 0, i32 33
  %9647 = getelementptr inbounds %struct.Reg, %struct.Reg* %9646, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %9647 to i64*
  %9648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9649 = getelementptr inbounds %struct.GPR, %struct.GPR* %9648, i32 0, i32 5
  %9650 = getelementptr inbounds %struct.Reg, %struct.Reg* %9649, i32 0, i32 0
  %RCX.i703 = bitcast %union.anon* %9650 to i64*
  %9651 = load i64, i64* %PC.i702
  %9652 = add i64 %9651, 10
  store i64 %9652, i64* %PC.i702
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RCX.i703, align 8
  store %struct.Memory* %loadMem_441e7a, %struct.Memory** %MEMORY
  %loadMem_441e84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9654 = getelementptr inbounds %struct.GPR, %struct.GPR* %9653, i32 0, i32 33
  %9655 = getelementptr inbounds %struct.Reg, %struct.Reg* %9654, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %9655 to i64*
  %9656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9657 = getelementptr inbounds %struct.GPR, %struct.GPR* %9656, i32 0, i32 5
  %9658 = getelementptr inbounds %struct.Reg, %struct.Reg* %9657, i32 0, i32 0
  %RCX.i701 = bitcast %union.anon* %9658 to i64*
  %9659 = load i64, i64* %RCX.i701
  %9660 = load i64, i64* %PC.i700
  %9661 = add i64 %9660, 7
  store i64 %9661, i64* %PC.i700
  %9662 = add i64 1024, %9659
  store i64 %9662, i64* %RCX.i701, align 8
  %9663 = icmp ult i64 %9662, %9659
  %9664 = icmp ult i64 %9662, 1024
  %9665 = or i1 %9663, %9664
  %9666 = zext i1 %9665 to i8
  %9667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9666, i8* %9667, align 1
  %9668 = trunc i64 %9662 to i32
  %9669 = and i32 %9668, 255
  %9670 = call i32 @llvm.ctpop.i32(i32 %9669)
  %9671 = trunc i32 %9670 to i8
  %9672 = and i8 %9671, 1
  %9673 = xor i8 %9672, 1
  %9674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9673, i8* %9674, align 1
  %9675 = xor i64 1024, %9659
  %9676 = xor i64 %9675, %9662
  %9677 = lshr i64 %9676, 4
  %9678 = trunc i64 %9677 to i8
  %9679 = and i8 %9678, 1
  %9680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9679, i8* %9680, align 1
  %9681 = icmp eq i64 %9662, 0
  %9682 = zext i1 %9681 to i8
  %9683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9682, i8* %9683, align 1
  %9684 = lshr i64 %9662, 63
  %9685 = trunc i64 %9684 to i8
  %9686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9685, i8* %9686, align 1
  %9687 = lshr i64 %9659, 63
  %9688 = xor i64 %9684, %9687
  %9689 = add i64 %9688, %9684
  %9690 = icmp eq i64 %9689, 2
  %9691 = zext i1 %9690 to i8
  %9692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9691, i8* %9692, align 1
  store %struct.Memory* %loadMem_441e84, %struct.Memory** %MEMORY
  %loadMem_441e8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9694 = getelementptr inbounds %struct.GPR, %struct.GPR* %9693, i32 0, i32 33
  %9695 = getelementptr inbounds %struct.Reg, %struct.Reg* %9694, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %9695 to i64*
  %9696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9697 = getelementptr inbounds %struct.GPR, %struct.GPR* %9696, i32 0, i32 7
  %9698 = getelementptr inbounds %struct.Reg, %struct.Reg* %9697, i32 0, i32 0
  %RDX.i699 = bitcast %union.anon* %9698 to i64*
  %9699 = load i64, i64* %PC.i698
  %9700 = add i64 %9699, 10
  store i64 %9700, i64* %PC.i698
  store i64 ptrtoint (%G__0x6f8f20_type* @G__0x6f8f20 to i64), i64* %RDX.i699, align 8
  store %struct.Memory* %loadMem_441e8b, %struct.Memory** %MEMORY
  %loadMem_441e95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9702 = getelementptr inbounds %struct.GPR, %struct.GPR* %9701, i32 0, i32 33
  %9703 = getelementptr inbounds %struct.Reg, %struct.Reg* %9702, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %9703 to i64*
  %9704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9705 = getelementptr inbounds %struct.GPR, %struct.GPR* %9704, i32 0, i32 9
  %9706 = getelementptr inbounds %struct.Reg, %struct.Reg* %9705, i32 0, i32 0
  %RSI.i697 = bitcast %union.anon* %9706 to i64*
  %9707 = load i64, i64* %PC.i696
  %9708 = add i64 %9707, 10
  store i64 %9708, i64* %PC.i696
  store i64 ptrtoint (%G__0x6d2ec0_type* @G__0x6d2ec0 to i64), i64* %RSI.i697, align 8
  store %struct.Memory* %loadMem_441e95, %struct.Memory** %MEMORY
  %loadMem_441e9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9710 = getelementptr inbounds %struct.GPR, %struct.GPR* %9709, i32 0, i32 33
  %9711 = getelementptr inbounds %struct.Reg, %struct.Reg* %9710, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %9711 to i64*
  %9712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9713 = getelementptr inbounds %struct.GPR, %struct.GPR* %9712, i32 0, i32 11
  %9714 = getelementptr inbounds %struct.Reg, %struct.Reg* %9713, i32 0, i32 0
  %RDI.i695 = bitcast %union.anon* %9714 to i64*
  %9715 = load i64, i64* %PC.i694
  %9716 = add i64 %9715, 10
  store i64 %9716, i64* %PC.i694
  store i64 ptrtoint (%G__0x722ff0_type* @G__0x722ff0 to i64), i64* %RDI.i695, align 8
  store %struct.Memory* %loadMem_441e9f, %struct.Memory** %MEMORY
  %loadMem_441ea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9718 = getelementptr inbounds %struct.GPR, %struct.GPR* %9717, i32 0, i32 33
  %9719 = getelementptr inbounds %struct.Reg, %struct.Reg* %9718, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %9719 to i64*
  %9720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9721 = getelementptr inbounds %struct.GPR, %struct.GPR* %9720, i32 0, i32 15
  %9722 = getelementptr inbounds %struct.Reg, %struct.Reg* %9721, i32 0, i32 0
  %RBP.i692 = bitcast %union.anon* %9722 to i64*
  %9723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9724 = getelementptr inbounds %struct.GPR, %struct.GPR* %9723, i32 0, i32 17
  %9725 = getelementptr inbounds %struct.Reg, %struct.Reg* %9724, i32 0, i32 0
  %R8.i693 = bitcast %union.anon* %9725 to i64*
  %9726 = load i64, i64* %RBP.i692
  %9727 = sub i64 %9726, 32
  %9728 = load i64, i64* %PC.i691
  %9729 = add i64 %9728, 4
  store i64 %9729, i64* %PC.i691
  %9730 = inttoptr i64 %9727 to i32*
  %9731 = load i32, i32* %9730
  %9732 = sext i32 %9731 to i64
  store i64 %9732, i64* %R8.i693, align 8
  store %struct.Memory* %loadMem_441ea9, %struct.Memory** %MEMORY
  %loadMem_441ead = load %struct.Memory*, %struct.Memory** %MEMORY
  %9733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9734 = getelementptr inbounds %struct.GPR, %struct.GPR* %9733, i32 0, i32 33
  %9735 = getelementptr inbounds %struct.Reg, %struct.Reg* %9734, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %9735 to i64*
  %9736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9737 = getelementptr inbounds %struct.GPR, %struct.GPR* %9736, i32 0, i32 17
  %9738 = getelementptr inbounds %struct.Reg, %struct.Reg* %9737, i32 0, i32 0
  %R8.i690 = bitcast %union.anon* %9738 to i64*
  %9739 = load i64, i64* %R8.i690
  %9740 = load i64, i64* %PC.i689
  %9741 = add i64 %9740, 4
  store i64 %9741, i64* %PC.i689
  %9742 = shl i64 %9739, 5
  %9743 = icmp slt i64 %9742, 0
  %9744 = shl i64 %9742, 1
  store i64 %9744, i64* %R8.i690, align 8
  %9745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9746 = zext i1 %9743 to i8
  store i8 %9746, i8* %9745, align 1
  %9747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9748 = trunc i64 %9744 to i32
  %9749 = and i32 %9748, 254
  %9750 = call i32 @llvm.ctpop.i32(i32 %9749)
  %9751 = trunc i32 %9750 to i8
  %9752 = and i8 %9751, 1
  %9753 = xor i8 %9752, 1
  store i8 %9753, i8* %9747, align 1
  %9754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9754, align 1
  %9755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9756 = icmp eq i64 %9744, 0
  %9757 = zext i1 %9756 to i8
  store i8 %9757, i8* %9755, align 1
  %9758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9759 = lshr i64 %9744, 63
  %9760 = trunc i64 %9759 to i8
  store i8 %9760, i8* %9758, align 1
  %9761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9761, align 1
  store %struct.Memory* %loadMem_441ead, %struct.Memory** %MEMORY
  %loadMem_441eb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9763 = getelementptr inbounds %struct.GPR, %struct.GPR* %9762, i32 0, i32 33
  %9764 = getelementptr inbounds %struct.Reg, %struct.Reg* %9763, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %9764 to i64*
  %9765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9766 = getelementptr inbounds %struct.GPR, %struct.GPR* %9765, i32 0, i32 11
  %9767 = getelementptr inbounds %struct.Reg, %struct.Reg* %9766, i32 0, i32 0
  %RDI.i687 = bitcast %union.anon* %9767 to i64*
  %9768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9769 = getelementptr inbounds %struct.GPR, %struct.GPR* %9768, i32 0, i32 17
  %9770 = getelementptr inbounds %struct.Reg, %struct.Reg* %9769, i32 0, i32 0
  %R8.i688 = bitcast %union.anon* %9770 to i64*
  %9771 = load i64, i64* %RDI.i687
  %9772 = load i64, i64* %R8.i688
  %9773 = load i64, i64* %PC.i686
  %9774 = add i64 %9773, 3
  store i64 %9774, i64* %PC.i686
  %9775 = add i64 %9772, %9771
  store i64 %9775, i64* %RDI.i687, align 8
  %9776 = icmp ult i64 %9775, %9771
  %9777 = icmp ult i64 %9775, %9772
  %9778 = or i1 %9776, %9777
  %9779 = zext i1 %9778 to i8
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9779, i8* %9780, align 1
  %9781 = trunc i64 %9775 to i32
  %9782 = and i32 %9781, 255
  %9783 = call i32 @llvm.ctpop.i32(i32 %9782)
  %9784 = trunc i32 %9783 to i8
  %9785 = and i8 %9784, 1
  %9786 = xor i8 %9785, 1
  %9787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9786, i8* %9787, align 1
  %9788 = xor i64 %9772, %9771
  %9789 = xor i64 %9788, %9775
  %9790 = lshr i64 %9789, 4
  %9791 = trunc i64 %9790 to i8
  %9792 = and i8 %9791, 1
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9792, i8* %9793, align 1
  %9794 = icmp eq i64 %9775, 0
  %9795 = zext i1 %9794 to i8
  %9796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9795, i8* %9796, align 1
  %9797 = lshr i64 %9775, 63
  %9798 = trunc i64 %9797 to i8
  %9799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9798, i8* %9799, align 1
  %9800 = lshr i64 %9771, 63
  %9801 = lshr i64 %9772, 63
  %9802 = xor i64 %9797, %9800
  %9803 = xor i64 %9797, %9801
  %9804 = add i64 %9802, %9803
  %9805 = icmp eq i64 %9804, 2
  %9806 = zext i1 %9805 to i8
  %9807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9806, i8* %9807, align 1
  store %struct.Memory* %loadMem_441eb1, %struct.Memory** %MEMORY
  %loadMem_441eb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9809 = getelementptr inbounds %struct.GPR, %struct.GPR* %9808, i32 0, i32 33
  %9810 = getelementptr inbounds %struct.Reg, %struct.Reg* %9809, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %9810 to i64*
  %9811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9812 = getelementptr inbounds %struct.GPR, %struct.GPR* %9811, i32 0, i32 15
  %9813 = getelementptr inbounds %struct.Reg, %struct.Reg* %9812, i32 0, i32 0
  %RBP.i684 = bitcast %union.anon* %9813 to i64*
  %9814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9815 = getelementptr inbounds %struct.GPR, %struct.GPR* %9814, i32 0, i32 17
  %9816 = getelementptr inbounds %struct.Reg, %struct.Reg* %9815, i32 0, i32 0
  %R8.i685 = bitcast %union.anon* %9816 to i64*
  %9817 = load i64, i64* %RBP.i684
  %9818 = sub i64 %9817, 28
  %9819 = load i64, i64* %PC.i683
  %9820 = add i64 %9819, 4
  store i64 %9820, i64* %PC.i683
  %9821 = inttoptr i64 %9818 to i32*
  %9822 = load i32, i32* %9821
  %9823 = sext i32 %9822 to i64
  store i64 %9823, i64* %R8.i685, align 8
  store %struct.Memory* %loadMem_441eb4, %struct.Memory** %MEMORY
  %loadMem_441eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9825 = getelementptr inbounds %struct.GPR, %struct.GPR* %9824, i32 0, i32 33
  %9826 = getelementptr inbounds %struct.Reg, %struct.Reg* %9825, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %9826 to i64*
  %9827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9828 = getelementptr inbounds %struct.GPR, %struct.GPR* %9827, i32 0, i32 19
  %9829 = getelementptr inbounds %struct.Reg, %struct.Reg* %9828, i32 0, i32 0
  %R9D.i680 = bitcast %union.anon* %9829 to i32*
  %9830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9831 = getelementptr inbounds %struct.GPR, %struct.GPR* %9830, i32 0, i32 11
  %9832 = getelementptr inbounds %struct.Reg, %struct.Reg* %9831, i32 0, i32 0
  %RDI.i681 = bitcast %union.anon* %9832 to i64*
  %9833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9834 = getelementptr inbounds %struct.GPR, %struct.GPR* %9833, i32 0, i32 17
  %9835 = getelementptr inbounds %struct.Reg, %struct.Reg* %9834, i32 0, i32 0
  %R8.i682 = bitcast %union.anon* %9835 to i64*
  %9836 = bitcast i32* %R9D.i680 to i64*
  %9837 = load i64, i64* %RDI.i681
  %9838 = load i64, i64* %R8.i682
  %9839 = mul i64 %9838, 4
  %9840 = add i64 %9839, %9837
  %9841 = load i64, i64* %PC.i679
  %9842 = add i64 %9841, 4
  store i64 %9842, i64* %PC.i679
  %9843 = inttoptr i64 %9840 to i32*
  %9844 = load i32, i32* %9843
  %9845 = zext i32 %9844 to i64
  store i64 %9845, i64* %9836, align 8
  store %struct.Memory* %loadMem_441eb8, %struct.Memory** %MEMORY
  %loadMem_441ebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9847 = getelementptr inbounds %struct.GPR, %struct.GPR* %9846, i32 0, i32 33
  %9848 = getelementptr inbounds %struct.Reg, %struct.Reg* %9847, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %9848 to i64*
  %9849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9850 = getelementptr inbounds %struct.GPR, %struct.GPR* %9849, i32 0, i32 11
  %9851 = getelementptr inbounds %struct.Reg, %struct.Reg* %9850, i32 0, i32 0
  %RDI.i677 = bitcast %union.anon* %9851 to i64*
  %9852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9853 = getelementptr inbounds %struct.GPR, %struct.GPR* %9852, i32 0, i32 15
  %9854 = getelementptr inbounds %struct.Reg, %struct.Reg* %9853, i32 0, i32 0
  %RBP.i678 = bitcast %union.anon* %9854 to i64*
  %9855 = load i64, i64* %RBP.i678
  %9856 = sub i64 %9855, 32
  %9857 = load i64, i64* %PC.i676
  %9858 = add i64 %9857, 4
  store i64 %9858, i64* %PC.i676
  %9859 = inttoptr i64 %9856 to i32*
  %9860 = load i32, i32* %9859
  %9861 = sext i32 %9860 to i64
  store i64 %9861, i64* %RDI.i677, align 8
  store %struct.Memory* %loadMem_441ebc, %struct.Memory** %MEMORY
  %loadMem_441ec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9863 = getelementptr inbounds %struct.GPR, %struct.GPR* %9862, i32 0, i32 33
  %9864 = getelementptr inbounds %struct.Reg, %struct.Reg* %9863, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %9864 to i64*
  %9865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9866 = getelementptr inbounds %struct.GPR, %struct.GPR* %9865, i32 0, i32 11
  %9867 = getelementptr inbounds %struct.Reg, %struct.Reg* %9866, i32 0, i32 0
  %RDI.i675 = bitcast %union.anon* %9867 to i64*
  %9868 = load i64, i64* %RDI.i675
  %9869 = load i64, i64* %PC.i674
  %9870 = add i64 %9869, 4
  store i64 %9870, i64* %PC.i674
  %9871 = shl i64 %9868, 5
  %9872 = icmp slt i64 %9871, 0
  %9873 = shl i64 %9871, 1
  store i64 %9873, i64* %RDI.i675, align 8
  %9874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9875 = zext i1 %9872 to i8
  store i8 %9875, i8* %9874, align 1
  %9876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9877 = trunc i64 %9873 to i32
  %9878 = and i32 %9877, 254
  %9879 = call i32 @llvm.ctpop.i32(i32 %9878)
  %9880 = trunc i32 %9879 to i8
  %9881 = and i8 %9880, 1
  %9882 = xor i8 %9881, 1
  store i8 %9882, i8* %9876, align 1
  %9883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9883, align 1
  %9884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9885 = icmp eq i64 %9873, 0
  %9886 = zext i1 %9885 to i8
  store i8 %9886, i8* %9884, align 1
  %9887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9888 = lshr i64 %9873, 63
  %9889 = trunc i64 %9888 to i8
  store i8 %9889, i8* %9887, align 1
  %9890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9890, align 1
  store %struct.Memory* %loadMem_441ec0, %struct.Memory** %MEMORY
  %loadMem_441ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9892 = getelementptr inbounds %struct.GPR, %struct.GPR* %9891, i32 0, i32 33
  %9893 = getelementptr inbounds %struct.Reg, %struct.Reg* %9892, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %9893 to i64*
  %9894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9895 = getelementptr inbounds %struct.GPR, %struct.GPR* %9894, i32 0, i32 9
  %9896 = getelementptr inbounds %struct.Reg, %struct.Reg* %9895, i32 0, i32 0
  %RSI.i672 = bitcast %union.anon* %9896 to i64*
  %9897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9898 = getelementptr inbounds %struct.GPR, %struct.GPR* %9897, i32 0, i32 17
  %9899 = getelementptr inbounds %struct.Reg, %struct.Reg* %9898, i32 0, i32 0
  %R8.i673 = bitcast %union.anon* %9899 to i64*
  %9900 = load i64, i64* %RSI.i672
  %9901 = load i64, i64* %PC.i671
  %9902 = add i64 %9901, 3
  store i64 %9902, i64* %PC.i671
  store i64 %9900, i64* %R8.i673, align 8
  store %struct.Memory* %loadMem_441ec4, %struct.Memory** %MEMORY
  %loadMem_441ec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9904 = getelementptr inbounds %struct.GPR, %struct.GPR* %9903, i32 0, i32 33
  %9905 = getelementptr inbounds %struct.Reg, %struct.Reg* %9904, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %9905 to i64*
  %9906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9907 = getelementptr inbounds %struct.GPR, %struct.GPR* %9906, i32 0, i32 11
  %9908 = getelementptr inbounds %struct.Reg, %struct.Reg* %9907, i32 0, i32 0
  %RDI.i669 = bitcast %union.anon* %9908 to i64*
  %9909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9910 = getelementptr inbounds %struct.GPR, %struct.GPR* %9909, i32 0, i32 17
  %9911 = getelementptr inbounds %struct.Reg, %struct.Reg* %9910, i32 0, i32 0
  %R8.i670 = bitcast %union.anon* %9911 to i64*
  %9912 = load i64, i64* %R8.i670
  %9913 = load i64, i64* %RDI.i669
  %9914 = load i64, i64* %PC.i668
  %9915 = add i64 %9914, 3
  store i64 %9915, i64* %PC.i668
  %9916 = add i64 %9913, %9912
  store i64 %9916, i64* %R8.i670, align 8
  %9917 = icmp ult i64 %9916, %9912
  %9918 = icmp ult i64 %9916, %9913
  %9919 = or i1 %9917, %9918
  %9920 = zext i1 %9919 to i8
  %9921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9920, i8* %9921, align 1
  %9922 = trunc i64 %9916 to i32
  %9923 = and i32 %9922, 255
  %9924 = call i32 @llvm.ctpop.i32(i32 %9923)
  %9925 = trunc i32 %9924 to i8
  %9926 = and i8 %9925, 1
  %9927 = xor i8 %9926, 1
  %9928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9927, i8* %9928, align 1
  %9929 = xor i64 %9913, %9912
  %9930 = xor i64 %9929, %9916
  %9931 = lshr i64 %9930, 4
  %9932 = trunc i64 %9931 to i8
  %9933 = and i8 %9932, 1
  %9934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9933, i8* %9934, align 1
  %9935 = icmp eq i64 %9916, 0
  %9936 = zext i1 %9935 to i8
  %9937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9936, i8* %9937, align 1
  %9938 = lshr i64 %9916, 63
  %9939 = trunc i64 %9938 to i8
  %9940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9939, i8* %9940, align 1
  %9941 = lshr i64 %9912, 63
  %9942 = lshr i64 %9913, 63
  %9943 = xor i64 %9938, %9941
  %9944 = xor i64 %9938, %9942
  %9945 = add i64 %9943, %9944
  %9946 = icmp eq i64 %9945, 2
  %9947 = zext i1 %9946 to i8
  %9948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9947, i8* %9948, align 1
  store %struct.Memory* %loadMem_441ec7, %struct.Memory** %MEMORY
  %loadMem_441eca = load %struct.Memory*, %struct.Memory** %MEMORY
  %9949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9950 = getelementptr inbounds %struct.GPR, %struct.GPR* %9949, i32 0, i32 33
  %9951 = getelementptr inbounds %struct.Reg, %struct.Reg* %9950, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %9951 to i64*
  %9952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9953 = getelementptr inbounds %struct.GPR, %struct.GPR* %9952, i32 0, i32 11
  %9954 = getelementptr inbounds %struct.Reg, %struct.Reg* %9953, i32 0, i32 0
  %RDI.i666 = bitcast %union.anon* %9954 to i64*
  %9955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9956 = getelementptr inbounds %struct.GPR, %struct.GPR* %9955, i32 0, i32 15
  %9957 = getelementptr inbounds %struct.Reg, %struct.Reg* %9956, i32 0, i32 0
  %RBP.i667 = bitcast %union.anon* %9957 to i64*
  %9958 = load i64, i64* %RBP.i667
  %9959 = sub i64 %9958, 28
  %9960 = load i64, i64* %PC.i665
  %9961 = add i64 %9960, 4
  store i64 %9961, i64* %PC.i665
  %9962 = inttoptr i64 %9959 to i32*
  %9963 = load i32, i32* %9962
  %9964 = sext i32 %9963 to i64
  store i64 %9964, i64* %RDI.i666, align 8
  store %struct.Memory* %loadMem_441eca, %struct.Memory** %MEMORY
  %loadMem_441ece = load %struct.Memory*, %struct.Memory** %MEMORY
  %9965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9966 = getelementptr inbounds %struct.GPR, %struct.GPR* %9965, i32 0, i32 33
  %9967 = getelementptr inbounds %struct.Reg, %struct.Reg* %9966, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %9967 to i64*
  %9968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9969 = getelementptr inbounds %struct.GPR, %struct.GPR* %9968, i32 0, i32 21
  %9970 = getelementptr inbounds %struct.Reg, %struct.Reg* %9969, i32 0, i32 0
  %R10D.i662 = bitcast %union.anon* %9970 to i32*
  %9971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9972 = getelementptr inbounds %struct.GPR, %struct.GPR* %9971, i32 0, i32 11
  %9973 = getelementptr inbounds %struct.Reg, %struct.Reg* %9972, i32 0, i32 0
  %RDI.i663 = bitcast %union.anon* %9973 to i64*
  %9974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9975 = getelementptr inbounds %struct.GPR, %struct.GPR* %9974, i32 0, i32 17
  %9976 = getelementptr inbounds %struct.Reg, %struct.Reg* %9975, i32 0, i32 0
  %R8.i664 = bitcast %union.anon* %9976 to i64*
  %9977 = bitcast i32* %R10D.i662 to i64*
  %9978 = load i64, i64* %R8.i664
  %9979 = load i64, i64* %RDI.i663
  %9980 = mul i64 %9979, 4
  %9981 = add i64 %9980, %9978
  %9982 = load i64, i64* %PC.i661
  %9983 = add i64 %9982, 4
  store i64 %9983, i64* %PC.i661
  %9984 = inttoptr i64 %9981 to i32*
  %9985 = load i32, i32* %9984
  %9986 = zext i32 %9985 to i64
  store i64 %9986, i64* %9977, align 8
  store %struct.Memory* %loadMem_441ece, %struct.Memory** %MEMORY
  %loadMem_441ed2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9988 = getelementptr inbounds %struct.GPR, %struct.GPR* %9987, i32 0, i32 33
  %9989 = getelementptr inbounds %struct.Reg, %struct.Reg* %9988, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %9989 to i64*
  %9990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9991 = getelementptr inbounds %struct.GPR, %struct.GPR* %9990, i32 0, i32 21
  %9992 = getelementptr inbounds %struct.Reg, %struct.Reg* %9991, i32 0, i32 0
  %R10D.i660 = bitcast %union.anon* %9992 to i32*
  %9993 = bitcast i32* %R10D.i660 to i64*
  %9994 = load i32, i32* %R10D.i660
  %9995 = zext i32 %9994 to i64
  %9996 = load i64, i64* %PC.i659
  %9997 = add i64 %9996, 3
  store i64 %9997, i64* %PC.i659
  %9998 = shl i64 %9995, 32
  %9999 = ashr i64 %9998, 33
  %10000 = trunc i64 %9995 to i8
  %10001 = and i8 %10000, 1
  %10002 = trunc i64 %9999 to i32
  %10003 = and i64 %9999, 4294967295
  store i64 %10003, i64* %9993, align 8
  %10004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10001, i8* %10004, align 1
  %10005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10006 = and i32 %10002, 255
  %10007 = call i32 @llvm.ctpop.i32(i32 %10006)
  %10008 = trunc i32 %10007 to i8
  %10009 = and i8 %10008, 1
  %10010 = xor i8 %10009, 1
  store i8 %10010, i8* %10005, align 1
  %10011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10011, align 1
  %10012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10013 = icmp eq i32 %10002, 0
  %10014 = zext i1 %10013 to i8
  store i8 %10014, i8* %10012, align 1
  %10015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10016 = lshr i32 %10002, 31
  %10017 = trunc i32 %10016 to i8
  store i8 %10017, i8* %10015, align 1
  %10018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10018, align 1
  store %struct.Memory* %loadMem_441ed2, %struct.Memory** %MEMORY
  %loadMem_441ed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10020 = getelementptr inbounds %struct.GPR, %struct.GPR* %10019, i32 0, i32 33
  %10021 = getelementptr inbounds %struct.Reg, %struct.Reg* %10020, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %10021 to i64*
  %10022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10023 = getelementptr inbounds %struct.GPR, %struct.GPR* %10022, i32 0, i32 19
  %10024 = getelementptr inbounds %struct.Reg, %struct.Reg* %10023, i32 0, i32 0
  %R9D.i657 = bitcast %union.anon* %10024 to i32*
  %10025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10026 = getelementptr inbounds %struct.GPR, %struct.GPR* %10025, i32 0, i32 21
  %10027 = getelementptr inbounds %struct.Reg, %struct.Reg* %10026, i32 0, i32 0
  %R10D.i658 = bitcast %union.anon* %10027 to i32*
  %10028 = bitcast i32* %R9D.i657 to i64*
  %10029 = load i32, i32* %R9D.i657
  %10030 = zext i32 %10029 to i64
  %10031 = load i32, i32* %R10D.i658
  %10032 = zext i32 %10031 to i64
  %10033 = load i64, i64* %PC.i656
  %10034 = add i64 %10033, 3
  store i64 %10034, i64* %PC.i656
  %10035 = sub i32 %10029, %10031
  %10036 = zext i32 %10035 to i64
  store i64 %10036, i64* %10028, align 8
  %10037 = icmp ult i32 %10029, %10031
  %10038 = zext i1 %10037 to i8
  %10039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10038, i8* %10039, align 1
  %10040 = and i32 %10035, 255
  %10041 = call i32 @llvm.ctpop.i32(i32 %10040)
  %10042 = trunc i32 %10041 to i8
  %10043 = and i8 %10042, 1
  %10044 = xor i8 %10043, 1
  %10045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10044, i8* %10045, align 1
  %10046 = xor i64 %10032, %10030
  %10047 = trunc i64 %10046 to i32
  %10048 = xor i32 %10047, %10035
  %10049 = lshr i32 %10048, 4
  %10050 = trunc i32 %10049 to i8
  %10051 = and i8 %10050, 1
  %10052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10051, i8* %10052, align 1
  %10053 = icmp eq i32 %10035, 0
  %10054 = zext i1 %10053 to i8
  %10055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10054, i8* %10055, align 1
  %10056 = lshr i32 %10035, 31
  %10057 = trunc i32 %10056 to i8
  %10058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10057, i8* %10058, align 1
  %10059 = lshr i32 %10029, 31
  %10060 = lshr i32 %10031, 31
  %10061 = xor i32 %10060, %10059
  %10062 = xor i32 %10056, %10059
  %10063 = add i32 %10062, %10061
  %10064 = icmp eq i32 %10063, 2
  %10065 = zext i1 %10064 to i8
  %10066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10065, i8* %10066, align 1
  store %struct.Memory* %loadMem_441ed6, %struct.Memory** %MEMORY
  %loadMem_441ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10068 = getelementptr inbounds %struct.GPR, %struct.GPR* %10067, i32 0, i32 33
  %10069 = getelementptr inbounds %struct.Reg, %struct.Reg* %10068, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %10069 to i64*
  %10070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10071 = getelementptr inbounds %struct.GPR, %struct.GPR* %10070, i32 0, i32 19
  %10072 = getelementptr inbounds %struct.Reg, %struct.Reg* %10071, i32 0, i32 0
  %R9D.i654 = bitcast %union.anon* %10072 to i32*
  %10073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10074 = getelementptr inbounds %struct.GPR, %struct.GPR* %10073, i32 0, i32 15
  %10075 = getelementptr inbounds %struct.Reg, %struct.Reg* %10074, i32 0, i32 0
  %RBP.i655 = bitcast %union.anon* %10075 to i64*
  %10076 = load i64, i64* %RBP.i655
  %10077 = sub i64 %10076, 272
  %10078 = load i32, i32* %R9D.i654
  %10079 = zext i32 %10078 to i64
  %10080 = load i64, i64* %PC.i653
  %10081 = add i64 %10080, 7
  store i64 %10081, i64* %PC.i653
  %10082 = inttoptr i64 %10077 to i32*
  store i32 %10078, i32* %10082
  store %struct.Memory* %loadMem_441ed9, %struct.Memory** %MEMORY
  %loadMem_441ee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10084 = getelementptr inbounds %struct.GPR, %struct.GPR* %10083, i32 0, i32 33
  %10085 = getelementptr inbounds %struct.Reg, %struct.Reg* %10084, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %10085 to i64*
  %10086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10087 = getelementptr inbounds %struct.GPR, %struct.GPR* %10086, i32 0, i32 11
  %10088 = getelementptr inbounds %struct.Reg, %struct.Reg* %10087, i32 0, i32 0
  %RDI.i651 = bitcast %union.anon* %10088 to i64*
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10090 = getelementptr inbounds %struct.GPR, %struct.GPR* %10089, i32 0, i32 15
  %10091 = getelementptr inbounds %struct.Reg, %struct.Reg* %10090, i32 0, i32 0
  %RBP.i652 = bitcast %union.anon* %10091 to i64*
  %10092 = load i64, i64* %RBP.i652
  %10093 = sub i64 %10092, 32
  %10094 = load i64, i64* %PC.i650
  %10095 = add i64 %10094, 4
  store i64 %10095, i64* %PC.i650
  %10096 = inttoptr i64 %10093 to i32*
  %10097 = load i32, i32* %10096
  %10098 = sext i32 %10097 to i64
  store i64 %10098, i64* %RDI.i651, align 8
  store %struct.Memory* %loadMem_441ee0, %struct.Memory** %MEMORY
  %loadMem_441ee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10100 = getelementptr inbounds %struct.GPR, %struct.GPR* %10099, i32 0, i32 33
  %10101 = getelementptr inbounds %struct.Reg, %struct.Reg* %10100, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %10101 to i64*
  %10102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10103 = getelementptr inbounds %struct.GPR, %struct.GPR* %10102, i32 0, i32 11
  %10104 = getelementptr inbounds %struct.Reg, %struct.Reg* %10103, i32 0, i32 0
  %RDI.i649 = bitcast %union.anon* %10104 to i64*
  %10105 = load i64, i64* %RDI.i649
  %10106 = load i64, i64* %PC.i648
  %10107 = add i64 %10106, 4
  store i64 %10107, i64* %PC.i648
  %10108 = shl i64 %10105, 5
  %10109 = icmp slt i64 %10108, 0
  %10110 = shl i64 %10108, 1
  store i64 %10110, i64* %RDI.i649, align 8
  %10111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10112 = zext i1 %10109 to i8
  store i8 %10112, i8* %10111, align 1
  %10113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10114 = trunc i64 %10110 to i32
  %10115 = and i32 %10114, 254
  %10116 = call i32 @llvm.ctpop.i32(i32 %10115)
  %10117 = trunc i32 %10116 to i8
  %10118 = and i8 %10117, 1
  %10119 = xor i8 %10118, 1
  store i8 %10119, i8* %10113, align 1
  %10120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10120, align 1
  %10121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10122 = icmp eq i64 %10110, 0
  %10123 = zext i1 %10122 to i8
  store i8 %10123, i8* %10121, align 1
  %10124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10125 = lshr i64 %10110, 63
  %10126 = trunc i64 %10125 to i8
  store i8 %10126, i8* %10124, align 1
  %10127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10127, align 1
  store %struct.Memory* %loadMem_441ee4, %struct.Memory** %MEMORY
  %loadMem_441ee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10129 = getelementptr inbounds %struct.GPR, %struct.GPR* %10128, i32 0, i32 33
  %10130 = getelementptr inbounds %struct.Reg, %struct.Reg* %10129, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %10130 to i64*
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10132 = getelementptr inbounds %struct.GPR, %struct.GPR* %10131, i32 0, i32 9
  %10133 = getelementptr inbounds %struct.Reg, %struct.Reg* %10132, i32 0, i32 0
  %RSI.i646 = bitcast %union.anon* %10133 to i64*
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10135 = getelementptr inbounds %struct.GPR, %struct.GPR* %10134, i32 0, i32 11
  %10136 = getelementptr inbounds %struct.Reg, %struct.Reg* %10135, i32 0, i32 0
  %RDI.i647 = bitcast %union.anon* %10136 to i64*
  %10137 = load i64, i64* %RSI.i646
  %10138 = load i64, i64* %RDI.i647
  %10139 = load i64, i64* %PC.i645
  %10140 = add i64 %10139, 3
  store i64 %10140, i64* %PC.i645
  %10141 = add i64 %10138, %10137
  store i64 %10141, i64* %RSI.i646, align 8
  %10142 = icmp ult i64 %10141, %10137
  %10143 = icmp ult i64 %10141, %10138
  %10144 = or i1 %10142, %10143
  %10145 = zext i1 %10144 to i8
  %10146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10145, i8* %10146, align 1
  %10147 = trunc i64 %10141 to i32
  %10148 = and i32 %10147, 255
  %10149 = call i32 @llvm.ctpop.i32(i32 %10148)
  %10150 = trunc i32 %10149 to i8
  %10151 = and i8 %10150, 1
  %10152 = xor i8 %10151, 1
  %10153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10152, i8* %10153, align 1
  %10154 = xor i64 %10138, %10137
  %10155 = xor i64 %10154, %10141
  %10156 = lshr i64 %10155, 4
  %10157 = trunc i64 %10156 to i8
  %10158 = and i8 %10157, 1
  %10159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10158, i8* %10159, align 1
  %10160 = icmp eq i64 %10141, 0
  %10161 = zext i1 %10160 to i8
  %10162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10161, i8* %10162, align 1
  %10163 = lshr i64 %10141, 63
  %10164 = trunc i64 %10163 to i8
  %10165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10164, i8* %10165, align 1
  %10166 = lshr i64 %10137, 63
  %10167 = lshr i64 %10138, 63
  %10168 = xor i64 %10163, %10166
  %10169 = xor i64 %10163, %10167
  %10170 = add i64 %10168, %10169
  %10171 = icmp eq i64 %10170, 2
  %10172 = zext i1 %10171 to i8
  %10173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10172, i8* %10173, align 1
  store %struct.Memory* %loadMem_441ee8, %struct.Memory** %MEMORY
  %loadMem_441eeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10175 = getelementptr inbounds %struct.GPR, %struct.GPR* %10174, i32 0, i32 33
  %10176 = getelementptr inbounds %struct.Reg, %struct.Reg* %10175, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %10176 to i64*
  %10177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10178 = getelementptr inbounds %struct.GPR, %struct.GPR* %10177, i32 0, i32 11
  %10179 = getelementptr inbounds %struct.Reg, %struct.Reg* %10178, i32 0, i32 0
  %RDI.i643 = bitcast %union.anon* %10179 to i64*
  %10180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10181 = getelementptr inbounds %struct.GPR, %struct.GPR* %10180, i32 0, i32 15
  %10182 = getelementptr inbounds %struct.Reg, %struct.Reg* %10181, i32 0, i32 0
  %RBP.i644 = bitcast %union.anon* %10182 to i64*
  %10183 = load i64, i64* %RBP.i644
  %10184 = sub i64 %10183, 28
  %10185 = load i64, i64* %PC.i642
  %10186 = add i64 %10185, 4
  store i64 %10186, i64* %PC.i642
  %10187 = inttoptr i64 %10184 to i32*
  %10188 = load i32, i32* %10187
  %10189 = sext i32 %10188 to i64
  store i64 %10189, i64* %RDI.i643, align 8
  store %struct.Memory* %loadMem_441eeb, %struct.Memory** %MEMORY
  %loadMem_441eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %10190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10191 = getelementptr inbounds %struct.GPR, %struct.GPR* %10190, i32 0, i32 33
  %10192 = getelementptr inbounds %struct.Reg, %struct.Reg* %10191, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %10192 to i64*
  %10193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10194 = getelementptr inbounds %struct.GPR, %struct.GPR* %10193, i32 0, i32 19
  %10195 = getelementptr inbounds %struct.Reg, %struct.Reg* %10194, i32 0, i32 0
  %R9D.i639 = bitcast %union.anon* %10195 to i32*
  %10196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10197 = getelementptr inbounds %struct.GPR, %struct.GPR* %10196, i32 0, i32 9
  %10198 = getelementptr inbounds %struct.Reg, %struct.Reg* %10197, i32 0, i32 0
  %RSI.i640 = bitcast %union.anon* %10198 to i64*
  %10199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10200 = getelementptr inbounds %struct.GPR, %struct.GPR* %10199, i32 0, i32 11
  %10201 = getelementptr inbounds %struct.Reg, %struct.Reg* %10200, i32 0, i32 0
  %RDI.i641 = bitcast %union.anon* %10201 to i64*
  %10202 = bitcast i32* %R9D.i639 to i64*
  %10203 = load i64, i64* %RSI.i640
  %10204 = load i64, i64* %RDI.i641
  %10205 = mul i64 %10204, 4
  %10206 = add i64 %10205, %10203
  %10207 = load i64, i64* %PC.i638
  %10208 = add i64 %10207, 4
  store i64 %10208, i64* %PC.i638
  %10209 = inttoptr i64 %10206 to i32*
  %10210 = load i32, i32* %10209
  %10211 = zext i32 %10210 to i64
  store i64 %10211, i64* %10202, align 8
  store %struct.Memory* %loadMem_441eef, %struct.Memory** %MEMORY
  %loadMem_441ef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10213 = getelementptr inbounds %struct.GPR, %struct.GPR* %10212, i32 0, i32 33
  %10214 = getelementptr inbounds %struct.Reg, %struct.Reg* %10213, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %10214 to i64*
  %10215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10216 = getelementptr inbounds %struct.GPR, %struct.GPR* %10215, i32 0, i32 19
  %10217 = getelementptr inbounds %struct.Reg, %struct.Reg* %10216, i32 0, i32 0
  %R9D.i636 = bitcast %union.anon* %10217 to i32*
  %10218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10219 = getelementptr inbounds %struct.GPR, %struct.GPR* %10218, i32 0, i32 15
  %10220 = getelementptr inbounds %struct.Reg, %struct.Reg* %10219, i32 0, i32 0
  %RBP.i637 = bitcast %union.anon* %10220 to i64*
  %10221 = bitcast i32* %R9D.i636 to i64*
  %10222 = load i32, i32* %R9D.i636
  %10223 = zext i32 %10222 to i64
  %10224 = load i64, i64* %RBP.i637
  %10225 = sub i64 %10224, 272
  %10226 = load i64, i64* %PC.i635
  %10227 = add i64 %10226, 7
  store i64 %10227, i64* %PC.i635
  %10228 = inttoptr i64 %10225 to i32*
  %10229 = load i32, i32* %10228
  %10230 = add i32 %10229, %10222
  %10231 = zext i32 %10230 to i64
  store i64 %10231, i64* %10221, align 8
  %10232 = icmp ult i32 %10230, %10222
  %10233 = icmp ult i32 %10230, %10229
  %10234 = or i1 %10232, %10233
  %10235 = zext i1 %10234 to i8
  %10236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10235, i8* %10236, align 1
  %10237 = and i32 %10230, 255
  %10238 = call i32 @llvm.ctpop.i32(i32 %10237)
  %10239 = trunc i32 %10238 to i8
  %10240 = and i8 %10239, 1
  %10241 = xor i8 %10240, 1
  %10242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10241, i8* %10242, align 1
  %10243 = xor i32 %10229, %10222
  %10244 = xor i32 %10243, %10230
  %10245 = lshr i32 %10244, 4
  %10246 = trunc i32 %10245 to i8
  %10247 = and i8 %10246, 1
  %10248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10247, i8* %10248, align 1
  %10249 = icmp eq i32 %10230, 0
  %10250 = zext i1 %10249 to i8
  %10251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10250, i8* %10251, align 1
  %10252 = lshr i32 %10230, 31
  %10253 = trunc i32 %10252 to i8
  %10254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10253, i8* %10254, align 1
  %10255 = lshr i32 %10222, 31
  %10256 = lshr i32 %10229, 31
  %10257 = xor i32 %10252, %10255
  %10258 = xor i32 %10252, %10256
  %10259 = add i32 %10257, %10258
  %10260 = icmp eq i32 %10259, 2
  %10261 = zext i1 %10260 to i8
  %10262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10261, i8* %10262, align 1
  store %struct.Memory* %loadMem_441ef3, %struct.Memory** %MEMORY
  %loadMem_441efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10264 = getelementptr inbounds %struct.GPR, %struct.GPR* %10263, i32 0, i32 33
  %10265 = getelementptr inbounds %struct.Reg, %struct.Reg* %10264, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %10265 to i64*
  %10266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10267 = getelementptr inbounds %struct.GPR, %struct.GPR* %10266, i32 0, i32 19
  %10268 = getelementptr inbounds %struct.Reg, %struct.Reg* %10267, i32 0, i32 0
  %R9D.i633 = bitcast %union.anon* %10268 to i32*
  %10269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10270 = getelementptr inbounds %struct.GPR, %struct.GPR* %10269, i32 0, i32 15
  %10271 = getelementptr inbounds %struct.Reg, %struct.Reg* %10270, i32 0, i32 0
  %RBP.i634 = bitcast %union.anon* %10271 to i64*
  %10272 = load i64, i64* %RBP.i634
  %10273 = sub i64 %10272, 264
  %10274 = load i32, i32* %R9D.i633
  %10275 = zext i32 %10274 to i64
  %10276 = load i64, i64* %PC.i632
  %10277 = add i64 %10276, 7
  store i64 %10277, i64* %PC.i632
  %10278 = inttoptr i64 %10273 to i32*
  store i32 %10274, i32* %10278
  store %struct.Memory* %loadMem_441efa, %struct.Memory** %MEMORY
  %loadMem_441f01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10280 = getelementptr inbounds %struct.GPR, %struct.GPR* %10279, i32 0, i32 33
  %10281 = getelementptr inbounds %struct.Reg, %struct.Reg* %10280, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %10281 to i64*
  %10282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10283 = getelementptr inbounds %struct.GPR, %struct.GPR* %10282, i32 0, i32 19
  %10284 = getelementptr inbounds %struct.Reg, %struct.Reg* %10283, i32 0, i32 0
  %R9D.i630 = bitcast %union.anon* %10284 to i32*
  %10285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10286 = getelementptr inbounds %struct.GPR, %struct.GPR* %10285, i32 0, i32 15
  %10287 = getelementptr inbounds %struct.Reg, %struct.Reg* %10286, i32 0, i32 0
  %RBP.i631 = bitcast %union.anon* %10287 to i64*
  %10288 = bitcast i32* %R9D.i630 to i64*
  %10289 = load i64, i64* %RBP.i631
  %10290 = sub i64 %10289, 272
  %10291 = load i64, i64* %PC.i629
  %10292 = add i64 %10291, 7
  store i64 %10292, i64* %PC.i629
  %10293 = inttoptr i64 %10290 to i32*
  %10294 = load i32, i32* %10293
  %10295 = zext i32 %10294 to i64
  store i64 %10295, i64* %10288, align 8
  store %struct.Memory* %loadMem_441f01, %struct.Memory** %MEMORY
  %loadMem_441f08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10297 = getelementptr inbounds %struct.GPR, %struct.GPR* %10296, i32 0, i32 33
  %10298 = getelementptr inbounds %struct.Reg, %struct.Reg* %10297, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %10298 to i64*
  %10299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10300 = getelementptr inbounds %struct.GPR, %struct.GPR* %10299, i32 0, i32 9
  %10301 = getelementptr inbounds %struct.Reg, %struct.Reg* %10300, i32 0, i32 0
  %RSI.i627 = bitcast %union.anon* %10301 to i64*
  %10302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10303 = getelementptr inbounds %struct.GPR, %struct.GPR* %10302, i32 0, i32 15
  %10304 = getelementptr inbounds %struct.Reg, %struct.Reg* %10303, i32 0, i32 0
  %RBP.i628 = bitcast %union.anon* %10304 to i64*
  %10305 = load i64, i64* %RBP.i628
  %10306 = sub i64 %10305, 32
  %10307 = load i64, i64* %PC.i626
  %10308 = add i64 %10307, 4
  store i64 %10308, i64* %PC.i626
  %10309 = inttoptr i64 %10306 to i32*
  %10310 = load i32, i32* %10309
  %10311 = sext i32 %10310 to i64
  store i64 %10311, i64* %RSI.i627, align 8
  store %struct.Memory* %loadMem_441f08, %struct.Memory** %MEMORY
  %loadMem_441f0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10313 = getelementptr inbounds %struct.GPR, %struct.GPR* %10312, i32 0, i32 33
  %10314 = getelementptr inbounds %struct.Reg, %struct.Reg* %10313, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %10314 to i64*
  %10315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10316 = getelementptr inbounds %struct.GPR, %struct.GPR* %10315, i32 0, i32 9
  %10317 = getelementptr inbounds %struct.Reg, %struct.Reg* %10316, i32 0, i32 0
  %RSI.i625 = bitcast %union.anon* %10317 to i64*
  %10318 = load i64, i64* %RSI.i625
  %10319 = load i64, i64* %PC.i624
  %10320 = add i64 %10319, 4
  store i64 %10320, i64* %PC.i624
  %10321 = shl i64 %10318, 5
  %10322 = icmp slt i64 %10321, 0
  %10323 = shl i64 %10321, 1
  store i64 %10323, i64* %RSI.i625, align 8
  %10324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10325 = zext i1 %10322 to i8
  store i8 %10325, i8* %10324, align 1
  %10326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10327 = trunc i64 %10323 to i32
  %10328 = and i32 %10327, 254
  %10329 = call i32 @llvm.ctpop.i32(i32 %10328)
  %10330 = trunc i32 %10329 to i8
  %10331 = and i8 %10330, 1
  %10332 = xor i8 %10331, 1
  store i8 %10332, i8* %10326, align 1
  %10333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10333, align 1
  %10334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10335 = icmp eq i64 %10323, 0
  %10336 = zext i1 %10335 to i8
  store i8 %10336, i8* %10334, align 1
  %10337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10338 = lshr i64 %10323, 63
  %10339 = trunc i64 %10338 to i8
  store i8 %10339, i8* %10337, align 1
  %10340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10340, align 1
  store %struct.Memory* %loadMem_441f0c, %struct.Memory** %MEMORY
  %loadMem_441f10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10342 = getelementptr inbounds %struct.GPR, %struct.GPR* %10341, i32 0, i32 33
  %10343 = getelementptr inbounds %struct.Reg, %struct.Reg* %10342, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %10343 to i64*
  %10344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10345 = getelementptr inbounds %struct.GPR, %struct.GPR* %10344, i32 0, i32 7
  %10346 = getelementptr inbounds %struct.Reg, %struct.Reg* %10345, i32 0, i32 0
  %RDX.i622 = bitcast %union.anon* %10346 to i64*
  %10347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10348 = getelementptr inbounds %struct.GPR, %struct.GPR* %10347, i32 0, i32 11
  %10349 = getelementptr inbounds %struct.Reg, %struct.Reg* %10348, i32 0, i32 0
  %RDI.i623 = bitcast %union.anon* %10349 to i64*
  %10350 = load i64, i64* %RDX.i622
  %10351 = load i64, i64* %PC.i621
  %10352 = add i64 %10351, 3
  store i64 %10352, i64* %PC.i621
  store i64 %10350, i64* %RDI.i623, align 8
  store %struct.Memory* %loadMem_441f10, %struct.Memory** %MEMORY
  %loadMem_441f13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10354 = getelementptr inbounds %struct.GPR, %struct.GPR* %10353, i32 0, i32 33
  %10355 = getelementptr inbounds %struct.Reg, %struct.Reg* %10354, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %10355 to i64*
  %10356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10357 = getelementptr inbounds %struct.GPR, %struct.GPR* %10356, i32 0, i32 9
  %10358 = getelementptr inbounds %struct.Reg, %struct.Reg* %10357, i32 0, i32 0
  %RSI.i619 = bitcast %union.anon* %10358 to i64*
  %10359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10360 = getelementptr inbounds %struct.GPR, %struct.GPR* %10359, i32 0, i32 11
  %10361 = getelementptr inbounds %struct.Reg, %struct.Reg* %10360, i32 0, i32 0
  %RDI.i620 = bitcast %union.anon* %10361 to i64*
  %10362 = load i64, i64* %RDI.i620
  %10363 = load i64, i64* %RSI.i619
  %10364 = load i64, i64* %PC.i618
  %10365 = add i64 %10364, 3
  store i64 %10365, i64* %PC.i618
  %10366 = add i64 %10363, %10362
  store i64 %10366, i64* %RDI.i620, align 8
  %10367 = icmp ult i64 %10366, %10362
  %10368 = icmp ult i64 %10366, %10363
  %10369 = or i1 %10367, %10368
  %10370 = zext i1 %10369 to i8
  %10371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10370, i8* %10371, align 1
  %10372 = trunc i64 %10366 to i32
  %10373 = and i32 %10372, 255
  %10374 = call i32 @llvm.ctpop.i32(i32 %10373)
  %10375 = trunc i32 %10374 to i8
  %10376 = and i8 %10375, 1
  %10377 = xor i8 %10376, 1
  %10378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10377, i8* %10378, align 1
  %10379 = xor i64 %10363, %10362
  %10380 = xor i64 %10379, %10366
  %10381 = lshr i64 %10380, 4
  %10382 = trunc i64 %10381 to i8
  %10383 = and i8 %10382, 1
  %10384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10383, i8* %10384, align 1
  %10385 = icmp eq i64 %10366, 0
  %10386 = zext i1 %10385 to i8
  %10387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10386, i8* %10387, align 1
  %10388 = lshr i64 %10366, 63
  %10389 = trunc i64 %10388 to i8
  %10390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10389, i8* %10390, align 1
  %10391 = lshr i64 %10362, 63
  %10392 = lshr i64 %10363, 63
  %10393 = xor i64 %10388, %10391
  %10394 = xor i64 %10388, %10392
  %10395 = add i64 %10393, %10394
  %10396 = icmp eq i64 %10395, 2
  %10397 = zext i1 %10396 to i8
  %10398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10397, i8* %10398, align 1
  store %struct.Memory* %loadMem_441f13, %struct.Memory** %MEMORY
  %loadMem_441f16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10400 = getelementptr inbounds %struct.GPR, %struct.GPR* %10399, i32 0, i32 33
  %10401 = getelementptr inbounds %struct.Reg, %struct.Reg* %10400, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %10401 to i64*
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10403 = getelementptr inbounds %struct.GPR, %struct.GPR* %10402, i32 0, i32 9
  %10404 = getelementptr inbounds %struct.Reg, %struct.Reg* %10403, i32 0, i32 0
  %RSI.i616 = bitcast %union.anon* %10404 to i64*
  %10405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10406 = getelementptr inbounds %struct.GPR, %struct.GPR* %10405, i32 0, i32 15
  %10407 = getelementptr inbounds %struct.Reg, %struct.Reg* %10406, i32 0, i32 0
  %RBP.i617 = bitcast %union.anon* %10407 to i64*
  %10408 = load i64, i64* %RBP.i617
  %10409 = sub i64 %10408, 28
  %10410 = load i64, i64* %PC.i615
  %10411 = add i64 %10410, 4
  store i64 %10411, i64* %PC.i615
  %10412 = inttoptr i64 %10409 to i32*
  %10413 = load i32, i32* %10412
  %10414 = sext i32 %10413 to i64
  store i64 %10414, i64* %RSI.i616, align 8
  store %struct.Memory* %loadMem_441f16, %struct.Memory** %MEMORY
  %loadMem_441f1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10416 = getelementptr inbounds %struct.GPR, %struct.GPR* %10415, i32 0, i32 33
  %10417 = getelementptr inbounds %struct.Reg, %struct.Reg* %10416, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %10417 to i64*
  %10418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10419 = getelementptr inbounds %struct.GPR, %struct.GPR* %10418, i32 0, i32 21
  %10420 = getelementptr inbounds %struct.Reg, %struct.Reg* %10419, i32 0, i32 0
  %R10D.i612 = bitcast %union.anon* %10420 to i32*
  %10421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10422 = getelementptr inbounds %struct.GPR, %struct.GPR* %10421, i32 0, i32 9
  %10423 = getelementptr inbounds %struct.Reg, %struct.Reg* %10422, i32 0, i32 0
  %RSI.i613 = bitcast %union.anon* %10423 to i64*
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10425 = getelementptr inbounds %struct.GPR, %struct.GPR* %10424, i32 0, i32 11
  %10426 = getelementptr inbounds %struct.Reg, %struct.Reg* %10425, i32 0, i32 0
  %RDI.i614 = bitcast %union.anon* %10426 to i64*
  %10427 = bitcast i32* %R10D.i612 to i64*
  %10428 = load i64, i64* %RDI.i614
  %10429 = load i64, i64* %RSI.i613
  %10430 = mul i64 %10429, 4
  %10431 = add i64 %10430, %10428
  %10432 = load i64, i64* %PC.i611
  %10433 = add i64 %10432, 4
  store i64 %10433, i64* %PC.i611
  %10434 = inttoptr i64 %10431 to i32*
  %10435 = load i32, i32* %10434
  %10436 = zext i32 %10435 to i64
  store i64 %10436, i64* %10427, align 8
  store %struct.Memory* %loadMem_441f1a, %struct.Memory** %MEMORY
  %loadMem_441f1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10438 = getelementptr inbounds %struct.GPR, %struct.GPR* %10437, i32 0, i32 33
  %10439 = getelementptr inbounds %struct.Reg, %struct.Reg* %10438, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %10439 to i64*
  %10440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10441 = getelementptr inbounds %struct.GPR, %struct.GPR* %10440, i32 0, i32 21
  %10442 = getelementptr inbounds %struct.Reg, %struct.Reg* %10441, i32 0, i32 0
  %R10D.i610 = bitcast %union.anon* %10442 to i32*
  %10443 = bitcast i32* %R10D.i610 to i64*
  %10444 = load i32, i32* %R10D.i610
  %10445 = zext i32 %10444 to i64
  %10446 = load i64, i64* %PC.i609
  %10447 = add i64 %10446, 3
  store i64 %10447, i64* %PC.i609
  %10448 = shl i64 %10445, 32
  %10449 = ashr i64 %10448, 33
  %10450 = trunc i64 %10445 to i8
  %10451 = and i8 %10450, 1
  %10452 = trunc i64 %10449 to i32
  %10453 = and i64 %10449, 4294967295
  store i64 %10453, i64* %10443, align 8
  %10454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10451, i8* %10454, align 1
  %10455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10456 = and i32 %10452, 255
  %10457 = call i32 @llvm.ctpop.i32(i32 %10456)
  %10458 = trunc i32 %10457 to i8
  %10459 = and i8 %10458, 1
  %10460 = xor i8 %10459, 1
  store i8 %10460, i8* %10455, align 1
  %10461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10461, align 1
  %10462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10463 = icmp eq i32 %10452, 0
  %10464 = zext i1 %10463 to i8
  store i8 %10464, i8* %10462, align 1
  %10465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10466 = lshr i32 %10452, 31
  %10467 = trunc i32 %10466 to i8
  store i8 %10467, i8* %10465, align 1
  %10468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10468, align 1
  store %struct.Memory* %loadMem_441f1e, %struct.Memory** %MEMORY
  %loadMem_441f22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10470 = getelementptr inbounds %struct.GPR, %struct.GPR* %10469, i32 0, i32 33
  %10471 = getelementptr inbounds %struct.Reg, %struct.Reg* %10470, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %10471 to i64*
  %10472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10473 = getelementptr inbounds %struct.GPR, %struct.GPR* %10472, i32 0, i32 19
  %10474 = getelementptr inbounds %struct.Reg, %struct.Reg* %10473, i32 0, i32 0
  %R9D.i607 = bitcast %union.anon* %10474 to i32*
  %10475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10476 = getelementptr inbounds %struct.GPR, %struct.GPR* %10475, i32 0, i32 21
  %10477 = getelementptr inbounds %struct.Reg, %struct.Reg* %10476, i32 0, i32 0
  %R10D.i608 = bitcast %union.anon* %10477 to i32*
  %10478 = bitcast i32* %R9D.i607 to i64*
  %10479 = load i32, i32* %R9D.i607
  %10480 = zext i32 %10479 to i64
  %10481 = load i32, i32* %R10D.i608
  %10482 = zext i32 %10481 to i64
  %10483 = load i64, i64* %PC.i606
  %10484 = add i64 %10483, 3
  store i64 %10484, i64* %PC.i606
  %10485 = sub i32 %10479, %10481
  %10486 = zext i32 %10485 to i64
  store i64 %10486, i64* %10478, align 8
  %10487 = icmp ult i32 %10479, %10481
  %10488 = zext i1 %10487 to i8
  %10489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10488, i8* %10489, align 1
  %10490 = and i32 %10485, 255
  %10491 = call i32 @llvm.ctpop.i32(i32 %10490)
  %10492 = trunc i32 %10491 to i8
  %10493 = and i8 %10492, 1
  %10494 = xor i8 %10493, 1
  %10495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10494, i8* %10495, align 1
  %10496 = xor i64 %10482, %10480
  %10497 = trunc i64 %10496 to i32
  %10498 = xor i32 %10497, %10485
  %10499 = lshr i32 %10498, 4
  %10500 = trunc i32 %10499 to i8
  %10501 = and i8 %10500, 1
  %10502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10501, i8* %10502, align 1
  %10503 = icmp eq i32 %10485, 0
  %10504 = zext i1 %10503 to i8
  %10505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10504, i8* %10505, align 1
  %10506 = lshr i32 %10485, 31
  %10507 = trunc i32 %10506 to i8
  %10508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10507, i8* %10508, align 1
  %10509 = lshr i32 %10479, 31
  %10510 = lshr i32 %10481, 31
  %10511 = xor i32 %10510, %10509
  %10512 = xor i32 %10506, %10509
  %10513 = add i32 %10512, %10511
  %10514 = icmp eq i32 %10513, 2
  %10515 = zext i1 %10514 to i8
  %10516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10515, i8* %10516, align 1
  store %struct.Memory* %loadMem_441f22, %struct.Memory** %MEMORY
  %loadMem_441f25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10518 = getelementptr inbounds %struct.GPR, %struct.GPR* %10517, i32 0, i32 33
  %10519 = getelementptr inbounds %struct.Reg, %struct.Reg* %10518, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %10519 to i64*
  %10520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10521 = getelementptr inbounds %struct.GPR, %struct.GPR* %10520, i32 0, i32 19
  %10522 = getelementptr inbounds %struct.Reg, %struct.Reg* %10521, i32 0, i32 0
  %R9D.i604 = bitcast %union.anon* %10522 to i32*
  %10523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10524 = getelementptr inbounds %struct.GPR, %struct.GPR* %10523, i32 0, i32 15
  %10525 = getelementptr inbounds %struct.Reg, %struct.Reg* %10524, i32 0, i32 0
  %RBP.i605 = bitcast %union.anon* %10525 to i64*
  %10526 = load i64, i64* %RBP.i605
  %10527 = sub i64 %10526, 268
  %10528 = load i32, i32* %R9D.i604
  %10529 = zext i32 %10528 to i64
  %10530 = load i64, i64* %PC.i603
  %10531 = add i64 %10530, 7
  store i64 %10531, i64* %PC.i603
  %10532 = inttoptr i64 %10527 to i32*
  store i32 %10528, i32* %10532
  store %struct.Memory* %loadMem_441f25, %struct.Memory** %MEMORY
  %loadMem_441f2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10534 = getelementptr inbounds %struct.GPR, %struct.GPR* %10533, i32 0, i32 33
  %10535 = getelementptr inbounds %struct.Reg, %struct.Reg* %10534, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %10535 to i64*
  %10536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10537 = getelementptr inbounds %struct.GPR, %struct.GPR* %10536, i32 0, i32 19
  %10538 = getelementptr inbounds %struct.Reg, %struct.Reg* %10537, i32 0, i32 0
  %R9D.i601 = bitcast %union.anon* %10538 to i32*
  %10539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10540 = getelementptr inbounds %struct.GPR, %struct.GPR* %10539, i32 0, i32 15
  %10541 = getelementptr inbounds %struct.Reg, %struct.Reg* %10540, i32 0, i32 0
  %RBP.i602 = bitcast %union.anon* %10541 to i64*
  %10542 = bitcast i32* %R9D.i601 to i64*
  %10543 = load i64, i64* %RBP.i602
  %10544 = sub i64 %10543, 268
  %10545 = load i64, i64* %PC.i600
  %10546 = add i64 %10545, 7
  store i64 %10546, i64* %PC.i600
  %10547 = inttoptr i64 %10544 to i32*
  %10548 = load i32, i32* %10547
  %10549 = zext i32 %10548 to i64
  store i64 %10549, i64* %10542, align 8
  store %struct.Memory* %loadMem_441f2c, %struct.Memory** %MEMORY
  %loadMem_441f33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10551 = getelementptr inbounds %struct.GPR, %struct.GPR* %10550, i32 0, i32 33
  %10552 = getelementptr inbounds %struct.Reg, %struct.Reg* %10551, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %10552 to i64*
  %10553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10554 = getelementptr inbounds %struct.GPR, %struct.GPR* %10553, i32 0, i32 9
  %10555 = getelementptr inbounds %struct.Reg, %struct.Reg* %10554, i32 0, i32 0
  %RSI.i598 = bitcast %union.anon* %10555 to i64*
  %10556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10557 = getelementptr inbounds %struct.GPR, %struct.GPR* %10556, i32 0, i32 15
  %10558 = getelementptr inbounds %struct.Reg, %struct.Reg* %10557, i32 0, i32 0
  %RBP.i599 = bitcast %union.anon* %10558 to i64*
  %10559 = load i64, i64* %RBP.i599
  %10560 = sub i64 %10559, 32
  %10561 = load i64, i64* %PC.i597
  %10562 = add i64 %10561, 4
  store i64 %10562, i64* %PC.i597
  %10563 = inttoptr i64 %10560 to i32*
  %10564 = load i32, i32* %10563
  %10565 = sext i32 %10564 to i64
  store i64 %10565, i64* %RSI.i598, align 8
  store %struct.Memory* %loadMem_441f33, %struct.Memory** %MEMORY
  %loadMem_441f37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10567 = getelementptr inbounds %struct.GPR, %struct.GPR* %10566, i32 0, i32 33
  %10568 = getelementptr inbounds %struct.Reg, %struct.Reg* %10567, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %10568 to i64*
  %10569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10570 = getelementptr inbounds %struct.GPR, %struct.GPR* %10569, i32 0, i32 9
  %10571 = getelementptr inbounds %struct.Reg, %struct.Reg* %10570, i32 0, i32 0
  %RSI.i596 = bitcast %union.anon* %10571 to i64*
  %10572 = load i64, i64* %RSI.i596
  %10573 = load i64, i64* %PC.i595
  %10574 = add i64 %10573, 4
  store i64 %10574, i64* %PC.i595
  %10575 = shl i64 %10572, 5
  %10576 = icmp slt i64 %10575, 0
  %10577 = shl i64 %10575, 1
  store i64 %10577, i64* %RSI.i596, align 8
  %10578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10579 = zext i1 %10576 to i8
  store i8 %10579, i8* %10578, align 1
  %10580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10581 = trunc i64 %10577 to i32
  %10582 = and i32 %10581, 254
  %10583 = call i32 @llvm.ctpop.i32(i32 %10582)
  %10584 = trunc i32 %10583 to i8
  %10585 = and i8 %10584, 1
  %10586 = xor i8 %10585, 1
  store i8 %10586, i8* %10580, align 1
  %10587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10587, align 1
  %10588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10589 = icmp eq i64 %10577, 0
  %10590 = zext i1 %10589 to i8
  store i8 %10590, i8* %10588, align 1
  %10591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10592 = lshr i64 %10577, 63
  %10593 = trunc i64 %10592 to i8
  store i8 %10593, i8* %10591, align 1
  %10594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10594, align 1
  store %struct.Memory* %loadMem_441f37, %struct.Memory** %MEMORY
  %loadMem_441f3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10596 = getelementptr inbounds %struct.GPR, %struct.GPR* %10595, i32 0, i32 33
  %10597 = getelementptr inbounds %struct.Reg, %struct.Reg* %10596, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %10597 to i64*
  %10598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10599 = getelementptr inbounds %struct.GPR, %struct.GPR* %10598, i32 0, i32 7
  %10600 = getelementptr inbounds %struct.Reg, %struct.Reg* %10599, i32 0, i32 0
  %RDX.i593 = bitcast %union.anon* %10600 to i64*
  %10601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10602 = getelementptr inbounds %struct.GPR, %struct.GPR* %10601, i32 0, i32 9
  %10603 = getelementptr inbounds %struct.Reg, %struct.Reg* %10602, i32 0, i32 0
  %RSI.i594 = bitcast %union.anon* %10603 to i64*
  %10604 = load i64, i64* %RDX.i593
  %10605 = load i64, i64* %RSI.i594
  %10606 = load i64, i64* %PC.i592
  %10607 = add i64 %10606, 3
  store i64 %10607, i64* %PC.i592
  %10608 = add i64 %10605, %10604
  store i64 %10608, i64* %RDX.i593, align 8
  %10609 = icmp ult i64 %10608, %10604
  %10610 = icmp ult i64 %10608, %10605
  %10611 = or i1 %10609, %10610
  %10612 = zext i1 %10611 to i8
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10612, i8* %10613, align 1
  %10614 = trunc i64 %10608 to i32
  %10615 = and i32 %10614, 255
  %10616 = call i32 @llvm.ctpop.i32(i32 %10615)
  %10617 = trunc i32 %10616 to i8
  %10618 = and i8 %10617, 1
  %10619 = xor i8 %10618, 1
  %10620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10619, i8* %10620, align 1
  %10621 = xor i64 %10605, %10604
  %10622 = xor i64 %10621, %10608
  %10623 = lshr i64 %10622, 4
  %10624 = trunc i64 %10623 to i8
  %10625 = and i8 %10624, 1
  %10626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10625, i8* %10626, align 1
  %10627 = icmp eq i64 %10608, 0
  %10628 = zext i1 %10627 to i8
  %10629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10628, i8* %10629, align 1
  %10630 = lshr i64 %10608, 63
  %10631 = trunc i64 %10630 to i8
  %10632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10631, i8* %10632, align 1
  %10633 = lshr i64 %10604, 63
  %10634 = lshr i64 %10605, 63
  %10635 = xor i64 %10630, %10633
  %10636 = xor i64 %10630, %10634
  %10637 = add i64 %10635, %10636
  %10638 = icmp eq i64 %10637, 2
  %10639 = zext i1 %10638 to i8
  %10640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10639, i8* %10640, align 1
  store %struct.Memory* %loadMem_441f3b, %struct.Memory** %MEMORY
  %loadMem_441f3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10642 = getelementptr inbounds %struct.GPR, %struct.GPR* %10641, i32 0, i32 33
  %10643 = getelementptr inbounds %struct.Reg, %struct.Reg* %10642, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %10643 to i64*
  %10644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10645 = getelementptr inbounds %struct.GPR, %struct.GPR* %10644, i32 0, i32 9
  %10646 = getelementptr inbounds %struct.Reg, %struct.Reg* %10645, i32 0, i32 0
  %RSI.i590 = bitcast %union.anon* %10646 to i64*
  %10647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10648 = getelementptr inbounds %struct.GPR, %struct.GPR* %10647, i32 0, i32 15
  %10649 = getelementptr inbounds %struct.Reg, %struct.Reg* %10648, i32 0, i32 0
  %RBP.i591 = bitcast %union.anon* %10649 to i64*
  %10650 = load i64, i64* %RBP.i591
  %10651 = sub i64 %10650, 28
  %10652 = load i64, i64* %PC.i589
  %10653 = add i64 %10652, 4
  store i64 %10653, i64* %PC.i589
  %10654 = inttoptr i64 %10651 to i32*
  %10655 = load i32, i32* %10654
  %10656 = sext i32 %10655 to i64
  store i64 %10656, i64* %RSI.i590, align 8
  store %struct.Memory* %loadMem_441f3e, %struct.Memory** %MEMORY
  %loadMem_441f42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10658 = getelementptr inbounds %struct.GPR, %struct.GPR* %10657, i32 0, i32 33
  %10659 = getelementptr inbounds %struct.Reg, %struct.Reg* %10658, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %10659 to i64*
  %10660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10661 = getelementptr inbounds %struct.GPR, %struct.GPR* %10660, i32 0, i32 19
  %10662 = getelementptr inbounds %struct.Reg, %struct.Reg* %10661, i32 0, i32 0
  %R9D.i586 = bitcast %union.anon* %10662 to i32*
  %10663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10664 = getelementptr inbounds %struct.GPR, %struct.GPR* %10663, i32 0, i32 7
  %10665 = getelementptr inbounds %struct.Reg, %struct.Reg* %10664, i32 0, i32 0
  %RDX.i587 = bitcast %union.anon* %10665 to i64*
  %10666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10667 = getelementptr inbounds %struct.GPR, %struct.GPR* %10666, i32 0, i32 9
  %10668 = getelementptr inbounds %struct.Reg, %struct.Reg* %10667, i32 0, i32 0
  %RSI.i588 = bitcast %union.anon* %10668 to i64*
  %10669 = bitcast i32* %R9D.i586 to i64*
  %10670 = load i32, i32* %R9D.i586
  %10671 = zext i32 %10670 to i64
  %10672 = load i64, i64* %RDX.i587
  %10673 = load i64, i64* %RSI.i588
  %10674 = mul i64 %10673, 4
  %10675 = add i64 %10674, %10672
  %10676 = load i64, i64* %PC.i585
  %10677 = add i64 %10676, 4
  store i64 %10677, i64* %PC.i585
  %10678 = inttoptr i64 %10675 to i32*
  %10679 = load i32, i32* %10678
  %10680 = add i32 %10679, %10670
  %10681 = zext i32 %10680 to i64
  store i64 %10681, i64* %10669, align 8
  %10682 = icmp ult i32 %10680, %10670
  %10683 = icmp ult i32 %10680, %10679
  %10684 = or i1 %10682, %10683
  %10685 = zext i1 %10684 to i8
  %10686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10685, i8* %10686, align 1
  %10687 = and i32 %10680, 255
  %10688 = call i32 @llvm.ctpop.i32(i32 %10687)
  %10689 = trunc i32 %10688 to i8
  %10690 = and i8 %10689, 1
  %10691 = xor i8 %10690, 1
  %10692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10691, i8* %10692, align 1
  %10693 = xor i32 %10679, %10670
  %10694 = xor i32 %10693, %10680
  %10695 = lshr i32 %10694, 4
  %10696 = trunc i32 %10695 to i8
  %10697 = and i8 %10696, 1
  %10698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10697, i8* %10698, align 1
  %10699 = icmp eq i32 %10680, 0
  %10700 = zext i1 %10699 to i8
  %10701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10700, i8* %10701, align 1
  %10702 = lshr i32 %10680, 31
  %10703 = trunc i32 %10702 to i8
  %10704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10703, i8* %10704, align 1
  %10705 = lshr i32 %10670, 31
  %10706 = lshr i32 %10679, 31
  %10707 = xor i32 %10702, %10705
  %10708 = xor i32 %10702, %10706
  %10709 = add i32 %10707, %10708
  %10710 = icmp eq i32 %10709, 2
  %10711 = zext i1 %10710 to i8
  %10712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10711, i8* %10712, align 1
  store %struct.Memory* %loadMem_441f42, %struct.Memory** %MEMORY
  %loadMem_441f46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10714 = getelementptr inbounds %struct.GPR, %struct.GPR* %10713, i32 0, i32 33
  %10715 = getelementptr inbounds %struct.Reg, %struct.Reg* %10714, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %10715 to i64*
  %10716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10717 = getelementptr inbounds %struct.GPR, %struct.GPR* %10716, i32 0, i32 19
  %10718 = getelementptr inbounds %struct.Reg, %struct.Reg* %10717, i32 0, i32 0
  %R9D.i583 = bitcast %union.anon* %10718 to i32*
  %10719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10720 = getelementptr inbounds %struct.GPR, %struct.GPR* %10719, i32 0, i32 15
  %10721 = getelementptr inbounds %struct.Reg, %struct.Reg* %10720, i32 0, i32 0
  %RBP.i584 = bitcast %union.anon* %10721 to i64*
  %10722 = load i64, i64* %RBP.i584
  %10723 = sub i64 %10722, 260
  %10724 = load i32, i32* %R9D.i583
  %10725 = zext i32 %10724 to i64
  %10726 = load i64, i64* %PC.i582
  %10727 = add i64 %10726, 7
  store i64 %10727, i64* %PC.i582
  %10728 = inttoptr i64 %10723 to i32*
  store i32 %10724, i32* %10728
  store %struct.Memory* %loadMem_441f46, %struct.Memory** %MEMORY
  %loadMem_441f4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10730 = getelementptr inbounds %struct.GPR, %struct.GPR* %10729, i32 0, i32 33
  %10731 = getelementptr inbounds %struct.Reg, %struct.Reg* %10730, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %10731 to i64*
  %10732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10733 = getelementptr inbounds %struct.GPR, %struct.GPR* %10732, i32 0, i32 7
  %10734 = getelementptr inbounds %struct.Reg, %struct.Reg* %10733, i32 0, i32 0
  %RDX.i581 = bitcast %union.anon* %10734 to i64*
  %10735 = load i64, i64* %PC.i580
  %10736 = add i64 %10735, 8
  store i64 %10736, i64* %PC.i580
  %10737 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10737, i64* %RDX.i581, align 8
  store %struct.Memory* %loadMem_441f4d, %struct.Memory** %MEMORY
  %loadMem_441f55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10739 = getelementptr inbounds %struct.GPR, %struct.GPR* %10738, i32 0, i32 33
  %10740 = getelementptr inbounds %struct.Reg, %struct.Reg* %10739, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %10740 to i64*
  %10741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10742 = getelementptr inbounds %struct.GPR, %struct.GPR* %10741, i32 0, i32 19
  %10743 = getelementptr inbounds %struct.Reg, %struct.Reg* %10742, i32 0, i32 0
  %R9D.i578 = bitcast %union.anon* %10743 to i32*
  %10744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10745 = getelementptr inbounds %struct.GPR, %struct.GPR* %10744, i32 0, i32 7
  %10746 = getelementptr inbounds %struct.Reg, %struct.Reg* %10745, i32 0, i32 0
  %RDX.i579 = bitcast %union.anon* %10746 to i64*
  %10747 = bitcast i32* %R9D.i578 to i64*
  %10748 = load i64, i64* %RDX.i579
  %10749 = add i64 %10748, 72688
  %10750 = load i64, i64* %PC.i577
  %10751 = add i64 %10750, 7
  store i64 %10751, i64* %PC.i577
  %10752 = inttoptr i64 %10749 to i32*
  %10753 = load i32, i32* %10752
  %10754 = zext i32 %10753 to i64
  store i64 %10754, i64* %10747, align 8
  store %struct.Memory* %loadMem_441f55, %struct.Memory** %MEMORY
  %loadMem_441f5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10756 = getelementptr inbounds %struct.GPR, %struct.GPR* %10755, i32 0, i32 33
  %10757 = getelementptr inbounds %struct.Reg, %struct.Reg* %10756, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %10757 to i64*
  %10758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10759 = getelementptr inbounds %struct.GPR, %struct.GPR* %10758, i32 0, i32 21
  %10760 = getelementptr inbounds %struct.Reg, %struct.Reg* %10759, i32 0, i32 0
  %R10D.i575 = bitcast %union.anon* %10760 to i32*
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10762 = getelementptr inbounds %struct.GPR, %struct.GPR* %10761, i32 0, i32 15
  %10763 = getelementptr inbounds %struct.Reg, %struct.Reg* %10762, i32 0, i32 0
  %RBP.i576 = bitcast %union.anon* %10763 to i64*
  %10764 = bitcast i32* %R10D.i575 to i64*
  %10765 = load i64, i64* %RBP.i576
  %10766 = sub i64 %10765, 268
  %10767 = load i64, i64* %PC.i574
  %10768 = add i64 %10767, 7
  store i64 %10768, i64* %PC.i574
  %10769 = inttoptr i64 %10766 to i32*
  %10770 = load i32, i32* %10769
  %10771 = zext i32 %10770 to i64
  store i64 %10771, i64* %10764, align 8
  store %struct.Memory* %loadMem_441f5c, %struct.Memory** %MEMORY
  %loadMem_441f63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10773 = getelementptr inbounds %struct.GPR, %struct.GPR* %10772, i32 0, i32 33
  %10774 = getelementptr inbounds %struct.Reg, %struct.Reg* %10773, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %10774 to i64*
  %10775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10776 = getelementptr inbounds %struct.GPR, %struct.GPR* %10775, i32 0, i32 7
  %10777 = getelementptr inbounds %struct.Reg, %struct.Reg* %10776, i32 0, i32 0
  %RDX.i572 = bitcast %union.anon* %10777 to i64*
  %10778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10779 = getelementptr inbounds %struct.GPR, %struct.GPR* %10778, i32 0, i32 15
  %10780 = getelementptr inbounds %struct.Reg, %struct.Reg* %10779, i32 0, i32 0
  %RBP.i573 = bitcast %union.anon* %10780 to i64*
  %10781 = load i64, i64* %RBP.i573
  %10782 = sub i64 %10781, 32
  %10783 = load i64, i64* %PC.i571
  %10784 = add i64 %10783, 4
  store i64 %10784, i64* %PC.i571
  %10785 = inttoptr i64 %10782 to i32*
  %10786 = load i32, i32* %10785
  %10787 = sext i32 %10786 to i64
  store i64 %10787, i64* %RDX.i572, align 8
  store %struct.Memory* %loadMem_441f63, %struct.Memory** %MEMORY
  %loadMem_441f67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10789 = getelementptr inbounds %struct.GPR, %struct.GPR* %10788, i32 0, i32 33
  %10790 = getelementptr inbounds %struct.Reg, %struct.Reg* %10789, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %10790 to i64*
  %10791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10792 = getelementptr inbounds %struct.GPR, %struct.GPR* %10791, i32 0, i32 7
  %10793 = getelementptr inbounds %struct.Reg, %struct.Reg* %10792, i32 0, i32 0
  %RDX.i570 = bitcast %union.anon* %10793 to i64*
  %10794 = load i64, i64* %RDX.i570
  %10795 = load i64, i64* %PC.i569
  %10796 = add i64 %10795, 4
  store i64 %10796, i64* %PC.i569
  %10797 = shl i64 %10794, 5
  %10798 = icmp slt i64 %10797, 0
  %10799 = shl i64 %10797, 1
  store i64 %10799, i64* %RDX.i570, align 8
  %10800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10801 = zext i1 %10798 to i8
  store i8 %10801, i8* %10800, align 1
  %10802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10803 = trunc i64 %10799 to i32
  %10804 = and i32 %10803, 254
  %10805 = call i32 @llvm.ctpop.i32(i32 %10804)
  %10806 = trunc i32 %10805 to i8
  %10807 = and i8 %10806, 1
  %10808 = xor i8 %10807, 1
  store i8 %10808, i8* %10802, align 1
  %10809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10809, align 1
  %10810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10811 = icmp eq i64 %10799, 0
  %10812 = zext i1 %10811 to i8
  store i8 %10812, i8* %10810, align 1
  %10813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10814 = lshr i64 %10799, 63
  %10815 = trunc i64 %10814 to i8
  store i8 %10815, i8* %10813, align 1
  %10816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10816, align 1
  store %struct.Memory* %loadMem_441f67, %struct.Memory** %MEMORY
  %loadMem_441f6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10818 = getelementptr inbounds %struct.GPR, %struct.GPR* %10817, i32 0, i32 33
  %10819 = getelementptr inbounds %struct.Reg, %struct.Reg* %10818, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %10819 to i64*
  %10820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10821 = getelementptr inbounds %struct.GPR, %struct.GPR* %10820, i32 0, i32 5
  %10822 = getelementptr inbounds %struct.Reg, %struct.Reg* %10821, i32 0, i32 0
  %RCX.i567 = bitcast %union.anon* %10822 to i64*
  %10823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10824 = getelementptr inbounds %struct.GPR, %struct.GPR* %10823, i32 0, i32 7
  %10825 = getelementptr inbounds %struct.Reg, %struct.Reg* %10824, i32 0, i32 0
  %RDX.i568 = bitcast %union.anon* %10825 to i64*
  %10826 = load i64, i64* %RCX.i567
  %10827 = load i64, i64* %RDX.i568
  %10828 = load i64, i64* %PC.i566
  %10829 = add i64 %10828, 3
  store i64 %10829, i64* %PC.i566
  %10830 = add i64 %10827, %10826
  store i64 %10830, i64* %RCX.i567, align 8
  %10831 = icmp ult i64 %10830, %10826
  %10832 = icmp ult i64 %10830, %10827
  %10833 = or i1 %10831, %10832
  %10834 = zext i1 %10833 to i8
  %10835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10834, i8* %10835, align 1
  %10836 = trunc i64 %10830 to i32
  %10837 = and i32 %10836, 255
  %10838 = call i32 @llvm.ctpop.i32(i32 %10837)
  %10839 = trunc i32 %10838 to i8
  %10840 = and i8 %10839, 1
  %10841 = xor i8 %10840, 1
  %10842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10841, i8* %10842, align 1
  %10843 = xor i64 %10827, %10826
  %10844 = xor i64 %10843, %10830
  %10845 = lshr i64 %10844, 4
  %10846 = trunc i64 %10845 to i8
  %10847 = and i8 %10846, 1
  %10848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10847, i8* %10848, align 1
  %10849 = icmp eq i64 %10830, 0
  %10850 = zext i1 %10849 to i8
  %10851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10850, i8* %10851, align 1
  %10852 = lshr i64 %10830, 63
  %10853 = trunc i64 %10852 to i8
  %10854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10853, i8* %10854, align 1
  %10855 = lshr i64 %10826, 63
  %10856 = lshr i64 %10827, 63
  %10857 = xor i64 %10852, %10855
  %10858 = xor i64 %10852, %10856
  %10859 = add i64 %10857, %10858
  %10860 = icmp eq i64 %10859, 2
  %10861 = zext i1 %10860 to i8
  %10862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10861, i8* %10862, align 1
  store %struct.Memory* %loadMem_441f6b, %struct.Memory** %MEMORY
  %loadMem_441f6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10864 = getelementptr inbounds %struct.GPR, %struct.GPR* %10863, i32 0, i32 33
  %10865 = getelementptr inbounds %struct.Reg, %struct.Reg* %10864, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %10865 to i64*
  %10866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10867 = getelementptr inbounds %struct.GPR, %struct.GPR* %10866, i32 0, i32 7
  %10868 = getelementptr inbounds %struct.Reg, %struct.Reg* %10867, i32 0, i32 0
  %RDX.i564 = bitcast %union.anon* %10868 to i64*
  %10869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10870 = getelementptr inbounds %struct.GPR, %struct.GPR* %10869, i32 0, i32 15
  %10871 = getelementptr inbounds %struct.Reg, %struct.Reg* %10870, i32 0, i32 0
  %RBP.i565 = bitcast %union.anon* %10871 to i64*
  %10872 = load i64, i64* %RBP.i565
  %10873 = sub i64 %10872, 28
  %10874 = load i64, i64* %PC.i563
  %10875 = add i64 %10874, 4
  store i64 %10875, i64* %PC.i563
  %10876 = inttoptr i64 %10873 to i32*
  %10877 = load i32, i32* %10876
  %10878 = sext i32 %10877 to i64
  store i64 %10878, i64* %RDX.i564, align 8
  store %struct.Memory* %loadMem_441f6e, %struct.Memory** %MEMORY
  %loadMem_441f72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10880 = getelementptr inbounds %struct.GPR, %struct.GPR* %10879, i32 0, i32 33
  %10881 = getelementptr inbounds %struct.Reg, %struct.Reg* %10880, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %10881 to i64*
  %10882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10883 = getelementptr inbounds %struct.GPR, %struct.GPR* %10882, i32 0, i32 21
  %10884 = getelementptr inbounds %struct.Reg, %struct.Reg* %10883, i32 0, i32 0
  %R10D.i560 = bitcast %union.anon* %10884 to i32*
  %10885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10886 = getelementptr inbounds %struct.GPR, %struct.GPR* %10885, i32 0, i32 5
  %10887 = getelementptr inbounds %struct.Reg, %struct.Reg* %10886, i32 0, i32 0
  %RCX.i561 = bitcast %union.anon* %10887 to i64*
  %10888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10889 = getelementptr inbounds %struct.GPR, %struct.GPR* %10888, i32 0, i32 7
  %10890 = getelementptr inbounds %struct.Reg, %struct.Reg* %10889, i32 0, i32 0
  %RDX.i562 = bitcast %union.anon* %10890 to i64*
  %10891 = bitcast i32* %R10D.i560 to i64*
  %10892 = load i32, i32* %R10D.i560
  %10893 = zext i32 %10892 to i64
  %10894 = load i64, i64* %RCX.i561
  %10895 = load i64, i64* %RDX.i562
  %10896 = mul i64 %10895, 4
  %10897 = add i64 %10896, %10894
  %10898 = load i64, i64* %PC.i559
  %10899 = add i64 %10898, 4
  store i64 %10899, i64* %PC.i559
  %10900 = inttoptr i64 %10897 to i32*
  %10901 = load i32, i32* %10900
  %10902 = add i32 %10901, %10892
  %10903 = zext i32 %10902 to i64
  store i64 %10903, i64* %10891, align 8
  %10904 = icmp ult i32 %10902, %10892
  %10905 = icmp ult i32 %10902, %10901
  %10906 = or i1 %10904, %10905
  %10907 = zext i1 %10906 to i8
  %10908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10907, i8* %10908, align 1
  %10909 = and i32 %10902, 255
  %10910 = call i32 @llvm.ctpop.i32(i32 %10909)
  %10911 = trunc i32 %10910 to i8
  %10912 = and i8 %10911, 1
  %10913 = xor i8 %10912, 1
  %10914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10913, i8* %10914, align 1
  %10915 = xor i32 %10901, %10892
  %10916 = xor i32 %10915, %10902
  %10917 = lshr i32 %10916, 4
  %10918 = trunc i32 %10917 to i8
  %10919 = and i8 %10918, 1
  %10920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10919, i8* %10920, align 1
  %10921 = icmp eq i32 %10902, 0
  %10922 = zext i1 %10921 to i8
  %10923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10922, i8* %10923, align 1
  %10924 = lshr i32 %10902, 31
  %10925 = trunc i32 %10924 to i8
  %10926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10925, i8* %10926, align 1
  %10927 = lshr i32 %10892, 31
  %10928 = lshr i32 %10901, 31
  %10929 = xor i32 %10924, %10927
  %10930 = xor i32 %10924, %10928
  %10931 = add i32 %10929, %10930
  %10932 = icmp eq i32 %10931, 2
  %10933 = zext i1 %10932 to i8
  %10934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10933, i8* %10934, align 1
  store %struct.Memory* %loadMem_441f72, %struct.Memory** %MEMORY
  %loadMem_441f76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10936 = getelementptr inbounds %struct.GPR, %struct.GPR* %10935, i32 0, i32 33
  %10937 = getelementptr inbounds %struct.Reg, %struct.Reg* %10936, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %10937 to i64*
  %10938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10939 = getelementptr inbounds %struct.GPR, %struct.GPR* %10938, i32 0, i32 1
  %10940 = getelementptr inbounds %struct.Reg, %struct.Reg* %10939, i32 0, i32 0
  %EAX.i558 = bitcast %union.anon* %10940 to i32*
  %10941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10942 = getelementptr inbounds %struct.GPR, %struct.GPR* %10941, i32 0, i32 21
  %10943 = getelementptr inbounds %struct.Reg, %struct.Reg* %10942, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %10943 to i32*
  %10944 = load i32, i32* %EAX.i558
  %10945 = zext i32 %10944 to i64
  %10946 = load i32, i32* %R10D.i
  %10947 = zext i32 %10946 to i64
  %10948 = load i64, i64* %PC.i557
  %10949 = add i64 %10948, 3
  store i64 %10949, i64* %PC.i557
  %10950 = sub i32 %10944, %10946
  %10951 = icmp ult i32 %10944, %10946
  %10952 = zext i1 %10951 to i8
  %10953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10952, i8* %10953, align 1
  %10954 = and i32 %10950, 255
  %10955 = call i32 @llvm.ctpop.i32(i32 %10954)
  %10956 = trunc i32 %10955 to i8
  %10957 = and i8 %10956, 1
  %10958 = xor i8 %10957, 1
  %10959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10958, i8* %10959, align 1
  %10960 = xor i64 %10947, %10945
  %10961 = trunc i64 %10960 to i32
  %10962 = xor i32 %10961, %10950
  %10963 = lshr i32 %10962, 4
  %10964 = trunc i32 %10963 to i8
  %10965 = and i8 %10964, 1
  %10966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10965, i8* %10966, align 1
  %10967 = icmp eq i32 %10950, 0
  %10968 = zext i1 %10967 to i8
  %10969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10968, i8* %10969, align 1
  %10970 = lshr i32 %10950, 31
  %10971 = trunc i32 %10970 to i8
  %10972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10971, i8* %10972, align 1
  %10973 = lshr i32 %10944, 31
  %10974 = lshr i32 %10946, 31
  %10975 = xor i32 %10974, %10973
  %10976 = xor i32 %10970, %10973
  %10977 = add i32 %10976, %10975
  %10978 = icmp eq i32 %10977, 2
  %10979 = zext i1 %10978 to i8
  %10980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10979, i8* %10980, align 1
  store %struct.Memory* %loadMem_441f76, %struct.Memory** %MEMORY
  %loadMem_441f79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10982 = getelementptr inbounds %struct.GPR, %struct.GPR* %10981, i32 0, i32 33
  %10983 = getelementptr inbounds %struct.Reg, %struct.Reg* %10982, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %10983 to i64*
  %10984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10985 = getelementptr inbounds %struct.GPR, %struct.GPR* %10984, i32 0, i32 19
  %10986 = getelementptr inbounds %struct.Reg, %struct.Reg* %10985, i32 0, i32 0
  %R9D.i555 = bitcast %union.anon* %10986 to i32*
  %10987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10988 = getelementptr inbounds %struct.GPR, %struct.GPR* %10987, i32 0, i32 15
  %10989 = getelementptr inbounds %struct.Reg, %struct.Reg* %10988, i32 0, i32 0
  %RBP.i556 = bitcast %union.anon* %10989 to i64*
  %10990 = load i64, i64* %RBP.i556
  %10991 = sub i64 %10990, 280
  %10992 = load i32, i32* %R9D.i555
  %10993 = zext i32 %10992 to i64
  %10994 = load i64, i64* %PC.i554
  %10995 = add i64 %10994, 7
  store i64 %10995, i64* %PC.i554
  %10996 = inttoptr i64 %10991 to i32*
  store i32 %10992, i32* %10996
  store %struct.Memory* %loadMem_441f79, %struct.Memory** %MEMORY
  %loadMem_441f80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10998 = getelementptr inbounds %struct.GPR, %struct.GPR* %10997, i32 0, i32 33
  %10999 = getelementptr inbounds %struct.Reg, %struct.Reg* %10998, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %10999 to i64*
  %11000 = load i64, i64* %PC.i553
  %11001 = add i64 %11000, 19
  %11002 = load i64, i64* %PC.i553
  %11003 = add i64 %11002, 6
  %11004 = load i64, i64* %PC.i553
  %11005 = add i64 %11004, 6
  store i64 %11005, i64* %PC.i553
  %11006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11007 = load i8, i8* %11006, align 1
  %11008 = icmp ne i8 %11007, 0
  %11009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11010 = load i8, i8* %11009, align 1
  %11011 = icmp ne i8 %11010, 0
  %11012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11013 = load i8, i8* %11012, align 1
  %11014 = icmp ne i8 %11013, 0
  %11015 = xor i1 %11011, %11014
  %11016 = or i1 %11008, %11015
  %11017 = zext i1 %11016 to i8
  store i8 %11017, i8* %BRANCH_TAKEN, align 1
  %11018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11019 = select i1 %11016, i64 %11001, i64 %11003
  store i64 %11019, i64* %11018, align 8
  store %struct.Memory* %loadMem_441f80, %struct.Memory** %MEMORY
  %loadBr_441f80 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441f80 = icmp eq i8 %loadBr_441f80, 1
  br i1 %cmpBr_441f80, label %block_.L_441f93, label %block_441f86

block_441f86:                                     ; preds = %block_441e78
  %loadMem_441f86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11021 = getelementptr inbounds %struct.GPR, %struct.GPR* %11020, i32 0, i32 33
  %11022 = getelementptr inbounds %struct.Reg, %struct.Reg* %11021, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %11022 to i64*
  %11023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11024 = getelementptr inbounds %struct.GPR, %struct.GPR* %11023, i32 0, i32 1
  %11025 = getelementptr inbounds %struct.Reg, %struct.Reg* %11024, i32 0, i32 0
  %EAX.i551 = bitcast %union.anon* %11025 to i32*
  %11026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11027 = getelementptr inbounds %struct.GPR, %struct.GPR* %11026, i32 0, i32 1
  %11028 = getelementptr inbounds %struct.Reg, %struct.Reg* %11027, i32 0, i32 0
  %RAX.i552 = bitcast %union.anon* %11028 to i64*
  %11029 = load i64, i64* %RAX.i552
  %11030 = load i32, i32* %EAX.i551
  %11031 = zext i32 %11030 to i64
  %11032 = load i64, i64* %PC.i550
  %11033 = add i64 %11032, 2
  store i64 %11033, i64* %PC.i550
  %11034 = xor i64 %11031, %11029
  %11035 = trunc i64 %11034 to i32
  %11036 = and i64 %11034, 4294967295
  store i64 %11036, i64* %RAX.i552, align 8
  %11037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11037, align 1
  %11038 = and i32 %11035, 255
  %11039 = call i32 @llvm.ctpop.i32(i32 %11038)
  %11040 = trunc i32 %11039 to i8
  %11041 = and i8 %11040, 1
  %11042 = xor i8 %11041, 1
  %11043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11042, i8* %11043, align 1
  %11044 = icmp eq i32 %11035, 0
  %11045 = zext i1 %11044 to i8
  %11046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11045, i8* %11046, align 1
  %11047 = lshr i32 %11035, 31
  %11048 = trunc i32 %11047 to i8
  %11049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11048, i8* %11049, align 1
  %11050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11050, align 1
  %11051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11051, align 1
  store %struct.Memory* %loadMem_441f86, %struct.Memory** %MEMORY
  %loadMem_441f88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11053 = getelementptr inbounds %struct.GPR, %struct.GPR* %11052, i32 0, i32 33
  %11054 = getelementptr inbounds %struct.Reg, %struct.Reg* %11053, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %11054 to i64*
  %11055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11056 = getelementptr inbounds %struct.GPR, %struct.GPR* %11055, i32 0, i32 1
  %11057 = getelementptr inbounds %struct.Reg, %struct.Reg* %11056, i32 0, i32 0
  %EAX.i548 = bitcast %union.anon* %11057 to i32*
  %11058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11059 = getelementptr inbounds %struct.GPR, %struct.GPR* %11058, i32 0, i32 15
  %11060 = getelementptr inbounds %struct.Reg, %struct.Reg* %11059, i32 0, i32 0
  %RBP.i549 = bitcast %union.anon* %11060 to i64*
  %11061 = load i64, i64* %RBP.i549
  %11062 = sub i64 %11061, 284
  %11063 = load i32, i32* %EAX.i548
  %11064 = zext i32 %11063 to i64
  %11065 = load i64, i64* %PC.i547
  %11066 = add i64 %11065, 6
  store i64 %11066, i64* %PC.i547
  %11067 = inttoptr i64 %11062 to i32*
  store i32 %11063, i32* %11067
  store %struct.Memory* %loadMem_441f88, %struct.Memory** %MEMORY
  %loadMem_441f8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11069 = getelementptr inbounds %struct.GPR, %struct.GPR* %11068, i32 0, i32 33
  %11070 = getelementptr inbounds %struct.Reg, %struct.Reg* %11069, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %11070 to i64*
  %11071 = load i64, i64* %PC.i546
  %11072 = add i64 %11071, 51
  %11073 = load i64, i64* %PC.i546
  %11074 = add i64 %11073, 5
  store i64 %11074, i64* %PC.i546
  %11075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11072, i64* %11075, align 8
  store %struct.Memory* %loadMem_441f8e, %struct.Memory** %MEMORY
  br label %block_.L_441fc1

block_.L_441f93:                                  ; preds = %block_441e78
  %loadMem_441f93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11077 = getelementptr inbounds %struct.GPR, %struct.GPR* %11076, i32 0, i32 33
  %11078 = getelementptr inbounds %struct.Reg, %struct.Reg* %11077, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %11078 to i64*
  %11079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11080 = getelementptr inbounds %struct.GPR, %struct.GPR* %11079, i32 0, i32 1
  %11081 = getelementptr inbounds %struct.Reg, %struct.Reg* %11080, i32 0, i32 0
  %RAX.i545 = bitcast %union.anon* %11081 to i64*
  %11082 = load i64, i64* %PC.i544
  %11083 = add i64 %11082, 10
  store i64 %11083, i64* %PC.i544
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RAX.i545, align 8
  store %struct.Memory* %loadMem_441f93, %struct.Memory** %MEMORY
  %loadMem_441f9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11085 = getelementptr inbounds %struct.GPR, %struct.GPR* %11084, i32 0, i32 33
  %11086 = getelementptr inbounds %struct.Reg, %struct.Reg* %11085, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %11086 to i64*
  %11087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11088 = getelementptr inbounds %struct.GPR, %struct.GPR* %11087, i32 0, i32 1
  %11089 = getelementptr inbounds %struct.Reg, %struct.Reg* %11088, i32 0, i32 0
  %RAX.i543 = bitcast %union.anon* %11089 to i64*
  %11090 = load i64, i64* %RAX.i543
  %11091 = load i64, i64* %PC.i542
  %11092 = add i64 %11091, 6
  store i64 %11092, i64* %PC.i542
  %11093 = add i64 1024, %11090
  store i64 %11093, i64* %RAX.i543, align 8
  %11094 = icmp ult i64 %11093, %11090
  %11095 = icmp ult i64 %11093, 1024
  %11096 = or i1 %11094, %11095
  %11097 = zext i1 %11096 to i8
  %11098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11097, i8* %11098, align 1
  %11099 = trunc i64 %11093 to i32
  %11100 = and i32 %11099, 255
  %11101 = call i32 @llvm.ctpop.i32(i32 %11100)
  %11102 = trunc i32 %11101 to i8
  %11103 = and i8 %11102, 1
  %11104 = xor i8 %11103, 1
  %11105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11104, i8* %11105, align 1
  %11106 = xor i64 1024, %11090
  %11107 = xor i64 %11106, %11093
  %11108 = lshr i64 %11107, 4
  %11109 = trunc i64 %11108 to i8
  %11110 = and i8 %11109, 1
  %11111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11110, i8* %11111, align 1
  %11112 = icmp eq i64 %11093, 0
  %11113 = zext i1 %11112 to i8
  %11114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11113, i8* %11114, align 1
  %11115 = lshr i64 %11093, 63
  %11116 = trunc i64 %11115 to i8
  %11117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11116, i8* %11117, align 1
  %11118 = lshr i64 %11090, 63
  %11119 = xor i64 %11115, %11118
  %11120 = add i64 %11119, %11115
  %11121 = icmp eq i64 %11120, 2
  %11122 = zext i1 %11121 to i8
  %11123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11122, i8* %11123, align 1
  store %struct.Memory* %loadMem_441f9d, %struct.Memory** %MEMORY
  %loadMem_441fa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11125 = getelementptr inbounds %struct.GPR, %struct.GPR* %11124, i32 0, i32 33
  %11126 = getelementptr inbounds %struct.Reg, %struct.Reg* %11125, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %11126 to i64*
  %11127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11128 = getelementptr inbounds %struct.GPR, %struct.GPR* %11127, i32 0, i32 5
  %11129 = getelementptr inbounds %struct.Reg, %struct.Reg* %11128, i32 0, i32 0
  %RCX.i540 = bitcast %union.anon* %11129 to i64*
  %11130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11131 = getelementptr inbounds %struct.GPR, %struct.GPR* %11130, i32 0, i32 15
  %11132 = getelementptr inbounds %struct.Reg, %struct.Reg* %11131, i32 0, i32 0
  %RBP.i541 = bitcast %union.anon* %11132 to i64*
  %11133 = load i64, i64* %RBP.i541
  %11134 = sub i64 %11133, 268
  %11135 = load i64, i64* %PC.i539
  %11136 = add i64 %11135, 6
  store i64 %11136, i64* %PC.i539
  %11137 = inttoptr i64 %11134 to i32*
  %11138 = load i32, i32* %11137
  %11139 = zext i32 %11138 to i64
  store i64 %11139, i64* %RCX.i540, align 8
  store %struct.Memory* %loadMem_441fa3, %struct.Memory** %MEMORY
  %loadMem_441fa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11141 = getelementptr inbounds %struct.GPR, %struct.GPR* %11140, i32 0, i32 33
  %11142 = getelementptr inbounds %struct.Reg, %struct.Reg* %11141, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %11142 to i64*
  %11143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11144 = getelementptr inbounds %struct.GPR, %struct.GPR* %11143, i32 0, i32 7
  %11145 = getelementptr inbounds %struct.Reg, %struct.Reg* %11144, i32 0, i32 0
  %RDX.i537 = bitcast %union.anon* %11145 to i64*
  %11146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11147 = getelementptr inbounds %struct.GPR, %struct.GPR* %11146, i32 0, i32 15
  %11148 = getelementptr inbounds %struct.Reg, %struct.Reg* %11147, i32 0, i32 0
  %RBP.i538 = bitcast %union.anon* %11148 to i64*
  %11149 = load i64, i64* %RBP.i538
  %11150 = sub i64 %11149, 32
  %11151 = load i64, i64* %PC.i536
  %11152 = add i64 %11151, 4
  store i64 %11152, i64* %PC.i536
  %11153 = inttoptr i64 %11150 to i32*
  %11154 = load i32, i32* %11153
  %11155 = sext i32 %11154 to i64
  store i64 %11155, i64* %RDX.i537, align 8
  store %struct.Memory* %loadMem_441fa9, %struct.Memory** %MEMORY
  %loadMem_441fad = load %struct.Memory*, %struct.Memory** %MEMORY
  %11156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11157 = getelementptr inbounds %struct.GPR, %struct.GPR* %11156, i32 0, i32 33
  %11158 = getelementptr inbounds %struct.Reg, %struct.Reg* %11157, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %11158 to i64*
  %11159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11160 = getelementptr inbounds %struct.GPR, %struct.GPR* %11159, i32 0, i32 7
  %11161 = getelementptr inbounds %struct.Reg, %struct.Reg* %11160, i32 0, i32 0
  %RDX.i535 = bitcast %union.anon* %11161 to i64*
  %11162 = load i64, i64* %RDX.i535
  %11163 = load i64, i64* %PC.i534
  %11164 = add i64 %11163, 4
  store i64 %11164, i64* %PC.i534
  %11165 = shl i64 %11162, 5
  %11166 = icmp slt i64 %11165, 0
  %11167 = shl i64 %11165, 1
  store i64 %11167, i64* %RDX.i535, align 8
  %11168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11169 = zext i1 %11166 to i8
  store i8 %11169, i8* %11168, align 1
  %11170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11171 = trunc i64 %11167 to i32
  %11172 = and i32 %11171, 254
  %11173 = call i32 @llvm.ctpop.i32(i32 %11172)
  %11174 = trunc i32 %11173 to i8
  %11175 = and i8 %11174, 1
  %11176 = xor i8 %11175, 1
  store i8 %11176, i8* %11170, align 1
  %11177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11177, align 1
  %11178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11179 = icmp eq i64 %11167, 0
  %11180 = zext i1 %11179 to i8
  store i8 %11180, i8* %11178, align 1
  %11181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11182 = lshr i64 %11167, 63
  %11183 = trunc i64 %11182 to i8
  store i8 %11183, i8* %11181, align 1
  %11184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11184, align 1
  store %struct.Memory* %loadMem_441fad, %struct.Memory** %MEMORY
  %loadMem_441fb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11186 = getelementptr inbounds %struct.GPR, %struct.GPR* %11185, i32 0, i32 33
  %11187 = getelementptr inbounds %struct.Reg, %struct.Reg* %11186, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %11187 to i64*
  %11188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11189 = getelementptr inbounds %struct.GPR, %struct.GPR* %11188, i32 0, i32 1
  %11190 = getelementptr inbounds %struct.Reg, %struct.Reg* %11189, i32 0, i32 0
  %RAX.i532 = bitcast %union.anon* %11190 to i64*
  %11191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11192 = getelementptr inbounds %struct.GPR, %struct.GPR* %11191, i32 0, i32 7
  %11193 = getelementptr inbounds %struct.Reg, %struct.Reg* %11192, i32 0, i32 0
  %RDX.i533 = bitcast %union.anon* %11193 to i64*
  %11194 = load i64, i64* %RAX.i532
  %11195 = load i64, i64* %RDX.i533
  %11196 = load i64, i64* %PC.i531
  %11197 = add i64 %11196, 3
  store i64 %11197, i64* %PC.i531
  %11198 = add i64 %11195, %11194
  store i64 %11198, i64* %RAX.i532, align 8
  %11199 = icmp ult i64 %11198, %11194
  %11200 = icmp ult i64 %11198, %11195
  %11201 = or i1 %11199, %11200
  %11202 = zext i1 %11201 to i8
  %11203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11202, i8* %11203, align 1
  %11204 = trunc i64 %11198 to i32
  %11205 = and i32 %11204, 255
  %11206 = call i32 @llvm.ctpop.i32(i32 %11205)
  %11207 = trunc i32 %11206 to i8
  %11208 = and i8 %11207, 1
  %11209 = xor i8 %11208, 1
  %11210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11209, i8* %11210, align 1
  %11211 = xor i64 %11195, %11194
  %11212 = xor i64 %11211, %11198
  %11213 = lshr i64 %11212, 4
  %11214 = trunc i64 %11213 to i8
  %11215 = and i8 %11214, 1
  %11216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11215, i8* %11216, align 1
  %11217 = icmp eq i64 %11198, 0
  %11218 = zext i1 %11217 to i8
  %11219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11218, i8* %11219, align 1
  %11220 = lshr i64 %11198, 63
  %11221 = trunc i64 %11220 to i8
  %11222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11221, i8* %11222, align 1
  %11223 = lshr i64 %11194, 63
  %11224 = lshr i64 %11195, 63
  %11225 = xor i64 %11220, %11223
  %11226 = xor i64 %11220, %11224
  %11227 = add i64 %11225, %11226
  %11228 = icmp eq i64 %11227, 2
  %11229 = zext i1 %11228 to i8
  %11230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11229, i8* %11230, align 1
  store %struct.Memory* %loadMem_441fb1, %struct.Memory** %MEMORY
  %loadMem_441fb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11232 = getelementptr inbounds %struct.GPR, %struct.GPR* %11231, i32 0, i32 33
  %11233 = getelementptr inbounds %struct.Reg, %struct.Reg* %11232, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %11233 to i64*
  %11234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11235 = getelementptr inbounds %struct.GPR, %struct.GPR* %11234, i32 0, i32 7
  %11236 = getelementptr inbounds %struct.Reg, %struct.Reg* %11235, i32 0, i32 0
  %RDX.i529 = bitcast %union.anon* %11236 to i64*
  %11237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11238 = getelementptr inbounds %struct.GPR, %struct.GPR* %11237, i32 0, i32 15
  %11239 = getelementptr inbounds %struct.Reg, %struct.Reg* %11238, i32 0, i32 0
  %RBP.i530 = bitcast %union.anon* %11239 to i64*
  %11240 = load i64, i64* %RBP.i530
  %11241 = sub i64 %11240, 28
  %11242 = load i64, i64* %PC.i528
  %11243 = add i64 %11242, 4
  store i64 %11243, i64* %PC.i528
  %11244 = inttoptr i64 %11241 to i32*
  %11245 = load i32, i32* %11244
  %11246 = sext i32 %11245 to i64
  store i64 %11246, i64* %RDX.i529, align 8
  store %struct.Memory* %loadMem_441fb4, %struct.Memory** %MEMORY
  %loadMem_441fb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11248 = getelementptr inbounds %struct.GPR, %struct.GPR* %11247, i32 0, i32 33
  %11249 = getelementptr inbounds %struct.Reg, %struct.Reg* %11248, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %11249 to i64*
  %11250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11251 = getelementptr inbounds %struct.GPR, %struct.GPR* %11250, i32 0, i32 1
  %11252 = getelementptr inbounds %struct.Reg, %struct.Reg* %11251, i32 0, i32 0
  %RAX.i525 = bitcast %union.anon* %11252 to i64*
  %11253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11254 = getelementptr inbounds %struct.GPR, %struct.GPR* %11253, i32 0, i32 5
  %11255 = getelementptr inbounds %struct.Reg, %struct.Reg* %11254, i32 0, i32 0
  %RCX.i526 = bitcast %union.anon* %11255 to i64*
  %11256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11257 = getelementptr inbounds %struct.GPR, %struct.GPR* %11256, i32 0, i32 7
  %11258 = getelementptr inbounds %struct.Reg, %struct.Reg* %11257, i32 0, i32 0
  %RDX.i527 = bitcast %union.anon* %11258 to i64*
  %11259 = load i64, i64* %RCX.i526
  %11260 = load i64, i64* %RAX.i525
  %11261 = load i64, i64* %RDX.i527
  %11262 = mul i64 %11261, 4
  %11263 = add i64 %11262, %11260
  %11264 = load i64, i64* %PC.i524
  %11265 = add i64 %11264, 3
  store i64 %11265, i64* %PC.i524
  %11266 = trunc i64 %11259 to i32
  %11267 = inttoptr i64 %11263 to i32*
  %11268 = load i32, i32* %11267
  %11269 = add i32 %11268, %11266
  %11270 = zext i32 %11269 to i64
  store i64 %11270, i64* %RCX.i526, align 8
  %11271 = icmp ult i32 %11269, %11266
  %11272 = icmp ult i32 %11269, %11268
  %11273 = or i1 %11271, %11272
  %11274 = zext i1 %11273 to i8
  %11275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11274, i8* %11275, align 1
  %11276 = and i32 %11269, 255
  %11277 = call i32 @llvm.ctpop.i32(i32 %11276)
  %11278 = trunc i32 %11277 to i8
  %11279 = and i8 %11278, 1
  %11280 = xor i8 %11279, 1
  %11281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11280, i8* %11281, align 1
  %11282 = xor i32 %11268, %11266
  %11283 = xor i32 %11282, %11269
  %11284 = lshr i32 %11283, 4
  %11285 = trunc i32 %11284 to i8
  %11286 = and i8 %11285, 1
  %11287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11286, i8* %11287, align 1
  %11288 = icmp eq i32 %11269, 0
  %11289 = zext i1 %11288 to i8
  %11290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11289, i8* %11290, align 1
  %11291 = lshr i32 %11269, 31
  %11292 = trunc i32 %11291 to i8
  %11293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11292, i8* %11293, align 1
  %11294 = lshr i32 %11266, 31
  %11295 = lshr i32 %11268, 31
  %11296 = xor i32 %11291, %11294
  %11297 = xor i32 %11291, %11295
  %11298 = add i32 %11296, %11297
  %11299 = icmp eq i32 %11298, 2
  %11300 = zext i1 %11299 to i8
  %11301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11300, i8* %11301, align 1
  store %struct.Memory* %loadMem_441fb8, %struct.Memory** %MEMORY
  %loadMem_441fbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11303 = getelementptr inbounds %struct.GPR, %struct.GPR* %11302, i32 0, i32 33
  %11304 = getelementptr inbounds %struct.Reg, %struct.Reg* %11303, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %11304 to i64*
  %11305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11306 = getelementptr inbounds %struct.GPR, %struct.GPR* %11305, i32 0, i32 5
  %11307 = getelementptr inbounds %struct.Reg, %struct.Reg* %11306, i32 0, i32 0
  %ECX.i522 = bitcast %union.anon* %11307 to i32*
  %11308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11309 = getelementptr inbounds %struct.GPR, %struct.GPR* %11308, i32 0, i32 15
  %11310 = getelementptr inbounds %struct.Reg, %struct.Reg* %11309, i32 0, i32 0
  %RBP.i523 = bitcast %union.anon* %11310 to i64*
  %11311 = load i64, i64* %RBP.i523
  %11312 = sub i64 %11311, 284
  %11313 = load i32, i32* %ECX.i522
  %11314 = zext i32 %11313 to i64
  %11315 = load i64, i64* %PC.i521
  %11316 = add i64 %11315, 6
  store i64 %11316, i64* %PC.i521
  %11317 = inttoptr i64 %11312 to i32*
  store i32 %11313, i32* %11317
  store %struct.Memory* %loadMem_441fbb, %struct.Memory** %MEMORY
  br label %block_.L_441fc1

block_.L_441fc1:                                  ; preds = %block_.L_441f93, %block_441f86
  %loadMem_441fc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11319 = getelementptr inbounds %struct.GPR, %struct.GPR* %11318, i32 0, i32 33
  %11320 = getelementptr inbounds %struct.Reg, %struct.Reg* %11319, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %11320 to i64*
  %11321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11322 = getelementptr inbounds %struct.GPR, %struct.GPR* %11321, i32 0, i32 1
  %11323 = getelementptr inbounds %struct.Reg, %struct.Reg* %11322, i32 0, i32 0
  %RAX.i519 = bitcast %union.anon* %11323 to i64*
  %11324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11325 = getelementptr inbounds %struct.GPR, %struct.GPR* %11324, i32 0, i32 15
  %11326 = getelementptr inbounds %struct.Reg, %struct.Reg* %11325, i32 0, i32 0
  %RBP.i520 = bitcast %union.anon* %11326 to i64*
  %11327 = load i64, i64* %RBP.i520
  %11328 = sub i64 %11327, 284
  %11329 = load i64, i64* %PC.i518
  %11330 = add i64 %11329, 6
  store i64 %11330, i64* %PC.i518
  %11331 = inttoptr i64 %11328 to i32*
  %11332 = load i32, i32* %11331
  %11333 = zext i32 %11332 to i64
  store i64 %11333, i64* %RAX.i519, align 8
  store %struct.Memory* %loadMem_441fc1, %struct.Memory** %MEMORY
  %loadMem_441fc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11335 = getelementptr inbounds %struct.GPR, %struct.GPR* %11334, i32 0, i32 33
  %11336 = getelementptr inbounds %struct.Reg, %struct.Reg* %11335, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %11336 to i64*
  %11337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11338 = getelementptr inbounds %struct.GPR, %struct.GPR* %11337, i32 0, i32 5
  %11339 = getelementptr inbounds %struct.Reg, %struct.Reg* %11338, i32 0, i32 0
  %RCX.i516 = bitcast %union.anon* %11339 to i64*
  %11340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11341 = getelementptr inbounds %struct.GPR, %struct.GPR* %11340, i32 0, i32 15
  %11342 = getelementptr inbounds %struct.Reg, %struct.Reg* %11341, i32 0, i32 0
  %RBP.i517 = bitcast %union.anon* %11342 to i64*
  %11343 = load i64, i64* %RBP.i517
  %11344 = sub i64 %11343, 280
  %11345 = load i64, i64* %PC.i515
  %11346 = add i64 %11345, 6
  store i64 %11346, i64* %PC.i515
  %11347 = inttoptr i64 %11344 to i32*
  %11348 = load i32, i32* %11347
  %11349 = zext i32 %11348 to i64
  store i64 %11349, i64* %RCX.i516, align 8
  store %struct.Memory* %loadMem_441fc7, %struct.Memory** %MEMORY
  %loadMem_441fcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11351 = getelementptr inbounds %struct.GPR, %struct.GPR* %11350, i32 0, i32 33
  %11352 = getelementptr inbounds %struct.Reg, %struct.Reg* %11351, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %11352 to i64*
  %11353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11354 = getelementptr inbounds %struct.GPR, %struct.GPR* %11353, i32 0, i32 1
  %11355 = getelementptr inbounds %struct.Reg, %struct.Reg* %11354, i32 0, i32 0
  %EAX.i513 = bitcast %union.anon* %11355 to i32*
  %11356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11357 = getelementptr inbounds %struct.GPR, %struct.GPR* %11356, i32 0, i32 5
  %11358 = getelementptr inbounds %struct.Reg, %struct.Reg* %11357, i32 0, i32 0
  %ECX.i514 = bitcast %union.anon* %11358 to i32*
  %11359 = load i32, i32* %ECX.i514
  %11360 = zext i32 %11359 to i64
  %11361 = load i32, i32* %EAX.i513
  %11362 = zext i32 %11361 to i64
  %11363 = load i64, i64* %PC.i512
  %11364 = add i64 %11363, 2
  store i64 %11364, i64* %PC.i512
  %11365 = sub i32 %11359, %11361
  %11366 = icmp ult i32 %11359, %11361
  %11367 = zext i1 %11366 to i8
  %11368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11367, i8* %11368, align 1
  %11369 = and i32 %11365, 255
  %11370 = call i32 @llvm.ctpop.i32(i32 %11369)
  %11371 = trunc i32 %11370 to i8
  %11372 = and i8 %11371, 1
  %11373 = xor i8 %11372, 1
  %11374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11373, i8* %11374, align 1
  %11375 = xor i64 %11362, %11360
  %11376 = trunc i64 %11375 to i32
  %11377 = xor i32 %11376, %11365
  %11378 = lshr i32 %11377, 4
  %11379 = trunc i32 %11378 to i8
  %11380 = and i8 %11379, 1
  %11381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11380, i8* %11381, align 1
  %11382 = icmp eq i32 %11365, 0
  %11383 = zext i1 %11382 to i8
  %11384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11383, i8* %11384, align 1
  %11385 = lshr i32 %11365, 31
  %11386 = trunc i32 %11385 to i8
  %11387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11386, i8* %11387, align 1
  %11388 = lshr i32 %11359, 31
  %11389 = lshr i32 %11361, 31
  %11390 = xor i32 %11389, %11388
  %11391 = xor i32 %11385, %11388
  %11392 = add i32 %11391, %11390
  %11393 = icmp eq i32 %11392, 2
  %11394 = zext i1 %11393 to i8
  %11395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11394, i8* %11395, align 1
  store %struct.Memory* %loadMem_441fcd, %struct.Memory** %MEMORY
  %loadMem_441fcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11397 = getelementptr inbounds %struct.GPR, %struct.GPR* %11396, i32 0, i32 33
  %11398 = getelementptr inbounds %struct.Reg, %struct.Reg* %11397, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %11398 to i64*
  %11399 = load i64, i64* %PC.i511
  %11400 = add i64 %11399, 31
  %11401 = load i64, i64* %PC.i511
  %11402 = add i64 %11401, 6
  %11403 = load i64, i64* %PC.i511
  %11404 = add i64 %11403, 6
  store i64 %11404, i64* %PC.i511
  %11405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11406 = load i8, i8* %11405, align 1
  %11407 = icmp ne i8 %11406, 0
  %11408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11409 = load i8, i8* %11408, align 1
  %11410 = icmp ne i8 %11409, 0
  %11411 = xor i1 %11407, %11410
  %11412 = xor i1 %11411, true
  %11413 = zext i1 %11412 to i8
  store i8 %11413, i8* %BRANCH_TAKEN, align 1
  %11414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11415 = select i1 %11411, i64 %11402, i64 %11400
  store i64 %11415, i64* %11414, align 8
  store %struct.Memory* %loadMem_441fcf, %struct.Memory** %MEMORY
  %loadBr_441fcf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441fcf = icmp eq i8 %loadBr_441fcf, 1
  br i1 %cmpBr_441fcf, label %block_.L_441fee, label %block_441fd5

block_441fd5:                                     ; preds = %block_.L_441fc1
  %loadMem_441fd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11417 = getelementptr inbounds %struct.GPR, %struct.GPR* %11416, i32 0, i32 33
  %11418 = getelementptr inbounds %struct.Reg, %struct.Reg* %11417, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %11418 to i64*
  %11419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11420 = getelementptr inbounds %struct.GPR, %struct.GPR* %11419, i32 0, i32 1
  %11421 = getelementptr inbounds %struct.Reg, %struct.Reg* %11420, i32 0, i32 0
  %RAX.i510 = bitcast %union.anon* %11421 to i64*
  %11422 = load i64, i64* %PC.i509
  %11423 = add i64 %11422, 8
  store i64 %11423, i64* %PC.i509
  %11424 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11424, i64* %RAX.i510, align 8
  store %struct.Memory* %loadMem_441fd5, %struct.Memory** %MEMORY
  %loadMem_441fdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11426 = getelementptr inbounds %struct.GPR, %struct.GPR* %11425, i32 0, i32 33
  %11427 = getelementptr inbounds %struct.Reg, %struct.Reg* %11426, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %11427 to i64*
  %11428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11429 = getelementptr inbounds %struct.GPR, %struct.GPR* %11428, i32 0, i32 1
  %11430 = getelementptr inbounds %struct.Reg, %struct.Reg* %11429, i32 0, i32 0
  %RAX.i507 = bitcast %union.anon* %11430 to i64*
  %11431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11432 = getelementptr inbounds %struct.GPR, %struct.GPR* %11431, i32 0, i32 5
  %11433 = getelementptr inbounds %struct.Reg, %struct.Reg* %11432, i32 0, i32 0
  %RCX.i508 = bitcast %union.anon* %11433 to i64*
  %11434 = load i64, i64* %RAX.i507
  %11435 = add i64 %11434, 72688
  %11436 = load i64, i64* %PC.i506
  %11437 = add i64 %11436, 6
  store i64 %11437, i64* %PC.i506
  %11438 = inttoptr i64 %11435 to i32*
  %11439 = load i32, i32* %11438
  %11440 = zext i32 %11439 to i64
  store i64 %11440, i64* %RCX.i508, align 8
  store %struct.Memory* %loadMem_441fdd, %struct.Memory** %MEMORY
  %loadMem_441fe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11442 = getelementptr inbounds %struct.GPR, %struct.GPR* %11441, i32 0, i32 33
  %11443 = getelementptr inbounds %struct.Reg, %struct.Reg* %11442, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %11443 to i64*
  %11444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11445 = getelementptr inbounds %struct.GPR, %struct.GPR* %11444, i32 0, i32 5
  %11446 = getelementptr inbounds %struct.Reg, %struct.Reg* %11445, i32 0, i32 0
  %ECX.i504 = bitcast %union.anon* %11446 to i32*
  %11447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11448 = getelementptr inbounds %struct.GPR, %struct.GPR* %11447, i32 0, i32 15
  %11449 = getelementptr inbounds %struct.Reg, %struct.Reg* %11448, i32 0, i32 0
  %RBP.i505 = bitcast %union.anon* %11449 to i64*
  %11450 = load i64, i64* %RBP.i505
  %11451 = sub i64 %11450, 288
  %11452 = load i32, i32* %ECX.i504
  %11453 = zext i32 %11452 to i64
  %11454 = load i64, i64* %PC.i503
  %11455 = add i64 %11454, 6
  store i64 %11455, i64* %PC.i503
  %11456 = inttoptr i64 %11451 to i32*
  store i32 %11452, i32* %11456
  store %struct.Memory* %loadMem_441fe3, %struct.Memory** %MEMORY
  %loadMem_441fe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11458 = getelementptr inbounds %struct.GPR, %struct.GPR* %11457, i32 0, i32 33
  %11459 = getelementptr inbounds %struct.Reg, %struct.Reg* %11458, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %11459 to i64*
  %11460 = load i64, i64* %PC.i502
  %11461 = add i64 %11460, 127
  %11462 = load i64, i64* %PC.i502
  %11463 = add i64 %11462, 5
  store i64 %11463, i64* %PC.i502
  %11464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11461, i64* %11464, align 8
  store %struct.Memory* %loadMem_441fe9, %struct.Memory** %MEMORY
  br label %block_.L_442068

block_.L_441fee:                                  ; preds = %block_.L_441fc1
  %loadMem_441fee = load %struct.Memory*, %struct.Memory** %MEMORY
  %11465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11466 = getelementptr inbounds %struct.GPR, %struct.GPR* %11465, i32 0, i32 33
  %11467 = getelementptr inbounds %struct.Reg, %struct.Reg* %11466, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %11467 to i64*
  %11468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11469 = getelementptr inbounds %struct.GPR, %struct.GPR* %11468, i32 0, i32 1
  %11470 = getelementptr inbounds %struct.Reg, %struct.Reg* %11469, i32 0, i32 0
  %EAX.i500 = bitcast %union.anon* %11470 to i32*
  %11471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11472 = getelementptr inbounds %struct.GPR, %struct.GPR* %11471, i32 0, i32 1
  %11473 = getelementptr inbounds %struct.Reg, %struct.Reg* %11472, i32 0, i32 0
  %RAX.i501 = bitcast %union.anon* %11473 to i64*
  %11474 = load i64, i64* %RAX.i501
  %11475 = load i32, i32* %EAX.i500
  %11476 = zext i32 %11475 to i64
  %11477 = load i64, i64* %PC.i499
  %11478 = add i64 %11477, 2
  store i64 %11478, i64* %PC.i499
  %11479 = xor i64 %11476, %11474
  %11480 = trunc i64 %11479 to i32
  %11481 = and i64 %11479, 4294967295
  store i64 %11481, i64* %RAX.i501, align 8
  %11482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11482, align 1
  %11483 = and i32 %11480, 255
  %11484 = call i32 @llvm.ctpop.i32(i32 %11483)
  %11485 = trunc i32 %11484 to i8
  %11486 = and i8 %11485, 1
  %11487 = xor i8 %11486, 1
  %11488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11487, i8* %11488, align 1
  %11489 = icmp eq i32 %11480, 0
  %11490 = zext i1 %11489 to i8
  %11491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11490, i8* %11491, align 1
  %11492 = lshr i32 %11480, 31
  %11493 = trunc i32 %11492 to i8
  %11494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11493, i8* %11494, align 1
  %11495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11495, align 1
  %11496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11496, align 1
  store %struct.Memory* %loadMem_441fee, %struct.Memory** %MEMORY
  %loadMem_441ff0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11498 = getelementptr inbounds %struct.GPR, %struct.GPR* %11497, i32 0, i32 33
  %11499 = getelementptr inbounds %struct.Reg, %struct.Reg* %11498, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %11499 to i64*
  %11500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11501 = getelementptr inbounds %struct.GPR, %struct.GPR* %11500, i32 0, i32 5
  %11502 = getelementptr inbounds %struct.Reg, %struct.Reg* %11501, i32 0, i32 0
  %RCX.i498 = bitcast %union.anon* %11502 to i64*
  %11503 = load i64, i64* %PC.i497
  %11504 = add i64 %11503, 10
  store i64 %11504, i64* %PC.i497
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RCX.i498, align 8
  store %struct.Memory* %loadMem_441ff0, %struct.Memory** %MEMORY
  %loadMem_441ffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %11505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11506 = getelementptr inbounds %struct.GPR, %struct.GPR* %11505, i32 0, i32 33
  %11507 = getelementptr inbounds %struct.Reg, %struct.Reg* %11506, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %11507 to i64*
  %11508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11509 = getelementptr inbounds %struct.GPR, %struct.GPR* %11508, i32 0, i32 5
  %11510 = getelementptr inbounds %struct.Reg, %struct.Reg* %11509, i32 0, i32 0
  %RCX.i496 = bitcast %union.anon* %11510 to i64*
  %11511 = load i64, i64* %RCX.i496
  %11512 = load i64, i64* %PC.i495
  %11513 = add i64 %11512, 7
  store i64 %11513, i64* %PC.i495
  %11514 = add i64 1024, %11511
  store i64 %11514, i64* %RCX.i496, align 8
  %11515 = icmp ult i64 %11514, %11511
  %11516 = icmp ult i64 %11514, 1024
  %11517 = or i1 %11515, %11516
  %11518 = zext i1 %11517 to i8
  %11519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11518, i8* %11519, align 1
  %11520 = trunc i64 %11514 to i32
  %11521 = and i32 %11520, 255
  %11522 = call i32 @llvm.ctpop.i32(i32 %11521)
  %11523 = trunc i32 %11522 to i8
  %11524 = and i8 %11523, 1
  %11525 = xor i8 %11524, 1
  %11526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11525, i8* %11526, align 1
  %11527 = xor i64 1024, %11511
  %11528 = xor i64 %11527, %11514
  %11529 = lshr i64 %11528, 4
  %11530 = trunc i64 %11529 to i8
  %11531 = and i8 %11530, 1
  %11532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11531, i8* %11532, align 1
  %11533 = icmp eq i64 %11514, 0
  %11534 = zext i1 %11533 to i8
  %11535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11534, i8* %11535, align 1
  %11536 = lshr i64 %11514, 63
  %11537 = trunc i64 %11536 to i8
  %11538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11537, i8* %11538, align 1
  %11539 = lshr i64 %11511, 63
  %11540 = xor i64 %11536, %11539
  %11541 = add i64 %11540, %11536
  %11542 = icmp eq i64 %11541, 2
  %11543 = zext i1 %11542 to i8
  %11544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11543, i8* %11544, align 1
  store %struct.Memory* %loadMem_441ffa, %struct.Memory** %MEMORY
  %loadMem_442001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11546 = getelementptr inbounds %struct.GPR, %struct.GPR* %11545, i32 0, i32 33
  %11547 = getelementptr inbounds %struct.Reg, %struct.Reg* %11546, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %11547 to i64*
  %11548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11549 = getelementptr inbounds %struct.GPR, %struct.GPR* %11548, i32 0, i32 7
  %11550 = getelementptr inbounds %struct.Reg, %struct.Reg* %11549, i32 0, i32 0
  %RDX.i493 = bitcast %union.anon* %11550 to i64*
  %11551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11552 = getelementptr inbounds %struct.GPR, %struct.GPR* %11551, i32 0, i32 15
  %11553 = getelementptr inbounds %struct.Reg, %struct.Reg* %11552, i32 0, i32 0
  %RBP.i494 = bitcast %union.anon* %11553 to i64*
  %11554 = load i64, i64* %RBP.i494
  %11555 = sub i64 %11554, 268
  %11556 = load i64, i64* %PC.i492
  %11557 = add i64 %11556, 6
  store i64 %11557, i64* %PC.i492
  %11558 = inttoptr i64 %11555 to i32*
  %11559 = load i32, i32* %11558
  %11560 = zext i32 %11559 to i64
  store i64 %11560, i64* %RDX.i493, align 8
  store %struct.Memory* %loadMem_442001, %struct.Memory** %MEMORY
  %loadMem_442007 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11562 = getelementptr inbounds %struct.GPR, %struct.GPR* %11561, i32 0, i32 33
  %11563 = getelementptr inbounds %struct.Reg, %struct.Reg* %11562, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %11563 to i64*
  %11564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11565 = getelementptr inbounds %struct.GPR, %struct.GPR* %11564, i32 0, i32 9
  %11566 = getelementptr inbounds %struct.Reg, %struct.Reg* %11565, i32 0, i32 0
  %RSI.i490 = bitcast %union.anon* %11566 to i64*
  %11567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11568 = getelementptr inbounds %struct.GPR, %struct.GPR* %11567, i32 0, i32 15
  %11569 = getelementptr inbounds %struct.Reg, %struct.Reg* %11568, i32 0, i32 0
  %RBP.i491 = bitcast %union.anon* %11569 to i64*
  %11570 = load i64, i64* %RBP.i491
  %11571 = sub i64 %11570, 32
  %11572 = load i64, i64* %PC.i489
  %11573 = add i64 %11572, 4
  store i64 %11573, i64* %PC.i489
  %11574 = inttoptr i64 %11571 to i32*
  %11575 = load i32, i32* %11574
  %11576 = sext i32 %11575 to i64
  store i64 %11576, i64* %RSI.i490, align 8
  store %struct.Memory* %loadMem_442007, %struct.Memory** %MEMORY
  %loadMem_44200b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11578 = getelementptr inbounds %struct.GPR, %struct.GPR* %11577, i32 0, i32 33
  %11579 = getelementptr inbounds %struct.Reg, %struct.Reg* %11578, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %11579 to i64*
  %11580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11581 = getelementptr inbounds %struct.GPR, %struct.GPR* %11580, i32 0, i32 9
  %11582 = getelementptr inbounds %struct.Reg, %struct.Reg* %11581, i32 0, i32 0
  %RSI.i488 = bitcast %union.anon* %11582 to i64*
  %11583 = load i64, i64* %RSI.i488
  %11584 = load i64, i64* %PC.i487
  %11585 = add i64 %11584, 4
  store i64 %11585, i64* %PC.i487
  %11586 = shl i64 %11583, 5
  %11587 = icmp slt i64 %11586, 0
  %11588 = shl i64 %11586, 1
  store i64 %11588, i64* %RSI.i488, align 8
  %11589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11590 = zext i1 %11587 to i8
  store i8 %11590, i8* %11589, align 1
  %11591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11592 = trunc i64 %11588 to i32
  %11593 = and i32 %11592, 254
  %11594 = call i32 @llvm.ctpop.i32(i32 %11593)
  %11595 = trunc i32 %11594 to i8
  %11596 = and i8 %11595, 1
  %11597 = xor i8 %11596, 1
  store i8 %11597, i8* %11591, align 1
  %11598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11598, align 1
  %11599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11600 = icmp eq i64 %11588, 0
  %11601 = zext i1 %11600 to i8
  store i8 %11601, i8* %11599, align 1
  %11602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11603 = lshr i64 %11588, 63
  %11604 = trunc i64 %11603 to i8
  store i8 %11604, i8* %11602, align 1
  %11605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11605, align 1
  store %struct.Memory* %loadMem_44200b, %struct.Memory** %MEMORY
  %loadMem_44200f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11607 = getelementptr inbounds %struct.GPR, %struct.GPR* %11606, i32 0, i32 33
  %11608 = getelementptr inbounds %struct.Reg, %struct.Reg* %11607, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %11608 to i64*
  %11609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11610 = getelementptr inbounds %struct.GPR, %struct.GPR* %11609, i32 0, i32 5
  %11611 = getelementptr inbounds %struct.Reg, %struct.Reg* %11610, i32 0, i32 0
  %RCX.i485 = bitcast %union.anon* %11611 to i64*
  %11612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11613 = getelementptr inbounds %struct.GPR, %struct.GPR* %11612, i32 0, i32 9
  %11614 = getelementptr inbounds %struct.Reg, %struct.Reg* %11613, i32 0, i32 0
  %RSI.i486 = bitcast %union.anon* %11614 to i64*
  %11615 = load i64, i64* %RCX.i485
  %11616 = load i64, i64* %RSI.i486
  %11617 = load i64, i64* %PC.i484
  %11618 = add i64 %11617, 3
  store i64 %11618, i64* %PC.i484
  %11619 = add i64 %11616, %11615
  store i64 %11619, i64* %RCX.i485, align 8
  %11620 = icmp ult i64 %11619, %11615
  %11621 = icmp ult i64 %11619, %11616
  %11622 = or i1 %11620, %11621
  %11623 = zext i1 %11622 to i8
  %11624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11623, i8* %11624, align 1
  %11625 = trunc i64 %11619 to i32
  %11626 = and i32 %11625, 255
  %11627 = call i32 @llvm.ctpop.i32(i32 %11626)
  %11628 = trunc i32 %11627 to i8
  %11629 = and i8 %11628, 1
  %11630 = xor i8 %11629, 1
  %11631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11630, i8* %11631, align 1
  %11632 = xor i64 %11616, %11615
  %11633 = xor i64 %11632, %11619
  %11634 = lshr i64 %11633, 4
  %11635 = trunc i64 %11634 to i8
  %11636 = and i8 %11635, 1
  %11637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11636, i8* %11637, align 1
  %11638 = icmp eq i64 %11619, 0
  %11639 = zext i1 %11638 to i8
  %11640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11639, i8* %11640, align 1
  %11641 = lshr i64 %11619, 63
  %11642 = trunc i64 %11641 to i8
  %11643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11642, i8* %11643, align 1
  %11644 = lshr i64 %11615, 63
  %11645 = lshr i64 %11616, 63
  %11646 = xor i64 %11641, %11644
  %11647 = xor i64 %11641, %11645
  %11648 = add i64 %11646, %11647
  %11649 = icmp eq i64 %11648, 2
  %11650 = zext i1 %11649 to i8
  %11651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11650, i8* %11651, align 1
  store %struct.Memory* %loadMem_44200f, %struct.Memory** %MEMORY
  %loadMem_442012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11653 = getelementptr inbounds %struct.GPR, %struct.GPR* %11652, i32 0, i32 33
  %11654 = getelementptr inbounds %struct.Reg, %struct.Reg* %11653, i32 0, i32 0
  %PC.i481 = bitcast %union.anon* %11654 to i64*
  %11655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11656 = getelementptr inbounds %struct.GPR, %struct.GPR* %11655, i32 0, i32 9
  %11657 = getelementptr inbounds %struct.Reg, %struct.Reg* %11656, i32 0, i32 0
  %RSI.i482 = bitcast %union.anon* %11657 to i64*
  %11658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11659 = getelementptr inbounds %struct.GPR, %struct.GPR* %11658, i32 0, i32 15
  %11660 = getelementptr inbounds %struct.Reg, %struct.Reg* %11659, i32 0, i32 0
  %RBP.i483 = bitcast %union.anon* %11660 to i64*
  %11661 = load i64, i64* %RBP.i483
  %11662 = sub i64 %11661, 28
  %11663 = load i64, i64* %PC.i481
  %11664 = add i64 %11663, 4
  store i64 %11664, i64* %PC.i481
  %11665 = inttoptr i64 %11662 to i32*
  %11666 = load i32, i32* %11665
  %11667 = sext i32 %11666 to i64
  store i64 %11667, i64* %RSI.i482, align 8
  store %struct.Memory* %loadMem_442012, %struct.Memory** %MEMORY
  %loadMem_442016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11669 = getelementptr inbounds %struct.GPR, %struct.GPR* %11668, i32 0, i32 33
  %11670 = getelementptr inbounds %struct.Reg, %struct.Reg* %11669, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %11670 to i64*
  %11671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11672 = getelementptr inbounds %struct.GPR, %struct.GPR* %11671, i32 0, i32 5
  %11673 = getelementptr inbounds %struct.Reg, %struct.Reg* %11672, i32 0, i32 0
  %RCX.i478 = bitcast %union.anon* %11673 to i64*
  %11674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11675 = getelementptr inbounds %struct.GPR, %struct.GPR* %11674, i32 0, i32 7
  %11676 = getelementptr inbounds %struct.Reg, %struct.Reg* %11675, i32 0, i32 0
  %RDX.i479 = bitcast %union.anon* %11676 to i64*
  %11677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11678 = getelementptr inbounds %struct.GPR, %struct.GPR* %11677, i32 0, i32 9
  %11679 = getelementptr inbounds %struct.Reg, %struct.Reg* %11678, i32 0, i32 0
  %RSI.i480 = bitcast %union.anon* %11679 to i64*
  %11680 = load i64, i64* %RDX.i479
  %11681 = load i64, i64* %RCX.i478
  %11682 = load i64, i64* %RSI.i480
  %11683 = mul i64 %11682, 4
  %11684 = add i64 %11683, %11681
  %11685 = load i64, i64* %PC.i477
  %11686 = add i64 %11685, 3
  store i64 %11686, i64* %PC.i477
  %11687 = trunc i64 %11680 to i32
  %11688 = inttoptr i64 %11684 to i32*
  %11689 = load i32, i32* %11688
  %11690 = add i32 %11689, %11687
  %11691 = zext i32 %11690 to i64
  store i64 %11691, i64* %RDX.i479, align 8
  %11692 = icmp ult i32 %11690, %11687
  %11693 = icmp ult i32 %11690, %11689
  %11694 = or i1 %11692, %11693
  %11695 = zext i1 %11694 to i8
  %11696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11695, i8* %11696, align 1
  %11697 = and i32 %11690, 255
  %11698 = call i32 @llvm.ctpop.i32(i32 %11697)
  %11699 = trunc i32 %11698 to i8
  %11700 = and i8 %11699, 1
  %11701 = xor i8 %11700, 1
  %11702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11701, i8* %11702, align 1
  %11703 = xor i32 %11689, %11687
  %11704 = xor i32 %11703, %11690
  %11705 = lshr i32 %11704, 4
  %11706 = trunc i32 %11705 to i8
  %11707 = and i8 %11706, 1
  %11708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11707, i8* %11708, align 1
  %11709 = icmp eq i32 %11690, 0
  %11710 = zext i1 %11709 to i8
  %11711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11710, i8* %11711, align 1
  %11712 = lshr i32 %11690, 31
  %11713 = trunc i32 %11712 to i8
  %11714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11713, i8* %11714, align 1
  %11715 = lshr i32 %11687, 31
  %11716 = lshr i32 %11689, 31
  %11717 = xor i32 %11712, %11715
  %11718 = xor i32 %11712, %11716
  %11719 = add i32 %11717, %11718
  %11720 = icmp eq i32 %11719, 2
  %11721 = zext i1 %11720 to i8
  %11722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11721, i8* %11722, align 1
  store %struct.Memory* %loadMem_442016, %struct.Memory** %MEMORY
  %loadMem_442019 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11724 = getelementptr inbounds %struct.GPR, %struct.GPR* %11723, i32 0, i32 33
  %11725 = getelementptr inbounds %struct.Reg, %struct.Reg* %11724, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %11725 to i64*
  %11726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11727 = getelementptr inbounds %struct.GPR, %struct.GPR* %11726, i32 0, i32 1
  %11728 = getelementptr inbounds %struct.Reg, %struct.Reg* %11727, i32 0, i32 0
  %EAX.i475 = bitcast %union.anon* %11728 to i32*
  %11729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11730 = getelementptr inbounds %struct.GPR, %struct.GPR* %11729, i32 0, i32 7
  %11731 = getelementptr inbounds %struct.Reg, %struct.Reg* %11730, i32 0, i32 0
  %EDX.i476 = bitcast %union.anon* %11731 to i32*
  %11732 = load i32, i32* %EAX.i475
  %11733 = zext i32 %11732 to i64
  %11734 = load i32, i32* %EDX.i476
  %11735 = zext i32 %11734 to i64
  %11736 = load i64, i64* %PC.i474
  %11737 = add i64 %11736, 2
  store i64 %11737, i64* %PC.i474
  %11738 = sub i32 %11732, %11734
  %11739 = icmp ult i32 %11732, %11734
  %11740 = zext i1 %11739 to i8
  %11741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11740, i8* %11741, align 1
  %11742 = and i32 %11738, 255
  %11743 = call i32 @llvm.ctpop.i32(i32 %11742)
  %11744 = trunc i32 %11743 to i8
  %11745 = and i8 %11744, 1
  %11746 = xor i8 %11745, 1
  %11747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11746, i8* %11747, align 1
  %11748 = xor i64 %11735, %11733
  %11749 = trunc i64 %11748 to i32
  %11750 = xor i32 %11749, %11738
  %11751 = lshr i32 %11750, 4
  %11752 = trunc i32 %11751 to i8
  %11753 = and i8 %11752, 1
  %11754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11753, i8* %11754, align 1
  %11755 = icmp eq i32 %11738, 0
  %11756 = zext i1 %11755 to i8
  %11757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11756, i8* %11757, align 1
  %11758 = lshr i32 %11738, 31
  %11759 = trunc i32 %11758 to i8
  %11760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11759, i8* %11760, align 1
  %11761 = lshr i32 %11732, 31
  %11762 = lshr i32 %11734, 31
  %11763 = xor i32 %11762, %11761
  %11764 = xor i32 %11758, %11761
  %11765 = add i32 %11764, %11763
  %11766 = icmp eq i32 %11765, 2
  %11767 = zext i1 %11766 to i8
  %11768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11767, i8* %11768, align 1
  store %struct.Memory* %loadMem_442019, %struct.Memory** %MEMORY
  %loadMem_44201b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11770 = getelementptr inbounds %struct.GPR, %struct.GPR* %11769, i32 0, i32 33
  %11771 = getelementptr inbounds %struct.Reg, %struct.Reg* %11770, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %11771 to i64*
  %11772 = load i64, i64* %PC.i473
  %11773 = add i64 %11772, 19
  %11774 = load i64, i64* %PC.i473
  %11775 = add i64 %11774, 6
  %11776 = load i64, i64* %PC.i473
  %11777 = add i64 %11776, 6
  store i64 %11777, i64* %PC.i473
  %11778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11779 = load i8, i8* %11778, align 1
  %11780 = icmp ne i8 %11779, 0
  %11781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11782 = load i8, i8* %11781, align 1
  %11783 = icmp ne i8 %11782, 0
  %11784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11785 = load i8, i8* %11784, align 1
  %11786 = icmp ne i8 %11785, 0
  %11787 = xor i1 %11783, %11786
  %11788 = or i1 %11780, %11787
  %11789 = zext i1 %11788 to i8
  store i8 %11789, i8* %BRANCH_TAKEN, align 1
  %11790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11791 = select i1 %11788, i64 %11773, i64 %11775
  store i64 %11791, i64* %11790, align 8
  store %struct.Memory* %loadMem_44201b, %struct.Memory** %MEMORY
  %loadBr_44201b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44201b = icmp eq i8 %loadBr_44201b, 1
  br i1 %cmpBr_44201b, label %block_.L_44202e, label %block_442021

block_442021:                                     ; preds = %block_.L_441fee
  %loadMem_442021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11793 = getelementptr inbounds %struct.GPR, %struct.GPR* %11792, i32 0, i32 33
  %11794 = getelementptr inbounds %struct.Reg, %struct.Reg* %11793, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %11794 to i64*
  %11795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11796 = getelementptr inbounds %struct.GPR, %struct.GPR* %11795, i32 0, i32 1
  %11797 = getelementptr inbounds %struct.Reg, %struct.Reg* %11796, i32 0, i32 0
  %EAX.i471 = bitcast %union.anon* %11797 to i32*
  %11798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11799 = getelementptr inbounds %struct.GPR, %struct.GPR* %11798, i32 0, i32 1
  %11800 = getelementptr inbounds %struct.Reg, %struct.Reg* %11799, i32 0, i32 0
  %RAX.i472 = bitcast %union.anon* %11800 to i64*
  %11801 = load i64, i64* %RAX.i472
  %11802 = load i32, i32* %EAX.i471
  %11803 = zext i32 %11802 to i64
  %11804 = load i64, i64* %PC.i470
  %11805 = add i64 %11804, 2
  store i64 %11805, i64* %PC.i470
  %11806 = xor i64 %11803, %11801
  %11807 = trunc i64 %11806 to i32
  %11808 = and i64 %11806, 4294967295
  store i64 %11808, i64* %RAX.i472, align 8
  %11809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11809, align 1
  %11810 = and i32 %11807, 255
  %11811 = call i32 @llvm.ctpop.i32(i32 %11810)
  %11812 = trunc i32 %11811 to i8
  %11813 = and i8 %11812, 1
  %11814 = xor i8 %11813, 1
  %11815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11814, i8* %11815, align 1
  %11816 = icmp eq i32 %11807, 0
  %11817 = zext i1 %11816 to i8
  %11818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11817, i8* %11818, align 1
  %11819 = lshr i32 %11807, 31
  %11820 = trunc i32 %11819 to i8
  %11821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11820, i8* %11821, align 1
  %11822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11822, align 1
  %11823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11823, align 1
  store %struct.Memory* %loadMem_442021, %struct.Memory** %MEMORY
  %loadMem_442023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11825 = getelementptr inbounds %struct.GPR, %struct.GPR* %11824, i32 0, i32 33
  %11826 = getelementptr inbounds %struct.Reg, %struct.Reg* %11825, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %11826 to i64*
  %11827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11828 = getelementptr inbounds %struct.GPR, %struct.GPR* %11827, i32 0, i32 1
  %11829 = getelementptr inbounds %struct.Reg, %struct.Reg* %11828, i32 0, i32 0
  %EAX.i468 = bitcast %union.anon* %11829 to i32*
  %11830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11831 = getelementptr inbounds %struct.GPR, %struct.GPR* %11830, i32 0, i32 15
  %11832 = getelementptr inbounds %struct.Reg, %struct.Reg* %11831, i32 0, i32 0
  %RBP.i469 = bitcast %union.anon* %11832 to i64*
  %11833 = load i64, i64* %RBP.i469
  %11834 = sub i64 %11833, 292
  %11835 = load i32, i32* %EAX.i468
  %11836 = zext i32 %11835 to i64
  %11837 = load i64, i64* %PC.i467
  %11838 = add i64 %11837, 6
  store i64 %11838, i64* %PC.i467
  %11839 = inttoptr i64 %11834 to i32*
  store i32 %11835, i32* %11839
  store %struct.Memory* %loadMem_442023, %struct.Memory** %MEMORY
  %loadMem_442029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11841 = getelementptr inbounds %struct.GPR, %struct.GPR* %11840, i32 0, i32 33
  %11842 = getelementptr inbounds %struct.Reg, %struct.Reg* %11841, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %11842 to i64*
  %11843 = load i64, i64* %PC.i466
  %11844 = add i64 %11843, 51
  %11845 = load i64, i64* %PC.i466
  %11846 = add i64 %11845, 5
  store i64 %11846, i64* %PC.i466
  %11847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11844, i64* %11847, align 8
  store %struct.Memory* %loadMem_442029, %struct.Memory** %MEMORY
  br label %block_.L_44205c

block_.L_44202e:                                  ; preds = %block_.L_441fee
  %loadMem_44202e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11849 = getelementptr inbounds %struct.GPR, %struct.GPR* %11848, i32 0, i32 33
  %11850 = getelementptr inbounds %struct.Reg, %struct.Reg* %11849, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %11850 to i64*
  %11851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11852 = getelementptr inbounds %struct.GPR, %struct.GPR* %11851, i32 0, i32 1
  %11853 = getelementptr inbounds %struct.Reg, %struct.Reg* %11852, i32 0, i32 0
  %RAX.i465 = bitcast %union.anon* %11853 to i64*
  %11854 = load i64, i64* %PC.i464
  %11855 = add i64 %11854, 10
  store i64 %11855, i64* %PC.i464
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RAX.i465, align 8
  store %struct.Memory* %loadMem_44202e, %struct.Memory** %MEMORY
  %loadMem_442038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11857 = getelementptr inbounds %struct.GPR, %struct.GPR* %11856, i32 0, i32 33
  %11858 = getelementptr inbounds %struct.Reg, %struct.Reg* %11857, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %11858 to i64*
  %11859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11860 = getelementptr inbounds %struct.GPR, %struct.GPR* %11859, i32 0, i32 1
  %11861 = getelementptr inbounds %struct.Reg, %struct.Reg* %11860, i32 0, i32 0
  %RAX.i463 = bitcast %union.anon* %11861 to i64*
  %11862 = load i64, i64* %RAX.i463
  %11863 = load i64, i64* %PC.i462
  %11864 = add i64 %11863, 6
  store i64 %11864, i64* %PC.i462
  %11865 = add i64 1024, %11862
  store i64 %11865, i64* %RAX.i463, align 8
  %11866 = icmp ult i64 %11865, %11862
  %11867 = icmp ult i64 %11865, 1024
  %11868 = or i1 %11866, %11867
  %11869 = zext i1 %11868 to i8
  %11870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11869, i8* %11870, align 1
  %11871 = trunc i64 %11865 to i32
  %11872 = and i32 %11871, 255
  %11873 = call i32 @llvm.ctpop.i32(i32 %11872)
  %11874 = trunc i32 %11873 to i8
  %11875 = and i8 %11874, 1
  %11876 = xor i8 %11875, 1
  %11877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11876, i8* %11877, align 1
  %11878 = xor i64 1024, %11862
  %11879 = xor i64 %11878, %11865
  %11880 = lshr i64 %11879, 4
  %11881 = trunc i64 %11880 to i8
  %11882 = and i8 %11881, 1
  %11883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11882, i8* %11883, align 1
  %11884 = icmp eq i64 %11865, 0
  %11885 = zext i1 %11884 to i8
  %11886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11885, i8* %11886, align 1
  %11887 = lshr i64 %11865, 63
  %11888 = trunc i64 %11887 to i8
  %11889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11888, i8* %11889, align 1
  %11890 = lshr i64 %11862, 63
  %11891 = xor i64 %11887, %11890
  %11892 = add i64 %11891, %11887
  %11893 = icmp eq i64 %11892, 2
  %11894 = zext i1 %11893 to i8
  %11895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11894, i8* %11895, align 1
  store %struct.Memory* %loadMem_442038, %struct.Memory** %MEMORY
  %loadMem_44203e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11897 = getelementptr inbounds %struct.GPR, %struct.GPR* %11896, i32 0, i32 33
  %11898 = getelementptr inbounds %struct.Reg, %struct.Reg* %11897, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %11898 to i64*
  %11899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11900 = getelementptr inbounds %struct.GPR, %struct.GPR* %11899, i32 0, i32 5
  %11901 = getelementptr inbounds %struct.Reg, %struct.Reg* %11900, i32 0, i32 0
  %RCX.i460 = bitcast %union.anon* %11901 to i64*
  %11902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11903 = getelementptr inbounds %struct.GPR, %struct.GPR* %11902, i32 0, i32 15
  %11904 = getelementptr inbounds %struct.Reg, %struct.Reg* %11903, i32 0, i32 0
  %RBP.i461 = bitcast %union.anon* %11904 to i64*
  %11905 = load i64, i64* %RBP.i461
  %11906 = sub i64 %11905, 268
  %11907 = load i64, i64* %PC.i459
  %11908 = add i64 %11907, 6
  store i64 %11908, i64* %PC.i459
  %11909 = inttoptr i64 %11906 to i32*
  %11910 = load i32, i32* %11909
  %11911 = zext i32 %11910 to i64
  store i64 %11911, i64* %RCX.i460, align 8
  store %struct.Memory* %loadMem_44203e, %struct.Memory** %MEMORY
  %loadMem_442044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11913 = getelementptr inbounds %struct.GPR, %struct.GPR* %11912, i32 0, i32 33
  %11914 = getelementptr inbounds %struct.Reg, %struct.Reg* %11913, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %11914 to i64*
  %11915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11916 = getelementptr inbounds %struct.GPR, %struct.GPR* %11915, i32 0, i32 7
  %11917 = getelementptr inbounds %struct.Reg, %struct.Reg* %11916, i32 0, i32 0
  %RDX.i457 = bitcast %union.anon* %11917 to i64*
  %11918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11919 = getelementptr inbounds %struct.GPR, %struct.GPR* %11918, i32 0, i32 15
  %11920 = getelementptr inbounds %struct.Reg, %struct.Reg* %11919, i32 0, i32 0
  %RBP.i458 = bitcast %union.anon* %11920 to i64*
  %11921 = load i64, i64* %RBP.i458
  %11922 = sub i64 %11921, 32
  %11923 = load i64, i64* %PC.i456
  %11924 = add i64 %11923, 4
  store i64 %11924, i64* %PC.i456
  %11925 = inttoptr i64 %11922 to i32*
  %11926 = load i32, i32* %11925
  %11927 = sext i32 %11926 to i64
  store i64 %11927, i64* %RDX.i457, align 8
  store %struct.Memory* %loadMem_442044, %struct.Memory** %MEMORY
  %loadMem_442048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11929 = getelementptr inbounds %struct.GPR, %struct.GPR* %11928, i32 0, i32 33
  %11930 = getelementptr inbounds %struct.Reg, %struct.Reg* %11929, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %11930 to i64*
  %11931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11932 = getelementptr inbounds %struct.GPR, %struct.GPR* %11931, i32 0, i32 7
  %11933 = getelementptr inbounds %struct.Reg, %struct.Reg* %11932, i32 0, i32 0
  %RDX.i455 = bitcast %union.anon* %11933 to i64*
  %11934 = load i64, i64* %RDX.i455
  %11935 = load i64, i64* %PC.i454
  %11936 = add i64 %11935, 4
  store i64 %11936, i64* %PC.i454
  %11937 = shl i64 %11934, 5
  %11938 = icmp slt i64 %11937, 0
  %11939 = shl i64 %11937, 1
  store i64 %11939, i64* %RDX.i455, align 8
  %11940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11941 = zext i1 %11938 to i8
  store i8 %11941, i8* %11940, align 1
  %11942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11943 = trunc i64 %11939 to i32
  %11944 = and i32 %11943, 254
  %11945 = call i32 @llvm.ctpop.i32(i32 %11944)
  %11946 = trunc i32 %11945 to i8
  %11947 = and i8 %11946, 1
  %11948 = xor i8 %11947, 1
  store i8 %11948, i8* %11942, align 1
  %11949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11949, align 1
  %11950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11951 = icmp eq i64 %11939, 0
  %11952 = zext i1 %11951 to i8
  store i8 %11952, i8* %11950, align 1
  %11953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11954 = lshr i64 %11939, 63
  %11955 = trunc i64 %11954 to i8
  store i8 %11955, i8* %11953, align 1
  %11956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11956, align 1
  store %struct.Memory* %loadMem_442048, %struct.Memory** %MEMORY
  %loadMem_44204c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11958 = getelementptr inbounds %struct.GPR, %struct.GPR* %11957, i32 0, i32 33
  %11959 = getelementptr inbounds %struct.Reg, %struct.Reg* %11958, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %11959 to i64*
  %11960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11961 = getelementptr inbounds %struct.GPR, %struct.GPR* %11960, i32 0, i32 1
  %11962 = getelementptr inbounds %struct.Reg, %struct.Reg* %11961, i32 0, i32 0
  %RAX.i452 = bitcast %union.anon* %11962 to i64*
  %11963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11964 = getelementptr inbounds %struct.GPR, %struct.GPR* %11963, i32 0, i32 7
  %11965 = getelementptr inbounds %struct.Reg, %struct.Reg* %11964, i32 0, i32 0
  %RDX.i453 = bitcast %union.anon* %11965 to i64*
  %11966 = load i64, i64* %RAX.i452
  %11967 = load i64, i64* %RDX.i453
  %11968 = load i64, i64* %PC.i451
  %11969 = add i64 %11968, 3
  store i64 %11969, i64* %PC.i451
  %11970 = add i64 %11967, %11966
  store i64 %11970, i64* %RAX.i452, align 8
  %11971 = icmp ult i64 %11970, %11966
  %11972 = icmp ult i64 %11970, %11967
  %11973 = or i1 %11971, %11972
  %11974 = zext i1 %11973 to i8
  %11975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11974, i8* %11975, align 1
  %11976 = trunc i64 %11970 to i32
  %11977 = and i32 %11976, 255
  %11978 = call i32 @llvm.ctpop.i32(i32 %11977)
  %11979 = trunc i32 %11978 to i8
  %11980 = and i8 %11979, 1
  %11981 = xor i8 %11980, 1
  %11982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11981, i8* %11982, align 1
  %11983 = xor i64 %11967, %11966
  %11984 = xor i64 %11983, %11970
  %11985 = lshr i64 %11984, 4
  %11986 = trunc i64 %11985 to i8
  %11987 = and i8 %11986, 1
  %11988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11987, i8* %11988, align 1
  %11989 = icmp eq i64 %11970, 0
  %11990 = zext i1 %11989 to i8
  %11991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11990, i8* %11991, align 1
  %11992 = lshr i64 %11970, 63
  %11993 = trunc i64 %11992 to i8
  %11994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11993, i8* %11994, align 1
  %11995 = lshr i64 %11966, 63
  %11996 = lshr i64 %11967, 63
  %11997 = xor i64 %11992, %11995
  %11998 = xor i64 %11992, %11996
  %11999 = add i64 %11997, %11998
  %12000 = icmp eq i64 %11999, 2
  %12001 = zext i1 %12000 to i8
  %12002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12001, i8* %12002, align 1
  store %struct.Memory* %loadMem_44204c, %struct.Memory** %MEMORY
  %loadMem_44204f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12004 = getelementptr inbounds %struct.GPR, %struct.GPR* %12003, i32 0, i32 33
  %12005 = getelementptr inbounds %struct.Reg, %struct.Reg* %12004, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %12005 to i64*
  %12006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12007 = getelementptr inbounds %struct.GPR, %struct.GPR* %12006, i32 0, i32 7
  %12008 = getelementptr inbounds %struct.Reg, %struct.Reg* %12007, i32 0, i32 0
  %RDX.i449 = bitcast %union.anon* %12008 to i64*
  %12009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12010 = getelementptr inbounds %struct.GPR, %struct.GPR* %12009, i32 0, i32 15
  %12011 = getelementptr inbounds %struct.Reg, %struct.Reg* %12010, i32 0, i32 0
  %RBP.i450 = bitcast %union.anon* %12011 to i64*
  %12012 = load i64, i64* %RBP.i450
  %12013 = sub i64 %12012, 28
  %12014 = load i64, i64* %PC.i448
  %12015 = add i64 %12014, 4
  store i64 %12015, i64* %PC.i448
  %12016 = inttoptr i64 %12013 to i32*
  %12017 = load i32, i32* %12016
  %12018 = sext i32 %12017 to i64
  store i64 %12018, i64* %RDX.i449, align 8
  store %struct.Memory* %loadMem_44204f, %struct.Memory** %MEMORY
  %loadMem_442053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12020 = getelementptr inbounds %struct.GPR, %struct.GPR* %12019, i32 0, i32 33
  %12021 = getelementptr inbounds %struct.Reg, %struct.Reg* %12020, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %12021 to i64*
  %12022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12023 = getelementptr inbounds %struct.GPR, %struct.GPR* %12022, i32 0, i32 1
  %12024 = getelementptr inbounds %struct.Reg, %struct.Reg* %12023, i32 0, i32 0
  %RAX.i445 = bitcast %union.anon* %12024 to i64*
  %12025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12026 = getelementptr inbounds %struct.GPR, %struct.GPR* %12025, i32 0, i32 5
  %12027 = getelementptr inbounds %struct.Reg, %struct.Reg* %12026, i32 0, i32 0
  %RCX.i446 = bitcast %union.anon* %12027 to i64*
  %12028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12029 = getelementptr inbounds %struct.GPR, %struct.GPR* %12028, i32 0, i32 7
  %12030 = getelementptr inbounds %struct.Reg, %struct.Reg* %12029, i32 0, i32 0
  %RDX.i447 = bitcast %union.anon* %12030 to i64*
  %12031 = load i64, i64* %RCX.i446
  %12032 = load i64, i64* %RAX.i445
  %12033 = load i64, i64* %RDX.i447
  %12034 = mul i64 %12033, 4
  %12035 = add i64 %12034, %12032
  %12036 = load i64, i64* %PC.i444
  %12037 = add i64 %12036, 3
  store i64 %12037, i64* %PC.i444
  %12038 = trunc i64 %12031 to i32
  %12039 = inttoptr i64 %12035 to i32*
  %12040 = load i32, i32* %12039
  %12041 = add i32 %12040, %12038
  %12042 = zext i32 %12041 to i64
  store i64 %12042, i64* %RCX.i446, align 8
  %12043 = icmp ult i32 %12041, %12038
  %12044 = icmp ult i32 %12041, %12040
  %12045 = or i1 %12043, %12044
  %12046 = zext i1 %12045 to i8
  %12047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12046, i8* %12047, align 1
  %12048 = and i32 %12041, 255
  %12049 = call i32 @llvm.ctpop.i32(i32 %12048)
  %12050 = trunc i32 %12049 to i8
  %12051 = and i8 %12050, 1
  %12052 = xor i8 %12051, 1
  %12053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12052, i8* %12053, align 1
  %12054 = xor i32 %12040, %12038
  %12055 = xor i32 %12054, %12041
  %12056 = lshr i32 %12055, 4
  %12057 = trunc i32 %12056 to i8
  %12058 = and i8 %12057, 1
  %12059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12058, i8* %12059, align 1
  %12060 = icmp eq i32 %12041, 0
  %12061 = zext i1 %12060 to i8
  %12062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12061, i8* %12062, align 1
  %12063 = lshr i32 %12041, 31
  %12064 = trunc i32 %12063 to i8
  %12065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12064, i8* %12065, align 1
  %12066 = lshr i32 %12038, 31
  %12067 = lshr i32 %12040, 31
  %12068 = xor i32 %12063, %12066
  %12069 = xor i32 %12063, %12067
  %12070 = add i32 %12068, %12069
  %12071 = icmp eq i32 %12070, 2
  %12072 = zext i1 %12071 to i8
  %12073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12072, i8* %12073, align 1
  store %struct.Memory* %loadMem_442053, %struct.Memory** %MEMORY
  %loadMem_442056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12075 = getelementptr inbounds %struct.GPR, %struct.GPR* %12074, i32 0, i32 33
  %12076 = getelementptr inbounds %struct.Reg, %struct.Reg* %12075, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %12076 to i64*
  %12077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12078 = getelementptr inbounds %struct.GPR, %struct.GPR* %12077, i32 0, i32 5
  %12079 = getelementptr inbounds %struct.Reg, %struct.Reg* %12078, i32 0, i32 0
  %ECX.i442 = bitcast %union.anon* %12079 to i32*
  %12080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12081 = getelementptr inbounds %struct.GPR, %struct.GPR* %12080, i32 0, i32 15
  %12082 = getelementptr inbounds %struct.Reg, %struct.Reg* %12081, i32 0, i32 0
  %RBP.i443 = bitcast %union.anon* %12082 to i64*
  %12083 = load i64, i64* %RBP.i443
  %12084 = sub i64 %12083, 292
  %12085 = load i32, i32* %ECX.i442
  %12086 = zext i32 %12085 to i64
  %12087 = load i64, i64* %PC.i441
  %12088 = add i64 %12087, 6
  store i64 %12088, i64* %PC.i441
  %12089 = inttoptr i64 %12084 to i32*
  store i32 %12085, i32* %12089
  store %struct.Memory* %loadMem_442056, %struct.Memory** %MEMORY
  br label %block_.L_44205c

block_.L_44205c:                                  ; preds = %block_.L_44202e, %block_442021
  %loadMem_44205c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12091 = getelementptr inbounds %struct.GPR, %struct.GPR* %12090, i32 0, i32 33
  %12092 = getelementptr inbounds %struct.Reg, %struct.Reg* %12091, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %12092 to i64*
  %12093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12094 = getelementptr inbounds %struct.GPR, %struct.GPR* %12093, i32 0, i32 1
  %12095 = getelementptr inbounds %struct.Reg, %struct.Reg* %12094, i32 0, i32 0
  %RAX.i439 = bitcast %union.anon* %12095 to i64*
  %12096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12097 = getelementptr inbounds %struct.GPR, %struct.GPR* %12096, i32 0, i32 15
  %12098 = getelementptr inbounds %struct.Reg, %struct.Reg* %12097, i32 0, i32 0
  %RBP.i440 = bitcast %union.anon* %12098 to i64*
  %12099 = load i64, i64* %RBP.i440
  %12100 = sub i64 %12099, 292
  %12101 = load i64, i64* %PC.i438
  %12102 = add i64 %12101, 6
  store i64 %12102, i64* %PC.i438
  %12103 = inttoptr i64 %12100 to i32*
  %12104 = load i32, i32* %12103
  %12105 = zext i32 %12104 to i64
  store i64 %12105, i64* %RAX.i439, align 8
  store %struct.Memory* %loadMem_44205c, %struct.Memory** %MEMORY
  %loadMem_442062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12107 = getelementptr inbounds %struct.GPR, %struct.GPR* %12106, i32 0, i32 33
  %12108 = getelementptr inbounds %struct.Reg, %struct.Reg* %12107, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %12108 to i64*
  %12109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12110 = getelementptr inbounds %struct.GPR, %struct.GPR* %12109, i32 0, i32 1
  %12111 = getelementptr inbounds %struct.Reg, %struct.Reg* %12110, i32 0, i32 0
  %EAX.i436 = bitcast %union.anon* %12111 to i32*
  %12112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12113 = getelementptr inbounds %struct.GPR, %struct.GPR* %12112, i32 0, i32 15
  %12114 = getelementptr inbounds %struct.Reg, %struct.Reg* %12113, i32 0, i32 0
  %RBP.i437 = bitcast %union.anon* %12114 to i64*
  %12115 = load i64, i64* %RBP.i437
  %12116 = sub i64 %12115, 288
  %12117 = load i32, i32* %EAX.i436
  %12118 = zext i32 %12117 to i64
  %12119 = load i64, i64* %PC.i435
  %12120 = add i64 %12119, 6
  store i64 %12120, i64* %PC.i435
  %12121 = inttoptr i64 %12116 to i32*
  store i32 %12117, i32* %12121
  store %struct.Memory* %loadMem_442062, %struct.Memory** %MEMORY
  br label %block_.L_442068

block_.L_442068:                                  ; preds = %block_.L_44205c, %block_441fd5
  %loadMem_442068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12123 = getelementptr inbounds %struct.GPR, %struct.GPR* %12122, i32 0, i32 33
  %12124 = getelementptr inbounds %struct.Reg, %struct.Reg* %12123, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %12124 to i64*
  %12125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12126 = getelementptr inbounds %struct.GPR, %struct.GPR* %12125, i32 0, i32 1
  %12127 = getelementptr inbounds %struct.Reg, %struct.Reg* %12126, i32 0, i32 0
  %RAX.i433 = bitcast %union.anon* %12127 to i64*
  %12128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12129 = getelementptr inbounds %struct.GPR, %struct.GPR* %12128, i32 0, i32 15
  %12130 = getelementptr inbounds %struct.Reg, %struct.Reg* %12129, i32 0, i32 0
  %RBP.i434 = bitcast %union.anon* %12130 to i64*
  %12131 = load i64, i64* %RBP.i434
  %12132 = sub i64 %12131, 288
  %12133 = load i64, i64* %PC.i432
  %12134 = add i64 %12133, 6
  store i64 %12134, i64* %PC.i432
  %12135 = inttoptr i64 %12132 to i32*
  %12136 = load i32, i32* %12135
  %12137 = zext i32 %12136 to i64
  store i64 %12137, i64* %RAX.i433, align 8
  store %struct.Memory* %loadMem_442068, %struct.Memory** %MEMORY
  %loadMem_44206e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12139 = getelementptr inbounds %struct.GPR, %struct.GPR* %12138, i32 0, i32 33
  %12140 = getelementptr inbounds %struct.Reg, %struct.Reg* %12139, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %12140 to i64*
  %12141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12142 = getelementptr inbounds %struct.GPR, %struct.GPR* %12141, i32 0, i32 5
  %12143 = getelementptr inbounds %struct.Reg, %struct.Reg* %12142, i32 0, i32 0
  %ECX.i430 = bitcast %union.anon* %12143 to i32*
  %12144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12145 = getelementptr inbounds %struct.GPR, %struct.GPR* %12144, i32 0, i32 5
  %12146 = getelementptr inbounds %struct.Reg, %struct.Reg* %12145, i32 0, i32 0
  %RCX.i431 = bitcast %union.anon* %12146 to i64*
  %12147 = load i64, i64* %RCX.i431
  %12148 = load i32, i32* %ECX.i430
  %12149 = zext i32 %12148 to i64
  %12150 = load i64, i64* %PC.i429
  %12151 = add i64 %12150, 2
  store i64 %12151, i64* %PC.i429
  %12152 = xor i64 %12149, %12147
  %12153 = trunc i64 %12152 to i32
  %12154 = and i64 %12152, 4294967295
  store i64 %12154, i64* %RCX.i431, align 8
  %12155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12155, align 1
  %12156 = and i32 %12153, 255
  %12157 = call i32 @llvm.ctpop.i32(i32 %12156)
  %12158 = trunc i32 %12157 to i8
  %12159 = and i8 %12158, 1
  %12160 = xor i8 %12159, 1
  %12161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12160, i8* %12161, align 1
  %12162 = icmp eq i32 %12153, 0
  %12163 = zext i1 %12162 to i8
  %12164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12163, i8* %12164, align 1
  %12165 = lshr i32 %12153, 31
  %12166 = trunc i32 %12165 to i8
  %12167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12166, i8* %12167, align 1
  %12168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12168, align 1
  %12169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12169, align 1
  store %struct.Memory* %loadMem_44206e, %struct.Memory** %MEMORY
  %loadMem_442070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12171 = getelementptr inbounds %struct.GPR, %struct.GPR* %12170, i32 0, i32 33
  %12172 = getelementptr inbounds %struct.Reg, %struct.Reg* %12171, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %12172 to i64*
  %12173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12174 = getelementptr inbounds %struct.GPR, %struct.GPR* %12173, i32 0, i32 7
  %12175 = getelementptr inbounds %struct.Reg, %struct.Reg* %12174, i32 0, i32 0
  %RDX.i428 = bitcast %union.anon* %12175 to i64*
  %12176 = load i64, i64* %PC.i427
  %12177 = add i64 %12176, 10
  store i64 %12177, i64* %PC.i427
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RDX.i428, align 8
  store %struct.Memory* %loadMem_442070, %struct.Memory** %MEMORY
  %loadMem_44207a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12179 = getelementptr inbounds %struct.GPR, %struct.GPR* %12178, i32 0, i32 33
  %12180 = getelementptr inbounds %struct.Reg, %struct.Reg* %12179, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %12180 to i64*
  %12181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12182 = getelementptr inbounds %struct.GPR, %struct.GPR* %12181, i32 0, i32 1
  %12183 = getelementptr inbounds %struct.Reg, %struct.Reg* %12182, i32 0, i32 0
  %AX.i425 = bitcast %union.anon* %12183 to i16*
  %12184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12185 = getelementptr inbounds %struct.GPR, %struct.GPR* %12184, i32 0, i32 9
  %12186 = getelementptr inbounds %struct.Reg, %struct.Reg* %12185, i32 0, i32 0
  %SI.i426 = bitcast %union.anon* %12186 to i16*
  %12187 = load i16, i16* %AX.i425
  %12188 = zext i16 %12187 to i64
  %12189 = load i64, i64* %PC.i424
  %12190 = add i64 %12189, 3
  store i64 %12190, i64* %PC.i424
  store i16 %12187, i16* %SI.i426, align 2
  store %struct.Memory* %loadMem_44207a, %struct.Memory** %MEMORY
  %loadMem_44207d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12192 = getelementptr inbounds %struct.GPR, %struct.GPR* %12191, i32 0, i32 33
  %12193 = getelementptr inbounds %struct.Reg, %struct.Reg* %12192, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %12193 to i64*
  %12194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12195 = getelementptr inbounds %struct.GPR, %struct.GPR* %12194, i32 0, i32 11
  %12196 = getelementptr inbounds %struct.Reg, %struct.Reg* %12195, i32 0, i32 0
  %RDI.i423 = bitcast %union.anon* %12196 to i64*
  %12197 = load i64, i64* %PC.i422
  %12198 = add i64 %12197, 8
  store i64 %12198, i64* %PC.i422
  %12199 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %12199, i64* %RDI.i423, align 8
  store %struct.Memory* %loadMem_44207d, %struct.Memory** %MEMORY
  %loadMem_442085 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12201 = getelementptr inbounds %struct.GPR, %struct.GPR* %12200, i32 0, i32 33
  %12202 = getelementptr inbounds %struct.Reg, %struct.Reg* %12201, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %12202 to i64*
  %12203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12204 = getelementptr inbounds %struct.GPR, %struct.GPR* %12203, i32 0, i32 11
  %12205 = getelementptr inbounds %struct.Reg, %struct.Reg* %12204, i32 0, i32 0
  %RDI.i421 = bitcast %union.anon* %12205 to i64*
  %12206 = load i64, i64* %RDI.i421
  %12207 = add i64 %12206, 6464
  %12208 = load i64, i64* %PC.i420
  %12209 = add i64 %12208, 7
  store i64 %12209, i64* %PC.i420
  %12210 = inttoptr i64 %12207 to i64*
  %12211 = load i64, i64* %12210
  store i64 %12211, i64* %RDI.i421, align 8
  store %struct.Memory* %loadMem_442085, %struct.Memory** %MEMORY
  %loadMem_44208c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12213 = getelementptr inbounds %struct.GPR, %struct.GPR* %12212, i32 0, i32 33
  %12214 = getelementptr inbounds %struct.Reg, %struct.Reg* %12213, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %12214 to i64*
  %12215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12216 = getelementptr inbounds %struct.GPR, %struct.GPR* %12215, i32 0, i32 11
  %12217 = getelementptr inbounds %struct.Reg, %struct.Reg* %12216, i32 0, i32 0
  %RDI.i419 = bitcast %union.anon* %12217 to i64*
  %12218 = load i64, i64* %RDI.i419
  %12219 = load i64, i64* %PC.i418
  %12220 = add i64 %12219, 3
  store i64 %12220, i64* %PC.i418
  %12221 = inttoptr i64 %12218 to i64*
  %12222 = load i64, i64* %12221
  store i64 %12222, i64* %RDI.i419, align 8
  store %struct.Memory* %loadMem_44208c, %struct.Memory** %MEMORY
  %loadMem_44208f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12224 = getelementptr inbounds %struct.GPR, %struct.GPR* %12223, i32 0, i32 33
  %12225 = getelementptr inbounds %struct.Reg, %struct.Reg* %12224, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %12225 to i64*
  %12226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12227 = getelementptr inbounds %struct.GPR, %struct.GPR* %12226, i32 0, i32 17
  %12228 = getelementptr inbounds %struct.Reg, %struct.Reg* %12227, i32 0, i32 0
  %R8.i417 = bitcast %union.anon* %12228 to i64*
  %12229 = load i64, i64* %PC.i416
  %12230 = add i64 %12229, 8
  store i64 %12230, i64* %PC.i416
  %12231 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12231, i64* %R8.i417, align 8
  store %struct.Memory* %loadMem_44208f, %struct.Memory** %MEMORY
  %loadMem_442097 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12233 = getelementptr inbounds %struct.GPR, %struct.GPR* %12232, i32 0, i32 33
  %12234 = getelementptr inbounds %struct.Reg, %struct.Reg* %12233, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %12234 to i64*
  %12235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12236 = getelementptr inbounds %struct.GPR, %struct.GPR* %12235, i32 0, i32 1
  %12237 = getelementptr inbounds %struct.Reg, %struct.Reg* %12236, i32 0, i32 0
  %RAX.i414 = bitcast %union.anon* %12237 to i64*
  %12238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12239 = getelementptr inbounds %struct.GPR, %struct.GPR* %12238, i32 0, i32 17
  %12240 = getelementptr inbounds %struct.Reg, %struct.Reg* %12239, i32 0, i32 0
  %R8.i415 = bitcast %union.anon* %12240 to i64*
  %12241 = load i64, i64* %R8.i415
  %12242 = add i64 %12241, 156
  %12243 = load i64, i64* %PC.i413
  %12244 = add i64 %12243, 7
  store i64 %12244, i64* %PC.i413
  %12245 = inttoptr i64 %12242 to i32*
  %12246 = load i32, i32* %12245
  %12247 = zext i32 %12246 to i64
  store i64 %12247, i64* %RAX.i414, align 8
  store %struct.Memory* %loadMem_442097, %struct.Memory** %MEMORY
  %loadMem_44209e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12249 = getelementptr inbounds %struct.GPR, %struct.GPR* %12248, i32 0, i32 33
  %12250 = getelementptr inbounds %struct.Reg, %struct.Reg* %12249, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %12250 to i64*
  %12251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12252 = getelementptr inbounds %struct.GPR, %struct.GPR* %12251, i32 0, i32 1
  %12253 = getelementptr inbounds %struct.Reg, %struct.Reg* %12252, i32 0, i32 0
  %RAX.i411 = bitcast %union.anon* %12253 to i64*
  %12254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12255 = getelementptr inbounds %struct.GPR, %struct.GPR* %12254, i32 0, i32 15
  %12256 = getelementptr inbounds %struct.Reg, %struct.Reg* %12255, i32 0, i32 0
  %RBP.i412 = bitcast %union.anon* %12256 to i64*
  %12257 = load i64, i64* %RAX.i411
  %12258 = load i64, i64* %RBP.i412
  %12259 = sub i64 %12258, 28
  %12260 = load i64, i64* %PC.i410
  %12261 = add i64 %12260, 3
  store i64 %12261, i64* %PC.i410
  %12262 = trunc i64 %12257 to i32
  %12263 = inttoptr i64 %12259 to i32*
  %12264 = load i32, i32* %12263
  %12265 = add i32 %12264, %12262
  %12266 = zext i32 %12265 to i64
  store i64 %12266, i64* %RAX.i411, align 8
  %12267 = icmp ult i32 %12265, %12262
  %12268 = icmp ult i32 %12265, %12264
  %12269 = or i1 %12267, %12268
  %12270 = zext i1 %12269 to i8
  %12271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12270, i8* %12271, align 1
  %12272 = and i32 %12265, 255
  %12273 = call i32 @llvm.ctpop.i32(i32 %12272)
  %12274 = trunc i32 %12273 to i8
  %12275 = and i8 %12274, 1
  %12276 = xor i8 %12275, 1
  %12277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12276, i8* %12277, align 1
  %12278 = xor i32 %12264, %12262
  %12279 = xor i32 %12278, %12265
  %12280 = lshr i32 %12279, 4
  %12281 = trunc i32 %12280 to i8
  %12282 = and i8 %12281, 1
  %12283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12282, i8* %12283, align 1
  %12284 = icmp eq i32 %12265, 0
  %12285 = zext i1 %12284 to i8
  %12286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12285, i8* %12286, align 1
  %12287 = lshr i32 %12265, 31
  %12288 = trunc i32 %12287 to i8
  %12289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12288, i8* %12289, align 1
  %12290 = lshr i32 %12262, 31
  %12291 = lshr i32 %12264, 31
  %12292 = xor i32 %12287, %12290
  %12293 = xor i32 %12287, %12291
  %12294 = add i32 %12292, %12293
  %12295 = icmp eq i32 %12294, 2
  %12296 = zext i1 %12295 to i8
  %12297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12296, i8* %12297, align 1
  store %struct.Memory* %loadMem_44209e, %struct.Memory** %MEMORY
  %loadMem_4420a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12299 = getelementptr inbounds %struct.GPR, %struct.GPR* %12298, i32 0, i32 33
  %12300 = getelementptr inbounds %struct.Reg, %struct.Reg* %12299, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %12300 to i64*
  %12301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12302 = getelementptr inbounds %struct.GPR, %struct.GPR* %12301, i32 0, i32 1
  %12303 = getelementptr inbounds %struct.Reg, %struct.Reg* %12302, i32 0, i32 0
  %EAX.i408 = bitcast %union.anon* %12303 to i32*
  %12304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12305 = getelementptr inbounds %struct.GPR, %struct.GPR* %12304, i32 0, i32 17
  %12306 = getelementptr inbounds %struct.Reg, %struct.Reg* %12305, i32 0, i32 0
  %R8.i409 = bitcast %union.anon* %12306 to i64*
  %12307 = load i32, i32* %EAX.i408
  %12308 = zext i32 %12307 to i64
  %12309 = load i64, i64* %PC.i407
  %12310 = add i64 %12309, 3
  store i64 %12310, i64* %PC.i407
  %12311 = shl i64 %12308, 32
  %12312 = ashr exact i64 %12311, 32
  store i64 %12312, i64* %R8.i409, align 8
  store %struct.Memory* %loadMem_4420a1, %struct.Memory** %MEMORY
  %loadMem_4420a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12314 = getelementptr inbounds %struct.GPR, %struct.GPR* %12313, i32 0, i32 33
  %12315 = getelementptr inbounds %struct.Reg, %struct.Reg* %12314, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %12315 to i64*
  %12316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12317 = getelementptr inbounds %struct.GPR, %struct.GPR* %12316, i32 0, i32 11
  %12318 = getelementptr inbounds %struct.Reg, %struct.Reg* %12317, i32 0, i32 0
  %RDI.i405 = bitcast %union.anon* %12318 to i64*
  %12319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12320 = getelementptr inbounds %struct.GPR, %struct.GPR* %12319, i32 0, i32 17
  %12321 = getelementptr inbounds %struct.Reg, %struct.Reg* %12320, i32 0, i32 0
  %R8.i406 = bitcast %union.anon* %12321 to i64*
  %12322 = load i64, i64* %RDI.i405
  %12323 = load i64, i64* %R8.i406
  %12324 = mul i64 %12323, 8
  %12325 = add i64 %12324, %12322
  %12326 = load i64, i64* %PC.i404
  %12327 = add i64 %12326, 4
  store i64 %12327, i64* %PC.i404
  %12328 = inttoptr i64 %12325 to i64*
  %12329 = load i64, i64* %12328
  store i64 %12329, i64* %RDI.i405, align 8
  store %struct.Memory* %loadMem_4420a4, %struct.Memory** %MEMORY
  %loadMem_4420a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12331 = getelementptr inbounds %struct.GPR, %struct.GPR* %12330, i32 0, i32 33
  %12332 = getelementptr inbounds %struct.Reg, %struct.Reg* %12331, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %12332 to i64*
  %12333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12334 = getelementptr inbounds %struct.GPR, %struct.GPR* %12333, i32 0, i32 17
  %12335 = getelementptr inbounds %struct.Reg, %struct.Reg* %12334, i32 0, i32 0
  %R8.i403 = bitcast %union.anon* %12335 to i64*
  %12336 = load i64, i64* %PC.i402
  %12337 = add i64 %12336, 8
  store i64 %12337, i64* %PC.i402
  %12338 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12338, i64* %R8.i403, align 8
  store %struct.Memory* %loadMem_4420a8, %struct.Memory** %MEMORY
  %loadMem_4420b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12340 = getelementptr inbounds %struct.GPR, %struct.GPR* %12339, i32 0, i32 33
  %12341 = getelementptr inbounds %struct.Reg, %struct.Reg* %12340, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %12341 to i64*
  %12342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12343 = getelementptr inbounds %struct.GPR, %struct.GPR* %12342, i32 0, i32 1
  %12344 = getelementptr inbounds %struct.Reg, %struct.Reg* %12343, i32 0, i32 0
  %RAX.i400 = bitcast %union.anon* %12344 to i64*
  %12345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12346 = getelementptr inbounds %struct.GPR, %struct.GPR* %12345, i32 0, i32 17
  %12347 = getelementptr inbounds %struct.Reg, %struct.Reg* %12346, i32 0, i32 0
  %R8.i401 = bitcast %union.anon* %12347 to i64*
  %12348 = load i64, i64* %R8.i401
  %12349 = add i64 %12348, 152
  %12350 = load i64, i64* %PC.i399
  %12351 = add i64 %12350, 7
  store i64 %12351, i64* %PC.i399
  %12352 = inttoptr i64 %12349 to i32*
  %12353 = load i32, i32* %12352
  %12354 = zext i32 %12353 to i64
  store i64 %12354, i64* %RAX.i400, align 8
  store %struct.Memory* %loadMem_4420b0, %struct.Memory** %MEMORY
  %loadMem_4420b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12356 = getelementptr inbounds %struct.GPR, %struct.GPR* %12355, i32 0, i32 33
  %12357 = getelementptr inbounds %struct.Reg, %struct.Reg* %12356, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %12357 to i64*
  %12358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12359 = getelementptr inbounds %struct.GPR, %struct.GPR* %12358, i32 0, i32 1
  %12360 = getelementptr inbounds %struct.Reg, %struct.Reg* %12359, i32 0, i32 0
  %RAX.i397 = bitcast %union.anon* %12360 to i64*
  %12361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12362 = getelementptr inbounds %struct.GPR, %struct.GPR* %12361, i32 0, i32 15
  %12363 = getelementptr inbounds %struct.Reg, %struct.Reg* %12362, i32 0, i32 0
  %RBP.i398 = bitcast %union.anon* %12363 to i64*
  %12364 = load i64, i64* %RAX.i397
  %12365 = load i64, i64* %RBP.i398
  %12366 = sub i64 %12365, 32
  %12367 = load i64, i64* %PC.i396
  %12368 = add i64 %12367, 3
  store i64 %12368, i64* %PC.i396
  %12369 = trunc i64 %12364 to i32
  %12370 = inttoptr i64 %12366 to i32*
  %12371 = load i32, i32* %12370
  %12372 = add i32 %12371, %12369
  %12373 = zext i32 %12372 to i64
  store i64 %12373, i64* %RAX.i397, align 8
  %12374 = icmp ult i32 %12372, %12369
  %12375 = icmp ult i32 %12372, %12371
  %12376 = or i1 %12374, %12375
  %12377 = zext i1 %12376 to i8
  %12378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12377, i8* %12378, align 1
  %12379 = and i32 %12372, 255
  %12380 = call i32 @llvm.ctpop.i32(i32 %12379)
  %12381 = trunc i32 %12380 to i8
  %12382 = and i8 %12381, 1
  %12383 = xor i8 %12382, 1
  %12384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12383, i8* %12384, align 1
  %12385 = xor i32 %12371, %12369
  %12386 = xor i32 %12385, %12372
  %12387 = lshr i32 %12386, 4
  %12388 = trunc i32 %12387 to i8
  %12389 = and i8 %12388, 1
  %12390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12389, i8* %12390, align 1
  %12391 = icmp eq i32 %12372, 0
  %12392 = zext i1 %12391 to i8
  %12393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12392, i8* %12393, align 1
  %12394 = lshr i32 %12372, 31
  %12395 = trunc i32 %12394 to i8
  %12396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12395, i8* %12396, align 1
  %12397 = lshr i32 %12369, 31
  %12398 = lshr i32 %12371, 31
  %12399 = xor i32 %12394, %12397
  %12400 = xor i32 %12394, %12398
  %12401 = add i32 %12399, %12400
  %12402 = icmp eq i32 %12401, 2
  %12403 = zext i1 %12402 to i8
  %12404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12403, i8* %12404, align 1
  store %struct.Memory* %loadMem_4420b7, %struct.Memory** %MEMORY
  %loadMem_4420ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %12405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12406 = getelementptr inbounds %struct.GPR, %struct.GPR* %12405, i32 0, i32 33
  %12407 = getelementptr inbounds %struct.Reg, %struct.Reg* %12406, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %12407 to i64*
  %12408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12409 = getelementptr inbounds %struct.GPR, %struct.GPR* %12408, i32 0, i32 1
  %12410 = getelementptr inbounds %struct.Reg, %struct.Reg* %12409, i32 0, i32 0
  %EAX.i394 = bitcast %union.anon* %12410 to i32*
  %12411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12412 = getelementptr inbounds %struct.GPR, %struct.GPR* %12411, i32 0, i32 17
  %12413 = getelementptr inbounds %struct.Reg, %struct.Reg* %12412, i32 0, i32 0
  %R8.i395 = bitcast %union.anon* %12413 to i64*
  %12414 = load i32, i32* %EAX.i394
  %12415 = zext i32 %12414 to i64
  %12416 = load i64, i64* %PC.i393
  %12417 = add i64 %12416, 3
  store i64 %12417, i64* %PC.i393
  %12418 = shl i64 %12415, 32
  %12419 = ashr exact i64 %12418, 32
  store i64 %12419, i64* %R8.i395, align 8
  store %struct.Memory* %loadMem_4420ba, %struct.Memory** %MEMORY
  %loadMem_4420bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12421 = getelementptr inbounds %struct.GPR, %struct.GPR* %12420, i32 0, i32 33
  %12422 = getelementptr inbounds %struct.Reg, %struct.Reg* %12421, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %12422 to i64*
  %12423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12424 = getelementptr inbounds %struct.GPR, %struct.GPR* %12423, i32 0, i32 9
  %12425 = getelementptr inbounds %struct.Reg, %struct.Reg* %12424, i32 0, i32 0
  %SI.i390 = bitcast %union.anon* %12425 to i16*
  %12426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12427 = getelementptr inbounds %struct.GPR, %struct.GPR* %12426, i32 0, i32 11
  %12428 = getelementptr inbounds %struct.Reg, %struct.Reg* %12427, i32 0, i32 0
  %RDI.i391 = bitcast %union.anon* %12428 to i64*
  %12429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12430 = getelementptr inbounds %struct.GPR, %struct.GPR* %12429, i32 0, i32 17
  %12431 = getelementptr inbounds %struct.Reg, %struct.Reg* %12430, i32 0, i32 0
  %R8.i392 = bitcast %union.anon* %12431 to i64*
  %12432 = load i64, i64* %RDI.i391
  %12433 = load i64, i64* %R8.i392
  %12434 = mul i64 %12433, 2
  %12435 = add i64 %12434, %12432
  %12436 = load i16, i16* %SI.i390
  %12437 = zext i16 %12436 to i64
  %12438 = load i64, i64* %PC.i389
  %12439 = add i64 %12438, 5
  store i64 %12439, i64* %PC.i389
  %12440 = inttoptr i64 %12435 to i16*
  store i16 %12436, i16* %12440
  store %struct.Memory* %loadMem_4420bd, %struct.Memory** %MEMORY
  %loadMem_4420c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12442 = getelementptr inbounds %struct.GPR, %struct.GPR* %12441, i32 0, i32 33
  %12443 = getelementptr inbounds %struct.Reg, %struct.Reg* %12442, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %12443 to i64*
  %12444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12445 = getelementptr inbounds %struct.GPR, %struct.GPR* %12444, i32 0, i32 11
  %12446 = getelementptr inbounds %struct.Reg, %struct.Reg* %12445, i32 0, i32 0
  %RDI.i388 = bitcast %union.anon* %12446 to i64*
  %12447 = load i64, i64* %PC.i387
  %12448 = add i64 %12447, 8
  store i64 %12448, i64* %PC.i387
  %12449 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12449, i64* %RDI.i388, align 8
  store %struct.Memory* %loadMem_4420c2, %struct.Memory** %MEMORY
  %loadMem_4420ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %12450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12451 = getelementptr inbounds %struct.GPR, %struct.GPR* %12450, i32 0, i32 33
  %12452 = getelementptr inbounds %struct.Reg, %struct.Reg* %12451, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %12452 to i64*
  %12453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12454 = getelementptr inbounds %struct.GPR, %struct.GPR* %12453, i32 0, i32 1
  %12455 = getelementptr inbounds %struct.Reg, %struct.Reg* %12454, i32 0, i32 0
  %RAX.i385 = bitcast %union.anon* %12455 to i64*
  %12456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12457 = getelementptr inbounds %struct.GPR, %struct.GPR* %12456, i32 0, i32 11
  %12458 = getelementptr inbounds %struct.Reg, %struct.Reg* %12457, i32 0, i32 0
  %RDI.i386 = bitcast %union.anon* %12458 to i64*
  %12459 = load i64, i64* %RDI.i386
  %12460 = add i64 %12459, 72684
  %12461 = load i64, i64* %PC.i384
  %12462 = add i64 %12461, 6
  store i64 %12462, i64* %PC.i384
  %12463 = inttoptr i64 %12460 to i32*
  %12464 = load i32, i32* %12463
  %12465 = zext i32 %12464 to i64
  store i64 %12465, i64* %RAX.i385, align 8
  store %struct.Memory* %loadMem_4420ca, %struct.Memory** %MEMORY
  %loadMem_4420d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12467 = getelementptr inbounds %struct.GPR, %struct.GPR* %12466, i32 0, i32 33
  %12468 = getelementptr inbounds %struct.Reg, %struct.Reg* %12467, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %12468 to i64*
  %12469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12470 = getelementptr inbounds %struct.GPR, %struct.GPR* %12469, i32 0, i32 19
  %12471 = getelementptr inbounds %struct.Reg, %struct.Reg* %12470, i32 0, i32 0
  %R9D.i382 = bitcast %union.anon* %12471 to i32*
  %12472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12473 = getelementptr inbounds %struct.GPR, %struct.GPR* %12472, i32 0, i32 15
  %12474 = getelementptr inbounds %struct.Reg, %struct.Reg* %12473, i32 0, i32 0
  %RBP.i383 = bitcast %union.anon* %12474 to i64*
  %12475 = bitcast i32* %R9D.i382 to i64*
  %12476 = load i64, i64* %RBP.i383
  %12477 = sub i64 %12476, 264
  %12478 = load i64, i64* %PC.i381
  %12479 = add i64 %12478, 7
  store i64 %12479, i64* %PC.i381
  %12480 = inttoptr i64 %12477 to i32*
  %12481 = load i32, i32* %12480
  %12482 = zext i32 %12481 to i64
  store i64 %12482, i64* %12475, align 8
  store %struct.Memory* %loadMem_4420d0, %struct.Memory** %MEMORY
  %loadMem_4420d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12484 = getelementptr inbounds %struct.GPR, %struct.GPR* %12483, i32 0, i32 33
  %12485 = getelementptr inbounds %struct.Reg, %struct.Reg* %12484, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %12485 to i64*
  %12486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12487 = getelementptr inbounds %struct.GPR, %struct.GPR* %12486, i32 0, i32 11
  %12488 = getelementptr inbounds %struct.Reg, %struct.Reg* %12487, i32 0, i32 0
  %RDI.i379 = bitcast %union.anon* %12488 to i64*
  %12489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12490 = getelementptr inbounds %struct.GPR, %struct.GPR* %12489, i32 0, i32 15
  %12491 = getelementptr inbounds %struct.Reg, %struct.Reg* %12490, i32 0, i32 0
  %RBP.i380 = bitcast %union.anon* %12491 to i64*
  %12492 = load i64, i64* %RBP.i380
  %12493 = sub i64 %12492, 32
  %12494 = load i64, i64* %PC.i378
  %12495 = add i64 %12494, 4
  store i64 %12495, i64* %PC.i378
  %12496 = inttoptr i64 %12493 to i32*
  %12497 = load i32, i32* %12496
  %12498 = sext i32 %12497 to i64
  store i64 %12498, i64* %RDI.i379, align 8
  store %struct.Memory* %loadMem_4420d7, %struct.Memory** %MEMORY
  %loadMem_4420db = load %struct.Memory*, %struct.Memory** %MEMORY
  %12499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12500 = getelementptr inbounds %struct.GPR, %struct.GPR* %12499, i32 0, i32 33
  %12501 = getelementptr inbounds %struct.Reg, %struct.Reg* %12500, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %12501 to i64*
  %12502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12503 = getelementptr inbounds %struct.GPR, %struct.GPR* %12502, i32 0, i32 11
  %12504 = getelementptr inbounds %struct.Reg, %struct.Reg* %12503, i32 0, i32 0
  %RDI.i377 = bitcast %union.anon* %12504 to i64*
  %12505 = load i64, i64* %RDI.i377
  %12506 = load i64, i64* %PC.i376
  %12507 = add i64 %12506, 4
  store i64 %12507, i64* %PC.i376
  %12508 = shl i64 %12505, 5
  %12509 = icmp slt i64 %12508, 0
  %12510 = shl i64 %12508, 1
  store i64 %12510, i64* %RDI.i377, align 8
  %12511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12512 = zext i1 %12509 to i8
  store i8 %12512, i8* %12511, align 1
  %12513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12514 = trunc i64 %12510 to i32
  %12515 = and i32 %12514, 254
  %12516 = call i32 @llvm.ctpop.i32(i32 %12515)
  %12517 = trunc i32 %12516 to i8
  %12518 = and i8 %12517, 1
  %12519 = xor i8 %12518, 1
  store i8 %12519, i8* %12513, align 1
  %12520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12520, align 1
  %12521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12522 = icmp eq i64 %12510, 0
  %12523 = zext i1 %12522 to i8
  store i8 %12523, i8* %12521, align 1
  %12524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12525 = lshr i64 %12510, 63
  %12526 = trunc i64 %12525 to i8
  store i8 %12526, i8* %12524, align 1
  %12527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12527, align 1
  store %struct.Memory* %loadMem_4420db, %struct.Memory** %MEMORY
  %loadMem_4420df = load %struct.Memory*, %struct.Memory** %MEMORY
  %12528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12529 = getelementptr inbounds %struct.GPR, %struct.GPR* %12528, i32 0, i32 33
  %12530 = getelementptr inbounds %struct.Reg, %struct.Reg* %12529, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %12530 to i64*
  %12531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12532 = getelementptr inbounds %struct.GPR, %struct.GPR* %12531, i32 0, i32 7
  %12533 = getelementptr inbounds %struct.Reg, %struct.Reg* %12532, i32 0, i32 0
  %RDX.i374 = bitcast %union.anon* %12533 to i64*
  %12534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12535 = getelementptr inbounds %struct.GPR, %struct.GPR* %12534, i32 0, i32 11
  %12536 = getelementptr inbounds %struct.Reg, %struct.Reg* %12535, i32 0, i32 0
  %RDI.i375 = bitcast %union.anon* %12536 to i64*
  %12537 = load i64, i64* %RDX.i374
  %12538 = load i64, i64* %RDI.i375
  %12539 = load i64, i64* %PC.i373
  %12540 = add i64 %12539, 3
  store i64 %12540, i64* %PC.i373
  %12541 = add i64 %12538, %12537
  store i64 %12541, i64* %RDX.i374, align 8
  %12542 = icmp ult i64 %12541, %12537
  %12543 = icmp ult i64 %12541, %12538
  %12544 = or i1 %12542, %12543
  %12545 = zext i1 %12544 to i8
  %12546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12545, i8* %12546, align 1
  %12547 = trunc i64 %12541 to i32
  %12548 = and i32 %12547, 255
  %12549 = call i32 @llvm.ctpop.i32(i32 %12548)
  %12550 = trunc i32 %12549 to i8
  %12551 = and i8 %12550, 1
  %12552 = xor i8 %12551, 1
  %12553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12552, i8* %12553, align 1
  %12554 = xor i64 %12538, %12537
  %12555 = xor i64 %12554, %12541
  %12556 = lshr i64 %12555, 4
  %12557 = trunc i64 %12556 to i8
  %12558 = and i8 %12557, 1
  %12559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12558, i8* %12559, align 1
  %12560 = icmp eq i64 %12541, 0
  %12561 = zext i1 %12560 to i8
  %12562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12561, i8* %12562, align 1
  %12563 = lshr i64 %12541, 63
  %12564 = trunc i64 %12563 to i8
  %12565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12564, i8* %12565, align 1
  %12566 = lshr i64 %12537, 63
  %12567 = lshr i64 %12538, 63
  %12568 = xor i64 %12563, %12566
  %12569 = xor i64 %12563, %12567
  %12570 = add i64 %12568, %12569
  %12571 = icmp eq i64 %12570, 2
  %12572 = zext i1 %12571 to i8
  %12573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12572, i8* %12573, align 1
  store %struct.Memory* %loadMem_4420df, %struct.Memory** %MEMORY
  %loadMem_4420e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12575 = getelementptr inbounds %struct.GPR, %struct.GPR* %12574, i32 0, i32 33
  %12576 = getelementptr inbounds %struct.Reg, %struct.Reg* %12575, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %12576 to i64*
  %12577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12578 = getelementptr inbounds %struct.GPR, %struct.GPR* %12577, i32 0, i32 11
  %12579 = getelementptr inbounds %struct.Reg, %struct.Reg* %12578, i32 0, i32 0
  %RDI.i371 = bitcast %union.anon* %12579 to i64*
  %12580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12581 = getelementptr inbounds %struct.GPR, %struct.GPR* %12580, i32 0, i32 15
  %12582 = getelementptr inbounds %struct.Reg, %struct.Reg* %12581, i32 0, i32 0
  %RBP.i372 = bitcast %union.anon* %12582 to i64*
  %12583 = load i64, i64* %RBP.i372
  %12584 = sub i64 %12583, 28
  %12585 = load i64, i64* %PC.i370
  %12586 = add i64 %12585, 4
  store i64 %12586, i64* %PC.i370
  %12587 = inttoptr i64 %12584 to i32*
  %12588 = load i32, i32* %12587
  %12589 = sext i32 %12588 to i64
  store i64 %12589, i64* %RDI.i371, align 8
  store %struct.Memory* %loadMem_4420e2, %struct.Memory** %MEMORY
  %loadMem_4420e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12591 = getelementptr inbounds %struct.GPR, %struct.GPR* %12590, i32 0, i32 33
  %12592 = getelementptr inbounds %struct.Reg, %struct.Reg* %12591, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %12592 to i64*
  %12593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12594 = getelementptr inbounds %struct.GPR, %struct.GPR* %12593, i32 0, i32 19
  %12595 = getelementptr inbounds %struct.Reg, %struct.Reg* %12594, i32 0, i32 0
  %R9D.i367 = bitcast %union.anon* %12595 to i32*
  %12596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12597 = getelementptr inbounds %struct.GPR, %struct.GPR* %12596, i32 0, i32 7
  %12598 = getelementptr inbounds %struct.Reg, %struct.Reg* %12597, i32 0, i32 0
  %RDX.i368 = bitcast %union.anon* %12598 to i64*
  %12599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12600 = getelementptr inbounds %struct.GPR, %struct.GPR* %12599, i32 0, i32 11
  %12601 = getelementptr inbounds %struct.Reg, %struct.Reg* %12600, i32 0, i32 0
  %RDI.i369 = bitcast %union.anon* %12601 to i64*
  %12602 = bitcast i32* %R9D.i367 to i64*
  %12603 = load i32, i32* %R9D.i367
  %12604 = zext i32 %12603 to i64
  %12605 = load i64, i64* %RDX.i368
  %12606 = load i64, i64* %RDI.i369
  %12607 = mul i64 %12606, 4
  %12608 = add i64 %12607, %12605
  %12609 = load i64, i64* %PC.i366
  %12610 = add i64 %12609, 4
  store i64 %12610, i64* %PC.i366
  %12611 = inttoptr i64 %12608 to i32*
  %12612 = load i32, i32* %12611
  %12613 = add i32 %12612, %12603
  %12614 = zext i32 %12613 to i64
  store i64 %12614, i64* %12602, align 8
  %12615 = icmp ult i32 %12613, %12603
  %12616 = icmp ult i32 %12613, %12612
  %12617 = or i1 %12615, %12616
  %12618 = zext i1 %12617 to i8
  %12619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12618, i8* %12619, align 1
  %12620 = and i32 %12613, 255
  %12621 = call i32 @llvm.ctpop.i32(i32 %12620)
  %12622 = trunc i32 %12621 to i8
  %12623 = and i8 %12622, 1
  %12624 = xor i8 %12623, 1
  %12625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12624, i8* %12625, align 1
  %12626 = xor i32 %12612, %12603
  %12627 = xor i32 %12626, %12613
  %12628 = lshr i32 %12627, 4
  %12629 = trunc i32 %12628 to i8
  %12630 = and i8 %12629, 1
  %12631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12630, i8* %12631, align 1
  %12632 = icmp eq i32 %12613, 0
  %12633 = zext i1 %12632 to i8
  %12634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12633, i8* %12634, align 1
  %12635 = lshr i32 %12613, 31
  %12636 = trunc i32 %12635 to i8
  %12637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12636, i8* %12637, align 1
  %12638 = lshr i32 %12603, 31
  %12639 = lshr i32 %12612, 31
  %12640 = xor i32 %12635, %12638
  %12641 = xor i32 %12635, %12639
  %12642 = add i32 %12640, %12641
  %12643 = icmp eq i32 %12642, 2
  %12644 = zext i1 %12643 to i8
  %12645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12644, i8* %12645, align 1
  store %struct.Memory* %loadMem_4420e6, %struct.Memory** %MEMORY
  %loadMem_4420ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %12646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12647 = getelementptr inbounds %struct.GPR, %struct.GPR* %12646, i32 0, i32 33
  %12648 = getelementptr inbounds %struct.Reg, %struct.Reg* %12647, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %12648 to i64*
  %12649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12650 = getelementptr inbounds %struct.GPR, %struct.GPR* %12649, i32 0, i32 5
  %12651 = getelementptr inbounds %struct.Reg, %struct.Reg* %12650, i32 0, i32 0
  %ECX.i364 = bitcast %union.anon* %12651 to i32*
  %12652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12653 = getelementptr inbounds %struct.GPR, %struct.GPR* %12652, i32 0, i32 19
  %12654 = getelementptr inbounds %struct.Reg, %struct.Reg* %12653, i32 0, i32 0
  %R9D.i365 = bitcast %union.anon* %12654 to i32*
  %12655 = load i32, i32* %ECX.i364
  %12656 = zext i32 %12655 to i64
  %12657 = load i32, i32* %R9D.i365
  %12658 = zext i32 %12657 to i64
  %12659 = load i64, i64* %PC.i363
  %12660 = add i64 %12659, 3
  store i64 %12660, i64* %PC.i363
  %12661 = sub i32 %12655, %12657
  %12662 = icmp ult i32 %12655, %12657
  %12663 = zext i1 %12662 to i8
  %12664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12663, i8* %12664, align 1
  %12665 = and i32 %12661, 255
  %12666 = call i32 @llvm.ctpop.i32(i32 %12665)
  %12667 = trunc i32 %12666 to i8
  %12668 = and i8 %12667, 1
  %12669 = xor i8 %12668, 1
  %12670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12669, i8* %12670, align 1
  %12671 = xor i64 %12658, %12656
  %12672 = trunc i64 %12671 to i32
  %12673 = xor i32 %12672, %12661
  %12674 = lshr i32 %12673, 4
  %12675 = trunc i32 %12674 to i8
  %12676 = and i8 %12675, 1
  %12677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12676, i8* %12677, align 1
  %12678 = icmp eq i32 %12661, 0
  %12679 = zext i1 %12678 to i8
  %12680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12679, i8* %12680, align 1
  %12681 = lshr i32 %12661, 31
  %12682 = trunc i32 %12681 to i8
  %12683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12682, i8* %12683, align 1
  %12684 = lshr i32 %12655, 31
  %12685 = lshr i32 %12657, 31
  %12686 = xor i32 %12685, %12684
  %12687 = xor i32 %12681, %12684
  %12688 = add i32 %12687, %12686
  %12689 = icmp eq i32 %12688, 2
  %12690 = zext i1 %12689 to i8
  %12691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12690, i8* %12691, align 1
  store %struct.Memory* %loadMem_4420ea, %struct.Memory** %MEMORY
  %loadMem_4420ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %12692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12693 = getelementptr inbounds %struct.GPR, %struct.GPR* %12692, i32 0, i32 33
  %12694 = getelementptr inbounds %struct.Reg, %struct.Reg* %12693, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %12694 to i64*
  %12695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12696 = getelementptr inbounds %struct.GPR, %struct.GPR* %12695, i32 0, i32 1
  %12697 = getelementptr inbounds %struct.Reg, %struct.Reg* %12696, i32 0, i32 0
  %EAX.i361 = bitcast %union.anon* %12697 to i32*
  %12698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12699 = getelementptr inbounds %struct.GPR, %struct.GPR* %12698, i32 0, i32 15
  %12700 = getelementptr inbounds %struct.Reg, %struct.Reg* %12699, i32 0, i32 0
  %RBP.i362 = bitcast %union.anon* %12700 to i64*
  %12701 = load i64, i64* %RBP.i362
  %12702 = sub i64 %12701, 296
  %12703 = load i32, i32* %EAX.i361
  %12704 = zext i32 %12703 to i64
  %12705 = load i64, i64* %PC.i360
  %12706 = add i64 %12705, 6
  store i64 %12706, i64* %PC.i360
  %12707 = inttoptr i64 %12702 to i32*
  store i32 %12703, i32* %12707
  store %struct.Memory* %loadMem_4420ed, %struct.Memory** %MEMORY
  %loadMem_4420f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12709 = getelementptr inbounds %struct.GPR, %struct.GPR* %12708, i32 0, i32 33
  %12710 = getelementptr inbounds %struct.Reg, %struct.Reg* %12709, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %12710 to i64*
  %12711 = load i64, i64* %PC.i359
  %12712 = add i64 %12711, 19
  %12713 = load i64, i64* %PC.i359
  %12714 = add i64 %12713, 6
  %12715 = load i64, i64* %PC.i359
  %12716 = add i64 %12715, 6
  store i64 %12716, i64* %PC.i359
  %12717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12718 = load i8, i8* %12717, align 1
  %12719 = icmp ne i8 %12718, 0
  %12720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12721 = load i8, i8* %12720, align 1
  %12722 = icmp ne i8 %12721, 0
  %12723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12724 = load i8, i8* %12723, align 1
  %12725 = icmp ne i8 %12724, 0
  %12726 = xor i1 %12722, %12725
  %12727 = or i1 %12719, %12726
  %12728 = zext i1 %12727 to i8
  store i8 %12728, i8* %BRANCH_TAKEN, align 1
  %12729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12730 = select i1 %12727, i64 %12712, i64 %12714
  store i64 %12730, i64* %12729, align 8
  store %struct.Memory* %loadMem_4420f3, %struct.Memory** %MEMORY
  %loadBr_4420f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4420f3 = icmp eq i8 %loadBr_4420f3, 1
  br i1 %cmpBr_4420f3, label %block_.L_442106, label %block_4420f9

block_4420f9:                                     ; preds = %block_.L_442068
  %loadMem_4420f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12732 = getelementptr inbounds %struct.GPR, %struct.GPR* %12731, i32 0, i32 33
  %12733 = getelementptr inbounds %struct.Reg, %struct.Reg* %12732, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %12733 to i64*
  %12734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12735 = getelementptr inbounds %struct.GPR, %struct.GPR* %12734, i32 0, i32 1
  %12736 = getelementptr inbounds %struct.Reg, %struct.Reg* %12735, i32 0, i32 0
  %EAX.i357 = bitcast %union.anon* %12736 to i32*
  %12737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12738 = getelementptr inbounds %struct.GPR, %struct.GPR* %12737, i32 0, i32 1
  %12739 = getelementptr inbounds %struct.Reg, %struct.Reg* %12738, i32 0, i32 0
  %RAX.i358 = bitcast %union.anon* %12739 to i64*
  %12740 = load i64, i64* %RAX.i358
  %12741 = load i32, i32* %EAX.i357
  %12742 = zext i32 %12741 to i64
  %12743 = load i64, i64* %PC.i356
  %12744 = add i64 %12743, 2
  store i64 %12744, i64* %PC.i356
  %12745 = xor i64 %12742, %12740
  %12746 = trunc i64 %12745 to i32
  %12747 = and i64 %12745, 4294967295
  store i64 %12747, i64* %RAX.i358, align 8
  %12748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12748, align 1
  %12749 = and i32 %12746, 255
  %12750 = call i32 @llvm.ctpop.i32(i32 %12749)
  %12751 = trunc i32 %12750 to i8
  %12752 = and i8 %12751, 1
  %12753 = xor i8 %12752, 1
  %12754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12753, i8* %12754, align 1
  %12755 = icmp eq i32 %12746, 0
  %12756 = zext i1 %12755 to i8
  %12757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12756, i8* %12757, align 1
  %12758 = lshr i32 %12746, 31
  %12759 = trunc i32 %12758 to i8
  %12760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12759, i8* %12760, align 1
  %12761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12761, align 1
  %12762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12762, align 1
  store %struct.Memory* %loadMem_4420f9, %struct.Memory** %MEMORY
  %loadMem_4420fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12764 = getelementptr inbounds %struct.GPR, %struct.GPR* %12763, i32 0, i32 33
  %12765 = getelementptr inbounds %struct.Reg, %struct.Reg* %12764, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %12765 to i64*
  %12766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12767 = getelementptr inbounds %struct.GPR, %struct.GPR* %12766, i32 0, i32 1
  %12768 = getelementptr inbounds %struct.Reg, %struct.Reg* %12767, i32 0, i32 0
  %EAX.i354 = bitcast %union.anon* %12768 to i32*
  %12769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12770 = getelementptr inbounds %struct.GPR, %struct.GPR* %12769, i32 0, i32 15
  %12771 = getelementptr inbounds %struct.Reg, %struct.Reg* %12770, i32 0, i32 0
  %RBP.i355 = bitcast %union.anon* %12771 to i64*
  %12772 = load i64, i64* %RBP.i355
  %12773 = sub i64 %12772, 300
  %12774 = load i32, i32* %EAX.i354
  %12775 = zext i32 %12774 to i64
  %12776 = load i64, i64* %PC.i353
  %12777 = add i64 %12776, 6
  store i64 %12777, i64* %PC.i353
  %12778 = inttoptr i64 %12773 to i32*
  store i32 %12774, i32* %12778
  store %struct.Memory* %loadMem_4420fb, %struct.Memory** %MEMORY
  %loadMem_442101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12780 = getelementptr inbounds %struct.GPR, %struct.GPR* %12779, i32 0, i32 33
  %12781 = getelementptr inbounds %struct.Reg, %struct.Reg* %12780, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %12781 to i64*
  %12782 = load i64, i64* %PC.i352
  %12783 = add i64 %12782, 45
  %12784 = load i64, i64* %PC.i352
  %12785 = add i64 %12784, 5
  store i64 %12785, i64* %PC.i352
  %12786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12783, i64* %12786, align 8
  store %struct.Memory* %loadMem_442101, %struct.Memory** %MEMORY
  br label %block_.L_44212e

block_.L_442106:                                  ; preds = %block_.L_442068
  %loadMem_442106 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12788 = getelementptr inbounds %struct.GPR, %struct.GPR* %12787, i32 0, i32 33
  %12789 = getelementptr inbounds %struct.Reg, %struct.Reg* %12788, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %12789 to i64*
  %12790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12791 = getelementptr inbounds %struct.GPR, %struct.GPR* %12790, i32 0, i32 1
  %12792 = getelementptr inbounds %struct.Reg, %struct.Reg* %12791, i32 0, i32 0
  %RAX.i351 = bitcast %union.anon* %12792 to i64*
  %12793 = load i64, i64* %PC.i350
  %12794 = add i64 %12793, 10
  store i64 %12794, i64* %PC.i350
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RAX.i351, align 8
  store %struct.Memory* %loadMem_442106, %struct.Memory** %MEMORY
  %loadMem_442110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12796 = getelementptr inbounds %struct.GPR, %struct.GPR* %12795, i32 0, i32 33
  %12797 = getelementptr inbounds %struct.Reg, %struct.Reg* %12796, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %12797 to i64*
  %12798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12799 = getelementptr inbounds %struct.GPR, %struct.GPR* %12798, i32 0, i32 5
  %12800 = getelementptr inbounds %struct.Reg, %struct.Reg* %12799, i32 0, i32 0
  %RCX.i348 = bitcast %union.anon* %12800 to i64*
  %12801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12802 = getelementptr inbounds %struct.GPR, %struct.GPR* %12801, i32 0, i32 15
  %12803 = getelementptr inbounds %struct.Reg, %struct.Reg* %12802, i32 0, i32 0
  %RBP.i349 = bitcast %union.anon* %12803 to i64*
  %12804 = load i64, i64* %RBP.i349
  %12805 = sub i64 %12804, 264
  %12806 = load i64, i64* %PC.i347
  %12807 = add i64 %12806, 6
  store i64 %12807, i64* %PC.i347
  %12808 = inttoptr i64 %12805 to i32*
  %12809 = load i32, i32* %12808
  %12810 = zext i32 %12809 to i64
  store i64 %12810, i64* %RCX.i348, align 8
  store %struct.Memory* %loadMem_442110, %struct.Memory** %MEMORY
  %loadMem_442116 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12812 = getelementptr inbounds %struct.GPR, %struct.GPR* %12811, i32 0, i32 33
  %12813 = getelementptr inbounds %struct.Reg, %struct.Reg* %12812, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %12813 to i64*
  %12814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12815 = getelementptr inbounds %struct.GPR, %struct.GPR* %12814, i32 0, i32 7
  %12816 = getelementptr inbounds %struct.Reg, %struct.Reg* %12815, i32 0, i32 0
  %RDX.i345 = bitcast %union.anon* %12816 to i64*
  %12817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12818 = getelementptr inbounds %struct.GPR, %struct.GPR* %12817, i32 0, i32 15
  %12819 = getelementptr inbounds %struct.Reg, %struct.Reg* %12818, i32 0, i32 0
  %RBP.i346 = bitcast %union.anon* %12819 to i64*
  %12820 = load i64, i64* %RBP.i346
  %12821 = sub i64 %12820, 32
  %12822 = load i64, i64* %PC.i344
  %12823 = add i64 %12822, 4
  store i64 %12823, i64* %PC.i344
  %12824 = inttoptr i64 %12821 to i32*
  %12825 = load i32, i32* %12824
  %12826 = sext i32 %12825 to i64
  store i64 %12826, i64* %RDX.i345, align 8
  store %struct.Memory* %loadMem_442116, %struct.Memory** %MEMORY
  %loadMem_44211a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12828 = getelementptr inbounds %struct.GPR, %struct.GPR* %12827, i32 0, i32 33
  %12829 = getelementptr inbounds %struct.Reg, %struct.Reg* %12828, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %12829 to i64*
  %12830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12831 = getelementptr inbounds %struct.GPR, %struct.GPR* %12830, i32 0, i32 7
  %12832 = getelementptr inbounds %struct.Reg, %struct.Reg* %12831, i32 0, i32 0
  %RDX.i343 = bitcast %union.anon* %12832 to i64*
  %12833 = load i64, i64* %RDX.i343
  %12834 = load i64, i64* %PC.i342
  %12835 = add i64 %12834, 4
  store i64 %12835, i64* %PC.i342
  %12836 = shl i64 %12833, 5
  %12837 = icmp slt i64 %12836, 0
  %12838 = shl i64 %12836, 1
  store i64 %12838, i64* %RDX.i343, align 8
  %12839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12840 = zext i1 %12837 to i8
  store i8 %12840, i8* %12839, align 1
  %12841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12842 = trunc i64 %12838 to i32
  %12843 = and i32 %12842, 254
  %12844 = call i32 @llvm.ctpop.i32(i32 %12843)
  %12845 = trunc i32 %12844 to i8
  %12846 = and i8 %12845, 1
  %12847 = xor i8 %12846, 1
  store i8 %12847, i8* %12841, align 1
  %12848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12848, align 1
  %12849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12850 = icmp eq i64 %12838, 0
  %12851 = zext i1 %12850 to i8
  store i8 %12851, i8* %12849, align 1
  %12852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12853 = lshr i64 %12838, 63
  %12854 = trunc i64 %12853 to i8
  store i8 %12854, i8* %12852, align 1
  %12855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12855, align 1
  store %struct.Memory* %loadMem_44211a, %struct.Memory** %MEMORY
  %loadMem_44211e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12857 = getelementptr inbounds %struct.GPR, %struct.GPR* %12856, i32 0, i32 33
  %12858 = getelementptr inbounds %struct.Reg, %struct.Reg* %12857, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %12858 to i64*
  %12859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12860 = getelementptr inbounds %struct.GPR, %struct.GPR* %12859, i32 0, i32 1
  %12861 = getelementptr inbounds %struct.Reg, %struct.Reg* %12860, i32 0, i32 0
  %RAX.i340 = bitcast %union.anon* %12861 to i64*
  %12862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12863 = getelementptr inbounds %struct.GPR, %struct.GPR* %12862, i32 0, i32 7
  %12864 = getelementptr inbounds %struct.Reg, %struct.Reg* %12863, i32 0, i32 0
  %RDX.i341 = bitcast %union.anon* %12864 to i64*
  %12865 = load i64, i64* %RAX.i340
  %12866 = load i64, i64* %RDX.i341
  %12867 = load i64, i64* %PC.i339
  %12868 = add i64 %12867, 3
  store i64 %12868, i64* %PC.i339
  %12869 = add i64 %12866, %12865
  store i64 %12869, i64* %RAX.i340, align 8
  %12870 = icmp ult i64 %12869, %12865
  %12871 = icmp ult i64 %12869, %12866
  %12872 = or i1 %12870, %12871
  %12873 = zext i1 %12872 to i8
  %12874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12873, i8* %12874, align 1
  %12875 = trunc i64 %12869 to i32
  %12876 = and i32 %12875, 255
  %12877 = call i32 @llvm.ctpop.i32(i32 %12876)
  %12878 = trunc i32 %12877 to i8
  %12879 = and i8 %12878, 1
  %12880 = xor i8 %12879, 1
  %12881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12880, i8* %12881, align 1
  %12882 = xor i64 %12866, %12865
  %12883 = xor i64 %12882, %12869
  %12884 = lshr i64 %12883, 4
  %12885 = trunc i64 %12884 to i8
  %12886 = and i8 %12885, 1
  %12887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12886, i8* %12887, align 1
  %12888 = icmp eq i64 %12869, 0
  %12889 = zext i1 %12888 to i8
  %12890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12889, i8* %12890, align 1
  %12891 = lshr i64 %12869, 63
  %12892 = trunc i64 %12891 to i8
  %12893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12892, i8* %12893, align 1
  %12894 = lshr i64 %12865, 63
  %12895 = lshr i64 %12866, 63
  %12896 = xor i64 %12891, %12894
  %12897 = xor i64 %12891, %12895
  %12898 = add i64 %12896, %12897
  %12899 = icmp eq i64 %12898, 2
  %12900 = zext i1 %12899 to i8
  %12901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12900, i8* %12901, align 1
  store %struct.Memory* %loadMem_44211e, %struct.Memory** %MEMORY
  %loadMem_442121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12903 = getelementptr inbounds %struct.GPR, %struct.GPR* %12902, i32 0, i32 33
  %12904 = getelementptr inbounds %struct.Reg, %struct.Reg* %12903, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %12904 to i64*
  %12905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12906 = getelementptr inbounds %struct.GPR, %struct.GPR* %12905, i32 0, i32 7
  %12907 = getelementptr inbounds %struct.Reg, %struct.Reg* %12906, i32 0, i32 0
  %RDX.i337 = bitcast %union.anon* %12907 to i64*
  %12908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12909 = getelementptr inbounds %struct.GPR, %struct.GPR* %12908, i32 0, i32 15
  %12910 = getelementptr inbounds %struct.Reg, %struct.Reg* %12909, i32 0, i32 0
  %RBP.i338 = bitcast %union.anon* %12910 to i64*
  %12911 = load i64, i64* %RBP.i338
  %12912 = sub i64 %12911, 28
  %12913 = load i64, i64* %PC.i336
  %12914 = add i64 %12913, 4
  store i64 %12914, i64* %PC.i336
  %12915 = inttoptr i64 %12912 to i32*
  %12916 = load i32, i32* %12915
  %12917 = sext i32 %12916 to i64
  store i64 %12917, i64* %RDX.i337, align 8
  store %struct.Memory* %loadMem_442121, %struct.Memory** %MEMORY
  %loadMem_442125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12919 = getelementptr inbounds %struct.GPR, %struct.GPR* %12918, i32 0, i32 33
  %12920 = getelementptr inbounds %struct.Reg, %struct.Reg* %12919, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %12920 to i64*
  %12921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12922 = getelementptr inbounds %struct.GPR, %struct.GPR* %12921, i32 0, i32 1
  %12923 = getelementptr inbounds %struct.Reg, %struct.Reg* %12922, i32 0, i32 0
  %RAX.i333 = bitcast %union.anon* %12923 to i64*
  %12924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12925 = getelementptr inbounds %struct.GPR, %struct.GPR* %12924, i32 0, i32 5
  %12926 = getelementptr inbounds %struct.Reg, %struct.Reg* %12925, i32 0, i32 0
  %RCX.i334 = bitcast %union.anon* %12926 to i64*
  %12927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12928 = getelementptr inbounds %struct.GPR, %struct.GPR* %12927, i32 0, i32 7
  %12929 = getelementptr inbounds %struct.Reg, %struct.Reg* %12928, i32 0, i32 0
  %RDX.i335 = bitcast %union.anon* %12929 to i64*
  %12930 = load i64, i64* %RCX.i334
  %12931 = load i64, i64* %RAX.i333
  %12932 = load i64, i64* %RDX.i335
  %12933 = mul i64 %12932, 4
  %12934 = add i64 %12933, %12931
  %12935 = load i64, i64* %PC.i332
  %12936 = add i64 %12935, 3
  store i64 %12936, i64* %PC.i332
  %12937 = trunc i64 %12930 to i32
  %12938 = inttoptr i64 %12934 to i32*
  %12939 = load i32, i32* %12938
  %12940 = add i32 %12939, %12937
  %12941 = zext i32 %12940 to i64
  store i64 %12941, i64* %RCX.i334, align 8
  %12942 = icmp ult i32 %12940, %12937
  %12943 = icmp ult i32 %12940, %12939
  %12944 = or i1 %12942, %12943
  %12945 = zext i1 %12944 to i8
  %12946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12945, i8* %12946, align 1
  %12947 = and i32 %12940, 255
  %12948 = call i32 @llvm.ctpop.i32(i32 %12947)
  %12949 = trunc i32 %12948 to i8
  %12950 = and i8 %12949, 1
  %12951 = xor i8 %12950, 1
  %12952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12951, i8* %12952, align 1
  %12953 = xor i32 %12939, %12937
  %12954 = xor i32 %12953, %12940
  %12955 = lshr i32 %12954, 4
  %12956 = trunc i32 %12955 to i8
  %12957 = and i8 %12956, 1
  %12958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12957, i8* %12958, align 1
  %12959 = icmp eq i32 %12940, 0
  %12960 = zext i1 %12959 to i8
  %12961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12960, i8* %12961, align 1
  %12962 = lshr i32 %12940, 31
  %12963 = trunc i32 %12962 to i8
  %12964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12963, i8* %12964, align 1
  %12965 = lshr i32 %12937, 31
  %12966 = lshr i32 %12939, 31
  %12967 = xor i32 %12962, %12965
  %12968 = xor i32 %12962, %12966
  %12969 = add i32 %12967, %12968
  %12970 = icmp eq i32 %12969, 2
  %12971 = zext i1 %12970 to i8
  %12972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12971, i8* %12972, align 1
  store %struct.Memory* %loadMem_442125, %struct.Memory** %MEMORY
  %loadMem_442128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12974 = getelementptr inbounds %struct.GPR, %struct.GPR* %12973, i32 0, i32 33
  %12975 = getelementptr inbounds %struct.Reg, %struct.Reg* %12974, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %12975 to i64*
  %12976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12977 = getelementptr inbounds %struct.GPR, %struct.GPR* %12976, i32 0, i32 5
  %12978 = getelementptr inbounds %struct.Reg, %struct.Reg* %12977, i32 0, i32 0
  %ECX.i330 = bitcast %union.anon* %12978 to i32*
  %12979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12980 = getelementptr inbounds %struct.GPR, %struct.GPR* %12979, i32 0, i32 15
  %12981 = getelementptr inbounds %struct.Reg, %struct.Reg* %12980, i32 0, i32 0
  %RBP.i331 = bitcast %union.anon* %12981 to i64*
  %12982 = load i64, i64* %RBP.i331
  %12983 = sub i64 %12982, 300
  %12984 = load i32, i32* %ECX.i330
  %12985 = zext i32 %12984 to i64
  %12986 = load i64, i64* %PC.i329
  %12987 = add i64 %12986, 6
  store i64 %12987, i64* %PC.i329
  %12988 = inttoptr i64 %12983 to i32*
  store i32 %12984, i32* %12988
  store %struct.Memory* %loadMem_442128, %struct.Memory** %MEMORY
  br label %block_.L_44212e

block_.L_44212e:                                  ; preds = %block_.L_442106, %block_4420f9
  %loadMem_44212e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12990 = getelementptr inbounds %struct.GPR, %struct.GPR* %12989, i32 0, i32 33
  %12991 = getelementptr inbounds %struct.Reg, %struct.Reg* %12990, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %12991 to i64*
  %12992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12993 = getelementptr inbounds %struct.GPR, %struct.GPR* %12992, i32 0, i32 1
  %12994 = getelementptr inbounds %struct.Reg, %struct.Reg* %12993, i32 0, i32 0
  %RAX.i327 = bitcast %union.anon* %12994 to i64*
  %12995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12996 = getelementptr inbounds %struct.GPR, %struct.GPR* %12995, i32 0, i32 15
  %12997 = getelementptr inbounds %struct.Reg, %struct.Reg* %12996, i32 0, i32 0
  %RBP.i328 = bitcast %union.anon* %12997 to i64*
  %12998 = load i64, i64* %RBP.i328
  %12999 = sub i64 %12998, 300
  %13000 = load i64, i64* %PC.i326
  %13001 = add i64 %13000, 6
  store i64 %13001, i64* %PC.i326
  %13002 = inttoptr i64 %12999 to i32*
  %13003 = load i32, i32* %13002
  %13004 = zext i32 %13003 to i64
  store i64 %13004, i64* %RAX.i327, align 8
  store %struct.Memory* %loadMem_44212e, %struct.Memory** %MEMORY
  %loadMem_442134 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13006 = getelementptr inbounds %struct.GPR, %struct.GPR* %13005, i32 0, i32 33
  %13007 = getelementptr inbounds %struct.Reg, %struct.Reg* %13006, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %13007 to i64*
  %13008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13009 = getelementptr inbounds %struct.GPR, %struct.GPR* %13008, i32 0, i32 5
  %13010 = getelementptr inbounds %struct.Reg, %struct.Reg* %13009, i32 0, i32 0
  %RCX.i324 = bitcast %union.anon* %13010 to i64*
  %13011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13012 = getelementptr inbounds %struct.GPR, %struct.GPR* %13011, i32 0, i32 15
  %13013 = getelementptr inbounds %struct.Reg, %struct.Reg* %13012, i32 0, i32 0
  %RBP.i325 = bitcast %union.anon* %13013 to i64*
  %13014 = load i64, i64* %RBP.i325
  %13015 = sub i64 %13014, 296
  %13016 = load i64, i64* %PC.i323
  %13017 = add i64 %13016, 6
  store i64 %13017, i64* %PC.i323
  %13018 = inttoptr i64 %13015 to i32*
  %13019 = load i32, i32* %13018
  %13020 = zext i32 %13019 to i64
  store i64 %13020, i64* %RCX.i324, align 8
  store %struct.Memory* %loadMem_442134, %struct.Memory** %MEMORY
  %loadMem_44213a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13022 = getelementptr inbounds %struct.GPR, %struct.GPR* %13021, i32 0, i32 33
  %13023 = getelementptr inbounds %struct.Reg, %struct.Reg* %13022, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %13023 to i64*
  %13024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13025 = getelementptr inbounds %struct.GPR, %struct.GPR* %13024, i32 0, i32 1
  %13026 = getelementptr inbounds %struct.Reg, %struct.Reg* %13025, i32 0, i32 0
  %EAX.i321 = bitcast %union.anon* %13026 to i32*
  %13027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13028 = getelementptr inbounds %struct.GPR, %struct.GPR* %13027, i32 0, i32 5
  %13029 = getelementptr inbounds %struct.Reg, %struct.Reg* %13028, i32 0, i32 0
  %ECX.i322 = bitcast %union.anon* %13029 to i32*
  %13030 = load i32, i32* %ECX.i322
  %13031 = zext i32 %13030 to i64
  %13032 = load i32, i32* %EAX.i321
  %13033 = zext i32 %13032 to i64
  %13034 = load i64, i64* %PC.i320
  %13035 = add i64 %13034, 2
  store i64 %13035, i64* %PC.i320
  %13036 = sub i32 %13030, %13032
  %13037 = icmp ult i32 %13030, %13032
  %13038 = zext i1 %13037 to i8
  %13039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13038, i8* %13039, align 1
  %13040 = and i32 %13036, 255
  %13041 = call i32 @llvm.ctpop.i32(i32 %13040)
  %13042 = trunc i32 %13041 to i8
  %13043 = and i8 %13042, 1
  %13044 = xor i8 %13043, 1
  %13045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13044, i8* %13045, align 1
  %13046 = xor i64 %13033, %13031
  %13047 = trunc i64 %13046 to i32
  %13048 = xor i32 %13047, %13036
  %13049 = lshr i32 %13048, 4
  %13050 = trunc i32 %13049 to i8
  %13051 = and i8 %13050, 1
  %13052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13051, i8* %13052, align 1
  %13053 = icmp eq i32 %13036, 0
  %13054 = zext i1 %13053 to i8
  %13055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13054, i8* %13055, align 1
  %13056 = lshr i32 %13036, 31
  %13057 = trunc i32 %13056 to i8
  %13058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13057, i8* %13058, align 1
  %13059 = lshr i32 %13030, 31
  %13060 = lshr i32 %13032, 31
  %13061 = xor i32 %13060, %13059
  %13062 = xor i32 %13056, %13059
  %13063 = add i32 %13062, %13061
  %13064 = icmp eq i32 %13063, 2
  %13065 = zext i1 %13064 to i8
  %13066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13065, i8* %13066, align 1
  store %struct.Memory* %loadMem_44213a, %struct.Memory** %MEMORY
  %loadMem_44213c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13068 = getelementptr inbounds %struct.GPR, %struct.GPR* %13067, i32 0, i32 33
  %13069 = getelementptr inbounds %struct.Reg, %struct.Reg* %13068, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %13069 to i64*
  %13070 = load i64, i64* %PC.i319
  %13071 = add i64 %13070, 31
  %13072 = load i64, i64* %PC.i319
  %13073 = add i64 %13072, 6
  %13074 = load i64, i64* %PC.i319
  %13075 = add i64 %13074, 6
  store i64 %13075, i64* %PC.i319
  %13076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13077 = load i8, i8* %13076, align 1
  %13078 = icmp ne i8 %13077, 0
  %13079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13080 = load i8, i8* %13079, align 1
  %13081 = icmp ne i8 %13080, 0
  %13082 = xor i1 %13078, %13081
  %13083 = xor i1 %13082, true
  %13084 = zext i1 %13083 to i8
  store i8 %13084, i8* %BRANCH_TAKEN, align 1
  %13085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13086 = select i1 %13082, i64 %13073, i64 %13071
  store i64 %13086, i64* %13085, align 8
  store %struct.Memory* %loadMem_44213c, %struct.Memory** %MEMORY
  %loadBr_44213c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44213c = icmp eq i8 %loadBr_44213c, 1
  br i1 %cmpBr_44213c, label %block_.L_44215b, label %block_442142

block_442142:                                     ; preds = %block_.L_44212e
  %loadMem_442142 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13088 = getelementptr inbounds %struct.GPR, %struct.GPR* %13087, i32 0, i32 33
  %13089 = getelementptr inbounds %struct.Reg, %struct.Reg* %13088, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %13089 to i64*
  %13090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13091 = getelementptr inbounds %struct.GPR, %struct.GPR* %13090, i32 0, i32 1
  %13092 = getelementptr inbounds %struct.Reg, %struct.Reg* %13091, i32 0, i32 0
  %RAX.i318 = bitcast %union.anon* %13092 to i64*
  %13093 = load i64, i64* %PC.i317
  %13094 = add i64 %13093, 8
  store i64 %13094, i64* %PC.i317
  %13095 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13095, i64* %RAX.i318, align 8
  store %struct.Memory* %loadMem_442142, %struct.Memory** %MEMORY
  %loadMem_44214a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13097 = getelementptr inbounds %struct.GPR, %struct.GPR* %13096, i32 0, i32 33
  %13098 = getelementptr inbounds %struct.Reg, %struct.Reg* %13097, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %13098 to i64*
  %13099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13100 = getelementptr inbounds %struct.GPR, %struct.GPR* %13099, i32 0, i32 1
  %13101 = getelementptr inbounds %struct.Reg, %struct.Reg* %13100, i32 0, i32 0
  %RAX.i315 = bitcast %union.anon* %13101 to i64*
  %13102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13103 = getelementptr inbounds %struct.GPR, %struct.GPR* %13102, i32 0, i32 5
  %13104 = getelementptr inbounds %struct.Reg, %struct.Reg* %13103, i32 0, i32 0
  %RCX.i316 = bitcast %union.anon* %13104 to i64*
  %13105 = load i64, i64* %RAX.i315
  %13106 = add i64 %13105, 72684
  %13107 = load i64, i64* %PC.i314
  %13108 = add i64 %13107, 6
  store i64 %13108, i64* %PC.i314
  %13109 = inttoptr i64 %13106 to i32*
  %13110 = load i32, i32* %13109
  %13111 = zext i32 %13110 to i64
  store i64 %13111, i64* %RCX.i316, align 8
  store %struct.Memory* %loadMem_44214a, %struct.Memory** %MEMORY
  %loadMem_442150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13113 = getelementptr inbounds %struct.GPR, %struct.GPR* %13112, i32 0, i32 33
  %13114 = getelementptr inbounds %struct.Reg, %struct.Reg* %13113, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %13114 to i64*
  %13115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13116 = getelementptr inbounds %struct.GPR, %struct.GPR* %13115, i32 0, i32 5
  %13117 = getelementptr inbounds %struct.Reg, %struct.Reg* %13116, i32 0, i32 0
  %ECX.i312 = bitcast %union.anon* %13117 to i32*
  %13118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13119 = getelementptr inbounds %struct.GPR, %struct.GPR* %13118, i32 0, i32 15
  %13120 = getelementptr inbounds %struct.Reg, %struct.Reg* %13119, i32 0, i32 0
  %RBP.i313 = bitcast %union.anon* %13120 to i64*
  %13121 = load i64, i64* %RBP.i313
  %13122 = sub i64 %13121, 304
  %13123 = load i32, i32* %ECX.i312
  %13124 = zext i32 %13123 to i64
  %13125 = load i64, i64* %PC.i311
  %13126 = add i64 %13125, 6
  store i64 %13126, i64* %PC.i311
  %13127 = inttoptr i64 %13122 to i32*
  store i32 %13123, i32* %13127
  store %struct.Memory* %loadMem_442150, %struct.Memory** %MEMORY
  %loadMem_442156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13129 = getelementptr inbounds %struct.GPR, %struct.GPR* %13128, i32 0, i32 33
  %13130 = getelementptr inbounds %struct.Reg, %struct.Reg* %13129, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %13130 to i64*
  %13131 = load i64, i64* %PC.i310
  %13132 = add i64 %13131, 114
  %13133 = load i64, i64* %PC.i310
  %13134 = add i64 %13133, 5
  store i64 %13134, i64* %PC.i310
  %13135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13132, i64* %13135, align 8
  store %struct.Memory* %loadMem_442156, %struct.Memory** %MEMORY
  br label %block_.L_4421c8

block_.L_44215b:                                  ; preds = %block_.L_44212e
  %loadMem_44215b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13137 = getelementptr inbounds %struct.GPR, %struct.GPR* %13136, i32 0, i32 33
  %13138 = getelementptr inbounds %struct.Reg, %struct.Reg* %13137, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %13138 to i64*
  %13139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13140 = getelementptr inbounds %struct.GPR, %struct.GPR* %13139, i32 0, i32 1
  %13141 = getelementptr inbounds %struct.Reg, %struct.Reg* %13140, i32 0, i32 0
  %EAX.i308 = bitcast %union.anon* %13141 to i32*
  %13142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13143 = getelementptr inbounds %struct.GPR, %struct.GPR* %13142, i32 0, i32 1
  %13144 = getelementptr inbounds %struct.Reg, %struct.Reg* %13143, i32 0, i32 0
  %RAX.i309 = bitcast %union.anon* %13144 to i64*
  %13145 = load i64, i64* %RAX.i309
  %13146 = load i32, i32* %EAX.i308
  %13147 = zext i32 %13146 to i64
  %13148 = load i64, i64* %PC.i307
  %13149 = add i64 %13148, 2
  store i64 %13149, i64* %PC.i307
  %13150 = xor i64 %13147, %13145
  %13151 = trunc i64 %13150 to i32
  %13152 = and i64 %13150, 4294967295
  store i64 %13152, i64* %RAX.i309, align 8
  %13153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13153, align 1
  %13154 = and i32 %13151, 255
  %13155 = call i32 @llvm.ctpop.i32(i32 %13154)
  %13156 = trunc i32 %13155 to i8
  %13157 = and i8 %13156, 1
  %13158 = xor i8 %13157, 1
  %13159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13158, i8* %13159, align 1
  %13160 = icmp eq i32 %13151, 0
  %13161 = zext i1 %13160 to i8
  %13162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13161, i8* %13162, align 1
  %13163 = lshr i32 %13151, 31
  %13164 = trunc i32 %13163 to i8
  %13165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13164, i8* %13165, align 1
  %13166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13166, align 1
  %13167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13167, align 1
  store %struct.Memory* %loadMem_44215b, %struct.Memory** %MEMORY
  %loadMem_44215d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13169 = getelementptr inbounds %struct.GPR, %struct.GPR* %13168, i32 0, i32 33
  %13170 = getelementptr inbounds %struct.Reg, %struct.Reg* %13169, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %13170 to i64*
  %13171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13172 = getelementptr inbounds %struct.GPR, %struct.GPR* %13171, i32 0, i32 5
  %13173 = getelementptr inbounds %struct.Reg, %struct.Reg* %13172, i32 0, i32 0
  %RCX.i306 = bitcast %union.anon* %13173 to i64*
  %13174 = load i64, i64* %PC.i305
  %13175 = add i64 %13174, 10
  store i64 %13175, i64* %PC.i305
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RCX.i306, align 8
  store %struct.Memory* %loadMem_44215d, %struct.Memory** %MEMORY
  %loadMem_442167 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13177 = getelementptr inbounds %struct.GPR, %struct.GPR* %13176, i32 0, i32 33
  %13178 = getelementptr inbounds %struct.Reg, %struct.Reg* %13177, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %13178 to i64*
  %13179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13180 = getelementptr inbounds %struct.GPR, %struct.GPR* %13179, i32 0, i32 7
  %13181 = getelementptr inbounds %struct.Reg, %struct.Reg* %13180, i32 0, i32 0
  %RDX.i303 = bitcast %union.anon* %13181 to i64*
  %13182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13183 = getelementptr inbounds %struct.GPR, %struct.GPR* %13182, i32 0, i32 15
  %13184 = getelementptr inbounds %struct.Reg, %struct.Reg* %13183, i32 0, i32 0
  %RBP.i304 = bitcast %union.anon* %13184 to i64*
  %13185 = load i64, i64* %RBP.i304
  %13186 = sub i64 %13185, 264
  %13187 = load i64, i64* %PC.i302
  %13188 = add i64 %13187, 6
  store i64 %13188, i64* %PC.i302
  %13189 = inttoptr i64 %13186 to i32*
  %13190 = load i32, i32* %13189
  %13191 = zext i32 %13190 to i64
  store i64 %13191, i64* %RDX.i303, align 8
  store %struct.Memory* %loadMem_442167, %struct.Memory** %MEMORY
  %loadMem_44216d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13193 = getelementptr inbounds %struct.GPR, %struct.GPR* %13192, i32 0, i32 33
  %13194 = getelementptr inbounds %struct.Reg, %struct.Reg* %13193, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %13194 to i64*
  %13195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13196 = getelementptr inbounds %struct.GPR, %struct.GPR* %13195, i32 0, i32 9
  %13197 = getelementptr inbounds %struct.Reg, %struct.Reg* %13196, i32 0, i32 0
  %RSI.i300 = bitcast %union.anon* %13197 to i64*
  %13198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13199 = getelementptr inbounds %struct.GPR, %struct.GPR* %13198, i32 0, i32 15
  %13200 = getelementptr inbounds %struct.Reg, %struct.Reg* %13199, i32 0, i32 0
  %RBP.i301 = bitcast %union.anon* %13200 to i64*
  %13201 = load i64, i64* %RBP.i301
  %13202 = sub i64 %13201, 32
  %13203 = load i64, i64* %PC.i299
  %13204 = add i64 %13203, 4
  store i64 %13204, i64* %PC.i299
  %13205 = inttoptr i64 %13202 to i32*
  %13206 = load i32, i32* %13205
  %13207 = sext i32 %13206 to i64
  store i64 %13207, i64* %RSI.i300, align 8
  store %struct.Memory* %loadMem_44216d, %struct.Memory** %MEMORY
  %loadMem_442171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13209 = getelementptr inbounds %struct.GPR, %struct.GPR* %13208, i32 0, i32 33
  %13210 = getelementptr inbounds %struct.Reg, %struct.Reg* %13209, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %13210 to i64*
  %13211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13212 = getelementptr inbounds %struct.GPR, %struct.GPR* %13211, i32 0, i32 9
  %13213 = getelementptr inbounds %struct.Reg, %struct.Reg* %13212, i32 0, i32 0
  %RSI.i298 = bitcast %union.anon* %13213 to i64*
  %13214 = load i64, i64* %RSI.i298
  %13215 = load i64, i64* %PC.i297
  %13216 = add i64 %13215, 4
  store i64 %13216, i64* %PC.i297
  %13217 = shl i64 %13214, 5
  %13218 = icmp slt i64 %13217, 0
  %13219 = shl i64 %13217, 1
  store i64 %13219, i64* %RSI.i298, align 8
  %13220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13221 = zext i1 %13218 to i8
  store i8 %13221, i8* %13220, align 1
  %13222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13223 = trunc i64 %13219 to i32
  %13224 = and i32 %13223, 254
  %13225 = call i32 @llvm.ctpop.i32(i32 %13224)
  %13226 = trunc i32 %13225 to i8
  %13227 = and i8 %13226, 1
  %13228 = xor i8 %13227, 1
  store i8 %13228, i8* %13222, align 1
  %13229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13229, align 1
  %13230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13231 = icmp eq i64 %13219, 0
  %13232 = zext i1 %13231 to i8
  store i8 %13232, i8* %13230, align 1
  %13233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13234 = lshr i64 %13219, 63
  %13235 = trunc i64 %13234 to i8
  store i8 %13235, i8* %13233, align 1
  %13236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13236, align 1
  store %struct.Memory* %loadMem_442171, %struct.Memory** %MEMORY
  %loadMem_442175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13238 = getelementptr inbounds %struct.GPR, %struct.GPR* %13237, i32 0, i32 33
  %13239 = getelementptr inbounds %struct.Reg, %struct.Reg* %13238, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %13239 to i64*
  %13240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13241 = getelementptr inbounds %struct.GPR, %struct.GPR* %13240, i32 0, i32 5
  %13242 = getelementptr inbounds %struct.Reg, %struct.Reg* %13241, i32 0, i32 0
  %RCX.i295 = bitcast %union.anon* %13242 to i64*
  %13243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13244 = getelementptr inbounds %struct.GPR, %struct.GPR* %13243, i32 0, i32 9
  %13245 = getelementptr inbounds %struct.Reg, %struct.Reg* %13244, i32 0, i32 0
  %RSI.i296 = bitcast %union.anon* %13245 to i64*
  %13246 = load i64, i64* %RCX.i295
  %13247 = load i64, i64* %RSI.i296
  %13248 = load i64, i64* %PC.i294
  %13249 = add i64 %13248, 3
  store i64 %13249, i64* %PC.i294
  %13250 = add i64 %13247, %13246
  store i64 %13250, i64* %RCX.i295, align 8
  %13251 = icmp ult i64 %13250, %13246
  %13252 = icmp ult i64 %13250, %13247
  %13253 = or i1 %13251, %13252
  %13254 = zext i1 %13253 to i8
  %13255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13254, i8* %13255, align 1
  %13256 = trunc i64 %13250 to i32
  %13257 = and i32 %13256, 255
  %13258 = call i32 @llvm.ctpop.i32(i32 %13257)
  %13259 = trunc i32 %13258 to i8
  %13260 = and i8 %13259, 1
  %13261 = xor i8 %13260, 1
  %13262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13261, i8* %13262, align 1
  %13263 = xor i64 %13247, %13246
  %13264 = xor i64 %13263, %13250
  %13265 = lshr i64 %13264, 4
  %13266 = trunc i64 %13265 to i8
  %13267 = and i8 %13266, 1
  %13268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13267, i8* %13268, align 1
  %13269 = icmp eq i64 %13250, 0
  %13270 = zext i1 %13269 to i8
  %13271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13270, i8* %13271, align 1
  %13272 = lshr i64 %13250, 63
  %13273 = trunc i64 %13272 to i8
  %13274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13273, i8* %13274, align 1
  %13275 = lshr i64 %13246, 63
  %13276 = lshr i64 %13247, 63
  %13277 = xor i64 %13272, %13275
  %13278 = xor i64 %13272, %13276
  %13279 = add i64 %13277, %13278
  %13280 = icmp eq i64 %13279, 2
  %13281 = zext i1 %13280 to i8
  %13282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13281, i8* %13282, align 1
  store %struct.Memory* %loadMem_442175, %struct.Memory** %MEMORY
  %loadMem_442178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13284 = getelementptr inbounds %struct.GPR, %struct.GPR* %13283, i32 0, i32 33
  %13285 = getelementptr inbounds %struct.Reg, %struct.Reg* %13284, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %13285 to i64*
  %13286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13287 = getelementptr inbounds %struct.GPR, %struct.GPR* %13286, i32 0, i32 9
  %13288 = getelementptr inbounds %struct.Reg, %struct.Reg* %13287, i32 0, i32 0
  %RSI.i292 = bitcast %union.anon* %13288 to i64*
  %13289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13290 = getelementptr inbounds %struct.GPR, %struct.GPR* %13289, i32 0, i32 15
  %13291 = getelementptr inbounds %struct.Reg, %struct.Reg* %13290, i32 0, i32 0
  %RBP.i293 = bitcast %union.anon* %13291 to i64*
  %13292 = load i64, i64* %RBP.i293
  %13293 = sub i64 %13292, 28
  %13294 = load i64, i64* %PC.i291
  %13295 = add i64 %13294, 4
  store i64 %13295, i64* %PC.i291
  %13296 = inttoptr i64 %13293 to i32*
  %13297 = load i32, i32* %13296
  %13298 = sext i32 %13297 to i64
  store i64 %13298, i64* %RSI.i292, align 8
  store %struct.Memory* %loadMem_442178, %struct.Memory** %MEMORY
  %loadMem_44217c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13300 = getelementptr inbounds %struct.GPR, %struct.GPR* %13299, i32 0, i32 33
  %13301 = getelementptr inbounds %struct.Reg, %struct.Reg* %13300, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %13301 to i64*
  %13302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13303 = getelementptr inbounds %struct.GPR, %struct.GPR* %13302, i32 0, i32 5
  %13304 = getelementptr inbounds %struct.Reg, %struct.Reg* %13303, i32 0, i32 0
  %RCX.i288 = bitcast %union.anon* %13304 to i64*
  %13305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13306 = getelementptr inbounds %struct.GPR, %struct.GPR* %13305, i32 0, i32 7
  %13307 = getelementptr inbounds %struct.Reg, %struct.Reg* %13306, i32 0, i32 0
  %RDX.i289 = bitcast %union.anon* %13307 to i64*
  %13308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13309 = getelementptr inbounds %struct.GPR, %struct.GPR* %13308, i32 0, i32 9
  %13310 = getelementptr inbounds %struct.Reg, %struct.Reg* %13309, i32 0, i32 0
  %RSI.i290 = bitcast %union.anon* %13310 to i64*
  %13311 = load i64, i64* %RDX.i289
  %13312 = load i64, i64* %RCX.i288
  %13313 = load i64, i64* %RSI.i290
  %13314 = mul i64 %13313, 4
  %13315 = add i64 %13314, %13312
  %13316 = load i64, i64* %PC.i287
  %13317 = add i64 %13316, 3
  store i64 %13317, i64* %PC.i287
  %13318 = trunc i64 %13311 to i32
  %13319 = inttoptr i64 %13315 to i32*
  %13320 = load i32, i32* %13319
  %13321 = add i32 %13320, %13318
  %13322 = zext i32 %13321 to i64
  store i64 %13322, i64* %RDX.i289, align 8
  %13323 = icmp ult i32 %13321, %13318
  %13324 = icmp ult i32 %13321, %13320
  %13325 = or i1 %13323, %13324
  %13326 = zext i1 %13325 to i8
  %13327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13326, i8* %13327, align 1
  %13328 = and i32 %13321, 255
  %13329 = call i32 @llvm.ctpop.i32(i32 %13328)
  %13330 = trunc i32 %13329 to i8
  %13331 = and i8 %13330, 1
  %13332 = xor i8 %13331, 1
  %13333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13332, i8* %13333, align 1
  %13334 = xor i32 %13320, %13318
  %13335 = xor i32 %13334, %13321
  %13336 = lshr i32 %13335, 4
  %13337 = trunc i32 %13336 to i8
  %13338 = and i8 %13337, 1
  %13339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13338, i8* %13339, align 1
  %13340 = icmp eq i32 %13321, 0
  %13341 = zext i1 %13340 to i8
  %13342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13341, i8* %13342, align 1
  %13343 = lshr i32 %13321, 31
  %13344 = trunc i32 %13343 to i8
  %13345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13344, i8* %13345, align 1
  %13346 = lshr i32 %13318, 31
  %13347 = lshr i32 %13320, 31
  %13348 = xor i32 %13343, %13346
  %13349 = xor i32 %13343, %13347
  %13350 = add i32 %13348, %13349
  %13351 = icmp eq i32 %13350, 2
  %13352 = zext i1 %13351 to i8
  %13353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13352, i8* %13353, align 1
  store %struct.Memory* %loadMem_44217c, %struct.Memory** %MEMORY
  %loadMem_44217f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13355 = getelementptr inbounds %struct.GPR, %struct.GPR* %13354, i32 0, i32 33
  %13356 = getelementptr inbounds %struct.Reg, %struct.Reg* %13355, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %13356 to i64*
  %13357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13358 = getelementptr inbounds %struct.GPR, %struct.GPR* %13357, i32 0, i32 1
  %13359 = getelementptr inbounds %struct.Reg, %struct.Reg* %13358, i32 0, i32 0
  %EAX.i285 = bitcast %union.anon* %13359 to i32*
  %13360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13361 = getelementptr inbounds %struct.GPR, %struct.GPR* %13360, i32 0, i32 7
  %13362 = getelementptr inbounds %struct.Reg, %struct.Reg* %13361, i32 0, i32 0
  %EDX.i286 = bitcast %union.anon* %13362 to i32*
  %13363 = load i32, i32* %EAX.i285
  %13364 = zext i32 %13363 to i64
  %13365 = load i32, i32* %EDX.i286
  %13366 = zext i32 %13365 to i64
  %13367 = load i64, i64* %PC.i284
  %13368 = add i64 %13367, 2
  store i64 %13368, i64* %PC.i284
  %13369 = sub i32 %13363, %13365
  %13370 = icmp ult i32 %13363, %13365
  %13371 = zext i1 %13370 to i8
  %13372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13371, i8* %13372, align 1
  %13373 = and i32 %13369, 255
  %13374 = call i32 @llvm.ctpop.i32(i32 %13373)
  %13375 = trunc i32 %13374 to i8
  %13376 = and i8 %13375, 1
  %13377 = xor i8 %13376, 1
  %13378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13377, i8* %13378, align 1
  %13379 = xor i64 %13366, %13364
  %13380 = trunc i64 %13379 to i32
  %13381 = xor i32 %13380, %13369
  %13382 = lshr i32 %13381, 4
  %13383 = trunc i32 %13382 to i8
  %13384 = and i8 %13383, 1
  %13385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13384, i8* %13385, align 1
  %13386 = icmp eq i32 %13369, 0
  %13387 = zext i1 %13386 to i8
  %13388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13387, i8* %13388, align 1
  %13389 = lshr i32 %13369, 31
  %13390 = trunc i32 %13389 to i8
  %13391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13390, i8* %13391, align 1
  %13392 = lshr i32 %13363, 31
  %13393 = lshr i32 %13365, 31
  %13394 = xor i32 %13393, %13392
  %13395 = xor i32 %13389, %13392
  %13396 = add i32 %13395, %13394
  %13397 = icmp eq i32 %13396, 2
  %13398 = zext i1 %13397 to i8
  %13399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13398, i8* %13399, align 1
  store %struct.Memory* %loadMem_44217f, %struct.Memory** %MEMORY
  %loadMem_442181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13401 = getelementptr inbounds %struct.GPR, %struct.GPR* %13400, i32 0, i32 33
  %13402 = getelementptr inbounds %struct.Reg, %struct.Reg* %13401, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %13402 to i64*
  %13403 = load i64, i64* %PC.i283
  %13404 = add i64 %13403, 19
  %13405 = load i64, i64* %PC.i283
  %13406 = add i64 %13405, 6
  %13407 = load i64, i64* %PC.i283
  %13408 = add i64 %13407, 6
  store i64 %13408, i64* %PC.i283
  %13409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13410 = load i8, i8* %13409, align 1
  %13411 = icmp ne i8 %13410, 0
  %13412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13413 = load i8, i8* %13412, align 1
  %13414 = icmp ne i8 %13413, 0
  %13415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13416 = load i8, i8* %13415, align 1
  %13417 = icmp ne i8 %13416, 0
  %13418 = xor i1 %13414, %13417
  %13419 = or i1 %13411, %13418
  %13420 = zext i1 %13419 to i8
  store i8 %13420, i8* %BRANCH_TAKEN, align 1
  %13421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13422 = select i1 %13419, i64 %13404, i64 %13406
  store i64 %13422, i64* %13421, align 8
  store %struct.Memory* %loadMem_442181, %struct.Memory** %MEMORY
  %loadBr_442181 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_442181 = icmp eq i8 %loadBr_442181, 1
  br i1 %cmpBr_442181, label %block_.L_442194, label %block_442187

block_442187:                                     ; preds = %block_.L_44215b
  %loadMem_442187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13424 = getelementptr inbounds %struct.GPR, %struct.GPR* %13423, i32 0, i32 33
  %13425 = getelementptr inbounds %struct.Reg, %struct.Reg* %13424, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %13425 to i64*
  %13426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13427 = getelementptr inbounds %struct.GPR, %struct.GPR* %13426, i32 0, i32 1
  %13428 = getelementptr inbounds %struct.Reg, %struct.Reg* %13427, i32 0, i32 0
  %EAX.i281 = bitcast %union.anon* %13428 to i32*
  %13429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13430 = getelementptr inbounds %struct.GPR, %struct.GPR* %13429, i32 0, i32 1
  %13431 = getelementptr inbounds %struct.Reg, %struct.Reg* %13430, i32 0, i32 0
  %RAX.i282 = bitcast %union.anon* %13431 to i64*
  %13432 = load i64, i64* %RAX.i282
  %13433 = load i32, i32* %EAX.i281
  %13434 = zext i32 %13433 to i64
  %13435 = load i64, i64* %PC.i280
  %13436 = add i64 %13435, 2
  store i64 %13436, i64* %PC.i280
  %13437 = xor i64 %13434, %13432
  %13438 = trunc i64 %13437 to i32
  %13439 = and i64 %13437, 4294967295
  store i64 %13439, i64* %RAX.i282, align 8
  %13440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13440, align 1
  %13441 = and i32 %13438, 255
  %13442 = call i32 @llvm.ctpop.i32(i32 %13441)
  %13443 = trunc i32 %13442 to i8
  %13444 = and i8 %13443, 1
  %13445 = xor i8 %13444, 1
  %13446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13445, i8* %13446, align 1
  %13447 = icmp eq i32 %13438, 0
  %13448 = zext i1 %13447 to i8
  %13449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13448, i8* %13449, align 1
  %13450 = lshr i32 %13438, 31
  %13451 = trunc i32 %13450 to i8
  %13452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13451, i8* %13452, align 1
  %13453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13453, align 1
  %13454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13454, align 1
  store %struct.Memory* %loadMem_442187, %struct.Memory** %MEMORY
  %loadMem_442189 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13456 = getelementptr inbounds %struct.GPR, %struct.GPR* %13455, i32 0, i32 33
  %13457 = getelementptr inbounds %struct.Reg, %struct.Reg* %13456, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %13457 to i64*
  %13458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13459 = getelementptr inbounds %struct.GPR, %struct.GPR* %13458, i32 0, i32 1
  %13460 = getelementptr inbounds %struct.Reg, %struct.Reg* %13459, i32 0, i32 0
  %EAX.i278 = bitcast %union.anon* %13460 to i32*
  %13461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13462 = getelementptr inbounds %struct.GPR, %struct.GPR* %13461, i32 0, i32 15
  %13463 = getelementptr inbounds %struct.Reg, %struct.Reg* %13462, i32 0, i32 0
  %RBP.i279 = bitcast %union.anon* %13463 to i64*
  %13464 = load i64, i64* %RBP.i279
  %13465 = sub i64 %13464, 308
  %13466 = load i32, i32* %EAX.i278
  %13467 = zext i32 %13466 to i64
  %13468 = load i64, i64* %PC.i277
  %13469 = add i64 %13468, 6
  store i64 %13469, i64* %PC.i277
  %13470 = inttoptr i64 %13465 to i32*
  store i32 %13466, i32* %13470
  store %struct.Memory* %loadMem_442189, %struct.Memory** %MEMORY
  %loadMem_44218f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13472 = getelementptr inbounds %struct.GPR, %struct.GPR* %13471, i32 0, i32 33
  %13473 = getelementptr inbounds %struct.Reg, %struct.Reg* %13472, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %13473 to i64*
  %13474 = load i64, i64* %PC.i276
  %13475 = add i64 %13474, 45
  %13476 = load i64, i64* %PC.i276
  %13477 = add i64 %13476, 5
  store i64 %13477, i64* %PC.i276
  %13478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13475, i64* %13478, align 8
  store %struct.Memory* %loadMem_44218f, %struct.Memory** %MEMORY
  br label %block_.L_4421bc

block_.L_442194:                                  ; preds = %block_.L_44215b
  %loadMem_442194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13480 = getelementptr inbounds %struct.GPR, %struct.GPR* %13479, i32 0, i32 33
  %13481 = getelementptr inbounds %struct.Reg, %struct.Reg* %13480, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %13481 to i64*
  %13482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13483 = getelementptr inbounds %struct.GPR, %struct.GPR* %13482, i32 0, i32 1
  %13484 = getelementptr inbounds %struct.Reg, %struct.Reg* %13483, i32 0, i32 0
  %RAX.i275 = bitcast %union.anon* %13484 to i64*
  %13485 = load i64, i64* %PC.i274
  %13486 = add i64 %13485, 10
  store i64 %13486, i64* %PC.i274
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RAX.i275, align 8
  store %struct.Memory* %loadMem_442194, %struct.Memory** %MEMORY
  %loadMem_44219e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13488 = getelementptr inbounds %struct.GPR, %struct.GPR* %13487, i32 0, i32 33
  %13489 = getelementptr inbounds %struct.Reg, %struct.Reg* %13488, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %13489 to i64*
  %13490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13491 = getelementptr inbounds %struct.GPR, %struct.GPR* %13490, i32 0, i32 5
  %13492 = getelementptr inbounds %struct.Reg, %struct.Reg* %13491, i32 0, i32 0
  %RCX.i272 = bitcast %union.anon* %13492 to i64*
  %13493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13494 = getelementptr inbounds %struct.GPR, %struct.GPR* %13493, i32 0, i32 15
  %13495 = getelementptr inbounds %struct.Reg, %struct.Reg* %13494, i32 0, i32 0
  %RBP.i273 = bitcast %union.anon* %13495 to i64*
  %13496 = load i64, i64* %RBP.i273
  %13497 = sub i64 %13496, 264
  %13498 = load i64, i64* %PC.i271
  %13499 = add i64 %13498, 6
  store i64 %13499, i64* %PC.i271
  %13500 = inttoptr i64 %13497 to i32*
  %13501 = load i32, i32* %13500
  %13502 = zext i32 %13501 to i64
  store i64 %13502, i64* %RCX.i272, align 8
  store %struct.Memory* %loadMem_44219e, %struct.Memory** %MEMORY
  %loadMem_4421a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13504 = getelementptr inbounds %struct.GPR, %struct.GPR* %13503, i32 0, i32 33
  %13505 = getelementptr inbounds %struct.Reg, %struct.Reg* %13504, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %13505 to i64*
  %13506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13507 = getelementptr inbounds %struct.GPR, %struct.GPR* %13506, i32 0, i32 7
  %13508 = getelementptr inbounds %struct.Reg, %struct.Reg* %13507, i32 0, i32 0
  %RDX.i269 = bitcast %union.anon* %13508 to i64*
  %13509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13510 = getelementptr inbounds %struct.GPR, %struct.GPR* %13509, i32 0, i32 15
  %13511 = getelementptr inbounds %struct.Reg, %struct.Reg* %13510, i32 0, i32 0
  %RBP.i270 = bitcast %union.anon* %13511 to i64*
  %13512 = load i64, i64* %RBP.i270
  %13513 = sub i64 %13512, 32
  %13514 = load i64, i64* %PC.i268
  %13515 = add i64 %13514, 4
  store i64 %13515, i64* %PC.i268
  %13516 = inttoptr i64 %13513 to i32*
  %13517 = load i32, i32* %13516
  %13518 = sext i32 %13517 to i64
  store i64 %13518, i64* %RDX.i269, align 8
  store %struct.Memory* %loadMem_4421a4, %struct.Memory** %MEMORY
  %loadMem_4421a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13520 = getelementptr inbounds %struct.GPR, %struct.GPR* %13519, i32 0, i32 33
  %13521 = getelementptr inbounds %struct.Reg, %struct.Reg* %13520, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %13521 to i64*
  %13522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13523 = getelementptr inbounds %struct.GPR, %struct.GPR* %13522, i32 0, i32 7
  %13524 = getelementptr inbounds %struct.Reg, %struct.Reg* %13523, i32 0, i32 0
  %RDX.i267 = bitcast %union.anon* %13524 to i64*
  %13525 = load i64, i64* %RDX.i267
  %13526 = load i64, i64* %PC.i266
  %13527 = add i64 %13526, 4
  store i64 %13527, i64* %PC.i266
  %13528 = shl i64 %13525, 5
  %13529 = icmp slt i64 %13528, 0
  %13530 = shl i64 %13528, 1
  store i64 %13530, i64* %RDX.i267, align 8
  %13531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13532 = zext i1 %13529 to i8
  store i8 %13532, i8* %13531, align 1
  %13533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13534 = trunc i64 %13530 to i32
  %13535 = and i32 %13534, 254
  %13536 = call i32 @llvm.ctpop.i32(i32 %13535)
  %13537 = trunc i32 %13536 to i8
  %13538 = and i8 %13537, 1
  %13539 = xor i8 %13538, 1
  store i8 %13539, i8* %13533, align 1
  %13540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13540, align 1
  %13541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13542 = icmp eq i64 %13530, 0
  %13543 = zext i1 %13542 to i8
  store i8 %13543, i8* %13541, align 1
  %13544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13545 = lshr i64 %13530, 63
  %13546 = trunc i64 %13545 to i8
  store i8 %13546, i8* %13544, align 1
  %13547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13547, align 1
  store %struct.Memory* %loadMem_4421a8, %struct.Memory** %MEMORY
  %loadMem_4421ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %13548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13549 = getelementptr inbounds %struct.GPR, %struct.GPR* %13548, i32 0, i32 33
  %13550 = getelementptr inbounds %struct.Reg, %struct.Reg* %13549, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %13550 to i64*
  %13551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13552 = getelementptr inbounds %struct.GPR, %struct.GPR* %13551, i32 0, i32 1
  %13553 = getelementptr inbounds %struct.Reg, %struct.Reg* %13552, i32 0, i32 0
  %RAX.i264 = bitcast %union.anon* %13553 to i64*
  %13554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13555 = getelementptr inbounds %struct.GPR, %struct.GPR* %13554, i32 0, i32 7
  %13556 = getelementptr inbounds %struct.Reg, %struct.Reg* %13555, i32 0, i32 0
  %RDX.i265 = bitcast %union.anon* %13556 to i64*
  %13557 = load i64, i64* %RAX.i264
  %13558 = load i64, i64* %RDX.i265
  %13559 = load i64, i64* %PC.i263
  %13560 = add i64 %13559, 3
  store i64 %13560, i64* %PC.i263
  %13561 = add i64 %13558, %13557
  store i64 %13561, i64* %RAX.i264, align 8
  %13562 = icmp ult i64 %13561, %13557
  %13563 = icmp ult i64 %13561, %13558
  %13564 = or i1 %13562, %13563
  %13565 = zext i1 %13564 to i8
  %13566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13565, i8* %13566, align 1
  %13567 = trunc i64 %13561 to i32
  %13568 = and i32 %13567, 255
  %13569 = call i32 @llvm.ctpop.i32(i32 %13568)
  %13570 = trunc i32 %13569 to i8
  %13571 = and i8 %13570, 1
  %13572 = xor i8 %13571, 1
  %13573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13572, i8* %13573, align 1
  %13574 = xor i64 %13558, %13557
  %13575 = xor i64 %13574, %13561
  %13576 = lshr i64 %13575, 4
  %13577 = trunc i64 %13576 to i8
  %13578 = and i8 %13577, 1
  %13579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13578, i8* %13579, align 1
  %13580 = icmp eq i64 %13561, 0
  %13581 = zext i1 %13580 to i8
  %13582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13581, i8* %13582, align 1
  %13583 = lshr i64 %13561, 63
  %13584 = trunc i64 %13583 to i8
  %13585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13584, i8* %13585, align 1
  %13586 = lshr i64 %13557, 63
  %13587 = lshr i64 %13558, 63
  %13588 = xor i64 %13583, %13586
  %13589 = xor i64 %13583, %13587
  %13590 = add i64 %13588, %13589
  %13591 = icmp eq i64 %13590, 2
  %13592 = zext i1 %13591 to i8
  %13593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13592, i8* %13593, align 1
  store %struct.Memory* %loadMem_4421ac, %struct.Memory** %MEMORY
  %loadMem_4421af = load %struct.Memory*, %struct.Memory** %MEMORY
  %13594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13595 = getelementptr inbounds %struct.GPR, %struct.GPR* %13594, i32 0, i32 33
  %13596 = getelementptr inbounds %struct.Reg, %struct.Reg* %13595, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %13596 to i64*
  %13597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13598 = getelementptr inbounds %struct.GPR, %struct.GPR* %13597, i32 0, i32 7
  %13599 = getelementptr inbounds %struct.Reg, %struct.Reg* %13598, i32 0, i32 0
  %RDX.i261 = bitcast %union.anon* %13599 to i64*
  %13600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13601 = getelementptr inbounds %struct.GPR, %struct.GPR* %13600, i32 0, i32 15
  %13602 = getelementptr inbounds %struct.Reg, %struct.Reg* %13601, i32 0, i32 0
  %RBP.i262 = bitcast %union.anon* %13602 to i64*
  %13603 = load i64, i64* %RBP.i262
  %13604 = sub i64 %13603, 28
  %13605 = load i64, i64* %PC.i260
  %13606 = add i64 %13605, 4
  store i64 %13606, i64* %PC.i260
  %13607 = inttoptr i64 %13604 to i32*
  %13608 = load i32, i32* %13607
  %13609 = sext i32 %13608 to i64
  store i64 %13609, i64* %RDX.i261, align 8
  store %struct.Memory* %loadMem_4421af, %struct.Memory** %MEMORY
  %loadMem_4421b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13611 = getelementptr inbounds %struct.GPR, %struct.GPR* %13610, i32 0, i32 33
  %13612 = getelementptr inbounds %struct.Reg, %struct.Reg* %13611, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %13612 to i64*
  %13613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13614 = getelementptr inbounds %struct.GPR, %struct.GPR* %13613, i32 0, i32 1
  %13615 = getelementptr inbounds %struct.Reg, %struct.Reg* %13614, i32 0, i32 0
  %RAX.i257 = bitcast %union.anon* %13615 to i64*
  %13616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13617 = getelementptr inbounds %struct.GPR, %struct.GPR* %13616, i32 0, i32 5
  %13618 = getelementptr inbounds %struct.Reg, %struct.Reg* %13617, i32 0, i32 0
  %RCX.i258 = bitcast %union.anon* %13618 to i64*
  %13619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13620 = getelementptr inbounds %struct.GPR, %struct.GPR* %13619, i32 0, i32 7
  %13621 = getelementptr inbounds %struct.Reg, %struct.Reg* %13620, i32 0, i32 0
  %RDX.i259 = bitcast %union.anon* %13621 to i64*
  %13622 = load i64, i64* %RCX.i258
  %13623 = load i64, i64* %RAX.i257
  %13624 = load i64, i64* %RDX.i259
  %13625 = mul i64 %13624, 4
  %13626 = add i64 %13625, %13623
  %13627 = load i64, i64* %PC.i256
  %13628 = add i64 %13627, 3
  store i64 %13628, i64* %PC.i256
  %13629 = trunc i64 %13622 to i32
  %13630 = inttoptr i64 %13626 to i32*
  %13631 = load i32, i32* %13630
  %13632 = add i32 %13631, %13629
  %13633 = zext i32 %13632 to i64
  store i64 %13633, i64* %RCX.i258, align 8
  %13634 = icmp ult i32 %13632, %13629
  %13635 = icmp ult i32 %13632, %13631
  %13636 = or i1 %13634, %13635
  %13637 = zext i1 %13636 to i8
  %13638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13637, i8* %13638, align 1
  %13639 = and i32 %13632, 255
  %13640 = call i32 @llvm.ctpop.i32(i32 %13639)
  %13641 = trunc i32 %13640 to i8
  %13642 = and i8 %13641, 1
  %13643 = xor i8 %13642, 1
  %13644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13643, i8* %13644, align 1
  %13645 = xor i32 %13631, %13629
  %13646 = xor i32 %13645, %13632
  %13647 = lshr i32 %13646, 4
  %13648 = trunc i32 %13647 to i8
  %13649 = and i8 %13648, 1
  %13650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13649, i8* %13650, align 1
  %13651 = icmp eq i32 %13632, 0
  %13652 = zext i1 %13651 to i8
  %13653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13652, i8* %13653, align 1
  %13654 = lshr i32 %13632, 31
  %13655 = trunc i32 %13654 to i8
  %13656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13655, i8* %13656, align 1
  %13657 = lshr i32 %13629, 31
  %13658 = lshr i32 %13631, 31
  %13659 = xor i32 %13654, %13657
  %13660 = xor i32 %13654, %13658
  %13661 = add i32 %13659, %13660
  %13662 = icmp eq i32 %13661, 2
  %13663 = zext i1 %13662 to i8
  %13664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13663, i8* %13664, align 1
  store %struct.Memory* %loadMem_4421b3, %struct.Memory** %MEMORY
  %loadMem_4421b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13666 = getelementptr inbounds %struct.GPR, %struct.GPR* %13665, i32 0, i32 33
  %13667 = getelementptr inbounds %struct.Reg, %struct.Reg* %13666, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %13667 to i64*
  %13668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13669 = getelementptr inbounds %struct.GPR, %struct.GPR* %13668, i32 0, i32 5
  %13670 = getelementptr inbounds %struct.Reg, %struct.Reg* %13669, i32 0, i32 0
  %ECX.i254 = bitcast %union.anon* %13670 to i32*
  %13671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13672 = getelementptr inbounds %struct.GPR, %struct.GPR* %13671, i32 0, i32 15
  %13673 = getelementptr inbounds %struct.Reg, %struct.Reg* %13672, i32 0, i32 0
  %RBP.i255 = bitcast %union.anon* %13673 to i64*
  %13674 = load i64, i64* %RBP.i255
  %13675 = sub i64 %13674, 308
  %13676 = load i32, i32* %ECX.i254
  %13677 = zext i32 %13676 to i64
  %13678 = load i64, i64* %PC.i253
  %13679 = add i64 %13678, 6
  store i64 %13679, i64* %PC.i253
  %13680 = inttoptr i64 %13675 to i32*
  store i32 %13676, i32* %13680
  store %struct.Memory* %loadMem_4421b6, %struct.Memory** %MEMORY
  br label %block_.L_4421bc

block_.L_4421bc:                                  ; preds = %block_.L_442194, %block_442187
  %loadMem_4421bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13682 = getelementptr inbounds %struct.GPR, %struct.GPR* %13681, i32 0, i32 33
  %13683 = getelementptr inbounds %struct.Reg, %struct.Reg* %13682, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %13683 to i64*
  %13684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13685 = getelementptr inbounds %struct.GPR, %struct.GPR* %13684, i32 0, i32 1
  %13686 = getelementptr inbounds %struct.Reg, %struct.Reg* %13685, i32 0, i32 0
  %RAX.i251 = bitcast %union.anon* %13686 to i64*
  %13687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13688 = getelementptr inbounds %struct.GPR, %struct.GPR* %13687, i32 0, i32 15
  %13689 = getelementptr inbounds %struct.Reg, %struct.Reg* %13688, i32 0, i32 0
  %RBP.i252 = bitcast %union.anon* %13689 to i64*
  %13690 = load i64, i64* %RBP.i252
  %13691 = sub i64 %13690, 308
  %13692 = load i64, i64* %PC.i250
  %13693 = add i64 %13692, 6
  store i64 %13693, i64* %PC.i250
  %13694 = inttoptr i64 %13691 to i32*
  %13695 = load i32, i32* %13694
  %13696 = zext i32 %13695 to i64
  store i64 %13696, i64* %RAX.i251, align 8
  store %struct.Memory* %loadMem_4421bc, %struct.Memory** %MEMORY
  %loadMem_4421c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13698 = getelementptr inbounds %struct.GPR, %struct.GPR* %13697, i32 0, i32 33
  %13699 = getelementptr inbounds %struct.Reg, %struct.Reg* %13698, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %13699 to i64*
  %13700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13701 = getelementptr inbounds %struct.GPR, %struct.GPR* %13700, i32 0, i32 1
  %13702 = getelementptr inbounds %struct.Reg, %struct.Reg* %13701, i32 0, i32 0
  %EAX.i248 = bitcast %union.anon* %13702 to i32*
  %13703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13704 = getelementptr inbounds %struct.GPR, %struct.GPR* %13703, i32 0, i32 15
  %13705 = getelementptr inbounds %struct.Reg, %struct.Reg* %13704, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %13705 to i64*
  %13706 = load i64, i64* %RBP.i249
  %13707 = sub i64 %13706, 304
  %13708 = load i32, i32* %EAX.i248
  %13709 = zext i32 %13708 to i64
  %13710 = load i64, i64* %PC.i247
  %13711 = add i64 %13710, 6
  store i64 %13711, i64* %PC.i247
  %13712 = inttoptr i64 %13707 to i32*
  store i32 %13708, i32* %13712
  store %struct.Memory* %loadMem_4421c2, %struct.Memory** %MEMORY
  br label %block_.L_4421c8

block_.L_4421c8:                                  ; preds = %block_.L_4421bc, %block_442142
  %loadMem_4421c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13714 = getelementptr inbounds %struct.GPR, %struct.GPR* %13713, i32 0, i32 33
  %13715 = getelementptr inbounds %struct.Reg, %struct.Reg* %13714, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %13715 to i64*
  %13716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13717 = getelementptr inbounds %struct.GPR, %struct.GPR* %13716, i32 0, i32 1
  %13718 = getelementptr inbounds %struct.Reg, %struct.Reg* %13717, i32 0, i32 0
  %RAX.i245 = bitcast %union.anon* %13718 to i64*
  %13719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13720 = getelementptr inbounds %struct.GPR, %struct.GPR* %13719, i32 0, i32 15
  %13721 = getelementptr inbounds %struct.Reg, %struct.Reg* %13720, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %13721 to i64*
  %13722 = load i64, i64* %RBP.i246
  %13723 = sub i64 %13722, 304
  %13724 = load i64, i64* %PC.i244
  %13725 = add i64 %13724, 6
  store i64 %13725, i64* %PC.i244
  %13726 = inttoptr i64 %13723 to i32*
  %13727 = load i32, i32* %13726
  %13728 = zext i32 %13727 to i64
  store i64 %13728, i64* %RAX.i245, align 8
  store %struct.Memory* %loadMem_4421c8, %struct.Memory** %MEMORY
  %loadMem_4421ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %13729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13730 = getelementptr inbounds %struct.GPR, %struct.GPR* %13729, i32 0, i32 33
  %13731 = getelementptr inbounds %struct.Reg, %struct.Reg* %13730, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %13731 to i64*
  %13732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13733 = getelementptr inbounds %struct.GPR, %struct.GPR* %13732, i32 0, i32 5
  %13734 = getelementptr inbounds %struct.Reg, %struct.Reg* %13733, i32 0, i32 0
  %ECX.i242 = bitcast %union.anon* %13734 to i32*
  %13735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13736 = getelementptr inbounds %struct.GPR, %struct.GPR* %13735, i32 0, i32 5
  %13737 = getelementptr inbounds %struct.Reg, %struct.Reg* %13736, i32 0, i32 0
  %RCX.i243 = bitcast %union.anon* %13737 to i64*
  %13738 = load i64, i64* %RCX.i243
  %13739 = load i32, i32* %ECX.i242
  %13740 = zext i32 %13739 to i64
  %13741 = load i64, i64* %PC.i241
  %13742 = add i64 %13741, 2
  store i64 %13742, i64* %PC.i241
  %13743 = xor i64 %13740, %13738
  %13744 = trunc i64 %13743 to i32
  %13745 = and i64 %13743, 4294967295
  store i64 %13745, i64* %RCX.i243, align 8
  %13746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13746, align 1
  %13747 = and i32 %13744, 255
  %13748 = call i32 @llvm.ctpop.i32(i32 %13747)
  %13749 = trunc i32 %13748 to i8
  %13750 = and i8 %13749, 1
  %13751 = xor i8 %13750, 1
  %13752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13751, i8* %13752, align 1
  %13753 = icmp eq i32 %13744, 0
  %13754 = zext i1 %13753 to i8
  %13755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13754, i8* %13755, align 1
  %13756 = lshr i32 %13744, 31
  %13757 = trunc i32 %13756 to i8
  %13758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13757, i8* %13758, align 1
  %13759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13759, align 1
  %13760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13760, align 1
  store %struct.Memory* %loadMem_4421ce, %struct.Memory** %MEMORY
  %loadMem_4421d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13762 = getelementptr inbounds %struct.GPR, %struct.GPR* %13761, i32 0, i32 33
  %13763 = getelementptr inbounds %struct.Reg, %struct.Reg* %13762, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %13763 to i64*
  %13764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13765 = getelementptr inbounds %struct.GPR, %struct.GPR* %13764, i32 0, i32 7
  %13766 = getelementptr inbounds %struct.Reg, %struct.Reg* %13765, i32 0, i32 0
  %RDX.i240 = bitcast %union.anon* %13766 to i64*
  %13767 = load i64, i64* %PC.i239
  %13768 = add i64 %13767, 10
  store i64 %13768, i64* %PC.i239
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RDX.i240, align 8
  store %struct.Memory* %loadMem_4421d0, %struct.Memory** %MEMORY
  %loadMem_4421da = load %struct.Memory*, %struct.Memory** %MEMORY
  %13769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13770 = getelementptr inbounds %struct.GPR, %struct.GPR* %13769, i32 0, i32 33
  %13771 = getelementptr inbounds %struct.Reg, %struct.Reg* %13770, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %13771 to i64*
  %13772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13773 = getelementptr inbounds %struct.GPR, %struct.GPR* %13772, i32 0, i32 7
  %13774 = getelementptr inbounds %struct.Reg, %struct.Reg* %13773, i32 0, i32 0
  %RDX.i238 = bitcast %union.anon* %13774 to i64*
  %13775 = load i64, i64* %RDX.i238
  %13776 = load i64, i64* %PC.i237
  %13777 = add i64 %13776, 7
  store i64 %13777, i64* %PC.i237
  %13778 = add i64 2048, %13775
  store i64 %13778, i64* %RDX.i238, align 8
  %13779 = icmp ult i64 %13778, %13775
  %13780 = icmp ult i64 %13778, 2048
  %13781 = or i1 %13779, %13780
  %13782 = zext i1 %13781 to i8
  %13783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13782, i8* %13783, align 1
  %13784 = trunc i64 %13778 to i32
  %13785 = and i32 %13784, 255
  %13786 = call i32 @llvm.ctpop.i32(i32 %13785)
  %13787 = trunc i32 %13786 to i8
  %13788 = and i8 %13787, 1
  %13789 = xor i8 %13788, 1
  %13790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13789, i8* %13790, align 1
  %13791 = xor i64 2048, %13775
  %13792 = xor i64 %13791, %13778
  %13793 = lshr i64 %13792, 4
  %13794 = trunc i64 %13793 to i8
  %13795 = and i8 %13794, 1
  %13796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13795, i8* %13796, align 1
  %13797 = icmp eq i64 %13778, 0
  %13798 = zext i1 %13797 to i8
  %13799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13798, i8* %13799, align 1
  %13800 = lshr i64 %13778, 63
  %13801 = trunc i64 %13800 to i8
  %13802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13801, i8* %13802, align 1
  %13803 = lshr i64 %13775, 63
  %13804 = xor i64 %13800, %13803
  %13805 = add i64 %13804, %13800
  %13806 = icmp eq i64 %13805, 2
  %13807 = zext i1 %13806 to i8
  %13808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13807, i8* %13808, align 1
  store %struct.Memory* %loadMem_4421da, %struct.Memory** %MEMORY
  %loadMem_4421e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13810 = getelementptr inbounds %struct.GPR, %struct.GPR* %13809, i32 0, i32 33
  %13811 = getelementptr inbounds %struct.Reg, %struct.Reg* %13810, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %13811 to i64*
  %13812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13813 = getelementptr inbounds %struct.GPR, %struct.GPR* %13812, i32 0, i32 1
  %13814 = getelementptr inbounds %struct.Reg, %struct.Reg* %13813, i32 0, i32 0
  %AX.i235 = bitcast %union.anon* %13814 to i16*
  %13815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13816 = getelementptr inbounds %struct.GPR, %struct.GPR* %13815, i32 0, i32 9
  %13817 = getelementptr inbounds %struct.Reg, %struct.Reg* %13816, i32 0, i32 0
  %SI.i236 = bitcast %union.anon* %13817 to i16*
  %13818 = load i16, i16* %AX.i235
  %13819 = zext i16 %13818 to i64
  %13820 = load i64, i64* %PC.i234
  %13821 = add i64 %13820, 3
  store i64 %13821, i64* %PC.i234
  store i16 %13818, i16* %SI.i236, align 2
  store %struct.Memory* %loadMem_4421e1, %struct.Memory** %MEMORY
  %loadMem_4421e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13823 = getelementptr inbounds %struct.GPR, %struct.GPR* %13822, i32 0, i32 33
  %13824 = getelementptr inbounds %struct.Reg, %struct.Reg* %13823, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %13824 to i64*
  %13825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13826 = getelementptr inbounds %struct.GPR, %struct.GPR* %13825, i32 0, i32 11
  %13827 = getelementptr inbounds %struct.Reg, %struct.Reg* %13826, i32 0, i32 0
  %RDI.i233 = bitcast %union.anon* %13827 to i64*
  %13828 = load i64, i64* %PC.i232
  %13829 = add i64 %13828, 8
  store i64 %13829, i64* %PC.i232
  %13830 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %13830, i64* %RDI.i233, align 8
  store %struct.Memory* %loadMem_4421e4, %struct.Memory** %MEMORY
  %loadMem_4421ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %13831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13832 = getelementptr inbounds %struct.GPR, %struct.GPR* %13831, i32 0, i32 33
  %13833 = getelementptr inbounds %struct.Reg, %struct.Reg* %13832, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %13833 to i64*
  %13834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13835 = getelementptr inbounds %struct.GPR, %struct.GPR* %13834, i32 0, i32 11
  %13836 = getelementptr inbounds %struct.Reg, %struct.Reg* %13835, i32 0, i32 0
  %RDI.i231 = bitcast %union.anon* %13836 to i64*
  %13837 = load i64, i64* %RDI.i231
  %13838 = add i64 %13837, 6424
  %13839 = load i64, i64* %PC.i230
  %13840 = add i64 %13839, 7
  store i64 %13840, i64* %PC.i230
  %13841 = inttoptr i64 %13838 to i64*
  %13842 = load i64, i64* %13841
  store i64 %13842, i64* %RDI.i231, align 8
  store %struct.Memory* %loadMem_4421ec, %struct.Memory** %MEMORY
  %loadMem_4421f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13844 = getelementptr inbounds %struct.GPR, %struct.GPR* %13843, i32 0, i32 33
  %13845 = getelementptr inbounds %struct.Reg, %struct.Reg* %13844, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %13845 to i64*
  %13846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13847 = getelementptr inbounds %struct.GPR, %struct.GPR* %13846, i32 0, i32 17
  %13848 = getelementptr inbounds %struct.Reg, %struct.Reg* %13847, i32 0, i32 0
  %R8.i229 = bitcast %union.anon* %13848 to i64*
  %13849 = load i64, i64* %PC.i228
  %13850 = add i64 %13849, 8
  store i64 %13850, i64* %PC.i228
  %13851 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13851, i64* %R8.i229, align 8
  store %struct.Memory* %loadMem_4421f3, %struct.Memory** %MEMORY
  %loadMem_4421fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13853 = getelementptr inbounds %struct.GPR, %struct.GPR* %13852, i32 0, i32 33
  %13854 = getelementptr inbounds %struct.Reg, %struct.Reg* %13853, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %13854 to i64*
  %13855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13856 = getelementptr inbounds %struct.GPR, %struct.GPR* %13855, i32 0, i32 1
  %13857 = getelementptr inbounds %struct.Reg, %struct.Reg* %13856, i32 0, i32 0
  %RAX.i226 = bitcast %union.anon* %13857 to i64*
  %13858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13859 = getelementptr inbounds %struct.GPR, %struct.GPR* %13858, i32 0, i32 17
  %13860 = getelementptr inbounds %struct.Reg, %struct.Reg* %13859, i32 0, i32 0
  %R8.i227 = bitcast %union.anon* %13860 to i64*
  %13861 = load i64, i64* %R8.i227
  %13862 = add i64 %13861, 156
  %13863 = load i64, i64* %PC.i225
  %13864 = add i64 %13863, 7
  store i64 %13864, i64* %PC.i225
  %13865 = inttoptr i64 %13862 to i32*
  %13866 = load i32, i32* %13865
  %13867 = zext i32 %13866 to i64
  store i64 %13867, i64* %RAX.i226, align 8
  store %struct.Memory* %loadMem_4421fb, %struct.Memory** %MEMORY
  %loadMem_442202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13869 = getelementptr inbounds %struct.GPR, %struct.GPR* %13868, i32 0, i32 33
  %13870 = getelementptr inbounds %struct.Reg, %struct.Reg* %13869, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %13870 to i64*
  %13871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13872 = getelementptr inbounds %struct.GPR, %struct.GPR* %13871, i32 0, i32 1
  %13873 = getelementptr inbounds %struct.Reg, %struct.Reg* %13872, i32 0, i32 0
  %RAX.i223 = bitcast %union.anon* %13873 to i64*
  %13874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13875 = getelementptr inbounds %struct.GPR, %struct.GPR* %13874, i32 0, i32 15
  %13876 = getelementptr inbounds %struct.Reg, %struct.Reg* %13875, i32 0, i32 0
  %RBP.i224 = bitcast %union.anon* %13876 to i64*
  %13877 = load i64, i64* %RAX.i223
  %13878 = load i64, i64* %RBP.i224
  %13879 = sub i64 %13878, 28
  %13880 = load i64, i64* %PC.i222
  %13881 = add i64 %13880, 3
  store i64 %13881, i64* %PC.i222
  %13882 = trunc i64 %13877 to i32
  %13883 = inttoptr i64 %13879 to i32*
  %13884 = load i32, i32* %13883
  %13885 = add i32 %13884, %13882
  %13886 = zext i32 %13885 to i64
  store i64 %13886, i64* %RAX.i223, align 8
  %13887 = icmp ult i32 %13885, %13882
  %13888 = icmp ult i32 %13885, %13884
  %13889 = or i1 %13887, %13888
  %13890 = zext i1 %13889 to i8
  %13891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13890, i8* %13891, align 1
  %13892 = and i32 %13885, 255
  %13893 = call i32 @llvm.ctpop.i32(i32 %13892)
  %13894 = trunc i32 %13893 to i8
  %13895 = and i8 %13894, 1
  %13896 = xor i8 %13895, 1
  %13897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13896, i8* %13897, align 1
  %13898 = xor i32 %13884, %13882
  %13899 = xor i32 %13898, %13885
  %13900 = lshr i32 %13899, 4
  %13901 = trunc i32 %13900 to i8
  %13902 = and i8 %13901, 1
  %13903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13902, i8* %13903, align 1
  %13904 = icmp eq i32 %13885, 0
  %13905 = zext i1 %13904 to i8
  %13906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13905, i8* %13906, align 1
  %13907 = lshr i32 %13885, 31
  %13908 = trunc i32 %13907 to i8
  %13909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13908, i8* %13909, align 1
  %13910 = lshr i32 %13882, 31
  %13911 = lshr i32 %13884, 31
  %13912 = xor i32 %13907, %13910
  %13913 = xor i32 %13907, %13911
  %13914 = add i32 %13912, %13913
  %13915 = icmp eq i32 %13914, 2
  %13916 = zext i1 %13915 to i8
  %13917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13916, i8* %13917, align 1
  store %struct.Memory* %loadMem_442202, %struct.Memory** %MEMORY
  %loadMem_442205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13919 = getelementptr inbounds %struct.GPR, %struct.GPR* %13918, i32 0, i32 33
  %13920 = getelementptr inbounds %struct.Reg, %struct.Reg* %13919, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %13920 to i64*
  %13921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13922 = getelementptr inbounds %struct.GPR, %struct.GPR* %13921, i32 0, i32 1
  %13923 = getelementptr inbounds %struct.Reg, %struct.Reg* %13922, i32 0, i32 0
  %EAX.i220 = bitcast %union.anon* %13923 to i32*
  %13924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13925 = getelementptr inbounds %struct.GPR, %struct.GPR* %13924, i32 0, i32 17
  %13926 = getelementptr inbounds %struct.Reg, %struct.Reg* %13925, i32 0, i32 0
  %R8.i221 = bitcast %union.anon* %13926 to i64*
  %13927 = load i32, i32* %EAX.i220
  %13928 = zext i32 %13927 to i64
  %13929 = load i64, i64* %PC.i219
  %13930 = add i64 %13929, 3
  store i64 %13930, i64* %PC.i219
  %13931 = shl i64 %13928, 32
  %13932 = ashr exact i64 %13931, 32
  store i64 %13932, i64* %R8.i221, align 8
  store %struct.Memory* %loadMem_442205, %struct.Memory** %MEMORY
  %loadMem_442208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13934 = getelementptr inbounds %struct.GPR, %struct.GPR* %13933, i32 0, i32 33
  %13935 = getelementptr inbounds %struct.Reg, %struct.Reg* %13934, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %13935 to i64*
  %13936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13937 = getelementptr inbounds %struct.GPR, %struct.GPR* %13936, i32 0, i32 11
  %13938 = getelementptr inbounds %struct.Reg, %struct.Reg* %13937, i32 0, i32 0
  %RDI.i217 = bitcast %union.anon* %13938 to i64*
  %13939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13940 = getelementptr inbounds %struct.GPR, %struct.GPR* %13939, i32 0, i32 17
  %13941 = getelementptr inbounds %struct.Reg, %struct.Reg* %13940, i32 0, i32 0
  %R8.i218 = bitcast %union.anon* %13941 to i64*
  %13942 = load i64, i64* %RDI.i217
  %13943 = load i64, i64* %R8.i218
  %13944 = mul i64 %13943, 8
  %13945 = add i64 %13944, %13942
  %13946 = load i64, i64* %PC.i216
  %13947 = add i64 %13946, 4
  store i64 %13947, i64* %PC.i216
  %13948 = inttoptr i64 %13945 to i64*
  %13949 = load i64, i64* %13948
  store i64 %13949, i64* %RDI.i217, align 8
  store %struct.Memory* %loadMem_442208, %struct.Memory** %MEMORY
  %loadMem_44220c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13951 = getelementptr inbounds %struct.GPR, %struct.GPR* %13950, i32 0, i32 33
  %13952 = getelementptr inbounds %struct.Reg, %struct.Reg* %13951, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %13952 to i64*
  %13953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13954 = getelementptr inbounds %struct.GPR, %struct.GPR* %13953, i32 0, i32 17
  %13955 = getelementptr inbounds %struct.Reg, %struct.Reg* %13954, i32 0, i32 0
  %R8.i215 = bitcast %union.anon* %13955 to i64*
  %13956 = load i64, i64* %PC.i214
  %13957 = add i64 %13956, 8
  store i64 %13957, i64* %PC.i214
  %13958 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13958, i64* %R8.i215, align 8
  store %struct.Memory* %loadMem_44220c, %struct.Memory** %MEMORY
  %loadMem_442214 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13960 = getelementptr inbounds %struct.GPR, %struct.GPR* %13959, i32 0, i32 33
  %13961 = getelementptr inbounds %struct.Reg, %struct.Reg* %13960, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %13961 to i64*
  %13962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13963 = getelementptr inbounds %struct.GPR, %struct.GPR* %13962, i32 0, i32 1
  %13964 = getelementptr inbounds %struct.Reg, %struct.Reg* %13963, i32 0, i32 0
  %RAX.i212 = bitcast %union.anon* %13964 to i64*
  %13965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13966 = getelementptr inbounds %struct.GPR, %struct.GPR* %13965, i32 0, i32 17
  %13967 = getelementptr inbounds %struct.Reg, %struct.Reg* %13966, i32 0, i32 0
  %R8.i213 = bitcast %union.anon* %13967 to i64*
  %13968 = load i64, i64* %R8.i213
  %13969 = add i64 %13968, 152
  %13970 = load i64, i64* %PC.i211
  %13971 = add i64 %13970, 7
  store i64 %13971, i64* %PC.i211
  %13972 = inttoptr i64 %13969 to i32*
  %13973 = load i32, i32* %13972
  %13974 = zext i32 %13973 to i64
  store i64 %13974, i64* %RAX.i212, align 8
  store %struct.Memory* %loadMem_442214, %struct.Memory** %MEMORY
  %loadMem_44221b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13976 = getelementptr inbounds %struct.GPR, %struct.GPR* %13975, i32 0, i32 33
  %13977 = getelementptr inbounds %struct.Reg, %struct.Reg* %13976, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %13977 to i64*
  %13978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13979 = getelementptr inbounds %struct.GPR, %struct.GPR* %13978, i32 0, i32 1
  %13980 = getelementptr inbounds %struct.Reg, %struct.Reg* %13979, i32 0, i32 0
  %RAX.i209 = bitcast %union.anon* %13980 to i64*
  %13981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13982 = getelementptr inbounds %struct.GPR, %struct.GPR* %13981, i32 0, i32 15
  %13983 = getelementptr inbounds %struct.Reg, %struct.Reg* %13982, i32 0, i32 0
  %RBP.i210 = bitcast %union.anon* %13983 to i64*
  %13984 = load i64, i64* %RAX.i209
  %13985 = load i64, i64* %RBP.i210
  %13986 = sub i64 %13985, 32
  %13987 = load i64, i64* %PC.i208
  %13988 = add i64 %13987, 3
  store i64 %13988, i64* %PC.i208
  %13989 = trunc i64 %13984 to i32
  %13990 = inttoptr i64 %13986 to i32*
  %13991 = load i32, i32* %13990
  %13992 = add i32 %13991, %13989
  %13993 = zext i32 %13992 to i64
  store i64 %13993, i64* %RAX.i209, align 8
  %13994 = icmp ult i32 %13992, %13989
  %13995 = icmp ult i32 %13992, %13991
  %13996 = or i1 %13994, %13995
  %13997 = zext i1 %13996 to i8
  %13998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13997, i8* %13998, align 1
  %13999 = and i32 %13992, 255
  %14000 = call i32 @llvm.ctpop.i32(i32 %13999)
  %14001 = trunc i32 %14000 to i8
  %14002 = and i8 %14001, 1
  %14003 = xor i8 %14002, 1
  %14004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14003, i8* %14004, align 1
  %14005 = xor i32 %13991, %13989
  %14006 = xor i32 %14005, %13992
  %14007 = lshr i32 %14006, 4
  %14008 = trunc i32 %14007 to i8
  %14009 = and i8 %14008, 1
  %14010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14009, i8* %14010, align 1
  %14011 = icmp eq i32 %13992, 0
  %14012 = zext i1 %14011 to i8
  %14013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14012, i8* %14013, align 1
  %14014 = lshr i32 %13992, 31
  %14015 = trunc i32 %14014 to i8
  %14016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14015, i8* %14016, align 1
  %14017 = lshr i32 %13989, 31
  %14018 = lshr i32 %13991, 31
  %14019 = xor i32 %14014, %14017
  %14020 = xor i32 %14014, %14018
  %14021 = add i32 %14019, %14020
  %14022 = icmp eq i32 %14021, 2
  %14023 = zext i1 %14022 to i8
  %14024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14023, i8* %14024, align 1
  store %struct.Memory* %loadMem_44221b, %struct.Memory** %MEMORY
  %loadMem_44221e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14026 = getelementptr inbounds %struct.GPR, %struct.GPR* %14025, i32 0, i32 33
  %14027 = getelementptr inbounds %struct.Reg, %struct.Reg* %14026, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %14027 to i64*
  %14028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14029 = getelementptr inbounds %struct.GPR, %struct.GPR* %14028, i32 0, i32 1
  %14030 = getelementptr inbounds %struct.Reg, %struct.Reg* %14029, i32 0, i32 0
  %EAX.i206 = bitcast %union.anon* %14030 to i32*
  %14031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14032 = getelementptr inbounds %struct.GPR, %struct.GPR* %14031, i32 0, i32 17
  %14033 = getelementptr inbounds %struct.Reg, %struct.Reg* %14032, i32 0, i32 0
  %R8.i207 = bitcast %union.anon* %14033 to i64*
  %14034 = load i32, i32* %EAX.i206
  %14035 = zext i32 %14034 to i64
  %14036 = load i64, i64* %PC.i205
  %14037 = add i64 %14036, 3
  store i64 %14037, i64* %PC.i205
  %14038 = shl i64 %14035, 32
  %14039 = ashr exact i64 %14038, 32
  store i64 %14039, i64* %R8.i207, align 8
  store %struct.Memory* %loadMem_44221e, %struct.Memory** %MEMORY
  %loadMem_442221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14041 = getelementptr inbounds %struct.GPR, %struct.GPR* %14040, i32 0, i32 33
  %14042 = getelementptr inbounds %struct.Reg, %struct.Reg* %14041, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %14042 to i64*
  %14043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14044 = getelementptr inbounds %struct.GPR, %struct.GPR* %14043, i32 0, i32 9
  %14045 = getelementptr inbounds %struct.Reg, %struct.Reg* %14044, i32 0, i32 0
  %SI.i = bitcast %union.anon* %14045 to i16*
  %14046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14047 = getelementptr inbounds %struct.GPR, %struct.GPR* %14046, i32 0, i32 11
  %14048 = getelementptr inbounds %struct.Reg, %struct.Reg* %14047, i32 0, i32 0
  %RDI.i204 = bitcast %union.anon* %14048 to i64*
  %14049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14050 = getelementptr inbounds %struct.GPR, %struct.GPR* %14049, i32 0, i32 17
  %14051 = getelementptr inbounds %struct.Reg, %struct.Reg* %14050, i32 0, i32 0
  %R8.i = bitcast %union.anon* %14051 to i64*
  %14052 = load i64, i64* %RDI.i204
  %14053 = load i64, i64* %R8.i
  %14054 = mul i64 %14053, 2
  %14055 = add i64 %14054, %14052
  %14056 = load i16, i16* %SI.i
  %14057 = zext i16 %14056 to i64
  %14058 = load i64, i64* %PC.i203
  %14059 = add i64 %14058, 5
  store i64 %14059, i64* %PC.i203
  %14060 = inttoptr i64 %14055 to i16*
  store i16 %14056, i16* %14060
  store %struct.Memory* %loadMem_442221, %struct.Memory** %MEMORY
  %loadMem_442226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14062 = getelementptr inbounds %struct.GPR, %struct.GPR* %14061, i32 0, i32 33
  %14063 = getelementptr inbounds %struct.Reg, %struct.Reg* %14062, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %14063 to i64*
  %14064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14065 = getelementptr inbounds %struct.GPR, %struct.GPR* %14064, i32 0, i32 11
  %14066 = getelementptr inbounds %struct.Reg, %struct.Reg* %14065, i32 0, i32 0
  %RDI.i202 = bitcast %union.anon* %14066 to i64*
  %14067 = load i64, i64* %PC.i201
  %14068 = add i64 %14067, 8
  store i64 %14068, i64* %PC.i201
  %14069 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %14069, i64* %RDI.i202, align 8
  store %struct.Memory* %loadMem_442226, %struct.Memory** %MEMORY
  %loadMem_44222e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14071 = getelementptr inbounds %struct.GPR, %struct.GPR* %14070, i32 0, i32 33
  %14072 = getelementptr inbounds %struct.Reg, %struct.Reg* %14071, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %14072 to i64*
  %14073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14074 = getelementptr inbounds %struct.GPR, %struct.GPR* %14073, i32 0, i32 1
  %14075 = getelementptr inbounds %struct.Reg, %struct.Reg* %14074, i32 0, i32 0
  %RAX.i199 = bitcast %union.anon* %14075 to i64*
  %14076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14077 = getelementptr inbounds %struct.GPR, %struct.GPR* %14076, i32 0, i32 11
  %14078 = getelementptr inbounds %struct.Reg, %struct.Reg* %14077, i32 0, i32 0
  %RDI.i200 = bitcast %union.anon* %14078 to i64*
  %14079 = load i64, i64* %RDI.i200
  %14080 = add i64 %14079, 72688
  %14081 = load i64, i64* %PC.i198
  %14082 = add i64 %14081, 6
  store i64 %14082, i64* %PC.i198
  %14083 = inttoptr i64 %14080 to i32*
  %14084 = load i32, i32* %14083
  %14085 = zext i32 %14084 to i64
  store i64 %14085, i64* %RAX.i199, align 8
  store %struct.Memory* %loadMem_44222e, %struct.Memory** %MEMORY
  %loadMem_442234 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14087 = getelementptr inbounds %struct.GPR, %struct.GPR* %14086, i32 0, i32 33
  %14088 = getelementptr inbounds %struct.Reg, %struct.Reg* %14087, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %14088 to i64*
  %14089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14090 = getelementptr inbounds %struct.GPR, %struct.GPR* %14089, i32 0, i32 19
  %14091 = getelementptr inbounds %struct.Reg, %struct.Reg* %14090, i32 0, i32 0
  %R9D.i196 = bitcast %union.anon* %14091 to i32*
  %14092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14093 = getelementptr inbounds %struct.GPR, %struct.GPR* %14092, i32 0, i32 15
  %14094 = getelementptr inbounds %struct.Reg, %struct.Reg* %14093, i32 0, i32 0
  %RBP.i197 = bitcast %union.anon* %14094 to i64*
  %14095 = bitcast i32* %R9D.i196 to i64*
  %14096 = load i64, i64* %RBP.i197
  %14097 = sub i64 %14096, 260
  %14098 = load i64, i64* %PC.i195
  %14099 = add i64 %14098, 7
  store i64 %14099, i64* %PC.i195
  %14100 = inttoptr i64 %14097 to i32*
  %14101 = load i32, i32* %14100
  %14102 = zext i32 %14101 to i64
  store i64 %14102, i64* %14095, align 8
  store %struct.Memory* %loadMem_442234, %struct.Memory** %MEMORY
  %loadMem_44223b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14104 = getelementptr inbounds %struct.GPR, %struct.GPR* %14103, i32 0, i32 33
  %14105 = getelementptr inbounds %struct.Reg, %struct.Reg* %14104, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %14105 to i64*
  %14106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14107 = getelementptr inbounds %struct.GPR, %struct.GPR* %14106, i32 0, i32 11
  %14108 = getelementptr inbounds %struct.Reg, %struct.Reg* %14107, i32 0, i32 0
  %RDI.i193 = bitcast %union.anon* %14108 to i64*
  %14109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14110 = getelementptr inbounds %struct.GPR, %struct.GPR* %14109, i32 0, i32 15
  %14111 = getelementptr inbounds %struct.Reg, %struct.Reg* %14110, i32 0, i32 0
  %RBP.i194 = bitcast %union.anon* %14111 to i64*
  %14112 = load i64, i64* %RBP.i194
  %14113 = sub i64 %14112, 32
  %14114 = load i64, i64* %PC.i192
  %14115 = add i64 %14114, 4
  store i64 %14115, i64* %PC.i192
  %14116 = inttoptr i64 %14113 to i32*
  %14117 = load i32, i32* %14116
  %14118 = sext i32 %14117 to i64
  store i64 %14118, i64* %RDI.i193, align 8
  store %struct.Memory* %loadMem_44223b, %struct.Memory** %MEMORY
  %loadMem_44223f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14120 = getelementptr inbounds %struct.GPR, %struct.GPR* %14119, i32 0, i32 33
  %14121 = getelementptr inbounds %struct.Reg, %struct.Reg* %14120, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %14121 to i64*
  %14122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14123 = getelementptr inbounds %struct.GPR, %struct.GPR* %14122, i32 0, i32 11
  %14124 = getelementptr inbounds %struct.Reg, %struct.Reg* %14123, i32 0, i32 0
  %RDI.i191 = bitcast %union.anon* %14124 to i64*
  %14125 = load i64, i64* %RDI.i191
  %14126 = load i64, i64* %PC.i190
  %14127 = add i64 %14126, 4
  store i64 %14127, i64* %PC.i190
  %14128 = shl i64 %14125, 5
  %14129 = icmp slt i64 %14128, 0
  %14130 = shl i64 %14128, 1
  store i64 %14130, i64* %RDI.i191, align 8
  %14131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14132 = zext i1 %14129 to i8
  store i8 %14132, i8* %14131, align 1
  %14133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14134 = trunc i64 %14130 to i32
  %14135 = and i32 %14134, 254
  %14136 = call i32 @llvm.ctpop.i32(i32 %14135)
  %14137 = trunc i32 %14136 to i8
  %14138 = and i8 %14137, 1
  %14139 = xor i8 %14138, 1
  store i8 %14139, i8* %14133, align 1
  %14140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14140, align 1
  %14141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14142 = icmp eq i64 %14130, 0
  %14143 = zext i1 %14142 to i8
  store i8 %14143, i8* %14141, align 1
  %14144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14145 = lshr i64 %14130, 63
  %14146 = trunc i64 %14145 to i8
  store i8 %14146, i8* %14144, align 1
  %14147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14147, align 1
  store %struct.Memory* %loadMem_44223f, %struct.Memory** %MEMORY
  %loadMem_442243 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14149 = getelementptr inbounds %struct.GPR, %struct.GPR* %14148, i32 0, i32 33
  %14150 = getelementptr inbounds %struct.Reg, %struct.Reg* %14149, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %14150 to i64*
  %14151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14152 = getelementptr inbounds %struct.GPR, %struct.GPR* %14151, i32 0, i32 7
  %14153 = getelementptr inbounds %struct.Reg, %struct.Reg* %14152, i32 0, i32 0
  %RDX.i188 = bitcast %union.anon* %14153 to i64*
  %14154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14155 = getelementptr inbounds %struct.GPR, %struct.GPR* %14154, i32 0, i32 11
  %14156 = getelementptr inbounds %struct.Reg, %struct.Reg* %14155, i32 0, i32 0
  %RDI.i189 = bitcast %union.anon* %14156 to i64*
  %14157 = load i64, i64* %RDX.i188
  %14158 = load i64, i64* %RDI.i189
  %14159 = load i64, i64* %PC.i187
  %14160 = add i64 %14159, 3
  store i64 %14160, i64* %PC.i187
  %14161 = add i64 %14158, %14157
  store i64 %14161, i64* %RDX.i188, align 8
  %14162 = icmp ult i64 %14161, %14157
  %14163 = icmp ult i64 %14161, %14158
  %14164 = or i1 %14162, %14163
  %14165 = zext i1 %14164 to i8
  %14166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14165, i8* %14166, align 1
  %14167 = trunc i64 %14161 to i32
  %14168 = and i32 %14167, 255
  %14169 = call i32 @llvm.ctpop.i32(i32 %14168)
  %14170 = trunc i32 %14169 to i8
  %14171 = and i8 %14170, 1
  %14172 = xor i8 %14171, 1
  %14173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14172, i8* %14173, align 1
  %14174 = xor i64 %14158, %14157
  %14175 = xor i64 %14174, %14161
  %14176 = lshr i64 %14175, 4
  %14177 = trunc i64 %14176 to i8
  %14178 = and i8 %14177, 1
  %14179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14178, i8* %14179, align 1
  %14180 = icmp eq i64 %14161, 0
  %14181 = zext i1 %14180 to i8
  %14182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14181, i8* %14182, align 1
  %14183 = lshr i64 %14161, 63
  %14184 = trunc i64 %14183 to i8
  %14185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14184, i8* %14185, align 1
  %14186 = lshr i64 %14157, 63
  %14187 = lshr i64 %14158, 63
  %14188 = xor i64 %14183, %14186
  %14189 = xor i64 %14183, %14187
  %14190 = add i64 %14188, %14189
  %14191 = icmp eq i64 %14190, 2
  %14192 = zext i1 %14191 to i8
  %14193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14192, i8* %14193, align 1
  store %struct.Memory* %loadMem_442243, %struct.Memory** %MEMORY
  %loadMem_442246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14195 = getelementptr inbounds %struct.GPR, %struct.GPR* %14194, i32 0, i32 33
  %14196 = getelementptr inbounds %struct.Reg, %struct.Reg* %14195, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %14196 to i64*
  %14197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14198 = getelementptr inbounds %struct.GPR, %struct.GPR* %14197, i32 0, i32 11
  %14199 = getelementptr inbounds %struct.Reg, %struct.Reg* %14198, i32 0, i32 0
  %RDI.i185 = bitcast %union.anon* %14199 to i64*
  %14200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14201 = getelementptr inbounds %struct.GPR, %struct.GPR* %14200, i32 0, i32 15
  %14202 = getelementptr inbounds %struct.Reg, %struct.Reg* %14201, i32 0, i32 0
  %RBP.i186 = bitcast %union.anon* %14202 to i64*
  %14203 = load i64, i64* %RBP.i186
  %14204 = sub i64 %14203, 28
  %14205 = load i64, i64* %PC.i184
  %14206 = add i64 %14205, 4
  store i64 %14206, i64* %PC.i184
  %14207 = inttoptr i64 %14204 to i32*
  %14208 = load i32, i32* %14207
  %14209 = sext i32 %14208 to i64
  store i64 %14209, i64* %RDI.i185, align 8
  store %struct.Memory* %loadMem_442246, %struct.Memory** %MEMORY
  %loadMem_44224a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14211 = getelementptr inbounds %struct.GPR, %struct.GPR* %14210, i32 0, i32 33
  %14212 = getelementptr inbounds %struct.Reg, %struct.Reg* %14211, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %14212 to i64*
  %14213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14214 = getelementptr inbounds %struct.GPR, %struct.GPR* %14213, i32 0, i32 19
  %14215 = getelementptr inbounds %struct.Reg, %struct.Reg* %14214, i32 0, i32 0
  %R9D.i182 = bitcast %union.anon* %14215 to i32*
  %14216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14217 = getelementptr inbounds %struct.GPR, %struct.GPR* %14216, i32 0, i32 7
  %14218 = getelementptr inbounds %struct.Reg, %struct.Reg* %14217, i32 0, i32 0
  %RDX.i183 = bitcast %union.anon* %14218 to i64*
  %14219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14220 = getelementptr inbounds %struct.GPR, %struct.GPR* %14219, i32 0, i32 11
  %14221 = getelementptr inbounds %struct.Reg, %struct.Reg* %14220, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %14221 to i64*
  %14222 = bitcast i32* %R9D.i182 to i64*
  %14223 = load i32, i32* %R9D.i182
  %14224 = zext i32 %14223 to i64
  %14225 = load i64, i64* %RDX.i183
  %14226 = load i64, i64* %RDI.i
  %14227 = mul i64 %14226, 4
  %14228 = add i64 %14227, %14225
  %14229 = load i64, i64* %PC.i181
  %14230 = add i64 %14229, 4
  store i64 %14230, i64* %PC.i181
  %14231 = inttoptr i64 %14228 to i32*
  %14232 = load i32, i32* %14231
  %14233 = add i32 %14232, %14223
  %14234 = zext i32 %14233 to i64
  store i64 %14234, i64* %14222, align 8
  %14235 = icmp ult i32 %14233, %14223
  %14236 = icmp ult i32 %14233, %14232
  %14237 = or i1 %14235, %14236
  %14238 = zext i1 %14237 to i8
  %14239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14238, i8* %14239, align 1
  %14240 = and i32 %14233, 255
  %14241 = call i32 @llvm.ctpop.i32(i32 %14240)
  %14242 = trunc i32 %14241 to i8
  %14243 = and i8 %14242, 1
  %14244 = xor i8 %14243, 1
  %14245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14244, i8* %14245, align 1
  %14246 = xor i32 %14232, %14223
  %14247 = xor i32 %14246, %14233
  %14248 = lshr i32 %14247, 4
  %14249 = trunc i32 %14248 to i8
  %14250 = and i8 %14249, 1
  %14251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14250, i8* %14251, align 1
  %14252 = icmp eq i32 %14233, 0
  %14253 = zext i1 %14252 to i8
  %14254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14253, i8* %14254, align 1
  %14255 = lshr i32 %14233, 31
  %14256 = trunc i32 %14255 to i8
  %14257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14256, i8* %14257, align 1
  %14258 = lshr i32 %14223, 31
  %14259 = lshr i32 %14232, 31
  %14260 = xor i32 %14255, %14258
  %14261 = xor i32 %14255, %14259
  %14262 = add i32 %14260, %14261
  %14263 = icmp eq i32 %14262, 2
  %14264 = zext i1 %14263 to i8
  %14265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14264, i8* %14265, align 1
  store %struct.Memory* %loadMem_44224a, %struct.Memory** %MEMORY
  %loadMem_44224e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14267 = getelementptr inbounds %struct.GPR, %struct.GPR* %14266, i32 0, i32 33
  %14268 = getelementptr inbounds %struct.Reg, %struct.Reg* %14267, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %14268 to i64*
  %14269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14270 = getelementptr inbounds %struct.GPR, %struct.GPR* %14269, i32 0, i32 5
  %14271 = getelementptr inbounds %struct.Reg, %struct.Reg* %14270, i32 0, i32 0
  %ECX.i180 = bitcast %union.anon* %14271 to i32*
  %14272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14273 = getelementptr inbounds %struct.GPR, %struct.GPR* %14272, i32 0, i32 19
  %14274 = getelementptr inbounds %struct.Reg, %struct.Reg* %14273, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %14274 to i32*
  %14275 = load i32, i32* %ECX.i180
  %14276 = zext i32 %14275 to i64
  %14277 = load i32, i32* %R9D.i
  %14278 = zext i32 %14277 to i64
  %14279 = load i64, i64* %PC.i179
  %14280 = add i64 %14279, 3
  store i64 %14280, i64* %PC.i179
  %14281 = sub i32 %14275, %14277
  %14282 = icmp ult i32 %14275, %14277
  %14283 = zext i1 %14282 to i8
  %14284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14283, i8* %14284, align 1
  %14285 = and i32 %14281, 255
  %14286 = call i32 @llvm.ctpop.i32(i32 %14285)
  %14287 = trunc i32 %14286 to i8
  %14288 = and i8 %14287, 1
  %14289 = xor i8 %14288, 1
  %14290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14289, i8* %14290, align 1
  %14291 = xor i64 %14278, %14276
  %14292 = trunc i64 %14291 to i32
  %14293 = xor i32 %14292, %14281
  %14294 = lshr i32 %14293, 4
  %14295 = trunc i32 %14294 to i8
  %14296 = and i8 %14295, 1
  %14297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14296, i8* %14297, align 1
  %14298 = icmp eq i32 %14281, 0
  %14299 = zext i1 %14298 to i8
  %14300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14299, i8* %14300, align 1
  %14301 = lshr i32 %14281, 31
  %14302 = trunc i32 %14301 to i8
  %14303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14302, i8* %14303, align 1
  %14304 = lshr i32 %14275, 31
  %14305 = lshr i32 %14277, 31
  %14306 = xor i32 %14305, %14304
  %14307 = xor i32 %14301, %14304
  %14308 = add i32 %14307, %14306
  %14309 = icmp eq i32 %14308, 2
  %14310 = zext i1 %14309 to i8
  %14311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14310, i8* %14311, align 1
  store %struct.Memory* %loadMem_44224e, %struct.Memory** %MEMORY
  %loadMem_442251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14313 = getelementptr inbounds %struct.GPR, %struct.GPR* %14312, i32 0, i32 33
  %14314 = getelementptr inbounds %struct.Reg, %struct.Reg* %14313, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %14314 to i64*
  %14315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14316 = getelementptr inbounds %struct.GPR, %struct.GPR* %14315, i32 0, i32 1
  %14317 = getelementptr inbounds %struct.Reg, %struct.Reg* %14316, i32 0, i32 0
  %EAX.i177 = bitcast %union.anon* %14317 to i32*
  %14318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14319 = getelementptr inbounds %struct.GPR, %struct.GPR* %14318, i32 0, i32 15
  %14320 = getelementptr inbounds %struct.Reg, %struct.Reg* %14319, i32 0, i32 0
  %RBP.i178 = bitcast %union.anon* %14320 to i64*
  %14321 = load i64, i64* %RBP.i178
  %14322 = sub i64 %14321, 312
  %14323 = load i32, i32* %EAX.i177
  %14324 = zext i32 %14323 to i64
  %14325 = load i64, i64* %PC.i176
  %14326 = add i64 %14325, 6
  store i64 %14326, i64* %PC.i176
  %14327 = inttoptr i64 %14322 to i32*
  store i32 %14323, i32* %14327
  store %struct.Memory* %loadMem_442251, %struct.Memory** %MEMORY
  %loadMem_442257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14329 = getelementptr inbounds %struct.GPR, %struct.GPR* %14328, i32 0, i32 33
  %14330 = getelementptr inbounds %struct.Reg, %struct.Reg* %14329, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %14330 to i64*
  %14331 = load i64, i64* %PC.i175
  %14332 = add i64 %14331, 19
  %14333 = load i64, i64* %PC.i175
  %14334 = add i64 %14333, 6
  %14335 = load i64, i64* %PC.i175
  %14336 = add i64 %14335, 6
  store i64 %14336, i64* %PC.i175
  %14337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14338 = load i8, i8* %14337, align 1
  %14339 = icmp ne i8 %14338, 0
  %14340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14341 = load i8, i8* %14340, align 1
  %14342 = icmp ne i8 %14341, 0
  %14343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14344 = load i8, i8* %14343, align 1
  %14345 = icmp ne i8 %14344, 0
  %14346 = xor i1 %14342, %14345
  %14347 = or i1 %14339, %14346
  %14348 = zext i1 %14347 to i8
  store i8 %14348, i8* %BRANCH_TAKEN, align 1
  %14349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14350 = select i1 %14347, i64 %14332, i64 %14334
  store i64 %14350, i64* %14349, align 8
  store %struct.Memory* %loadMem_442257, %struct.Memory** %MEMORY
  %loadBr_442257 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_442257 = icmp eq i8 %loadBr_442257, 1
  br i1 %cmpBr_442257, label %block_.L_44226a, label %block_44225d

block_44225d:                                     ; preds = %block_.L_4421c8
  %loadMem_44225d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14352 = getelementptr inbounds %struct.GPR, %struct.GPR* %14351, i32 0, i32 33
  %14353 = getelementptr inbounds %struct.Reg, %struct.Reg* %14352, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %14353 to i64*
  %14354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14355 = getelementptr inbounds %struct.GPR, %struct.GPR* %14354, i32 0, i32 1
  %14356 = getelementptr inbounds %struct.Reg, %struct.Reg* %14355, i32 0, i32 0
  %EAX.i173 = bitcast %union.anon* %14356 to i32*
  %14357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14358 = getelementptr inbounds %struct.GPR, %struct.GPR* %14357, i32 0, i32 1
  %14359 = getelementptr inbounds %struct.Reg, %struct.Reg* %14358, i32 0, i32 0
  %RAX.i174 = bitcast %union.anon* %14359 to i64*
  %14360 = load i64, i64* %RAX.i174
  %14361 = load i32, i32* %EAX.i173
  %14362 = zext i32 %14361 to i64
  %14363 = load i64, i64* %PC.i172
  %14364 = add i64 %14363, 2
  store i64 %14364, i64* %PC.i172
  %14365 = xor i64 %14362, %14360
  %14366 = trunc i64 %14365 to i32
  %14367 = and i64 %14365, 4294967295
  store i64 %14367, i64* %RAX.i174, align 8
  %14368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14368, align 1
  %14369 = and i32 %14366, 255
  %14370 = call i32 @llvm.ctpop.i32(i32 %14369)
  %14371 = trunc i32 %14370 to i8
  %14372 = and i8 %14371, 1
  %14373 = xor i8 %14372, 1
  %14374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14373, i8* %14374, align 1
  %14375 = icmp eq i32 %14366, 0
  %14376 = zext i1 %14375 to i8
  %14377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14376, i8* %14377, align 1
  %14378 = lshr i32 %14366, 31
  %14379 = trunc i32 %14378 to i8
  %14380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14379, i8* %14380, align 1
  %14381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14381, align 1
  %14382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14382, align 1
  store %struct.Memory* %loadMem_44225d, %struct.Memory** %MEMORY
  %loadMem_44225f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14384 = getelementptr inbounds %struct.GPR, %struct.GPR* %14383, i32 0, i32 33
  %14385 = getelementptr inbounds %struct.Reg, %struct.Reg* %14384, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %14385 to i64*
  %14386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14387 = getelementptr inbounds %struct.GPR, %struct.GPR* %14386, i32 0, i32 1
  %14388 = getelementptr inbounds %struct.Reg, %struct.Reg* %14387, i32 0, i32 0
  %EAX.i170 = bitcast %union.anon* %14388 to i32*
  %14389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14390 = getelementptr inbounds %struct.GPR, %struct.GPR* %14389, i32 0, i32 15
  %14391 = getelementptr inbounds %struct.Reg, %struct.Reg* %14390, i32 0, i32 0
  %RBP.i171 = bitcast %union.anon* %14391 to i64*
  %14392 = load i64, i64* %RBP.i171
  %14393 = sub i64 %14392, 316
  %14394 = load i32, i32* %EAX.i170
  %14395 = zext i32 %14394 to i64
  %14396 = load i64, i64* %PC.i169
  %14397 = add i64 %14396, 6
  store i64 %14397, i64* %PC.i169
  %14398 = inttoptr i64 %14393 to i32*
  store i32 %14394, i32* %14398
  store %struct.Memory* %loadMem_44225f, %struct.Memory** %MEMORY
  %loadMem_442265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14400 = getelementptr inbounds %struct.GPR, %struct.GPR* %14399, i32 0, i32 33
  %14401 = getelementptr inbounds %struct.Reg, %struct.Reg* %14400, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %14401 to i64*
  %14402 = load i64, i64* %PC.i168
  %14403 = add i64 %14402, 51
  %14404 = load i64, i64* %PC.i168
  %14405 = add i64 %14404, 5
  store i64 %14405, i64* %PC.i168
  %14406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14403, i64* %14406, align 8
  store %struct.Memory* %loadMem_442265, %struct.Memory** %MEMORY
  br label %block_.L_442298

block_.L_44226a:                                  ; preds = %block_.L_4421c8
  %loadMem_44226a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14408 = getelementptr inbounds %struct.GPR, %struct.GPR* %14407, i32 0, i32 33
  %14409 = getelementptr inbounds %struct.Reg, %struct.Reg* %14408, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %14409 to i64*
  %14410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14411 = getelementptr inbounds %struct.GPR, %struct.GPR* %14410, i32 0, i32 1
  %14412 = getelementptr inbounds %struct.Reg, %struct.Reg* %14411, i32 0, i32 0
  %RAX.i167 = bitcast %union.anon* %14412 to i64*
  %14413 = load i64, i64* %PC.i166
  %14414 = add i64 %14413, 10
  store i64 %14414, i64* %PC.i166
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RAX.i167, align 8
  store %struct.Memory* %loadMem_44226a, %struct.Memory** %MEMORY
  %loadMem_442274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14416 = getelementptr inbounds %struct.GPR, %struct.GPR* %14415, i32 0, i32 33
  %14417 = getelementptr inbounds %struct.Reg, %struct.Reg* %14416, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %14417 to i64*
  %14418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14419 = getelementptr inbounds %struct.GPR, %struct.GPR* %14418, i32 0, i32 1
  %14420 = getelementptr inbounds %struct.Reg, %struct.Reg* %14419, i32 0, i32 0
  %RAX.i165 = bitcast %union.anon* %14420 to i64*
  %14421 = load i64, i64* %RAX.i165
  %14422 = load i64, i64* %PC.i164
  %14423 = add i64 %14422, 6
  store i64 %14423, i64* %PC.i164
  %14424 = add i64 2048, %14421
  store i64 %14424, i64* %RAX.i165, align 8
  %14425 = icmp ult i64 %14424, %14421
  %14426 = icmp ult i64 %14424, 2048
  %14427 = or i1 %14425, %14426
  %14428 = zext i1 %14427 to i8
  %14429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14428, i8* %14429, align 1
  %14430 = trunc i64 %14424 to i32
  %14431 = and i32 %14430, 255
  %14432 = call i32 @llvm.ctpop.i32(i32 %14431)
  %14433 = trunc i32 %14432 to i8
  %14434 = and i8 %14433, 1
  %14435 = xor i8 %14434, 1
  %14436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14435, i8* %14436, align 1
  %14437 = xor i64 2048, %14421
  %14438 = xor i64 %14437, %14424
  %14439 = lshr i64 %14438, 4
  %14440 = trunc i64 %14439 to i8
  %14441 = and i8 %14440, 1
  %14442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14441, i8* %14442, align 1
  %14443 = icmp eq i64 %14424, 0
  %14444 = zext i1 %14443 to i8
  %14445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14444, i8* %14445, align 1
  %14446 = lshr i64 %14424, 63
  %14447 = trunc i64 %14446 to i8
  %14448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14447, i8* %14448, align 1
  %14449 = lshr i64 %14421, 63
  %14450 = xor i64 %14446, %14449
  %14451 = add i64 %14450, %14446
  %14452 = icmp eq i64 %14451, 2
  %14453 = zext i1 %14452 to i8
  %14454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14453, i8* %14454, align 1
  store %struct.Memory* %loadMem_442274, %struct.Memory** %MEMORY
  %loadMem_44227a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14456 = getelementptr inbounds %struct.GPR, %struct.GPR* %14455, i32 0, i32 33
  %14457 = getelementptr inbounds %struct.Reg, %struct.Reg* %14456, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %14457 to i64*
  %14458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14459 = getelementptr inbounds %struct.GPR, %struct.GPR* %14458, i32 0, i32 5
  %14460 = getelementptr inbounds %struct.Reg, %struct.Reg* %14459, i32 0, i32 0
  %RCX.i162 = bitcast %union.anon* %14460 to i64*
  %14461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14462 = getelementptr inbounds %struct.GPR, %struct.GPR* %14461, i32 0, i32 15
  %14463 = getelementptr inbounds %struct.Reg, %struct.Reg* %14462, i32 0, i32 0
  %RBP.i163 = bitcast %union.anon* %14463 to i64*
  %14464 = load i64, i64* %RBP.i163
  %14465 = sub i64 %14464, 260
  %14466 = load i64, i64* %PC.i161
  %14467 = add i64 %14466, 6
  store i64 %14467, i64* %PC.i161
  %14468 = inttoptr i64 %14465 to i32*
  %14469 = load i32, i32* %14468
  %14470 = zext i32 %14469 to i64
  store i64 %14470, i64* %RCX.i162, align 8
  store %struct.Memory* %loadMem_44227a, %struct.Memory** %MEMORY
  %loadMem_442280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14472 = getelementptr inbounds %struct.GPR, %struct.GPR* %14471, i32 0, i32 33
  %14473 = getelementptr inbounds %struct.Reg, %struct.Reg* %14472, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %14473 to i64*
  %14474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14475 = getelementptr inbounds %struct.GPR, %struct.GPR* %14474, i32 0, i32 7
  %14476 = getelementptr inbounds %struct.Reg, %struct.Reg* %14475, i32 0, i32 0
  %RDX.i159 = bitcast %union.anon* %14476 to i64*
  %14477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14478 = getelementptr inbounds %struct.GPR, %struct.GPR* %14477, i32 0, i32 15
  %14479 = getelementptr inbounds %struct.Reg, %struct.Reg* %14478, i32 0, i32 0
  %RBP.i160 = bitcast %union.anon* %14479 to i64*
  %14480 = load i64, i64* %RBP.i160
  %14481 = sub i64 %14480, 32
  %14482 = load i64, i64* %PC.i158
  %14483 = add i64 %14482, 4
  store i64 %14483, i64* %PC.i158
  %14484 = inttoptr i64 %14481 to i32*
  %14485 = load i32, i32* %14484
  %14486 = sext i32 %14485 to i64
  store i64 %14486, i64* %RDX.i159, align 8
  store %struct.Memory* %loadMem_442280, %struct.Memory** %MEMORY
  %loadMem_442284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14488 = getelementptr inbounds %struct.GPR, %struct.GPR* %14487, i32 0, i32 33
  %14489 = getelementptr inbounds %struct.Reg, %struct.Reg* %14488, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %14489 to i64*
  %14490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14491 = getelementptr inbounds %struct.GPR, %struct.GPR* %14490, i32 0, i32 7
  %14492 = getelementptr inbounds %struct.Reg, %struct.Reg* %14491, i32 0, i32 0
  %RDX.i157 = bitcast %union.anon* %14492 to i64*
  %14493 = load i64, i64* %RDX.i157
  %14494 = load i64, i64* %PC.i156
  %14495 = add i64 %14494, 4
  store i64 %14495, i64* %PC.i156
  %14496 = shl i64 %14493, 5
  %14497 = icmp slt i64 %14496, 0
  %14498 = shl i64 %14496, 1
  store i64 %14498, i64* %RDX.i157, align 8
  %14499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14500 = zext i1 %14497 to i8
  store i8 %14500, i8* %14499, align 1
  %14501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14502 = trunc i64 %14498 to i32
  %14503 = and i32 %14502, 254
  %14504 = call i32 @llvm.ctpop.i32(i32 %14503)
  %14505 = trunc i32 %14504 to i8
  %14506 = and i8 %14505, 1
  %14507 = xor i8 %14506, 1
  store i8 %14507, i8* %14501, align 1
  %14508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14508, align 1
  %14509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14510 = icmp eq i64 %14498, 0
  %14511 = zext i1 %14510 to i8
  store i8 %14511, i8* %14509, align 1
  %14512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14513 = lshr i64 %14498, 63
  %14514 = trunc i64 %14513 to i8
  store i8 %14514, i8* %14512, align 1
  %14515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14515, align 1
  store %struct.Memory* %loadMem_442284, %struct.Memory** %MEMORY
  %loadMem_442288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14517 = getelementptr inbounds %struct.GPR, %struct.GPR* %14516, i32 0, i32 33
  %14518 = getelementptr inbounds %struct.Reg, %struct.Reg* %14517, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %14518 to i64*
  %14519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14520 = getelementptr inbounds %struct.GPR, %struct.GPR* %14519, i32 0, i32 1
  %14521 = getelementptr inbounds %struct.Reg, %struct.Reg* %14520, i32 0, i32 0
  %RAX.i154 = bitcast %union.anon* %14521 to i64*
  %14522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14523 = getelementptr inbounds %struct.GPR, %struct.GPR* %14522, i32 0, i32 7
  %14524 = getelementptr inbounds %struct.Reg, %struct.Reg* %14523, i32 0, i32 0
  %RDX.i155 = bitcast %union.anon* %14524 to i64*
  %14525 = load i64, i64* %RAX.i154
  %14526 = load i64, i64* %RDX.i155
  %14527 = load i64, i64* %PC.i153
  %14528 = add i64 %14527, 3
  store i64 %14528, i64* %PC.i153
  %14529 = add i64 %14526, %14525
  store i64 %14529, i64* %RAX.i154, align 8
  %14530 = icmp ult i64 %14529, %14525
  %14531 = icmp ult i64 %14529, %14526
  %14532 = or i1 %14530, %14531
  %14533 = zext i1 %14532 to i8
  %14534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14533, i8* %14534, align 1
  %14535 = trunc i64 %14529 to i32
  %14536 = and i32 %14535, 255
  %14537 = call i32 @llvm.ctpop.i32(i32 %14536)
  %14538 = trunc i32 %14537 to i8
  %14539 = and i8 %14538, 1
  %14540 = xor i8 %14539, 1
  %14541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14540, i8* %14541, align 1
  %14542 = xor i64 %14526, %14525
  %14543 = xor i64 %14542, %14529
  %14544 = lshr i64 %14543, 4
  %14545 = trunc i64 %14544 to i8
  %14546 = and i8 %14545, 1
  %14547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14546, i8* %14547, align 1
  %14548 = icmp eq i64 %14529, 0
  %14549 = zext i1 %14548 to i8
  %14550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14549, i8* %14550, align 1
  %14551 = lshr i64 %14529, 63
  %14552 = trunc i64 %14551 to i8
  %14553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14552, i8* %14553, align 1
  %14554 = lshr i64 %14525, 63
  %14555 = lshr i64 %14526, 63
  %14556 = xor i64 %14551, %14554
  %14557 = xor i64 %14551, %14555
  %14558 = add i64 %14556, %14557
  %14559 = icmp eq i64 %14558, 2
  %14560 = zext i1 %14559 to i8
  %14561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14560, i8* %14561, align 1
  store %struct.Memory* %loadMem_442288, %struct.Memory** %MEMORY
  %loadMem_44228b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14563 = getelementptr inbounds %struct.GPR, %struct.GPR* %14562, i32 0, i32 33
  %14564 = getelementptr inbounds %struct.Reg, %struct.Reg* %14563, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %14564 to i64*
  %14565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14566 = getelementptr inbounds %struct.GPR, %struct.GPR* %14565, i32 0, i32 7
  %14567 = getelementptr inbounds %struct.Reg, %struct.Reg* %14566, i32 0, i32 0
  %RDX.i151 = bitcast %union.anon* %14567 to i64*
  %14568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14569 = getelementptr inbounds %struct.GPR, %struct.GPR* %14568, i32 0, i32 15
  %14570 = getelementptr inbounds %struct.Reg, %struct.Reg* %14569, i32 0, i32 0
  %RBP.i152 = bitcast %union.anon* %14570 to i64*
  %14571 = load i64, i64* %RBP.i152
  %14572 = sub i64 %14571, 28
  %14573 = load i64, i64* %PC.i150
  %14574 = add i64 %14573, 4
  store i64 %14574, i64* %PC.i150
  %14575 = inttoptr i64 %14572 to i32*
  %14576 = load i32, i32* %14575
  %14577 = sext i32 %14576 to i64
  store i64 %14577, i64* %RDX.i151, align 8
  store %struct.Memory* %loadMem_44228b, %struct.Memory** %MEMORY
  %loadMem_44228f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14579 = getelementptr inbounds %struct.GPR, %struct.GPR* %14578, i32 0, i32 33
  %14580 = getelementptr inbounds %struct.Reg, %struct.Reg* %14579, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %14580 to i64*
  %14581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14582 = getelementptr inbounds %struct.GPR, %struct.GPR* %14581, i32 0, i32 1
  %14583 = getelementptr inbounds %struct.Reg, %struct.Reg* %14582, i32 0, i32 0
  %RAX.i147 = bitcast %union.anon* %14583 to i64*
  %14584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14585 = getelementptr inbounds %struct.GPR, %struct.GPR* %14584, i32 0, i32 5
  %14586 = getelementptr inbounds %struct.Reg, %struct.Reg* %14585, i32 0, i32 0
  %RCX.i148 = bitcast %union.anon* %14586 to i64*
  %14587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14588 = getelementptr inbounds %struct.GPR, %struct.GPR* %14587, i32 0, i32 7
  %14589 = getelementptr inbounds %struct.Reg, %struct.Reg* %14588, i32 0, i32 0
  %RDX.i149 = bitcast %union.anon* %14589 to i64*
  %14590 = load i64, i64* %RCX.i148
  %14591 = load i64, i64* %RAX.i147
  %14592 = load i64, i64* %RDX.i149
  %14593 = mul i64 %14592, 4
  %14594 = add i64 %14593, %14591
  %14595 = load i64, i64* %PC.i146
  %14596 = add i64 %14595, 3
  store i64 %14596, i64* %PC.i146
  %14597 = trunc i64 %14590 to i32
  %14598 = inttoptr i64 %14594 to i32*
  %14599 = load i32, i32* %14598
  %14600 = add i32 %14599, %14597
  %14601 = zext i32 %14600 to i64
  store i64 %14601, i64* %RCX.i148, align 8
  %14602 = icmp ult i32 %14600, %14597
  %14603 = icmp ult i32 %14600, %14599
  %14604 = or i1 %14602, %14603
  %14605 = zext i1 %14604 to i8
  %14606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14605, i8* %14606, align 1
  %14607 = and i32 %14600, 255
  %14608 = call i32 @llvm.ctpop.i32(i32 %14607)
  %14609 = trunc i32 %14608 to i8
  %14610 = and i8 %14609, 1
  %14611 = xor i8 %14610, 1
  %14612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14611, i8* %14612, align 1
  %14613 = xor i32 %14599, %14597
  %14614 = xor i32 %14613, %14600
  %14615 = lshr i32 %14614, 4
  %14616 = trunc i32 %14615 to i8
  %14617 = and i8 %14616, 1
  %14618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14617, i8* %14618, align 1
  %14619 = icmp eq i32 %14600, 0
  %14620 = zext i1 %14619 to i8
  %14621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14620, i8* %14621, align 1
  %14622 = lshr i32 %14600, 31
  %14623 = trunc i32 %14622 to i8
  %14624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14623, i8* %14624, align 1
  %14625 = lshr i32 %14597, 31
  %14626 = lshr i32 %14599, 31
  %14627 = xor i32 %14622, %14625
  %14628 = xor i32 %14622, %14626
  %14629 = add i32 %14627, %14628
  %14630 = icmp eq i32 %14629, 2
  %14631 = zext i1 %14630 to i8
  %14632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14631, i8* %14632, align 1
  store %struct.Memory* %loadMem_44228f, %struct.Memory** %MEMORY
  %loadMem_442292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14634 = getelementptr inbounds %struct.GPR, %struct.GPR* %14633, i32 0, i32 33
  %14635 = getelementptr inbounds %struct.Reg, %struct.Reg* %14634, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %14635 to i64*
  %14636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14637 = getelementptr inbounds %struct.GPR, %struct.GPR* %14636, i32 0, i32 5
  %14638 = getelementptr inbounds %struct.Reg, %struct.Reg* %14637, i32 0, i32 0
  %ECX.i144 = bitcast %union.anon* %14638 to i32*
  %14639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14640 = getelementptr inbounds %struct.GPR, %struct.GPR* %14639, i32 0, i32 15
  %14641 = getelementptr inbounds %struct.Reg, %struct.Reg* %14640, i32 0, i32 0
  %RBP.i145 = bitcast %union.anon* %14641 to i64*
  %14642 = load i64, i64* %RBP.i145
  %14643 = sub i64 %14642, 316
  %14644 = load i32, i32* %ECX.i144
  %14645 = zext i32 %14644 to i64
  %14646 = load i64, i64* %PC.i143
  %14647 = add i64 %14646, 6
  store i64 %14647, i64* %PC.i143
  %14648 = inttoptr i64 %14643 to i32*
  store i32 %14644, i32* %14648
  store %struct.Memory* %loadMem_442292, %struct.Memory** %MEMORY
  br label %block_.L_442298

block_.L_442298:                                  ; preds = %block_.L_44226a, %block_44225d
  %loadMem_442298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14650 = getelementptr inbounds %struct.GPR, %struct.GPR* %14649, i32 0, i32 33
  %14651 = getelementptr inbounds %struct.Reg, %struct.Reg* %14650, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %14651 to i64*
  %14652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14653 = getelementptr inbounds %struct.GPR, %struct.GPR* %14652, i32 0, i32 1
  %14654 = getelementptr inbounds %struct.Reg, %struct.Reg* %14653, i32 0, i32 0
  %RAX.i141 = bitcast %union.anon* %14654 to i64*
  %14655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14656 = getelementptr inbounds %struct.GPR, %struct.GPR* %14655, i32 0, i32 15
  %14657 = getelementptr inbounds %struct.Reg, %struct.Reg* %14656, i32 0, i32 0
  %RBP.i142 = bitcast %union.anon* %14657 to i64*
  %14658 = load i64, i64* %RBP.i142
  %14659 = sub i64 %14658, 316
  %14660 = load i64, i64* %PC.i140
  %14661 = add i64 %14660, 6
  store i64 %14661, i64* %PC.i140
  %14662 = inttoptr i64 %14659 to i32*
  %14663 = load i32, i32* %14662
  %14664 = zext i32 %14663 to i64
  store i64 %14664, i64* %RAX.i141, align 8
  store %struct.Memory* %loadMem_442298, %struct.Memory** %MEMORY
  %loadMem_44229e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14666 = getelementptr inbounds %struct.GPR, %struct.GPR* %14665, i32 0, i32 33
  %14667 = getelementptr inbounds %struct.Reg, %struct.Reg* %14666, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %14667 to i64*
  %14668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14669 = getelementptr inbounds %struct.GPR, %struct.GPR* %14668, i32 0, i32 5
  %14670 = getelementptr inbounds %struct.Reg, %struct.Reg* %14669, i32 0, i32 0
  %RCX.i138 = bitcast %union.anon* %14670 to i64*
  %14671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14672 = getelementptr inbounds %struct.GPR, %struct.GPR* %14671, i32 0, i32 15
  %14673 = getelementptr inbounds %struct.Reg, %struct.Reg* %14672, i32 0, i32 0
  %RBP.i139 = bitcast %union.anon* %14673 to i64*
  %14674 = load i64, i64* %RBP.i139
  %14675 = sub i64 %14674, 312
  %14676 = load i64, i64* %PC.i137
  %14677 = add i64 %14676, 6
  store i64 %14677, i64* %PC.i137
  %14678 = inttoptr i64 %14675 to i32*
  %14679 = load i32, i32* %14678
  %14680 = zext i32 %14679 to i64
  store i64 %14680, i64* %RCX.i138, align 8
  store %struct.Memory* %loadMem_44229e, %struct.Memory** %MEMORY
  %loadMem_4422a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14682 = getelementptr inbounds %struct.GPR, %struct.GPR* %14681, i32 0, i32 33
  %14683 = getelementptr inbounds %struct.Reg, %struct.Reg* %14682, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %14683 to i64*
  %14684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14685 = getelementptr inbounds %struct.GPR, %struct.GPR* %14684, i32 0, i32 1
  %14686 = getelementptr inbounds %struct.Reg, %struct.Reg* %14685, i32 0, i32 0
  %EAX.i135 = bitcast %union.anon* %14686 to i32*
  %14687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14688 = getelementptr inbounds %struct.GPR, %struct.GPR* %14687, i32 0, i32 5
  %14689 = getelementptr inbounds %struct.Reg, %struct.Reg* %14688, i32 0, i32 0
  %ECX.i136 = bitcast %union.anon* %14689 to i32*
  %14690 = load i32, i32* %ECX.i136
  %14691 = zext i32 %14690 to i64
  %14692 = load i32, i32* %EAX.i135
  %14693 = zext i32 %14692 to i64
  %14694 = load i64, i64* %PC.i134
  %14695 = add i64 %14694, 2
  store i64 %14695, i64* %PC.i134
  %14696 = sub i32 %14690, %14692
  %14697 = icmp ult i32 %14690, %14692
  %14698 = zext i1 %14697 to i8
  %14699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14698, i8* %14699, align 1
  %14700 = and i32 %14696, 255
  %14701 = call i32 @llvm.ctpop.i32(i32 %14700)
  %14702 = trunc i32 %14701 to i8
  %14703 = and i8 %14702, 1
  %14704 = xor i8 %14703, 1
  %14705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14704, i8* %14705, align 1
  %14706 = xor i64 %14693, %14691
  %14707 = trunc i64 %14706 to i32
  %14708 = xor i32 %14707, %14696
  %14709 = lshr i32 %14708, 4
  %14710 = trunc i32 %14709 to i8
  %14711 = and i8 %14710, 1
  %14712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14711, i8* %14712, align 1
  %14713 = icmp eq i32 %14696, 0
  %14714 = zext i1 %14713 to i8
  %14715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14714, i8* %14715, align 1
  %14716 = lshr i32 %14696, 31
  %14717 = trunc i32 %14716 to i8
  %14718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14717, i8* %14718, align 1
  %14719 = lshr i32 %14690, 31
  %14720 = lshr i32 %14692, 31
  %14721 = xor i32 %14720, %14719
  %14722 = xor i32 %14716, %14719
  %14723 = add i32 %14722, %14721
  %14724 = icmp eq i32 %14723, 2
  %14725 = zext i1 %14724 to i8
  %14726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14725, i8* %14726, align 1
  store %struct.Memory* %loadMem_4422a4, %struct.Memory** %MEMORY
  %loadMem_4422a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14728 = getelementptr inbounds %struct.GPR, %struct.GPR* %14727, i32 0, i32 33
  %14729 = getelementptr inbounds %struct.Reg, %struct.Reg* %14728, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %14729 to i64*
  %14730 = load i64, i64* %PC.i133
  %14731 = add i64 %14730, 31
  %14732 = load i64, i64* %PC.i133
  %14733 = add i64 %14732, 6
  %14734 = load i64, i64* %PC.i133
  %14735 = add i64 %14734, 6
  store i64 %14735, i64* %PC.i133
  %14736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14737 = load i8, i8* %14736, align 1
  %14738 = icmp ne i8 %14737, 0
  %14739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14740 = load i8, i8* %14739, align 1
  %14741 = icmp ne i8 %14740, 0
  %14742 = xor i1 %14738, %14741
  %14743 = xor i1 %14742, true
  %14744 = zext i1 %14743 to i8
  store i8 %14744, i8* %BRANCH_TAKEN, align 1
  %14745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14746 = select i1 %14742, i64 %14733, i64 %14731
  store i64 %14746, i64* %14745, align 8
  store %struct.Memory* %loadMem_4422a6, %struct.Memory** %MEMORY
  %loadBr_4422a6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4422a6 = icmp eq i8 %loadBr_4422a6, 1
  br i1 %cmpBr_4422a6, label %block_.L_4422c5, label %block_4422ac

block_4422ac:                                     ; preds = %block_.L_442298
  %loadMem_4422ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %14747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14748 = getelementptr inbounds %struct.GPR, %struct.GPR* %14747, i32 0, i32 33
  %14749 = getelementptr inbounds %struct.Reg, %struct.Reg* %14748, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %14749 to i64*
  %14750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14751 = getelementptr inbounds %struct.GPR, %struct.GPR* %14750, i32 0, i32 1
  %14752 = getelementptr inbounds %struct.Reg, %struct.Reg* %14751, i32 0, i32 0
  %RAX.i132 = bitcast %union.anon* %14752 to i64*
  %14753 = load i64, i64* %PC.i131
  %14754 = add i64 %14753, 8
  store i64 %14754, i64* %PC.i131
  %14755 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %14755, i64* %RAX.i132, align 8
  store %struct.Memory* %loadMem_4422ac, %struct.Memory** %MEMORY
  %loadMem_4422b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14757 = getelementptr inbounds %struct.GPR, %struct.GPR* %14756, i32 0, i32 33
  %14758 = getelementptr inbounds %struct.Reg, %struct.Reg* %14757, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %14758 to i64*
  %14759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14760 = getelementptr inbounds %struct.GPR, %struct.GPR* %14759, i32 0, i32 1
  %14761 = getelementptr inbounds %struct.Reg, %struct.Reg* %14760, i32 0, i32 0
  %RAX.i129 = bitcast %union.anon* %14761 to i64*
  %14762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14763 = getelementptr inbounds %struct.GPR, %struct.GPR* %14762, i32 0, i32 5
  %14764 = getelementptr inbounds %struct.Reg, %struct.Reg* %14763, i32 0, i32 0
  %RCX.i130 = bitcast %union.anon* %14764 to i64*
  %14765 = load i64, i64* %RAX.i129
  %14766 = add i64 %14765, 72688
  %14767 = load i64, i64* %PC.i128
  %14768 = add i64 %14767, 6
  store i64 %14768, i64* %PC.i128
  %14769 = inttoptr i64 %14766 to i32*
  %14770 = load i32, i32* %14769
  %14771 = zext i32 %14770 to i64
  store i64 %14771, i64* %RCX.i130, align 8
  store %struct.Memory* %loadMem_4422b4, %struct.Memory** %MEMORY
  %loadMem_4422ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %14772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14773 = getelementptr inbounds %struct.GPR, %struct.GPR* %14772, i32 0, i32 33
  %14774 = getelementptr inbounds %struct.Reg, %struct.Reg* %14773, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %14774 to i64*
  %14775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14776 = getelementptr inbounds %struct.GPR, %struct.GPR* %14775, i32 0, i32 5
  %14777 = getelementptr inbounds %struct.Reg, %struct.Reg* %14776, i32 0, i32 0
  %ECX.i126 = bitcast %union.anon* %14777 to i32*
  %14778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14779 = getelementptr inbounds %struct.GPR, %struct.GPR* %14778, i32 0, i32 15
  %14780 = getelementptr inbounds %struct.Reg, %struct.Reg* %14779, i32 0, i32 0
  %RBP.i127 = bitcast %union.anon* %14780 to i64*
  %14781 = load i64, i64* %RBP.i127
  %14782 = sub i64 %14781, 320
  %14783 = load i32, i32* %ECX.i126
  %14784 = zext i32 %14783 to i64
  %14785 = load i64, i64* %PC.i125
  %14786 = add i64 %14785, 6
  store i64 %14786, i64* %PC.i125
  %14787 = inttoptr i64 %14782 to i32*
  store i32 %14783, i32* %14787
  store %struct.Memory* %loadMem_4422ba, %struct.Memory** %MEMORY
  %loadMem_4422c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14789 = getelementptr inbounds %struct.GPR, %struct.GPR* %14788, i32 0, i32 33
  %14790 = getelementptr inbounds %struct.Reg, %struct.Reg* %14789, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %14790 to i64*
  %14791 = load i64, i64* %PC.i124
  %14792 = add i64 %14791, 127
  %14793 = load i64, i64* %PC.i124
  %14794 = add i64 %14793, 5
  store i64 %14794, i64* %PC.i124
  %14795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14792, i64* %14795, align 8
  store %struct.Memory* %loadMem_4422c0, %struct.Memory** %MEMORY
  br label %block_.L_44233f

block_.L_4422c5:                                  ; preds = %block_.L_442298
  %loadMem_4422c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14797 = getelementptr inbounds %struct.GPR, %struct.GPR* %14796, i32 0, i32 33
  %14798 = getelementptr inbounds %struct.Reg, %struct.Reg* %14797, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %14798 to i64*
  %14799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14800 = getelementptr inbounds %struct.GPR, %struct.GPR* %14799, i32 0, i32 1
  %14801 = getelementptr inbounds %struct.Reg, %struct.Reg* %14800, i32 0, i32 0
  %EAX.i122 = bitcast %union.anon* %14801 to i32*
  %14802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14803 = getelementptr inbounds %struct.GPR, %struct.GPR* %14802, i32 0, i32 1
  %14804 = getelementptr inbounds %struct.Reg, %struct.Reg* %14803, i32 0, i32 0
  %RAX.i123 = bitcast %union.anon* %14804 to i64*
  %14805 = load i64, i64* %RAX.i123
  %14806 = load i32, i32* %EAX.i122
  %14807 = zext i32 %14806 to i64
  %14808 = load i64, i64* %PC.i121
  %14809 = add i64 %14808, 2
  store i64 %14809, i64* %PC.i121
  %14810 = xor i64 %14807, %14805
  %14811 = trunc i64 %14810 to i32
  %14812 = and i64 %14810, 4294967295
  store i64 %14812, i64* %RAX.i123, align 8
  %14813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14813, align 1
  %14814 = and i32 %14811, 255
  %14815 = call i32 @llvm.ctpop.i32(i32 %14814)
  %14816 = trunc i32 %14815 to i8
  %14817 = and i8 %14816, 1
  %14818 = xor i8 %14817, 1
  %14819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14818, i8* %14819, align 1
  %14820 = icmp eq i32 %14811, 0
  %14821 = zext i1 %14820 to i8
  %14822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14821, i8* %14822, align 1
  %14823 = lshr i32 %14811, 31
  %14824 = trunc i32 %14823 to i8
  %14825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14824, i8* %14825, align 1
  %14826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14826, align 1
  %14827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14827, align 1
  store %struct.Memory* %loadMem_4422c5, %struct.Memory** %MEMORY
  %loadMem_4422c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14829 = getelementptr inbounds %struct.GPR, %struct.GPR* %14828, i32 0, i32 33
  %14830 = getelementptr inbounds %struct.Reg, %struct.Reg* %14829, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %14830 to i64*
  %14831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14832 = getelementptr inbounds %struct.GPR, %struct.GPR* %14831, i32 0, i32 5
  %14833 = getelementptr inbounds %struct.Reg, %struct.Reg* %14832, i32 0, i32 0
  %RCX.i120 = bitcast %union.anon* %14833 to i64*
  %14834 = load i64, i64* %PC.i119
  %14835 = add i64 %14834, 10
  store i64 %14835, i64* %PC.i119
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RCX.i120, align 8
  store %struct.Memory* %loadMem_4422c7, %struct.Memory** %MEMORY
  %loadMem_4422d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14837 = getelementptr inbounds %struct.GPR, %struct.GPR* %14836, i32 0, i32 33
  %14838 = getelementptr inbounds %struct.Reg, %struct.Reg* %14837, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %14838 to i64*
  %14839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14840 = getelementptr inbounds %struct.GPR, %struct.GPR* %14839, i32 0, i32 5
  %14841 = getelementptr inbounds %struct.Reg, %struct.Reg* %14840, i32 0, i32 0
  %RCX.i118 = bitcast %union.anon* %14841 to i64*
  %14842 = load i64, i64* %RCX.i118
  %14843 = load i64, i64* %PC.i117
  %14844 = add i64 %14843, 7
  store i64 %14844, i64* %PC.i117
  %14845 = add i64 2048, %14842
  store i64 %14845, i64* %RCX.i118, align 8
  %14846 = icmp ult i64 %14845, %14842
  %14847 = icmp ult i64 %14845, 2048
  %14848 = or i1 %14846, %14847
  %14849 = zext i1 %14848 to i8
  %14850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14849, i8* %14850, align 1
  %14851 = trunc i64 %14845 to i32
  %14852 = and i32 %14851, 255
  %14853 = call i32 @llvm.ctpop.i32(i32 %14852)
  %14854 = trunc i32 %14853 to i8
  %14855 = and i8 %14854, 1
  %14856 = xor i8 %14855, 1
  %14857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14856, i8* %14857, align 1
  %14858 = xor i64 2048, %14842
  %14859 = xor i64 %14858, %14845
  %14860 = lshr i64 %14859, 4
  %14861 = trunc i64 %14860 to i8
  %14862 = and i8 %14861, 1
  %14863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14862, i8* %14863, align 1
  %14864 = icmp eq i64 %14845, 0
  %14865 = zext i1 %14864 to i8
  %14866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14865, i8* %14866, align 1
  %14867 = lshr i64 %14845, 63
  %14868 = trunc i64 %14867 to i8
  %14869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14868, i8* %14869, align 1
  %14870 = lshr i64 %14842, 63
  %14871 = xor i64 %14867, %14870
  %14872 = add i64 %14871, %14867
  %14873 = icmp eq i64 %14872, 2
  %14874 = zext i1 %14873 to i8
  %14875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14874, i8* %14875, align 1
  store %struct.Memory* %loadMem_4422d1, %struct.Memory** %MEMORY
  %loadMem_4422d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14877 = getelementptr inbounds %struct.GPR, %struct.GPR* %14876, i32 0, i32 33
  %14878 = getelementptr inbounds %struct.Reg, %struct.Reg* %14877, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %14878 to i64*
  %14879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14880 = getelementptr inbounds %struct.GPR, %struct.GPR* %14879, i32 0, i32 7
  %14881 = getelementptr inbounds %struct.Reg, %struct.Reg* %14880, i32 0, i32 0
  %RDX.i115 = bitcast %union.anon* %14881 to i64*
  %14882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14883 = getelementptr inbounds %struct.GPR, %struct.GPR* %14882, i32 0, i32 15
  %14884 = getelementptr inbounds %struct.Reg, %struct.Reg* %14883, i32 0, i32 0
  %RBP.i116 = bitcast %union.anon* %14884 to i64*
  %14885 = load i64, i64* %RBP.i116
  %14886 = sub i64 %14885, 260
  %14887 = load i64, i64* %PC.i114
  %14888 = add i64 %14887, 6
  store i64 %14888, i64* %PC.i114
  %14889 = inttoptr i64 %14886 to i32*
  %14890 = load i32, i32* %14889
  %14891 = zext i32 %14890 to i64
  store i64 %14891, i64* %RDX.i115, align 8
  store %struct.Memory* %loadMem_4422d8, %struct.Memory** %MEMORY
  %loadMem_4422de = load %struct.Memory*, %struct.Memory** %MEMORY
  %14892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14893 = getelementptr inbounds %struct.GPR, %struct.GPR* %14892, i32 0, i32 33
  %14894 = getelementptr inbounds %struct.Reg, %struct.Reg* %14893, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %14894 to i64*
  %14895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14896 = getelementptr inbounds %struct.GPR, %struct.GPR* %14895, i32 0, i32 9
  %14897 = getelementptr inbounds %struct.Reg, %struct.Reg* %14896, i32 0, i32 0
  %RSI.i112 = bitcast %union.anon* %14897 to i64*
  %14898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14899 = getelementptr inbounds %struct.GPR, %struct.GPR* %14898, i32 0, i32 15
  %14900 = getelementptr inbounds %struct.Reg, %struct.Reg* %14899, i32 0, i32 0
  %RBP.i113 = bitcast %union.anon* %14900 to i64*
  %14901 = load i64, i64* %RBP.i113
  %14902 = sub i64 %14901, 32
  %14903 = load i64, i64* %PC.i111
  %14904 = add i64 %14903, 4
  store i64 %14904, i64* %PC.i111
  %14905 = inttoptr i64 %14902 to i32*
  %14906 = load i32, i32* %14905
  %14907 = sext i32 %14906 to i64
  store i64 %14907, i64* %RSI.i112, align 8
  store %struct.Memory* %loadMem_4422de, %struct.Memory** %MEMORY
  %loadMem_4422e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14909 = getelementptr inbounds %struct.GPR, %struct.GPR* %14908, i32 0, i32 33
  %14910 = getelementptr inbounds %struct.Reg, %struct.Reg* %14909, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %14910 to i64*
  %14911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14912 = getelementptr inbounds %struct.GPR, %struct.GPR* %14911, i32 0, i32 9
  %14913 = getelementptr inbounds %struct.Reg, %struct.Reg* %14912, i32 0, i32 0
  %RSI.i110 = bitcast %union.anon* %14913 to i64*
  %14914 = load i64, i64* %RSI.i110
  %14915 = load i64, i64* %PC.i109
  %14916 = add i64 %14915, 4
  store i64 %14916, i64* %PC.i109
  %14917 = shl i64 %14914, 5
  %14918 = icmp slt i64 %14917, 0
  %14919 = shl i64 %14917, 1
  store i64 %14919, i64* %RSI.i110, align 8
  %14920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14921 = zext i1 %14918 to i8
  store i8 %14921, i8* %14920, align 1
  %14922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14923 = trunc i64 %14919 to i32
  %14924 = and i32 %14923, 254
  %14925 = call i32 @llvm.ctpop.i32(i32 %14924)
  %14926 = trunc i32 %14925 to i8
  %14927 = and i8 %14926, 1
  %14928 = xor i8 %14927, 1
  store i8 %14928, i8* %14922, align 1
  %14929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14929, align 1
  %14930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14931 = icmp eq i64 %14919, 0
  %14932 = zext i1 %14931 to i8
  store i8 %14932, i8* %14930, align 1
  %14933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14934 = lshr i64 %14919, 63
  %14935 = trunc i64 %14934 to i8
  store i8 %14935, i8* %14933, align 1
  %14936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14936, align 1
  store %struct.Memory* %loadMem_4422e2, %struct.Memory** %MEMORY
  %loadMem_4422e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14938 = getelementptr inbounds %struct.GPR, %struct.GPR* %14937, i32 0, i32 33
  %14939 = getelementptr inbounds %struct.Reg, %struct.Reg* %14938, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %14939 to i64*
  %14940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14941 = getelementptr inbounds %struct.GPR, %struct.GPR* %14940, i32 0, i32 5
  %14942 = getelementptr inbounds %struct.Reg, %struct.Reg* %14941, i32 0, i32 0
  %RCX.i107 = bitcast %union.anon* %14942 to i64*
  %14943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14944 = getelementptr inbounds %struct.GPR, %struct.GPR* %14943, i32 0, i32 9
  %14945 = getelementptr inbounds %struct.Reg, %struct.Reg* %14944, i32 0, i32 0
  %RSI.i108 = bitcast %union.anon* %14945 to i64*
  %14946 = load i64, i64* %RCX.i107
  %14947 = load i64, i64* %RSI.i108
  %14948 = load i64, i64* %PC.i106
  %14949 = add i64 %14948, 3
  store i64 %14949, i64* %PC.i106
  %14950 = add i64 %14947, %14946
  store i64 %14950, i64* %RCX.i107, align 8
  %14951 = icmp ult i64 %14950, %14946
  %14952 = icmp ult i64 %14950, %14947
  %14953 = or i1 %14951, %14952
  %14954 = zext i1 %14953 to i8
  %14955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14954, i8* %14955, align 1
  %14956 = trunc i64 %14950 to i32
  %14957 = and i32 %14956, 255
  %14958 = call i32 @llvm.ctpop.i32(i32 %14957)
  %14959 = trunc i32 %14958 to i8
  %14960 = and i8 %14959, 1
  %14961 = xor i8 %14960, 1
  %14962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14961, i8* %14962, align 1
  %14963 = xor i64 %14947, %14946
  %14964 = xor i64 %14963, %14950
  %14965 = lshr i64 %14964, 4
  %14966 = trunc i64 %14965 to i8
  %14967 = and i8 %14966, 1
  %14968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14967, i8* %14968, align 1
  %14969 = icmp eq i64 %14950, 0
  %14970 = zext i1 %14969 to i8
  %14971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14970, i8* %14971, align 1
  %14972 = lshr i64 %14950, 63
  %14973 = trunc i64 %14972 to i8
  %14974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14973, i8* %14974, align 1
  %14975 = lshr i64 %14946, 63
  %14976 = lshr i64 %14947, 63
  %14977 = xor i64 %14972, %14975
  %14978 = xor i64 %14972, %14976
  %14979 = add i64 %14977, %14978
  %14980 = icmp eq i64 %14979, 2
  %14981 = zext i1 %14980 to i8
  %14982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14981, i8* %14982, align 1
  store %struct.Memory* %loadMem_4422e6, %struct.Memory** %MEMORY
  %loadMem_4422e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14984 = getelementptr inbounds %struct.GPR, %struct.GPR* %14983, i32 0, i32 33
  %14985 = getelementptr inbounds %struct.Reg, %struct.Reg* %14984, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %14985 to i64*
  %14986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14987 = getelementptr inbounds %struct.GPR, %struct.GPR* %14986, i32 0, i32 9
  %14988 = getelementptr inbounds %struct.Reg, %struct.Reg* %14987, i32 0, i32 0
  %RSI.i104 = bitcast %union.anon* %14988 to i64*
  %14989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14990 = getelementptr inbounds %struct.GPR, %struct.GPR* %14989, i32 0, i32 15
  %14991 = getelementptr inbounds %struct.Reg, %struct.Reg* %14990, i32 0, i32 0
  %RBP.i105 = bitcast %union.anon* %14991 to i64*
  %14992 = load i64, i64* %RBP.i105
  %14993 = sub i64 %14992, 28
  %14994 = load i64, i64* %PC.i103
  %14995 = add i64 %14994, 4
  store i64 %14995, i64* %PC.i103
  %14996 = inttoptr i64 %14993 to i32*
  %14997 = load i32, i32* %14996
  %14998 = sext i32 %14997 to i64
  store i64 %14998, i64* %RSI.i104, align 8
  store %struct.Memory* %loadMem_4422e9, %struct.Memory** %MEMORY
  %loadMem_4422ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %14999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15000 = getelementptr inbounds %struct.GPR, %struct.GPR* %14999, i32 0, i32 33
  %15001 = getelementptr inbounds %struct.Reg, %struct.Reg* %15000, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %15001 to i64*
  %15002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15003 = getelementptr inbounds %struct.GPR, %struct.GPR* %15002, i32 0, i32 5
  %15004 = getelementptr inbounds %struct.Reg, %struct.Reg* %15003, i32 0, i32 0
  %RCX.i100 = bitcast %union.anon* %15004 to i64*
  %15005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15006 = getelementptr inbounds %struct.GPR, %struct.GPR* %15005, i32 0, i32 7
  %15007 = getelementptr inbounds %struct.Reg, %struct.Reg* %15006, i32 0, i32 0
  %RDX.i101 = bitcast %union.anon* %15007 to i64*
  %15008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15009 = getelementptr inbounds %struct.GPR, %struct.GPR* %15008, i32 0, i32 9
  %15010 = getelementptr inbounds %struct.Reg, %struct.Reg* %15009, i32 0, i32 0
  %RSI.i102 = bitcast %union.anon* %15010 to i64*
  %15011 = load i64, i64* %RDX.i101
  %15012 = load i64, i64* %RCX.i100
  %15013 = load i64, i64* %RSI.i102
  %15014 = mul i64 %15013, 4
  %15015 = add i64 %15014, %15012
  %15016 = load i64, i64* %PC.i99
  %15017 = add i64 %15016, 3
  store i64 %15017, i64* %PC.i99
  %15018 = trunc i64 %15011 to i32
  %15019 = inttoptr i64 %15015 to i32*
  %15020 = load i32, i32* %15019
  %15021 = add i32 %15020, %15018
  %15022 = zext i32 %15021 to i64
  store i64 %15022, i64* %RDX.i101, align 8
  %15023 = icmp ult i32 %15021, %15018
  %15024 = icmp ult i32 %15021, %15020
  %15025 = or i1 %15023, %15024
  %15026 = zext i1 %15025 to i8
  %15027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15026, i8* %15027, align 1
  %15028 = and i32 %15021, 255
  %15029 = call i32 @llvm.ctpop.i32(i32 %15028)
  %15030 = trunc i32 %15029 to i8
  %15031 = and i8 %15030, 1
  %15032 = xor i8 %15031, 1
  %15033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15032, i8* %15033, align 1
  %15034 = xor i32 %15020, %15018
  %15035 = xor i32 %15034, %15021
  %15036 = lshr i32 %15035, 4
  %15037 = trunc i32 %15036 to i8
  %15038 = and i8 %15037, 1
  %15039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15038, i8* %15039, align 1
  %15040 = icmp eq i32 %15021, 0
  %15041 = zext i1 %15040 to i8
  %15042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15041, i8* %15042, align 1
  %15043 = lshr i32 %15021, 31
  %15044 = trunc i32 %15043 to i8
  %15045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15044, i8* %15045, align 1
  %15046 = lshr i32 %15018, 31
  %15047 = lshr i32 %15020, 31
  %15048 = xor i32 %15043, %15046
  %15049 = xor i32 %15043, %15047
  %15050 = add i32 %15048, %15049
  %15051 = icmp eq i32 %15050, 2
  %15052 = zext i1 %15051 to i8
  %15053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15052, i8* %15053, align 1
  store %struct.Memory* %loadMem_4422ed, %struct.Memory** %MEMORY
  %loadMem_4422f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15055 = getelementptr inbounds %struct.GPR, %struct.GPR* %15054, i32 0, i32 33
  %15056 = getelementptr inbounds %struct.Reg, %struct.Reg* %15055, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %15056 to i64*
  %15057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15058 = getelementptr inbounds %struct.GPR, %struct.GPR* %15057, i32 0, i32 1
  %15059 = getelementptr inbounds %struct.Reg, %struct.Reg* %15058, i32 0, i32 0
  %EAX.i98 = bitcast %union.anon* %15059 to i32*
  %15060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15061 = getelementptr inbounds %struct.GPR, %struct.GPR* %15060, i32 0, i32 7
  %15062 = getelementptr inbounds %struct.Reg, %struct.Reg* %15061, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %15062 to i32*
  %15063 = load i32, i32* %EAX.i98
  %15064 = zext i32 %15063 to i64
  %15065 = load i32, i32* %EDX.i
  %15066 = zext i32 %15065 to i64
  %15067 = load i64, i64* %PC.i97
  %15068 = add i64 %15067, 2
  store i64 %15068, i64* %PC.i97
  %15069 = sub i32 %15063, %15065
  %15070 = icmp ult i32 %15063, %15065
  %15071 = zext i1 %15070 to i8
  %15072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15071, i8* %15072, align 1
  %15073 = and i32 %15069, 255
  %15074 = call i32 @llvm.ctpop.i32(i32 %15073)
  %15075 = trunc i32 %15074 to i8
  %15076 = and i8 %15075, 1
  %15077 = xor i8 %15076, 1
  %15078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15077, i8* %15078, align 1
  %15079 = xor i64 %15066, %15064
  %15080 = trunc i64 %15079 to i32
  %15081 = xor i32 %15080, %15069
  %15082 = lshr i32 %15081, 4
  %15083 = trunc i32 %15082 to i8
  %15084 = and i8 %15083, 1
  %15085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15084, i8* %15085, align 1
  %15086 = icmp eq i32 %15069, 0
  %15087 = zext i1 %15086 to i8
  %15088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15087, i8* %15088, align 1
  %15089 = lshr i32 %15069, 31
  %15090 = trunc i32 %15089 to i8
  %15091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15090, i8* %15091, align 1
  %15092 = lshr i32 %15063, 31
  %15093 = lshr i32 %15065, 31
  %15094 = xor i32 %15093, %15092
  %15095 = xor i32 %15089, %15092
  %15096 = add i32 %15095, %15094
  %15097 = icmp eq i32 %15096, 2
  %15098 = zext i1 %15097 to i8
  %15099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15098, i8* %15099, align 1
  store %struct.Memory* %loadMem_4422f0, %struct.Memory** %MEMORY
  %loadMem_4422f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15101 = getelementptr inbounds %struct.GPR, %struct.GPR* %15100, i32 0, i32 33
  %15102 = getelementptr inbounds %struct.Reg, %struct.Reg* %15101, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %15102 to i64*
  %15103 = load i64, i64* %PC.i96
  %15104 = add i64 %15103, 19
  %15105 = load i64, i64* %PC.i96
  %15106 = add i64 %15105, 6
  %15107 = load i64, i64* %PC.i96
  %15108 = add i64 %15107, 6
  store i64 %15108, i64* %PC.i96
  %15109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15110 = load i8, i8* %15109, align 1
  %15111 = icmp ne i8 %15110, 0
  %15112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15113 = load i8, i8* %15112, align 1
  %15114 = icmp ne i8 %15113, 0
  %15115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15116 = load i8, i8* %15115, align 1
  %15117 = icmp ne i8 %15116, 0
  %15118 = xor i1 %15114, %15117
  %15119 = or i1 %15111, %15118
  %15120 = zext i1 %15119 to i8
  store i8 %15120, i8* %BRANCH_TAKEN, align 1
  %15121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15122 = select i1 %15119, i64 %15104, i64 %15106
  store i64 %15122, i64* %15121, align 8
  store %struct.Memory* %loadMem_4422f2, %struct.Memory** %MEMORY
  %loadBr_4422f2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4422f2 = icmp eq i8 %loadBr_4422f2, 1
  br i1 %cmpBr_4422f2, label %block_.L_442305, label %block_4422f8

block_4422f8:                                     ; preds = %block_.L_4422c5
  %loadMem_4422f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15124 = getelementptr inbounds %struct.GPR, %struct.GPR* %15123, i32 0, i32 33
  %15125 = getelementptr inbounds %struct.Reg, %struct.Reg* %15124, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %15125 to i64*
  %15126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15127 = getelementptr inbounds %struct.GPR, %struct.GPR* %15126, i32 0, i32 1
  %15128 = getelementptr inbounds %struct.Reg, %struct.Reg* %15127, i32 0, i32 0
  %EAX.i94 = bitcast %union.anon* %15128 to i32*
  %15129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15130 = getelementptr inbounds %struct.GPR, %struct.GPR* %15129, i32 0, i32 1
  %15131 = getelementptr inbounds %struct.Reg, %struct.Reg* %15130, i32 0, i32 0
  %RAX.i95 = bitcast %union.anon* %15131 to i64*
  %15132 = load i64, i64* %RAX.i95
  %15133 = load i32, i32* %EAX.i94
  %15134 = zext i32 %15133 to i64
  %15135 = load i64, i64* %PC.i93
  %15136 = add i64 %15135, 2
  store i64 %15136, i64* %PC.i93
  %15137 = xor i64 %15134, %15132
  %15138 = trunc i64 %15137 to i32
  %15139 = and i64 %15137, 4294967295
  store i64 %15139, i64* %RAX.i95, align 8
  %15140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15140, align 1
  %15141 = and i32 %15138, 255
  %15142 = call i32 @llvm.ctpop.i32(i32 %15141)
  %15143 = trunc i32 %15142 to i8
  %15144 = and i8 %15143, 1
  %15145 = xor i8 %15144, 1
  %15146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15145, i8* %15146, align 1
  %15147 = icmp eq i32 %15138, 0
  %15148 = zext i1 %15147 to i8
  %15149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15148, i8* %15149, align 1
  %15150 = lshr i32 %15138, 31
  %15151 = trunc i32 %15150 to i8
  %15152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15151, i8* %15152, align 1
  %15153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15153, align 1
  %15154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15154, align 1
  store %struct.Memory* %loadMem_4422f8, %struct.Memory** %MEMORY
  %loadMem_4422fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %15155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15156 = getelementptr inbounds %struct.GPR, %struct.GPR* %15155, i32 0, i32 33
  %15157 = getelementptr inbounds %struct.Reg, %struct.Reg* %15156, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %15157 to i64*
  %15158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15159 = getelementptr inbounds %struct.GPR, %struct.GPR* %15158, i32 0, i32 1
  %15160 = getelementptr inbounds %struct.Reg, %struct.Reg* %15159, i32 0, i32 0
  %EAX.i91 = bitcast %union.anon* %15160 to i32*
  %15161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15162 = getelementptr inbounds %struct.GPR, %struct.GPR* %15161, i32 0, i32 15
  %15163 = getelementptr inbounds %struct.Reg, %struct.Reg* %15162, i32 0, i32 0
  %RBP.i92 = bitcast %union.anon* %15163 to i64*
  %15164 = load i64, i64* %RBP.i92
  %15165 = sub i64 %15164, 324
  %15166 = load i32, i32* %EAX.i91
  %15167 = zext i32 %15166 to i64
  %15168 = load i64, i64* %PC.i90
  %15169 = add i64 %15168, 6
  store i64 %15169, i64* %PC.i90
  %15170 = inttoptr i64 %15165 to i32*
  store i32 %15166, i32* %15170
  store %struct.Memory* %loadMem_4422fa, %struct.Memory** %MEMORY
  %loadMem_442300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15172 = getelementptr inbounds %struct.GPR, %struct.GPR* %15171, i32 0, i32 33
  %15173 = getelementptr inbounds %struct.Reg, %struct.Reg* %15172, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %15173 to i64*
  %15174 = load i64, i64* %PC.i89
  %15175 = add i64 %15174, 51
  %15176 = load i64, i64* %PC.i89
  %15177 = add i64 %15176, 5
  store i64 %15177, i64* %PC.i89
  %15178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15175, i64* %15178, align 8
  store %struct.Memory* %loadMem_442300, %struct.Memory** %MEMORY
  br label %block_.L_442333

block_.L_442305:                                  ; preds = %block_.L_4422c5
  %loadMem_442305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15180 = getelementptr inbounds %struct.GPR, %struct.GPR* %15179, i32 0, i32 33
  %15181 = getelementptr inbounds %struct.Reg, %struct.Reg* %15180, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %15181 to i64*
  %15182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15183 = getelementptr inbounds %struct.GPR, %struct.GPR* %15182, i32 0, i32 1
  %15184 = getelementptr inbounds %struct.Reg, %struct.Reg* %15183, i32 0, i32 0
  %RAX.i88 = bitcast %union.anon* %15184 to i64*
  %15185 = load i64, i64* %PC.i87
  %15186 = add i64 %15185, 10
  store i64 %15186, i64* %PC.i87
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RAX.i88, align 8
  store %struct.Memory* %loadMem_442305, %struct.Memory** %MEMORY
  %loadMem_44230f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15188 = getelementptr inbounds %struct.GPR, %struct.GPR* %15187, i32 0, i32 33
  %15189 = getelementptr inbounds %struct.Reg, %struct.Reg* %15188, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %15189 to i64*
  %15190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15191 = getelementptr inbounds %struct.GPR, %struct.GPR* %15190, i32 0, i32 1
  %15192 = getelementptr inbounds %struct.Reg, %struct.Reg* %15191, i32 0, i32 0
  %RAX.i86 = bitcast %union.anon* %15192 to i64*
  %15193 = load i64, i64* %RAX.i86
  %15194 = load i64, i64* %PC.i85
  %15195 = add i64 %15194, 6
  store i64 %15195, i64* %PC.i85
  %15196 = add i64 2048, %15193
  store i64 %15196, i64* %RAX.i86, align 8
  %15197 = icmp ult i64 %15196, %15193
  %15198 = icmp ult i64 %15196, 2048
  %15199 = or i1 %15197, %15198
  %15200 = zext i1 %15199 to i8
  %15201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15200, i8* %15201, align 1
  %15202 = trunc i64 %15196 to i32
  %15203 = and i32 %15202, 255
  %15204 = call i32 @llvm.ctpop.i32(i32 %15203)
  %15205 = trunc i32 %15204 to i8
  %15206 = and i8 %15205, 1
  %15207 = xor i8 %15206, 1
  %15208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15207, i8* %15208, align 1
  %15209 = xor i64 2048, %15193
  %15210 = xor i64 %15209, %15196
  %15211 = lshr i64 %15210, 4
  %15212 = trunc i64 %15211 to i8
  %15213 = and i8 %15212, 1
  %15214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15213, i8* %15214, align 1
  %15215 = icmp eq i64 %15196, 0
  %15216 = zext i1 %15215 to i8
  %15217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15216, i8* %15217, align 1
  %15218 = lshr i64 %15196, 63
  %15219 = trunc i64 %15218 to i8
  %15220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15219, i8* %15220, align 1
  %15221 = lshr i64 %15193, 63
  %15222 = xor i64 %15218, %15221
  %15223 = add i64 %15222, %15218
  %15224 = icmp eq i64 %15223, 2
  %15225 = zext i1 %15224 to i8
  %15226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15225, i8* %15226, align 1
  store %struct.Memory* %loadMem_44230f, %struct.Memory** %MEMORY
  %loadMem_442315 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15228 = getelementptr inbounds %struct.GPR, %struct.GPR* %15227, i32 0, i32 33
  %15229 = getelementptr inbounds %struct.Reg, %struct.Reg* %15228, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %15229 to i64*
  %15230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15231 = getelementptr inbounds %struct.GPR, %struct.GPR* %15230, i32 0, i32 5
  %15232 = getelementptr inbounds %struct.Reg, %struct.Reg* %15231, i32 0, i32 0
  %RCX.i83 = bitcast %union.anon* %15232 to i64*
  %15233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15234 = getelementptr inbounds %struct.GPR, %struct.GPR* %15233, i32 0, i32 15
  %15235 = getelementptr inbounds %struct.Reg, %struct.Reg* %15234, i32 0, i32 0
  %RBP.i84 = bitcast %union.anon* %15235 to i64*
  %15236 = load i64, i64* %RBP.i84
  %15237 = sub i64 %15236, 260
  %15238 = load i64, i64* %PC.i82
  %15239 = add i64 %15238, 6
  store i64 %15239, i64* %PC.i82
  %15240 = inttoptr i64 %15237 to i32*
  %15241 = load i32, i32* %15240
  %15242 = zext i32 %15241 to i64
  store i64 %15242, i64* %RCX.i83, align 8
  store %struct.Memory* %loadMem_442315, %struct.Memory** %MEMORY
  %loadMem_44231b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15244 = getelementptr inbounds %struct.GPR, %struct.GPR* %15243, i32 0, i32 33
  %15245 = getelementptr inbounds %struct.Reg, %struct.Reg* %15244, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %15245 to i64*
  %15246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15247 = getelementptr inbounds %struct.GPR, %struct.GPR* %15246, i32 0, i32 7
  %15248 = getelementptr inbounds %struct.Reg, %struct.Reg* %15247, i32 0, i32 0
  %RDX.i80 = bitcast %union.anon* %15248 to i64*
  %15249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15250 = getelementptr inbounds %struct.GPR, %struct.GPR* %15249, i32 0, i32 15
  %15251 = getelementptr inbounds %struct.Reg, %struct.Reg* %15250, i32 0, i32 0
  %RBP.i81 = bitcast %union.anon* %15251 to i64*
  %15252 = load i64, i64* %RBP.i81
  %15253 = sub i64 %15252, 32
  %15254 = load i64, i64* %PC.i79
  %15255 = add i64 %15254, 4
  store i64 %15255, i64* %PC.i79
  %15256 = inttoptr i64 %15253 to i32*
  %15257 = load i32, i32* %15256
  %15258 = sext i32 %15257 to i64
  store i64 %15258, i64* %RDX.i80, align 8
  store %struct.Memory* %loadMem_44231b, %struct.Memory** %MEMORY
  %loadMem_44231f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15260 = getelementptr inbounds %struct.GPR, %struct.GPR* %15259, i32 0, i32 33
  %15261 = getelementptr inbounds %struct.Reg, %struct.Reg* %15260, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %15261 to i64*
  %15262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15263 = getelementptr inbounds %struct.GPR, %struct.GPR* %15262, i32 0, i32 7
  %15264 = getelementptr inbounds %struct.Reg, %struct.Reg* %15263, i32 0, i32 0
  %RDX.i78 = bitcast %union.anon* %15264 to i64*
  %15265 = load i64, i64* %RDX.i78
  %15266 = load i64, i64* %PC.i77
  %15267 = add i64 %15266, 4
  store i64 %15267, i64* %PC.i77
  %15268 = shl i64 %15265, 5
  %15269 = icmp slt i64 %15268, 0
  %15270 = shl i64 %15268, 1
  store i64 %15270, i64* %RDX.i78, align 8
  %15271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15272 = zext i1 %15269 to i8
  store i8 %15272, i8* %15271, align 1
  %15273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15274 = trunc i64 %15270 to i32
  %15275 = and i32 %15274, 254
  %15276 = call i32 @llvm.ctpop.i32(i32 %15275)
  %15277 = trunc i32 %15276 to i8
  %15278 = and i8 %15277, 1
  %15279 = xor i8 %15278, 1
  store i8 %15279, i8* %15273, align 1
  %15280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15280, align 1
  %15281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15282 = icmp eq i64 %15270, 0
  %15283 = zext i1 %15282 to i8
  store i8 %15283, i8* %15281, align 1
  %15284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15285 = lshr i64 %15270, 63
  %15286 = trunc i64 %15285 to i8
  store i8 %15286, i8* %15284, align 1
  %15287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15287, align 1
  store %struct.Memory* %loadMem_44231f, %struct.Memory** %MEMORY
  %loadMem_442323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15289 = getelementptr inbounds %struct.GPR, %struct.GPR* %15288, i32 0, i32 33
  %15290 = getelementptr inbounds %struct.Reg, %struct.Reg* %15289, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %15290 to i64*
  %15291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15292 = getelementptr inbounds %struct.GPR, %struct.GPR* %15291, i32 0, i32 1
  %15293 = getelementptr inbounds %struct.Reg, %struct.Reg* %15292, i32 0, i32 0
  %RAX.i75 = bitcast %union.anon* %15293 to i64*
  %15294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15295 = getelementptr inbounds %struct.GPR, %struct.GPR* %15294, i32 0, i32 7
  %15296 = getelementptr inbounds %struct.Reg, %struct.Reg* %15295, i32 0, i32 0
  %RDX.i76 = bitcast %union.anon* %15296 to i64*
  %15297 = load i64, i64* %RAX.i75
  %15298 = load i64, i64* %RDX.i76
  %15299 = load i64, i64* %PC.i74
  %15300 = add i64 %15299, 3
  store i64 %15300, i64* %PC.i74
  %15301 = add i64 %15298, %15297
  store i64 %15301, i64* %RAX.i75, align 8
  %15302 = icmp ult i64 %15301, %15297
  %15303 = icmp ult i64 %15301, %15298
  %15304 = or i1 %15302, %15303
  %15305 = zext i1 %15304 to i8
  %15306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15305, i8* %15306, align 1
  %15307 = trunc i64 %15301 to i32
  %15308 = and i32 %15307, 255
  %15309 = call i32 @llvm.ctpop.i32(i32 %15308)
  %15310 = trunc i32 %15309 to i8
  %15311 = and i8 %15310, 1
  %15312 = xor i8 %15311, 1
  %15313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15312, i8* %15313, align 1
  %15314 = xor i64 %15298, %15297
  %15315 = xor i64 %15314, %15301
  %15316 = lshr i64 %15315, 4
  %15317 = trunc i64 %15316 to i8
  %15318 = and i8 %15317, 1
  %15319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15318, i8* %15319, align 1
  %15320 = icmp eq i64 %15301, 0
  %15321 = zext i1 %15320 to i8
  %15322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15321, i8* %15322, align 1
  %15323 = lshr i64 %15301, 63
  %15324 = trunc i64 %15323 to i8
  %15325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15324, i8* %15325, align 1
  %15326 = lshr i64 %15297, 63
  %15327 = lshr i64 %15298, 63
  %15328 = xor i64 %15323, %15326
  %15329 = xor i64 %15323, %15327
  %15330 = add i64 %15328, %15329
  %15331 = icmp eq i64 %15330, 2
  %15332 = zext i1 %15331 to i8
  %15333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15332, i8* %15333, align 1
  store %struct.Memory* %loadMem_442323, %struct.Memory** %MEMORY
  %loadMem_442326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15335 = getelementptr inbounds %struct.GPR, %struct.GPR* %15334, i32 0, i32 33
  %15336 = getelementptr inbounds %struct.Reg, %struct.Reg* %15335, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %15336 to i64*
  %15337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15338 = getelementptr inbounds %struct.GPR, %struct.GPR* %15337, i32 0, i32 7
  %15339 = getelementptr inbounds %struct.Reg, %struct.Reg* %15338, i32 0, i32 0
  %RDX.i72 = bitcast %union.anon* %15339 to i64*
  %15340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15341 = getelementptr inbounds %struct.GPR, %struct.GPR* %15340, i32 0, i32 15
  %15342 = getelementptr inbounds %struct.Reg, %struct.Reg* %15341, i32 0, i32 0
  %RBP.i73 = bitcast %union.anon* %15342 to i64*
  %15343 = load i64, i64* %RBP.i73
  %15344 = sub i64 %15343, 28
  %15345 = load i64, i64* %PC.i71
  %15346 = add i64 %15345, 4
  store i64 %15346, i64* %PC.i71
  %15347 = inttoptr i64 %15344 to i32*
  %15348 = load i32, i32* %15347
  %15349 = sext i32 %15348 to i64
  store i64 %15349, i64* %RDX.i72, align 8
  store %struct.Memory* %loadMem_442326, %struct.Memory** %MEMORY
  %loadMem_44232a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15351 = getelementptr inbounds %struct.GPR, %struct.GPR* %15350, i32 0, i32 33
  %15352 = getelementptr inbounds %struct.Reg, %struct.Reg* %15351, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %15352 to i64*
  %15353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15354 = getelementptr inbounds %struct.GPR, %struct.GPR* %15353, i32 0, i32 1
  %15355 = getelementptr inbounds %struct.Reg, %struct.Reg* %15354, i32 0, i32 0
  %RAX.i69 = bitcast %union.anon* %15355 to i64*
  %15356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15357 = getelementptr inbounds %struct.GPR, %struct.GPR* %15356, i32 0, i32 5
  %15358 = getelementptr inbounds %struct.Reg, %struct.Reg* %15357, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %15358 to i64*
  %15359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15360 = getelementptr inbounds %struct.GPR, %struct.GPR* %15359, i32 0, i32 7
  %15361 = getelementptr inbounds %struct.Reg, %struct.Reg* %15360, i32 0, i32 0
  %RDX.i70 = bitcast %union.anon* %15361 to i64*
  %15362 = load i64, i64* %RCX.i
  %15363 = load i64, i64* %RAX.i69
  %15364 = load i64, i64* %RDX.i70
  %15365 = mul i64 %15364, 4
  %15366 = add i64 %15365, %15363
  %15367 = load i64, i64* %PC.i68
  %15368 = add i64 %15367, 3
  store i64 %15368, i64* %PC.i68
  %15369 = trunc i64 %15362 to i32
  %15370 = inttoptr i64 %15366 to i32*
  %15371 = load i32, i32* %15370
  %15372 = add i32 %15371, %15369
  %15373 = zext i32 %15372 to i64
  store i64 %15373, i64* %RCX.i, align 8
  %15374 = icmp ult i32 %15372, %15369
  %15375 = icmp ult i32 %15372, %15371
  %15376 = or i1 %15374, %15375
  %15377 = zext i1 %15376 to i8
  %15378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15377, i8* %15378, align 1
  %15379 = and i32 %15372, 255
  %15380 = call i32 @llvm.ctpop.i32(i32 %15379)
  %15381 = trunc i32 %15380 to i8
  %15382 = and i8 %15381, 1
  %15383 = xor i8 %15382, 1
  %15384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15383, i8* %15384, align 1
  %15385 = xor i32 %15371, %15369
  %15386 = xor i32 %15385, %15372
  %15387 = lshr i32 %15386, 4
  %15388 = trunc i32 %15387 to i8
  %15389 = and i8 %15388, 1
  %15390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15389, i8* %15390, align 1
  %15391 = icmp eq i32 %15372, 0
  %15392 = zext i1 %15391 to i8
  %15393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15392, i8* %15393, align 1
  %15394 = lshr i32 %15372, 31
  %15395 = trunc i32 %15394 to i8
  %15396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15395, i8* %15396, align 1
  %15397 = lshr i32 %15369, 31
  %15398 = lshr i32 %15371, 31
  %15399 = xor i32 %15394, %15397
  %15400 = xor i32 %15394, %15398
  %15401 = add i32 %15399, %15400
  %15402 = icmp eq i32 %15401, 2
  %15403 = zext i1 %15402 to i8
  %15404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15403, i8* %15404, align 1
  store %struct.Memory* %loadMem_44232a, %struct.Memory** %MEMORY
  %loadMem_44232d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15406 = getelementptr inbounds %struct.GPR, %struct.GPR* %15405, i32 0, i32 33
  %15407 = getelementptr inbounds %struct.Reg, %struct.Reg* %15406, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %15407 to i64*
  %15408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15409 = getelementptr inbounds %struct.GPR, %struct.GPR* %15408, i32 0, i32 5
  %15410 = getelementptr inbounds %struct.Reg, %struct.Reg* %15409, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %15410 to i32*
  %15411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15412 = getelementptr inbounds %struct.GPR, %struct.GPR* %15411, i32 0, i32 15
  %15413 = getelementptr inbounds %struct.Reg, %struct.Reg* %15412, i32 0, i32 0
  %RBP.i67 = bitcast %union.anon* %15413 to i64*
  %15414 = load i64, i64* %RBP.i67
  %15415 = sub i64 %15414, 324
  %15416 = load i32, i32* %ECX.i
  %15417 = zext i32 %15416 to i64
  %15418 = load i64, i64* %PC.i66
  %15419 = add i64 %15418, 6
  store i64 %15419, i64* %PC.i66
  %15420 = inttoptr i64 %15415 to i32*
  store i32 %15416, i32* %15420
  store %struct.Memory* %loadMem_44232d, %struct.Memory** %MEMORY
  br label %block_.L_442333

block_.L_442333:                                  ; preds = %block_.L_442305, %block_4422f8
  %loadMem_442333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15422 = getelementptr inbounds %struct.GPR, %struct.GPR* %15421, i32 0, i32 33
  %15423 = getelementptr inbounds %struct.Reg, %struct.Reg* %15422, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %15423 to i64*
  %15424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15425 = getelementptr inbounds %struct.GPR, %struct.GPR* %15424, i32 0, i32 1
  %15426 = getelementptr inbounds %struct.Reg, %struct.Reg* %15425, i32 0, i32 0
  %RAX.i64 = bitcast %union.anon* %15426 to i64*
  %15427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15428 = getelementptr inbounds %struct.GPR, %struct.GPR* %15427, i32 0, i32 15
  %15429 = getelementptr inbounds %struct.Reg, %struct.Reg* %15428, i32 0, i32 0
  %RBP.i65 = bitcast %union.anon* %15429 to i64*
  %15430 = load i64, i64* %RBP.i65
  %15431 = sub i64 %15430, 324
  %15432 = load i64, i64* %PC.i63
  %15433 = add i64 %15432, 6
  store i64 %15433, i64* %PC.i63
  %15434 = inttoptr i64 %15431 to i32*
  %15435 = load i32, i32* %15434
  %15436 = zext i32 %15435 to i64
  store i64 %15436, i64* %RAX.i64, align 8
  store %struct.Memory* %loadMem_442333, %struct.Memory** %MEMORY
  %loadMem_442339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15438 = getelementptr inbounds %struct.GPR, %struct.GPR* %15437, i32 0, i32 33
  %15439 = getelementptr inbounds %struct.Reg, %struct.Reg* %15438, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %15439 to i64*
  %15440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15441 = getelementptr inbounds %struct.GPR, %struct.GPR* %15440, i32 0, i32 1
  %15442 = getelementptr inbounds %struct.Reg, %struct.Reg* %15441, i32 0, i32 0
  %EAX.i61 = bitcast %union.anon* %15442 to i32*
  %15443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15444 = getelementptr inbounds %struct.GPR, %struct.GPR* %15443, i32 0, i32 15
  %15445 = getelementptr inbounds %struct.Reg, %struct.Reg* %15444, i32 0, i32 0
  %RBP.i62 = bitcast %union.anon* %15445 to i64*
  %15446 = load i64, i64* %RBP.i62
  %15447 = sub i64 %15446, 320
  %15448 = load i32, i32* %EAX.i61
  %15449 = zext i32 %15448 to i64
  %15450 = load i64, i64* %PC.i60
  %15451 = add i64 %15450, 6
  store i64 %15451, i64* %PC.i60
  %15452 = inttoptr i64 %15447 to i32*
  store i32 %15448, i32* %15452
  store %struct.Memory* %loadMem_442339, %struct.Memory** %MEMORY
  br label %block_.L_44233f

block_.L_44233f:                                  ; preds = %block_.L_442333, %block_4422ac
  %loadMem_44233f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15454 = getelementptr inbounds %struct.GPR, %struct.GPR* %15453, i32 0, i32 33
  %15455 = getelementptr inbounds %struct.Reg, %struct.Reg* %15454, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %15455 to i64*
  %15456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15457 = getelementptr inbounds %struct.GPR, %struct.GPR* %15456, i32 0, i32 1
  %15458 = getelementptr inbounds %struct.Reg, %struct.Reg* %15457, i32 0, i32 0
  %RAX.i58 = bitcast %union.anon* %15458 to i64*
  %15459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15460 = getelementptr inbounds %struct.GPR, %struct.GPR* %15459, i32 0, i32 15
  %15461 = getelementptr inbounds %struct.Reg, %struct.Reg* %15460, i32 0, i32 0
  %RBP.i59 = bitcast %union.anon* %15461 to i64*
  %15462 = load i64, i64* %RBP.i59
  %15463 = sub i64 %15462, 320
  %15464 = load i64, i64* %PC.i57
  %15465 = add i64 %15464, 6
  store i64 %15465, i64* %PC.i57
  %15466 = inttoptr i64 %15463 to i32*
  %15467 = load i32, i32* %15466
  %15468 = zext i32 %15467 to i64
  store i64 %15468, i64* %RAX.i58, align 8
  store %struct.Memory* %loadMem_44233f, %struct.Memory** %MEMORY
  %loadMem_442345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15470 = getelementptr inbounds %struct.GPR, %struct.GPR* %15469, i32 0, i32 33
  %15471 = getelementptr inbounds %struct.Reg, %struct.Reg* %15470, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %15471 to i64*
  %15472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15473 = getelementptr inbounds %struct.GPR, %struct.GPR* %15472, i32 0, i32 1
  %15474 = getelementptr inbounds %struct.Reg, %struct.Reg* %15473, i32 0, i32 0
  %AX.i = bitcast %union.anon* %15474 to i16*
  %15475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15476 = getelementptr inbounds %struct.GPR, %struct.GPR* %15475, i32 0, i32 5
  %15477 = getelementptr inbounds %struct.Reg, %struct.Reg* %15476, i32 0, i32 0
  %CX.i56 = bitcast %union.anon* %15477 to i16*
  %15478 = load i16, i16* %AX.i
  %15479 = zext i16 %15478 to i64
  %15480 = load i64, i64* %PC.i55
  %15481 = add i64 %15480, 3
  store i64 %15481, i64* %PC.i55
  store i16 %15478, i16* %CX.i56, align 2
  store %struct.Memory* %loadMem_442345, %struct.Memory** %MEMORY
  %loadMem_442348 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15483 = getelementptr inbounds %struct.GPR, %struct.GPR* %15482, i32 0, i32 33
  %15484 = getelementptr inbounds %struct.Reg, %struct.Reg* %15483, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %15484 to i64*
  %15485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15486 = getelementptr inbounds %struct.GPR, %struct.GPR* %15485, i32 0, i32 7
  %15487 = getelementptr inbounds %struct.Reg, %struct.Reg* %15486, i32 0, i32 0
  %RDX.i54 = bitcast %union.anon* %15487 to i64*
  %15488 = load i64, i64* %PC.i53
  %15489 = add i64 %15488, 8
  store i64 %15489, i64* %PC.i53
  %15490 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %15490, i64* %RDX.i54, align 8
  store %struct.Memory* %loadMem_442348, %struct.Memory** %MEMORY
  %loadMem_442350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15492 = getelementptr inbounds %struct.GPR, %struct.GPR* %15491, i32 0, i32 33
  %15493 = getelementptr inbounds %struct.Reg, %struct.Reg* %15492, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %15493 to i64*
  %15494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15495 = getelementptr inbounds %struct.GPR, %struct.GPR* %15494, i32 0, i32 7
  %15496 = getelementptr inbounds %struct.Reg, %struct.Reg* %15495, i32 0, i32 0
  %RDX.i52 = bitcast %union.anon* %15496 to i64*
  %15497 = load i64, i64* %RDX.i52
  %15498 = add i64 %15497, 6464
  %15499 = load i64, i64* %PC.i51
  %15500 = add i64 %15499, 7
  store i64 %15500, i64* %PC.i51
  %15501 = inttoptr i64 %15498 to i64*
  %15502 = load i64, i64* %15501
  store i64 %15502, i64* %RDX.i52, align 8
  store %struct.Memory* %loadMem_442350, %struct.Memory** %MEMORY
  %loadMem_442357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15504 = getelementptr inbounds %struct.GPR, %struct.GPR* %15503, i32 0, i32 33
  %15505 = getelementptr inbounds %struct.Reg, %struct.Reg* %15504, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %15505 to i64*
  %15506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15507 = getelementptr inbounds %struct.GPR, %struct.GPR* %15506, i32 0, i32 7
  %15508 = getelementptr inbounds %struct.Reg, %struct.Reg* %15507, i32 0, i32 0
  %RDX.i50 = bitcast %union.anon* %15508 to i64*
  %15509 = load i64, i64* %RDX.i50
  %15510 = add i64 %15509, 8
  %15511 = load i64, i64* %PC.i49
  %15512 = add i64 %15511, 4
  store i64 %15512, i64* %PC.i49
  %15513 = inttoptr i64 %15510 to i64*
  %15514 = load i64, i64* %15513
  store i64 %15514, i64* %RDX.i50, align 8
  store %struct.Memory* %loadMem_442357, %struct.Memory** %MEMORY
  %loadMem_44235b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15516 = getelementptr inbounds %struct.GPR, %struct.GPR* %15515, i32 0, i32 33
  %15517 = getelementptr inbounds %struct.Reg, %struct.Reg* %15516, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %15517 to i64*
  %15518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15519 = getelementptr inbounds %struct.GPR, %struct.GPR* %15518, i32 0, i32 9
  %15520 = getelementptr inbounds %struct.Reg, %struct.Reg* %15519, i32 0, i32 0
  %RSI.i48 = bitcast %union.anon* %15520 to i64*
  %15521 = load i64, i64* %PC.i47
  %15522 = add i64 %15521, 8
  store i64 %15522, i64* %PC.i47
  %15523 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %15523, i64* %RSI.i48, align 8
  store %struct.Memory* %loadMem_44235b, %struct.Memory** %MEMORY
  %loadMem_442363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15525 = getelementptr inbounds %struct.GPR, %struct.GPR* %15524, i32 0, i32 33
  %15526 = getelementptr inbounds %struct.Reg, %struct.Reg* %15525, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %15526 to i64*
  %15527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15528 = getelementptr inbounds %struct.GPR, %struct.GPR* %15527, i32 0, i32 1
  %15529 = getelementptr inbounds %struct.Reg, %struct.Reg* %15528, i32 0, i32 0
  %RAX.i45 = bitcast %union.anon* %15529 to i64*
  %15530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15531 = getelementptr inbounds %struct.GPR, %struct.GPR* %15530, i32 0, i32 9
  %15532 = getelementptr inbounds %struct.Reg, %struct.Reg* %15531, i32 0, i32 0
  %RSI.i46 = bitcast %union.anon* %15532 to i64*
  %15533 = load i64, i64* %RSI.i46
  %15534 = add i64 %15533, 156
  %15535 = load i64, i64* %PC.i44
  %15536 = add i64 %15535, 6
  store i64 %15536, i64* %PC.i44
  %15537 = inttoptr i64 %15534 to i32*
  %15538 = load i32, i32* %15537
  %15539 = zext i32 %15538 to i64
  store i64 %15539, i64* %RAX.i45, align 8
  store %struct.Memory* %loadMem_442363, %struct.Memory** %MEMORY
  %loadMem_442369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15541 = getelementptr inbounds %struct.GPR, %struct.GPR* %15540, i32 0, i32 33
  %15542 = getelementptr inbounds %struct.Reg, %struct.Reg* %15541, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %15542 to i64*
  %15543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15544 = getelementptr inbounds %struct.GPR, %struct.GPR* %15543, i32 0, i32 1
  %15545 = getelementptr inbounds %struct.Reg, %struct.Reg* %15544, i32 0, i32 0
  %RAX.i42 = bitcast %union.anon* %15545 to i64*
  %15546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15547 = getelementptr inbounds %struct.GPR, %struct.GPR* %15546, i32 0, i32 15
  %15548 = getelementptr inbounds %struct.Reg, %struct.Reg* %15547, i32 0, i32 0
  %RBP.i43 = bitcast %union.anon* %15548 to i64*
  %15549 = load i64, i64* %RAX.i42
  %15550 = load i64, i64* %RBP.i43
  %15551 = sub i64 %15550, 28
  %15552 = load i64, i64* %PC.i41
  %15553 = add i64 %15552, 3
  store i64 %15553, i64* %PC.i41
  %15554 = trunc i64 %15549 to i32
  %15555 = inttoptr i64 %15551 to i32*
  %15556 = load i32, i32* %15555
  %15557 = add i32 %15556, %15554
  %15558 = zext i32 %15557 to i64
  store i64 %15558, i64* %RAX.i42, align 8
  %15559 = icmp ult i32 %15557, %15554
  %15560 = icmp ult i32 %15557, %15556
  %15561 = or i1 %15559, %15560
  %15562 = zext i1 %15561 to i8
  %15563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15562, i8* %15563, align 1
  %15564 = and i32 %15557, 255
  %15565 = call i32 @llvm.ctpop.i32(i32 %15564)
  %15566 = trunc i32 %15565 to i8
  %15567 = and i8 %15566, 1
  %15568 = xor i8 %15567, 1
  %15569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15568, i8* %15569, align 1
  %15570 = xor i32 %15556, %15554
  %15571 = xor i32 %15570, %15557
  %15572 = lshr i32 %15571, 4
  %15573 = trunc i32 %15572 to i8
  %15574 = and i8 %15573, 1
  %15575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15574, i8* %15575, align 1
  %15576 = icmp eq i32 %15557, 0
  %15577 = zext i1 %15576 to i8
  %15578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15577, i8* %15578, align 1
  %15579 = lshr i32 %15557, 31
  %15580 = trunc i32 %15579 to i8
  %15581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15580, i8* %15581, align 1
  %15582 = lshr i32 %15554, 31
  %15583 = lshr i32 %15556, 31
  %15584 = xor i32 %15579, %15582
  %15585 = xor i32 %15579, %15583
  %15586 = add i32 %15584, %15585
  %15587 = icmp eq i32 %15586, 2
  %15588 = zext i1 %15587 to i8
  %15589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15588, i8* %15589, align 1
  store %struct.Memory* %loadMem_442369, %struct.Memory** %MEMORY
  %loadMem_44236c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15591 = getelementptr inbounds %struct.GPR, %struct.GPR* %15590, i32 0, i32 33
  %15592 = getelementptr inbounds %struct.Reg, %struct.Reg* %15591, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %15592 to i64*
  %15593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15594 = getelementptr inbounds %struct.GPR, %struct.GPR* %15593, i32 0, i32 1
  %15595 = getelementptr inbounds %struct.Reg, %struct.Reg* %15594, i32 0, i32 0
  %EAX.i39 = bitcast %union.anon* %15595 to i32*
  %15596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15597 = getelementptr inbounds %struct.GPR, %struct.GPR* %15596, i32 0, i32 9
  %15598 = getelementptr inbounds %struct.Reg, %struct.Reg* %15597, i32 0, i32 0
  %RSI.i40 = bitcast %union.anon* %15598 to i64*
  %15599 = load i32, i32* %EAX.i39
  %15600 = zext i32 %15599 to i64
  %15601 = load i64, i64* %PC.i38
  %15602 = add i64 %15601, 3
  store i64 %15602, i64* %PC.i38
  %15603 = shl i64 %15600, 32
  %15604 = ashr exact i64 %15603, 32
  store i64 %15604, i64* %RSI.i40, align 8
  store %struct.Memory* %loadMem_44236c, %struct.Memory** %MEMORY
  %loadMem_44236f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15606 = getelementptr inbounds %struct.GPR, %struct.GPR* %15605, i32 0, i32 33
  %15607 = getelementptr inbounds %struct.Reg, %struct.Reg* %15606, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %15607 to i64*
  %15608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15609 = getelementptr inbounds %struct.GPR, %struct.GPR* %15608, i32 0, i32 7
  %15610 = getelementptr inbounds %struct.Reg, %struct.Reg* %15609, i32 0, i32 0
  %RDX.i36 = bitcast %union.anon* %15610 to i64*
  %15611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15612 = getelementptr inbounds %struct.GPR, %struct.GPR* %15611, i32 0, i32 9
  %15613 = getelementptr inbounds %struct.Reg, %struct.Reg* %15612, i32 0, i32 0
  %RSI.i37 = bitcast %union.anon* %15613 to i64*
  %15614 = load i64, i64* %RDX.i36
  %15615 = load i64, i64* %RSI.i37
  %15616 = mul i64 %15615, 8
  %15617 = add i64 %15616, %15614
  %15618 = load i64, i64* %PC.i35
  %15619 = add i64 %15618, 4
  store i64 %15619, i64* %PC.i35
  %15620 = inttoptr i64 %15617 to i64*
  %15621 = load i64, i64* %15620
  store i64 %15621, i64* %RDX.i36, align 8
  store %struct.Memory* %loadMem_44236f, %struct.Memory** %MEMORY
  %loadMem_442373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15623 = getelementptr inbounds %struct.GPR, %struct.GPR* %15622, i32 0, i32 33
  %15624 = getelementptr inbounds %struct.Reg, %struct.Reg* %15623, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %15624 to i64*
  %15625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15626 = getelementptr inbounds %struct.GPR, %struct.GPR* %15625, i32 0, i32 9
  %15627 = getelementptr inbounds %struct.Reg, %struct.Reg* %15626, i32 0, i32 0
  %RSI.i34 = bitcast %union.anon* %15627 to i64*
  %15628 = load i64, i64* %PC.i33
  %15629 = add i64 %15628, 8
  store i64 %15629, i64* %PC.i33
  %15630 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %15630, i64* %RSI.i34, align 8
  store %struct.Memory* %loadMem_442373, %struct.Memory** %MEMORY
  %loadMem_44237b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15632 = getelementptr inbounds %struct.GPR, %struct.GPR* %15631, i32 0, i32 33
  %15633 = getelementptr inbounds %struct.Reg, %struct.Reg* %15632, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %15633 to i64*
  %15634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15635 = getelementptr inbounds %struct.GPR, %struct.GPR* %15634, i32 0, i32 1
  %15636 = getelementptr inbounds %struct.Reg, %struct.Reg* %15635, i32 0, i32 0
  %RAX.i31 = bitcast %union.anon* %15636 to i64*
  %15637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15638 = getelementptr inbounds %struct.GPR, %struct.GPR* %15637, i32 0, i32 9
  %15639 = getelementptr inbounds %struct.Reg, %struct.Reg* %15638, i32 0, i32 0
  %RSI.i32 = bitcast %union.anon* %15639 to i64*
  %15640 = load i64, i64* %RSI.i32
  %15641 = add i64 %15640, 152
  %15642 = load i64, i64* %PC.i30
  %15643 = add i64 %15642, 6
  store i64 %15643, i64* %PC.i30
  %15644 = inttoptr i64 %15641 to i32*
  %15645 = load i32, i32* %15644
  %15646 = zext i32 %15645 to i64
  store i64 %15646, i64* %RAX.i31, align 8
  store %struct.Memory* %loadMem_44237b, %struct.Memory** %MEMORY
  %loadMem_442381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15648 = getelementptr inbounds %struct.GPR, %struct.GPR* %15647, i32 0, i32 33
  %15649 = getelementptr inbounds %struct.Reg, %struct.Reg* %15648, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %15649 to i64*
  %15650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15651 = getelementptr inbounds %struct.GPR, %struct.GPR* %15650, i32 0, i32 1
  %15652 = getelementptr inbounds %struct.Reg, %struct.Reg* %15651, i32 0, i32 0
  %RAX.i28 = bitcast %union.anon* %15652 to i64*
  %15653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15654 = getelementptr inbounds %struct.GPR, %struct.GPR* %15653, i32 0, i32 15
  %15655 = getelementptr inbounds %struct.Reg, %struct.Reg* %15654, i32 0, i32 0
  %RBP.i29 = bitcast %union.anon* %15655 to i64*
  %15656 = load i64, i64* %RAX.i28
  %15657 = load i64, i64* %RBP.i29
  %15658 = sub i64 %15657, 32
  %15659 = load i64, i64* %PC.i27
  %15660 = add i64 %15659, 3
  store i64 %15660, i64* %PC.i27
  %15661 = trunc i64 %15656 to i32
  %15662 = inttoptr i64 %15658 to i32*
  %15663 = load i32, i32* %15662
  %15664 = add i32 %15663, %15661
  %15665 = zext i32 %15664 to i64
  store i64 %15665, i64* %RAX.i28, align 8
  %15666 = icmp ult i32 %15664, %15661
  %15667 = icmp ult i32 %15664, %15663
  %15668 = or i1 %15666, %15667
  %15669 = zext i1 %15668 to i8
  %15670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15669, i8* %15670, align 1
  %15671 = and i32 %15664, 255
  %15672 = call i32 @llvm.ctpop.i32(i32 %15671)
  %15673 = trunc i32 %15672 to i8
  %15674 = and i8 %15673, 1
  %15675 = xor i8 %15674, 1
  %15676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15675, i8* %15676, align 1
  %15677 = xor i32 %15663, %15661
  %15678 = xor i32 %15677, %15664
  %15679 = lshr i32 %15678, 4
  %15680 = trunc i32 %15679 to i8
  %15681 = and i8 %15680, 1
  %15682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15681, i8* %15682, align 1
  %15683 = icmp eq i32 %15664, 0
  %15684 = zext i1 %15683 to i8
  %15685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15684, i8* %15685, align 1
  %15686 = lshr i32 %15664, 31
  %15687 = trunc i32 %15686 to i8
  %15688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15687, i8* %15688, align 1
  %15689 = lshr i32 %15661, 31
  %15690 = lshr i32 %15663, 31
  %15691 = xor i32 %15686, %15689
  %15692 = xor i32 %15686, %15690
  %15693 = add i32 %15691, %15692
  %15694 = icmp eq i32 %15693, 2
  %15695 = zext i1 %15694 to i8
  %15696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15695, i8* %15696, align 1
  store %struct.Memory* %loadMem_442381, %struct.Memory** %MEMORY
  %loadMem_442384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15698 = getelementptr inbounds %struct.GPR, %struct.GPR* %15697, i32 0, i32 33
  %15699 = getelementptr inbounds %struct.Reg, %struct.Reg* %15698, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %15699 to i64*
  %15700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15701 = getelementptr inbounds %struct.GPR, %struct.GPR* %15700, i32 0, i32 1
  %15702 = getelementptr inbounds %struct.Reg, %struct.Reg* %15701, i32 0, i32 0
  %EAX.i25 = bitcast %union.anon* %15702 to i32*
  %15703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15704 = getelementptr inbounds %struct.GPR, %struct.GPR* %15703, i32 0, i32 9
  %15705 = getelementptr inbounds %struct.Reg, %struct.Reg* %15704, i32 0, i32 0
  %RSI.i26 = bitcast %union.anon* %15705 to i64*
  %15706 = load i32, i32* %EAX.i25
  %15707 = zext i32 %15706 to i64
  %15708 = load i64, i64* %PC.i24
  %15709 = add i64 %15708, 3
  store i64 %15709, i64* %PC.i24
  %15710 = shl i64 %15707, 32
  %15711 = ashr exact i64 %15710, 32
  store i64 %15711, i64* %RSI.i26, align 8
  store %struct.Memory* %loadMem_442384, %struct.Memory** %MEMORY
  %loadMem_442387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15713 = getelementptr inbounds %struct.GPR, %struct.GPR* %15712, i32 0, i32 33
  %15714 = getelementptr inbounds %struct.Reg, %struct.Reg* %15713, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %15714 to i64*
  %15715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15716 = getelementptr inbounds %struct.GPR, %struct.GPR* %15715, i32 0, i32 5
  %15717 = getelementptr inbounds %struct.Reg, %struct.Reg* %15716, i32 0, i32 0
  %CX.i = bitcast %union.anon* %15717 to i16*
  %15718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15719 = getelementptr inbounds %struct.GPR, %struct.GPR* %15718, i32 0, i32 7
  %15720 = getelementptr inbounds %struct.Reg, %struct.Reg* %15719, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %15720 to i64*
  %15721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15722 = getelementptr inbounds %struct.GPR, %struct.GPR* %15721, i32 0, i32 9
  %15723 = getelementptr inbounds %struct.Reg, %struct.Reg* %15722, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %15723 to i64*
  %15724 = load i64, i64* %RDX.i
  %15725 = load i64, i64* %RSI.i
  %15726 = mul i64 %15725, 2
  %15727 = add i64 %15726, %15724
  %15728 = load i16, i16* %CX.i
  %15729 = zext i16 %15728 to i64
  %15730 = load i64, i64* %PC.i23
  %15731 = add i64 %15730, 4
  store i64 %15731, i64* %PC.i23
  %15732 = inttoptr i64 %15727 to i16*
  store i16 %15728, i16* %15732
  store %struct.Memory* %loadMem_442387, %struct.Memory** %MEMORY
  %loadMem_44238b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15734 = getelementptr inbounds %struct.GPR, %struct.GPR* %15733, i32 0, i32 33
  %15735 = getelementptr inbounds %struct.Reg, %struct.Reg* %15734, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %15735 to i64*
  %15736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15737 = getelementptr inbounds %struct.GPR, %struct.GPR* %15736, i32 0, i32 1
  %15738 = getelementptr inbounds %struct.Reg, %struct.Reg* %15737, i32 0, i32 0
  %RAX.i21 = bitcast %union.anon* %15738 to i64*
  %15739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15740 = getelementptr inbounds %struct.GPR, %struct.GPR* %15739, i32 0, i32 15
  %15741 = getelementptr inbounds %struct.Reg, %struct.Reg* %15740, i32 0, i32 0
  %RBP.i22 = bitcast %union.anon* %15741 to i64*
  %15742 = load i64, i64* %RBP.i22
  %15743 = sub i64 %15742, 32
  %15744 = load i64, i64* %PC.i20
  %15745 = add i64 %15744, 3
  store i64 %15745, i64* %PC.i20
  %15746 = inttoptr i64 %15743 to i32*
  %15747 = load i32, i32* %15746
  %15748 = zext i32 %15747 to i64
  store i64 %15748, i64* %RAX.i21, align 8
  store %struct.Memory* %loadMem_44238b, %struct.Memory** %MEMORY
  %loadMem_44238e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15750 = getelementptr inbounds %struct.GPR, %struct.GPR* %15749, i32 0, i32 33
  %15751 = getelementptr inbounds %struct.Reg, %struct.Reg* %15750, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %15751 to i64*
  %15752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15753 = getelementptr inbounds %struct.GPR, %struct.GPR* %15752, i32 0, i32 1
  %15754 = getelementptr inbounds %struct.Reg, %struct.Reg* %15753, i32 0, i32 0
  %RAX.i19 = bitcast %union.anon* %15754 to i64*
  %15755 = load i64, i64* %RAX.i19
  %15756 = load i64, i64* %PC.i18
  %15757 = add i64 %15756, 3
  store i64 %15757, i64* %PC.i18
  %15758 = trunc i64 %15755 to i32
  %15759 = add i32 1, %15758
  %15760 = zext i32 %15759 to i64
  store i64 %15760, i64* %RAX.i19, align 8
  %15761 = icmp ult i32 %15759, %15758
  %15762 = icmp ult i32 %15759, 1
  %15763 = or i1 %15761, %15762
  %15764 = zext i1 %15763 to i8
  %15765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15764, i8* %15765, align 1
  %15766 = and i32 %15759, 255
  %15767 = call i32 @llvm.ctpop.i32(i32 %15766)
  %15768 = trunc i32 %15767 to i8
  %15769 = and i8 %15768, 1
  %15770 = xor i8 %15769, 1
  %15771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15770, i8* %15771, align 1
  %15772 = xor i64 1, %15755
  %15773 = trunc i64 %15772 to i32
  %15774 = xor i32 %15773, %15759
  %15775 = lshr i32 %15774, 4
  %15776 = trunc i32 %15775 to i8
  %15777 = and i8 %15776, 1
  %15778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15777, i8* %15778, align 1
  %15779 = icmp eq i32 %15759, 0
  %15780 = zext i1 %15779 to i8
  %15781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15780, i8* %15781, align 1
  %15782 = lshr i32 %15759, 31
  %15783 = trunc i32 %15782 to i8
  %15784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15783, i8* %15784, align 1
  %15785 = lshr i32 %15758, 31
  %15786 = xor i32 %15782, %15785
  %15787 = add i32 %15786, %15782
  %15788 = icmp eq i32 %15787, 2
  %15789 = zext i1 %15788 to i8
  %15790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15789, i8* %15790, align 1
  store %struct.Memory* %loadMem_44238e, %struct.Memory** %MEMORY
  %loadMem_442391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15792 = getelementptr inbounds %struct.GPR, %struct.GPR* %15791, i32 0, i32 33
  %15793 = getelementptr inbounds %struct.Reg, %struct.Reg* %15792, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %15793 to i64*
  %15794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15795 = getelementptr inbounds %struct.GPR, %struct.GPR* %15794, i32 0, i32 1
  %15796 = getelementptr inbounds %struct.Reg, %struct.Reg* %15795, i32 0, i32 0
  %EAX.i16 = bitcast %union.anon* %15796 to i32*
  %15797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15798 = getelementptr inbounds %struct.GPR, %struct.GPR* %15797, i32 0, i32 15
  %15799 = getelementptr inbounds %struct.Reg, %struct.Reg* %15798, i32 0, i32 0
  %RBP.i17 = bitcast %union.anon* %15799 to i64*
  %15800 = load i64, i64* %RBP.i17
  %15801 = sub i64 %15800, 32
  %15802 = load i32, i32* %EAX.i16
  %15803 = zext i32 %15802 to i64
  %15804 = load i64, i64* %PC.i15
  %15805 = add i64 %15804, 3
  store i64 %15805, i64* %PC.i15
  %15806 = inttoptr i64 %15801 to i32*
  store i32 %15802, i32* %15806
  store %struct.Memory* %loadMem_442391, %struct.Memory** %MEMORY
  %loadMem_442394 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15808 = getelementptr inbounds %struct.GPR, %struct.GPR* %15807, i32 0, i32 33
  %15809 = getelementptr inbounds %struct.Reg, %struct.Reg* %15808, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %15809 to i64*
  %15810 = load i64, i64* %PC.i14
  %15811 = add i64 %15810, -1318
  %15812 = load i64, i64* %PC.i14
  %15813 = add i64 %15812, 5
  store i64 %15813, i64* %PC.i14
  %15814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15811, i64* %15814, align 8
  store %struct.Memory* %loadMem_442394, %struct.Memory** %MEMORY
  br label %block_.L_441e6e

block_.L_442399:                                  ; preds = %block_.L_441e6e
  %loadMem_442399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15816 = getelementptr inbounds %struct.GPR, %struct.GPR* %15815, i32 0, i32 33
  %15817 = getelementptr inbounds %struct.Reg, %struct.Reg* %15816, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %15817 to i64*
  %15818 = load i64, i64* %PC.i13
  %15819 = add i64 %15818, 5
  %15820 = load i64, i64* %PC.i13
  %15821 = add i64 %15820, 5
  store i64 %15821, i64* %PC.i13
  %15822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15819, i64* %15822, align 8
  store %struct.Memory* %loadMem_442399, %struct.Memory** %MEMORY
  br label %block_.L_44239e

block_.L_44239e:                                  ; preds = %block_.L_442399
  %loadMem_44239e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15824 = getelementptr inbounds %struct.GPR, %struct.GPR* %15823, i32 0, i32 33
  %15825 = getelementptr inbounds %struct.Reg, %struct.Reg* %15824, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %15825 to i64*
  %15826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15827 = getelementptr inbounds %struct.GPR, %struct.GPR* %15826, i32 0, i32 1
  %15828 = getelementptr inbounds %struct.Reg, %struct.Reg* %15827, i32 0, i32 0
  %RAX.i11 = bitcast %union.anon* %15828 to i64*
  %15829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15830 = getelementptr inbounds %struct.GPR, %struct.GPR* %15829, i32 0, i32 15
  %15831 = getelementptr inbounds %struct.Reg, %struct.Reg* %15830, i32 0, i32 0
  %RBP.i12 = bitcast %union.anon* %15831 to i64*
  %15832 = load i64, i64* %RBP.i12
  %15833 = sub i64 %15832, 28
  %15834 = load i64, i64* %PC.i10
  %15835 = add i64 %15834, 3
  store i64 %15835, i64* %PC.i10
  %15836 = inttoptr i64 %15833 to i32*
  %15837 = load i32, i32* %15836
  %15838 = zext i32 %15837 to i64
  store i64 %15838, i64* %RAX.i11, align 8
  store %struct.Memory* %loadMem_44239e, %struct.Memory** %MEMORY
  %loadMem_4423a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15840 = getelementptr inbounds %struct.GPR, %struct.GPR* %15839, i32 0, i32 33
  %15841 = getelementptr inbounds %struct.Reg, %struct.Reg* %15840, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %15841 to i64*
  %15842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15843 = getelementptr inbounds %struct.GPR, %struct.GPR* %15842, i32 0, i32 1
  %15844 = getelementptr inbounds %struct.Reg, %struct.Reg* %15843, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %15844 to i64*
  %15845 = load i64, i64* %RAX.i
  %15846 = load i64, i64* %PC.i9
  %15847 = add i64 %15846, 3
  store i64 %15847, i64* %PC.i9
  %15848 = trunc i64 %15845 to i32
  %15849 = add i32 1, %15848
  %15850 = zext i32 %15849 to i64
  store i64 %15850, i64* %RAX.i, align 8
  %15851 = icmp ult i32 %15849, %15848
  %15852 = icmp ult i32 %15849, 1
  %15853 = or i1 %15851, %15852
  %15854 = zext i1 %15853 to i8
  %15855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15854, i8* %15855, align 1
  %15856 = and i32 %15849, 255
  %15857 = call i32 @llvm.ctpop.i32(i32 %15856)
  %15858 = trunc i32 %15857 to i8
  %15859 = and i8 %15858, 1
  %15860 = xor i8 %15859, 1
  %15861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15860, i8* %15861, align 1
  %15862 = xor i64 1, %15845
  %15863 = trunc i64 %15862 to i32
  %15864 = xor i32 %15863, %15849
  %15865 = lshr i32 %15864, 4
  %15866 = trunc i32 %15865 to i8
  %15867 = and i8 %15866, 1
  %15868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15867, i8* %15868, align 1
  %15869 = icmp eq i32 %15849, 0
  %15870 = zext i1 %15869 to i8
  %15871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15870, i8* %15871, align 1
  %15872 = lshr i32 %15849, 31
  %15873 = trunc i32 %15872 to i8
  %15874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15873, i8* %15874, align 1
  %15875 = lshr i32 %15848, 31
  %15876 = xor i32 %15872, %15875
  %15877 = add i32 %15876, %15872
  %15878 = icmp eq i32 %15877, 2
  %15879 = zext i1 %15878 to i8
  %15880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15879, i8* %15880, align 1
  store %struct.Memory* %loadMem_4423a1, %struct.Memory** %MEMORY
  %loadMem_4423a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15882 = getelementptr inbounds %struct.GPR, %struct.GPR* %15881, i32 0, i32 33
  %15883 = getelementptr inbounds %struct.Reg, %struct.Reg* %15882, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %15883 to i64*
  %15884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15885 = getelementptr inbounds %struct.GPR, %struct.GPR* %15884, i32 0, i32 1
  %15886 = getelementptr inbounds %struct.Reg, %struct.Reg* %15885, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %15886 to i32*
  %15887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15888 = getelementptr inbounds %struct.GPR, %struct.GPR* %15887, i32 0, i32 15
  %15889 = getelementptr inbounds %struct.Reg, %struct.Reg* %15888, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %15889 to i64*
  %15890 = load i64, i64* %RBP.i8
  %15891 = sub i64 %15890, 28
  %15892 = load i32, i32* %EAX.i
  %15893 = zext i32 %15892 to i64
  %15894 = load i64, i64* %PC.i7
  %15895 = add i64 %15894, 3
  store i64 %15895, i64* %PC.i7
  %15896 = inttoptr i64 %15891 to i32*
  store i32 %15892, i32* %15896
  store %struct.Memory* %loadMem_4423a4, %struct.Memory** %MEMORY
  %loadMem_4423a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15898 = getelementptr inbounds %struct.GPR, %struct.GPR* %15897, i32 0, i32 33
  %15899 = getelementptr inbounds %struct.Reg, %struct.Reg* %15898, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %15899 to i64*
  %15900 = load i64, i64* %PC.i6
  %15901 = add i64 %15900, -1354
  %15902 = load i64, i64* %PC.i6
  %15903 = add i64 %15902, 5
  store i64 %15903, i64* %PC.i6
  %15904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15901, i64* %15904, align 8
  store %struct.Memory* %loadMem_4423a7, %struct.Memory** %MEMORY
  br label %block_.L_441e5d

block_.L_4423ac:                                  ; preds = %block_.L_441e5d
  %loadMem_4423ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %15905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15906 = getelementptr inbounds %struct.GPR, %struct.GPR* %15905, i32 0, i32 33
  %15907 = getelementptr inbounds %struct.Reg, %struct.Reg* %15906, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %15907 to i64*
  %15908 = load i64, i64* %PC.i5
  %15909 = add i64 %15908, 5
  %15910 = load i64, i64* %PC.i5
  %15911 = add i64 %15910, 5
  store i64 %15911, i64* %PC.i5
  %15912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15909, i64* %15912, align 8
  store %struct.Memory* %loadMem_4423ac, %struct.Memory** %MEMORY
  br label %block_.L_4423b1

block_.L_4423b1:                                  ; preds = %block_.L_4423ac, %block_.L_441e07
  %loadMem_4423b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15914 = getelementptr inbounds %struct.GPR, %struct.GPR* %15913, i32 0, i32 33
  %15915 = getelementptr inbounds %struct.Reg, %struct.Reg* %15914, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %15915 to i64*
  %15916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15917 = getelementptr inbounds %struct.GPR, %struct.GPR* %15916, i32 0, i32 13
  %15918 = getelementptr inbounds %struct.Reg, %struct.Reg* %15917, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %15918 to i64*
  %15919 = load i64, i64* %RSP.i
  %15920 = load i64, i64* %PC.i4
  %15921 = add i64 %15920, 7
  store i64 %15921, i64* %PC.i4
  %15922 = add i64 352, %15919
  store i64 %15922, i64* %RSP.i, align 8
  %15923 = icmp ult i64 %15922, %15919
  %15924 = icmp ult i64 %15922, 352
  %15925 = or i1 %15923, %15924
  %15926 = zext i1 %15925 to i8
  %15927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15926, i8* %15927, align 1
  %15928 = trunc i64 %15922 to i32
  %15929 = and i32 %15928, 255
  %15930 = call i32 @llvm.ctpop.i32(i32 %15929)
  %15931 = trunc i32 %15930 to i8
  %15932 = and i8 %15931, 1
  %15933 = xor i8 %15932, 1
  %15934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15933, i8* %15934, align 1
  %15935 = xor i64 352, %15919
  %15936 = xor i64 %15935, %15922
  %15937 = lshr i64 %15936, 4
  %15938 = trunc i64 %15937 to i8
  %15939 = and i8 %15938, 1
  %15940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15939, i8* %15940, align 1
  %15941 = icmp eq i64 %15922, 0
  %15942 = zext i1 %15941 to i8
  %15943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15942, i8* %15943, align 1
  %15944 = lshr i64 %15922, 63
  %15945 = trunc i64 %15944 to i8
  %15946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15945, i8* %15946, align 1
  %15947 = lshr i64 %15919, 63
  %15948 = xor i64 %15944, %15947
  %15949 = add i64 %15948, %15944
  %15950 = icmp eq i64 %15949, 2
  %15951 = zext i1 %15950 to i8
  %15952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15951, i8* %15952, align 1
  store %struct.Memory* %loadMem_4423b1, %struct.Memory** %MEMORY
  %loadMem_4423b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15954 = getelementptr inbounds %struct.GPR, %struct.GPR* %15953, i32 0, i32 33
  %15955 = getelementptr inbounds %struct.Reg, %struct.Reg* %15954, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %15955 to i64*
  %15956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15957 = getelementptr inbounds %struct.GPR, %struct.GPR* %15956, i32 0, i32 15
  %15958 = getelementptr inbounds %struct.Reg, %struct.Reg* %15957, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %15958 to i64*
  %15959 = load i64, i64* %PC.i2
  %15960 = add i64 %15959, 1
  store i64 %15960, i64* %PC.i2
  %15961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15962 = load i64, i64* %15961, align 8
  %15963 = add i64 %15962, 8
  %15964 = inttoptr i64 %15962 to i64*
  %15965 = load i64, i64* %15964
  store i64 %15965, i64* %RBP.i3, align 8
  store i64 %15963, i64* %15961, align 8
  store %struct.Memory* %loadMem_4423b8, %struct.Memory** %MEMORY
  %loadMem_4423b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15967 = getelementptr inbounds %struct.GPR, %struct.GPR* %15966, i32 0, i32 33
  %15968 = getelementptr inbounds %struct.Reg, %struct.Reg* %15967, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %15968 to i64*
  %15969 = load i64, i64* %PC.i1
  %15970 = add i64 %15969, 1
  store i64 %15970, i64* %PC.i1
  %15971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15973 = load i64, i64* %15972, align 8
  %15974 = inttoptr i64 %15973 to i64*
  %15975 = load i64, i64* %15974
  store i64 %15975, i64* %15971, align 8
  %15976 = add i64 %15973, 8
  store i64 %15976, i64* %15972, align 8
  store %struct.Memory* %loadMem_4423b9, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_4423b9
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x160___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 352
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 352
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 352, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rdi____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x48__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x111__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 273
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4415c3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 1, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x18__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x112__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 274
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4415b7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__0x18__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sete__cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x112__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 274
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x112__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 274
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x111__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 273
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x111__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 273
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4b8e40___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4b8e40_type* @G__0x4b8e40 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xc0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 192, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x100__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %AL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__al___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 11
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDI = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bfc__r8____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 72700
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  store i32 0, i32* %12
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_441e07(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x11c08__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 72712
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44170a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x11c04__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 72708
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4416f7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x2a__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x24__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x28__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x2c__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x2e__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 46
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x100__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x2___r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R10D to i64*
  %10 = load i32, i32* %R10D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = shl i64 %11, 32
  %15 = ashr exact i64 %14, 32
  %16 = ashr i64 %15, 1
  %17 = lshr i64 %16, 1
  %18 = trunc i64 %16 to i8
  %19 = and i8 %18, 1
  %20 = trunc i64 %17 to i32
  %21 = and i64 %17, 4294967295
  store i64 %21, i64* %9, align 8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  store i8 %28, i8* %23, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %31 = icmp eq i32 %20, 0
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %34 = lshr i32 %20, 31
  %35 = trunc i32 %34 to i8
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r10d___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rdi_4____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.SetModesAndRefframe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl_MINUS0x2a__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw_MINUS0x2c__rbp____r11w(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  store i16 %17, i16* %R11W, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl__r11w___r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i16, i16* %R11W
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = trunc i64 %14 to i32
  %18 = shl i32 %17, 16
  %19 = ashr exact i32 %18, 16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d____rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl_MINUS0x2e__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 46
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i16*
  %18 = load i16, i16* %17
  %19 = sext i16 %18 to i64
  %20 = and i64 %19, 4294967295
  store i64 %20, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 8
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.ChromaPrediction4x4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 4, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 4
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 4, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44164e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4416fc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441630(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11ac8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72392
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44185c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_441857(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_441844(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4417dd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw___rax__rcx_2____dx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  store i16 %22, i16* %DX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xa4__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xa0__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x20__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__dx____rax__rcx_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441831(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44180c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6f8f20___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6f8f20_type* @G__0x6f8f20 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44182c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d2ec0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d2ec0_type* @G__0x6d2ec0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441836(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441744(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441849(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441726(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441bc5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4418e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4418e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4418df(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4418cc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441890(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4418d1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44187f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441bc0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_441a2b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_441a26(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_441a13(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4419ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441a00(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4419db(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4419fb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441a05(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441913(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441a18(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4418f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441bbb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_441bb6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_441ba3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_441b04(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f6f90___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f6f90_type* @G_0x6f6f90 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb4__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb0__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x20__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rax__rcx_2____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rax__rcx_2____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441b90(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_441b4f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6f6fa0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6f6fa0_type* @G__0x6f6fa0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441b8b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d40f0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d40f0_type* @G__0x6d40f0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441b95(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441a50(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441ba8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441a32(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_441bfa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_441bfa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.dct_chroma_sp(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441df4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_441def(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_441cb8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x9__0x48__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 9
  %16 = icmp ult i32 %14, 9
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 9
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_441cb8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xa__0x48__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 10
  %16 = icmp ult i32 %14, 10
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 10
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xd__0x48__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 13
  %16 = icmp ult i32 %14, 13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 13
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_441cd1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.dct_chroma(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441ce5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_441dea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_441de5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_441dd2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_441d82(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441dbf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441dc4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441d1f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441dd7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441d01(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441dea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441def(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441df9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441618(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 3
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x1cc__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 460
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x1cc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 460
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4423b1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x10__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 16
  %16 = icmp ult i32 %14, 16
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 16
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4423ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x10__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 16
  %16 = icmp ult i32 %14, 16
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 16
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_442399(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x725610___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x400___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 1024, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 1024
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1024, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6f8f20___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6f8f20_type* @G__0x6f8f20 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d2ec0___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d2ec0_type* @G__0x6d2ec0 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x722ff0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x722ff0_type* @G__0x722ff0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdi__r8_4____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RDI
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R8, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___r8__rdi_4____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i64, i64* %R8
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R10D to i64*
  %10 = load i32, i32* %R10D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = shl i64 %11, 32
  %15 = ashr i64 %14, 33
  %16 = trunc i64 %11 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %9, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__r10d___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %R10D
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = sub i32 %13, %15
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %12, align 8
  %21 = icmp ult i32 %13, %15
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %19, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %16, %14
  %31 = trunc i64 %30 to i32
  %32 = xor i32 %31, %19
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %19, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %19, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %13, 31
  %44 = lshr i32 %15, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x110__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rsi__rdi_4____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x110__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 272
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %13
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %12, align 8
  %23 = icmp ult i32 %21, %13
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %13
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %13, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x108__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x110__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 272
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdi__rsi_4____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i64, i64* %RDI
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x10c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10c__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 268
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rdx__rsi_4____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i32, i32* %R9D
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* %RDX
  %19 = load i64, i64* %RSI
  %20 = mul i64 %19, 4
  %21 = add i64 %20, %18
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %21 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %16
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %15, align 8
  %28 = icmp ult i32 %26, %16
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %16
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %16, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x104__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bf0__rdx____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RDX
  %14 = add i64 %13, 72688
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10c__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 268
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rcx__rdx_4____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i32, i32* %R10D
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* %RCX
  %19 = load i64, i64* %RDX
  %20 = mul i64 %19, 4
  %21 = add i64 %20, %18
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %21 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %16
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %15, align 8
  %28 = icmp ult i32 %26, %16
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %16
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %16, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__r10d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x118__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_441f93(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x11c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441fc1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x725610___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x400___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 1024, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 1024
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1024, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rax__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RCX, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x11c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x11c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x118__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_441fee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x120__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_442068(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rcx__rsi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RDX, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_44202e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x124__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 292
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44205c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x124__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 292
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x124__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 292
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x120__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x120__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x725610___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___si(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %SI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %SI, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1940__rdi____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rdi____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x9c__r8____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rdi__r8_8____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %R8
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x98__r8____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x20__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__si____rdi__r8_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %SI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 5
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rdi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x108__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 264
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rdx__rdi_4____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i32, i32* %R9D
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* %RDX
  %19 = load i64, i64* %RDI
  %20 = mul i64 %19, 4
  %21 = add i64 %20, %18
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %21 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %16
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %15, align 8
  %28 = icmp ult i32 %26, %16
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %16
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %16, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__r9d___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x128__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_442106(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x12c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44212e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x108__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x12c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x12c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x128__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44215b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x130__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4421c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x108__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_442194(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x134__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 308
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4421bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x134__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 308
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x134__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 308
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x130__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x130__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x800___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 2048, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2048
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2048, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1918__rdi____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bf0__rdi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 72688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x104__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 260
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x138__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_44226a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_442298(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x800___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 2048, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2048
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2048, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x104__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x13c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x13c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x138__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4422c5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x140__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 320
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44233f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x800___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 2048, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2048
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2048, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x104__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_442305(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x144__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 324
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_442333(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x144__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 324
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x144__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 324
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x140__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 320
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x140__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 320
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___cx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %CX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1940__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x9c__rsi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x98__rsi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__cx____rdx__rsi_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %CX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441e6e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44239e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_441e5d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4423b1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x160___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 352, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 352
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 352, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
