; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6cbf58_type = type <{ [8 x i8] }>
%G_0x6d1fa0_type = type <{ [4 x i8] }>
%G_0x6d1fa4_type = type <{ [4 x i8] }>
%G_0x6f8f00_type = type <{ [8 x i8] }>
%G_0x710770_type = type <{ [8 x i8] }>
%G_0x8dbcd__rip__type = type <{ [8 x i8] }>
%G__0x49e710_type = type <{ [8 x i8] }>
%G__0x49e910_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb8f8 = global %G_0x6cb8f8_type zeroinitializer
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6cbf58 = global %G_0x6cbf58_type zeroinitializer
@G_0x6d1fa0 = global %G_0x6d1fa0_type zeroinitializer
@G_0x6d1fa4 = global %G_0x6d1fa4_type zeroinitializer
@G_0x6f8f00 = global %G_0x6f8f00_type zeroinitializer
@G_0x710770 = global %G_0x710770_type zeroinitializer
@G_0x8dbcd__rip_ = global %G_0x8dbcd__rip__type zeroinitializer
@G__0x49e710 = global %G__0x49e710_type zeroinitializer
@G__0x49e910 = global %G__0x49e910_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_4231a0.AddUpSADQuarter(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @FastSubPelBlockMotionSearch(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_423bb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_423bb0, %struct.Memory** %MEMORY
  %loadMem_423bb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i297 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i298 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i297
  %27 = load i64, i64* %PC.i296
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i296
  store i64 %26, i64* %RBP.i298, align 8
  store %struct.Memory* %loadMem_423bb1, %struct.Memory** %MEMORY
  %loadMem_423bb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 31
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %R15.i320 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %R15.i320
  %36 = load i64, i64* %PC.i319
  %37 = add i64 %36, 2
  store i64 %37, i64* %PC.i319
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, -8
  %41 = inttoptr i64 %40 to i64*
  store i64 %35, i64* %41
  store i64 %40, i64* %38, align 8
  store %struct.Memory* %loadMem_423bb4, %struct.Memory** %MEMORY
  %loadMem_423bb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 33
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 29
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %R14.i840 = bitcast %union.anon* %47 to i64*
  %48 = load i64, i64* %R14.i840
  %49 = load i64, i64* %PC.i839
  %50 = add i64 %49, 2
  store i64 %50, i64* %PC.i839
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, -8
  %54 = inttoptr i64 %53 to i64*
  store i64 %48, i64* %54
  store i64 %53, i64* %51, align 8
  store %struct.Memory* %loadMem_423bb6, %struct.Memory** %MEMORY
  %loadMem_423bb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 33
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %57 to i64*
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %59 = getelementptr inbounds %struct.GPR, %struct.GPR* %58, i32 0, i32 27
  %60 = getelementptr inbounds %struct.Reg, %struct.Reg* %59, i32 0, i32 0
  %R13.i873 = bitcast %union.anon* %60 to i64*
  %61 = load i64, i64* %R13.i873
  %62 = load i64, i64* %PC.i872
  %63 = add i64 %62, 2
  store i64 %63, i64* %PC.i872
  %64 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, -8
  %67 = inttoptr i64 %66 to i64*
  store i64 %61, i64* %67
  store i64 %66, i64* %64, align 8
  store %struct.Memory* %loadMem_423bb8, %struct.Memory** %MEMORY
  %loadMem_423bba = load %struct.Memory*, %struct.Memory** %MEMORY
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %69 = getelementptr inbounds %struct.GPR, %struct.GPR* %68, i32 0, i32 33
  %70 = getelementptr inbounds %struct.Reg, %struct.Reg* %69, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %70 to i64*
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %R12.i895 = bitcast %union.anon* %73 to i64*
  %74 = load i64, i64* %R12.i895
  %75 = load i64, i64* %PC.i894
  %76 = add i64 %75, 2
  store i64 %76, i64* %PC.i894
  %77 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, -8
  %80 = inttoptr i64 %79 to i64*
  store i64 %74, i64* %80
  store i64 %79, i64* %77, align 8
  store %struct.Memory* %loadMem_423bba, %struct.Memory** %MEMORY
  %loadMem_423bbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %81 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %82 = getelementptr inbounds %struct.GPR, %struct.GPR* %81, i32 0, i32 33
  %83 = getelementptr inbounds %struct.Reg, %struct.Reg* %82, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %83 to i64*
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %85 = getelementptr inbounds %struct.GPR, %struct.GPR* %84, i32 0, i32 3
  %86 = getelementptr inbounds %struct.Reg, %struct.Reg* %85, i32 0, i32 0
  %RBX.i918 = bitcast %union.anon* %86 to i64*
  %87 = load i64, i64* %RBX.i918
  %88 = load i64, i64* %PC.i917
  %89 = add i64 %88, 1
  store i64 %89, i64* %PC.i917
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, -8
  %93 = inttoptr i64 %92 to i64*
  store i64 %87, i64* %93
  store i64 %92, i64* %90, align 8
  store %struct.Memory* %loadMem_423bbc, %struct.Memory** %MEMORY
  %loadMem_423bbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %95 = getelementptr inbounds %struct.GPR, %struct.GPR* %94, i32 0, i32 33
  %96 = getelementptr inbounds %struct.Reg, %struct.Reg* %95, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %96 to i64*
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %98 = getelementptr inbounds %struct.GPR, %struct.GPR* %97, i32 0, i32 13
  %99 = getelementptr inbounds %struct.Reg, %struct.Reg* %98, i32 0, i32 0
  %RSP.i942 = bitcast %union.anon* %99 to i64*
  %100 = load i64, i64* %RSP.i942
  %101 = load i64, i64* %PC.i941
  %102 = add i64 %101, 7
  store i64 %102, i64* %PC.i941
  %103 = sub i64 %100, 264
  store i64 %103, i64* %RSP.i942, align 8
  %104 = icmp ult i64 %100, 264
  %105 = zext i1 %104 to i8
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %105, i8* %106, align 1
  %107 = trunc i64 %103 to i32
  %108 = and i32 %107, 255
  %109 = call i32 @llvm.ctpop.i32(i32 %108)
  %110 = trunc i32 %109 to i8
  %111 = and i8 %110, 1
  %112 = xor i8 %111, 1
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %112, i8* %113, align 1
  %114 = xor i64 264, %100
  %115 = xor i64 %114, %103
  %116 = lshr i64 %115, 4
  %117 = trunc i64 %116 to i8
  %118 = and i8 %117, 1
  %119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %118, i8* %119, align 1
  %120 = icmp eq i64 %103, 0
  %121 = zext i1 %120 to i8
  %122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %121, i8* %122, align 1
  %123 = lshr i64 %103, 63
  %124 = trunc i64 %123 to i8
  %125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %124, i8* %125, align 1
  %126 = lshr i64 %100, 63
  %127 = xor i64 %123, %126
  %128 = add i64 %127, %126
  %129 = icmp eq i64 %128, 2
  %130 = zext i1 %129 to i8
  %131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %130, i8* %131, align 1
  store %struct.Memory* %loadMem_423bbd, %struct.Memory** %MEMORY
  %loadMem_423bc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 33
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %PC.i1214 = bitcast %union.anon* %134 to i64*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 1
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %AX.i1215 = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 9
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %SI.i1216 = bitcast %union.anon* %140 to i16*
  %141 = load i16, i16* %SI.i1216
  %142 = zext i16 %141 to i64
  %143 = load i64, i64* %PC.i1214
  %144 = add i64 %143, 3
  store i64 %144, i64* %PC.i1214
  store i16 %141, i16* %AX.i1215, align 2
  store %struct.Memory* %loadMem_423bc4, %struct.Memory** %MEMORY
  %loadMem_423bc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %146 = getelementptr inbounds %struct.GPR, %struct.GPR* %145, i32 0, i32 33
  %147 = getelementptr inbounds %struct.Reg, %struct.Reg* %146, i32 0, i32 0
  %PC.i1320 = bitcast %union.anon* %147 to i64*
  %148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %149 = getelementptr inbounds %struct.GPR, %struct.GPR* %148, i32 0, i32 9
  %150 = getelementptr inbounds %struct.Reg, %struct.Reg* %149, i32 0, i32 0
  %RSI.i1321 = bitcast %union.anon* %150 to i64*
  %151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %152 = getelementptr inbounds %struct.GPR, %struct.GPR* %151, i32 0, i32 15
  %153 = getelementptr inbounds %struct.Reg, %struct.Reg* %152, i32 0, i32 0
  %RBP.i1322 = bitcast %union.anon* %153 to i64*
  %154 = load i64, i64* %RBP.i1322
  %155 = add i64 %154, 72
  %156 = load i64, i64* %PC.i1320
  %157 = add i64 %156, 3
  store i64 %157, i64* %PC.i1320
  %158 = inttoptr i64 %155 to i32*
  %159 = load i32, i32* %158
  %160 = zext i32 %159 to i64
  store i64 %160, i64* %RSI.i1321, align 8
  store %struct.Memory* %loadMem_423bc7, %struct.Memory** %MEMORY
  %loadMem_423bca = load %struct.Memory*, %struct.Memory** %MEMORY
  %161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %162 = getelementptr inbounds %struct.GPR, %struct.GPR* %161, i32 0, i32 33
  %163 = getelementptr inbounds %struct.Reg, %struct.Reg* %162, i32 0, i32 0
  %PC.i1317 = bitcast %union.anon* %163 to i64*
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %165 = getelementptr inbounds %struct.GPR, %struct.GPR* %164, i32 0, i32 21
  %166 = getelementptr inbounds %struct.Reg, %struct.Reg* %165, i32 0, i32 0
  %R10D.i1318 = bitcast %union.anon* %166 to i32*
  %167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %168 = getelementptr inbounds %struct.GPR, %struct.GPR* %167, i32 0, i32 15
  %169 = getelementptr inbounds %struct.Reg, %struct.Reg* %168, i32 0, i32 0
  %RBP.i1319 = bitcast %union.anon* %169 to i64*
  %170 = bitcast i32* %R10D.i1318 to i64*
  %171 = load i64, i64* %RBP.i1319
  %172 = add i64 %171, 64
  %173 = load i64, i64* %PC.i1317
  %174 = add i64 %173, 4
  store i64 %174, i64* %PC.i1317
  %175 = inttoptr i64 %172 to i32*
  %176 = load i32, i32* %175
  %177 = zext i32 %176 to i64
  store i64 %177, i64* %170, align 8
  store %struct.Memory* %loadMem_423bca, %struct.Memory** %MEMORY
  %loadMem_423bce = load %struct.Memory*, %struct.Memory** %MEMORY
  %178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %179 = getelementptr inbounds %struct.GPR, %struct.GPR* %178, i32 0, i32 33
  %180 = getelementptr inbounds %struct.Reg, %struct.Reg* %179, i32 0, i32 0
  %PC.i1314 = bitcast %union.anon* %180 to i64*
  %181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %182 = getelementptr inbounds %struct.GPR, %struct.GPR* %181, i32 0, i32 23
  %183 = getelementptr inbounds %struct.Reg, %struct.Reg* %182, i32 0, i32 0
  %R11D.i1315 = bitcast %union.anon* %183 to i32*
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %185 = getelementptr inbounds %struct.GPR, %struct.GPR* %184, i32 0, i32 15
  %186 = getelementptr inbounds %struct.Reg, %struct.Reg* %185, i32 0, i32 0
  %RBP.i1316 = bitcast %union.anon* %186 to i64*
  %187 = bitcast i32* %R11D.i1315 to i64*
  %188 = load i64, i64* %RBP.i1316
  %189 = add i64 %188, 56
  %190 = load i64, i64* %PC.i1314
  %191 = add i64 %190, 4
  store i64 %191, i64* %PC.i1314
  %192 = inttoptr i64 %189 to i32*
  %193 = load i32, i32* %192
  %194 = zext i32 %193 to i64
  store i64 %194, i64* %187, align 8
  store %struct.Memory* %loadMem_423bce, %struct.Memory** %MEMORY
  %loadMem_423bd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 33
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %PC.i1311 = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 3
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RBX.i1312 = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 15
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RBP.i1313 = bitcast %union.anon* %203 to i64*
  %204 = load i64, i64* %RBP.i1313
  %205 = add i64 %204, 48
  %206 = load i64, i64* %PC.i1311
  %207 = add i64 %206, 3
  store i64 %207, i64* %PC.i1311
  %208 = inttoptr i64 %205 to i32*
  %209 = load i32, i32* %208
  %210 = zext i32 %209 to i64
  store i64 %210, i64* %RBX.i1312, align 8
  store %struct.Memory* %loadMem_423bd2, %struct.Memory** %MEMORY
  %loadMem_423bd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %212 = getelementptr inbounds %struct.GPR, %struct.GPR* %211, i32 0, i32 33
  %213 = getelementptr inbounds %struct.Reg, %struct.Reg* %212, i32 0, i32 0
  %PC.i1308 = bitcast %union.anon* %213 to i64*
  %214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %215 = getelementptr inbounds %struct.GPR, %struct.GPR* %214, i32 0, i32 15
  %216 = getelementptr inbounds %struct.Reg, %struct.Reg* %215, i32 0, i32 0
  %RBP.i1309 = bitcast %union.anon* %216 to i64*
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %218 = getelementptr inbounds %struct.GPR, %struct.GPR* %217, i32 0, i32 29
  %219 = getelementptr inbounds %struct.Reg, %struct.Reg* %218, i32 0, i32 0
  %R14.i1310 = bitcast %union.anon* %219 to i64*
  %220 = load i64, i64* %RBP.i1309
  %221 = add i64 %220, 40
  %222 = load i64, i64* %PC.i1308
  %223 = add i64 %222, 4
  store i64 %223, i64* %PC.i1308
  %224 = inttoptr i64 %221 to i64*
  %225 = load i64, i64* %224
  store i64 %225, i64* %R14.i1310, align 8
  store %struct.Memory* %loadMem_423bd5, %struct.Memory** %MEMORY
  %loadMem_423bd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %227 = getelementptr inbounds %struct.GPR, %struct.GPR* %226, i32 0, i32 33
  %228 = getelementptr inbounds %struct.Reg, %struct.Reg* %227, i32 0, i32 0
  %PC.i1305 = bitcast %union.anon* %228 to i64*
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %230 = getelementptr inbounds %struct.GPR, %struct.GPR* %229, i32 0, i32 15
  %231 = getelementptr inbounds %struct.Reg, %struct.Reg* %230, i32 0, i32 0
  %RBP.i1306 = bitcast %union.anon* %231 to i64*
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %233 = getelementptr inbounds %struct.GPR, %struct.GPR* %232, i32 0, i32 31
  %234 = getelementptr inbounds %struct.Reg, %struct.Reg* %233, i32 0, i32 0
  %R15.i1307 = bitcast %union.anon* %234 to i64*
  %235 = load i64, i64* %RBP.i1306
  %236 = add i64 %235, 32
  %237 = load i64, i64* %PC.i1305
  %238 = add i64 %237, 4
  store i64 %238, i64* %PC.i1305
  %239 = inttoptr i64 %236 to i64*
  %240 = load i64, i64* %239
  store i64 %240, i64* %R15.i1307, align 8
  store %struct.Memory* %loadMem_423bd9, %struct.Memory** %MEMORY
  %loadMem_423bdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %242 = getelementptr inbounds %struct.GPR, %struct.GPR* %241, i32 0, i32 33
  %243 = getelementptr inbounds %struct.Reg, %struct.Reg* %242, i32 0, i32 0
  %PC.i1302 = bitcast %union.anon* %243 to i64*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %245 = getelementptr inbounds %struct.GPR, %struct.GPR* %244, i32 0, i32 25
  %246 = getelementptr inbounds %struct.Reg, %struct.Reg* %245, i32 0, i32 0
  %R12W.i1303 = bitcast %union.anon* %246 to i16*
  %247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %248 = getelementptr inbounds %struct.GPR, %struct.GPR* %247, i32 0, i32 15
  %249 = getelementptr inbounds %struct.Reg, %struct.Reg* %248, i32 0, i32 0
  %RBP.i1304 = bitcast %union.anon* %249 to i64*
  %250 = load i64, i64* %RBP.i1304
  %251 = add i64 %250, 24
  %252 = load i64, i64* %PC.i1302
  %253 = add i64 %252, 5
  store i64 %253, i64* %PC.i1302
  %254 = inttoptr i64 %251 to i16*
  %255 = load i16, i16* %254
  store i16 %255, i16* %R12W.i1303, align 2
  store %struct.Memory* %loadMem_423bdd, %struct.Memory** %MEMORY
  %loadMem_423be2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %257 = getelementptr inbounds %struct.GPR, %struct.GPR* %256, i32 0, i32 33
  %258 = getelementptr inbounds %struct.Reg, %struct.Reg* %257, i32 0, i32 0
  %PC.i1299 = bitcast %union.anon* %258 to i64*
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %260 = getelementptr inbounds %struct.GPR, %struct.GPR* %259, i32 0, i32 27
  %261 = getelementptr inbounds %struct.Reg, %struct.Reg* %260, i32 0, i32 0
  %R13W.i1300 = bitcast %union.anon* %261 to i16*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %263 = getelementptr inbounds %struct.GPR, %struct.GPR* %262, i32 0, i32 15
  %264 = getelementptr inbounds %struct.Reg, %struct.Reg* %263, i32 0, i32 0
  %RBP.i1301 = bitcast %union.anon* %264 to i64*
  %265 = load i64, i64* %RBP.i1301
  %266 = add i64 %265, 16
  %267 = load i64, i64* %PC.i1299
  %268 = add i64 %267, 5
  store i64 %268, i64* %PC.i1299
  %269 = inttoptr i64 %266 to i16*
  %270 = load i16, i16* %269
  store i16 %270, i16* %R13W.i1300, align 2
  store %struct.Memory* %loadMem_423be2, %struct.Memory** %MEMORY
  %loadMem_423be7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %272 = getelementptr inbounds %struct.GPR, %struct.GPR* %271, i32 0, i32 33
  %273 = getelementptr inbounds %struct.Reg, %struct.Reg* %272, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %273 to i64*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %275 = getelementptr inbounds %struct.GPR, %struct.GPR* %274, i32 0, i32 11
  %276 = getelementptr inbounds %struct.Reg, %struct.Reg* %275, i32 0, i32 0
  %RDI.i1297 = bitcast %union.anon* %276 to i64*
  %277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %278 = getelementptr inbounds %struct.GPR, %struct.GPR* %277, i32 0, i32 15
  %279 = getelementptr inbounds %struct.Reg, %struct.Reg* %278, i32 0, i32 0
  %RBP.i1298 = bitcast %union.anon* %279 to i64*
  %280 = load i64, i64* %RBP.i1298
  %281 = sub i64 %280, 48
  %282 = load i64, i64* %RDI.i1297
  %283 = load i64, i64* %PC.i1296
  %284 = add i64 %283, 4
  store i64 %284, i64* %PC.i1296
  %285 = inttoptr i64 %281 to i64*
  store i64 %282, i64* %285
  store %struct.Memory* %loadMem_423be7, %struct.Memory** %MEMORY
  %loadMem_423beb = load %struct.Memory*, %struct.Memory** %MEMORY
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %287 = getelementptr inbounds %struct.GPR, %struct.GPR* %286, i32 0, i32 33
  %288 = getelementptr inbounds %struct.Reg, %struct.Reg* %287, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %288 to i64*
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %290 = getelementptr inbounds %struct.GPR, %struct.GPR* %289, i32 0, i32 1
  %291 = getelementptr inbounds %struct.Reg, %struct.Reg* %290, i32 0, i32 0
  %AX.i1294 = bitcast %union.anon* %291 to i16*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %293 = getelementptr inbounds %struct.GPR, %struct.GPR* %292, i32 0, i32 15
  %294 = getelementptr inbounds %struct.Reg, %struct.Reg* %293, i32 0, i32 0
  %RBP.i1295 = bitcast %union.anon* %294 to i64*
  %295 = load i64, i64* %RBP.i1295
  %296 = sub i64 %295, 50
  %297 = load i16, i16* %AX.i1294
  %298 = zext i16 %297 to i64
  %299 = load i64, i64* %PC.i1293
  %300 = add i64 %299, 4
  store i64 %300, i64* %PC.i1293
  %301 = inttoptr i64 %296 to i16*
  store i16 %297, i16* %301
  store %struct.Memory* %loadMem_423beb, %struct.Memory** %MEMORY
  %loadMem_423bef = load %struct.Memory*, %struct.Memory** %MEMORY
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %303 = getelementptr inbounds %struct.GPR, %struct.GPR* %302, i32 0, i32 33
  %304 = getelementptr inbounds %struct.Reg, %struct.Reg* %303, i32 0, i32 0
  %PC.i1290 = bitcast %union.anon* %304 to i64*
  %305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %306 = getelementptr inbounds %struct.GPR, %struct.GPR* %305, i32 0, i32 7
  %307 = getelementptr inbounds %struct.Reg, %struct.Reg* %306, i32 0, i32 0
  %EDX.i1291 = bitcast %union.anon* %307 to i32*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %309 = getelementptr inbounds %struct.GPR, %struct.GPR* %308, i32 0, i32 15
  %310 = getelementptr inbounds %struct.Reg, %struct.Reg* %309, i32 0, i32 0
  %RBP.i1292 = bitcast %union.anon* %310 to i64*
  %311 = load i64, i64* %RBP.i1292
  %312 = sub i64 %311, 56
  %313 = load i32, i32* %EDX.i1291
  %314 = zext i32 %313 to i64
  %315 = load i64, i64* %PC.i1290
  %316 = add i64 %315, 3
  store i64 %316, i64* %PC.i1290
  %317 = inttoptr i64 %312 to i32*
  store i32 %313, i32* %317
  store %struct.Memory* %loadMem_423bef, %struct.Memory** %MEMORY
  %loadMem_423bf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %319 = getelementptr inbounds %struct.GPR, %struct.GPR* %318, i32 0, i32 33
  %320 = getelementptr inbounds %struct.Reg, %struct.Reg* %319, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %320 to i64*
  %321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %322 = getelementptr inbounds %struct.GPR, %struct.GPR* %321, i32 0, i32 5
  %323 = getelementptr inbounds %struct.Reg, %struct.Reg* %322, i32 0, i32 0
  %ECX.i1288 = bitcast %union.anon* %323 to i32*
  %324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %325 = getelementptr inbounds %struct.GPR, %struct.GPR* %324, i32 0, i32 15
  %326 = getelementptr inbounds %struct.Reg, %struct.Reg* %325, i32 0, i32 0
  %RBP.i1289 = bitcast %union.anon* %326 to i64*
  %327 = load i64, i64* %RBP.i1289
  %328 = sub i64 %327, 60
  %329 = load i32, i32* %ECX.i1288
  %330 = zext i32 %329 to i64
  %331 = load i64, i64* %PC.i1287
  %332 = add i64 %331, 3
  store i64 %332, i64* %PC.i1287
  %333 = inttoptr i64 %328 to i32*
  store i32 %329, i32* %333
  store %struct.Memory* %loadMem_423bf2, %struct.Memory** %MEMORY
  %loadMem_423bf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %335 = getelementptr inbounds %struct.GPR, %struct.GPR* %334, i32 0, i32 33
  %336 = getelementptr inbounds %struct.Reg, %struct.Reg* %335, i32 0, i32 0
  %PC.i1284 = bitcast %union.anon* %336 to i64*
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %338 = getelementptr inbounds %struct.GPR, %struct.GPR* %337, i32 0, i32 17
  %339 = getelementptr inbounds %struct.Reg, %struct.Reg* %338, i32 0, i32 0
  %R8D.i1285 = bitcast %union.anon* %339 to i32*
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %341 = getelementptr inbounds %struct.GPR, %struct.GPR* %340, i32 0, i32 15
  %342 = getelementptr inbounds %struct.Reg, %struct.Reg* %341, i32 0, i32 0
  %RBP.i1286 = bitcast %union.anon* %342 to i64*
  %343 = load i64, i64* %RBP.i1286
  %344 = sub i64 %343, 64
  %345 = load i32, i32* %R8D.i1285
  %346 = zext i32 %345 to i64
  %347 = load i64, i64* %PC.i1284
  %348 = add i64 %347, 4
  store i64 %348, i64* %PC.i1284
  %349 = inttoptr i64 %344 to i32*
  store i32 %345, i32* %349
  store %struct.Memory* %loadMem_423bf5, %struct.Memory** %MEMORY
  %loadMem_423bf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %351 = getelementptr inbounds %struct.GPR, %struct.GPR* %350, i32 0, i32 33
  %352 = getelementptr inbounds %struct.Reg, %struct.Reg* %351, i32 0, i32 0
  %PC.i1281 = bitcast %union.anon* %352 to i64*
  %353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %354 = getelementptr inbounds %struct.GPR, %struct.GPR* %353, i32 0, i32 19
  %355 = getelementptr inbounds %struct.Reg, %struct.Reg* %354, i32 0, i32 0
  %R9D.i1282 = bitcast %union.anon* %355 to i32*
  %356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %357 = getelementptr inbounds %struct.GPR, %struct.GPR* %356, i32 0, i32 15
  %358 = getelementptr inbounds %struct.Reg, %struct.Reg* %357, i32 0, i32 0
  %RBP.i1283 = bitcast %union.anon* %358 to i64*
  %359 = load i64, i64* %RBP.i1283
  %360 = sub i64 %359, 68
  %361 = load i32, i32* %R9D.i1282
  %362 = zext i32 %361 to i64
  %363 = load i64, i64* %PC.i1281
  %364 = add i64 %363, 4
  store i64 %364, i64* %PC.i1281
  %365 = inttoptr i64 %360 to i32*
  store i32 %361, i32* %365
  store %struct.Memory* %loadMem_423bf9, %struct.Memory** %MEMORY
  %loadMem_423bfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %367 = getelementptr inbounds %struct.GPR, %struct.GPR* %366, i32 0, i32 33
  %368 = getelementptr inbounds %struct.Reg, %struct.Reg* %367, i32 0, i32 0
  %PC.i1279 = bitcast %union.anon* %368 to i64*
  %369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %370 = getelementptr inbounds %struct.GPR, %struct.GPR* %369, i32 0, i32 27
  %371 = getelementptr inbounds %struct.Reg, %struct.Reg* %370, i32 0, i32 0
  %R13W.i = bitcast %union.anon* %371 to i16*
  %372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %373 = getelementptr inbounds %struct.GPR, %struct.GPR* %372, i32 0, i32 15
  %374 = getelementptr inbounds %struct.Reg, %struct.Reg* %373, i32 0, i32 0
  %RBP.i1280 = bitcast %union.anon* %374 to i64*
  %375 = load i64, i64* %RBP.i1280
  %376 = sub i64 %375, 70
  %377 = load i16, i16* %R13W.i
  %378 = zext i16 %377 to i64
  %379 = load i64, i64* %PC.i1279
  %380 = add i64 %379, 5
  store i64 %380, i64* %PC.i1279
  %381 = inttoptr i64 %376 to i16*
  store i16 %377, i16* %381
  store %struct.Memory* %loadMem_423bfd, %struct.Memory** %MEMORY
  %loadMem_423c02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %383 = getelementptr inbounds %struct.GPR, %struct.GPR* %382, i32 0, i32 33
  %384 = getelementptr inbounds %struct.Reg, %struct.Reg* %383, i32 0, i32 0
  %PC.i1277 = bitcast %union.anon* %384 to i64*
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %386 = getelementptr inbounds %struct.GPR, %struct.GPR* %385, i32 0, i32 25
  %387 = getelementptr inbounds %struct.Reg, %struct.Reg* %386, i32 0, i32 0
  %R12W.i = bitcast %union.anon* %387 to i16*
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %389 = getelementptr inbounds %struct.GPR, %struct.GPR* %388, i32 0, i32 15
  %390 = getelementptr inbounds %struct.Reg, %struct.Reg* %389, i32 0, i32 0
  %RBP.i1278 = bitcast %union.anon* %390 to i64*
  %391 = load i64, i64* %RBP.i1278
  %392 = sub i64 %391, 72
  %393 = load i16, i16* %R12W.i
  %394 = zext i16 %393 to i64
  %395 = load i64, i64* %PC.i1277
  %396 = add i64 %395, 5
  store i64 %396, i64* %PC.i1277
  %397 = inttoptr i64 %392 to i16*
  store i16 %393, i16* %397
  store %struct.Memory* %loadMem_423c02, %struct.Memory** %MEMORY
  %loadMem_423c07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %399 = getelementptr inbounds %struct.GPR, %struct.GPR* %398, i32 0, i32 33
  %400 = getelementptr inbounds %struct.Reg, %struct.Reg* %399, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %400 to i64*
  %401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %402 = getelementptr inbounds %struct.GPR, %struct.GPR* %401, i32 0, i32 15
  %403 = getelementptr inbounds %struct.Reg, %struct.Reg* %402, i32 0, i32 0
  %RBP.i1275 = bitcast %union.anon* %403 to i64*
  %404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %405 = getelementptr inbounds %struct.GPR, %struct.GPR* %404, i32 0, i32 31
  %406 = getelementptr inbounds %struct.Reg, %struct.Reg* %405, i32 0, i32 0
  %R15.i1276 = bitcast %union.anon* %406 to i64*
  %407 = load i64, i64* %RBP.i1275
  %408 = sub i64 %407, 80
  %409 = load i64, i64* %R15.i1276
  %410 = load i64, i64* %PC.i1274
  %411 = add i64 %410, 4
  store i64 %411, i64* %PC.i1274
  %412 = inttoptr i64 %408 to i64*
  store i64 %409, i64* %412
  store %struct.Memory* %loadMem_423c07, %struct.Memory** %MEMORY
  %loadMem_423c0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %414 = getelementptr inbounds %struct.GPR, %struct.GPR* %413, i32 0, i32 33
  %415 = getelementptr inbounds %struct.Reg, %struct.Reg* %414, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %415 to i64*
  %416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %417 = getelementptr inbounds %struct.GPR, %struct.GPR* %416, i32 0, i32 15
  %418 = getelementptr inbounds %struct.Reg, %struct.Reg* %417, i32 0, i32 0
  %RBP.i1272 = bitcast %union.anon* %418 to i64*
  %419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %420 = getelementptr inbounds %struct.GPR, %struct.GPR* %419, i32 0, i32 29
  %421 = getelementptr inbounds %struct.Reg, %struct.Reg* %420, i32 0, i32 0
  %R14.i1273 = bitcast %union.anon* %421 to i64*
  %422 = load i64, i64* %RBP.i1272
  %423 = sub i64 %422, 88
  %424 = load i64, i64* %R14.i1273
  %425 = load i64, i64* %PC.i1271
  %426 = add i64 %425, 4
  store i64 %426, i64* %PC.i1271
  %427 = inttoptr i64 %423 to i64*
  store i64 %424, i64* %427
  store %struct.Memory* %loadMem_423c0b, %struct.Memory** %MEMORY
  %loadMem_423c0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %429 = getelementptr inbounds %struct.GPR, %struct.GPR* %428, i32 0, i32 33
  %430 = getelementptr inbounds %struct.Reg, %struct.Reg* %429, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %430 to i64*
  %431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %432 = getelementptr inbounds %struct.GPR, %struct.GPR* %431, i32 0, i32 3
  %433 = getelementptr inbounds %struct.Reg, %struct.Reg* %432, i32 0, i32 0
  %EBX.i1269 = bitcast %union.anon* %433 to i32*
  %434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %435 = getelementptr inbounds %struct.GPR, %struct.GPR* %434, i32 0, i32 15
  %436 = getelementptr inbounds %struct.Reg, %struct.Reg* %435, i32 0, i32 0
  %RBP.i1270 = bitcast %union.anon* %436 to i64*
  %437 = load i64, i64* %RBP.i1270
  %438 = sub i64 %437, 92
  %439 = load i32, i32* %EBX.i1269
  %440 = zext i32 %439 to i64
  %441 = load i64, i64* %PC.i1268
  %442 = add i64 %441, 3
  store i64 %442, i64* %PC.i1268
  %443 = inttoptr i64 %438 to i32*
  store i32 %439, i32* %443
  store %struct.Memory* %loadMem_423c0f, %struct.Memory** %MEMORY
  %loadMem_423c12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %445 = getelementptr inbounds %struct.GPR, %struct.GPR* %444, i32 0, i32 33
  %446 = getelementptr inbounds %struct.Reg, %struct.Reg* %445, i32 0, i32 0
  %PC.i1265 = bitcast %union.anon* %446 to i64*
  %447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %448 = getelementptr inbounds %struct.GPR, %struct.GPR* %447, i32 0, i32 23
  %449 = getelementptr inbounds %struct.Reg, %struct.Reg* %448, i32 0, i32 0
  %R11D.i1266 = bitcast %union.anon* %449 to i32*
  %450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %451 = getelementptr inbounds %struct.GPR, %struct.GPR* %450, i32 0, i32 15
  %452 = getelementptr inbounds %struct.Reg, %struct.Reg* %451, i32 0, i32 0
  %RBP.i1267 = bitcast %union.anon* %452 to i64*
  %453 = load i64, i64* %RBP.i1267
  %454 = sub i64 %453, 96
  %455 = load i32, i32* %R11D.i1266
  %456 = zext i32 %455 to i64
  %457 = load i64, i64* %PC.i1265
  %458 = add i64 %457, 4
  store i64 %458, i64* %PC.i1265
  %459 = inttoptr i64 %454 to i32*
  store i32 %455, i32* %459
  store %struct.Memory* %loadMem_423c12, %struct.Memory** %MEMORY
  %loadMem_423c16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %461 = getelementptr inbounds %struct.GPR, %struct.GPR* %460, i32 0, i32 33
  %462 = getelementptr inbounds %struct.Reg, %struct.Reg* %461, i32 0, i32 0
  %PC.i1263 = bitcast %union.anon* %462 to i64*
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %464 = getelementptr inbounds %struct.GPR, %struct.GPR* %463, i32 0, i32 21
  %465 = getelementptr inbounds %struct.Reg, %struct.Reg* %464, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %465 to i32*
  %466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %467 = getelementptr inbounds %struct.GPR, %struct.GPR* %466, i32 0, i32 15
  %468 = getelementptr inbounds %struct.Reg, %struct.Reg* %467, i32 0, i32 0
  %RBP.i1264 = bitcast %union.anon* %468 to i64*
  %469 = load i64, i64* %RBP.i1264
  %470 = sub i64 %469, 100
  %471 = load i32, i32* %R10D.i
  %472 = zext i32 %471 to i64
  %473 = load i64, i64* %PC.i1263
  %474 = add i64 %473, 4
  store i64 %474, i64* %PC.i1263
  %475 = inttoptr i64 %470 to i32*
  store i32 %471, i32* %475
  store %struct.Memory* %loadMem_423c16, %struct.Memory** %MEMORY
  %loadMem_423c1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %477 = getelementptr inbounds %struct.GPR, %struct.GPR* %476, i32 0, i32 33
  %478 = getelementptr inbounds %struct.Reg, %struct.Reg* %477, i32 0, i32 0
  %PC.i1260 = bitcast %union.anon* %478 to i64*
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %480 = getelementptr inbounds %struct.GPR, %struct.GPR* %479, i32 0, i32 15
  %481 = getelementptr inbounds %struct.Reg, %struct.Reg* %480, i32 0, i32 0
  %RBP.i1261 = bitcast %union.anon* %481 to i64*
  %482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %483 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %482, i64 0, i64 0
  %XMM0.i1262 = bitcast %union.VectorReg* %483 to %union.vec128_t*
  %484 = load i64, i64* %RBP.i1261
  %485 = sub i64 %484, 112
  %486 = bitcast %union.vec128_t* %XMM0.i1262 to i8*
  %487 = load i64, i64* %PC.i1260
  %488 = add i64 %487, 5
  store i64 %488, i64* %PC.i1260
  %489 = bitcast i8* %486 to double*
  %490 = load double, double* %489, align 1
  %491 = inttoptr i64 %485 to double*
  store double %490, double* %491
  store %struct.Memory* %loadMem_423c1a, %struct.Memory** %MEMORY
  %loadMem_423c1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %493 = getelementptr inbounds %struct.GPR, %struct.GPR* %492, i32 0, i32 33
  %494 = getelementptr inbounds %struct.Reg, %struct.Reg* %493, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %494 to i64*
  %495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %496 = getelementptr inbounds %struct.GPR, %struct.GPR* %495, i32 0, i32 9
  %497 = getelementptr inbounds %struct.Reg, %struct.Reg* %496, i32 0, i32 0
  %ESI.i1258 = bitcast %union.anon* %497 to i32*
  %498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %499 = getelementptr inbounds %struct.GPR, %struct.GPR* %498, i32 0, i32 15
  %500 = getelementptr inbounds %struct.Reg, %struct.Reg* %499, i32 0, i32 0
  %RBP.i1259 = bitcast %union.anon* %500 to i64*
  %501 = load i64, i64* %RBP.i1259
  %502 = sub i64 %501, 116
  %503 = load i32, i32* %ESI.i1258
  %504 = zext i32 %503 to i64
  %505 = load i64, i64* %PC.i1257
  %506 = add i64 %505, 3
  store i64 %506, i64* %PC.i1257
  %507 = inttoptr i64 %502 to i32*
  store i32 %503, i32* %507
  store %struct.Memory* %loadMem_423c1f, %struct.Memory** %MEMORY
  %loadMem_423c22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %509 = getelementptr inbounds %struct.GPR, %struct.GPR* %508, i32 0, i32 33
  %510 = getelementptr inbounds %struct.Reg, %struct.Reg* %509, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %510 to i64*
  %511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %512 = getelementptr inbounds %struct.GPR, %struct.GPR* %511, i32 0, i32 11
  %513 = getelementptr inbounds %struct.Reg, %struct.Reg* %512, i32 0, i32 0
  %RDI.i1256 = bitcast %union.anon* %513 to i64*
  %514 = load i64, i64* %PC.i1255
  %515 = add i64 %514, 8
  store i64 %515, i64* %PC.i1255
  %516 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %516, i64* %RDI.i1256, align 8
  store %struct.Memory* %loadMem_423c22, %struct.Memory** %MEMORY
  %loadMem_423c2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %518 = getelementptr inbounds %struct.GPR, %struct.GPR* %517, i32 0, i32 33
  %519 = getelementptr inbounds %struct.Reg, %struct.Reg* %518, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %519 to i64*
  %520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %521 = getelementptr inbounds %struct.GPR, %struct.GPR* %520, i32 0, i32 11
  %522 = getelementptr inbounds %struct.Reg, %struct.Reg* %521, i32 0, i32 0
  %RDI.i1254 = bitcast %union.anon* %522 to i64*
  %523 = load i64, i64* %RDI.i1254
  %524 = add i64 %523, 72400
  %525 = load i64, i64* %PC.i1253
  %526 = add i64 %525, 7
  store i64 %526, i64* %PC.i1253
  %527 = inttoptr i64 %524 to i32*
  %528 = load i32, i32* %527
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %529, align 1
  %530 = and i32 %528, 255
  %531 = call i32 @llvm.ctpop.i32(i32 %530)
  %532 = trunc i32 %531 to i8
  %533 = and i8 %532, 1
  %534 = xor i8 %533, 1
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %534, i8* %535, align 1
  %536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %536, align 1
  %537 = icmp eq i32 %528, 0
  %538 = zext i1 %537 to i8
  %539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %538, i8* %539, align 1
  %540 = lshr i32 %528, 31
  %541 = trunc i32 %540 to i8
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %541, i8* %542, align 1
  %543 = lshr i32 %528, 31
  %544 = xor i32 %540, %543
  %545 = add i32 %544, %543
  %546 = icmp eq i32 %545, 2
  %547 = zext i1 %546 to i8
  %548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %547, i8* %548, align 1
  store %struct.Memory* %loadMem_423c2a, %struct.Memory** %MEMORY
  %loadMem_423c31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %550 = getelementptr inbounds %struct.GPR, %struct.GPR* %549, i32 0, i32 33
  %551 = getelementptr inbounds %struct.Reg, %struct.Reg* %550, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %551 to i64*
  %552 = load i64, i64* %PC.i1252
  %553 = add i64 %552, 111
  %554 = load i64, i64* %PC.i1252
  %555 = add i64 %554, 6
  %556 = load i64, i64* %PC.i1252
  %557 = add i64 %556, 6
  store i64 %557, i64* %PC.i1252
  %558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %559 = load i8, i8* %558, align 1
  store i8 %559, i8* %BRANCH_TAKEN, align 1
  %560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %561 = icmp ne i8 %559, 0
  %562 = select i1 %561, i64 %553, i64 %555
  store i64 %562, i64* %560, align 8
  store %struct.Memory* %loadMem_423c31, %struct.Memory** %MEMORY
  %loadBr_423c31 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_423c31 = icmp eq i8 %loadBr_423c31, 1
  br i1 %cmpBr_423c31, label %block_.L_423ca0, label %block_423c37

block_423c37:                                     ; preds = %entry
  %loadMem_423c37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %564 = getelementptr inbounds %struct.GPR, %struct.GPR* %563, i32 0, i32 33
  %565 = getelementptr inbounds %struct.Reg, %struct.Reg* %564, i32 0, i32 0
  %PC.i1250 = bitcast %union.anon* %565 to i64*
  %566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %567 = getelementptr inbounds %struct.GPR, %struct.GPR* %566, i32 0, i32 1
  %568 = getelementptr inbounds %struct.Reg, %struct.Reg* %567, i32 0, i32 0
  %RAX.i1251 = bitcast %union.anon* %568 to i64*
  %569 = load i64, i64* %PC.i1250
  %570 = add i64 %569, 8
  store i64 %570, i64* %PC.i1250
  %571 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %571, i64* %RAX.i1251, align 8
  store %struct.Memory* %loadMem_423c37, %struct.Memory** %MEMORY
  %loadMem_423c3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %573 = getelementptr inbounds %struct.GPR, %struct.GPR* %572, i32 0, i32 33
  %574 = getelementptr inbounds %struct.Reg, %struct.Reg* %573, i32 0, i32 0
  %PC.i1248 = bitcast %union.anon* %574 to i64*
  %575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %576 = getelementptr inbounds %struct.GPR, %struct.GPR* %575, i32 0, i32 1
  %577 = getelementptr inbounds %struct.Reg, %struct.Reg* %576, i32 0, i32 0
  %RAX.i1249 = bitcast %union.anon* %577 to i64*
  %578 = load i64, i64* %RAX.i1249
  %579 = add i64 %578, 14168
  %580 = load i64, i64* %PC.i1248
  %581 = add i64 %580, 7
  store i64 %581, i64* %PC.i1248
  %582 = inttoptr i64 %579 to i64*
  %583 = load i64, i64* %582
  store i64 %583, i64* %RAX.i1249, align 8
  store %struct.Memory* %loadMem_423c3f, %struct.Memory** %MEMORY
  %loadMem_423c46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %585 = getelementptr inbounds %struct.GPR, %struct.GPR* %584, i32 0, i32 33
  %586 = getelementptr inbounds %struct.Reg, %struct.Reg* %585, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %586 to i64*
  %587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %588 = getelementptr inbounds %struct.GPR, %struct.GPR* %587, i32 0, i32 5
  %589 = getelementptr inbounds %struct.Reg, %struct.Reg* %588, i32 0, i32 0
  %RCX.i1247 = bitcast %union.anon* %589 to i64*
  %590 = load i64, i64* %PC.i1246
  %591 = add i64 %590, 8
  store i64 %591, i64* %PC.i1246
  %592 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %592, i64* %RCX.i1247, align 8
  store %struct.Memory* %loadMem_423c46, %struct.Memory** %MEMORY
  %loadMem_423c4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %594 = getelementptr inbounds %struct.GPR, %struct.GPR* %593, i32 0, i32 33
  %595 = getelementptr inbounds %struct.Reg, %struct.Reg* %594, i32 0, i32 0
  %PC.i1244 = bitcast %union.anon* %595 to i64*
  %596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %597 = getelementptr inbounds %struct.GPR, %struct.GPR* %596, i32 0, i32 5
  %598 = getelementptr inbounds %struct.Reg, %struct.Reg* %597, i32 0, i32 0
  %RCX.i1245 = bitcast %union.anon* %598 to i64*
  %599 = load i64, i64* %RCX.i1245
  %600 = add i64 %599, 12
  %601 = load i64, i64* %PC.i1244
  %602 = add i64 %601, 4
  store i64 %602, i64* %PC.i1244
  %603 = inttoptr i64 %600 to i32*
  %604 = load i32, i32* %603
  %605 = sext i32 %604 to i64
  store i64 %605, i64* %RCX.i1245, align 8
  store %struct.Memory* %loadMem_423c4e, %struct.Memory** %MEMORY
  %loadMem_423c52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %607 = getelementptr inbounds %struct.GPR, %struct.GPR* %606, i32 0, i32 33
  %608 = getelementptr inbounds %struct.Reg, %struct.Reg* %607, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %608 to i64*
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %610 = getelementptr inbounds %struct.GPR, %struct.GPR* %609, i32 0, i32 5
  %611 = getelementptr inbounds %struct.Reg, %struct.Reg* %610, i32 0, i32 0
  %RCX.i1243 = bitcast %union.anon* %611 to i64*
  %612 = load i64, i64* %RCX.i1243
  %613 = load i64, i64* %PC.i1242
  %614 = add i64 %613, 7
  store i64 %614, i64* %PC.i1242
  %615 = sext i64 %612 to i128
  %616 = and i128 %615, -18446744073709551616
  %617 = zext i64 %612 to i128
  %618 = or i128 %616, %617
  %619 = mul i128 632, %618
  %620 = trunc i128 %619 to i64
  store i64 %620, i64* %RCX.i1243, align 8
  %621 = sext i64 %620 to i128
  %622 = icmp ne i128 %621, %619
  %623 = zext i1 %622 to i8
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %623, i8* %624, align 1
  %625 = trunc i128 %619 to i32
  %626 = and i32 %625, 255
  %627 = call i32 @llvm.ctpop.i32(i32 %626)
  %628 = trunc i32 %627 to i8
  %629 = and i8 %628, 1
  %630 = xor i8 %629, 1
  %631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %630, i8* %631, align 1
  %632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %632, align 1
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %633, align 1
  %634 = lshr i64 %620, 63
  %635 = trunc i64 %634 to i8
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %635, i8* %636, align 1
  %637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %623, i8* %637, align 1
  store %struct.Memory* %loadMem_423c52, %struct.Memory** %MEMORY
  %loadMem_423c59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %639 = getelementptr inbounds %struct.GPR, %struct.GPR* %638, i32 0, i32 33
  %640 = getelementptr inbounds %struct.Reg, %struct.Reg* %639, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %640 to i64*
  %641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %642 = getelementptr inbounds %struct.GPR, %struct.GPR* %641, i32 0, i32 1
  %643 = getelementptr inbounds %struct.Reg, %struct.Reg* %642, i32 0, i32 0
  %RAX.i1240 = bitcast %union.anon* %643 to i64*
  %644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %645 = getelementptr inbounds %struct.GPR, %struct.GPR* %644, i32 0, i32 5
  %646 = getelementptr inbounds %struct.Reg, %struct.Reg* %645, i32 0, i32 0
  %RCX.i1241 = bitcast %union.anon* %646 to i64*
  %647 = load i64, i64* %RAX.i1240
  %648 = load i64, i64* %RCX.i1241
  %649 = load i64, i64* %PC.i1239
  %650 = add i64 %649, 3
  store i64 %650, i64* %PC.i1239
  %651 = add i64 %648, %647
  store i64 %651, i64* %RAX.i1240, align 8
  %652 = icmp ult i64 %651, %647
  %653 = icmp ult i64 %651, %648
  %654 = or i1 %652, %653
  %655 = zext i1 %654 to i8
  %656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %655, i8* %656, align 1
  %657 = trunc i64 %651 to i32
  %658 = and i32 %657, 255
  %659 = call i32 @llvm.ctpop.i32(i32 %658)
  %660 = trunc i32 %659 to i8
  %661 = and i8 %660, 1
  %662 = xor i8 %661, 1
  %663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %662, i8* %663, align 1
  %664 = xor i64 %648, %647
  %665 = xor i64 %664, %651
  %666 = lshr i64 %665, 4
  %667 = trunc i64 %666 to i8
  %668 = and i8 %667, 1
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %668, i8* %669, align 1
  %670 = icmp eq i64 %651, 0
  %671 = zext i1 %670 to i8
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %671, i8* %672, align 1
  %673 = lshr i64 %651, 63
  %674 = trunc i64 %673 to i8
  %675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %674, i8* %675, align 1
  %676 = lshr i64 %647, 63
  %677 = lshr i64 %648, 63
  %678 = xor i64 %673, %676
  %679 = xor i64 %673, %677
  %680 = add i64 %678, %679
  %681 = icmp eq i64 %680, 2
  %682 = zext i1 %681 to i8
  %683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %682, i8* %683, align 1
  store %struct.Memory* %loadMem_423c59, %struct.Memory** %MEMORY
  %loadMem_423c5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %685 = getelementptr inbounds %struct.GPR, %struct.GPR* %684, i32 0, i32 33
  %686 = getelementptr inbounds %struct.Reg, %struct.Reg* %685, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %686 to i64*
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %688 = getelementptr inbounds %struct.GPR, %struct.GPR* %687, i32 0, i32 1
  %689 = getelementptr inbounds %struct.Reg, %struct.Reg* %688, i32 0, i32 0
  %RAX.i1238 = bitcast %union.anon* %689 to i64*
  %690 = load i64, i64* %RAX.i1238
  %691 = add i64 %690, 532
  %692 = load i64, i64* %PC.i1237
  %693 = add i64 %692, 7
  store i64 %693, i64* %PC.i1237
  %694 = inttoptr i64 %691 to i32*
  %695 = load i32, i32* %694
  %696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %696, align 1
  %697 = and i32 %695, 255
  %698 = call i32 @llvm.ctpop.i32(i32 %697)
  %699 = trunc i32 %698 to i8
  %700 = and i8 %699, 1
  %701 = xor i8 %700, 1
  %702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %701, i8* %702, align 1
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %703, align 1
  %704 = icmp eq i32 %695, 0
  %705 = zext i1 %704 to i8
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %705, i8* %706, align 1
  %707 = lshr i32 %695, 31
  %708 = trunc i32 %707 to i8
  %709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %708, i8* %709, align 1
  %710 = lshr i32 %695, 31
  %711 = xor i32 %707, %710
  %712 = add i32 %711, %710
  %713 = icmp eq i32 %712, 2
  %714 = zext i1 %713 to i8
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %714, i8* %715, align 1
  store %struct.Memory* %loadMem_423c5c, %struct.Memory** %MEMORY
  %loadMem_423c63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %717 = getelementptr inbounds %struct.GPR, %struct.GPR* %716, i32 0, i32 33
  %718 = getelementptr inbounds %struct.Reg, %struct.Reg* %717, i32 0, i32 0
  %PC.i1236 = bitcast %union.anon* %718 to i64*
  %719 = load i64, i64* %PC.i1236
  %720 = add i64 %719, 61
  %721 = load i64, i64* %PC.i1236
  %722 = add i64 %721, 6
  %723 = load i64, i64* %PC.i1236
  %724 = add i64 %723, 6
  store i64 %724, i64* %PC.i1236
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %726 = load i8, i8* %725, align 1
  store i8 %726, i8* %BRANCH_TAKEN, align 1
  %727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %728 = icmp ne i8 %726, 0
  %729 = select i1 %728, i64 %720, i64 %722
  store i64 %729, i64* %727, align 8
  store %struct.Memory* %loadMem_423c63, %struct.Memory** %MEMORY
  %loadBr_423c63 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_423c63 = icmp eq i8 %loadBr_423c63, 1
  br i1 %cmpBr_423c63, label %block_.L_423ca0, label %block_423c69

block_423c69:                                     ; preds = %block_423c37
  %loadMem_423c69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %731 = getelementptr inbounds %struct.GPR, %struct.GPR* %730, i32 0, i32 33
  %732 = getelementptr inbounds %struct.Reg, %struct.Reg* %731, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %732 to i64*
  %733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %734 = getelementptr inbounds %struct.GPR, %struct.GPR* %733, i32 0, i32 1
  %735 = getelementptr inbounds %struct.Reg, %struct.Reg* %734, i32 0, i32 0
  %RAX.i1235 = bitcast %union.anon* %735 to i64*
  %736 = load i64, i64* %PC.i1234
  %737 = add i64 %736, 5
  store i64 %737, i64* %PC.i1234
  store i64 2, i64* %RAX.i1235, align 8
  store %struct.Memory* %loadMem_423c69, %struct.Memory** %MEMORY
  %loadMem_423c6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %739 = getelementptr inbounds %struct.GPR, %struct.GPR* %738, i32 0, i32 33
  %740 = getelementptr inbounds %struct.Reg, %struct.Reg* %739, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %740 to i64*
  %741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %742 = getelementptr inbounds %struct.GPR, %struct.GPR* %741, i32 0, i32 5
  %743 = getelementptr inbounds %struct.Reg, %struct.Reg* %742, i32 0, i32 0
  %RCX.i1233 = bitcast %union.anon* %743 to i64*
  %744 = load i64, i64* %PC.i1232
  %745 = add i64 %744, 5
  store i64 %745, i64* %PC.i1232
  store i64 4, i64* %RCX.i1233, align 8
  store %struct.Memory* %loadMem_423c6e, %struct.Memory** %MEMORY
  %loadMem_423c73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %747 = getelementptr inbounds %struct.GPR, %struct.GPR* %746, i32 0, i32 33
  %748 = getelementptr inbounds %struct.Reg, %struct.Reg* %747, i32 0, i32 0
  %PC.i1230 = bitcast %union.anon* %748 to i64*
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %750 = getelementptr inbounds %struct.GPR, %struct.GPR* %749, i32 0, i32 7
  %751 = getelementptr inbounds %struct.Reg, %struct.Reg* %750, i32 0, i32 0
  %RDX.i1231 = bitcast %union.anon* %751 to i64*
  %752 = load i64, i64* %PC.i1230
  %753 = add i64 %752, 8
  store i64 %753, i64* %PC.i1230
  %754 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %754, i64* %RDX.i1231, align 8
  store %struct.Memory* %loadMem_423c73, %struct.Memory** %MEMORY
  %loadMem_423c7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %756 = getelementptr inbounds %struct.GPR, %struct.GPR* %755, i32 0, i32 33
  %757 = getelementptr inbounds %struct.Reg, %struct.Reg* %756, i32 0, i32 0
  %PC.i1227 = bitcast %union.anon* %757 to i64*
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %759 = getelementptr inbounds %struct.GPR, %struct.GPR* %758, i32 0, i32 7
  %760 = getelementptr inbounds %struct.Reg, %struct.Reg* %759, i32 0, i32 0
  %RDX.i1228 = bitcast %union.anon* %760 to i64*
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %762 = getelementptr inbounds %struct.GPR, %struct.GPR* %761, i32 0, i32 9
  %763 = getelementptr inbounds %struct.Reg, %struct.Reg* %762, i32 0, i32 0
  %RSI.i1229 = bitcast %union.anon* %763 to i64*
  %764 = load i64, i64* %RDX.i1228
  %765 = add i64 %764, 12
  %766 = load i64, i64* %PC.i1227
  %767 = add i64 %766, 3
  store i64 %767, i64* %PC.i1227
  %768 = inttoptr i64 %765 to i32*
  %769 = load i32, i32* %768
  %770 = zext i32 %769 to i64
  store i64 %770, i64* %RSI.i1229, align 8
  store %struct.Memory* %loadMem_423c7b, %struct.Memory** %MEMORY
  %loadMem_423c7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %772 = getelementptr inbounds %struct.GPR, %struct.GPR* %771, i32 0, i32 33
  %773 = getelementptr inbounds %struct.Reg, %struct.Reg* %772, i32 0, i32 0
  %PC.i1224 = bitcast %union.anon* %773 to i64*
  %774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %775 = getelementptr inbounds %struct.GPR, %struct.GPR* %774, i32 0, i32 1
  %776 = getelementptr inbounds %struct.Reg, %struct.Reg* %775, i32 0, i32 0
  %EAX.i1225 = bitcast %union.anon* %776 to i32*
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %778 = getelementptr inbounds %struct.GPR, %struct.GPR* %777, i32 0, i32 15
  %779 = getelementptr inbounds %struct.Reg, %struct.Reg* %778, i32 0, i32 0
  %RBP.i1226 = bitcast %union.anon* %779 to i64*
  %780 = load i64, i64* %RBP.i1226
  %781 = sub i64 %780, 240
  %782 = load i32, i32* %EAX.i1225
  %783 = zext i32 %782 to i64
  %784 = load i64, i64* %PC.i1224
  %785 = add i64 %784, 6
  store i64 %785, i64* %PC.i1224
  %786 = inttoptr i64 %781 to i32*
  store i32 %782, i32* %786
  store %struct.Memory* %loadMem_423c7e, %struct.Memory** %MEMORY
  %loadMem_423c84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %788 = getelementptr inbounds %struct.GPR, %struct.GPR* %787, i32 0, i32 33
  %789 = getelementptr inbounds %struct.Reg, %struct.Reg* %788, i32 0, i32 0
  %PC.i1221 = bitcast %union.anon* %789 to i64*
  %790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %791 = getelementptr inbounds %struct.GPR, %struct.GPR* %790, i32 0, i32 9
  %792 = getelementptr inbounds %struct.Reg, %struct.Reg* %791, i32 0, i32 0
  %ESI.i1222 = bitcast %union.anon* %792 to i32*
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %794 = getelementptr inbounds %struct.GPR, %struct.GPR* %793, i32 0, i32 1
  %795 = getelementptr inbounds %struct.Reg, %struct.Reg* %794, i32 0, i32 0
  %RAX.i1223 = bitcast %union.anon* %795 to i64*
  %796 = load i32, i32* %ESI.i1222
  %797 = zext i32 %796 to i64
  %798 = load i64, i64* %PC.i1221
  %799 = add i64 %798, 2
  store i64 %799, i64* %PC.i1221
  %800 = and i64 %797, 4294967295
  store i64 %800, i64* %RAX.i1223, align 8
  store %struct.Memory* %loadMem_423c84, %struct.Memory** %MEMORY
  %loadMem_423c86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %802 = getelementptr inbounds %struct.GPR, %struct.GPR* %801, i32 0, i32 33
  %803 = getelementptr inbounds %struct.Reg, %struct.Reg* %802, i32 0, i32 0
  %PC.i1220 = bitcast %union.anon* %803 to i64*
  %804 = load i64, i64* %PC.i1220
  %805 = add i64 %804, 1
  store i64 %805, i64* %PC.i1220
  %806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %808 = bitcast %union.anon* %807 to i32*
  %809 = load i32, i32* %808, align 8
  %810 = sext i32 %809 to i64
  %811 = lshr i64 %810, 32
  store i64 %811, i64* %806, align 8
  store %struct.Memory* %loadMem_423c86, %struct.Memory** %MEMORY
  %loadMem_423c87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 33
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %PC.i1217 = bitcast %union.anon* %814 to i64*
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %816 = getelementptr inbounds %struct.GPR, %struct.GPR* %815, i32 0, i32 9
  %817 = getelementptr inbounds %struct.Reg, %struct.Reg* %816, i32 0, i32 0
  %RSI.i1218 = bitcast %union.anon* %817 to i64*
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %819 = getelementptr inbounds %struct.GPR, %struct.GPR* %818, i32 0, i32 15
  %820 = getelementptr inbounds %struct.Reg, %struct.Reg* %819, i32 0, i32 0
  %RBP.i1219 = bitcast %union.anon* %820 to i64*
  %821 = load i64, i64* %RBP.i1219
  %822 = sub i64 %821, 240
  %823 = load i64, i64* %PC.i1217
  %824 = add i64 %823, 6
  store i64 %824, i64* %PC.i1217
  %825 = inttoptr i64 %822 to i32*
  %826 = load i32, i32* %825
  %827 = zext i32 %826 to i64
  store i64 %827, i64* %RSI.i1218, align 8
  store %struct.Memory* %loadMem_423c87, %struct.Memory** %MEMORY
  %loadMem_423c8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %829 = getelementptr inbounds %struct.GPR, %struct.GPR* %828, i32 0, i32 33
  %830 = getelementptr inbounds %struct.Reg, %struct.Reg* %829, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %830 to i64*
  %831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %832 = getelementptr inbounds %struct.GPR, %struct.GPR* %831, i32 0, i32 9
  %833 = getelementptr inbounds %struct.Reg, %struct.Reg* %832, i32 0, i32 0
  %ESI.i1213 = bitcast %union.anon* %833 to i32*
  %834 = load i32, i32* %ESI.i1213
  %835 = zext i32 %834 to i64
  %836 = load i64, i64* %PC.i1212
  %837 = add i64 %836, 2
  store i64 %837, i64* %PC.i1212
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %839 = bitcast %union.anon* %838 to i32*
  %840 = load i32, i32* %839, align 8
  %841 = zext i32 %840 to i64
  %842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %843 = bitcast %union.anon* %842 to i32*
  %844 = load i32, i32* %843, align 8
  %845 = zext i32 %844 to i64
  %846 = shl i64 %835, 32
  %847 = ashr exact i64 %846, 32
  %848 = shl i64 %845, 32
  %849 = or i64 %848, %841
  %850 = sdiv i64 %849, %847
  %851 = shl i64 %850, 32
  %852 = ashr exact i64 %851, 32
  %853 = icmp eq i64 %850, %852
  br i1 %853, label %858, label %854

; <label>:854:                                    ; preds = %block_423c69
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %856 = load i64, i64* %855, align 8
  %857 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %856, %struct.Memory* %loadMem_423c8d)
  br label %routine_idivl__esi.exit

; <label>:858:                                    ; preds = %block_423c69
  %859 = srem i64 %849, %847
  %860 = getelementptr inbounds %union.anon, %union.anon* %838, i64 0, i32 0
  %861 = and i64 %850, 4294967295
  store i64 %861, i64* %860, align 8
  %862 = getelementptr inbounds %union.anon, %union.anon* %842, i64 0, i32 0
  %863 = and i64 %859, 4294967295
  store i64 %863, i64* %862, align 8
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %864, align 1
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %865, align 1
  %866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %866, align 1
  %867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %867, align 1
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %868, align 1
  %869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %869, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %854, %858
  %870 = phi %struct.Memory* [ %857, %854 ], [ %loadMem_423c8d, %858 ]
  store %struct.Memory* %870, %struct.Memory** %MEMORY
  %loadMem_423c8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %872 = getelementptr inbounds %struct.GPR, %struct.GPR* %871, i32 0, i32 33
  %873 = getelementptr inbounds %struct.Reg, %struct.Reg* %872, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %873 to i64*
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %875 = getelementptr inbounds %struct.GPR, %struct.GPR* %874, i32 0, i32 7
  %876 = getelementptr inbounds %struct.Reg, %struct.Reg* %875, i32 0, i32 0
  %EDX.i1211 = bitcast %union.anon* %876 to i32*
  %877 = load i32, i32* %EDX.i1211
  %878 = zext i32 %877 to i64
  %879 = load i64, i64* %PC.i1210
  %880 = add i64 %879, 3
  store i64 %880, i64* %PC.i1210
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %881, align 1
  %882 = and i32 %877, 255
  %883 = call i32 @llvm.ctpop.i32(i32 %882)
  %884 = trunc i32 %883 to i8
  %885 = and i8 %884, 1
  %886 = xor i8 %885, 1
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %886, i8* %887, align 1
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %888, align 1
  %889 = icmp eq i32 %877, 0
  %890 = zext i1 %889 to i8
  %891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %890, i8* %891, align 1
  %892 = lshr i32 %877, 31
  %893 = trunc i32 %892 to i8
  %894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %893, i8* %894, align 1
  %895 = lshr i32 %877, 31
  %896 = xor i32 %892, %895
  %897 = add i32 %896, %895
  %898 = icmp eq i32 %897, 2
  %899 = zext i1 %898 to i8
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %899, i8* %900, align 1
  store %struct.Memory* %loadMem_423c8f, %struct.Memory** %MEMORY
  %loadMem_423c92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %902 = getelementptr inbounds %struct.GPR, %struct.GPR* %901, i32 0, i32 33
  %903 = getelementptr inbounds %struct.Reg, %struct.Reg* %902, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %903 to i64*
  %904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %905 = getelementptr inbounds %struct.GPR, %struct.GPR* %904, i32 0, i32 5
  %906 = getelementptr inbounds %struct.Reg, %struct.Reg* %905, i32 0, i32 0
  %ECX.i1208 = bitcast %union.anon* %906 to i32*
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %908 = getelementptr inbounds %struct.GPR, %struct.GPR* %907, i32 0, i32 9
  %909 = getelementptr inbounds %struct.Reg, %struct.Reg* %908, i32 0, i32 0
  %RSI.i1209 = bitcast %union.anon* %909 to i64*
  %910 = load i32, i32* %ECX.i1208
  %911 = zext i32 %910 to i64
  %912 = load i64, i64* %PC.i1207
  %913 = add i64 %912, 3
  store i64 %913, i64* %PC.i1207
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %915 = load i8, i8* %914, align 1
  %916 = icmp eq i8 %915, 0
  %917 = load i64, i64* %RSI.i1209, align 8
  %918 = select i1 %916, i64 %911, i64 %917
  %919 = and i64 %918, 4294967295
  store i64 %919, i64* %RSI.i1209, align 8
  store %struct.Memory* %loadMem_423c92, %struct.Memory** %MEMORY
  %loadMem_423c95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %921 = getelementptr inbounds %struct.GPR, %struct.GPR* %920, i32 0, i32 33
  %922 = getelementptr inbounds %struct.Reg, %struct.Reg* %921, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %922 to i64*
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %924 = getelementptr inbounds %struct.GPR, %struct.GPR* %923, i32 0, i32 9
  %925 = getelementptr inbounds %struct.Reg, %struct.Reg* %924, i32 0, i32 0
  %ESI.i1205 = bitcast %union.anon* %925 to i32*
  %926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %927 = getelementptr inbounds %struct.GPR, %struct.GPR* %926, i32 0, i32 15
  %928 = getelementptr inbounds %struct.Reg, %struct.Reg* %927, i32 0, i32 0
  %RBP.i1206 = bitcast %union.anon* %928 to i64*
  %929 = load i64, i64* %RBP.i1206
  %930 = sub i64 %929, 244
  %931 = load i32, i32* %ESI.i1205
  %932 = zext i32 %931 to i64
  %933 = load i64, i64* %PC.i1204
  %934 = add i64 %933, 6
  store i64 %934, i64* %PC.i1204
  %935 = inttoptr i64 %930 to i32*
  store i32 %931, i32* %935
  store %struct.Memory* %loadMem_423c95, %struct.Memory** %MEMORY
  %loadMem_423c9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %937 = getelementptr inbounds %struct.GPR, %struct.GPR* %936, i32 0, i32 33
  %938 = getelementptr inbounds %struct.Reg, %struct.Reg* %937, i32 0, i32 0
  %PC.i1203 = bitcast %union.anon* %938 to i64*
  %939 = load i64, i64* %PC.i1203
  %940 = add i64 %939, 18
  %941 = load i64, i64* %PC.i1203
  %942 = add i64 %941, 5
  store i64 %942, i64* %PC.i1203
  %943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %940, i64* %943, align 8
  store %struct.Memory* %loadMem_423c9b, %struct.Memory** %MEMORY
  br label %block_.L_423cad

block_.L_423ca0:                                  ; preds = %block_423c37, %entry
  %loadMem_423ca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %945 = getelementptr inbounds %struct.GPR, %struct.GPR* %944, i32 0, i32 33
  %946 = getelementptr inbounds %struct.Reg, %struct.Reg* %945, i32 0, i32 0
  %PC.i1200 = bitcast %union.anon* %946 to i64*
  %947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %948 = getelementptr inbounds %struct.GPR, %struct.GPR* %947, i32 0, i32 1
  %949 = getelementptr inbounds %struct.Reg, %struct.Reg* %948, i32 0, i32 0
  %EAX.i1201 = bitcast %union.anon* %949 to i32*
  %950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %951 = getelementptr inbounds %struct.GPR, %struct.GPR* %950, i32 0, i32 1
  %952 = getelementptr inbounds %struct.Reg, %struct.Reg* %951, i32 0, i32 0
  %RAX.i1202 = bitcast %union.anon* %952 to i64*
  %953 = load i64, i64* %RAX.i1202
  %954 = load i32, i32* %EAX.i1201
  %955 = zext i32 %954 to i64
  %956 = load i64, i64* %PC.i1200
  %957 = add i64 %956, 2
  store i64 %957, i64* %PC.i1200
  %958 = xor i64 %955, %953
  %959 = trunc i64 %958 to i32
  %960 = and i64 %958, 4294967295
  store i64 %960, i64* %RAX.i1202, align 8
  %961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %961, align 1
  %962 = and i32 %959, 255
  %963 = call i32 @llvm.ctpop.i32(i32 %962)
  %964 = trunc i32 %963 to i8
  %965 = and i8 %964, 1
  %966 = xor i8 %965, 1
  %967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %966, i8* %967, align 1
  %968 = icmp eq i32 %959, 0
  %969 = zext i1 %968 to i8
  %970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %969, i8* %970, align 1
  %971 = lshr i32 %959, 31
  %972 = trunc i32 %971 to i8
  %973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %972, i8* %973, align 1
  %974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %974, align 1
  %975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %975, align 1
  store %struct.Memory* %loadMem_423ca0, %struct.Memory** %MEMORY
  %loadMem_423ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %977 = getelementptr inbounds %struct.GPR, %struct.GPR* %976, i32 0, i32 33
  %978 = getelementptr inbounds %struct.Reg, %struct.Reg* %977, i32 0, i32 0
  %PC.i1197 = bitcast %union.anon* %978 to i64*
  %979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %980 = getelementptr inbounds %struct.GPR, %struct.GPR* %979, i32 0, i32 1
  %981 = getelementptr inbounds %struct.Reg, %struct.Reg* %980, i32 0, i32 0
  %EAX.i1198 = bitcast %union.anon* %981 to i32*
  %982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %983 = getelementptr inbounds %struct.GPR, %struct.GPR* %982, i32 0, i32 15
  %984 = getelementptr inbounds %struct.Reg, %struct.Reg* %983, i32 0, i32 0
  %RBP.i1199 = bitcast %union.anon* %984 to i64*
  %985 = load i64, i64* %RBP.i1199
  %986 = sub i64 %985, 244
  %987 = load i32, i32* %EAX.i1198
  %988 = zext i32 %987 to i64
  %989 = load i64, i64* %PC.i1197
  %990 = add i64 %989, 6
  store i64 %990, i64* %PC.i1197
  %991 = inttoptr i64 %986 to i32*
  store i32 %987, i32* %991
  store %struct.Memory* %loadMem_423ca2, %struct.Memory** %MEMORY
  %loadMem_423ca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %993 = getelementptr inbounds %struct.GPR, %struct.GPR* %992, i32 0, i32 33
  %994 = getelementptr inbounds %struct.Reg, %struct.Reg* %993, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %994 to i64*
  %995 = load i64, i64* %PC.i1196
  %996 = add i64 %995, 5
  %997 = load i64, i64* %PC.i1196
  %998 = add i64 %997, 5
  store i64 %998, i64* %PC.i1196
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %996, i64* %999, align 8
  store %struct.Memory* %loadMem_423ca8, %struct.Memory** %MEMORY
  br label %block_.L_423cad

block_.L_423cad:                                  ; preds = %block_.L_423ca0, %routine_idivl__esi.exit
  %loadMem_423cad = load %struct.Memory*, %struct.Memory** %MEMORY
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1001 = getelementptr inbounds %struct.GPR, %struct.GPR* %1000, i32 0, i32 33
  %1002 = getelementptr inbounds %struct.Reg, %struct.Reg* %1001, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %1002 to i64*
  %1003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1004 = getelementptr inbounds %struct.GPR, %struct.GPR* %1003, i32 0, i32 1
  %1005 = getelementptr inbounds %struct.Reg, %struct.Reg* %1004, i32 0, i32 0
  %RAX.i1194 = bitcast %union.anon* %1005 to i64*
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1007 = getelementptr inbounds %struct.GPR, %struct.GPR* %1006, i32 0, i32 15
  %1008 = getelementptr inbounds %struct.Reg, %struct.Reg* %1007, i32 0, i32 0
  %RBP.i1195 = bitcast %union.anon* %1008 to i64*
  %1009 = load i64, i64* %RBP.i1195
  %1010 = sub i64 %1009, 244
  %1011 = load i64, i64* %PC.i1193
  %1012 = add i64 %1011, 6
  store i64 %1012, i64* %PC.i1193
  %1013 = inttoptr i64 %1010 to i32*
  %1014 = load i32, i32* %1013
  %1015 = zext i32 %1014 to i64
  store i64 %1015, i64* %RAX.i1194, align 8
  store %struct.Memory* %loadMem_423cad, %struct.Memory** %MEMORY
  %loadMem_423cb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1017 = getelementptr inbounds %struct.GPR, %struct.GPR* %1016, i32 0, i32 33
  %1018 = getelementptr inbounds %struct.Reg, %struct.Reg* %1017, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %1018 to i64*
  %1019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1020 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1019, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %1020 to %"class.std::bitset"*
  %1021 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %1022 = load i64, i64* %PC.i1192
  %1023 = add i64 %1022, ptrtoint (%G_0x8dbcd__rip__type* @G_0x8dbcd__rip_ to i64)
  %1024 = load i64, i64* %PC.i1192
  %1025 = add i64 %1024, 8
  store i64 %1025, i64* %PC.i1192
  %1026 = inttoptr i64 %1023 to double*
  %1027 = load double, double* %1026
  %1028 = bitcast i8* %1021 to double*
  store double %1027, double* %1028, align 1
  %1029 = getelementptr inbounds i8, i8* %1021, i64 8
  %1030 = bitcast i8* %1029 to double*
  store double 0.000000e+00, double* %1030, align 1
  store %struct.Memory* %loadMem_423cb3, %struct.Memory** %MEMORY
  %loadMem_423cbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1032 = getelementptr inbounds %struct.GPR, %struct.GPR* %1031, i32 0, i32 33
  %1033 = getelementptr inbounds %struct.Reg, %struct.Reg* %1032, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %1033 to i64*
  %1034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1035 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1034, i64 0, i64 1
  %YMM1.i1191 = bitcast %union.VectorReg* %1035 to %"class.std::bitset"*
  %1036 = bitcast %"class.std::bitset"* %YMM1.i1191 to i8*
  %1037 = load i64, i64* %PC.i1190
  %1038 = add i64 %1037, ptrtoint (%G_0x8dbcd__rip__type* @G_0x8dbcd__rip_ to i64)
  %1039 = load i64, i64* %PC.i1190
  %1040 = add i64 %1039, 8
  store i64 %1040, i64* %PC.i1190
  %1041 = inttoptr i64 %1038 to double*
  %1042 = load double, double* %1041
  %1043 = bitcast i8* %1036 to double*
  store double %1042, double* %1043, align 1
  %1044 = getelementptr inbounds i8, i8* %1036, i64 8
  %1045 = bitcast i8* %1044 to double*
  store double 0.000000e+00, double* %1045, align 1
  store %struct.Memory* %loadMem_423cbb, %struct.Memory** %MEMORY
  %loadMem_423cc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1047 = getelementptr inbounds %struct.GPR, %struct.GPR* %1046, i32 0, i32 33
  %1048 = getelementptr inbounds %struct.Reg, %struct.Reg* %1047, i32 0, i32 0
  %PC.i1187 = bitcast %union.anon* %1048 to i64*
  %1049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1050 = getelementptr inbounds %struct.GPR, %struct.GPR* %1049, i32 0, i32 1
  %1051 = getelementptr inbounds %struct.Reg, %struct.Reg* %1050, i32 0, i32 0
  %EAX.i1188 = bitcast %union.anon* %1051 to i32*
  %1052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1053 = getelementptr inbounds %struct.GPR, %struct.GPR* %1052, i32 0, i32 15
  %1054 = getelementptr inbounds %struct.Reg, %struct.Reg* %1053, i32 0, i32 0
  %RBP.i1189 = bitcast %union.anon* %1054 to i64*
  %1055 = load i64, i64* %RBP.i1189
  %1056 = sub i64 %1055, 132
  %1057 = load i32, i32* %EAX.i1188
  %1058 = zext i32 %1057 to i64
  %1059 = load i64, i64* %PC.i1187
  %1060 = add i64 %1059, 6
  store i64 %1060, i64* %PC.i1187
  %1061 = inttoptr i64 %1056 to i32*
  store i32 %1057, i32* %1061
  store %struct.Memory* %loadMem_423cc3, %struct.Memory** %MEMORY
  %loadMem_423cc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1063 = getelementptr inbounds %struct.GPR, %struct.GPR* %1062, i32 0, i32 33
  %1064 = getelementptr inbounds %struct.Reg, %struct.Reg* %1063, i32 0, i32 0
  %PC.i1184 = bitcast %union.anon* %1064 to i64*
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1066 = getelementptr inbounds %struct.GPR, %struct.GPR* %1065, i32 0, i32 1
  %1067 = getelementptr inbounds %struct.Reg, %struct.Reg* %1066, i32 0, i32 0
  %RAX.i1185 = bitcast %union.anon* %1067 to i64*
  %1068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1069 = getelementptr inbounds %struct.GPR, %struct.GPR* %1068, i32 0, i32 15
  %1070 = getelementptr inbounds %struct.Reg, %struct.Reg* %1069, i32 0, i32 0
  %RBP.i1186 = bitcast %union.anon* %1070 to i64*
  %1071 = load i64, i64* %RBP.i1186
  %1072 = sub i64 %1071, 56
  %1073 = load i64, i64* %PC.i1184
  %1074 = add i64 %1073, 3
  store i64 %1074, i64* %PC.i1184
  %1075 = inttoptr i64 %1072 to i32*
  %1076 = load i32, i32* %1075
  %1077 = zext i32 %1076 to i64
  store i64 %1077, i64* %RAX.i1185, align 8
  store %struct.Memory* %loadMem_423cc9, %struct.Memory** %MEMORY
  %loadMem_423ccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1079 = getelementptr inbounds %struct.GPR, %struct.GPR* %1078, i32 0, i32 33
  %1080 = getelementptr inbounds %struct.Reg, %struct.Reg* %1079, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %1080 to i64*
  %1081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1082 = getelementptr inbounds %struct.GPR, %struct.GPR* %1081, i32 0, i32 1
  %1083 = getelementptr inbounds %struct.Reg, %struct.Reg* %1082, i32 0, i32 0
  %RAX.i1182 = bitcast %union.anon* %1083 to i64*
  %1084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1085 = getelementptr inbounds %struct.GPR, %struct.GPR* %1084, i32 0, i32 15
  %1086 = getelementptr inbounds %struct.Reg, %struct.Reg* %1085, i32 0, i32 0
  %RBP.i1183 = bitcast %union.anon* %1086 to i64*
  %1087 = load i64, i64* %RAX.i1182
  %1088 = load i64, i64* %RBP.i1183
  %1089 = sub i64 %1088, 132
  %1090 = load i64, i64* %PC.i1181
  %1091 = add i64 %1090, 6
  store i64 %1091, i64* %PC.i1181
  %1092 = trunc i64 %1087 to i32
  %1093 = inttoptr i64 %1089 to i32*
  %1094 = load i32, i32* %1093
  %1095 = add i32 %1094, %1092
  %1096 = zext i32 %1095 to i64
  store i64 %1096, i64* %RAX.i1182, align 8
  %1097 = icmp ult i32 %1095, %1092
  %1098 = icmp ult i32 %1095, %1094
  %1099 = or i1 %1097, %1098
  %1100 = zext i1 %1099 to i8
  %1101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1100, i8* %1101, align 1
  %1102 = and i32 %1095, 255
  %1103 = call i32 @llvm.ctpop.i32(i32 %1102)
  %1104 = trunc i32 %1103 to i8
  %1105 = and i8 %1104, 1
  %1106 = xor i8 %1105, 1
  %1107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1106, i8* %1107, align 1
  %1108 = xor i32 %1094, %1092
  %1109 = xor i32 %1108, %1095
  %1110 = lshr i32 %1109, 4
  %1111 = trunc i32 %1110 to i8
  %1112 = and i8 %1111, 1
  %1113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1112, i8* %1113, align 1
  %1114 = icmp eq i32 %1095, 0
  %1115 = zext i1 %1114 to i8
  %1116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1115, i8* %1116, align 1
  %1117 = lshr i32 %1095, 31
  %1118 = trunc i32 %1117 to i8
  %1119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1118, i8* %1119, align 1
  %1120 = lshr i32 %1092, 31
  %1121 = lshr i32 %1094, 31
  %1122 = xor i32 %1117, %1120
  %1123 = xor i32 %1117, %1121
  %1124 = add i32 %1122, %1123
  %1125 = icmp eq i32 %1124, 2
  %1126 = zext i1 %1125 to i8
  %1127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1126, i8* %1127, align 1
  store %struct.Memory* %loadMem_423ccc, %struct.Memory** %MEMORY
  %loadMem_423cd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1129 = getelementptr inbounds %struct.GPR, %struct.GPR* %1128, i32 0, i32 33
  %1130 = getelementptr inbounds %struct.Reg, %struct.Reg* %1129, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %1130 to i64*
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1132 = getelementptr inbounds %struct.GPR, %struct.GPR* %1131, i32 0, i32 1
  %1133 = getelementptr inbounds %struct.Reg, %struct.Reg* %1132, i32 0, i32 0
  %EAX.i1179 = bitcast %union.anon* %1133 to i32*
  %1134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1135 = getelementptr inbounds %struct.GPR, %struct.GPR* %1134, i32 0, i32 5
  %1136 = getelementptr inbounds %struct.Reg, %struct.Reg* %1135, i32 0, i32 0
  %RCX.i1180 = bitcast %union.anon* %1136 to i64*
  %1137 = load i32, i32* %EAX.i1179
  %1138 = zext i32 %1137 to i64
  %1139 = load i64, i64* %PC.i1178
  %1140 = add i64 %1139, 3
  store i64 %1140, i64* %PC.i1178
  %1141 = shl i64 %1138, 32
  %1142 = ashr exact i64 %1141, 32
  store i64 %1142, i64* %RCX.i1180, align 8
  store %struct.Memory* %loadMem_423cd2, %struct.Memory** %MEMORY
  %loadMem_423cd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1144 = getelementptr inbounds %struct.GPR, %struct.GPR* %1143, i32 0, i32 33
  %1145 = getelementptr inbounds %struct.Reg, %struct.Reg* %1144, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %1145 to i64*
  %1146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1147 = getelementptr inbounds %struct.GPR, %struct.GPR* %1146, i32 0, i32 5
  %1148 = getelementptr inbounds %struct.Reg, %struct.Reg* %1147, i32 0, i32 0
  %RCX.i1177 = bitcast %union.anon* %1148 to i64*
  %1149 = load i64, i64* %RCX.i1177
  %1150 = mul i64 %1149, 8
  %1151 = add i64 %1150, 7482144
  %1152 = load i64, i64* %PC.i1176
  %1153 = add i64 %1152, 8
  store i64 %1153, i64* %PC.i1176
  %1154 = inttoptr i64 %1151 to i64*
  %1155 = load i64, i64* %1154
  store i64 %1155, i64* %RCX.i1177, align 8
  store %struct.Memory* %loadMem_423cd5, %struct.Memory** %MEMORY
  %loadMem_423cdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1157 = getelementptr inbounds %struct.GPR, %struct.GPR* %1156, i32 0, i32 33
  %1158 = getelementptr inbounds %struct.Reg, %struct.Reg* %1157, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %1158 to i64*
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1160 = getelementptr inbounds %struct.GPR, %struct.GPR* %1159, i32 0, i32 7
  %1161 = getelementptr inbounds %struct.Reg, %struct.Reg* %1160, i32 0, i32 0
  %RDX.i1174 = bitcast %union.anon* %1161 to i64*
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1163 = getelementptr inbounds %struct.GPR, %struct.GPR* %1162, i32 0, i32 15
  %1164 = getelementptr inbounds %struct.Reg, %struct.Reg* %1163, i32 0, i32 0
  %RBP.i1175 = bitcast %union.anon* %1164 to i64*
  %1165 = load i64, i64* %RBP.i1175
  %1166 = sub i64 %1165, 50
  %1167 = load i64, i64* %PC.i1173
  %1168 = add i64 %1167, 5
  store i64 %1168, i64* %PC.i1173
  %1169 = inttoptr i64 %1166 to i16*
  %1170 = load i16, i16* %1169
  %1171 = sext i16 %1170 to i64
  store i64 %1171, i64* %RDX.i1174, align 8
  store %struct.Memory* %loadMem_423cdd, %struct.Memory** %MEMORY
  %loadMem_423ce2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1173 = getelementptr inbounds %struct.GPR, %struct.GPR* %1172, i32 0, i32 33
  %1174 = getelementptr inbounds %struct.Reg, %struct.Reg* %1173, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %1174 to i64*
  %1175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1176 = getelementptr inbounds %struct.GPR, %struct.GPR* %1175, i32 0, i32 5
  %1177 = getelementptr inbounds %struct.Reg, %struct.Reg* %1176, i32 0, i32 0
  %RCX.i1171 = bitcast %union.anon* %1177 to i64*
  %1178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1179 = getelementptr inbounds %struct.GPR, %struct.GPR* %1178, i32 0, i32 7
  %1180 = getelementptr inbounds %struct.Reg, %struct.Reg* %1179, i32 0, i32 0
  %RDX.i1172 = bitcast %union.anon* %1180 to i64*
  %1181 = load i64, i64* %RCX.i1171
  %1182 = load i64, i64* %RDX.i1172
  %1183 = mul i64 %1182, 8
  %1184 = add i64 %1183, %1181
  %1185 = load i64, i64* %PC.i1170
  %1186 = add i64 %1185, 4
  store i64 %1186, i64* %PC.i1170
  %1187 = inttoptr i64 %1184 to i64*
  %1188 = load i64, i64* %1187
  store i64 %1188, i64* %RCX.i1171, align 8
  store %struct.Memory* %loadMem_423ce2, %struct.Memory** %MEMORY
  %loadMem_423ce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1190 = getelementptr inbounds %struct.GPR, %struct.GPR* %1189, i32 0, i32 33
  %1191 = getelementptr inbounds %struct.Reg, %struct.Reg* %1190, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %1191 to i64*
  %1192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1193 = getelementptr inbounds %struct.GPR, %struct.GPR* %1192, i32 0, i32 5
  %1194 = getelementptr inbounds %struct.Reg, %struct.Reg* %1193, i32 0, i32 0
  %RCX.i1168 = bitcast %union.anon* %1194 to i64*
  %1195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1196 = getelementptr inbounds %struct.GPR, %struct.GPR* %1195, i32 0, i32 15
  %1197 = getelementptr inbounds %struct.Reg, %struct.Reg* %1196, i32 0, i32 0
  %RBP.i1169 = bitcast %union.anon* %1197 to i64*
  %1198 = load i64, i64* %RBP.i1169
  %1199 = sub i64 %1198, 144
  %1200 = load i64, i64* %RCX.i1168
  %1201 = load i64, i64* %PC.i1167
  %1202 = add i64 %1201, 7
  store i64 %1202, i64* %PC.i1167
  %1203 = inttoptr i64 %1199 to i64*
  store i64 %1200, i64* %1203
  store %struct.Memory* %loadMem_423ce6, %struct.Memory** %MEMORY
  %loadMem_423ced = load %struct.Memory*, %struct.Memory** %MEMORY
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1205 = getelementptr inbounds %struct.GPR, %struct.GPR* %1204, i32 0, i32 33
  %1206 = getelementptr inbounds %struct.Reg, %struct.Reg* %1205, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %1206 to i64*
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1208 = getelementptr inbounds %struct.GPR, %struct.GPR* %1207, i32 0, i32 15
  %1209 = getelementptr inbounds %struct.Reg, %struct.Reg* %1208, i32 0, i32 0
  %RBP.i1165 = bitcast %union.anon* %1209 to i64*
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1211 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1210, i64 0, i64 1
  %YMM1.i1166 = bitcast %union.VectorReg* %1211 to %"class.std::bitset"*
  %1212 = bitcast %"class.std::bitset"* %YMM1.i1166 to i8*
  %1213 = bitcast %"class.std::bitset"* %YMM1.i1166 to i8*
  %1214 = load i64, i64* %RBP.i1165
  %1215 = sub i64 %1214, 112
  %1216 = load i64, i64* %PC.i1164
  %1217 = add i64 %1216, 5
  store i64 %1217, i64* %PC.i1164
  %1218 = bitcast i8* %1213 to double*
  %1219 = load double, double* %1218, align 1
  %1220 = getelementptr inbounds i8, i8* %1213, i64 8
  %1221 = bitcast i8* %1220 to i64*
  %1222 = load i64, i64* %1221, align 1
  %1223 = inttoptr i64 %1215 to double*
  %1224 = load double, double* %1223
  %1225 = fmul double %1219, %1224
  %1226 = bitcast i8* %1212 to double*
  store double %1225, double* %1226, align 1
  %1227 = getelementptr inbounds i8, i8* %1212, i64 8
  %1228 = bitcast i8* %1227 to i64*
  store i64 %1222, i64* %1228, align 1
  store %struct.Memory* %loadMem_423ced, %struct.Memory** %MEMORY
  %loadMem_423cf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1230 = getelementptr inbounds %struct.GPR, %struct.GPR* %1229, i32 0, i32 33
  %1231 = getelementptr inbounds %struct.Reg, %struct.Reg* %1230, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %1231 to i64*
  %1232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1233 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1232, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %1233 to %"class.std::bitset"*
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1235 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1234, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %1235 to %union.vec128_t*
  %1236 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %1237 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %1238 = bitcast %union.vec128_t* %XMM0.i to i8*
  %1239 = load i64, i64* %PC.i1163
  %1240 = add i64 %1239, 4
  store i64 %1240, i64* %PC.i1163
  %1241 = bitcast i8* %1237 to double*
  %1242 = load double, double* %1241, align 1
  %1243 = getelementptr inbounds i8, i8* %1237, i64 8
  %1244 = bitcast i8* %1243 to i64*
  %1245 = load i64, i64* %1244, align 1
  %1246 = bitcast i8* %1238 to double*
  %1247 = load double, double* %1246, align 1
  %1248 = fadd double %1242, %1247
  %1249 = bitcast i8* %1236 to double*
  store double %1248, double* %1249, align 1
  %1250 = getelementptr inbounds i8, i8* %1236, i64 8
  %1251 = bitcast i8* %1250 to i64*
  store i64 %1245, i64* %1251, align 1
  store %struct.Memory* %loadMem_423cf2, %struct.Memory** %MEMORY
  %loadMem_423cf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1253 = getelementptr inbounds %struct.GPR, %struct.GPR* %1252, i32 0, i32 33
  %1254 = getelementptr inbounds %struct.Reg, %struct.Reg* %1253, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %1254 to i64*
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1256 = getelementptr inbounds %struct.GPR, %struct.GPR* %1255, i32 0, i32 1
  %1257 = getelementptr inbounds %struct.Reg, %struct.Reg* %1256, i32 0, i32 0
  %RAX.i1162 = bitcast %union.anon* %1257 to i64*
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1258, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %1259 to %union.vec128_t*
  %1260 = bitcast %union.vec128_t* %XMM1.i to i8*
  %1261 = load i64, i64* %PC.i1161
  %1262 = add i64 %1261, 4
  store i64 %1262, i64* %PC.i1161
  %1263 = bitcast i8* %1260 to double*
  %1264 = load double, double* %1263, align 1
  %1265 = call double @llvm.trunc.f64(double %1264)
  %1266 = call double @llvm.fabs.f64(double %1265)
  %1267 = fcmp ogt double %1266, 0x41DFFFFFFFC00000
  %1268 = fptosi double %1265 to i32
  %1269 = zext i32 %1268 to i64
  %1270 = select i1 %1267, i64 2147483648, i64 %1269
  store i64 %1270, i64* %RAX.i1162, align 8
  store %struct.Memory* %loadMem_423cf6, %struct.Memory** %MEMORY
  %loadMem_423cfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1272 = getelementptr inbounds %struct.GPR, %struct.GPR* %1271, i32 0, i32 33
  %1273 = getelementptr inbounds %struct.Reg, %struct.Reg* %1272, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %1273 to i64*
  %1274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1275 = getelementptr inbounds %struct.GPR, %struct.GPR* %1274, i32 0, i32 1
  %1276 = getelementptr inbounds %struct.Reg, %struct.Reg* %1275, i32 0, i32 0
  %EAX.i1159 = bitcast %union.anon* %1276 to i32*
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1278 = getelementptr inbounds %struct.GPR, %struct.GPR* %1277, i32 0, i32 15
  %1279 = getelementptr inbounds %struct.Reg, %struct.Reg* %1278, i32 0, i32 0
  %RBP.i1160 = bitcast %union.anon* %1279 to i64*
  %1280 = load i64, i64* %RBP.i1160
  %1281 = sub i64 %1280, 148
  %1282 = load i32, i32* %EAX.i1159
  %1283 = zext i32 %1282 to i64
  %1284 = load i64, i64* %PC.i1158
  %1285 = add i64 %1284, 6
  store i64 %1285, i64* %PC.i1158
  %1286 = inttoptr i64 %1281 to i32*
  store i32 %1282, i32* %1286
  store %struct.Memory* %loadMem_423cfa, %struct.Memory** %MEMORY
  %loadMem_423d00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1288 = getelementptr inbounds %struct.GPR, %struct.GPR* %1287, i32 0, i32 33
  %1289 = getelementptr inbounds %struct.Reg, %struct.Reg* %1288, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %1289 to i64*
  %1290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1291 = getelementptr inbounds %struct.GPR, %struct.GPR* %1290, i32 0, i32 15
  %1292 = getelementptr inbounds %struct.Reg, %struct.Reg* %1291, i32 0, i32 0
  %RBP.i1157 = bitcast %union.anon* %1292 to i64*
  %1293 = load i64, i64* %RBP.i1157
  %1294 = sub i64 %1293, 152
  %1295 = load i64, i64* %PC.i1156
  %1296 = add i64 %1295, 10
  store i64 %1296, i64* %PC.i1156
  %1297 = inttoptr i64 %1294 to i32*
  store i32 0, i32* %1297
  store %struct.Memory* %loadMem_423d00, %struct.Memory** %MEMORY
  %loadMem_423d0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1299 = getelementptr inbounds %struct.GPR, %struct.GPR* %1298, i32 0, i32 33
  %1300 = getelementptr inbounds %struct.Reg, %struct.Reg* %1299, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %1300 to i64*
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1302 = getelementptr inbounds %struct.GPR, %struct.GPR* %1301, i32 0, i32 5
  %1303 = getelementptr inbounds %struct.Reg, %struct.Reg* %1302, i32 0, i32 0
  %RCX.i1155 = bitcast %union.anon* %1303 to i64*
  %1304 = load i64, i64* %PC.i1154
  %1305 = add i64 %1304, 8
  store i64 %1305, i64* %PC.i1154
  %1306 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %1306, i64* %RCX.i1155, align 8
  store %struct.Memory* %loadMem_423d0a, %struct.Memory** %MEMORY
  %loadMem_423d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1308 = getelementptr inbounds %struct.GPR, %struct.GPR* %1307, i32 0, i32 33
  %1309 = getelementptr inbounds %struct.Reg, %struct.Reg* %1308, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %1309 to i64*
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1311 = getelementptr inbounds %struct.GPR, %struct.GPR* %1310, i32 0, i32 7
  %1312 = getelementptr inbounds %struct.Reg, %struct.Reg* %1311, i32 0, i32 0
  %RDX.i1152 = bitcast %union.anon* %1312 to i64*
  %1313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1314 = getelementptr inbounds %struct.GPR, %struct.GPR* %1313, i32 0, i32 15
  %1315 = getelementptr inbounds %struct.Reg, %struct.Reg* %1314, i32 0, i32 0
  %RBP.i1153 = bitcast %union.anon* %1315 to i64*
  %1316 = load i64, i64* %RBP.i1153
  %1317 = sub i64 %1316, 68
  %1318 = load i64, i64* %PC.i1151
  %1319 = add i64 %1318, 4
  store i64 %1319, i64* %PC.i1151
  %1320 = inttoptr i64 %1317 to i32*
  %1321 = load i32, i32* %1320
  %1322 = sext i32 %1321 to i64
  store i64 %1322, i64* %RDX.i1152, align 8
  store %struct.Memory* %loadMem_423d12, %struct.Memory** %MEMORY
  %loadMem_423d16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1324 = getelementptr inbounds %struct.GPR, %struct.GPR* %1323, i32 0, i32 33
  %1325 = getelementptr inbounds %struct.Reg, %struct.Reg* %1324, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %1325 to i64*
  %1326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1327 = getelementptr inbounds %struct.GPR, %struct.GPR* %1326, i32 0, i32 1
  %1328 = getelementptr inbounds %struct.Reg, %struct.Reg* %1327, i32 0, i32 0
  %RAX.i1148 = bitcast %union.anon* %1328 to i64*
  %1329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1330 = getelementptr inbounds %struct.GPR, %struct.GPR* %1329, i32 0, i32 5
  %1331 = getelementptr inbounds %struct.Reg, %struct.Reg* %1330, i32 0, i32 0
  %RCX.i1149 = bitcast %union.anon* %1331 to i64*
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1333 = getelementptr inbounds %struct.GPR, %struct.GPR* %1332, i32 0, i32 7
  %1334 = getelementptr inbounds %struct.Reg, %struct.Reg* %1333, i32 0, i32 0
  %RDX.i1150 = bitcast %union.anon* %1334 to i64*
  %1335 = load i64, i64* %RCX.i1149
  %1336 = load i64, i64* %RDX.i1150
  %1337 = mul i64 %1336, 8
  %1338 = add i64 %1335, 80
  %1339 = add i64 %1338, %1337
  %1340 = load i64, i64* %PC.i1147
  %1341 = add i64 %1340, 4
  store i64 %1341, i64* %PC.i1147
  %1342 = inttoptr i64 %1339 to i32*
  %1343 = load i32, i32* %1342
  %1344 = zext i32 %1343 to i64
  store i64 %1344, i64* %RAX.i1148, align 8
  store %struct.Memory* %loadMem_423d16, %struct.Memory** %MEMORY
  %loadMem_423d1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1346 = getelementptr inbounds %struct.GPR, %struct.GPR* %1345, i32 0, i32 33
  %1347 = getelementptr inbounds %struct.Reg, %struct.Reg* %1346, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %1347 to i64*
  %1348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1349 = getelementptr inbounds %struct.GPR, %struct.GPR* %1348, i32 0, i32 1
  %1350 = getelementptr inbounds %struct.Reg, %struct.Reg* %1349, i32 0, i32 0
  %EAX.i1145 = bitcast %union.anon* %1350 to i32*
  %1351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1352 = getelementptr inbounds %struct.GPR, %struct.GPR* %1351, i32 0, i32 15
  %1353 = getelementptr inbounds %struct.Reg, %struct.Reg* %1352, i32 0, i32 0
  %RBP.i1146 = bitcast %union.anon* %1353 to i64*
  %1354 = load i64, i64* %RBP.i1146
  %1355 = sub i64 %1354, 156
  %1356 = load i32, i32* %EAX.i1145
  %1357 = zext i32 %1356 to i64
  %1358 = load i64, i64* %PC.i1144
  %1359 = add i64 %1358, 6
  store i64 %1359, i64* %PC.i1144
  %1360 = inttoptr i64 %1355 to i32*
  store i32 %1356, i32* %1360
  store %struct.Memory* %loadMem_423d1a, %struct.Memory** %MEMORY
  %loadMem_423d20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1362 = getelementptr inbounds %struct.GPR, %struct.GPR* %1361, i32 0, i32 33
  %1363 = getelementptr inbounds %struct.Reg, %struct.Reg* %1362, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %1363 to i64*
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1365 = getelementptr inbounds %struct.GPR, %struct.GPR* %1364, i32 0, i32 5
  %1366 = getelementptr inbounds %struct.Reg, %struct.Reg* %1365, i32 0, i32 0
  %RCX.i1143 = bitcast %union.anon* %1366 to i64*
  %1367 = load i64, i64* %PC.i1142
  %1368 = add i64 %1367, 8
  store i64 %1368, i64* %PC.i1142
  %1369 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %1369, i64* %RCX.i1143, align 8
  store %struct.Memory* %loadMem_423d20, %struct.Memory** %MEMORY
  %loadMem_423d28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1371 = getelementptr inbounds %struct.GPR, %struct.GPR* %1370, i32 0, i32 33
  %1372 = getelementptr inbounds %struct.Reg, %struct.Reg* %1371, i32 0, i32 0
  %PC.i1139 = bitcast %union.anon* %1372 to i64*
  %1373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1374 = getelementptr inbounds %struct.GPR, %struct.GPR* %1373, i32 0, i32 7
  %1375 = getelementptr inbounds %struct.Reg, %struct.Reg* %1374, i32 0, i32 0
  %RDX.i1140 = bitcast %union.anon* %1375 to i64*
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1377 = getelementptr inbounds %struct.GPR, %struct.GPR* %1376, i32 0, i32 15
  %1378 = getelementptr inbounds %struct.Reg, %struct.Reg* %1377, i32 0, i32 0
  %RBP.i1141 = bitcast %union.anon* %1378 to i64*
  %1379 = load i64, i64* %RBP.i1141
  %1380 = sub i64 %1379, 68
  %1381 = load i64, i64* %PC.i1139
  %1382 = add i64 %1381, 4
  store i64 %1382, i64* %PC.i1139
  %1383 = inttoptr i64 %1380 to i32*
  %1384 = load i32, i32* %1383
  %1385 = sext i32 %1384 to i64
  store i64 %1385, i64* %RDX.i1140, align 8
  store %struct.Memory* %loadMem_423d28, %struct.Memory** %MEMORY
  %loadMem_423d2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1387 = getelementptr inbounds %struct.GPR, %struct.GPR* %1386, i32 0, i32 33
  %1388 = getelementptr inbounds %struct.Reg, %struct.Reg* %1387, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %1388 to i64*
  %1389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1390 = getelementptr inbounds %struct.GPR, %struct.GPR* %1389, i32 0, i32 1
  %1391 = getelementptr inbounds %struct.Reg, %struct.Reg* %1390, i32 0, i32 0
  %RAX.i1136 = bitcast %union.anon* %1391 to i64*
  %1392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1393 = getelementptr inbounds %struct.GPR, %struct.GPR* %1392, i32 0, i32 5
  %1394 = getelementptr inbounds %struct.Reg, %struct.Reg* %1393, i32 0, i32 0
  %RCX.i1137 = bitcast %union.anon* %1394 to i64*
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1396 = getelementptr inbounds %struct.GPR, %struct.GPR* %1395, i32 0, i32 7
  %1397 = getelementptr inbounds %struct.Reg, %struct.Reg* %1396, i32 0, i32 0
  %RDX.i1138 = bitcast %union.anon* %1397 to i64*
  %1398 = load i64, i64* %RCX.i1137
  %1399 = load i64, i64* %RDX.i1138
  %1400 = mul i64 %1399, 8
  %1401 = add i64 %1398, 84
  %1402 = add i64 %1401, %1400
  %1403 = load i64, i64* %PC.i1135
  %1404 = add i64 %1403, 4
  store i64 %1404, i64* %PC.i1135
  %1405 = inttoptr i64 %1402 to i32*
  %1406 = load i32, i32* %1405
  %1407 = zext i32 %1406 to i64
  store i64 %1407, i64* %RAX.i1136, align 8
  store %struct.Memory* %loadMem_423d2c, %struct.Memory** %MEMORY
  %loadMem_423d30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1409 = getelementptr inbounds %struct.GPR, %struct.GPR* %1408, i32 0, i32 33
  %1410 = getelementptr inbounds %struct.Reg, %struct.Reg* %1409, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %1410 to i64*
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1412 = getelementptr inbounds %struct.GPR, %struct.GPR* %1411, i32 0, i32 1
  %1413 = getelementptr inbounds %struct.Reg, %struct.Reg* %1412, i32 0, i32 0
  %EAX.i1133 = bitcast %union.anon* %1413 to i32*
  %1414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1415 = getelementptr inbounds %struct.GPR, %struct.GPR* %1414, i32 0, i32 15
  %1416 = getelementptr inbounds %struct.Reg, %struct.Reg* %1415, i32 0, i32 0
  %RBP.i1134 = bitcast %union.anon* %1416 to i64*
  %1417 = load i64, i64* %RBP.i1134
  %1418 = sub i64 %1417, 160
  %1419 = load i32, i32* %EAX.i1133
  %1420 = zext i32 %1419 to i64
  %1421 = load i64, i64* %PC.i1132
  %1422 = add i64 %1421, 6
  store i64 %1422, i64* %PC.i1132
  %1423 = inttoptr i64 %1418 to i32*
  store i32 %1419, i32* %1423
  store %struct.Memory* %loadMem_423d30, %struct.Memory** %MEMORY
  %loadMem_423d36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1425 = getelementptr inbounds %struct.GPR, %struct.GPR* %1424, i32 0, i32 33
  %1426 = getelementptr inbounds %struct.Reg, %struct.Reg* %1425, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %1426 to i64*
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1428 = getelementptr inbounds %struct.GPR, %struct.GPR* %1427, i32 0, i32 1
  %1429 = getelementptr inbounds %struct.Reg, %struct.Reg* %1428, i32 0, i32 0
  %RAX.i1130 = bitcast %union.anon* %1429 to i64*
  %1430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1431 = getelementptr inbounds %struct.GPR, %struct.GPR* %1430, i32 0, i32 15
  %1432 = getelementptr inbounds %struct.Reg, %struct.Reg* %1431, i32 0, i32 0
  %RBP.i1131 = bitcast %union.anon* %1432 to i64*
  %1433 = load i64, i64* %RBP.i1131
  %1434 = sub i64 %1433, 60
  %1435 = load i64, i64* %PC.i1129
  %1436 = add i64 %1435, 3
  store i64 %1436, i64* %PC.i1129
  %1437 = inttoptr i64 %1434 to i32*
  %1438 = load i32, i32* %1437
  %1439 = zext i32 %1438 to i64
  store i64 %1439, i64* %RAX.i1130, align 8
  store %struct.Memory* %loadMem_423d36, %struct.Memory** %MEMORY
  %loadMem_423d39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1441 = getelementptr inbounds %struct.GPR, %struct.GPR* %1440, i32 0, i32 33
  %1442 = getelementptr inbounds %struct.Reg, %struct.Reg* %1441, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %1442 to i64*
  %1443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1444 = getelementptr inbounds %struct.GPR, %struct.GPR* %1443, i32 0, i32 1
  %1445 = getelementptr inbounds %struct.Reg, %struct.Reg* %1444, i32 0, i32 0
  %RAX.i1128 = bitcast %union.anon* %1445 to i64*
  %1446 = load i64, i64* %RAX.i1128
  %1447 = load i64, i64* %PC.i1127
  %1448 = add i64 %1447, 3
  store i64 %1448, i64* %PC.i1127
  %1449 = and i64 %1446, 4294967295
  %1450 = shl i64 %1449, 1
  %1451 = trunc i64 %1450 to i32
  %1452 = icmp slt i32 %1451, 0
  %1453 = shl i32 %1451, 1
  %1454 = zext i32 %1453 to i64
  store i64 %1454, i64* %RAX.i1128, align 8
  %1455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1456 = zext i1 %1452 to i8
  store i8 %1456, i8* %1455, align 1
  %1457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1458 = and i32 %1453, 254
  %1459 = call i32 @llvm.ctpop.i32(i32 %1458)
  %1460 = trunc i32 %1459 to i8
  %1461 = and i8 %1460, 1
  %1462 = xor i8 %1461, 1
  store i8 %1462, i8* %1457, align 1
  %1463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1463, align 1
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1465 = icmp eq i32 %1453, 0
  %1466 = zext i1 %1465 to i8
  store i8 %1466, i8* %1464, align 1
  %1467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1468 = lshr i32 %1453, 31
  %1469 = trunc i32 %1468 to i8
  store i8 %1469, i8* %1467, align 1
  %1470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1470, align 1
  store %struct.Memory* %loadMem_423d39, %struct.Memory** %MEMORY
  %loadMem_423d3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1472 = getelementptr inbounds %struct.GPR, %struct.GPR* %1471, i32 0, i32 33
  %1473 = getelementptr inbounds %struct.Reg, %struct.Reg* %1472, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %1473 to i64*
  %1474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1475 = getelementptr inbounds %struct.GPR, %struct.GPR* %1474, i32 0, i32 1
  %1476 = getelementptr inbounds %struct.Reg, %struct.Reg* %1475, i32 0, i32 0
  %EAX.i1125 = bitcast %union.anon* %1476 to i32*
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1478 = getelementptr inbounds %struct.GPR, %struct.GPR* %1477, i32 0, i32 15
  %1479 = getelementptr inbounds %struct.Reg, %struct.Reg* %1478, i32 0, i32 0
  %RBP.i1126 = bitcast %union.anon* %1479 to i64*
  %1480 = load i64, i64* %RBP.i1126
  %1481 = sub i64 %1480, 164
  %1482 = load i32, i32* %EAX.i1125
  %1483 = zext i32 %1482 to i64
  %1484 = load i64, i64* %PC.i1124
  %1485 = add i64 %1484, 6
  store i64 %1485, i64* %PC.i1124
  %1486 = inttoptr i64 %1481 to i32*
  store i32 %1482, i32* %1486
  store %struct.Memory* %loadMem_423d3c, %struct.Memory** %MEMORY
  %loadMem_423d42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1488 = getelementptr inbounds %struct.GPR, %struct.GPR* %1487, i32 0, i32 33
  %1489 = getelementptr inbounds %struct.Reg, %struct.Reg* %1488, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %1489 to i64*
  %1490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1491 = getelementptr inbounds %struct.GPR, %struct.GPR* %1490, i32 0, i32 1
  %1492 = getelementptr inbounds %struct.Reg, %struct.Reg* %1491, i32 0, i32 0
  %RAX.i1122 = bitcast %union.anon* %1492 to i64*
  %1493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1494 = getelementptr inbounds %struct.GPR, %struct.GPR* %1493, i32 0, i32 15
  %1495 = getelementptr inbounds %struct.Reg, %struct.Reg* %1494, i32 0, i32 0
  %RBP.i1123 = bitcast %union.anon* %1495 to i64*
  %1496 = load i64, i64* %RBP.i1123
  %1497 = sub i64 %1496, 64
  %1498 = load i64, i64* %PC.i1121
  %1499 = add i64 %1498, 3
  store i64 %1499, i64* %PC.i1121
  %1500 = inttoptr i64 %1497 to i32*
  %1501 = load i32, i32* %1500
  %1502 = zext i32 %1501 to i64
  store i64 %1502, i64* %RAX.i1122, align 8
  store %struct.Memory* %loadMem_423d42, %struct.Memory** %MEMORY
  %loadMem_423d45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1504 = getelementptr inbounds %struct.GPR, %struct.GPR* %1503, i32 0, i32 33
  %1505 = getelementptr inbounds %struct.Reg, %struct.Reg* %1504, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %1505 to i64*
  %1506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1507 = getelementptr inbounds %struct.GPR, %struct.GPR* %1506, i32 0, i32 1
  %1508 = getelementptr inbounds %struct.Reg, %struct.Reg* %1507, i32 0, i32 0
  %RAX.i1120 = bitcast %union.anon* %1508 to i64*
  %1509 = load i64, i64* %RAX.i1120
  %1510 = load i64, i64* %PC.i1119
  %1511 = add i64 %1510, 3
  store i64 %1511, i64* %PC.i1119
  %1512 = and i64 %1509, 4294967295
  %1513 = shl i64 %1512, 1
  %1514 = trunc i64 %1513 to i32
  %1515 = icmp slt i32 %1514, 0
  %1516 = shl i32 %1514, 1
  %1517 = zext i32 %1516 to i64
  store i64 %1517, i64* %RAX.i1120, align 8
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1519 = zext i1 %1515 to i8
  store i8 %1519, i8* %1518, align 1
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1521 = and i32 %1516, 254
  %1522 = call i32 @llvm.ctpop.i32(i32 %1521)
  %1523 = trunc i32 %1522 to i8
  %1524 = and i8 %1523, 1
  %1525 = xor i8 %1524, 1
  store i8 %1525, i8* %1520, align 1
  %1526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1526, align 1
  %1527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1528 = icmp eq i32 %1516, 0
  %1529 = zext i1 %1528 to i8
  store i8 %1529, i8* %1527, align 1
  %1530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1531 = lshr i32 %1516, 31
  %1532 = trunc i32 %1531 to i8
  store i8 %1532, i8* %1530, align 1
  %1533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1533, align 1
  store %struct.Memory* %loadMem_423d45, %struct.Memory** %MEMORY
  %loadMem_423d48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1535 = getelementptr inbounds %struct.GPR, %struct.GPR* %1534, i32 0, i32 33
  %1536 = getelementptr inbounds %struct.Reg, %struct.Reg* %1535, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %1536 to i64*
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1538 = getelementptr inbounds %struct.GPR, %struct.GPR* %1537, i32 0, i32 1
  %1539 = getelementptr inbounds %struct.Reg, %struct.Reg* %1538, i32 0, i32 0
  %EAX.i1117 = bitcast %union.anon* %1539 to i32*
  %1540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1541 = getelementptr inbounds %struct.GPR, %struct.GPR* %1540, i32 0, i32 15
  %1542 = getelementptr inbounds %struct.Reg, %struct.Reg* %1541, i32 0, i32 0
  %RBP.i1118 = bitcast %union.anon* %1542 to i64*
  %1543 = load i64, i64* %RBP.i1118
  %1544 = sub i64 %1543, 168
  %1545 = load i32, i32* %EAX.i1117
  %1546 = zext i32 %1545 to i64
  %1547 = load i64, i64* %PC.i1116
  %1548 = add i64 %1547, 6
  store i64 %1548, i64* %PC.i1116
  %1549 = inttoptr i64 %1544 to i32*
  store i32 %1545, i32* %1549
  store %struct.Memory* %loadMem_423d48, %struct.Memory** %MEMORY
  %loadMem_423d4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1551 = getelementptr inbounds %struct.GPR, %struct.GPR* %1550, i32 0, i32 33
  %1552 = getelementptr inbounds %struct.Reg, %struct.Reg* %1551, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %1552 to i64*
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1554 = getelementptr inbounds %struct.GPR, %struct.GPR* %1553, i32 0, i32 5
  %1555 = getelementptr inbounds %struct.Reg, %struct.Reg* %1554, i32 0, i32 0
  %RCX.i1114 = bitcast %union.anon* %1555 to i64*
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1557 = getelementptr inbounds %struct.GPR, %struct.GPR* %1556, i32 0, i32 15
  %1558 = getelementptr inbounds %struct.Reg, %struct.Reg* %1557, i32 0, i32 0
  %RBP.i1115 = bitcast %union.anon* %1558 to i64*
  %1559 = load i64, i64* %RBP.i1115
  %1560 = sub i64 %1559, 144
  %1561 = load i64, i64* %PC.i1113
  %1562 = add i64 %1561, 7
  store i64 %1562, i64* %PC.i1113
  %1563 = inttoptr i64 %1560 to i64*
  %1564 = load i64, i64* %1563
  store i64 %1564, i64* %RCX.i1114, align 8
  store %struct.Memory* %loadMem_423d4e, %struct.Memory** %MEMORY
  %loadMem_423d55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1566 = getelementptr inbounds %struct.GPR, %struct.GPR* %1565, i32 0, i32 33
  %1567 = getelementptr inbounds %struct.Reg, %struct.Reg* %1566, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %1567 to i64*
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1569 = getelementptr inbounds %struct.GPR, %struct.GPR* %1568, i32 0, i32 1
  %1570 = getelementptr inbounds %struct.Reg, %struct.Reg* %1569, i32 0, i32 0
  %RAX.i1111 = bitcast %union.anon* %1570 to i64*
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1572 = getelementptr inbounds %struct.GPR, %struct.GPR* %1571, i32 0, i32 5
  %1573 = getelementptr inbounds %struct.Reg, %struct.Reg* %1572, i32 0, i32 0
  %RCX.i1112 = bitcast %union.anon* %1573 to i64*
  %1574 = load i64, i64* %RCX.i1112
  %1575 = add i64 %1574, 6392
  %1576 = load i64, i64* %PC.i1110
  %1577 = add i64 %1576, 6
  store i64 %1577, i64* %PC.i1110
  %1578 = inttoptr i64 %1575 to i32*
  %1579 = load i32, i32* %1578
  %1580 = zext i32 %1579 to i64
  store i64 %1580, i64* %RAX.i1111, align 8
  store %struct.Memory* %loadMem_423d55, %struct.Memory** %MEMORY
  %loadMem_423d5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1582 = getelementptr inbounds %struct.GPR, %struct.GPR* %1581, i32 0, i32 33
  %1583 = getelementptr inbounds %struct.Reg, %struct.Reg* %1582, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %1583 to i64*
  %1584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1585 = getelementptr inbounds %struct.GPR, %struct.GPR* %1584, i32 0, i32 1
  %1586 = getelementptr inbounds %struct.Reg, %struct.Reg* %1585, i32 0, i32 0
  %RAX.i1108 = bitcast %union.anon* %1586 to i64*
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1588 = getelementptr inbounds %struct.GPR, %struct.GPR* %1587, i32 0, i32 15
  %1589 = getelementptr inbounds %struct.Reg, %struct.Reg* %1588, i32 0, i32 0
  %RBP.i1109 = bitcast %union.anon* %1589 to i64*
  %1590 = load i64, i64* %RAX.i1108
  %1591 = load i64, i64* %RBP.i1109
  %1592 = sub i64 %1591, 156
  %1593 = load i64, i64* %PC.i1107
  %1594 = add i64 %1593, 6
  store i64 %1594, i64* %PC.i1107
  %1595 = trunc i64 %1590 to i32
  %1596 = inttoptr i64 %1592 to i32*
  %1597 = load i32, i32* %1596
  %1598 = sub i32 %1595, %1597
  %1599 = zext i32 %1598 to i64
  store i64 %1599, i64* %RAX.i1108, align 8
  %1600 = icmp ult i32 %1595, %1597
  %1601 = zext i1 %1600 to i8
  %1602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1601, i8* %1602, align 1
  %1603 = and i32 %1598, 255
  %1604 = call i32 @llvm.ctpop.i32(i32 %1603)
  %1605 = trunc i32 %1604 to i8
  %1606 = and i8 %1605, 1
  %1607 = xor i8 %1606, 1
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1607, i8* %1608, align 1
  %1609 = xor i32 %1597, %1595
  %1610 = xor i32 %1609, %1598
  %1611 = lshr i32 %1610, 4
  %1612 = trunc i32 %1611 to i8
  %1613 = and i8 %1612, 1
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1613, i8* %1614, align 1
  %1615 = icmp eq i32 %1598, 0
  %1616 = zext i1 %1615 to i8
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1616, i8* %1617, align 1
  %1618 = lshr i32 %1598, 31
  %1619 = trunc i32 %1618 to i8
  %1620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1619, i8* %1620, align 1
  %1621 = lshr i32 %1595, 31
  %1622 = lshr i32 %1597, 31
  %1623 = xor i32 %1622, %1621
  %1624 = xor i32 %1618, %1621
  %1625 = add i32 %1624, %1623
  %1626 = icmp eq i32 %1625, 2
  %1627 = zext i1 %1626 to i8
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1627, i8* %1628, align 1
  store %struct.Memory* %loadMem_423d5b, %struct.Memory** %MEMORY
  %loadMem_423d61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1630 = getelementptr inbounds %struct.GPR, %struct.GPR* %1629, i32 0, i32 33
  %1631 = getelementptr inbounds %struct.Reg, %struct.Reg* %1630, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %1631 to i64*
  %1632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1633 = getelementptr inbounds %struct.GPR, %struct.GPR* %1632, i32 0, i32 1
  %1634 = getelementptr inbounds %struct.Reg, %struct.Reg* %1633, i32 0, i32 0
  %RAX.i1106 = bitcast %union.anon* %1634 to i64*
  %1635 = load i64, i64* %RAX.i1106
  %1636 = load i64, i64* %PC.i1105
  %1637 = add i64 %1636, 3
  store i64 %1637, i64* %PC.i1105
  %1638 = trunc i64 %1635 to i32
  %1639 = add i32 1, %1638
  %1640 = zext i32 %1639 to i64
  store i64 %1640, i64* %RAX.i1106, align 8
  %1641 = icmp ult i32 %1639, %1638
  %1642 = icmp ult i32 %1639, 1
  %1643 = or i1 %1641, %1642
  %1644 = zext i1 %1643 to i8
  %1645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1644, i8* %1645, align 1
  %1646 = and i32 %1639, 255
  %1647 = call i32 @llvm.ctpop.i32(i32 %1646)
  %1648 = trunc i32 %1647 to i8
  %1649 = and i8 %1648, 1
  %1650 = xor i8 %1649, 1
  %1651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1650, i8* %1651, align 1
  %1652 = xor i64 1, %1635
  %1653 = trunc i64 %1652 to i32
  %1654 = xor i32 %1653, %1639
  %1655 = lshr i32 %1654, 4
  %1656 = trunc i32 %1655 to i8
  %1657 = and i8 %1656, 1
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1657, i8* %1658, align 1
  %1659 = icmp eq i32 %1639, 0
  %1660 = zext i1 %1659 to i8
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1660, i8* %1661, align 1
  %1662 = lshr i32 %1639, 31
  %1663 = trunc i32 %1662 to i8
  %1664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1663, i8* %1664, align 1
  %1665 = lshr i32 %1638, 31
  %1666 = xor i32 %1662, %1665
  %1667 = add i32 %1666, %1662
  %1668 = icmp eq i32 %1667, 2
  %1669 = zext i1 %1668 to i8
  %1670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1669, i8* %1670, align 1
  store %struct.Memory* %loadMem_423d61, %struct.Memory** %MEMORY
  %loadMem_423d64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1672 = getelementptr inbounds %struct.GPR, %struct.GPR* %1671, i32 0, i32 33
  %1673 = getelementptr inbounds %struct.Reg, %struct.Reg* %1672, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %1673 to i64*
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1675 = getelementptr inbounds %struct.GPR, %struct.GPR* %1674, i32 0, i32 1
  %1676 = getelementptr inbounds %struct.Reg, %struct.Reg* %1675, i32 0, i32 0
  %RAX.i1104 = bitcast %union.anon* %1676 to i64*
  %1677 = load i64, i64* %RAX.i1104
  %1678 = load i64, i64* %PC.i1103
  %1679 = add i64 %1678, 3
  store i64 %1679, i64* %PC.i1103
  %1680 = and i64 %1677, 4294967295
  %1681 = shl i64 %1680, 1
  %1682 = trunc i64 %1681 to i32
  %1683 = icmp slt i32 %1682, 0
  %1684 = shl i32 %1682, 1
  %1685 = zext i32 %1684 to i64
  store i64 %1685, i64* %RAX.i1104, align 8
  %1686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1687 = zext i1 %1683 to i8
  store i8 %1687, i8* %1686, align 1
  %1688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1689 = and i32 %1684, 254
  %1690 = call i32 @llvm.ctpop.i32(i32 %1689)
  %1691 = trunc i32 %1690 to i8
  %1692 = and i8 %1691, 1
  %1693 = xor i8 %1692, 1
  store i8 %1693, i8* %1688, align 1
  %1694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1694, align 1
  %1695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1696 = icmp eq i32 %1684, 0
  %1697 = zext i1 %1696 to i8
  store i8 %1697, i8* %1695, align 1
  %1698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1699 = lshr i32 %1684, 31
  %1700 = trunc i32 %1699 to i8
  store i8 %1700, i8* %1698, align 1
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1701, align 1
  store %struct.Memory* %loadMem_423d64, %struct.Memory** %MEMORY
  %loadMem_423d67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1703 = getelementptr inbounds %struct.GPR, %struct.GPR* %1702, i32 0, i32 33
  %1704 = getelementptr inbounds %struct.Reg, %struct.Reg* %1703, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %1704 to i64*
  %1705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1706 = getelementptr inbounds %struct.GPR, %struct.GPR* %1705, i32 0, i32 1
  %1707 = getelementptr inbounds %struct.Reg, %struct.Reg* %1706, i32 0, i32 0
  %EAX.i1101 = bitcast %union.anon* %1707 to i32*
  %1708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1709 = getelementptr inbounds %struct.GPR, %struct.GPR* %1708, i32 0, i32 15
  %1710 = getelementptr inbounds %struct.Reg, %struct.Reg* %1709, i32 0, i32 0
  %RBP.i1102 = bitcast %union.anon* %1710 to i64*
  %1711 = load i64, i64* %RBP.i1102
  %1712 = sub i64 %1711, 172
  %1713 = load i32, i32* %EAX.i1101
  %1714 = zext i32 %1713 to i64
  %1715 = load i64, i64* %PC.i1100
  %1716 = add i64 %1715, 6
  store i64 %1716, i64* %PC.i1100
  %1717 = inttoptr i64 %1712 to i32*
  store i32 %1713, i32* %1717
  store %struct.Memory* %loadMem_423d67, %struct.Memory** %MEMORY
  %loadMem_423d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1719 = getelementptr inbounds %struct.GPR, %struct.GPR* %1718, i32 0, i32 33
  %1720 = getelementptr inbounds %struct.Reg, %struct.Reg* %1719, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %1720 to i64*
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1722 = getelementptr inbounds %struct.GPR, %struct.GPR* %1721, i32 0, i32 5
  %1723 = getelementptr inbounds %struct.Reg, %struct.Reg* %1722, i32 0, i32 0
  %RCX.i1098 = bitcast %union.anon* %1723 to i64*
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1725 = getelementptr inbounds %struct.GPR, %struct.GPR* %1724, i32 0, i32 15
  %1726 = getelementptr inbounds %struct.Reg, %struct.Reg* %1725, i32 0, i32 0
  %RBP.i1099 = bitcast %union.anon* %1726 to i64*
  %1727 = load i64, i64* %RBP.i1099
  %1728 = sub i64 %1727, 144
  %1729 = load i64, i64* %PC.i1097
  %1730 = add i64 %1729, 7
  store i64 %1730, i64* %PC.i1097
  %1731 = inttoptr i64 %1728 to i64*
  %1732 = load i64, i64* %1731
  store i64 %1732, i64* %RCX.i1098, align 8
  store %struct.Memory* %loadMem_423d6d, %struct.Memory** %MEMORY
  %loadMem_423d74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1734 = getelementptr inbounds %struct.GPR, %struct.GPR* %1733, i32 0, i32 33
  %1735 = getelementptr inbounds %struct.Reg, %struct.Reg* %1734, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %1735 to i64*
  %1736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1737 = getelementptr inbounds %struct.GPR, %struct.GPR* %1736, i32 0, i32 1
  %1738 = getelementptr inbounds %struct.Reg, %struct.Reg* %1737, i32 0, i32 0
  %RAX.i1095 = bitcast %union.anon* %1738 to i64*
  %1739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1740 = getelementptr inbounds %struct.GPR, %struct.GPR* %1739, i32 0, i32 5
  %1741 = getelementptr inbounds %struct.Reg, %struct.Reg* %1740, i32 0, i32 0
  %RCX.i1096 = bitcast %union.anon* %1741 to i64*
  %1742 = load i64, i64* %RCX.i1096
  %1743 = add i64 %1742, 6396
  %1744 = load i64, i64* %PC.i1094
  %1745 = add i64 %1744, 6
  store i64 %1745, i64* %PC.i1094
  %1746 = inttoptr i64 %1743 to i32*
  %1747 = load i32, i32* %1746
  %1748 = zext i32 %1747 to i64
  store i64 %1748, i64* %RAX.i1095, align 8
  store %struct.Memory* %loadMem_423d74, %struct.Memory** %MEMORY
  %loadMem_423d7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1750 = getelementptr inbounds %struct.GPR, %struct.GPR* %1749, i32 0, i32 33
  %1751 = getelementptr inbounds %struct.Reg, %struct.Reg* %1750, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %1751 to i64*
  %1752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1753 = getelementptr inbounds %struct.GPR, %struct.GPR* %1752, i32 0, i32 1
  %1754 = getelementptr inbounds %struct.Reg, %struct.Reg* %1753, i32 0, i32 0
  %RAX.i1092 = bitcast %union.anon* %1754 to i64*
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1756 = getelementptr inbounds %struct.GPR, %struct.GPR* %1755, i32 0, i32 15
  %1757 = getelementptr inbounds %struct.Reg, %struct.Reg* %1756, i32 0, i32 0
  %RBP.i1093 = bitcast %union.anon* %1757 to i64*
  %1758 = load i64, i64* %RAX.i1092
  %1759 = load i64, i64* %RBP.i1093
  %1760 = sub i64 %1759, 160
  %1761 = load i64, i64* %PC.i1091
  %1762 = add i64 %1761, 6
  store i64 %1762, i64* %PC.i1091
  %1763 = trunc i64 %1758 to i32
  %1764 = inttoptr i64 %1760 to i32*
  %1765 = load i32, i32* %1764
  %1766 = sub i32 %1763, %1765
  %1767 = zext i32 %1766 to i64
  store i64 %1767, i64* %RAX.i1092, align 8
  %1768 = icmp ult i32 %1763, %1765
  %1769 = zext i1 %1768 to i8
  %1770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1769, i8* %1770, align 1
  %1771 = and i32 %1766, 255
  %1772 = call i32 @llvm.ctpop.i32(i32 %1771)
  %1773 = trunc i32 %1772 to i8
  %1774 = and i8 %1773, 1
  %1775 = xor i8 %1774, 1
  %1776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1775, i8* %1776, align 1
  %1777 = xor i32 %1765, %1763
  %1778 = xor i32 %1777, %1766
  %1779 = lshr i32 %1778, 4
  %1780 = trunc i32 %1779 to i8
  %1781 = and i8 %1780, 1
  %1782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1781, i8* %1782, align 1
  %1783 = icmp eq i32 %1766, 0
  %1784 = zext i1 %1783 to i8
  %1785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1784, i8* %1785, align 1
  %1786 = lshr i32 %1766, 31
  %1787 = trunc i32 %1786 to i8
  %1788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1787, i8* %1788, align 1
  %1789 = lshr i32 %1763, 31
  %1790 = lshr i32 %1765, 31
  %1791 = xor i32 %1790, %1789
  %1792 = xor i32 %1786, %1789
  %1793 = add i32 %1792, %1791
  %1794 = icmp eq i32 %1793, 2
  %1795 = zext i1 %1794 to i8
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1795, i8* %1796, align 1
  store %struct.Memory* %loadMem_423d7a, %struct.Memory** %MEMORY
  %loadMem_423d80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1798 = getelementptr inbounds %struct.GPR, %struct.GPR* %1797, i32 0, i32 33
  %1799 = getelementptr inbounds %struct.Reg, %struct.Reg* %1798, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %1799 to i64*
  %1800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1801 = getelementptr inbounds %struct.GPR, %struct.GPR* %1800, i32 0, i32 1
  %1802 = getelementptr inbounds %struct.Reg, %struct.Reg* %1801, i32 0, i32 0
  %RAX.i1090 = bitcast %union.anon* %1802 to i64*
  %1803 = load i64, i64* %RAX.i1090
  %1804 = load i64, i64* %PC.i1089
  %1805 = add i64 %1804, 3
  store i64 %1805, i64* %PC.i1089
  %1806 = trunc i64 %1803 to i32
  %1807 = add i32 1, %1806
  %1808 = zext i32 %1807 to i64
  store i64 %1808, i64* %RAX.i1090, align 8
  %1809 = icmp ult i32 %1807, %1806
  %1810 = icmp ult i32 %1807, 1
  %1811 = or i1 %1809, %1810
  %1812 = zext i1 %1811 to i8
  %1813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1812, i8* %1813, align 1
  %1814 = and i32 %1807, 255
  %1815 = call i32 @llvm.ctpop.i32(i32 %1814)
  %1816 = trunc i32 %1815 to i8
  %1817 = and i8 %1816, 1
  %1818 = xor i8 %1817, 1
  %1819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1818, i8* %1819, align 1
  %1820 = xor i64 1, %1803
  %1821 = trunc i64 %1820 to i32
  %1822 = xor i32 %1821, %1807
  %1823 = lshr i32 %1822, 4
  %1824 = trunc i32 %1823 to i8
  %1825 = and i8 %1824, 1
  %1826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1825, i8* %1826, align 1
  %1827 = icmp eq i32 %1807, 0
  %1828 = zext i1 %1827 to i8
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1828, i8* %1829, align 1
  %1830 = lshr i32 %1807, 31
  %1831 = trunc i32 %1830 to i8
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1831, i8* %1832, align 1
  %1833 = lshr i32 %1806, 31
  %1834 = xor i32 %1830, %1833
  %1835 = add i32 %1834, %1830
  %1836 = icmp eq i32 %1835, 2
  %1837 = zext i1 %1836 to i8
  %1838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1837, i8* %1838, align 1
  store %struct.Memory* %loadMem_423d80, %struct.Memory** %MEMORY
  %loadMem_423d83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1840 = getelementptr inbounds %struct.GPR, %struct.GPR* %1839, i32 0, i32 33
  %1841 = getelementptr inbounds %struct.Reg, %struct.Reg* %1840, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %1841 to i64*
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1843 = getelementptr inbounds %struct.GPR, %struct.GPR* %1842, i32 0, i32 1
  %1844 = getelementptr inbounds %struct.Reg, %struct.Reg* %1843, i32 0, i32 0
  %RAX.i1088 = bitcast %union.anon* %1844 to i64*
  %1845 = load i64, i64* %RAX.i1088
  %1846 = load i64, i64* %PC.i1087
  %1847 = add i64 %1846, 3
  store i64 %1847, i64* %PC.i1087
  %1848 = and i64 %1845, 4294967295
  %1849 = shl i64 %1848, 1
  %1850 = trunc i64 %1849 to i32
  %1851 = icmp slt i32 %1850, 0
  %1852 = shl i32 %1850, 1
  %1853 = zext i32 %1852 to i64
  store i64 %1853, i64* %RAX.i1088, align 8
  %1854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1855 = zext i1 %1851 to i8
  store i8 %1855, i8* %1854, align 1
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1857 = and i32 %1852, 254
  %1858 = call i32 @llvm.ctpop.i32(i32 %1857)
  %1859 = trunc i32 %1858 to i8
  %1860 = and i8 %1859, 1
  %1861 = xor i8 %1860, 1
  store i8 %1861, i8* %1856, align 1
  %1862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1862, align 1
  %1863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1864 = icmp eq i32 %1852, 0
  %1865 = zext i1 %1864 to i8
  store i8 %1865, i8* %1863, align 1
  %1866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1867 = lshr i32 %1852, 31
  %1868 = trunc i32 %1867 to i8
  store i8 %1868, i8* %1866, align 1
  %1869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1869, align 1
  store %struct.Memory* %loadMem_423d83, %struct.Memory** %MEMORY
  %loadMem_423d86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1871 = getelementptr inbounds %struct.GPR, %struct.GPR* %1870, i32 0, i32 33
  %1872 = getelementptr inbounds %struct.Reg, %struct.Reg* %1871, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %1872 to i64*
  %1873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1874 = getelementptr inbounds %struct.GPR, %struct.GPR* %1873, i32 0, i32 1
  %1875 = getelementptr inbounds %struct.Reg, %struct.Reg* %1874, i32 0, i32 0
  %EAX.i1085 = bitcast %union.anon* %1875 to i32*
  %1876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1877 = getelementptr inbounds %struct.GPR, %struct.GPR* %1876, i32 0, i32 15
  %1878 = getelementptr inbounds %struct.Reg, %struct.Reg* %1877, i32 0, i32 0
  %RBP.i1086 = bitcast %union.anon* %1878 to i64*
  %1879 = load i64, i64* %RBP.i1086
  %1880 = sub i64 %1879, 176
  %1881 = load i32, i32* %EAX.i1085
  %1882 = zext i32 %1881 to i64
  %1883 = load i64, i64* %PC.i1084
  %1884 = add i64 %1883, 6
  store i64 %1884, i64* %PC.i1084
  %1885 = inttoptr i64 %1880 to i32*
  store i32 %1881, i32* %1885
  store %struct.Memory* %loadMem_423d86, %struct.Memory** %MEMORY
  %loadMem_423d8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1887 = getelementptr inbounds %struct.GPR, %struct.GPR* %1886, i32 0, i32 33
  %1888 = getelementptr inbounds %struct.Reg, %struct.Reg* %1887, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %1888 to i64*
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1890 = getelementptr inbounds %struct.GPR, %struct.GPR* %1889, i32 0, i32 15
  %1891 = getelementptr inbounds %struct.Reg, %struct.Reg* %1890, i32 0, i32 0
  %RBP.i1083 = bitcast %union.anon* %1891 to i64*
  %1892 = load i64, i64* %RBP.i1083
  %1893 = sub i64 %1892, 204
  %1894 = load i64, i64* %PC.i1082
  %1895 = add i64 %1894, 10
  store i64 %1895, i64* %PC.i1082
  %1896 = inttoptr i64 %1893 to i32*
  store i32 0, i32* %1896
  store %struct.Memory* %loadMem_423d8c, %struct.Memory** %MEMORY
  %loadMem_423d96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1898 = getelementptr inbounds %struct.GPR, %struct.GPR* %1897, i32 0, i32 33
  %1899 = getelementptr inbounds %struct.Reg, %struct.Reg* %1898, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %1899 to i64*
  %1900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1901 = getelementptr inbounds %struct.GPR, %struct.GPR* %1900, i32 0, i32 15
  %1902 = getelementptr inbounds %struct.Reg, %struct.Reg* %1901, i32 0, i32 0
  %RBP.i1081 = bitcast %union.anon* %1902 to i64*
  %1903 = load i64, i64* %RBP.i1081
  %1904 = sub i64 %1903, 208
  %1905 = load i64, i64* %PC.i1080
  %1906 = add i64 %1905, 10
  store i64 %1906, i64* %PC.i1080
  %1907 = inttoptr i64 %1904 to i32*
  store i32 0, i32* %1907
  store %struct.Memory* %loadMem_423d96, %struct.Memory** %MEMORY
  %loadMem_423da0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1909 = getelementptr inbounds %struct.GPR, %struct.GPR* %1908, i32 0, i32 33
  %1910 = getelementptr inbounds %struct.Reg, %struct.Reg* %1909, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %1910 to i64*
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1912 = getelementptr inbounds %struct.GPR, %struct.GPR* %1911, i32 0, i32 5
  %1913 = getelementptr inbounds %struct.Reg, %struct.Reg* %1912, i32 0, i32 0
  %RCX.i1078 = bitcast %union.anon* %1913 to i64*
  %1914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1915 = getelementptr inbounds %struct.GPR, %struct.GPR* %1914, i32 0, i32 15
  %1916 = getelementptr inbounds %struct.Reg, %struct.Reg* %1915, i32 0, i32 0
  %RBP.i1079 = bitcast %union.anon* %1916 to i64*
  %1917 = load i64, i64* %RBP.i1079
  %1918 = sub i64 %1917, 80
  %1919 = load i64, i64* %PC.i1077
  %1920 = add i64 %1919, 4
  store i64 %1920, i64* %PC.i1077
  %1921 = inttoptr i64 %1918 to i64*
  %1922 = load i64, i64* %1921
  store i64 %1922, i64* %RCX.i1078, align 8
  store %struct.Memory* %loadMem_423da0, %struct.Memory** %MEMORY
  %loadMem_423da4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1924 = getelementptr inbounds %struct.GPR, %struct.GPR* %1923, i32 0, i32 33
  %1925 = getelementptr inbounds %struct.Reg, %struct.Reg* %1924, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %1925 to i64*
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1927 = getelementptr inbounds %struct.GPR, %struct.GPR* %1926, i32 0, i32 1
  %1928 = getelementptr inbounds %struct.Reg, %struct.Reg* %1927, i32 0, i32 0
  %RAX.i1075 = bitcast %union.anon* %1928 to i64*
  %1929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1930 = getelementptr inbounds %struct.GPR, %struct.GPR* %1929, i32 0, i32 5
  %1931 = getelementptr inbounds %struct.Reg, %struct.Reg* %1930, i32 0, i32 0
  %RCX.i1076 = bitcast %union.anon* %1931 to i64*
  %1932 = load i64, i64* %RCX.i1076
  %1933 = load i64, i64* %PC.i1074
  %1934 = add i64 %1933, 3
  store i64 %1934, i64* %PC.i1074
  %1935 = inttoptr i64 %1932 to i16*
  %1936 = load i16, i16* %1935
  %1937 = sext i16 %1936 to i64
  %1938 = and i64 %1937, 4294967295
  store i64 %1938, i64* %RAX.i1075, align 8
  store %struct.Memory* %loadMem_423da4, %struct.Memory** %MEMORY
  %loadMem_423da7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1940 = getelementptr inbounds %struct.GPR, %struct.GPR* %1939, i32 0, i32 33
  %1941 = getelementptr inbounds %struct.Reg, %struct.Reg* %1940, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %1941 to i64*
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1943 = getelementptr inbounds %struct.GPR, %struct.GPR* %1942, i32 0, i32 1
  %1944 = getelementptr inbounds %struct.Reg, %struct.Reg* %1943, i32 0, i32 0
  %RAX.i1073 = bitcast %union.anon* %1944 to i64*
  %1945 = load i64, i64* %RAX.i1073
  %1946 = load i64, i64* %PC.i1072
  %1947 = add i64 %1946, 3
  store i64 %1947, i64* %PC.i1072
  %1948 = and i64 %1945, 4294967295
  %1949 = shl i64 %1948, 1
  %1950 = trunc i64 %1949 to i32
  %1951 = icmp slt i32 %1950, 0
  %1952 = shl i32 %1950, 1
  %1953 = zext i32 %1952 to i64
  store i64 %1953, i64* %RAX.i1073, align 8
  %1954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1955 = zext i1 %1951 to i8
  store i8 %1955, i8* %1954, align 1
  %1956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1957 = and i32 %1952, 254
  %1958 = call i32 @llvm.ctpop.i32(i32 %1957)
  %1959 = trunc i32 %1958 to i8
  %1960 = and i8 %1959, 1
  %1961 = xor i8 %1960, 1
  store i8 %1961, i8* %1956, align 1
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1962, align 1
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1964 = icmp eq i32 %1952, 0
  %1965 = zext i1 %1964 to i8
  store i8 %1965, i8* %1963, align 1
  %1966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1967 = lshr i32 %1952, 31
  %1968 = trunc i32 %1967 to i8
  store i8 %1968, i8* %1966, align 1
  %1969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1969, align 1
  store %struct.Memory* %loadMem_423da7, %struct.Memory** %MEMORY
  %loadMem_423daa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1971 = getelementptr inbounds %struct.GPR, %struct.GPR* %1970, i32 0, i32 33
  %1972 = getelementptr inbounds %struct.Reg, %struct.Reg* %1971, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %1972 to i64*
  %1973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1974 = getelementptr inbounds %struct.GPR, %struct.GPR* %1973, i32 0, i32 1
  %1975 = getelementptr inbounds %struct.Reg, %struct.Reg* %1974, i32 0, i32 0
  %AX.i1070 = bitcast %union.anon* %1975 to i16*
  %1976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1977 = getelementptr inbounds %struct.GPR, %struct.GPR* %1976, i32 0, i32 9
  %1978 = getelementptr inbounds %struct.Reg, %struct.Reg* %1977, i32 0, i32 0
  %SI.i1071 = bitcast %union.anon* %1978 to i16*
  %1979 = load i16, i16* %AX.i1070
  %1980 = zext i16 %1979 to i64
  %1981 = load i64, i64* %PC.i1069
  %1982 = add i64 %1981, 3
  store i64 %1982, i64* %PC.i1069
  store i16 %1979, i16* %SI.i1071, align 2
  store %struct.Memory* %loadMem_423daa, %struct.Memory** %MEMORY
  %loadMem_423dad = load %struct.Memory*, %struct.Memory** %MEMORY
  %1983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1984 = getelementptr inbounds %struct.GPR, %struct.GPR* %1983, i32 0, i32 33
  %1985 = getelementptr inbounds %struct.Reg, %struct.Reg* %1984, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %1985 to i64*
  %1986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1987 = getelementptr inbounds %struct.GPR, %struct.GPR* %1986, i32 0, i32 9
  %1988 = getelementptr inbounds %struct.Reg, %struct.Reg* %1987, i32 0, i32 0
  %SI.i1067 = bitcast %union.anon* %1988 to i16*
  %1989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1990 = getelementptr inbounds %struct.GPR, %struct.GPR* %1989, i32 0, i32 5
  %1991 = getelementptr inbounds %struct.Reg, %struct.Reg* %1990, i32 0, i32 0
  %RCX.i1068 = bitcast %union.anon* %1991 to i64*
  %1992 = load i64, i64* %RCX.i1068
  %1993 = load i16, i16* %SI.i1067
  %1994 = zext i16 %1993 to i64
  %1995 = load i64, i64* %PC.i1066
  %1996 = add i64 %1995, 3
  store i64 %1996, i64* %PC.i1066
  %1997 = inttoptr i64 %1992 to i16*
  store i16 %1993, i16* %1997
  store %struct.Memory* %loadMem_423dad, %struct.Memory** %MEMORY
  %loadMem_423db0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1999 = getelementptr inbounds %struct.GPR, %struct.GPR* %1998, i32 0, i32 33
  %2000 = getelementptr inbounds %struct.Reg, %struct.Reg* %1999, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %2000 to i64*
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2002 = getelementptr inbounds %struct.GPR, %struct.GPR* %2001, i32 0, i32 5
  %2003 = getelementptr inbounds %struct.Reg, %struct.Reg* %2002, i32 0, i32 0
  %RCX.i1064 = bitcast %union.anon* %2003 to i64*
  %2004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2005 = getelementptr inbounds %struct.GPR, %struct.GPR* %2004, i32 0, i32 15
  %2006 = getelementptr inbounds %struct.Reg, %struct.Reg* %2005, i32 0, i32 0
  %RBP.i1065 = bitcast %union.anon* %2006 to i64*
  %2007 = load i64, i64* %RBP.i1065
  %2008 = sub i64 %2007, 88
  %2009 = load i64, i64* %PC.i1063
  %2010 = add i64 %2009, 4
  store i64 %2010, i64* %PC.i1063
  %2011 = inttoptr i64 %2008 to i64*
  %2012 = load i64, i64* %2011
  store i64 %2012, i64* %RCX.i1064, align 8
  store %struct.Memory* %loadMem_423db0, %struct.Memory** %MEMORY
  %loadMem_423db4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2014 = getelementptr inbounds %struct.GPR, %struct.GPR* %2013, i32 0, i32 33
  %2015 = getelementptr inbounds %struct.Reg, %struct.Reg* %2014, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %2015 to i64*
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2017 = getelementptr inbounds %struct.GPR, %struct.GPR* %2016, i32 0, i32 1
  %2018 = getelementptr inbounds %struct.Reg, %struct.Reg* %2017, i32 0, i32 0
  %RAX.i1061 = bitcast %union.anon* %2018 to i64*
  %2019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2020 = getelementptr inbounds %struct.GPR, %struct.GPR* %2019, i32 0, i32 5
  %2021 = getelementptr inbounds %struct.Reg, %struct.Reg* %2020, i32 0, i32 0
  %RCX.i1062 = bitcast %union.anon* %2021 to i64*
  %2022 = load i64, i64* %RCX.i1062
  %2023 = load i64, i64* %PC.i1060
  %2024 = add i64 %2023, 3
  store i64 %2024, i64* %PC.i1060
  %2025 = inttoptr i64 %2022 to i16*
  %2026 = load i16, i16* %2025
  %2027 = sext i16 %2026 to i64
  %2028 = and i64 %2027, 4294967295
  store i64 %2028, i64* %RAX.i1061, align 8
  store %struct.Memory* %loadMem_423db4, %struct.Memory** %MEMORY
  %loadMem_423db7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2030 = getelementptr inbounds %struct.GPR, %struct.GPR* %2029, i32 0, i32 33
  %2031 = getelementptr inbounds %struct.Reg, %struct.Reg* %2030, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %2031 to i64*
  %2032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2033 = getelementptr inbounds %struct.GPR, %struct.GPR* %2032, i32 0, i32 1
  %2034 = getelementptr inbounds %struct.Reg, %struct.Reg* %2033, i32 0, i32 0
  %RAX.i1059 = bitcast %union.anon* %2034 to i64*
  %2035 = load i64, i64* %RAX.i1059
  %2036 = load i64, i64* %PC.i1058
  %2037 = add i64 %2036, 3
  store i64 %2037, i64* %PC.i1058
  %2038 = and i64 %2035, 4294967295
  %2039 = shl i64 %2038, 1
  %2040 = trunc i64 %2039 to i32
  %2041 = icmp slt i32 %2040, 0
  %2042 = shl i32 %2040, 1
  %2043 = zext i32 %2042 to i64
  store i64 %2043, i64* %RAX.i1059, align 8
  %2044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2045 = zext i1 %2041 to i8
  store i8 %2045, i8* %2044, align 1
  %2046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2047 = and i32 %2042, 254
  %2048 = call i32 @llvm.ctpop.i32(i32 %2047)
  %2049 = trunc i32 %2048 to i8
  %2050 = and i8 %2049, 1
  %2051 = xor i8 %2050, 1
  store i8 %2051, i8* %2046, align 1
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2052, align 1
  %2053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2054 = icmp eq i32 %2042, 0
  %2055 = zext i1 %2054 to i8
  store i8 %2055, i8* %2053, align 1
  %2056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2057 = lshr i32 %2042, 31
  %2058 = trunc i32 %2057 to i8
  store i8 %2058, i8* %2056, align 1
  %2059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2059, align 1
  store %struct.Memory* %loadMem_423db7, %struct.Memory** %MEMORY
  %loadMem_423dba = load %struct.Memory*, %struct.Memory** %MEMORY
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2061 = getelementptr inbounds %struct.GPR, %struct.GPR* %2060, i32 0, i32 33
  %2062 = getelementptr inbounds %struct.Reg, %struct.Reg* %2061, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %2062 to i64*
  %2063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2064 = getelementptr inbounds %struct.GPR, %struct.GPR* %2063, i32 0, i32 1
  %2065 = getelementptr inbounds %struct.Reg, %struct.Reg* %2064, i32 0, i32 0
  %AX.i1056 = bitcast %union.anon* %2065 to i16*
  %2066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2067 = getelementptr inbounds %struct.GPR, %struct.GPR* %2066, i32 0, i32 9
  %2068 = getelementptr inbounds %struct.Reg, %struct.Reg* %2067, i32 0, i32 0
  %SI.i1057 = bitcast %union.anon* %2068 to i16*
  %2069 = load i16, i16* %AX.i1056
  %2070 = zext i16 %2069 to i64
  %2071 = load i64, i64* %PC.i1055
  %2072 = add i64 %2071, 3
  store i64 %2072, i64* %PC.i1055
  store i16 %2069, i16* %SI.i1057, align 2
  store %struct.Memory* %loadMem_423dba, %struct.Memory** %MEMORY
  %loadMem_423dbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2074 = getelementptr inbounds %struct.GPR, %struct.GPR* %2073, i32 0, i32 33
  %2075 = getelementptr inbounds %struct.Reg, %struct.Reg* %2074, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %2075 to i64*
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2077 = getelementptr inbounds %struct.GPR, %struct.GPR* %2076, i32 0, i32 9
  %2078 = getelementptr inbounds %struct.Reg, %struct.Reg* %2077, i32 0, i32 0
  %SI.i = bitcast %union.anon* %2078 to i16*
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2080 = getelementptr inbounds %struct.GPR, %struct.GPR* %2079, i32 0, i32 5
  %2081 = getelementptr inbounds %struct.Reg, %struct.Reg* %2080, i32 0, i32 0
  %RCX.i1054 = bitcast %union.anon* %2081 to i64*
  %2082 = load i64, i64* %RCX.i1054
  %2083 = load i16, i16* %SI.i
  %2084 = zext i16 %2083 to i64
  %2085 = load i64, i64* %PC.i1053
  %2086 = add i64 %2085, 3
  store i64 %2086, i64* %PC.i1053
  %2087 = inttoptr i64 %2082 to i16*
  store i16 %2083, i16* %2087
  store %struct.Memory* %loadMem_423dbd, %struct.Memory** %MEMORY
  %loadMem_423dc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2089 = getelementptr inbounds %struct.GPR, %struct.GPR* %2088, i32 0, i32 33
  %2090 = getelementptr inbounds %struct.Reg, %struct.Reg* %2089, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %2090 to i64*
  %2091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2092 = getelementptr inbounds %struct.GPR, %struct.GPR* %2091, i32 0, i32 1
  %2093 = getelementptr inbounds %struct.Reg, %struct.Reg* %2092, i32 0, i32 0
  %RAX.i1051 = bitcast %union.anon* %2093 to i64*
  %2094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2095 = getelementptr inbounds %struct.GPR, %struct.GPR* %2094, i32 0, i32 15
  %2096 = getelementptr inbounds %struct.Reg, %struct.Reg* %2095, i32 0, i32 0
  %RBP.i1052 = bitcast %union.anon* %2096 to i64*
  %2097 = load i64, i64* %RBP.i1052
  %2098 = sub i64 %2097, 164
  %2099 = load i64, i64* %PC.i1050
  %2100 = add i64 %2099, 6
  store i64 %2100, i64* %PC.i1050
  %2101 = inttoptr i64 %2098 to i32*
  %2102 = load i32, i32* %2101
  %2103 = zext i32 %2102 to i64
  store i64 %2103, i64* %RAX.i1051, align 8
  store %struct.Memory* %loadMem_423dc0, %struct.Memory** %MEMORY
  %loadMem_423dc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2105 = getelementptr inbounds %struct.GPR, %struct.GPR* %2104, i32 0, i32 33
  %2106 = getelementptr inbounds %struct.Reg, %struct.Reg* %2105, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %2106 to i64*
  %2107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2108 = getelementptr inbounds %struct.GPR, %struct.GPR* %2107, i32 0, i32 5
  %2109 = getelementptr inbounds %struct.Reg, %struct.Reg* %2108, i32 0, i32 0
  %RCX.i1048 = bitcast %union.anon* %2109 to i64*
  %2110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2111 = getelementptr inbounds %struct.GPR, %struct.GPR* %2110, i32 0, i32 15
  %2112 = getelementptr inbounds %struct.Reg, %struct.Reg* %2111, i32 0, i32 0
  %RBP.i1049 = bitcast %union.anon* %2112 to i64*
  %2113 = load i64, i64* %RBP.i1049
  %2114 = sub i64 %2113, 80
  %2115 = load i64, i64* %PC.i1047
  %2116 = add i64 %2115, 4
  store i64 %2116, i64* %PC.i1047
  %2117 = inttoptr i64 %2114 to i64*
  %2118 = load i64, i64* %2117
  store i64 %2118, i64* %RCX.i1048, align 8
  store %struct.Memory* %loadMem_423dc6, %struct.Memory** %MEMORY
  %loadMem_423dca = load %struct.Memory*, %struct.Memory** %MEMORY
  %2119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2120 = getelementptr inbounds %struct.GPR, %struct.GPR* %2119, i32 0, i32 33
  %2121 = getelementptr inbounds %struct.Reg, %struct.Reg* %2120, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %2121 to i64*
  %2122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2123 = getelementptr inbounds %struct.GPR, %struct.GPR* %2122, i32 0, i32 5
  %2124 = getelementptr inbounds %struct.Reg, %struct.Reg* %2123, i32 0, i32 0
  %RCX.i1045 = bitcast %union.anon* %2124 to i64*
  %2125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2126 = getelementptr inbounds %struct.GPR, %struct.GPR* %2125, i32 0, i32 11
  %2127 = getelementptr inbounds %struct.Reg, %struct.Reg* %2126, i32 0, i32 0
  %RDI.i1046 = bitcast %union.anon* %2127 to i64*
  %2128 = load i64, i64* %RCX.i1045
  %2129 = load i64, i64* %PC.i1044
  %2130 = add i64 %2129, 3
  store i64 %2130, i64* %PC.i1044
  %2131 = inttoptr i64 %2128 to i16*
  %2132 = load i16, i16* %2131
  %2133 = sext i16 %2132 to i64
  %2134 = and i64 %2133, 4294967295
  store i64 %2134, i64* %RDI.i1046, align 8
  store %struct.Memory* %loadMem_423dca, %struct.Memory** %MEMORY
  %loadMem_423dcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2136 = getelementptr inbounds %struct.GPR, %struct.GPR* %2135, i32 0, i32 33
  %2137 = getelementptr inbounds %struct.Reg, %struct.Reg* %2136, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %2137 to i64*
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2139 = getelementptr inbounds %struct.GPR, %struct.GPR* %2138, i32 0, i32 11
  %2140 = getelementptr inbounds %struct.Reg, %struct.Reg* %2139, i32 0, i32 0
  %EDI.i1042 = bitcast %union.anon* %2140 to i32*
  %2141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2142 = getelementptr inbounds %struct.GPR, %struct.GPR* %2141, i32 0, i32 1
  %2143 = getelementptr inbounds %struct.Reg, %struct.Reg* %2142, i32 0, i32 0
  %RAX.i1043 = bitcast %union.anon* %2143 to i64*
  %2144 = load i64, i64* %RAX.i1043
  %2145 = load i32, i32* %EDI.i1042
  %2146 = zext i32 %2145 to i64
  %2147 = load i64, i64* %PC.i1041
  %2148 = add i64 %2147, 2
  store i64 %2148, i64* %PC.i1041
  %2149 = trunc i64 %2144 to i32
  %2150 = add i32 %2145, %2149
  %2151 = zext i32 %2150 to i64
  store i64 %2151, i64* %RAX.i1043, align 8
  %2152 = icmp ult i32 %2150, %2149
  %2153 = icmp ult i32 %2150, %2145
  %2154 = or i1 %2152, %2153
  %2155 = zext i1 %2154 to i8
  %2156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2155, i8* %2156, align 1
  %2157 = and i32 %2150, 255
  %2158 = call i32 @llvm.ctpop.i32(i32 %2157)
  %2159 = trunc i32 %2158 to i8
  %2160 = and i8 %2159, 1
  %2161 = xor i8 %2160, 1
  %2162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2161, i8* %2162, align 1
  %2163 = xor i64 %2146, %2144
  %2164 = trunc i64 %2163 to i32
  %2165 = xor i32 %2164, %2150
  %2166 = lshr i32 %2165, 4
  %2167 = trunc i32 %2166 to i8
  %2168 = and i8 %2167, 1
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2168, i8* %2169, align 1
  %2170 = icmp eq i32 %2150, 0
  %2171 = zext i1 %2170 to i8
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2171, i8* %2172, align 1
  %2173 = lshr i32 %2150, 31
  %2174 = trunc i32 %2173 to i8
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2174, i8* %2175, align 1
  %2176 = lshr i32 %2149, 31
  %2177 = lshr i32 %2145, 31
  %2178 = xor i32 %2173, %2176
  %2179 = xor i32 %2173, %2177
  %2180 = add i32 %2178, %2179
  %2181 = icmp eq i32 %2180, 2
  %2182 = zext i1 %2181 to i8
  %2183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2182, i8* %2183, align 1
  store %struct.Memory* %loadMem_423dcd, %struct.Memory** %MEMORY
  %loadMem_423dcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2185 = getelementptr inbounds %struct.GPR, %struct.GPR* %2184, i32 0, i32 33
  %2186 = getelementptr inbounds %struct.Reg, %struct.Reg* %2185, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %2186 to i64*
  %2187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2188 = getelementptr inbounds %struct.GPR, %struct.GPR* %2187, i32 0, i32 1
  %2189 = getelementptr inbounds %struct.Reg, %struct.Reg* %2188, i32 0, i32 0
  %EAX.i1040 = bitcast %union.anon* %2189 to i32*
  %2190 = load i32, i32* %EAX.i1040
  %2191 = zext i32 %2190 to i64
  %2192 = load i64, i64* %PC.i1039
  %2193 = add i64 %2192, 3
  store i64 %2193, i64* %PC.i1039
  %2194 = sub i32 %2190, 1
  %2195 = icmp ult i32 %2190, 1
  %2196 = zext i1 %2195 to i8
  %2197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2196, i8* %2197, align 1
  %2198 = and i32 %2194, 255
  %2199 = call i32 @llvm.ctpop.i32(i32 %2198)
  %2200 = trunc i32 %2199 to i8
  %2201 = and i8 %2200, 1
  %2202 = xor i8 %2201, 1
  %2203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2202, i8* %2203, align 1
  %2204 = xor i64 1, %2191
  %2205 = trunc i64 %2204 to i32
  %2206 = xor i32 %2205, %2194
  %2207 = lshr i32 %2206, 4
  %2208 = trunc i32 %2207 to i8
  %2209 = and i8 %2208, 1
  %2210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2209, i8* %2210, align 1
  %2211 = icmp eq i32 %2194, 0
  %2212 = zext i1 %2211 to i8
  %2213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2212, i8* %2213, align 1
  %2214 = lshr i32 %2194, 31
  %2215 = trunc i32 %2214 to i8
  %2216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2215, i8* %2216, align 1
  %2217 = lshr i32 %2190, 31
  %2218 = xor i32 %2214, %2217
  %2219 = add i32 %2218, %2217
  %2220 = icmp eq i32 %2219, 2
  %2221 = zext i1 %2220 to i8
  %2222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2221, i8* %2222, align 1
  store %struct.Memory* %loadMem_423dcf, %struct.Memory** %MEMORY
  %loadMem_423dd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2224 = getelementptr inbounds %struct.GPR, %struct.GPR* %2223, i32 0, i32 33
  %2225 = getelementptr inbounds %struct.Reg, %struct.Reg* %2224, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %2225 to i64*
  %2226 = load i64, i64* %PC.i1038
  %2227 = add i64 %2226, 117
  %2228 = load i64, i64* %PC.i1038
  %2229 = add i64 %2228, 6
  %2230 = load i64, i64* %PC.i1038
  %2231 = add i64 %2230, 6
  store i64 %2231, i64* %PC.i1038
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2233 = load i8, i8* %2232, align 1
  %2234 = icmp ne i8 %2233, 0
  %2235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2236 = load i8, i8* %2235, align 1
  %2237 = icmp ne i8 %2236, 0
  %2238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2239 = load i8, i8* %2238, align 1
  %2240 = icmp ne i8 %2239, 0
  %2241 = xor i1 %2237, %2240
  %2242 = or i1 %2234, %2241
  %2243 = zext i1 %2242 to i8
  store i8 %2243, i8* %BRANCH_TAKEN, align 1
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2245 = select i1 %2242, i64 %2227, i64 %2229
  store i64 %2245, i64* %2244, align 8
  store %struct.Memory* %loadMem_423dd2, %struct.Memory** %MEMORY
  %loadBr_423dd2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_423dd2 = icmp eq i8 %loadBr_423dd2, 1
  br i1 %cmpBr_423dd2, label %block_.L_423e47, label %block_423dd8

block_423dd8:                                     ; preds = %block_.L_423cad
  %loadMem_423dd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2247 = getelementptr inbounds %struct.GPR, %struct.GPR* %2246, i32 0, i32 33
  %2248 = getelementptr inbounds %struct.Reg, %struct.Reg* %2247, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %2248 to i64*
  %2249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2250 = getelementptr inbounds %struct.GPR, %struct.GPR* %2249, i32 0, i32 1
  %2251 = getelementptr inbounds %struct.Reg, %struct.Reg* %2250, i32 0, i32 0
  %RAX.i1036 = bitcast %union.anon* %2251 to i64*
  %2252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2253 = getelementptr inbounds %struct.GPR, %struct.GPR* %2252, i32 0, i32 15
  %2254 = getelementptr inbounds %struct.Reg, %struct.Reg* %2253, i32 0, i32 0
  %RBP.i1037 = bitcast %union.anon* %2254 to i64*
  %2255 = load i64, i64* %RBP.i1037
  %2256 = sub i64 %2255, 164
  %2257 = load i64, i64* %PC.i1035
  %2258 = add i64 %2257, 6
  store i64 %2258, i64* %PC.i1035
  %2259 = inttoptr i64 %2256 to i32*
  %2260 = load i32, i32* %2259
  %2261 = zext i32 %2260 to i64
  store i64 %2261, i64* %RAX.i1036, align 8
  store %struct.Memory* %loadMem_423dd8, %struct.Memory** %MEMORY
  %loadMem_423dde = load %struct.Memory*, %struct.Memory** %MEMORY
  %2262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2263 = getelementptr inbounds %struct.GPR, %struct.GPR* %2262, i32 0, i32 33
  %2264 = getelementptr inbounds %struct.Reg, %struct.Reg* %2263, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %2264 to i64*
  %2265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2266 = getelementptr inbounds %struct.GPR, %struct.GPR* %2265, i32 0, i32 5
  %2267 = getelementptr inbounds %struct.Reg, %struct.Reg* %2266, i32 0, i32 0
  %RCX.i1033 = bitcast %union.anon* %2267 to i64*
  %2268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2269 = getelementptr inbounds %struct.GPR, %struct.GPR* %2268, i32 0, i32 15
  %2270 = getelementptr inbounds %struct.Reg, %struct.Reg* %2269, i32 0, i32 0
  %RBP.i1034 = bitcast %union.anon* %2270 to i64*
  %2271 = load i64, i64* %RBP.i1034
  %2272 = sub i64 %2271, 80
  %2273 = load i64, i64* %PC.i1032
  %2274 = add i64 %2273, 4
  store i64 %2274, i64* %PC.i1032
  %2275 = inttoptr i64 %2272 to i64*
  %2276 = load i64, i64* %2275
  store i64 %2276, i64* %RCX.i1033, align 8
  store %struct.Memory* %loadMem_423dde, %struct.Memory** %MEMORY
  %loadMem_423de2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2278 = getelementptr inbounds %struct.GPR, %struct.GPR* %2277, i32 0, i32 33
  %2279 = getelementptr inbounds %struct.Reg, %struct.Reg* %2278, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %2279 to i64*
  %2280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2281 = getelementptr inbounds %struct.GPR, %struct.GPR* %2280, i32 0, i32 5
  %2282 = getelementptr inbounds %struct.Reg, %struct.Reg* %2281, i32 0, i32 0
  %RCX.i1030 = bitcast %union.anon* %2282 to i64*
  %2283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2284 = getelementptr inbounds %struct.GPR, %struct.GPR* %2283, i32 0, i32 7
  %2285 = getelementptr inbounds %struct.Reg, %struct.Reg* %2284, i32 0, i32 0
  %RDX.i1031 = bitcast %union.anon* %2285 to i64*
  %2286 = load i64, i64* %RCX.i1030
  %2287 = load i64, i64* %PC.i1029
  %2288 = add i64 %2287, 3
  store i64 %2288, i64* %PC.i1029
  %2289 = inttoptr i64 %2286 to i16*
  %2290 = load i16, i16* %2289
  %2291 = sext i16 %2290 to i64
  %2292 = and i64 %2291, 4294967295
  store i64 %2292, i64* %RDX.i1031, align 8
  store %struct.Memory* %loadMem_423de2, %struct.Memory** %MEMORY
  %loadMem_423de5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2294 = getelementptr inbounds %struct.GPR, %struct.GPR* %2293, i32 0, i32 33
  %2295 = getelementptr inbounds %struct.Reg, %struct.Reg* %2294, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %2295 to i64*
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2297 = getelementptr inbounds %struct.GPR, %struct.GPR* %2296, i32 0, i32 7
  %2298 = getelementptr inbounds %struct.Reg, %struct.Reg* %2297, i32 0, i32 0
  %EDX.i1027 = bitcast %union.anon* %2298 to i32*
  %2299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2300 = getelementptr inbounds %struct.GPR, %struct.GPR* %2299, i32 0, i32 1
  %2301 = getelementptr inbounds %struct.Reg, %struct.Reg* %2300, i32 0, i32 0
  %RAX.i1028 = bitcast %union.anon* %2301 to i64*
  %2302 = load i64, i64* %RAX.i1028
  %2303 = load i32, i32* %EDX.i1027
  %2304 = zext i32 %2303 to i64
  %2305 = load i64, i64* %PC.i1026
  %2306 = add i64 %2305, 2
  store i64 %2306, i64* %PC.i1026
  %2307 = trunc i64 %2302 to i32
  %2308 = add i32 %2303, %2307
  %2309 = zext i32 %2308 to i64
  store i64 %2309, i64* %RAX.i1028, align 8
  %2310 = icmp ult i32 %2308, %2307
  %2311 = icmp ult i32 %2308, %2303
  %2312 = or i1 %2310, %2311
  %2313 = zext i1 %2312 to i8
  %2314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2313, i8* %2314, align 1
  %2315 = and i32 %2308, 255
  %2316 = call i32 @llvm.ctpop.i32(i32 %2315)
  %2317 = trunc i32 %2316 to i8
  %2318 = and i8 %2317, 1
  %2319 = xor i8 %2318, 1
  %2320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2319, i8* %2320, align 1
  %2321 = xor i64 %2304, %2302
  %2322 = trunc i64 %2321 to i32
  %2323 = xor i32 %2322, %2308
  %2324 = lshr i32 %2323, 4
  %2325 = trunc i32 %2324 to i8
  %2326 = and i8 %2325, 1
  %2327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2326, i8* %2327, align 1
  %2328 = icmp eq i32 %2308, 0
  %2329 = zext i1 %2328 to i8
  %2330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2329, i8* %2330, align 1
  %2331 = lshr i32 %2308, 31
  %2332 = trunc i32 %2331 to i8
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2332, i8* %2333, align 1
  %2334 = lshr i32 %2307, 31
  %2335 = lshr i32 %2303, 31
  %2336 = xor i32 %2331, %2334
  %2337 = xor i32 %2331, %2335
  %2338 = add i32 %2336, %2337
  %2339 = icmp eq i32 %2338, 2
  %2340 = zext i1 %2339 to i8
  %2341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2340, i8* %2341, align 1
  store %struct.Memory* %loadMem_423de5, %struct.Memory** %MEMORY
  %loadMem_423de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2343 = getelementptr inbounds %struct.GPR, %struct.GPR* %2342, i32 0, i32 33
  %2344 = getelementptr inbounds %struct.Reg, %struct.Reg* %2343, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %2344 to i64*
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2346 = getelementptr inbounds %struct.GPR, %struct.GPR* %2345, i32 0, i32 7
  %2347 = getelementptr inbounds %struct.Reg, %struct.Reg* %2346, i32 0, i32 0
  %RDX.i1024 = bitcast %union.anon* %2347 to i64*
  %2348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2349 = getelementptr inbounds %struct.GPR, %struct.GPR* %2348, i32 0, i32 15
  %2350 = getelementptr inbounds %struct.Reg, %struct.Reg* %2349, i32 0, i32 0
  %RBP.i1025 = bitcast %union.anon* %2350 to i64*
  %2351 = load i64, i64* %RBP.i1025
  %2352 = sub i64 %2351, 172
  %2353 = load i64, i64* %PC.i1023
  %2354 = add i64 %2353, 6
  store i64 %2354, i64* %PC.i1023
  %2355 = inttoptr i64 %2352 to i32*
  %2356 = load i32, i32* %2355
  %2357 = zext i32 %2356 to i64
  store i64 %2357, i64* %RDX.i1024, align 8
  store %struct.Memory* %loadMem_423de7, %struct.Memory** %MEMORY
  %loadMem_423ded = load %struct.Memory*, %struct.Memory** %MEMORY
  %2358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2359 = getelementptr inbounds %struct.GPR, %struct.GPR* %2358, i32 0, i32 33
  %2360 = getelementptr inbounds %struct.Reg, %struct.Reg* %2359, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %2360 to i64*
  %2361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2362 = getelementptr inbounds %struct.GPR, %struct.GPR* %2361, i32 0, i32 7
  %2363 = getelementptr inbounds %struct.Reg, %struct.Reg* %2362, i32 0, i32 0
  %RDX.i1022 = bitcast %union.anon* %2363 to i64*
  %2364 = load i64, i64* %RDX.i1022
  %2365 = load i64, i64* %PC.i1021
  %2366 = add i64 %2365, 3
  store i64 %2366, i64* %PC.i1021
  %2367 = trunc i64 %2364 to i32
  %2368 = sub i32 %2367, 2
  %2369 = zext i32 %2368 to i64
  store i64 %2369, i64* %RDX.i1022, align 8
  %2370 = icmp ult i32 %2367, 2
  %2371 = zext i1 %2370 to i8
  %2372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2371, i8* %2372, align 1
  %2373 = and i32 %2368, 255
  %2374 = call i32 @llvm.ctpop.i32(i32 %2373)
  %2375 = trunc i32 %2374 to i8
  %2376 = and i8 %2375, 1
  %2377 = xor i8 %2376, 1
  %2378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2377, i8* %2378, align 1
  %2379 = xor i64 2, %2364
  %2380 = trunc i64 %2379 to i32
  %2381 = xor i32 %2380, %2368
  %2382 = lshr i32 %2381, 4
  %2383 = trunc i32 %2382 to i8
  %2384 = and i8 %2383, 1
  %2385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2384, i8* %2385, align 1
  %2386 = icmp eq i32 %2368, 0
  %2387 = zext i1 %2386 to i8
  %2388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2387, i8* %2388, align 1
  %2389 = lshr i32 %2368, 31
  %2390 = trunc i32 %2389 to i8
  %2391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2390, i8* %2391, align 1
  %2392 = lshr i32 %2367, 31
  %2393 = xor i32 %2389, %2392
  %2394 = add i32 %2393, %2392
  %2395 = icmp eq i32 %2394, 2
  %2396 = zext i1 %2395 to i8
  %2397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2396, i8* %2397, align 1
  store %struct.Memory* %loadMem_423ded, %struct.Memory** %MEMORY
  %loadMem_423df0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2399 = getelementptr inbounds %struct.GPR, %struct.GPR* %2398, i32 0, i32 33
  %2400 = getelementptr inbounds %struct.Reg, %struct.Reg* %2399, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %2400 to i64*
  %2401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2402 = getelementptr inbounds %struct.GPR, %struct.GPR* %2401, i32 0, i32 1
  %2403 = getelementptr inbounds %struct.Reg, %struct.Reg* %2402, i32 0, i32 0
  %EAX.i1019 = bitcast %union.anon* %2403 to i32*
  %2404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2405 = getelementptr inbounds %struct.GPR, %struct.GPR* %2404, i32 0, i32 7
  %2406 = getelementptr inbounds %struct.Reg, %struct.Reg* %2405, i32 0, i32 0
  %EDX.i1020 = bitcast %union.anon* %2406 to i32*
  %2407 = load i32, i32* %EAX.i1019
  %2408 = zext i32 %2407 to i64
  %2409 = load i32, i32* %EDX.i1020
  %2410 = zext i32 %2409 to i64
  %2411 = load i64, i64* %PC.i1018
  %2412 = add i64 %2411, 2
  store i64 %2412, i64* %PC.i1018
  %2413 = sub i32 %2407, %2409
  %2414 = icmp ult i32 %2407, %2409
  %2415 = zext i1 %2414 to i8
  %2416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2415, i8* %2416, align 1
  %2417 = and i32 %2413, 255
  %2418 = call i32 @llvm.ctpop.i32(i32 %2417)
  %2419 = trunc i32 %2418 to i8
  %2420 = and i8 %2419, 1
  %2421 = xor i8 %2420, 1
  %2422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2421, i8* %2422, align 1
  %2423 = xor i64 %2410, %2408
  %2424 = trunc i64 %2423 to i32
  %2425 = xor i32 %2424, %2413
  %2426 = lshr i32 %2425, 4
  %2427 = trunc i32 %2426 to i8
  %2428 = and i8 %2427, 1
  %2429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2428, i8* %2429, align 1
  %2430 = icmp eq i32 %2413, 0
  %2431 = zext i1 %2430 to i8
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2431, i8* %2432, align 1
  %2433 = lshr i32 %2413, 31
  %2434 = trunc i32 %2433 to i8
  %2435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2434, i8* %2435, align 1
  %2436 = lshr i32 %2407, 31
  %2437 = lshr i32 %2409, 31
  %2438 = xor i32 %2437, %2436
  %2439 = xor i32 %2433, %2436
  %2440 = add i32 %2439, %2438
  %2441 = icmp eq i32 %2440, 2
  %2442 = zext i1 %2441 to i8
  %2443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2442, i8* %2443, align 1
  store %struct.Memory* %loadMem_423df0, %struct.Memory** %MEMORY
  %loadMem_423df2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2445 = getelementptr inbounds %struct.GPR, %struct.GPR* %2444, i32 0, i32 33
  %2446 = getelementptr inbounds %struct.Reg, %struct.Reg* %2445, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %2446 to i64*
  %2447 = load i64, i64* %PC.i1017
  %2448 = add i64 %2447, 85
  %2449 = load i64, i64* %PC.i1017
  %2450 = add i64 %2449, 6
  %2451 = load i64, i64* %PC.i1017
  %2452 = add i64 %2451, 6
  store i64 %2452, i64* %PC.i1017
  %2453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2454 = load i8, i8* %2453, align 1
  %2455 = icmp ne i8 %2454, 0
  %2456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2457 = load i8, i8* %2456, align 1
  %2458 = icmp ne i8 %2457, 0
  %2459 = xor i1 %2455, %2458
  %2460 = xor i1 %2459, true
  %2461 = zext i1 %2460 to i8
  store i8 %2461, i8* %BRANCH_TAKEN, align 1
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2463 = select i1 %2459, i64 %2450, i64 %2448
  store i64 %2463, i64* %2462, align 8
  store %struct.Memory* %loadMem_423df2, %struct.Memory** %MEMORY
  %loadBr_423df2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_423df2 = icmp eq i8 %loadBr_423df2, 1
  br i1 %cmpBr_423df2, label %block_.L_423e47, label %block_423df8

block_423df8:                                     ; preds = %block_423dd8
  %loadMem_423df8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2465 = getelementptr inbounds %struct.GPR, %struct.GPR* %2464, i32 0, i32 33
  %2466 = getelementptr inbounds %struct.Reg, %struct.Reg* %2465, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %2466 to i64*
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2468 = getelementptr inbounds %struct.GPR, %struct.GPR* %2467, i32 0, i32 1
  %2469 = getelementptr inbounds %struct.Reg, %struct.Reg* %2468, i32 0, i32 0
  %RAX.i1015 = bitcast %union.anon* %2469 to i64*
  %2470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2471 = getelementptr inbounds %struct.GPR, %struct.GPR* %2470, i32 0, i32 15
  %2472 = getelementptr inbounds %struct.Reg, %struct.Reg* %2471, i32 0, i32 0
  %RBP.i1016 = bitcast %union.anon* %2472 to i64*
  %2473 = load i64, i64* %RBP.i1016
  %2474 = sub i64 %2473, 168
  %2475 = load i64, i64* %PC.i1014
  %2476 = add i64 %2475, 6
  store i64 %2476, i64* %PC.i1014
  %2477 = inttoptr i64 %2474 to i32*
  %2478 = load i32, i32* %2477
  %2479 = zext i32 %2478 to i64
  store i64 %2479, i64* %RAX.i1015, align 8
  store %struct.Memory* %loadMem_423df8, %struct.Memory** %MEMORY
  %loadMem_423dfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2481 = getelementptr inbounds %struct.GPR, %struct.GPR* %2480, i32 0, i32 33
  %2482 = getelementptr inbounds %struct.Reg, %struct.Reg* %2481, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %2482 to i64*
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2484 = getelementptr inbounds %struct.GPR, %struct.GPR* %2483, i32 0, i32 5
  %2485 = getelementptr inbounds %struct.Reg, %struct.Reg* %2484, i32 0, i32 0
  %RCX.i1012 = bitcast %union.anon* %2485 to i64*
  %2486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2487 = getelementptr inbounds %struct.GPR, %struct.GPR* %2486, i32 0, i32 15
  %2488 = getelementptr inbounds %struct.Reg, %struct.Reg* %2487, i32 0, i32 0
  %RBP.i1013 = bitcast %union.anon* %2488 to i64*
  %2489 = load i64, i64* %RBP.i1013
  %2490 = sub i64 %2489, 88
  %2491 = load i64, i64* %PC.i1011
  %2492 = add i64 %2491, 4
  store i64 %2492, i64* %PC.i1011
  %2493 = inttoptr i64 %2490 to i64*
  %2494 = load i64, i64* %2493
  store i64 %2494, i64* %RCX.i1012, align 8
  store %struct.Memory* %loadMem_423dfe, %struct.Memory** %MEMORY
  %loadMem_423e02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2496 = getelementptr inbounds %struct.GPR, %struct.GPR* %2495, i32 0, i32 33
  %2497 = getelementptr inbounds %struct.Reg, %struct.Reg* %2496, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %2497 to i64*
  %2498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2499 = getelementptr inbounds %struct.GPR, %struct.GPR* %2498, i32 0, i32 5
  %2500 = getelementptr inbounds %struct.Reg, %struct.Reg* %2499, i32 0, i32 0
  %RCX.i1009 = bitcast %union.anon* %2500 to i64*
  %2501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2502 = getelementptr inbounds %struct.GPR, %struct.GPR* %2501, i32 0, i32 7
  %2503 = getelementptr inbounds %struct.Reg, %struct.Reg* %2502, i32 0, i32 0
  %RDX.i1010 = bitcast %union.anon* %2503 to i64*
  %2504 = load i64, i64* %RCX.i1009
  %2505 = load i64, i64* %PC.i1008
  %2506 = add i64 %2505, 3
  store i64 %2506, i64* %PC.i1008
  %2507 = inttoptr i64 %2504 to i16*
  %2508 = load i16, i16* %2507
  %2509 = sext i16 %2508 to i64
  %2510 = and i64 %2509, 4294967295
  store i64 %2510, i64* %RDX.i1010, align 8
  store %struct.Memory* %loadMem_423e02, %struct.Memory** %MEMORY
  %loadMem_423e05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2512 = getelementptr inbounds %struct.GPR, %struct.GPR* %2511, i32 0, i32 33
  %2513 = getelementptr inbounds %struct.Reg, %struct.Reg* %2512, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %2513 to i64*
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2515 = getelementptr inbounds %struct.GPR, %struct.GPR* %2514, i32 0, i32 7
  %2516 = getelementptr inbounds %struct.Reg, %struct.Reg* %2515, i32 0, i32 0
  %EDX.i1006 = bitcast %union.anon* %2516 to i32*
  %2517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2518 = getelementptr inbounds %struct.GPR, %struct.GPR* %2517, i32 0, i32 1
  %2519 = getelementptr inbounds %struct.Reg, %struct.Reg* %2518, i32 0, i32 0
  %RAX.i1007 = bitcast %union.anon* %2519 to i64*
  %2520 = load i64, i64* %RAX.i1007
  %2521 = load i32, i32* %EDX.i1006
  %2522 = zext i32 %2521 to i64
  %2523 = load i64, i64* %PC.i1005
  %2524 = add i64 %2523, 2
  store i64 %2524, i64* %PC.i1005
  %2525 = trunc i64 %2520 to i32
  %2526 = add i32 %2521, %2525
  %2527 = zext i32 %2526 to i64
  store i64 %2527, i64* %RAX.i1007, align 8
  %2528 = icmp ult i32 %2526, %2525
  %2529 = icmp ult i32 %2526, %2521
  %2530 = or i1 %2528, %2529
  %2531 = zext i1 %2530 to i8
  %2532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2531, i8* %2532, align 1
  %2533 = and i32 %2526, 255
  %2534 = call i32 @llvm.ctpop.i32(i32 %2533)
  %2535 = trunc i32 %2534 to i8
  %2536 = and i8 %2535, 1
  %2537 = xor i8 %2536, 1
  %2538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2537, i8* %2538, align 1
  %2539 = xor i64 %2522, %2520
  %2540 = trunc i64 %2539 to i32
  %2541 = xor i32 %2540, %2526
  %2542 = lshr i32 %2541, 4
  %2543 = trunc i32 %2542 to i8
  %2544 = and i8 %2543, 1
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2544, i8* %2545, align 1
  %2546 = icmp eq i32 %2526, 0
  %2547 = zext i1 %2546 to i8
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2547, i8* %2548, align 1
  %2549 = lshr i32 %2526, 31
  %2550 = trunc i32 %2549 to i8
  %2551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2550, i8* %2551, align 1
  %2552 = lshr i32 %2525, 31
  %2553 = lshr i32 %2521, 31
  %2554 = xor i32 %2549, %2552
  %2555 = xor i32 %2549, %2553
  %2556 = add i32 %2554, %2555
  %2557 = icmp eq i32 %2556, 2
  %2558 = zext i1 %2557 to i8
  %2559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2558, i8* %2559, align 1
  store %struct.Memory* %loadMem_423e05, %struct.Memory** %MEMORY
  %loadMem_423e07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2561 = getelementptr inbounds %struct.GPR, %struct.GPR* %2560, i32 0, i32 33
  %2562 = getelementptr inbounds %struct.Reg, %struct.Reg* %2561, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %2562 to i64*
  %2563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2564 = getelementptr inbounds %struct.GPR, %struct.GPR* %2563, i32 0, i32 1
  %2565 = getelementptr inbounds %struct.Reg, %struct.Reg* %2564, i32 0, i32 0
  %EAX.i1004 = bitcast %union.anon* %2565 to i32*
  %2566 = load i32, i32* %EAX.i1004
  %2567 = zext i32 %2566 to i64
  %2568 = load i64, i64* %PC.i1003
  %2569 = add i64 %2568, 3
  store i64 %2569, i64* %PC.i1003
  %2570 = sub i32 %2566, 1
  %2571 = icmp ult i32 %2566, 1
  %2572 = zext i1 %2571 to i8
  %2573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2572, i8* %2573, align 1
  %2574 = and i32 %2570, 255
  %2575 = call i32 @llvm.ctpop.i32(i32 %2574)
  %2576 = trunc i32 %2575 to i8
  %2577 = and i8 %2576, 1
  %2578 = xor i8 %2577, 1
  %2579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2578, i8* %2579, align 1
  %2580 = xor i64 1, %2567
  %2581 = trunc i64 %2580 to i32
  %2582 = xor i32 %2581, %2570
  %2583 = lshr i32 %2582, 4
  %2584 = trunc i32 %2583 to i8
  %2585 = and i8 %2584, 1
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2585, i8* %2586, align 1
  %2587 = icmp eq i32 %2570, 0
  %2588 = zext i1 %2587 to i8
  %2589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2588, i8* %2589, align 1
  %2590 = lshr i32 %2570, 31
  %2591 = trunc i32 %2590 to i8
  %2592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2591, i8* %2592, align 1
  %2593 = lshr i32 %2566, 31
  %2594 = xor i32 %2590, %2593
  %2595 = add i32 %2594, %2593
  %2596 = icmp eq i32 %2595, 2
  %2597 = zext i1 %2596 to i8
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2597, i8* %2598, align 1
  store %struct.Memory* %loadMem_423e07, %struct.Memory** %MEMORY
  %loadMem_423e0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2600 = getelementptr inbounds %struct.GPR, %struct.GPR* %2599, i32 0, i32 33
  %2601 = getelementptr inbounds %struct.Reg, %struct.Reg* %2600, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %2601 to i64*
  %2602 = load i64, i64* %PC.i1002
  %2603 = add i64 %2602, 61
  %2604 = load i64, i64* %PC.i1002
  %2605 = add i64 %2604, 6
  %2606 = load i64, i64* %PC.i1002
  %2607 = add i64 %2606, 6
  store i64 %2607, i64* %PC.i1002
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2609 = load i8, i8* %2608, align 1
  %2610 = icmp ne i8 %2609, 0
  %2611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2612 = load i8, i8* %2611, align 1
  %2613 = icmp ne i8 %2612, 0
  %2614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2615 = load i8, i8* %2614, align 1
  %2616 = icmp ne i8 %2615, 0
  %2617 = xor i1 %2613, %2616
  %2618 = or i1 %2610, %2617
  %2619 = zext i1 %2618 to i8
  store i8 %2619, i8* %BRANCH_TAKEN, align 1
  %2620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2621 = select i1 %2618, i64 %2603, i64 %2605
  store i64 %2621, i64* %2620, align 8
  store %struct.Memory* %loadMem_423e0a, %struct.Memory** %MEMORY
  %loadBr_423e0a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_423e0a = icmp eq i8 %loadBr_423e0a, 1
  br i1 %cmpBr_423e0a, label %block_.L_423e47, label %block_423e10

block_423e10:                                     ; preds = %block_423df8
  %loadMem_423e10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2623 = getelementptr inbounds %struct.GPR, %struct.GPR* %2622, i32 0, i32 33
  %2624 = getelementptr inbounds %struct.Reg, %struct.Reg* %2623, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %2624 to i64*
  %2625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2626 = getelementptr inbounds %struct.GPR, %struct.GPR* %2625, i32 0, i32 1
  %2627 = getelementptr inbounds %struct.Reg, %struct.Reg* %2626, i32 0, i32 0
  %RAX.i1000 = bitcast %union.anon* %2627 to i64*
  %2628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2629 = getelementptr inbounds %struct.GPR, %struct.GPR* %2628, i32 0, i32 15
  %2630 = getelementptr inbounds %struct.Reg, %struct.Reg* %2629, i32 0, i32 0
  %RBP.i1001 = bitcast %union.anon* %2630 to i64*
  %2631 = load i64, i64* %RBP.i1001
  %2632 = sub i64 %2631, 168
  %2633 = load i64, i64* %PC.i999
  %2634 = add i64 %2633, 6
  store i64 %2634, i64* %PC.i999
  %2635 = inttoptr i64 %2632 to i32*
  %2636 = load i32, i32* %2635
  %2637 = zext i32 %2636 to i64
  store i64 %2637, i64* %RAX.i1000, align 8
  store %struct.Memory* %loadMem_423e10, %struct.Memory** %MEMORY
  %loadMem_423e16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2639 = getelementptr inbounds %struct.GPR, %struct.GPR* %2638, i32 0, i32 33
  %2640 = getelementptr inbounds %struct.Reg, %struct.Reg* %2639, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %2640 to i64*
  %2641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2642 = getelementptr inbounds %struct.GPR, %struct.GPR* %2641, i32 0, i32 5
  %2643 = getelementptr inbounds %struct.Reg, %struct.Reg* %2642, i32 0, i32 0
  %RCX.i997 = bitcast %union.anon* %2643 to i64*
  %2644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2645 = getelementptr inbounds %struct.GPR, %struct.GPR* %2644, i32 0, i32 15
  %2646 = getelementptr inbounds %struct.Reg, %struct.Reg* %2645, i32 0, i32 0
  %RBP.i998 = bitcast %union.anon* %2646 to i64*
  %2647 = load i64, i64* %RBP.i998
  %2648 = sub i64 %2647, 88
  %2649 = load i64, i64* %PC.i996
  %2650 = add i64 %2649, 4
  store i64 %2650, i64* %PC.i996
  %2651 = inttoptr i64 %2648 to i64*
  %2652 = load i64, i64* %2651
  store i64 %2652, i64* %RCX.i997, align 8
  store %struct.Memory* %loadMem_423e16, %struct.Memory** %MEMORY
  %loadMem_423e1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2654 = getelementptr inbounds %struct.GPR, %struct.GPR* %2653, i32 0, i32 33
  %2655 = getelementptr inbounds %struct.Reg, %struct.Reg* %2654, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %2655 to i64*
  %2656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2657 = getelementptr inbounds %struct.GPR, %struct.GPR* %2656, i32 0, i32 5
  %2658 = getelementptr inbounds %struct.Reg, %struct.Reg* %2657, i32 0, i32 0
  %RCX.i994 = bitcast %union.anon* %2658 to i64*
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2660 = getelementptr inbounds %struct.GPR, %struct.GPR* %2659, i32 0, i32 7
  %2661 = getelementptr inbounds %struct.Reg, %struct.Reg* %2660, i32 0, i32 0
  %RDX.i995 = bitcast %union.anon* %2661 to i64*
  %2662 = load i64, i64* %RCX.i994
  %2663 = load i64, i64* %PC.i993
  %2664 = add i64 %2663, 3
  store i64 %2664, i64* %PC.i993
  %2665 = inttoptr i64 %2662 to i16*
  %2666 = load i16, i16* %2665
  %2667 = sext i16 %2666 to i64
  %2668 = and i64 %2667, 4294967295
  store i64 %2668, i64* %RDX.i995, align 8
  store %struct.Memory* %loadMem_423e1a, %struct.Memory** %MEMORY
  %loadMem_423e1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2670 = getelementptr inbounds %struct.GPR, %struct.GPR* %2669, i32 0, i32 33
  %2671 = getelementptr inbounds %struct.Reg, %struct.Reg* %2670, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %2671 to i64*
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2673 = getelementptr inbounds %struct.GPR, %struct.GPR* %2672, i32 0, i32 7
  %2674 = getelementptr inbounds %struct.Reg, %struct.Reg* %2673, i32 0, i32 0
  %EDX.i991 = bitcast %union.anon* %2674 to i32*
  %2675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2676 = getelementptr inbounds %struct.GPR, %struct.GPR* %2675, i32 0, i32 1
  %2677 = getelementptr inbounds %struct.Reg, %struct.Reg* %2676, i32 0, i32 0
  %RAX.i992 = bitcast %union.anon* %2677 to i64*
  %2678 = load i64, i64* %RAX.i992
  %2679 = load i32, i32* %EDX.i991
  %2680 = zext i32 %2679 to i64
  %2681 = load i64, i64* %PC.i990
  %2682 = add i64 %2681, 2
  store i64 %2682, i64* %PC.i990
  %2683 = trunc i64 %2678 to i32
  %2684 = add i32 %2679, %2683
  %2685 = zext i32 %2684 to i64
  store i64 %2685, i64* %RAX.i992, align 8
  %2686 = icmp ult i32 %2684, %2683
  %2687 = icmp ult i32 %2684, %2679
  %2688 = or i1 %2686, %2687
  %2689 = zext i1 %2688 to i8
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2689, i8* %2690, align 1
  %2691 = and i32 %2684, 255
  %2692 = call i32 @llvm.ctpop.i32(i32 %2691)
  %2693 = trunc i32 %2692 to i8
  %2694 = and i8 %2693, 1
  %2695 = xor i8 %2694, 1
  %2696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2695, i8* %2696, align 1
  %2697 = xor i64 %2680, %2678
  %2698 = trunc i64 %2697 to i32
  %2699 = xor i32 %2698, %2684
  %2700 = lshr i32 %2699, 4
  %2701 = trunc i32 %2700 to i8
  %2702 = and i8 %2701, 1
  %2703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2702, i8* %2703, align 1
  %2704 = icmp eq i32 %2684, 0
  %2705 = zext i1 %2704 to i8
  %2706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2705, i8* %2706, align 1
  %2707 = lshr i32 %2684, 31
  %2708 = trunc i32 %2707 to i8
  %2709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2708, i8* %2709, align 1
  %2710 = lshr i32 %2683, 31
  %2711 = lshr i32 %2679, 31
  %2712 = xor i32 %2707, %2710
  %2713 = xor i32 %2707, %2711
  %2714 = add i32 %2712, %2713
  %2715 = icmp eq i32 %2714, 2
  %2716 = zext i1 %2715 to i8
  %2717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2716, i8* %2717, align 1
  store %struct.Memory* %loadMem_423e1d, %struct.Memory** %MEMORY
  %loadMem_423e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2719 = getelementptr inbounds %struct.GPR, %struct.GPR* %2718, i32 0, i32 33
  %2720 = getelementptr inbounds %struct.Reg, %struct.Reg* %2719, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %2720 to i64*
  %2721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2722 = getelementptr inbounds %struct.GPR, %struct.GPR* %2721, i32 0, i32 7
  %2723 = getelementptr inbounds %struct.Reg, %struct.Reg* %2722, i32 0, i32 0
  %RDX.i988 = bitcast %union.anon* %2723 to i64*
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2725 = getelementptr inbounds %struct.GPR, %struct.GPR* %2724, i32 0, i32 15
  %2726 = getelementptr inbounds %struct.Reg, %struct.Reg* %2725, i32 0, i32 0
  %RBP.i989 = bitcast %union.anon* %2726 to i64*
  %2727 = load i64, i64* %RBP.i989
  %2728 = sub i64 %2727, 176
  %2729 = load i64, i64* %PC.i987
  %2730 = add i64 %2729, 6
  store i64 %2730, i64* %PC.i987
  %2731 = inttoptr i64 %2728 to i32*
  %2732 = load i32, i32* %2731
  %2733 = zext i32 %2732 to i64
  store i64 %2733, i64* %RDX.i988, align 8
  store %struct.Memory* %loadMem_423e1f, %struct.Memory** %MEMORY
  %loadMem_423e25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2735 = getelementptr inbounds %struct.GPR, %struct.GPR* %2734, i32 0, i32 33
  %2736 = getelementptr inbounds %struct.Reg, %struct.Reg* %2735, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %2736 to i64*
  %2737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2738 = getelementptr inbounds %struct.GPR, %struct.GPR* %2737, i32 0, i32 7
  %2739 = getelementptr inbounds %struct.Reg, %struct.Reg* %2738, i32 0, i32 0
  %RDX.i986 = bitcast %union.anon* %2739 to i64*
  %2740 = load i64, i64* %RDX.i986
  %2741 = load i64, i64* %PC.i985
  %2742 = add i64 %2741, 3
  store i64 %2742, i64* %PC.i985
  %2743 = trunc i64 %2740 to i32
  %2744 = sub i32 %2743, 2
  %2745 = zext i32 %2744 to i64
  store i64 %2745, i64* %RDX.i986, align 8
  %2746 = icmp ult i32 %2743, 2
  %2747 = zext i1 %2746 to i8
  %2748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2747, i8* %2748, align 1
  %2749 = and i32 %2744, 255
  %2750 = call i32 @llvm.ctpop.i32(i32 %2749)
  %2751 = trunc i32 %2750 to i8
  %2752 = and i8 %2751, 1
  %2753 = xor i8 %2752, 1
  %2754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2753, i8* %2754, align 1
  %2755 = xor i64 2, %2740
  %2756 = trunc i64 %2755 to i32
  %2757 = xor i32 %2756, %2744
  %2758 = lshr i32 %2757, 4
  %2759 = trunc i32 %2758 to i8
  %2760 = and i8 %2759, 1
  %2761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2760, i8* %2761, align 1
  %2762 = icmp eq i32 %2744, 0
  %2763 = zext i1 %2762 to i8
  %2764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2763, i8* %2764, align 1
  %2765 = lshr i32 %2744, 31
  %2766 = trunc i32 %2765 to i8
  %2767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2766, i8* %2767, align 1
  %2768 = lshr i32 %2743, 31
  %2769 = xor i32 %2765, %2768
  %2770 = add i32 %2769, %2768
  %2771 = icmp eq i32 %2770, 2
  %2772 = zext i1 %2771 to i8
  %2773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2772, i8* %2773, align 1
  store %struct.Memory* %loadMem_423e25, %struct.Memory** %MEMORY
  %loadMem_423e28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2775 = getelementptr inbounds %struct.GPR, %struct.GPR* %2774, i32 0, i32 33
  %2776 = getelementptr inbounds %struct.Reg, %struct.Reg* %2775, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %2776 to i64*
  %2777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2778 = getelementptr inbounds %struct.GPR, %struct.GPR* %2777, i32 0, i32 1
  %2779 = getelementptr inbounds %struct.Reg, %struct.Reg* %2778, i32 0, i32 0
  %EAX.i983 = bitcast %union.anon* %2779 to i32*
  %2780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2781 = getelementptr inbounds %struct.GPR, %struct.GPR* %2780, i32 0, i32 7
  %2782 = getelementptr inbounds %struct.Reg, %struct.Reg* %2781, i32 0, i32 0
  %EDX.i984 = bitcast %union.anon* %2782 to i32*
  %2783 = load i32, i32* %EAX.i983
  %2784 = zext i32 %2783 to i64
  %2785 = load i32, i32* %EDX.i984
  %2786 = zext i32 %2785 to i64
  %2787 = load i64, i64* %PC.i982
  %2788 = add i64 %2787, 2
  store i64 %2788, i64* %PC.i982
  %2789 = sub i32 %2783, %2785
  %2790 = icmp ult i32 %2783, %2785
  %2791 = zext i1 %2790 to i8
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2791, i8* %2792, align 1
  %2793 = and i32 %2789, 255
  %2794 = call i32 @llvm.ctpop.i32(i32 %2793)
  %2795 = trunc i32 %2794 to i8
  %2796 = and i8 %2795, 1
  %2797 = xor i8 %2796, 1
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2797, i8* %2798, align 1
  %2799 = xor i64 %2786, %2784
  %2800 = trunc i64 %2799 to i32
  %2801 = xor i32 %2800, %2789
  %2802 = lshr i32 %2801, 4
  %2803 = trunc i32 %2802 to i8
  %2804 = and i8 %2803, 1
  %2805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2804, i8* %2805, align 1
  %2806 = icmp eq i32 %2789, 0
  %2807 = zext i1 %2806 to i8
  %2808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2807, i8* %2808, align 1
  %2809 = lshr i32 %2789, 31
  %2810 = trunc i32 %2809 to i8
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2810, i8* %2811, align 1
  %2812 = lshr i32 %2783, 31
  %2813 = lshr i32 %2785, 31
  %2814 = xor i32 %2813, %2812
  %2815 = xor i32 %2809, %2812
  %2816 = add i32 %2815, %2814
  %2817 = icmp eq i32 %2816, 2
  %2818 = zext i1 %2817 to i8
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2818, i8* %2819, align 1
  store %struct.Memory* %loadMem_423e28, %struct.Memory** %MEMORY
  %loadMem_423e2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2821 = getelementptr inbounds %struct.GPR, %struct.GPR* %2820, i32 0, i32 33
  %2822 = getelementptr inbounds %struct.Reg, %struct.Reg* %2821, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %2822 to i64*
  %2823 = load i64, i64* %PC.i981
  %2824 = add i64 %2823, 29
  %2825 = load i64, i64* %PC.i981
  %2826 = add i64 %2825, 6
  %2827 = load i64, i64* %PC.i981
  %2828 = add i64 %2827, 6
  store i64 %2828, i64* %PC.i981
  %2829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2830 = load i8, i8* %2829, align 1
  %2831 = icmp ne i8 %2830, 0
  %2832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2833 = load i8, i8* %2832, align 1
  %2834 = icmp ne i8 %2833, 0
  %2835 = xor i1 %2831, %2834
  %2836 = xor i1 %2835, true
  %2837 = zext i1 %2836 to i8
  store i8 %2837, i8* %BRANCH_TAKEN, align 1
  %2838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2839 = select i1 %2835, i64 %2826, i64 %2824
  store i64 %2839, i64* %2838, align 8
  store %struct.Memory* %loadMem_423e2a, %struct.Memory** %MEMORY
  %loadBr_423e2a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_423e2a = icmp eq i8 %loadBr_423e2a, 1
  br i1 %cmpBr_423e2a, label %block_.L_423e47, label %block_423e30

block_423e30:                                     ; preds = %block_423e10
  %loadMem_423e30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2841 = getelementptr inbounds %struct.GPR, %struct.GPR* %2840, i32 0, i32 33
  %2842 = getelementptr inbounds %struct.Reg, %struct.Reg* %2841, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %2842 to i64*
  %2843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2844 = getelementptr inbounds %struct.GPR, %struct.GPR* %2843, i32 0, i32 1
  %2845 = getelementptr inbounds %struct.Reg, %struct.Reg* %2844, i32 0, i32 0
  %RAX.i980 = bitcast %union.anon* %2845 to i64*
  %2846 = load i64, i64* %PC.i979
  %2847 = add i64 %2846, 10
  store i64 %2847, i64* %PC.i979
  store i64 ptrtoint (%G__0x49e910_type* @G__0x49e910 to i64), i64* %RAX.i980, align 8
  store %struct.Memory* %loadMem_423e30, %struct.Memory** %MEMORY
  %loadMem_423e3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2849 = getelementptr inbounds %struct.GPR, %struct.GPR* %2848, i32 0, i32 33
  %2850 = getelementptr inbounds %struct.Reg, %struct.Reg* %2849, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %2850 to i64*
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2852 = getelementptr inbounds %struct.GPR, %struct.GPR* %2851, i32 0, i32 1
  %2853 = getelementptr inbounds %struct.Reg, %struct.Reg* %2852, i32 0, i32 0
  %RAX.i978 = bitcast %union.anon* %2853 to i64*
  %2854 = load i64, i64* %RAX.i978
  %2855 = load i64, i64* %PC.i977
  %2856 = add i64 %2855, 8
  store i64 %2856, i64* %PC.i977
  store i64 %2854, i64* bitcast (%G_0x6cbf58_type* @G_0x6cbf58 to i64*)
  store %struct.Memory* %loadMem_423e3a, %struct.Memory** %MEMORY
  %loadMem_423e42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2858 = getelementptr inbounds %struct.GPR, %struct.GPR* %2857, i32 0, i32 33
  %2859 = getelementptr inbounds %struct.Reg, %struct.Reg* %2858, i32 0, i32 0
  %PC.i976 = bitcast %union.anon* %2859 to i64*
  %2860 = load i64, i64* %PC.i976
  %2861 = add i64 %2860, 23
  %2862 = load i64, i64* %PC.i976
  %2863 = add i64 %2862, 5
  store i64 %2863, i64* %PC.i976
  %2864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2861, i64* %2864, align 8
  store %struct.Memory* %loadMem_423e42, %struct.Memory** %MEMORY
  br label %block_.L_423e59

block_.L_423e47:                                  ; preds = %block_423e10, %block_423df8, %block_423dd8, %block_.L_423cad
  %loadMem_423e47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2866 = getelementptr inbounds %struct.GPR, %struct.GPR* %2865, i32 0, i32 33
  %2867 = getelementptr inbounds %struct.Reg, %struct.Reg* %2866, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %2867 to i64*
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2869 = getelementptr inbounds %struct.GPR, %struct.GPR* %2868, i32 0, i32 1
  %2870 = getelementptr inbounds %struct.Reg, %struct.Reg* %2869, i32 0, i32 0
  %RAX.i975 = bitcast %union.anon* %2870 to i64*
  %2871 = load i64, i64* %PC.i974
  %2872 = add i64 %2871, 10
  store i64 %2872, i64* %PC.i974
  store i64 ptrtoint (%G__0x49e710_type* @G__0x49e710 to i64), i64* %RAX.i975, align 8
  store %struct.Memory* %loadMem_423e47, %struct.Memory** %MEMORY
  %loadMem_423e51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2874 = getelementptr inbounds %struct.GPR, %struct.GPR* %2873, i32 0, i32 33
  %2875 = getelementptr inbounds %struct.Reg, %struct.Reg* %2874, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %2875 to i64*
  %2876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2877 = getelementptr inbounds %struct.GPR, %struct.GPR* %2876, i32 0, i32 1
  %2878 = getelementptr inbounds %struct.Reg, %struct.Reg* %2877, i32 0, i32 0
  %RAX.i973 = bitcast %union.anon* %2878 to i64*
  %2879 = load i64, i64* %RAX.i973
  %2880 = load i64, i64* %PC.i972
  %2881 = add i64 %2880, 8
  store i64 %2881, i64* %PC.i972
  store i64 %2879, i64* bitcast (%G_0x6cbf58_type* @G_0x6cbf58 to i64*)
  store %struct.Memory* %loadMem_423e51, %struct.Memory** %MEMORY
  br label %block_.L_423e59

block_.L_423e59:                                  ; preds = %block_.L_423e47, %block_423e30
  %loadMem_423e59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2883 = getelementptr inbounds %struct.GPR, %struct.GPR* %2882, i32 0, i32 33
  %2884 = getelementptr inbounds %struct.Reg, %struct.Reg* %2883, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %2884 to i64*
  %2885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2886 = getelementptr inbounds %struct.GPR, %struct.GPR* %2885, i32 0, i32 9
  %2887 = getelementptr inbounds %struct.Reg, %struct.Reg* %2886, i32 0, i32 0
  %ESI.i970 = bitcast %union.anon* %2887 to i32*
  %2888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2889 = getelementptr inbounds %struct.GPR, %struct.GPR* %2888, i32 0, i32 9
  %2890 = getelementptr inbounds %struct.Reg, %struct.Reg* %2889, i32 0, i32 0
  %RSI.i971 = bitcast %union.anon* %2890 to i64*
  %2891 = load i64, i64* %RSI.i971
  %2892 = load i32, i32* %ESI.i970
  %2893 = zext i32 %2892 to i64
  %2894 = load i64, i64* %PC.i969
  %2895 = add i64 %2894, 2
  store i64 %2895, i64* %PC.i969
  %2896 = xor i64 %2893, %2891
  %2897 = trunc i64 %2896 to i32
  %2898 = and i64 %2896, 4294967295
  store i64 %2898, i64* %RSI.i971, align 8
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2899, align 1
  %2900 = and i32 %2897, 255
  %2901 = call i32 @llvm.ctpop.i32(i32 %2900)
  %2902 = trunc i32 %2901 to i8
  %2903 = and i8 %2902, 1
  %2904 = xor i8 %2903, 1
  %2905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2904, i8* %2905, align 1
  %2906 = icmp eq i32 %2897, 0
  %2907 = zext i1 %2906 to i8
  %2908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2907, i8* %2908, align 1
  %2909 = lshr i32 %2897, 31
  %2910 = trunc i32 %2909 to i8
  %2911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2910, i8* %2911, align 1
  %2912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2912, align 1
  %2913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2913, align 1
  store %struct.Memory* %loadMem_423e59, %struct.Memory** %MEMORY
  %loadMem_423e5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2915 = getelementptr inbounds %struct.GPR, %struct.GPR* %2914, i32 0, i32 33
  %2916 = getelementptr inbounds %struct.Reg, %struct.Reg* %2915, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %2916 to i64*
  %2917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2918 = getelementptr inbounds %struct.GPR, %struct.GPR* %2917, i32 0, i32 1
  %2919 = getelementptr inbounds %struct.Reg, %struct.Reg* %2918, i32 0, i32 0
  %RAX.i968 = bitcast %union.anon* %2919 to i64*
  %2920 = load i64, i64* %PC.i967
  %2921 = add i64 %2920, 5
  store i64 %2921, i64* %PC.i967
  store i64 4, i64* %RAX.i968, align 8
  store %struct.Memory* %loadMem_423e5b, %struct.Memory** %MEMORY
  %loadMem_423e60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2923 = getelementptr inbounds %struct.GPR, %struct.GPR* %2922, i32 0, i32 33
  %2924 = getelementptr inbounds %struct.Reg, %struct.Reg* %2923, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %2924 to i64*
  %2925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2926 = getelementptr inbounds %struct.GPR, %struct.GPR* %2925, i32 0, i32 15
  %2927 = getelementptr inbounds %struct.Reg, %struct.Reg* %2926, i32 0, i32 0
  %RBP.i966 = bitcast %union.anon* %2927 to i64*
  %2928 = load i64, i64* %RBP.i966
  %2929 = sub i64 %2928, 180
  %2930 = load i64, i64* %PC.i965
  %2931 = add i64 %2930, 10
  store i64 %2931, i64* %PC.i965
  %2932 = inttoptr i64 %2929 to i32*
  store i32 3, i32* %2932
  store %struct.Memory* %loadMem_423e60, %struct.Memory** %MEMORY
  %loadMem_423e6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2934 = getelementptr inbounds %struct.GPR, %struct.GPR* %2933, i32 0, i32 33
  %2935 = getelementptr inbounds %struct.Reg, %struct.Reg* %2934, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %2935 to i64*
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2937 = getelementptr inbounds %struct.GPR, %struct.GPR* %2936, i32 0, i32 5
  %2938 = getelementptr inbounds %struct.Reg, %struct.Reg* %2937, i32 0, i32 0
  %RCX.i963 = bitcast %union.anon* %2938 to i64*
  %2939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2940 = getelementptr inbounds %struct.GPR, %struct.GPR* %2939, i32 0, i32 15
  %2941 = getelementptr inbounds %struct.Reg, %struct.Reg* %2940, i32 0, i32 0
  %RBP.i964 = bitcast %union.anon* %2941 to i64*
  %2942 = load i64, i64* %RBP.i964
  %2943 = sub i64 %2942, 70
  %2944 = load i64, i64* %PC.i962
  %2945 = add i64 %2944, 4
  store i64 %2945, i64* %PC.i962
  %2946 = inttoptr i64 %2943 to i16*
  %2947 = load i16, i16* %2946
  %2948 = sext i16 %2947 to i64
  %2949 = and i64 %2948, 4294967295
  store i64 %2949, i64* %RCX.i963, align 8
  store %struct.Memory* %loadMem_423e6a, %struct.Memory** %MEMORY
  %loadMem_423e6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2951 = getelementptr inbounds %struct.GPR, %struct.GPR* %2950, i32 0, i32 33
  %2952 = getelementptr inbounds %struct.Reg, %struct.Reg* %2951, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %2952 to i64*
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2954 = getelementptr inbounds %struct.GPR, %struct.GPR* %2953, i32 0, i32 7
  %2955 = getelementptr inbounds %struct.Reg, %struct.Reg* %2954, i32 0, i32 0
  %RDX.i960 = bitcast %union.anon* %2955 to i64*
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2957 = getelementptr inbounds %struct.GPR, %struct.GPR* %2956, i32 0, i32 15
  %2958 = getelementptr inbounds %struct.Reg, %struct.Reg* %2957, i32 0, i32 0
  %RBP.i961 = bitcast %union.anon* %2958 to i64*
  %2959 = load i64, i64* %RBP.i961
  %2960 = sub i64 %2959, 80
  %2961 = load i64, i64* %PC.i959
  %2962 = add i64 %2961, 4
  store i64 %2962, i64* %PC.i959
  %2963 = inttoptr i64 %2960 to i64*
  %2964 = load i64, i64* %2963
  store i64 %2964, i64* %RDX.i960, align 8
  store %struct.Memory* %loadMem_423e6e, %struct.Memory** %MEMORY
  %loadMem_423e72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2966 = getelementptr inbounds %struct.GPR, %struct.GPR* %2965, i32 0, i32 33
  %2967 = getelementptr inbounds %struct.Reg, %struct.Reg* %2966, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %2967 to i64*
  %2968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2969 = getelementptr inbounds %struct.GPR, %struct.GPR* %2968, i32 0, i32 7
  %2970 = getelementptr inbounds %struct.Reg, %struct.Reg* %2969, i32 0, i32 0
  %RDX.i957 = bitcast %union.anon* %2970 to i64*
  %2971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2972 = getelementptr inbounds %struct.GPR, %struct.GPR* %2971, i32 0, i32 11
  %2973 = getelementptr inbounds %struct.Reg, %struct.Reg* %2972, i32 0, i32 0
  %RDI.i958 = bitcast %union.anon* %2973 to i64*
  %2974 = load i64, i64* %RDX.i957
  %2975 = load i64, i64* %PC.i956
  %2976 = add i64 %2975, 3
  store i64 %2976, i64* %PC.i956
  %2977 = inttoptr i64 %2974 to i16*
  %2978 = load i16, i16* %2977
  %2979 = sext i16 %2978 to i64
  %2980 = and i64 %2979, 4294967295
  store i64 %2980, i64* %RDI.i958, align 8
  store %struct.Memory* %loadMem_423e72, %struct.Memory** %MEMORY
  %loadMem_423e75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2982 = getelementptr inbounds %struct.GPR, %struct.GPR* %2981, i32 0, i32 33
  %2983 = getelementptr inbounds %struct.Reg, %struct.Reg* %2982, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %2983 to i64*
  %2984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2985 = getelementptr inbounds %struct.GPR, %struct.GPR* %2984, i32 0, i32 11
  %2986 = getelementptr inbounds %struct.Reg, %struct.Reg* %2985, i32 0, i32 0
  %EDI.i954 = bitcast %union.anon* %2986 to i32*
  %2987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2988 = getelementptr inbounds %struct.GPR, %struct.GPR* %2987, i32 0, i32 5
  %2989 = getelementptr inbounds %struct.Reg, %struct.Reg* %2988, i32 0, i32 0
  %RCX.i955 = bitcast %union.anon* %2989 to i64*
  %2990 = load i64, i64* %RCX.i955
  %2991 = load i32, i32* %EDI.i954
  %2992 = zext i32 %2991 to i64
  %2993 = load i64, i64* %PC.i953
  %2994 = add i64 %2993, 2
  store i64 %2994, i64* %PC.i953
  %2995 = trunc i64 %2990 to i32
  %2996 = sub i32 %2995, %2991
  %2997 = zext i32 %2996 to i64
  store i64 %2997, i64* %RCX.i955, align 8
  %2998 = icmp ult i32 %2995, %2991
  %2999 = zext i1 %2998 to i8
  %3000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2999, i8* %3000, align 1
  %3001 = and i32 %2996, 255
  %3002 = call i32 @llvm.ctpop.i32(i32 %3001)
  %3003 = trunc i32 %3002 to i8
  %3004 = and i8 %3003, 1
  %3005 = xor i8 %3004, 1
  %3006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3005, i8* %3006, align 1
  %3007 = xor i64 %2992, %2990
  %3008 = trunc i64 %3007 to i32
  %3009 = xor i32 %3008, %2996
  %3010 = lshr i32 %3009, 4
  %3011 = trunc i32 %3010 to i8
  %3012 = and i8 %3011, 1
  %3013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3012, i8* %3013, align 1
  %3014 = icmp eq i32 %2996, 0
  %3015 = zext i1 %3014 to i8
  %3016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3015, i8* %3016, align 1
  %3017 = lshr i32 %2996, 31
  %3018 = trunc i32 %3017 to i8
  %3019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3018, i8* %3019, align 1
  %3020 = lshr i32 %2995, 31
  %3021 = lshr i32 %2991, 31
  %3022 = xor i32 %3021, %3020
  %3023 = xor i32 %3017, %3020
  %3024 = add i32 %3023, %3022
  %3025 = icmp eq i32 %3024, 2
  %3026 = zext i1 %3025 to i8
  %3027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3026, i8* %3027, align 1
  store %struct.Memory* %loadMem_423e75, %struct.Memory** %MEMORY
  %loadMem_423e77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3029 = getelementptr inbounds %struct.GPR, %struct.GPR* %3028, i32 0, i32 33
  %3030 = getelementptr inbounds %struct.Reg, %struct.Reg* %3029, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %3030 to i64*
  %3031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3032 = getelementptr inbounds %struct.GPR, %struct.GPR* %3031, i32 0, i32 1
  %3033 = getelementptr inbounds %struct.Reg, %struct.Reg* %3032, i32 0, i32 0
  %EAX.i951 = bitcast %union.anon* %3033 to i32*
  %3034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3035 = getelementptr inbounds %struct.GPR, %struct.GPR* %3034, i32 0, i32 15
  %3036 = getelementptr inbounds %struct.Reg, %struct.Reg* %3035, i32 0, i32 0
  %RBP.i952 = bitcast %union.anon* %3036 to i64*
  %3037 = load i64, i64* %RBP.i952
  %3038 = sub i64 %3037, 248
  %3039 = load i32, i32* %EAX.i951
  %3040 = zext i32 %3039 to i64
  %3041 = load i64, i64* %PC.i950
  %3042 = add i64 %3041, 6
  store i64 %3042, i64* %PC.i950
  %3043 = inttoptr i64 %3038 to i32*
  store i32 %3039, i32* %3043
  store %struct.Memory* %loadMem_423e77, %struct.Memory** %MEMORY
  %loadMem_423e7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3045 = getelementptr inbounds %struct.GPR, %struct.GPR* %3044, i32 0, i32 33
  %3046 = getelementptr inbounds %struct.Reg, %struct.Reg* %3045, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %3046 to i64*
  %3047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3048 = getelementptr inbounds %struct.GPR, %struct.GPR* %3047, i32 0, i32 5
  %3049 = getelementptr inbounds %struct.Reg, %struct.Reg* %3048, i32 0, i32 0
  %ECX.i948 = bitcast %union.anon* %3049 to i32*
  %3050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3051 = getelementptr inbounds %struct.GPR, %struct.GPR* %3050, i32 0, i32 1
  %3052 = getelementptr inbounds %struct.Reg, %struct.Reg* %3051, i32 0, i32 0
  %RAX.i949 = bitcast %union.anon* %3052 to i64*
  %3053 = load i32, i32* %ECX.i948
  %3054 = zext i32 %3053 to i64
  %3055 = load i64, i64* %PC.i947
  %3056 = add i64 %3055, 2
  store i64 %3056, i64* %PC.i947
  %3057 = and i64 %3054, 4294967295
  store i64 %3057, i64* %RAX.i949, align 8
  store %struct.Memory* %loadMem_423e7d, %struct.Memory** %MEMORY
  %loadMem_423e7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3059 = getelementptr inbounds %struct.GPR, %struct.GPR* %3058, i32 0, i32 33
  %3060 = getelementptr inbounds %struct.Reg, %struct.Reg* %3059, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %3060 to i64*
  %3061 = load i64, i64* %PC.i946
  %3062 = add i64 %3061, 1
  store i64 %3062, i64* %PC.i946
  %3063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3065 = bitcast %union.anon* %3064 to i32*
  %3066 = load i32, i32* %3065, align 8
  %3067 = sext i32 %3066 to i64
  %3068 = lshr i64 %3067, 32
  store i64 %3068, i64* %3063, align 8
  store %struct.Memory* %loadMem_423e7f, %struct.Memory** %MEMORY
  %loadMem_423e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3070 = getelementptr inbounds %struct.GPR, %struct.GPR* %3069, i32 0, i32 33
  %3071 = getelementptr inbounds %struct.Reg, %struct.Reg* %3070, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %3071 to i64*
  %3072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3073 = getelementptr inbounds %struct.GPR, %struct.GPR* %3072, i32 0, i32 5
  %3074 = getelementptr inbounds %struct.Reg, %struct.Reg* %3073, i32 0, i32 0
  %RCX.i944 = bitcast %union.anon* %3074 to i64*
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3076 = getelementptr inbounds %struct.GPR, %struct.GPR* %3075, i32 0, i32 15
  %3077 = getelementptr inbounds %struct.Reg, %struct.Reg* %3076, i32 0, i32 0
  %RBP.i945 = bitcast %union.anon* %3077 to i64*
  %3078 = load i64, i64* %RBP.i945
  %3079 = sub i64 %3078, 248
  %3080 = load i64, i64* %PC.i943
  %3081 = add i64 %3080, 6
  store i64 %3081, i64* %PC.i943
  %3082 = inttoptr i64 %3079 to i32*
  %3083 = load i32, i32* %3082
  %3084 = zext i32 %3083 to i64
  store i64 %3084, i64* %RCX.i944, align 8
  store %struct.Memory* %loadMem_423e80, %struct.Memory** %MEMORY
  %loadMem_423e86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3086 = getelementptr inbounds %struct.GPR, %struct.GPR* %3085, i32 0, i32 33
  %3087 = getelementptr inbounds %struct.Reg, %struct.Reg* %3086, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %3087 to i64*
  %3088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3089 = getelementptr inbounds %struct.GPR, %struct.GPR* %3088, i32 0, i32 5
  %3090 = getelementptr inbounds %struct.Reg, %struct.Reg* %3089, i32 0, i32 0
  %ECX.i939 = bitcast %union.anon* %3090 to i32*
  %3091 = load i32, i32* %ECX.i939
  %3092 = zext i32 %3091 to i64
  %3093 = load i64, i64* %PC.i938
  %3094 = add i64 %3093, 2
  store i64 %3094, i64* %PC.i938
  %3095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3096 = bitcast %union.anon* %3095 to i32*
  %3097 = load i32, i32* %3096, align 8
  %3098 = zext i32 %3097 to i64
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %3100 = bitcast %union.anon* %3099 to i32*
  %3101 = load i32, i32* %3100, align 8
  %3102 = zext i32 %3101 to i64
  %3103 = shl i64 %3092, 32
  %3104 = ashr exact i64 %3103, 32
  %3105 = shl i64 %3102, 32
  %3106 = or i64 %3105, %3098
  %3107 = sdiv i64 %3106, %3104
  %3108 = shl i64 %3107, 32
  %3109 = ashr exact i64 %3108, 32
  %3110 = icmp eq i64 %3107, %3109
  br i1 %3110, label %3115, label %3111

; <label>:3111:                                   ; preds = %block_.L_423e59
  %3112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3113 = load i64, i64* %3112, align 8
  %3114 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3113, %struct.Memory* %loadMem_423e86)
  br label %routine_idivl__ecx.exit940

; <label>:3115:                                   ; preds = %block_.L_423e59
  %3116 = srem i64 %3106, %3104
  %3117 = getelementptr inbounds %union.anon, %union.anon* %3095, i64 0, i32 0
  %3118 = and i64 %3107, 4294967295
  store i64 %3118, i64* %3117, align 8
  %3119 = getelementptr inbounds %union.anon, %union.anon* %3099, i64 0, i32 0
  %3120 = and i64 %3116, 4294967295
  store i64 %3120, i64* %3119, align 8
  %3121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3121, align 1
  %3122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %3122, align 1
  %3123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3123, align 1
  %3124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3124, align 1
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3125, align 1
  %3126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3126, align 1
  br label %routine_idivl__ecx.exit940

routine_idivl__ecx.exit940:                       ; preds = %3111, %3115
  %3127 = phi %struct.Memory* [ %3114, %3111 ], [ %loadMem_423e86, %3115 ]
  store %struct.Memory* %3127, %struct.Memory** %MEMORY
  %loadMem_423e88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3129 = getelementptr inbounds %struct.GPR, %struct.GPR* %3128, i32 0, i32 33
  %3130 = getelementptr inbounds %struct.Reg, %struct.Reg* %3129, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %3130 to i64*
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3132 = getelementptr inbounds %struct.GPR, %struct.GPR* %3131, i32 0, i32 7
  %3133 = getelementptr inbounds %struct.Reg, %struct.Reg* %3132, i32 0, i32 0
  %EDX.i936 = bitcast %union.anon* %3133 to i32*
  %3134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3135 = getelementptr inbounds %struct.GPR, %struct.GPR* %3134, i32 0, i32 15
  %3136 = getelementptr inbounds %struct.Reg, %struct.Reg* %3135, i32 0, i32 0
  %RBP.i937 = bitcast %union.anon* %3136 to i64*
  %3137 = load i64, i64* %RBP.i937
  %3138 = sub i64 %3137, 216
  %3139 = load i32, i32* %EDX.i936
  %3140 = zext i32 %3139 to i64
  %3141 = load i64, i64* %PC.i935
  %3142 = add i64 %3141, 6
  store i64 %3142, i64* %PC.i935
  %3143 = inttoptr i64 %3138 to i32*
  store i32 %3139, i32* %3143
  store %struct.Memory* %loadMem_423e88, %struct.Memory** %MEMORY
  %loadMem_423e8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3145 = getelementptr inbounds %struct.GPR, %struct.GPR* %3144, i32 0, i32 33
  %3146 = getelementptr inbounds %struct.Reg, %struct.Reg* %3145, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %3146 to i64*
  %3147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3148 = getelementptr inbounds %struct.GPR, %struct.GPR* %3147, i32 0, i32 7
  %3149 = getelementptr inbounds %struct.Reg, %struct.Reg* %3148, i32 0, i32 0
  %RDX.i933 = bitcast %union.anon* %3149 to i64*
  %3150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3151 = getelementptr inbounds %struct.GPR, %struct.GPR* %3150, i32 0, i32 15
  %3152 = getelementptr inbounds %struct.Reg, %struct.Reg* %3151, i32 0, i32 0
  %RBP.i934 = bitcast %union.anon* %3152 to i64*
  %3153 = load i64, i64* %RBP.i934
  %3154 = sub i64 %3153, 72
  %3155 = load i64, i64* %PC.i932
  %3156 = add i64 %3155, 4
  store i64 %3156, i64* %PC.i932
  %3157 = inttoptr i64 %3154 to i16*
  %3158 = load i16, i16* %3157
  %3159 = sext i16 %3158 to i64
  %3160 = and i64 %3159, 4294967295
  store i64 %3160, i64* %RDX.i933, align 8
  store %struct.Memory* %loadMem_423e8e, %struct.Memory** %MEMORY
  %loadMem_423e92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3162 = getelementptr inbounds %struct.GPR, %struct.GPR* %3161, i32 0, i32 33
  %3163 = getelementptr inbounds %struct.Reg, %struct.Reg* %3162, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %3163 to i64*
  %3164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3165 = getelementptr inbounds %struct.GPR, %struct.GPR* %3164, i32 0, i32 15
  %3166 = getelementptr inbounds %struct.Reg, %struct.Reg* %3165, i32 0, i32 0
  %RBP.i930 = bitcast %union.anon* %3166 to i64*
  %3167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3168 = getelementptr inbounds %struct.GPR, %struct.GPR* %3167, i32 0, i32 17
  %3169 = getelementptr inbounds %struct.Reg, %struct.Reg* %3168, i32 0, i32 0
  %R8.i931 = bitcast %union.anon* %3169 to i64*
  %3170 = load i64, i64* %RBP.i930
  %3171 = sub i64 %3170, 88
  %3172 = load i64, i64* %PC.i929
  %3173 = add i64 %3172, 4
  store i64 %3173, i64* %PC.i929
  %3174 = inttoptr i64 %3171 to i64*
  %3175 = load i64, i64* %3174
  store i64 %3175, i64* %R8.i931, align 8
  store %struct.Memory* %loadMem_423e92, %struct.Memory** %MEMORY
  %loadMem_423e96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3177 = getelementptr inbounds %struct.GPR, %struct.GPR* %3176, i32 0, i32 33
  %3178 = getelementptr inbounds %struct.Reg, %struct.Reg* %3177, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %3178 to i64*
  %3179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3180 = getelementptr inbounds %struct.GPR, %struct.GPR* %3179, i32 0, i32 11
  %3181 = getelementptr inbounds %struct.Reg, %struct.Reg* %3180, i32 0, i32 0
  %RDI.i927 = bitcast %union.anon* %3181 to i64*
  %3182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3183 = getelementptr inbounds %struct.GPR, %struct.GPR* %3182, i32 0, i32 17
  %3184 = getelementptr inbounds %struct.Reg, %struct.Reg* %3183, i32 0, i32 0
  %R8.i928 = bitcast %union.anon* %3184 to i64*
  %3185 = load i64, i64* %R8.i928
  %3186 = load i64, i64* %PC.i926
  %3187 = add i64 %3186, 4
  store i64 %3187, i64* %PC.i926
  %3188 = inttoptr i64 %3185 to i16*
  %3189 = load i16, i16* %3188
  %3190 = sext i16 %3189 to i64
  %3191 = and i64 %3190, 4294967295
  store i64 %3191, i64* %RDI.i927, align 8
  store %struct.Memory* %loadMem_423e96, %struct.Memory** %MEMORY
  %loadMem_423e9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3193 = getelementptr inbounds %struct.GPR, %struct.GPR* %3192, i32 0, i32 33
  %3194 = getelementptr inbounds %struct.Reg, %struct.Reg* %3193, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %3194 to i64*
  %3195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3196 = getelementptr inbounds %struct.GPR, %struct.GPR* %3195, i32 0, i32 11
  %3197 = getelementptr inbounds %struct.Reg, %struct.Reg* %3196, i32 0, i32 0
  %EDI.i924 = bitcast %union.anon* %3197 to i32*
  %3198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3199 = getelementptr inbounds %struct.GPR, %struct.GPR* %3198, i32 0, i32 7
  %3200 = getelementptr inbounds %struct.Reg, %struct.Reg* %3199, i32 0, i32 0
  %RDX.i925 = bitcast %union.anon* %3200 to i64*
  %3201 = load i64, i64* %RDX.i925
  %3202 = load i32, i32* %EDI.i924
  %3203 = zext i32 %3202 to i64
  %3204 = load i64, i64* %PC.i923
  %3205 = add i64 %3204, 2
  store i64 %3205, i64* %PC.i923
  %3206 = trunc i64 %3201 to i32
  %3207 = sub i32 %3206, %3202
  %3208 = zext i32 %3207 to i64
  store i64 %3208, i64* %RDX.i925, align 8
  %3209 = icmp ult i32 %3206, %3202
  %3210 = zext i1 %3209 to i8
  %3211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3210, i8* %3211, align 1
  %3212 = and i32 %3207, 255
  %3213 = call i32 @llvm.ctpop.i32(i32 %3212)
  %3214 = trunc i32 %3213 to i8
  %3215 = and i8 %3214, 1
  %3216 = xor i8 %3215, 1
  %3217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3216, i8* %3217, align 1
  %3218 = xor i64 %3203, %3201
  %3219 = trunc i64 %3218 to i32
  %3220 = xor i32 %3219, %3207
  %3221 = lshr i32 %3220, 4
  %3222 = trunc i32 %3221 to i8
  %3223 = and i8 %3222, 1
  %3224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3223, i8* %3224, align 1
  %3225 = icmp eq i32 %3207, 0
  %3226 = zext i1 %3225 to i8
  %3227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3226, i8* %3227, align 1
  %3228 = lshr i32 %3207, 31
  %3229 = trunc i32 %3228 to i8
  %3230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3229, i8* %3230, align 1
  %3231 = lshr i32 %3206, 31
  %3232 = lshr i32 %3202, 31
  %3233 = xor i32 %3232, %3231
  %3234 = xor i32 %3228, %3231
  %3235 = add i32 %3234, %3233
  %3236 = icmp eq i32 %3235, 2
  %3237 = zext i1 %3236 to i8
  %3238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3237, i8* %3238, align 1
  store %struct.Memory* %loadMem_423e9a, %struct.Memory** %MEMORY
  %loadMem_423e9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3240 = getelementptr inbounds %struct.GPR, %struct.GPR* %3239, i32 0, i32 33
  %3241 = getelementptr inbounds %struct.Reg, %struct.Reg* %3240, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %3241 to i64*
  %3242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3243 = getelementptr inbounds %struct.GPR, %struct.GPR* %3242, i32 0, i32 7
  %3244 = getelementptr inbounds %struct.Reg, %struct.Reg* %3243, i32 0, i32 0
  %EDX.i921 = bitcast %union.anon* %3244 to i32*
  %3245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3246 = getelementptr inbounds %struct.GPR, %struct.GPR* %3245, i32 0, i32 1
  %3247 = getelementptr inbounds %struct.Reg, %struct.Reg* %3246, i32 0, i32 0
  %RAX.i922 = bitcast %union.anon* %3247 to i64*
  %3248 = load i32, i32* %EDX.i921
  %3249 = zext i32 %3248 to i64
  %3250 = load i64, i64* %PC.i920
  %3251 = add i64 %3250, 2
  store i64 %3251, i64* %PC.i920
  %3252 = and i64 %3249, 4294967295
  store i64 %3252, i64* %RAX.i922, align 8
  store %struct.Memory* %loadMem_423e9c, %struct.Memory** %MEMORY
  %loadMem_423e9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3254 = getelementptr inbounds %struct.GPR, %struct.GPR* %3253, i32 0, i32 33
  %3255 = getelementptr inbounds %struct.Reg, %struct.Reg* %3254, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %3255 to i64*
  %3256 = load i64, i64* %PC.i919
  %3257 = add i64 %3256, 1
  store i64 %3257, i64* %PC.i919
  %3258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3260 = bitcast %union.anon* %3259 to i32*
  %3261 = load i32, i32* %3260, align 8
  %3262 = sext i32 %3261 to i64
  %3263 = lshr i64 %3262, 32
  store i64 %3263, i64* %3258, align 8
  store %struct.Memory* %loadMem_423e9e, %struct.Memory** %MEMORY
  %loadMem_423e9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3265 = getelementptr inbounds %struct.GPR, %struct.GPR* %3264, i32 0, i32 33
  %3266 = getelementptr inbounds %struct.Reg, %struct.Reg* %3265, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %3266 to i64*
  %3267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3268 = getelementptr inbounds %struct.GPR, %struct.GPR* %3267, i32 0, i32 5
  %3269 = getelementptr inbounds %struct.Reg, %struct.Reg* %3268, i32 0, i32 0
  %ECX.i915 = bitcast %union.anon* %3269 to i32*
  %3270 = load i32, i32* %ECX.i915
  %3271 = zext i32 %3270 to i64
  %3272 = load i64, i64* %PC.i914
  %3273 = add i64 %3272, 2
  store i64 %3273, i64* %PC.i914
  %3274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3275 = bitcast %union.anon* %3274 to i32*
  %3276 = load i32, i32* %3275, align 8
  %3277 = zext i32 %3276 to i64
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %3279 = bitcast %union.anon* %3278 to i32*
  %3280 = load i32, i32* %3279, align 8
  %3281 = zext i32 %3280 to i64
  %3282 = shl i64 %3271, 32
  %3283 = ashr exact i64 %3282, 32
  %3284 = shl i64 %3281, 32
  %3285 = or i64 %3284, %3277
  %3286 = sdiv i64 %3285, %3283
  %3287 = shl i64 %3286, 32
  %3288 = ashr exact i64 %3287, 32
  %3289 = icmp eq i64 %3286, %3288
  br i1 %3289, label %3294, label %3290

; <label>:3290:                                   ; preds = %routine_idivl__ecx.exit940
  %3291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3292 = load i64, i64* %3291, align 8
  %3293 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3292, %struct.Memory* %loadMem_423e9f)
  br label %routine_idivl__ecx.exit916

; <label>:3294:                                   ; preds = %routine_idivl__ecx.exit940
  %3295 = srem i64 %3285, %3283
  %3296 = getelementptr inbounds %union.anon, %union.anon* %3274, i64 0, i32 0
  %3297 = and i64 %3286, 4294967295
  store i64 %3297, i64* %3296, align 8
  %3298 = getelementptr inbounds %union.anon, %union.anon* %3278, i64 0, i32 0
  %3299 = and i64 %3295, 4294967295
  store i64 %3299, i64* %3298, align 8
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3300, align 1
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %3301, align 1
  %3302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3302, align 1
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3303, align 1
  %3304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3304, align 1
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3305, align 1
  br label %routine_idivl__ecx.exit916

routine_idivl__ecx.exit916:                       ; preds = %3290, %3294
  %3306 = phi %struct.Memory* [ %3293, %3290 ], [ %loadMem_423e9f, %3294 ]
  store %struct.Memory* %3306, %struct.Memory** %MEMORY
  %loadMem_423ea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3308 = getelementptr inbounds %struct.GPR, %struct.GPR* %3307, i32 0, i32 33
  %3309 = getelementptr inbounds %struct.Reg, %struct.Reg* %3308, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %3309 to i64*
  %3310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3311 = getelementptr inbounds %struct.GPR, %struct.GPR* %3310, i32 0, i32 7
  %3312 = getelementptr inbounds %struct.Reg, %struct.Reg* %3311, i32 0, i32 0
  %EDX.i912 = bitcast %union.anon* %3312 to i32*
  %3313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3314 = getelementptr inbounds %struct.GPR, %struct.GPR* %3313, i32 0, i32 15
  %3315 = getelementptr inbounds %struct.Reg, %struct.Reg* %3314, i32 0, i32 0
  %RBP.i913 = bitcast %union.anon* %3315 to i64*
  %3316 = load i64, i64* %RBP.i913
  %3317 = sub i64 %3316, 220
  %3318 = load i32, i32* %EDX.i912
  %3319 = zext i32 %3318 to i64
  %3320 = load i64, i64* %PC.i911
  %3321 = add i64 %3320, 6
  store i64 %3321, i64* %PC.i911
  %3322 = inttoptr i64 %3317 to i32*
  store i32 %3318, i32* %3322
  store %struct.Memory* %loadMem_423ea1, %struct.Memory** %MEMORY
  %loadMem_423ea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3324 = getelementptr inbounds %struct.GPR, %struct.GPR* %3323, i32 0, i32 33
  %3325 = getelementptr inbounds %struct.Reg, %struct.Reg* %3324, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %3325 to i64*
  %3326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3327 = getelementptr inbounds %struct.GPR, %struct.GPR* %3326, i32 0, i32 7
  %3328 = getelementptr inbounds %struct.Reg, %struct.Reg* %3327, i32 0, i32 0
  %RDX.i910 = bitcast %union.anon* %3328 to i64*
  %3329 = load i64, i64* %PC.i909
  %3330 = add i64 %3329, 7
  store i64 %3330, i64* %PC.i909
  %3331 = load i32, i32* bitcast (%G_0x6d1fa0_type* @G_0x6d1fa0 to i32*)
  %3332 = zext i32 %3331 to i64
  store i64 %3332, i64* %RDX.i910, align 8
  store %struct.Memory* %loadMem_423ea7, %struct.Memory** %MEMORY
  %loadMem_423eae = load %struct.Memory*, %struct.Memory** %MEMORY
  %3333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3334 = getelementptr inbounds %struct.GPR, %struct.GPR* %3333, i32 0, i32 33
  %3335 = getelementptr inbounds %struct.Reg, %struct.Reg* %3334, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %3335 to i64*
  %3336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3337 = getelementptr inbounds %struct.GPR, %struct.GPR* %3336, i32 0, i32 15
  %3338 = getelementptr inbounds %struct.Reg, %struct.Reg* %3337, i32 0, i32 0
  %RBP.i907 = bitcast %union.anon* %3338 to i64*
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3340 = getelementptr inbounds %struct.GPR, %struct.GPR* %3339, i32 0, i32 17
  %3341 = getelementptr inbounds %struct.Reg, %struct.Reg* %3340, i32 0, i32 0
  %R8.i908 = bitcast %union.anon* %3341 to i64*
  %3342 = load i64, i64* %RBP.i907
  %3343 = sub i64 %3342, 80
  %3344 = load i64, i64* %PC.i906
  %3345 = add i64 %3344, 4
  store i64 %3345, i64* %PC.i906
  %3346 = inttoptr i64 %3343 to i64*
  %3347 = load i64, i64* %3346
  store i64 %3347, i64* %R8.i908, align 8
  store %struct.Memory* %loadMem_423eae, %struct.Memory** %MEMORY
  %loadMem_423eb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3349 = getelementptr inbounds %struct.GPR, %struct.GPR* %3348, i32 0, i32 33
  %3350 = getelementptr inbounds %struct.Reg, %struct.Reg* %3349, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %3350 to i64*
  %3351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3352 = getelementptr inbounds %struct.GPR, %struct.GPR* %3351, i32 0, i32 11
  %3353 = getelementptr inbounds %struct.Reg, %struct.Reg* %3352, i32 0, i32 0
  %RDI.i904 = bitcast %union.anon* %3353 to i64*
  %3354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3355 = getelementptr inbounds %struct.GPR, %struct.GPR* %3354, i32 0, i32 17
  %3356 = getelementptr inbounds %struct.Reg, %struct.Reg* %3355, i32 0, i32 0
  %R8.i905 = bitcast %union.anon* %3356 to i64*
  %3357 = load i64, i64* %R8.i905
  %3358 = load i64, i64* %PC.i903
  %3359 = add i64 %3358, 4
  store i64 %3359, i64* %PC.i903
  %3360 = inttoptr i64 %3357 to i16*
  %3361 = load i16, i16* %3360
  %3362 = sext i16 %3361 to i64
  %3363 = and i64 %3362, 4294967295
  store i64 %3363, i64* %RDI.i904, align 8
  store %struct.Memory* %loadMem_423eb2, %struct.Memory** %MEMORY
  %loadMem_423eb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3365 = getelementptr inbounds %struct.GPR, %struct.GPR* %3364, i32 0, i32 33
  %3366 = getelementptr inbounds %struct.Reg, %struct.Reg* %3365, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %3366 to i64*
  %3367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3368 = getelementptr inbounds %struct.GPR, %struct.GPR* %3367, i32 0, i32 11
  %3369 = getelementptr inbounds %struct.Reg, %struct.Reg* %3368, i32 0, i32 0
  %EDI.i901 = bitcast %union.anon* %3369 to i32*
  %3370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3371 = getelementptr inbounds %struct.GPR, %struct.GPR* %3370, i32 0, i32 7
  %3372 = getelementptr inbounds %struct.Reg, %struct.Reg* %3371, i32 0, i32 0
  %RDX.i902 = bitcast %union.anon* %3372 to i64*
  %3373 = load i64, i64* %RDX.i902
  %3374 = load i32, i32* %EDI.i901
  %3375 = zext i32 %3374 to i64
  %3376 = load i64, i64* %PC.i900
  %3377 = add i64 %3376, 2
  store i64 %3377, i64* %PC.i900
  %3378 = trunc i64 %3373 to i32
  %3379 = sub i32 %3378, %3374
  %3380 = zext i32 %3379 to i64
  store i64 %3380, i64* %RDX.i902, align 8
  %3381 = icmp ult i32 %3378, %3374
  %3382 = zext i1 %3381 to i8
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3382, i8* %3383, align 1
  %3384 = and i32 %3379, 255
  %3385 = call i32 @llvm.ctpop.i32(i32 %3384)
  %3386 = trunc i32 %3385 to i8
  %3387 = and i8 %3386, 1
  %3388 = xor i8 %3387, 1
  %3389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3388, i8* %3389, align 1
  %3390 = xor i64 %3375, %3373
  %3391 = trunc i64 %3390 to i32
  %3392 = xor i32 %3391, %3379
  %3393 = lshr i32 %3392, 4
  %3394 = trunc i32 %3393 to i8
  %3395 = and i8 %3394, 1
  %3396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3395, i8* %3396, align 1
  %3397 = icmp eq i32 %3379, 0
  %3398 = zext i1 %3397 to i8
  %3399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3398, i8* %3399, align 1
  %3400 = lshr i32 %3379, 31
  %3401 = trunc i32 %3400 to i8
  %3402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3401, i8* %3402, align 1
  %3403 = lshr i32 %3378, 31
  %3404 = lshr i32 %3374, 31
  %3405 = xor i32 %3404, %3403
  %3406 = xor i32 %3400, %3403
  %3407 = add i32 %3406, %3405
  %3408 = icmp eq i32 %3407, 2
  %3409 = zext i1 %3408 to i8
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3409, i8* %3410, align 1
  store %struct.Memory* %loadMem_423eb6, %struct.Memory** %MEMORY
  %loadMem_423eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3412 = getelementptr inbounds %struct.GPR, %struct.GPR* %3411, i32 0, i32 33
  %3413 = getelementptr inbounds %struct.Reg, %struct.Reg* %3412, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %3413 to i64*
  %3414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3415 = getelementptr inbounds %struct.GPR, %struct.GPR* %3414, i32 0, i32 7
  %3416 = getelementptr inbounds %struct.Reg, %struct.Reg* %3415, i32 0, i32 0
  %EDX.i898 = bitcast %union.anon* %3416 to i32*
  %3417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3418 = getelementptr inbounds %struct.GPR, %struct.GPR* %3417, i32 0, i32 1
  %3419 = getelementptr inbounds %struct.Reg, %struct.Reg* %3418, i32 0, i32 0
  %RAX.i899 = bitcast %union.anon* %3419 to i64*
  %3420 = load i32, i32* %EDX.i898
  %3421 = zext i32 %3420 to i64
  %3422 = load i64, i64* %PC.i897
  %3423 = add i64 %3422, 2
  store i64 %3423, i64* %PC.i897
  %3424 = and i64 %3421, 4294967295
  store i64 %3424, i64* %RAX.i899, align 8
  store %struct.Memory* %loadMem_423eb8, %struct.Memory** %MEMORY
  %loadMem_423eba = load %struct.Memory*, %struct.Memory** %MEMORY
  %3425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3426 = getelementptr inbounds %struct.GPR, %struct.GPR* %3425, i32 0, i32 33
  %3427 = getelementptr inbounds %struct.Reg, %struct.Reg* %3426, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %3427 to i64*
  %3428 = load i64, i64* %PC.i896
  %3429 = add i64 %3428, 1
  store i64 %3429, i64* %PC.i896
  %3430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3432 = bitcast %union.anon* %3431 to i32*
  %3433 = load i32, i32* %3432, align 8
  %3434 = sext i32 %3433 to i64
  %3435 = lshr i64 %3434, 32
  store i64 %3435, i64* %3430, align 8
  store %struct.Memory* %loadMem_423eba, %struct.Memory** %MEMORY
  %loadMem_423ebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3437 = getelementptr inbounds %struct.GPR, %struct.GPR* %3436, i32 0, i32 33
  %3438 = getelementptr inbounds %struct.Reg, %struct.Reg* %3437, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %3438 to i64*
  %3439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3440 = getelementptr inbounds %struct.GPR, %struct.GPR* %3439, i32 0, i32 5
  %3441 = getelementptr inbounds %struct.Reg, %struct.Reg* %3440, i32 0, i32 0
  %ECX.i892 = bitcast %union.anon* %3441 to i32*
  %3442 = load i32, i32* %ECX.i892
  %3443 = zext i32 %3442 to i64
  %3444 = load i64, i64* %PC.i891
  %3445 = add i64 %3444, 2
  store i64 %3445, i64* %PC.i891
  %3446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3447 = bitcast %union.anon* %3446 to i32*
  %3448 = load i32, i32* %3447, align 8
  %3449 = zext i32 %3448 to i64
  %3450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %3451 = bitcast %union.anon* %3450 to i32*
  %3452 = load i32, i32* %3451, align 8
  %3453 = zext i32 %3452 to i64
  %3454 = shl i64 %3443, 32
  %3455 = ashr exact i64 %3454, 32
  %3456 = shl i64 %3453, 32
  %3457 = or i64 %3456, %3449
  %3458 = sdiv i64 %3457, %3455
  %3459 = shl i64 %3458, 32
  %3460 = ashr exact i64 %3459, 32
  %3461 = icmp eq i64 %3458, %3460
  br i1 %3461, label %3466, label %3462

; <label>:3462:                                   ; preds = %routine_idivl__ecx.exit916
  %3463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3464 = load i64, i64* %3463, align 8
  %3465 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3464, %struct.Memory* %loadMem_423ebb)
  br label %routine_idivl__ecx.exit893

; <label>:3466:                                   ; preds = %routine_idivl__ecx.exit916
  %3467 = srem i64 %3457, %3455
  %3468 = getelementptr inbounds %union.anon, %union.anon* %3446, i64 0, i32 0
  %3469 = and i64 %3458, 4294967295
  store i64 %3469, i64* %3468, align 8
  %3470 = getelementptr inbounds %union.anon, %union.anon* %3450, i64 0, i32 0
  %3471 = and i64 %3467, 4294967295
  store i64 %3471, i64* %3470, align 8
  %3472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3472, align 1
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %3473, align 1
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3474, align 1
  %3475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3475, align 1
  %3476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3476, align 1
  %3477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3477, align 1
  br label %routine_idivl__ecx.exit893

routine_idivl__ecx.exit893:                       ; preds = %3462, %3466
  %3478 = phi %struct.Memory* [ %3465, %3462 ], [ %loadMem_423ebb, %3466 ]
  store %struct.Memory* %3478, %struct.Memory** %MEMORY
  %loadMem_423ebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3480 = getelementptr inbounds %struct.GPR, %struct.GPR* %3479, i32 0, i32 33
  %3481 = getelementptr inbounds %struct.Reg, %struct.Reg* %3480, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %3481 to i64*
  %3482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3483 = getelementptr inbounds %struct.GPR, %struct.GPR* %3482, i32 0, i32 7
  %3484 = getelementptr inbounds %struct.Reg, %struct.Reg* %3483, i32 0, i32 0
  %EDX.i889 = bitcast %union.anon* %3484 to i32*
  %3485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3486 = getelementptr inbounds %struct.GPR, %struct.GPR* %3485, i32 0, i32 15
  %3487 = getelementptr inbounds %struct.Reg, %struct.Reg* %3486, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %3487 to i64*
  %3488 = load i64, i64* %RBP.i890
  %3489 = sub i64 %3488, 232
  %3490 = load i32, i32* %EDX.i889
  %3491 = zext i32 %3490 to i64
  %3492 = load i64, i64* %PC.i888
  %3493 = add i64 %3492, 6
  store i64 %3493, i64* %PC.i888
  %3494 = inttoptr i64 %3489 to i32*
  store i32 %3490, i32* %3494
  store %struct.Memory* %loadMem_423ebd, %struct.Memory** %MEMORY
  %loadMem_423ec3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3496 = getelementptr inbounds %struct.GPR, %struct.GPR* %3495, i32 0, i32 33
  %3497 = getelementptr inbounds %struct.Reg, %struct.Reg* %3496, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %3497 to i64*
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3499 = getelementptr inbounds %struct.GPR, %struct.GPR* %3498, i32 0, i32 7
  %3500 = getelementptr inbounds %struct.Reg, %struct.Reg* %3499, i32 0, i32 0
  %RDX.i887 = bitcast %union.anon* %3500 to i64*
  %3501 = load i64, i64* %PC.i886
  %3502 = add i64 %3501, 7
  store i64 %3502, i64* %PC.i886
  %3503 = load i32, i32* bitcast (%G_0x6d1fa4_type* @G_0x6d1fa4 to i32*)
  %3504 = zext i32 %3503 to i64
  store i64 %3504, i64* %RDX.i887, align 8
  store %struct.Memory* %loadMem_423ec3, %struct.Memory** %MEMORY
  %loadMem_423eca = load %struct.Memory*, %struct.Memory** %MEMORY
  %3505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3506 = getelementptr inbounds %struct.GPR, %struct.GPR* %3505, i32 0, i32 33
  %3507 = getelementptr inbounds %struct.Reg, %struct.Reg* %3506, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %3507 to i64*
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3509 = getelementptr inbounds %struct.GPR, %struct.GPR* %3508, i32 0, i32 15
  %3510 = getelementptr inbounds %struct.Reg, %struct.Reg* %3509, i32 0, i32 0
  %RBP.i884 = bitcast %union.anon* %3510 to i64*
  %3511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3512 = getelementptr inbounds %struct.GPR, %struct.GPR* %3511, i32 0, i32 17
  %3513 = getelementptr inbounds %struct.Reg, %struct.Reg* %3512, i32 0, i32 0
  %R8.i885 = bitcast %union.anon* %3513 to i64*
  %3514 = load i64, i64* %RBP.i884
  %3515 = sub i64 %3514, 88
  %3516 = load i64, i64* %PC.i883
  %3517 = add i64 %3516, 4
  store i64 %3517, i64* %PC.i883
  %3518 = inttoptr i64 %3515 to i64*
  %3519 = load i64, i64* %3518
  store i64 %3519, i64* %R8.i885, align 8
  store %struct.Memory* %loadMem_423eca, %struct.Memory** %MEMORY
  %loadMem_423ece = load %struct.Memory*, %struct.Memory** %MEMORY
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3521 = getelementptr inbounds %struct.GPR, %struct.GPR* %3520, i32 0, i32 33
  %3522 = getelementptr inbounds %struct.Reg, %struct.Reg* %3521, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %3522 to i64*
  %3523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3524 = getelementptr inbounds %struct.GPR, %struct.GPR* %3523, i32 0, i32 11
  %3525 = getelementptr inbounds %struct.Reg, %struct.Reg* %3524, i32 0, i32 0
  %RDI.i881 = bitcast %union.anon* %3525 to i64*
  %3526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3527 = getelementptr inbounds %struct.GPR, %struct.GPR* %3526, i32 0, i32 17
  %3528 = getelementptr inbounds %struct.Reg, %struct.Reg* %3527, i32 0, i32 0
  %R8.i882 = bitcast %union.anon* %3528 to i64*
  %3529 = load i64, i64* %R8.i882
  %3530 = load i64, i64* %PC.i880
  %3531 = add i64 %3530, 4
  store i64 %3531, i64* %PC.i880
  %3532 = inttoptr i64 %3529 to i16*
  %3533 = load i16, i16* %3532
  %3534 = sext i16 %3533 to i64
  %3535 = and i64 %3534, 4294967295
  store i64 %3535, i64* %RDI.i881, align 8
  store %struct.Memory* %loadMem_423ece, %struct.Memory** %MEMORY
  %loadMem_423ed2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 33
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %3538 to i64*
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3540 = getelementptr inbounds %struct.GPR, %struct.GPR* %3539, i32 0, i32 11
  %3541 = getelementptr inbounds %struct.Reg, %struct.Reg* %3540, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %3541 to i32*
  %3542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3543 = getelementptr inbounds %struct.GPR, %struct.GPR* %3542, i32 0, i32 7
  %3544 = getelementptr inbounds %struct.Reg, %struct.Reg* %3543, i32 0, i32 0
  %RDX.i879 = bitcast %union.anon* %3544 to i64*
  %3545 = load i64, i64* %RDX.i879
  %3546 = load i32, i32* %EDI.i
  %3547 = zext i32 %3546 to i64
  %3548 = load i64, i64* %PC.i878
  %3549 = add i64 %3548, 2
  store i64 %3549, i64* %PC.i878
  %3550 = trunc i64 %3545 to i32
  %3551 = sub i32 %3550, %3546
  %3552 = zext i32 %3551 to i64
  store i64 %3552, i64* %RDX.i879, align 8
  %3553 = icmp ult i32 %3550, %3546
  %3554 = zext i1 %3553 to i8
  %3555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3554, i8* %3555, align 1
  %3556 = and i32 %3551, 255
  %3557 = call i32 @llvm.ctpop.i32(i32 %3556)
  %3558 = trunc i32 %3557 to i8
  %3559 = and i8 %3558, 1
  %3560 = xor i8 %3559, 1
  %3561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3560, i8* %3561, align 1
  %3562 = xor i64 %3547, %3545
  %3563 = trunc i64 %3562 to i32
  %3564 = xor i32 %3563, %3551
  %3565 = lshr i32 %3564, 4
  %3566 = trunc i32 %3565 to i8
  %3567 = and i8 %3566, 1
  %3568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3567, i8* %3568, align 1
  %3569 = icmp eq i32 %3551, 0
  %3570 = zext i1 %3569 to i8
  %3571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3570, i8* %3571, align 1
  %3572 = lshr i32 %3551, 31
  %3573 = trunc i32 %3572 to i8
  %3574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3573, i8* %3574, align 1
  %3575 = lshr i32 %3550, 31
  %3576 = lshr i32 %3546, 31
  %3577 = xor i32 %3576, %3575
  %3578 = xor i32 %3572, %3575
  %3579 = add i32 %3578, %3577
  %3580 = icmp eq i32 %3579, 2
  %3581 = zext i1 %3580 to i8
  %3582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3581, i8* %3582, align 1
  store %struct.Memory* %loadMem_423ed2, %struct.Memory** %MEMORY
  %loadMem_423ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3584 = getelementptr inbounds %struct.GPR, %struct.GPR* %3583, i32 0, i32 33
  %3585 = getelementptr inbounds %struct.Reg, %struct.Reg* %3584, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %3585 to i64*
  %3586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3587 = getelementptr inbounds %struct.GPR, %struct.GPR* %3586, i32 0, i32 7
  %3588 = getelementptr inbounds %struct.Reg, %struct.Reg* %3587, i32 0, i32 0
  %EDX.i876 = bitcast %union.anon* %3588 to i32*
  %3589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3590 = getelementptr inbounds %struct.GPR, %struct.GPR* %3589, i32 0, i32 1
  %3591 = getelementptr inbounds %struct.Reg, %struct.Reg* %3590, i32 0, i32 0
  %RAX.i877 = bitcast %union.anon* %3591 to i64*
  %3592 = load i32, i32* %EDX.i876
  %3593 = zext i32 %3592 to i64
  %3594 = load i64, i64* %PC.i875
  %3595 = add i64 %3594, 2
  store i64 %3595, i64* %PC.i875
  %3596 = and i64 %3593, 4294967295
  store i64 %3596, i64* %RAX.i877, align 8
  store %struct.Memory* %loadMem_423ed4, %struct.Memory** %MEMORY
  %loadMem_423ed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3598 = getelementptr inbounds %struct.GPR, %struct.GPR* %3597, i32 0, i32 33
  %3599 = getelementptr inbounds %struct.Reg, %struct.Reg* %3598, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %3599 to i64*
  %3600 = load i64, i64* %PC.i874
  %3601 = add i64 %3600, 1
  store i64 %3601, i64* %PC.i874
  %3602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3604 = bitcast %union.anon* %3603 to i32*
  %3605 = load i32, i32* %3604, align 8
  %3606 = sext i32 %3605 to i64
  %3607 = lshr i64 %3606, 32
  store i64 %3607, i64* %3602, align 8
  store %struct.Memory* %loadMem_423ed6, %struct.Memory** %MEMORY
  %loadMem_423ed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3609 = getelementptr inbounds %struct.GPR, %struct.GPR* %3608, i32 0, i32 33
  %3610 = getelementptr inbounds %struct.Reg, %struct.Reg* %3609, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %3610 to i64*
  %3611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3612 = getelementptr inbounds %struct.GPR, %struct.GPR* %3611, i32 0, i32 5
  %3613 = getelementptr inbounds %struct.Reg, %struct.Reg* %3612, i32 0, i32 0
  %ECX.i871 = bitcast %union.anon* %3613 to i32*
  %3614 = load i32, i32* %ECX.i871
  %3615 = zext i32 %3614 to i64
  %3616 = load i64, i64* %PC.i870
  %3617 = add i64 %3616, 2
  store i64 %3617, i64* %PC.i870
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3619 = bitcast %union.anon* %3618 to i32*
  %3620 = load i32, i32* %3619, align 8
  %3621 = zext i32 %3620 to i64
  %3622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %3623 = bitcast %union.anon* %3622 to i32*
  %3624 = load i32, i32* %3623, align 8
  %3625 = zext i32 %3624 to i64
  %3626 = shl i64 %3615, 32
  %3627 = ashr exact i64 %3626, 32
  %3628 = shl i64 %3625, 32
  %3629 = or i64 %3628, %3621
  %3630 = sdiv i64 %3629, %3627
  %3631 = shl i64 %3630, 32
  %3632 = ashr exact i64 %3631, 32
  %3633 = icmp eq i64 %3630, %3632
  br i1 %3633, label %3638, label %3634

; <label>:3634:                                   ; preds = %routine_idivl__ecx.exit893
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3636 = load i64, i64* %3635, align 8
  %3637 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3636, %struct.Memory* %loadMem_423ed7)
  br label %routine_idivl__ecx.exit

; <label>:3638:                                   ; preds = %routine_idivl__ecx.exit893
  %3639 = srem i64 %3629, %3627
  %3640 = getelementptr inbounds %union.anon, %union.anon* %3618, i64 0, i32 0
  %3641 = and i64 %3630, 4294967295
  store i64 %3641, i64* %3640, align 8
  %3642 = getelementptr inbounds %union.anon, %union.anon* %3622, i64 0, i32 0
  %3643 = and i64 %3639, 4294967295
  store i64 %3643, i64* %3642, align 8
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3644, align 1
  %3645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %3645, align 1
  %3646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3646, align 1
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3647, align 1
  %3648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3648, align 1
  %3649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3649, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %3634, %3638
  %3650 = phi %struct.Memory* [ %3637, %3634 ], [ %loadMem_423ed7, %3638 ]
  store %struct.Memory* %3650, %struct.Memory** %MEMORY
  %loadMem_423ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3652 = getelementptr inbounds %struct.GPR, %struct.GPR* %3651, i32 0, i32 33
  %3653 = getelementptr inbounds %struct.Reg, %struct.Reg* %3652, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %3653 to i64*
  %3654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3655 = getelementptr inbounds %struct.GPR, %struct.GPR* %3654, i32 0, i32 7
  %3656 = getelementptr inbounds %struct.Reg, %struct.Reg* %3655, i32 0, i32 0
  %EDX.i868 = bitcast %union.anon* %3656 to i32*
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3658 = getelementptr inbounds %struct.GPR, %struct.GPR* %3657, i32 0, i32 15
  %3659 = getelementptr inbounds %struct.Reg, %struct.Reg* %3658, i32 0, i32 0
  %RBP.i869 = bitcast %union.anon* %3659 to i64*
  %3660 = load i64, i64* %RBP.i869
  %3661 = sub i64 %3660, 236
  %3662 = load i32, i32* %EDX.i868
  %3663 = zext i32 %3662 to i64
  %3664 = load i64, i64* %PC.i867
  %3665 = add i64 %3664, 6
  store i64 %3665, i64* %PC.i867
  %3666 = inttoptr i64 %3661 to i32*
  store i32 %3662, i32* %3666
  store %struct.Memory* %loadMem_423ed9, %struct.Memory** %MEMORY
  %loadMem_423edf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3668 = getelementptr inbounds %struct.GPR, %struct.GPR* %3667, i32 0, i32 33
  %3669 = getelementptr inbounds %struct.Reg, %struct.Reg* %3668, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %3669 to i64*
  %3670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3671 = getelementptr inbounds %struct.GPR, %struct.GPR* %3670, i32 0, i32 17
  %3672 = getelementptr inbounds %struct.Reg, %struct.Reg* %3671, i32 0, i32 0
  %R8.i866 = bitcast %union.anon* %3672 to i64*
  %3673 = load i64, i64* %PC.i865
  %3674 = add i64 %3673, 8
  store i64 %3674, i64* %PC.i865
  %3675 = load i64, i64* bitcast (%G_0x710770_type* @G_0x710770 to i64*)
  store i64 %3675, i64* %R8.i866, align 8
  store %struct.Memory* %loadMem_423edf, %struct.Memory** %MEMORY
  %loadMem_423ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3677 = getelementptr inbounds %struct.GPR, %struct.GPR* %3676, i32 0, i32 33
  %3678 = getelementptr inbounds %struct.Reg, %struct.Reg* %3677, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %3678 to i64*
  %3679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3680 = getelementptr inbounds %struct.GPR, %struct.GPR* %3679, i32 0, i32 11
  %3681 = getelementptr inbounds %struct.Reg, %struct.Reg* %3680, i32 0, i32 0
  %RDI.i863 = bitcast %union.anon* %3681 to i64*
  %3682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3683 = getelementptr inbounds %struct.GPR, %struct.GPR* %3682, i32 0, i32 17
  %3684 = getelementptr inbounds %struct.Reg, %struct.Reg* %3683, i32 0, i32 0
  %R8.i864 = bitcast %union.anon* %3684 to i64*
  %3685 = load i64, i64* %R8.i864
  %3686 = load i64, i64* %PC.i862
  %3687 = add i64 %3686, 3
  store i64 %3687, i64* %PC.i862
  %3688 = inttoptr i64 %3685 to i64*
  %3689 = load i64, i64* %3688
  store i64 %3689, i64* %RDI.i863, align 8
  store %struct.Memory* %loadMem_423ee7, %struct.Memory** %MEMORY
  %loadMem_423eea = load %struct.Memory*, %struct.Memory** %MEMORY
  %3690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3691 = getelementptr inbounds %struct.GPR, %struct.GPR* %3690, i32 0, i32 33
  %3692 = getelementptr inbounds %struct.Reg, %struct.Reg* %3691, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %3692 to i64*
  %3693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3694 = getelementptr inbounds %struct.GPR, %struct.GPR* %3693, i32 0, i32 7
  %3695 = getelementptr inbounds %struct.Reg, %struct.Reg* %3694, i32 0, i32 0
  %RDX.i860 = bitcast %union.anon* %3695 to i64*
  %3696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3697 = getelementptr inbounds %struct.GPR, %struct.GPR* %3696, i32 0, i32 15
  %3698 = getelementptr inbounds %struct.Reg, %struct.Reg* %3697, i32 0, i32 0
  %RBP.i861 = bitcast %union.anon* %3698 to i64*
  %3699 = load i64, i64* %RBP.i861
  %3700 = sub i64 %3699, 180
  %3701 = load i64, i64* %PC.i859
  %3702 = add i64 %3701, 6
  store i64 %3702, i64* %PC.i859
  %3703 = inttoptr i64 %3700 to i32*
  %3704 = load i32, i32* %3703
  %3705 = zext i32 %3704 to i64
  store i64 %3705, i64* %RDX.i860, align 8
  store %struct.Memory* %loadMem_423eea, %struct.Memory** %MEMORY
  %loadMem_423ef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3707 = getelementptr inbounds %struct.GPR, %struct.GPR* %3706, i32 0, i32 33
  %3708 = getelementptr inbounds %struct.Reg, %struct.Reg* %3707, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %3708 to i64*
  %3709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3710 = getelementptr inbounds %struct.GPR, %struct.GPR* %3709, i32 0, i32 7
  %3711 = getelementptr inbounds %struct.Reg, %struct.Reg* %3710, i32 0, i32 0
  %RDX.i858 = bitcast %union.anon* %3711 to i64*
  %3712 = load i64, i64* %RDX.i858
  %3713 = load i64, i64* %PC.i857
  %3714 = add i64 %3713, 2
  store i64 %3714, i64* %PC.i857
  %3715 = trunc i64 %3712 to i32
  %3716 = shl i32 %3715, 1
  %3717 = icmp slt i32 %3715, 0
  %3718 = icmp slt i32 %3716, 0
  %3719 = xor i1 %3717, %3718
  %3720 = zext i32 %3716 to i64
  store i64 %3720, i64* %RDX.i858, align 8
  %3721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3722 = zext i1 %3717 to i8
  store i8 %3722, i8* %3721, align 1
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3724 = and i32 %3716, 254
  %3725 = call i32 @llvm.ctpop.i32(i32 %3724)
  %3726 = trunc i32 %3725 to i8
  %3727 = and i8 %3726, 1
  %3728 = xor i8 %3727, 1
  store i8 %3728, i8* %3723, align 1
  %3729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3729, align 1
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3731 = icmp eq i32 %3716, 0
  %3732 = zext i1 %3731 to i8
  store i8 %3732, i8* %3730, align 1
  %3733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3734 = lshr i32 %3716, 31
  %3735 = trunc i32 %3734 to i8
  store i8 %3735, i8* %3733, align 1
  %3736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3737 = zext i1 %3719 to i8
  store i8 %3737, i8* %3736, align 1
  store %struct.Memory* %loadMem_423ef0, %struct.Memory** %MEMORY
  %loadMem_423ef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3739 = getelementptr inbounds %struct.GPR, %struct.GPR* %3738, i32 0, i32 33
  %3740 = getelementptr inbounds %struct.Reg, %struct.Reg* %3739, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %3740 to i64*
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3742 = getelementptr inbounds %struct.GPR, %struct.GPR* %3741, i32 0, i32 7
  %3743 = getelementptr inbounds %struct.Reg, %struct.Reg* %3742, i32 0, i32 0
  %RDX.i856 = bitcast %union.anon* %3743 to i64*
  %3744 = load i64, i64* %RDX.i856
  %3745 = load i64, i64* %PC.i855
  %3746 = add i64 %3745, 3
  store i64 %3746, i64* %PC.i855
  %3747 = trunc i64 %3744 to i32
  %3748 = add i32 1, %3747
  %3749 = zext i32 %3748 to i64
  store i64 %3749, i64* %RDX.i856, align 8
  %3750 = icmp ult i32 %3748, %3747
  %3751 = icmp ult i32 %3748, 1
  %3752 = or i1 %3750, %3751
  %3753 = zext i1 %3752 to i8
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3753, i8* %3754, align 1
  %3755 = and i32 %3748, 255
  %3756 = call i32 @llvm.ctpop.i32(i32 %3755)
  %3757 = trunc i32 %3756 to i8
  %3758 = and i8 %3757, 1
  %3759 = xor i8 %3758, 1
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3759, i8* %3760, align 1
  %3761 = xor i64 1, %3744
  %3762 = trunc i64 %3761 to i32
  %3763 = xor i32 %3762, %3748
  %3764 = lshr i32 %3763, 4
  %3765 = trunc i32 %3764 to i8
  %3766 = and i8 %3765, 1
  %3767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3766, i8* %3767, align 1
  %3768 = icmp eq i32 %3748, 0
  %3769 = zext i1 %3768 to i8
  %3770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3769, i8* %3770, align 1
  %3771 = lshr i32 %3748, 31
  %3772 = trunc i32 %3771 to i8
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3772, i8* %3773, align 1
  %3774 = lshr i32 %3747, 31
  %3775 = xor i32 %3771, %3774
  %3776 = add i32 %3775, %3771
  %3777 = icmp eq i32 %3776, 2
  %3778 = zext i1 %3777 to i8
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3778, i8* %3779, align 1
  store %struct.Memory* %loadMem_423ef3, %struct.Memory** %MEMORY
  %loadMem_423ef6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3781 = getelementptr inbounds %struct.GPR, %struct.GPR* %3780, i32 0, i32 33
  %3782 = getelementptr inbounds %struct.Reg, %struct.Reg* %3781, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %3782 to i64*
  %3783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3784 = getelementptr inbounds %struct.GPR, %struct.GPR* %3783, i32 0, i32 19
  %3785 = getelementptr inbounds %struct.Reg, %struct.Reg* %3784, i32 0, i32 0
  %R9D.i853 = bitcast %union.anon* %3785 to i32*
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3787 = getelementptr inbounds %struct.GPR, %struct.GPR* %3786, i32 0, i32 15
  %3788 = getelementptr inbounds %struct.Reg, %struct.Reg* %3787, i32 0, i32 0
  %RBP.i854 = bitcast %union.anon* %3788 to i64*
  %3789 = bitcast i32* %R9D.i853 to i64*
  %3790 = load i64, i64* %RBP.i854
  %3791 = sub i64 %3790, 180
  %3792 = load i64, i64* %PC.i852
  %3793 = add i64 %3792, 7
  store i64 %3793, i64* %PC.i852
  %3794 = inttoptr i64 %3791 to i32*
  %3795 = load i32, i32* %3794
  %3796 = zext i32 %3795 to i64
  store i64 %3796, i64* %3789, align 8
  store %struct.Memory* %loadMem_423ef6, %struct.Memory** %MEMORY
  %loadMem_423efd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3798 = getelementptr inbounds %struct.GPR, %struct.GPR* %3797, i32 0, i32 33
  %3799 = getelementptr inbounds %struct.Reg, %struct.Reg* %3798, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %3799 to i64*
  %3800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3801 = getelementptr inbounds %struct.GPR, %struct.GPR* %3800, i32 0, i32 19
  %3802 = getelementptr inbounds %struct.Reg, %struct.Reg* %3801, i32 0, i32 0
  %R9D.i851 = bitcast %union.anon* %3802 to i32*
  %3803 = bitcast i32* %R9D.i851 to i64*
  %3804 = load i32, i32* %R9D.i851
  %3805 = zext i32 %3804 to i64
  %3806 = load i64, i64* %PC.i850
  %3807 = add i64 %3806, 3
  store i64 %3807, i64* %PC.i850
  %3808 = shl i32 %3804, 1
  %3809 = icmp slt i32 %3804, 0
  %3810 = icmp slt i32 %3808, 0
  %3811 = xor i1 %3809, %3810
  %3812 = zext i32 %3808 to i64
  store i64 %3812, i64* %3803, align 8
  %3813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3814 = zext i1 %3809 to i8
  store i8 %3814, i8* %3813, align 1
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3816 = and i32 %3808, 254
  %3817 = call i32 @llvm.ctpop.i32(i32 %3816)
  %3818 = trunc i32 %3817 to i8
  %3819 = and i8 %3818, 1
  %3820 = xor i8 %3819, 1
  store i8 %3820, i8* %3815, align 1
  %3821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3821, align 1
  %3822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3823 = icmp eq i32 %3808, 0
  %3824 = zext i1 %3823 to i8
  store i8 %3824, i8* %3822, align 1
  %3825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3826 = lshr i32 %3808, 31
  %3827 = trunc i32 %3826 to i8
  store i8 %3827, i8* %3825, align 1
  %3828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3829 = zext i1 %3811 to i8
  store i8 %3829, i8* %3828, align 1
  store %struct.Memory* %loadMem_423efd, %struct.Memory** %MEMORY
  %loadMem_423f01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3831 = getelementptr inbounds %struct.GPR, %struct.GPR* %3830, i32 0, i32 33
  %3832 = getelementptr inbounds %struct.Reg, %struct.Reg* %3831, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %3832 to i64*
  %3833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3834 = getelementptr inbounds %struct.GPR, %struct.GPR* %3833, i32 0, i32 19
  %3835 = getelementptr inbounds %struct.Reg, %struct.Reg* %3834, i32 0, i32 0
  %R9D.i849 = bitcast %union.anon* %3835 to i32*
  %3836 = bitcast i32* %R9D.i849 to i64*
  %3837 = load i32, i32* %R9D.i849
  %3838 = zext i32 %3837 to i64
  %3839 = load i64, i64* %PC.i848
  %3840 = add i64 %3839, 4
  store i64 %3840, i64* %PC.i848
  %3841 = add i32 1, %3837
  %3842 = zext i32 %3841 to i64
  store i64 %3842, i64* %3836, align 8
  %3843 = icmp ult i32 %3841, %3837
  %3844 = icmp ult i32 %3841, 1
  %3845 = or i1 %3843, %3844
  %3846 = zext i1 %3845 to i8
  %3847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3846, i8* %3847, align 1
  %3848 = and i32 %3841, 255
  %3849 = call i32 @llvm.ctpop.i32(i32 %3848)
  %3850 = trunc i32 %3849 to i8
  %3851 = and i8 %3850, 1
  %3852 = xor i8 %3851, 1
  %3853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3852, i8* %3853, align 1
  %3854 = xor i64 1, %3838
  %3855 = trunc i64 %3854 to i32
  %3856 = xor i32 %3855, %3841
  %3857 = lshr i32 %3856, 4
  %3858 = trunc i32 %3857 to i8
  %3859 = and i8 %3858, 1
  %3860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3859, i8* %3860, align 1
  %3861 = icmp eq i32 %3841, 0
  %3862 = zext i1 %3861 to i8
  %3863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3862, i8* %3863, align 1
  %3864 = lshr i32 %3841, 31
  %3865 = trunc i32 %3864 to i8
  %3866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3865, i8* %3866, align 1
  %3867 = lshr i32 %3837, 31
  %3868 = xor i32 %3864, %3867
  %3869 = add i32 %3868, %3864
  %3870 = icmp eq i32 %3869, 2
  %3871 = zext i1 %3870 to i8
  %3872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3871, i8* %3872, align 1
  store %struct.Memory* %loadMem_423f01, %struct.Memory** %MEMORY
  %loadMem_423f05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3874 = getelementptr inbounds %struct.GPR, %struct.GPR* %3873, i32 0, i32 33
  %3875 = getelementptr inbounds %struct.Reg, %struct.Reg* %3874, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %3875 to i64*
  %3876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3877 = getelementptr inbounds %struct.GPR, %struct.GPR* %3876, i32 0, i32 19
  %3878 = getelementptr inbounds %struct.Reg, %struct.Reg* %3877, i32 0, i32 0
  %R9D.i846 = bitcast %union.anon* %3878 to i32*
  %3879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3880 = getelementptr inbounds %struct.GPR, %struct.GPR* %3879, i32 0, i32 7
  %3881 = getelementptr inbounds %struct.Reg, %struct.Reg* %3880, i32 0, i32 0
  %RDX.i847 = bitcast %union.anon* %3881 to i64*
  %3882 = load i64, i64* %RDX.i847
  %3883 = load i32, i32* %R9D.i846
  %3884 = zext i32 %3883 to i64
  %3885 = load i64, i64* %PC.i845
  %3886 = add i64 %3885, 4
  store i64 %3886, i64* %PC.i845
  %3887 = shl i64 %3882, 32
  %3888 = ashr exact i64 %3887, 32
  %3889 = shl i64 %3884, 32
  %3890 = ashr exact i64 %3889, 32
  %3891 = mul i64 %3890, %3888
  %3892 = trunc i64 %3891 to i32
  %3893 = and i64 %3891, 4294967295
  store i64 %3893, i64* %RDX.i847, align 8
  %3894 = shl i64 %3891, 32
  %3895 = ashr exact i64 %3894, 32
  %3896 = icmp ne i64 %3895, %3891
  %3897 = zext i1 %3896 to i8
  %3898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3897, i8* %3898, align 1
  %3899 = and i32 %3892, 255
  %3900 = call i32 @llvm.ctpop.i32(i32 %3899)
  %3901 = trunc i32 %3900 to i8
  %3902 = and i8 %3901, 1
  %3903 = xor i8 %3902, 1
  %3904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3903, i8* %3904, align 1
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3905, align 1
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3906, align 1
  %3907 = lshr i32 %3892, 31
  %3908 = trunc i32 %3907 to i8
  %3909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3908, i8* %3909, align 1
  %3910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3897, i8* %3910, align 1
  store %struct.Memory* %loadMem_423f05, %struct.Memory** %MEMORY
  %loadMem_423f09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3912 = getelementptr inbounds %struct.GPR, %struct.GPR* %3911, i32 0, i32 33
  %3913 = getelementptr inbounds %struct.Reg, %struct.Reg* %3912, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %3913 to i64*
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3915 = getelementptr inbounds %struct.GPR, %struct.GPR* %3914, i32 0, i32 7
  %3916 = getelementptr inbounds %struct.Reg, %struct.Reg* %3915, i32 0, i32 0
  %EDX.i843 = bitcast %union.anon* %3916 to i32*
  %3917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3918 = getelementptr inbounds %struct.GPR, %struct.GPR* %3917, i32 0, i32 7
  %3919 = getelementptr inbounds %struct.Reg, %struct.Reg* %3918, i32 0, i32 0
  %RDX.i844 = bitcast %union.anon* %3919 to i64*
  %3920 = load i32, i32* %EDX.i843
  %3921 = zext i32 %3920 to i64
  %3922 = load i64, i64* %PC.i842
  %3923 = add i64 %3922, 3
  store i64 %3923, i64* %PC.i842
  %3924 = shl i64 %3921, 32
  %3925 = ashr exact i64 %3924, 32
  store i64 %3925, i64* %RDX.i844, align 8
  store %struct.Memory* %loadMem_423f09, %struct.Memory** %MEMORY
  %loadMem1_423f0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3927 = getelementptr inbounds %struct.GPR, %struct.GPR* %3926, i32 0, i32 33
  %3928 = getelementptr inbounds %struct.Reg, %struct.Reg* %3927, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %3928 to i64*
  %3929 = load i64, i64* %PC.i841
  %3930 = add i64 %3929, -143004
  %3931 = load i64, i64* %PC.i841
  %3932 = add i64 %3931, 5
  %3933 = load i64, i64* %PC.i841
  %3934 = add i64 %3933, 5
  store i64 %3934, i64* %PC.i841
  %3935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3936 = load i64, i64* %3935, align 8
  %3937 = add i64 %3936, -8
  %3938 = inttoptr i64 %3937 to i64*
  store i64 %3932, i64* %3938
  store i64 %3937, i64* %3935, align 8
  %3939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3930, i64* %3939, align 8
  store %struct.Memory* %loadMem1_423f0c, %struct.Memory** %MEMORY
  %loadMem2_423f0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_423f0c = load i64, i64* %3
  %3940 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %loadMem2_423f0c)
  store %struct.Memory* %3940, %struct.Memory** %MEMORY
  %loadMem_423f11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3942 = getelementptr inbounds %struct.GPR, %struct.GPR* %3941, i32 0, i32 33
  %3943 = getelementptr inbounds %struct.Reg, %struct.Reg* %3942, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %3943 to i64*
  %3944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3945 = getelementptr inbounds %struct.GPR, %struct.GPR* %3944, i32 0, i32 7
  %3946 = getelementptr inbounds %struct.Reg, %struct.Reg* %3945, i32 0, i32 0
  %RDX.i838 = bitcast %union.anon* %3946 to i64*
  %3947 = load i64, i64* %PC.i837
  %3948 = add i64 %3947, 8
  store i64 %3948, i64* %PC.i837
  %3949 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %3949, i64* %RDX.i838, align 8
  store %struct.Memory* %loadMem_423f11, %struct.Memory** %MEMORY
  %loadMem_423f19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3951 = getelementptr inbounds %struct.GPR, %struct.GPR* %3950, i32 0, i32 33
  %3952 = getelementptr inbounds %struct.Reg, %struct.Reg* %3951, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %3952 to i64*
  %3953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3954 = getelementptr inbounds %struct.GPR, %struct.GPR* %3953, i32 0, i32 7
  %3955 = getelementptr inbounds %struct.Reg, %struct.Reg* %3954, i32 0, i32 0
  %RDX.i836 = bitcast %union.anon* %3955 to i64*
  %3956 = load i64, i64* %RDX.i836
  %3957 = add i64 %3956, 24
  %3958 = load i64, i64* %PC.i835
  %3959 = add i64 %3958, 4
  store i64 %3959, i64* %PC.i835
  %3960 = inttoptr i64 %3957 to i32*
  %3961 = load i32, i32* %3960
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3962, align 1
  %3963 = and i32 %3961, 255
  %3964 = call i32 @llvm.ctpop.i32(i32 %3963)
  %3965 = trunc i32 %3964 to i8
  %3966 = and i8 %3965, 1
  %3967 = xor i8 %3966, 1
  %3968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3967, i8* %3968, align 1
  %3969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3969, align 1
  %3970 = icmp eq i32 %3961, 0
  %3971 = zext i1 %3970 to i8
  %3972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3971, i8* %3972, align 1
  %3973 = lshr i32 %3961, 31
  %3974 = trunc i32 %3973 to i8
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3974, i8* %3975, align 1
  %3976 = lshr i32 %3961, 31
  %3977 = xor i32 %3973, %3976
  %3978 = add i32 %3977, %3976
  %3979 = icmp eq i32 %3978, 2
  %3980 = zext i1 %3979 to i8
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3980, i8* %3981, align 1
  store %struct.Memory* %loadMem_423f19, %struct.Memory** %MEMORY
  %loadMem_423f1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3983 = getelementptr inbounds %struct.GPR, %struct.GPR* %3982, i32 0, i32 33
  %3984 = getelementptr inbounds %struct.Reg, %struct.Reg* %3983, i32 0, i32 0
  %PC.i834 = bitcast %union.anon* %3984 to i64*
  %3985 = load i64, i64* %PC.i834
  %3986 = add i64 %3985, 276
  %3987 = load i64, i64* %PC.i834
  %3988 = add i64 %3987, 6
  %3989 = load i64, i64* %PC.i834
  %3990 = add i64 %3989, 6
  store i64 %3990, i64* %PC.i834
  %3991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3992 = load i8, i8* %3991, align 1
  store i8 %3992, i8* %BRANCH_TAKEN, align 1
  %3993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3994 = icmp ne i8 %3992, 0
  %3995 = select i1 %3994, i64 %3986, i64 %3988
  store i64 %3995, i64* %3993, align 8
  store %struct.Memory* %loadMem_423f1d, %struct.Memory** %MEMORY
  %loadBr_423f1d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_423f1d = icmp eq i8 %loadBr_423f1d, 1
  br i1 %cmpBr_423f1d, label %block_.L_424031, label %block_423f23

block_423f23:                                     ; preds = %routine_idivl__ecx.exit
  %loadMem_423f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3997 = getelementptr inbounds %struct.GPR, %struct.GPR* %3996, i32 0, i32 33
  %3998 = getelementptr inbounds %struct.Reg, %struct.Reg* %3997, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %3998 to i64*
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4000 = getelementptr inbounds %struct.GPR, %struct.GPR* %3999, i32 0, i32 1
  %4001 = getelementptr inbounds %struct.Reg, %struct.Reg* %4000, i32 0, i32 0
  %RAX.i832 = bitcast %union.anon* %4001 to i64*
  %4002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4003 = getelementptr inbounds %struct.GPR, %struct.GPR* %4002, i32 0, i32 15
  %4004 = getelementptr inbounds %struct.Reg, %struct.Reg* %4003, i32 0, i32 0
  %RBP.i833 = bitcast %union.anon* %4004 to i64*
  %4005 = load i64, i64* %RBP.i833
  %4006 = sub i64 %4005, 80
  %4007 = load i64, i64* %PC.i831
  %4008 = add i64 %4007, 4
  store i64 %4008, i64* %PC.i831
  %4009 = inttoptr i64 %4006 to i64*
  %4010 = load i64, i64* %4009
  store i64 %4010, i64* %RAX.i832, align 8
  store %struct.Memory* %loadMem_423f23, %struct.Memory** %MEMORY
  %loadMem_423f27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4012 = getelementptr inbounds %struct.GPR, %struct.GPR* %4011, i32 0, i32 33
  %4013 = getelementptr inbounds %struct.Reg, %struct.Reg* %4012, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %4013 to i64*
  %4014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4015 = getelementptr inbounds %struct.GPR, %struct.GPR* %4014, i32 0, i32 1
  %4016 = getelementptr inbounds %struct.Reg, %struct.Reg* %4015, i32 0, i32 0
  %RAX.i829 = bitcast %union.anon* %4016 to i64*
  %4017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4018 = getelementptr inbounds %struct.GPR, %struct.GPR* %4017, i32 0, i32 5
  %4019 = getelementptr inbounds %struct.Reg, %struct.Reg* %4018, i32 0, i32 0
  %RCX.i830 = bitcast %union.anon* %4019 to i64*
  %4020 = load i64, i64* %RAX.i829
  %4021 = load i64, i64* %PC.i828
  %4022 = add i64 %4021, 3
  store i64 %4022, i64* %PC.i828
  %4023 = inttoptr i64 %4020 to i16*
  %4024 = load i16, i16* %4023
  %4025 = sext i16 %4024 to i64
  %4026 = and i64 %4025, 4294967295
  store i64 %4026, i64* %RCX.i830, align 8
  store %struct.Memory* %loadMem_423f27, %struct.Memory** %MEMORY
  %loadMem_423f2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4028 = getelementptr inbounds %struct.GPR, %struct.GPR* %4027, i32 0, i32 33
  %4029 = getelementptr inbounds %struct.Reg, %struct.Reg* %4028, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %4029 to i64*
  %4030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4031 = getelementptr inbounds %struct.GPR, %struct.GPR* %4030, i32 0, i32 5
  %4032 = getelementptr inbounds %struct.Reg, %struct.Reg* %4031, i32 0, i32 0
  %ECX.i826 = bitcast %union.anon* %4032 to i32*
  %4033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4034 = getelementptr inbounds %struct.GPR, %struct.GPR* %4033, i32 0, i32 15
  %4035 = getelementptr inbounds %struct.Reg, %struct.Reg* %4034, i32 0, i32 0
  %RBP.i827 = bitcast %union.anon* %4035 to i64*
  %4036 = load i64, i64* %RBP.i827
  %4037 = sub i64 %4036, 124
  %4038 = load i32, i32* %ECX.i826
  %4039 = zext i32 %4038 to i64
  %4040 = load i64, i64* %PC.i825
  %4041 = add i64 %4040, 3
  store i64 %4041, i64* %PC.i825
  %4042 = inttoptr i64 %4037 to i32*
  store i32 %4038, i32* %4042
  store %struct.Memory* %loadMem_423f2a, %struct.Memory** %MEMORY
  %loadMem_423f2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4044 = getelementptr inbounds %struct.GPR, %struct.GPR* %4043, i32 0, i32 33
  %4045 = getelementptr inbounds %struct.Reg, %struct.Reg* %4044, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %4045 to i64*
  %4046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4047 = getelementptr inbounds %struct.GPR, %struct.GPR* %4046, i32 0, i32 1
  %4048 = getelementptr inbounds %struct.Reg, %struct.Reg* %4047, i32 0, i32 0
  %RAX.i823 = bitcast %union.anon* %4048 to i64*
  %4049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4050 = getelementptr inbounds %struct.GPR, %struct.GPR* %4049, i32 0, i32 15
  %4051 = getelementptr inbounds %struct.Reg, %struct.Reg* %4050, i32 0, i32 0
  %RBP.i824 = bitcast %union.anon* %4051 to i64*
  %4052 = load i64, i64* %RBP.i824
  %4053 = sub i64 %4052, 88
  %4054 = load i64, i64* %PC.i822
  %4055 = add i64 %4054, 4
  store i64 %4055, i64* %PC.i822
  %4056 = inttoptr i64 %4053 to i64*
  %4057 = load i64, i64* %4056
  store i64 %4057, i64* %RAX.i823, align 8
  store %struct.Memory* %loadMem_423f2d, %struct.Memory** %MEMORY
  %loadMem_423f31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4059 = getelementptr inbounds %struct.GPR, %struct.GPR* %4058, i32 0, i32 33
  %4060 = getelementptr inbounds %struct.Reg, %struct.Reg* %4059, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %4060 to i64*
  %4061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4062 = getelementptr inbounds %struct.GPR, %struct.GPR* %4061, i32 0, i32 1
  %4063 = getelementptr inbounds %struct.Reg, %struct.Reg* %4062, i32 0, i32 0
  %RAX.i820 = bitcast %union.anon* %4063 to i64*
  %4064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4065 = getelementptr inbounds %struct.GPR, %struct.GPR* %4064, i32 0, i32 5
  %4066 = getelementptr inbounds %struct.Reg, %struct.Reg* %4065, i32 0, i32 0
  %RCX.i821 = bitcast %union.anon* %4066 to i64*
  %4067 = load i64, i64* %RAX.i820
  %4068 = load i64, i64* %PC.i819
  %4069 = add i64 %4068, 3
  store i64 %4069, i64* %PC.i819
  %4070 = inttoptr i64 %4067 to i16*
  %4071 = load i16, i16* %4070
  %4072 = sext i16 %4071 to i64
  %4073 = and i64 %4072, 4294967295
  store i64 %4073, i64* %RCX.i821, align 8
  store %struct.Memory* %loadMem_423f31, %struct.Memory** %MEMORY
  %loadMem_423f34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4075 = getelementptr inbounds %struct.GPR, %struct.GPR* %4074, i32 0, i32 33
  %4076 = getelementptr inbounds %struct.Reg, %struct.Reg* %4075, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %4076 to i64*
  %4077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4078 = getelementptr inbounds %struct.GPR, %struct.GPR* %4077, i32 0, i32 5
  %4079 = getelementptr inbounds %struct.Reg, %struct.Reg* %4078, i32 0, i32 0
  %ECX.i817 = bitcast %union.anon* %4079 to i32*
  %4080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4081 = getelementptr inbounds %struct.GPR, %struct.GPR* %4080, i32 0, i32 15
  %4082 = getelementptr inbounds %struct.Reg, %struct.Reg* %4081, i32 0, i32 0
  %RBP.i818 = bitcast %union.anon* %4082 to i64*
  %4083 = load i64, i64* %RBP.i818
  %4084 = sub i64 %4083, 128
  %4085 = load i32, i32* %ECX.i817
  %4086 = zext i32 %4085 to i64
  %4087 = load i64, i64* %PC.i816
  %4088 = add i64 %4087, 3
  store i64 %4088, i64* %PC.i816
  %4089 = inttoptr i64 %4084 to i32*
  store i32 %4085, i32* %4089
  store %struct.Memory* %loadMem_423f34, %struct.Memory** %MEMORY
  %loadMem_423f37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4091 = getelementptr inbounds %struct.GPR, %struct.GPR* %4090, i32 0, i32 33
  %4092 = getelementptr inbounds %struct.Reg, %struct.Reg* %4091, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %4092 to i64*
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4094 = getelementptr inbounds %struct.GPR, %struct.GPR* %4093, i32 0, i32 5
  %4095 = getelementptr inbounds %struct.Reg, %struct.Reg* %4094, i32 0, i32 0
  %RCX.i814 = bitcast %union.anon* %4095 to i64*
  %4096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4097 = getelementptr inbounds %struct.GPR, %struct.GPR* %4096, i32 0, i32 15
  %4098 = getelementptr inbounds %struct.Reg, %struct.Reg* %4097, i32 0, i32 0
  %RBP.i815 = bitcast %union.anon* %4098 to i64*
  %4099 = load i64, i64* %RBP.i815
  %4100 = sub i64 %4099, 148
  %4101 = load i64, i64* %PC.i813
  %4102 = add i64 %4101, 6
  store i64 %4102, i64* %PC.i813
  %4103 = inttoptr i64 %4100 to i32*
  %4104 = load i32, i32* %4103
  %4105 = zext i32 %4104 to i64
  store i64 %4105, i64* %RCX.i814, align 8
  store %struct.Memory* %loadMem_423f37, %struct.Memory** %MEMORY
  %loadMem_423f3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4107 = getelementptr inbounds %struct.GPR, %struct.GPR* %4106, i32 0, i32 33
  %4108 = getelementptr inbounds %struct.Reg, %struct.Reg* %4107, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %4108 to i64*
  %4109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4110 = getelementptr inbounds %struct.GPR, %struct.GPR* %4109, i32 0, i32 1
  %4111 = getelementptr inbounds %struct.Reg, %struct.Reg* %4110, i32 0, i32 0
  %RAX.i812 = bitcast %union.anon* %4111 to i64*
  %4112 = load i64, i64* %PC.i811
  %4113 = add i64 %4112, 8
  store i64 %4113, i64* %PC.i811
  %4114 = load i64, i64* bitcast (%G_0x6f8f00_type* @G_0x6f8f00 to i64*)
  store i64 %4114, i64* %RAX.i812, align 8
  store %struct.Memory* %loadMem_423f3d, %struct.Memory** %MEMORY
  %loadMem_423f45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4116 = getelementptr inbounds %struct.GPR, %struct.GPR* %4115, i32 0, i32 33
  %4117 = getelementptr inbounds %struct.Reg, %struct.Reg* %4116, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %4117 to i64*
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4119 = getelementptr inbounds %struct.GPR, %struct.GPR* %4118, i32 0, i32 7
  %4120 = getelementptr inbounds %struct.Reg, %struct.Reg* %4119, i32 0, i32 0
  %RDX.i809 = bitcast %union.anon* %4120 to i64*
  %4121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4122 = getelementptr inbounds %struct.GPR, %struct.GPR* %4121, i32 0, i32 15
  %4123 = getelementptr inbounds %struct.Reg, %struct.Reg* %4122, i32 0, i32 0
  %RBP.i810 = bitcast %union.anon* %4123 to i64*
  %4124 = load i64, i64* %RBP.i810
  %4125 = sub i64 %4124, 124
  %4126 = load i64, i64* %PC.i808
  %4127 = add i64 %4126, 3
  store i64 %4127, i64* %PC.i808
  %4128 = inttoptr i64 %4125 to i32*
  %4129 = load i32, i32* %4128
  %4130 = zext i32 %4129 to i64
  store i64 %4130, i64* %RDX.i809, align 8
  store %struct.Memory* %loadMem_423f45, %struct.Memory** %MEMORY
  %loadMem_423f48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4132 = getelementptr inbounds %struct.GPR, %struct.GPR* %4131, i32 0, i32 33
  %4133 = getelementptr inbounds %struct.Reg, %struct.Reg* %4132, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %4133 to i64*
  %4134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4135 = getelementptr inbounds %struct.GPR, %struct.GPR* %4134, i32 0, i32 9
  %4136 = getelementptr inbounds %struct.Reg, %struct.Reg* %4135, i32 0, i32 0
  %RSI.i806 = bitcast %union.anon* %4136 to i64*
  %4137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4138 = getelementptr inbounds %struct.GPR, %struct.GPR* %4137, i32 0, i32 15
  %4139 = getelementptr inbounds %struct.Reg, %struct.Reg* %4138, i32 0, i32 0
  %RBP.i807 = bitcast %union.anon* %4139 to i64*
  %4140 = load i64, i64* %RBP.i807
  %4141 = sub i64 %4140, 152
  %4142 = load i64, i64* %PC.i805
  %4143 = add i64 %4142, 6
  store i64 %4143, i64* %PC.i805
  %4144 = inttoptr i64 %4141 to i32*
  %4145 = load i32, i32* %4144
  %4146 = zext i32 %4145 to i64
  store i64 %4146, i64* %RSI.i806, align 8
  store %struct.Memory* %loadMem_423f48, %struct.Memory** %MEMORY
  %loadMem_423f4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4148 = getelementptr inbounds %struct.GPR, %struct.GPR* %4147, i32 0, i32 33
  %4149 = getelementptr inbounds %struct.Reg, %struct.Reg* %4148, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %4149 to i64*
  %4150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4151 = getelementptr inbounds %struct.GPR, %struct.GPR* %4150, i32 0, i32 5
  %4152 = getelementptr inbounds %struct.Reg, %struct.Reg* %4151, i32 0, i32 0
  %ECX.i803 = bitcast %union.anon* %4152 to i32*
  %4153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4154 = getelementptr inbounds %struct.GPR, %struct.GPR* %4153, i32 0, i32 15
  %4155 = getelementptr inbounds %struct.Reg, %struct.Reg* %4154, i32 0, i32 0
  %RBP.i804 = bitcast %union.anon* %4155 to i64*
  %4156 = load i64, i64* %RBP.i804
  %4157 = sub i64 %4156, 252
  %4158 = load i32, i32* %ECX.i803
  %4159 = zext i32 %4158 to i64
  %4160 = load i64, i64* %PC.i802
  %4161 = add i64 %4160, 6
  store i64 %4161, i64* %PC.i802
  %4162 = inttoptr i64 %4157 to i32*
  store i32 %4158, i32* %4162
  store %struct.Memory* %loadMem_423f4e, %struct.Memory** %MEMORY
  %loadMem_423f54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4164 = getelementptr inbounds %struct.GPR, %struct.GPR* %4163, i32 0, i32 33
  %4165 = getelementptr inbounds %struct.Reg, %struct.Reg* %4164, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %4165 to i64*
  %4166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4167 = getelementptr inbounds %struct.GPR, %struct.GPR* %4166, i32 0, i32 9
  %4168 = getelementptr inbounds %struct.Reg, %struct.Reg* %4167, i32 0, i32 0
  %ESI.i800 = bitcast %union.anon* %4168 to i32*
  %4169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4170 = getelementptr inbounds %struct.GPR, %struct.GPR* %4169, i32 0, i32 5
  %4171 = getelementptr inbounds %struct.Reg, %struct.Reg* %4170, i32 0, i32 0
  %RCX.i801 = bitcast %union.anon* %4171 to i64*
  %4172 = load i32, i32* %ESI.i800
  %4173 = zext i32 %4172 to i64
  %4174 = load i64, i64* %PC.i799
  %4175 = add i64 %4174, 2
  store i64 %4175, i64* %PC.i799
  %4176 = and i64 %4173, 4294967295
  store i64 %4176, i64* %RCX.i801, align 8
  store %struct.Memory* %loadMem_423f54, %struct.Memory** %MEMORY
  %loadMem_423f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4178 = getelementptr inbounds %struct.GPR, %struct.GPR* %4177, i32 0, i32 33
  %4179 = getelementptr inbounds %struct.Reg, %struct.Reg* %4178, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %4179 to i64*
  %4180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4181 = getelementptr inbounds %struct.GPR, %struct.GPR* %4180, i32 0, i32 5
  %4182 = getelementptr inbounds %struct.Reg, %struct.Reg* %4181, i32 0, i32 0
  %4183 = bitcast %union.anon* %4182 to %struct.anon.2*
  %CL.i796 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4183, i32 0, i32 0
  %4184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4185 = getelementptr inbounds %struct.GPR, %struct.GPR* %4184, i32 0, i32 7
  %4186 = getelementptr inbounds %struct.Reg, %struct.Reg* %4185, i32 0, i32 0
  %RDX.i797 = bitcast %union.anon* %4186 to i64*
  %4187 = load i64, i64* %RDX.i797
  %4188 = load i8, i8* %CL.i796
  %4189 = zext i8 %4188 to i64
  %4190 = load i64, i64* %PC.i795
  %4191 = add i64 %4190, 2
  store i64 %4191, i64* %PC.i795
  %4192 = trunc i64 %4189 to i5
  switch i5 %4192, label %4199 [
    i5 0, label %routine_shll__cl___edx.exit798
    i5 1, label %4193
  ]

; <label>:4193:                                   ; preds = %block_423f23
  %4194 = trunc i64 %4187 to i32
  %4195 = shl i32 %4194, 1
  %4196 = icmp slt i32 %4194, 0
  %4197 = icmp slt i32 %4195, 0
  %4198 = xor i1 %4196, %4197
  br label %4208

; <label>:4199:                                   ; preds = %block_423f23
  %4200 = and i64 %4189, 31
  %4201 = add i64 %4200, 4294967295
  %4202 = and i64 %4187, 4294967295
  %4203 = and i64 %4201, 4294967295
  %4204 = shl i64 %4202, %4203
  %4205 = trunc i64 %4204 to i32
  %4206 = icmp slt i32 %4205, 0
  %4207 = shl i32 %4205, 1
  br label %4208

; <label>:4208:                                   ; preds = %4199, %4193
  %4209 = phi i1 [ %4196, %4193 ], [ %4206, %4199 ]
  %4210 = phi i1 [ %4198, %4193 ], [ false, %4199 ]
  %4211 = phi i32 [ %4195, %4193 ], [ %4207, %4199 ]
  %4212 = zext i32 %4211 to i64
  store i64 %4212, i64* %RDX.i797, align 8
  %4213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4214 = zext i1 %4209 to i8
  store i8 %4214, i8* %4213, align 1
  %4215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4216 = and i32 %4211, 254
  %4217 = call i32 @llvm.ctpop.i32(i32 %4216)
  %4218 = trunc i32 %4217 to i8
  %4219 = and i8 %4218, 1
  %4220 = xor i8 %4219, 1
  store i8 %4220, i8* %4215, align 1
  %4221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4221, align 1
  %4222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4223 = icmp eq i32 %4211, 0
  %4224 = zext i1 %4223 to i8
  store i8 %4224, i8* %4222, align 1
  %4225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4226 = lshr i32 %4211, 31
  %4227 = trunc i32 %4226 to i8
  store i8 %4227, i8* %4225, align 1
  %4228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4229 = zext i1 %4210 to i8
  store i8 %4229, i8* %4228, align 1
  br label %routine_shll__cl___edx.exit798

routine_shll__cl___edx.exit798:                   ; preds = %block_423f23, %4208
  store %struct.Memory* %loadMem_423f56, %struct.Memory** %MEMORY
  %loadMem_423f58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4231 = getelementptr inbounds %struct.GPR, %struct.GPR* %4230, i32 0, i32 33
  %4232 = getelementptr inbounds %struct.Reg, %struct.Reg* %4231, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %4232 to i64*
  %4233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4234 = getelementptr inbounds %struct.GPR, %struct.GPR* %4233, i32 0, i32 9
  %4235 = getelementptr inbounds %struct.Reg, %struct.Reg* %4234, i32 0, i32 0
  %RSI.i793 = bitcast %union.anon* %4235 to i64*
  %4236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4237 = getelementptr inbounds %struct.GPR, %struct.GPR* %4236, i32 0, i32 15
  %4238 = getelementptr inbounds %struct.Reg, %struct.Reg* %4237, i32 0, i32 0
  %RBP.i794 = bitcast %union.anon* %4238 to i64*
  %4239 = load i64, i64* %RBP.i794
  %4240 = sub i64 %4239, 70
  %4241 = load i64, i64* %PC.i792
  %4242 = add i64 %4241, 4
  store i64 %4242, i64* %PC.i792
  %4243 = inttoptr i64 %4240 to i16*
  %4244 = load i16, i16* %4243
  %4245 = sext i16 %4244 to i64
  %4246 = and i64 %4245, 4294967295
  store i64 %4246, i64* %RSI.i793, align 8
  store %struct.Memory* %loadMem_423f58, %struct.Memory** %MEMORY
  %loadMem_423f5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4248 = getelementptr inbounds %struct.GPR, %struct.GPR* %4247, i32 0, i32 33
  %4249 = getelementptr inbounds %struct.Reg, %struct.Reg* %4248, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %4249 to i64*
  %4250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4251 = getelementptr inbounds %struct.GPR, %struct.GPR* %4250, i32 0, i32 9
  %4252 = getelementptr inbounds %struct.Reg, %struct.Reg* %4251, i32 0, i32 0
  %ESI.i790 = bitcast %union.anon* %4252 to i32*
  %4253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4254 = getelementptr inbounds %struct.GPR, %struct.GPR* %4253, i32 0, i32 7
  %4255 = getelementptr inbounds %struct.Reg, %struct.Reg* %4254, i32 0, i32 0
  %RDX.i791 = bitcast %union.anon* %4255 to i64*
  %4256 = load i64, i64* %RDX.i791
  %4257 = load i32, i32* %ESI.i790
  %4258 = zext i32 %4257 to i64
  %4259 = load i64, i64* %PC.i789
  %4260 = add i64 %4259, 2
  store i64 %4260, i64* %PC.i789
  %4261 = trunc i64 %4256 to i32
  %4262 = sub i32 %4261, %4257
  %4263 = zext i32 %4262 to i64
  store i64 %4263, i64* %RDX.i791, align 8
  %4264 = icmp ult i32 %4261, %4257
  %4265 = zext i1 %4264 to i8
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4265, i8* %4266, align 1
  %4267 = and i32 %4262, 255
  %4268 = call i32 @llvm.ctpop.i32(i32 %4267)
  %4269 = trunc i32 %4268 to i8
  %4270 = and i8 %4269, 1
  %4271 = xor i8 %4270, 1
  %4272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4271, i8* %4272, align 1
  %4273 = xor i64 %4258, %4256
  %4274 = trunc i64 %4273 to i32
  %4275 = xor i32 %4274, %4262
  %4276 = lshr i32 %4275, 4
  %4277 = trunc i32 %4276 to i8
  %4278 = and i8 %4277, 1
  %4279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4278, i8* %4279, align 1
  %4280 = icmp eq i32 %4262, 0
  %4281 = zext i1 %4280 to i8
  %4282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4281, i8* %4282, align 1
  %4283 = lshr i32 %4262, 31
  %4284 = trunc i32 %4283 to i8
  %4285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4284, i8* %4285, align 1
  %4286 = lshr i32 %4261, 31
  %4287 = lshr i32 %4257, 31
  %4288 = xor i32 %4287, %4286
  %4289 = xor i32 %4283, %4286
  %4290 = add i32 %4289, %4288
  %4291 = icmp eq i32 %4290, 2
  %4292 = zext i1 %4291 to i8
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4292, i8* %4293, align 1
  store %struct.Memory* %loadMem_423f5c, %struct.Memory** %MEMORY
  %loadMem_423f5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4295 = getelementptr inbounds %struct.GPR, %struct.GPR* %4294, i32 0, i32 33
  %4296 = getelementptr inbounds %struct.Reg, %struct.Reg* %4295, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %4296 to i64*
  %4297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4298 = getelementptr inbounds %struct.GPR, %struct.GPR* %4297, i32 0, i32 7
  %4299 = getelementptr inbounds %struct.Reg, %struct.Reg* %4298, i32 0, i32 0
  %EDX.i787 = bitcast %union.anon* %4299 to i32*
  %4300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4301 = getelementptr inbounds %struct.GPR, %struct.GPR* %4300, i32 0, i32 11
  %4302 = getelementptr inbounds %struct.Reg, %struct.Reg* %4301, i32 0, i32 0
  %RDI.i788 = bitcast %union.anon* %4302 to i64*
  %4303 = load i32, i32* %EDX.i787
  %4304 = zext i32 %4303 to i64
  %4305 = load i64, i64* %PC.i786
  %4306 = add i64 %4305, 3
  store i64 %4306, i64* %PC.i786
  %4307 = shl i64 %4304, 32
  %4308 = ashr exact i64 %4307, 32
  store i64 %4308, i64* %RDI.i788, align 8
  store %struct.Memory* %loadMem_423f5e, %struct.Memory** %MEMORY
  %loadMem_423f61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4310 = getelementptr inbounds %struct.GPR, %struct.GPR* %4309, i32 0, i32 33
  %4311 = getelementptr inbounds %struct.Reg, %struct.Reg* %4310, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %4311 to i64*
  %4312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4313 = getelementptr inbounds %struct.GPR, %struct.GPR* %4312, i32 0, i32 1
  %4314 = getelementptr inbounds %struct.Reg, %struct.Reg* %4313, i32 0, i32 0
  %RAX.i783 = bitcast %union.anon* %4314 to i64*
  %4315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4316 = getelementptr inbounds %struct.GPR, %struct.GPR* %4315, i32 0, i32 7
  %4317 = getelementptr inbounds %struct.Reg, %struct.Reg* %4316, i32 0, i32 0
  %RDX.i784 = bitcast %union.anon* %4317 to i64*
  %4318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4319 = getelementptr inbounds %struct.GPR, %struct.GPR* %4318, i32 0, i32 11
  %4320 = getelementptr inbounds %struct.Reg, %struct.Reg* %4319, i32 0, i32 0
  %RDI.i785 = bitcast %union.anon* %4320 to i64*
  %4321 = load i64, i64* %RAX.i783
  %4322 = load i64, i64* %RDI.i785
  %4323 = mul i64 %4322, 4
  %4324 = add i64 %4323, %4321
  %4325 = load i64, i64* %PC.i782
  %4326 = add i64 %4325, 3
  store i64 %4326, i64* %PC.i782
  %4327 = inttoptr i64 %4324 to i32*
  %4328 = load i32, i32* %4327
  %4329 = zext i32 %4328 to i64
  store i64 %4329, i64* %RDX.i784, align 8
  store %struct.Memory* %loadMem_423f61, %struct.Memory** %MEMORY
  %loadMem_423f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4331 = getelementptr inbounds %struct.GPR, %struct.GPR* %4330, i32 0, i32 33
  %4332 = getelementptr inbounds %struct.Reg, %struct.Reg* %4331, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %4332 to i64*
  %4333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4334 = getelementptr inbounds %struct.GPR, %struct.GPR* %4333, i32 0, i32 1
  %4335 = getelementptr inbounds %struct.Reg, %struct.Reg* %4334, i32 0, i32 0
  %RAX.i781 = bitcast %union.anon* %4335 to i64*
  %4336 = load i64, i64* %PC.i780
  %4337 = add i64 %4336, 8
  store i64 %4337, i64* %PC.i780
  %4338 = load i64, i64* bitcast (%G_0x6f8f00_type* @G_0x6f8f00 to i64*)
  store i64 %4338, i64* %RAX.i781, align 8
  store %struct.Memory* %loadMem_423f64, %struct.Memory** %MEMORY
  %loadMem_423f6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4340 = getelementptr inbounds %struct.GPR, %struct.GPR* %4339, i32 0, i32 33
  %4341 = getelementptr inbounds %struct.Reg, %struct.Reg* %4340, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %4341 to i64*
  %4342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4343 = getelementptr inbounds %struct.GPR, %struct.GPR* %4342, i32 0, i32 9
  %4344 = getelementptr inbounds %struct.Reg, %struct.Reg* %4343, i32 0, i32 0
  %RSI.i778 = bitcast %union.anon* %4344 to i64*
  %4345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4346 = getelementptr inbounds %struct.GPR, %struct.GPR* %4345, i32 0, i32 15
  %4347 = getelementptr inbounds %struct.Reg, %struct.Reg* %4346, i32 0, i32 0
  %RBP.i779 = bitcast %union.anon* %4347 to i64*
  %4348 = load i64, i64* %RBP.i779
  %4349 = sub i64 %4348, 128
  %4350 = load i64, i64* %PC.i777
  %4351 = add i64 %4350, 3
  store i64 %4351, i64* %PC.i777
  %4352 = inttoptr i64 %4349 to i32*
  %4353 = load i32, i32* %4352
  %4354 = zext i32 %4353 to i64
  store i64 %4354, i64* %RSI.i778, align 8
  store %struct.Memory* %loadMem_423f6c, %struct.Memory** %MEMORY
  %loadMem_423f6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4356 = getelementptr inbounds %struct.GPR, %struct.GPR* %4355, i32 0, i32 33
  %4357 = getelementptr inbounds %struct.Reg, %struct.Reg* %4356, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %4357 to i64*
  %4358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4359 = getelementptr inbounds %struct.GPR, %struct.GPR* %4358, i32 0, i32 5
  %4360 = getelementptr inbounds %struct.Reg, %struct.Reg* %4359, i32 0, i32 0
  %RCX.i775 = bitcast %union.anon* %4360 to i64*
  %4361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4362 = getelementptr inbounds %struct.GPR, %struct.GPR* %4361, i32 0, i32 15
  %4363 = getelementptr inbounds %struct.Reg, %struct.Reg* %4362, i32 0, i32 0
  %RBP.i776 = bitcast %union.anon* %4363 to i64*
  %4364 = load i64, i64* %RBP.i776
  %4365 = sub i64 %4364, 152
  %4366 = load i64, i64* %PC.i774
  %4367 = add i64 %4366, 6
  store i64 %4367, i64* %PC.i774
  %4368 = inttoptr i64 %4365 to i32*
  %4369 = load i32, i32* %4368
  %4370 = zext i32 %4369 to i64
  store i64 %4370, i64* %RCX.i775, align 8
  store %struct.Memory* %loadMem_423f6f, %struct.Memory** %MEMORY
  %loadMem_423f75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4372 = getelementptr inbounds %struct.GPR, %struct.GPR* %4371, i32 0, i32 33
  %4373 = getelementptr inbounds %struct.Reg, %struct.Reg* %4372, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %4373 to i64*
  %4374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4375 = getelementptr inbounds %struct.GPR, %struct.GPR* %4374, i32 0, i32 5
  %4376 = getelementptr inbounds %struct.Reg, %struct.Reg* %4375, i32 0, i32 0
  %4377 = bitcast %union.anon* %4376 to %struct.anon.2*
  %CL.i771 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4377, i32 0, i32 0
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4379 = getelementptr inbounds %struct.GPR, %struct.GPR* %4378, i32 0, i32 9
  %4380 = getelementptr inbounds %struct.Reg, %struct.Reg* %4379, i32 0, i32 0
  %RSI.i772 = bitcast %union.anon* %4380 to i64*
  %4381 = load i64, i64* %RSI.i772
  %4382 = load i8, i8* %CL.i771
  %4383 = zext i8 %4382 to i64
  %4384 = load i64, i64* %PC.i770
  %4385 = add i64 %4384, 2
  store i64 %4385, i64* %PC.i770
  %4386 = trunc i64 %4383 to i5
  switch i5 %4386, label %4393 [
    i5 0, label %routine_shll__cl___esi.exit773
    i5 1, label %4387
  ]

; <label>:4387:                                   ; preds = %routine_shll__cl___edx.exit798
  %4388 = trunc i64 %4381 to i32
  %4389 = shl i32 %4388, 1
  %4390 = icmp slt i32 %4388, 0
  %4391 = icmp slt i32 %4389, 0
  %4392 = xor i1 %4390, %4391
  br label %4402

; <label>:4393:                                   ; preds = %routine_shll__cl___edx.exit798
  %4394 = and i64 %4383, 31
  %4395 = add i64 %4394, 4294967295
  %4396 = and i64 %4381, 4294967295
  %4397 = and i64 %4395, 4294967295
  %4398 = shl i64 %4396, %4397
  %4399 = trunc i64 %4398 to i32
  %4400 = icmp slt i32 %4399, 0
  %4401 = shl i32 %4399, 1
  br label %4402

; <label>:4402:                                   ; preds = %4393, %4387
  %4403 = phi i1 [ %4390, %4387 ], [ %4400, %4393 ]
  %4404 = phi i1 [ %4392, %4387 ], [ false, %4393 ]
  %4405 = phi i32 [ %4389, %4387 ], [ %4401, %4393 ]
  %4406 = zext i32 %4405 to i64
  store i64 %4406, i64* %RSI.i772, align 8
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4408 = zext i1 %4403 to i8
  store i8 %4408, i8* %4407, align 1
  %4409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4410 = and i32 %4405, 254
  %4411 = call i32 @llvm.ctpop.i32(i32 %4410)
  %4412 = trunc i32 %4411 to i8
  %4413 = and i8 %4412, 1
  %4414 = xor i8 %4413, 1
  store i8 %4414, i8* %4409, align 1
  %4415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4415, align 1
  %4416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4417 = icmp eq i32 %4405, 0
  %4418 = zext i1 %4417 to i8
  store i8 %4418, i8* %4416, align 1
  %4419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4420 = lshr i32 %4405, 31
  %4421 = trunc i32 %4420 to i8
  store i8 %4421, i8* %4419, align 1
  %4422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4423 = zext i1 %4404 to i8
  store i8 %4423, i8* %4422, align 1
  br label %routine_shll__cl___esi.exit773

routine_shll__cl___esi.exit773:                   ; preds = %routine_shll__cl___edx.exit798, %4402
  store %struct.Memory* %loadMem_423f75, %struct.Memory** %MEMORY
  %loadMem_423f77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4425 = getelementptr inbounds %struct.GPR, %struct.GPR* %4424, i32 0, i32 33
  %4426 = getelementptr inbounds %struct.Reg, %struct.Reg* %4425, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %4426 to i64*
  %4427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4428 = getelementptr inbounds %struct.GPR, %struct.GPR* %4427, i32 0, i32 17
  %4429 = getelementptr inbounds %struct.Reg, %struct.Reg* %4428, i32 0, i32 0
  %R8D.i768 = bitcast %union.anon* %4429 to i32*
  %4430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4431 = getelementptr inbounds %struct.GPR, %struct.GPR* %4430, i32 0, i32 15
  %4432 = getelementptr inbounds %struct.Reg, %struct.Reg* %4431, i32 0, i32 0
  %RBP.i769 = bitcast %union.anon* %4432 to i64*
  %4433 = bitcast i32* %R8D.i768 to i64*
  %4434 = load i64, i64* %RBP.i769
  %4435 = sub i64 %4434, 72
  %4436 = load i64, i64* %PC.i767
  %4437 = add i64 %4436, 5
  store i64 %4437, i64* %PC.i767
  %4438 = inttoptr i64 %4435 to i16*
  %4439 = load i16, i16* %4438
  %4440 = sext i16 %4439 to i64
  %4441 = and i64 %4440, 4294967295
  store i64 %4441, i64* %4433, align 8
  store %struct.Memory* %loadMem_423f77, %struct.Memory** %MEMORY
  %loadMem_423f7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4443 = getelementptr inbounds %struct.GPR, %struct.GPR* %4442, i32 0, i32 33
  %4444 = getelementptr inbounds %struct.Reg, %struct.Reg* %4443, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %4444 to i64*
  %4445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4446 = getelementptr inbounds %struct.GPR, %struct.GPR* %4445, i32 0, i32 17
  %4447 = getelementptr inbounds %struct.Reg, %struct.Reg* %4446, i32 0, i32 0
  %R8D.i765 = bitcast %union.anon* %4447 to i32*
  %4448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4449 = getelementptr inbounds %struct.GPR, %struct.GPR* %4448, i32 0, i32 9
  %4450 = getelementptr inbounds %struct.Reg, %struct.Reg* %4449, i32 0, i32 0
  %RSI.i766 = bitcast %union.anon* %4450 to i64*
  %4451 = load i64, i64* %RSI.i766
  %4452 = load i32, i32* %R8D.i765
  %4453 = zext i32 %4452 to i64
  %4454 = load i64, i64* %PC.i764
  %4455 = add i64 %4454, 3
  store i64 %4455, i64* %PC.i764
  %4456 = trunc i64 %4451 to i32
  %4457 = sub i32 %4456, %4452
  %4458 = zext i32 %4457 to i64
  store i64 %4458, i64* %RSI.i766, align 8
  %4459 = icmp ult i32 %4456, %4452
  %4460 = zext i1 %4459 to i8
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4460, i8* %4461, align 1
  %4462 = and i32 %4457, 255
  %4463 = call i32 @llvm.ctpop.i32(i32 %4462)
  %4464 = trunc i32 %4463 to i8
  %4465 = and i8 %4464, 1
  %4466 = xor i8 %4465, 1
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4466, i8* %4467, align 1
  %4468 = xor i64 %4453, %4451
  %4469 = trunc i64 %4468 to i32
  %4470 = xor i32 %4469, %4457
  %4471 = lshr i32 %4470, 4
  %4472 = trunc i32 %4471 to i8
  %4473 = and i8 %4472, 1
  %4474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4473, i8* %4474, align 1
  %4475 = icmp eq i32 %4457, 0
  %4476 = zext i1 %4475 to i8
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4476, i8* %4477, align 1
  %4478 = lshr i32 %4457, 31
  %4479 = trunc i32 %4478 to i8
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4479, i8* %4480, align 1
  %4481 = lshr i32 %4456, 31
  %4482 = lshr i32 %4452, 31
  %4483 = xor i32 %4482, %4481
  %4484 = xor i32 %4478, %4481
  %4485 = add i32 %4484, %4483
  %4486 = icmp eq i32 %4485, 2
  %4487 = zext i1 %4486 to i8
  %4488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4487, i8* %4488, align 1
  store %struct.Memory* %loadMem_423f7c, %struct.Memory** %MEMORY
  %loadMem_423f7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4490 = getelementptr inbounds %struct.GPR, %struct.GPR* %4489, i32 0, i32 33
  %4491 = getelementptr inbounds %struct.Reg, %struct.Reg* %4490, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %4491 to i64*
  %4492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4493 = getelementptr inbounds %struct.GPR, %struct.GPR* %4492, i32 0, i32 9
  %4494 = getelementptr inbounds %struct.Reg, %struct.Reg* %4493, i32 0, i32 0
  %ESI.i762 = bitcast %union.anon* %4494 to i32*
  %4495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4496 = getelementptr inbounds %struct.GPR, %struct.GPR* %4495, i32 0, i32 11
  %4497 = getelementptr inbounds %struct.Reg, %struct.Reg* %4496, i32 0, i32 0
  %RDI.i763 = bitcast %union.anon* %4497 to i64*
  %4498 = load i32, i32* %ESI.i762
  %4499 = zext i32 %4498 to i64
  %4500 = load i64, i64* %PC.i761
  %4501 = add i64 %4500, 3
  store i64 %4501, i64* %PC.i761
  %4502 = shl i64 %4499, 32
  %4503 = ashr exact i64 %4502, 32
  store i64 %4503, i64* %RDI.i763, align 8
  store %struct.Memory* %loadMem_423f7f, %struct.Memory** %MEMORY
  %loadMem_423f82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4505 = getelementptr inbounds %struct.GPR, %struct.GPR* %4504, i32 0, i32 33
  %4506 = getelementptr inbounds %struct.Reg, %struct.Reg* %4505, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %4506 to i64*
  %4507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4508 = getelementptr inbounds %struct.GPR, %struct.GPR* %4507, i32 0, i32 1
  %4509 = getelementptr inbounds %struct.Reg, %struct.Reg* %4508, i32 0, i32 0
  %RAX.i758 = bitcast %union.anon* %4509 to i64*
  %4510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4511 = getelementptr inbounds %struct.GPR, %struct.GPR* %4510, i32 0, i32 7
  %4512 = getelementptr inbounds %struct.Reg, %struct.Reg* %4511, i32 0, i32 0
  %RDX.i759 = bitcast %union.anon* %4512 to i64*
  %4513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4514 = getelementptr inbounds %struct.GPR, %struct.GPR* %4513, i32 0, i32 11
  %4515 = getelementptr inbounds %struct.Reg, %struct.Reg* %4514, i32 0, i32 0
  %RDI.i760 = bitcast %union.anon* %4515 to i64*
  %4516 = load i64, i64* %RDX.i759
  %4517 = load i64, i64* %RAX.i758
  %4518 = load i64, i64* %RDI.i760
  %4519 = mul i64 %4518, 4
  %4520 = add i64 %4519, %4517
  %4521 = load i64, i64* %PC.i757
  %4522 = add i64 %4521, 3
  store i64 %4522, i64* %PC.i757
  %4523 = trunc i64 %4516 to i32
  %4524 = inttoptr i64 %4520 to i32*
  %4525 = load i32, i32* %4524
  %4526 = add i32 %4525, %4523
  %4527 = zext i32 %4526 to i64
  store i64 %4527, i64* %RDX.i759, align 8
  %4528 = icmp ult i32 %4526, %4523
  %4529 = icmp ult i32 %4526, %4525
  %4530 = or i1 %4528, %4529
  %4531 = zext i1 %4530 to i8
  %4532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4531, i8* %4532, align 1
  %4533 = and i32 %4526, 255
  %4534 = call i32 @llvm.ctpop.i32(i32 %4533)
  %4535 = trunc i32 %4534 to i8
  %4536 = and i8 %4535, 1
  %4537 = xor i8 %4536, 1
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4537, i8* %4538, align 1
  %4539 = xor i32 %4525, %4523
  %4540 = xor i32 %4539, %4526
  %4541 = lshr i32 %4540, 4
  %4542 = trunc i32 %4541 to i8
  %4543 = and i8 %4542, 1
  %4544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4543, i8* %4544, align 1
  %4545 = icmp eq i32 %4526, 0
  %4546 = zext i1 %4545 to i8
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4546, i8* %4547, align 1
  %4548 = lshr i32 %4526, 31
  %4549 = trunc i32 %4548 to i8
  %4550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4549, i8* %4550, align 1
  %4551 = lshr i32 %4523, 31
  %4552 = lshr i32 %4525, 31
  %4553 = xor i32 %4548, %4551
  %4554 = xor i32 %4548, %4552
  %4555 = add i32 %4553, %4554
  %4556 = icmp eq i32 %4555, 2
  %4557 = zext i1 %4556 to i8
  %4558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4557, i8* %4558, align 1
  store %struct.Memory* %loadMem_423f82, %struct.Memory** %MEMORY
  %loadMem_423f85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4560 = getelementptr inbounds %struct.GPR, %struct.GPR* %4559, i32 0, i32 33
  %4561 = getelementptr inbounds %struct.Reg, %struct.Reg* %4560, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %4561 to i64*
  %4562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4563 = getelementptr inbounds %struct.GPR, %struct.GPR* %4562, i32 0, i32 9
  %4564 = getelementptr inbounds %struct.Reg, %struct.Reg* %4563, i32 0, i32 0
  %RSI.i755 = bitcast %union.anon* %4564 to i64*
  %4565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4566 = getelementptr inbounds %struct.GPR, %struct.GPR* %4565, i32 0, i32 15
  %4567 = getelementptr inbounds %struct.Reg, %struct.Reg* %4566, i32 0, i32 0
  %RBP.i756 = bitcast %union.anon* %4567 to i64*
  %4568 = load i64, i64* %RBP.i756
  %4569 = sub i64 %4568, 252
  %4570 = load i64, i64* %PC.i754
  %4571 = add i64 %4570, 6
  store i64 %4571, i64* %PC.i754
  %4572 = inttoptr i64 %4569 to i32*
  %4573 = load i32, i32* %4572
  %4574 = zext i32 %4573 to i64
  store i64 %4574, i64* %RSI.i755, align 8
  store %struct.Memory* %loadMem_423f85, %struct.Memory** %MEMORY
  %loadMem_423f8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4576 = getelementptr inbounds %struct.GPR, %struct.GPR* %4575, i32 0, i32 33
  %4577 = getelementptr inbounds %struct.Reg, %struct.Reg* %4576, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %4577 to i64*
  %4578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4579 = getelementptr inbounds %struct.GPR, %struct.GPR* %4578, i32 0, i32 7
  %4580 = getelementptr inbounds %struct.Reg, %struct.Reg* %4579, i32 0, i32 0
  %EDX.i752 = bitcast %union.anon* %4580 to i32*
  %4581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4582 = getelementptr inbounds %struct.GPR, %struct.GPR* %4581, i32 0, i32 9
  %4583 = getelementptr inbounds %struct.Reg, %struct.Reg* %4582, i32 0, i32 0
  %RSI.i753 = bitcast %union.anon* %4583 to i64*
  %4584 = load i64, i64* %RSI.i753
  %4585 = load i32, i32* %EDX.i752
  %4586 = zext i32 %4585 to i64
  %4587 = load i64, i64* %PC.i751
  %4588 = add i64 %4587, 3
  store i64 %4588, i64* %PC.i751
  %4589 = shl i64 %4584, 32
  %4590 = ashr exact i64 %4589, 32
  %4591 = shl i64 %4586, 32
  %4592 = ashr exact i64 %4591, 32
  %4593 = mul i64 %4592, %4590
  %4594 = trunc i64 %4593 to i32
  %4595 = and i64 %4593, 4294967295
  store i64 %4595, i64* %RSI.i753, align 8
  %4596 = shl i64 %4593, 32
  %4597 = ashr exact i64 %4596, 32
  %4598 = icmp ne i64 %4597, %4593
  %4599 = zext i1 %4598 to i8
  %4600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4599, i8* %4600, align 1
  %4601 = and i32 %4594, 255
  %4602 = call i32 @llvm.ctpop.i32(i32 %4601)
  %4603 = trunc i32 %4602 to i8
  %4604 = and i8 %4603, 1
  %4605 = xor i8 %4604, 1
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4605, i8* %4606, align 1
  %4607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4607, align 1
  %4608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4608, align 1
  %4609 = lshr i32 %4594, 31
  %4610 = trunc i32 %4609 to i8
  %4611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4610, i8* %4611, align 1
  %4612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4599, i8* %4612, align 1
  store %struct.Memory* %loadMem_423f8b, %struct.Memory** %MEMORY
  %loadMem_423f8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4614 = getelementptr inbounds %struct.GPR, %struct.GPR* %4613, i32 0, i32 33
  %4615 = getelementptr inbounds %struct.Reg, %struct.Reg* %4614, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %4615 to i64*
  %4616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4617 = getelementptr inbounds %struct.GPR, %struct.GPR* %4616, i32 0, i32 9
  %4618 = getelementptr inbounds %struct.Reg, %struct.Reg* %4617, i32 0, i32 0
  %RSI.i750 = bitcast %union.anon* %4618 to i64*
  %4619 = load i64, i64* %RSI.i750
  %4620 = load i64, i64* %PC.i749
  %4621 = add i64 %4620, 3
  store i64 %4621, i64* %PC.i749
  %4622 = shl i64 %4619, 32
  %4623 = ashr exact i64 %4622, 32
  %4624 = ashr i64 %4623, 15
  %4625 = lshr i64 %4624, 1
  %4626 = trunc i64 %4624 to i8
  %4627 = and i8 %4626, 1
  %4628 = trunc i64 %4625 to i32
  %4629 = and i64 %4625, 4294967295
  store i64 %4629, i64* %RSI.i750, align 8
  %4630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4627, i8* %4630, align 1
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4632 = and i32 %4628, 255
  %4633 = call i32 @llvm.ctpop.i32(i32 %4632)
  %4634 = trunc i32 %4633 to i8
  %4635 = and i8 %4634, 1
  %4636 = xor i8 %4635, 1
  store i8 %4636, i8* %4631, align 1
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4637, align 1
  %4638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4639 = icmp eq i32 %4628, 0
  %4640 = zext i1 %4639 to i8
  store i8 %4640, i8* %4638, align 1
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4642 = lshr i32 %4628, 31
  %4643 = trunc i32 %4642 to i8
  store i8 %4643, i8* %4641, align 1
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4644, align 1
  store %struct.Memory* %loadMem_423f8e, %struct.Memory** %MEMORY
  %loadMem_423f91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4646 = getelementptr inbounds %struct.GPR, %struct.GPR* %4645, i32 0, i32 33
  %4647 = getelementptr inbounds %struct.Reg, %struct.Reg* %4646, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %4647 to i64*
  %4648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4649 = getelementptr inbounds %struct.GPR, %struct.GPR* %4648, i32 0, i32 9
  %4650 = getelementptr inbounds %struct.Reg, %struct.Reg* %4649, i32 0, i32 0
  %ESI.i747 = bitcast %union.anon* %4650 to i32*
  %4651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4652 = getelementptr inbounds %struct.GPR, %struct.GPR* %4651, i32 0, i32 15
  %4653 = getelementptr inbounds %struct.Reg, %struct.Reg* %4652, i32 0, i32 0
  %RBP.i748 = bitcast %union.anon* %4653 to i64*
  %4654 = load i64, i64* %RBP.i748
  %4655 = sub i64 %4654, 228
  %4656 = load i32, i32* %ESI.i747
  %4657 = zext i32 %4656 to i64
  %4658 = load i64, i64* %PC.i746
  %4659 = add i64 %4658, 6
  store i64 %4659, i64* %PC.i746
  %4660 = inttoptr i64 %4655 to i32*
  store i32 %4656, i32* %4660
  store %struct.Memory* %loadMem_423f91, %struct.Memory** %MEMORY
  %loadMem_423f97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4662 = getelementptr inbounds %struct.GPR, %struct.GPR* %4661, i32 0, i32 33
  %4663 = getelementptr inbounds %struct.Reg, %struct.Reg* %4662, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %4663 to i64*
  %4664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4665 = getelementptr inbounds %struct.GPR, %struct.GPR* %4664, i32 0, i32 11
  %4666 = getelementptr inbounds %struct.Reg, %struct.Reg* %4665, i32 0, i32 0
  %RDI.i744 = bitcast %union.anon* %4666 to i64*
  %4667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4668 = getelementptr inbounds %struct.GPR, %struct.GPR* %4667, i32 0, i32 15
  %4669 = getelementptr inbounds %struct.Reg, %struct.Reg* %4668, i32 0, i32 0
  %RBP.i745 = bitcast %union.anon* %4669 to i64*
  %4670 = load i64, i64* %RBP.i745
  %4671 = sub i64 %4670, 60
  %4672 = load i64, i64* %PC.i743
  %4673 = add i64 %4672, 3
  store i64 %4673, i64* %PC.i743
  %4674 = inttoptr i64 %4671 to i32*
  %4675 = load i32, i32* %4674
  %4676 = zext i32 %4675 to i64
  store i64 %4676, i64* %RDI.i744, align 8
  store %struct.Memory* %loadMem_423f97, %struct.Memory** %MEMORY
  %loadMem_423f9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4678 = getelementptr inbounds %struct.GPR, %struct.GPR* %4677, i32 0, i32 33
  %4679 = getelementptr inbounds %struct.Reg, %struct.Reg* %4678, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %4679 to i64*
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4681 = getelementptr inbounds %struct.GPR, %struct.GPR* %4680, i32 0, i32 9
  %4682 = getelementptr inbounds %struct.Reg, %struct.Reg* %4681, i32 0, i32 0
  %RSI.i741 = bitcast %union.anon* %4682 to i64*
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4684 = getelementptr inbounds %struct.GPR, %struct.GPR* %4683, i32 0, i32 15
  %4685 = getelementptr inbounds %struct.Reg, %struct.Reg* %4684, i32 0, i32 0
  %RBP.i742 = bitcast %union.anon* %4685 to i64*
  %4686 = load i64, i64* %RBP.i742
  %4687 = sub i64 %4686, 64
  %4688 = load i64, i64* %PC.i740
  %4689 = add i64 %4688, 3
  store i64 %4689, i64* %PC.i740
  %4690 = inttoptr i64 %4687 to i32*
  %4691 = load i32, i32* %4690
  %4692 = zext i32 %4691 to i64
  store i64 %4692, i64* %RSI.i741, align 8
  store %struct.Memory* %loadMem_423f9a, %struct.Memory** %MEMORY
  %loadMem_423f9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4694 = getelementptr inbounds %struct.GPR, %struct.GPR* %4693, i32 0, i32 33
  %4695 = getelementptr inbounds %struct.Reg, %struct.Reg* %4694, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %4695 to i64*
  %4696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4697 = getelementptr inbounds %struct.GPR, %struct.GPR* %4696, i32 0, i32 7
  %4698 = getelementptr inbounds %struct.Reg, %struct.Reg* %4697, i32 0, i32 0
  %RDX.i738 = bitcast %union.anon* %4698 to i64*
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4700 = getelementptr inbounds %struct.GPR, %struct.GPR* %4699, i32 0, i32 15
  %4701 = getelementptr inbounds %struct.Reg, %struct.Reg* %4700, i32 0, i32 0
  %RBP.i739 = bitcast %union.anon* %4701 to i64*
  %4702 = load i64, i64* %RBP.i739
  %4703 = sub i64 %4702, 156
  %4704 = load i64, i64* %PC.i737
  %4705 = add i64 %4704, 6
  store i64 %4705, i64* %PC.i737
  %4706 = inttoptr i64 %4703 to i32*
  %4707 = load i32, i32* %4706
  %4708 = zext i32 %4707 to i64
  store i64 %4708, i64* %RDX.i738, align 8
  store %struct.Memory* %loadMem_423f9d, %struct.Memory** %MEMORY
  %loadMem_423fa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4710 = getelementptr inbounds %struct.GPR, %struct.GPR* %4709, i32 0, i32 33
  %4711 = getelementptr inbounds %struct.Reg, %struct.Reg* %4710, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %4711 to i64*
  %4712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4713 = getelementptr inbounds %struct.GPR, %struct.GPR* %4712, i32 0, i32 5
  %4714 = getelementptr inbounds %struct.Reg, %struct.Reg* %4713, i32 0, i32 0
  %RCX.i735 = bitcast %union.anon* %4714 to i64*
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4716 = getelementptr inbounds %struct.GPR, %struct.GPR* %4715, i32 0, i32 15
  %4717 = getelementptr inbounds %struct.Reg, %struct.Reg* %4716, i32 0, i32 0
  %RBP.i736 = bitcast %union.anon* %4717 to i64*
  %4718 = load i64, i64* %RBP.i736
  %4719 = sub i64 %4718, 160
  %4720 = load i64, i64* %PC.i734
  %4721 = add i64 %4720, 6
  store i64 %4721, i64* %PC.i734
  %4722 = inttoptr i64 %4719 to i32*
  %4723 = load i32, i32* %4722
  %4724 = zext i32 %4723 to i64
  store i64 %4724, i64* %RCX.i735, align 8
  store %struct.Memory* %loadMem_423fa3, %struct.Memory** %MEMORY
  %loadMem_423fa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4726 = getelementptr inbounds %struct.GPR, %struct.GPR* %4725, i32 0, i32 33
  %4727 = getelementptr inbounds %struct.Reg, %struct.Reg* %4726, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %4727 to i64*
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4729 = getelementptr inbounds %struct.GPR, %struct.GPR* %4728, i32 0, i32 17
  %4730 = getelementptr inbounds %struct.Reg, %struct.Reg* %4729, i32 0, i32 0
  %R8D.i732 = bitcast %union.anon* %4730 to i32*
  %4731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4732 = getelementptr inbounds %struct.GPR, %struct.GPR* %4731, i32 0, i32 15
  %4733 = getelementptr inbounds %struct.Reg, %struct.Reg* %4732, i32 0, i32 0
  %RBP.i733 = bitcast %union.anon* %4733 to i64*
  %4734 = bitcast i32* %R8D.i732 to i64*
  %4735 = load i64, i64* %RBP.i733
  %4736 = sub i64 %4735, 124
  %4737 = load i64, i64* %PC.i731
  %4738 = add i64 %4737, 4
  store i64 %4738, i64* %PC.i731
  %4739 = inttoptr i64 %4736 to i32*
  %4740 = load i32, i32* %4739
  %4741 = zext i32 %4740 to i64
  store i64 %4741, i64* %4734, align 8
  store %struct.Memory* %loadMem_423fa9, %struct.Memory** %MEMORY
  %loadMem_423fad = load %struct.Memory*, %struct.Memory** %MEMORY
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4743 = getelementptr inbounds %struct.GPR, %struct.GPR* %4742, i32 0, i32 33
  %4744 = getelementptr inbounds %struct.Reg, %struct.Reg* %4743, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %4744 to i64*
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4746 = getelementptr inbounds %struct.GPR, %struct.GPR* %4745, i32 0, i32 19
  %4747 = getelementptr inbounds %struct.Reg, %struct.Reg* %4746, i32 0, i32 0
  %R9D.i729 = bitcast %union.anon* %4747 to i32*
  %4748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4749 = getelementptr inbounds %struct.GPR, %struct.GPR* %4748, i32 0, i32 15
  %4750 = getelementptr inbounds %struct.Reg, %struct.Reg* %4749, i32 0, i32 0
  %RBP.i730 = bitcast %union.anon* %4750 to i64*
  %4751 = bitcast i32* %R9D.i729 to i64*
  %4752 = load i64, i64* %RBP.i730
  %4753 = sub i64 %4752, 128
  %4754 = load i64, i64* %PC.i728
  %4755 = add i64 %4754, 4
  store i64 %4755, i64* %PC.i728
  %4756 = inttoptr i64 %4753 to i32*
  %4757 = load i32, i32* %4756
  %4758 = zext i32 %4757 to i64
  store i64 %4758, i64* %4751, align 8
  store %struct.Memory* %loadMem_423fad, %struct.Memory** %MEMORY
  %loadMem_423fb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4760 = getelementptr inbounds %struct.GPR, %struct.GPR* %4759, i32 0, i32 33
  %4761 = getelementptr inbounds %struct.Reg, %struct.Reg* %4760, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %4761 to i64*
  %4762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4763 = getelementptr inbounds %struct.GPR, %struct.GPR* %4762, i32 0, i32 1
  %4764 = getelementptr inbounds %struct.Reg, %struct.Reg* %4763, i32 0, i32 0
  %RAX.i726 = bitcast %union.anon* %4764 to i64*
  %4765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4766 = getelementptr inbounds %struct.GPR, %struct.GPR* %4765, i32 0, i32 15
  %4767 = getelementptr inbounds %struct.Reg, %struct.Reg* %4766, i32 0, i32 0
  %RBP.i727 = bitcast %union.anon* %4767 to i64*
  %4768 = load i64, i64* %RBP.i727
  %4769 = sub i64 %4768, 144
  %4770 = load i64, i64* %PC.i725
  %4771 = add i64 %4770, 7
  store i64 %4771, i64* %PC.i725
  %4772 = inttoptr i64 %4769 to i64*
  %4773 = load i64, i64* %4772
  store i64 %4773, i64* %RAX.i726, align 8
  store %struct.Memory* %loadMem_423fb1, %struct.Memory** %MEMORY
  %loadMem_423fb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4775 = getelementptr inbounds %struct.GPR, %struct.GPR* %4774, i32 0, i32 33
  %4776 = getelementptr inbounds %struct.Reg, %struct.Reg* %4775, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %4776 to i64*
  %4777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4778 = getelementptr inbounds %struct.GPR, %struct.GPR* %4777, i32 0, i32 15
  %4779 = getelementptr inbounds %struct.Reg, %struct.Reg* %4778, i32 0, i32 0
  %RBP.i723 = bitcast %union.anon* %4779 to i64*
  %4780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4781 = getelementptr inbounds %struct.GPR, %struct.GPR* %4780, i32 0, i32 21
  %4782 = getelementptr inbounds %struct.Reg, %struct.Reg* %4781, i32 0, i32 0
  %R10.i724 = bitcast %union.anon* %4782 to i64*
  %4783 = load i64, i64* %RBP.i723
  %4784 = sub i64 %4783, 48
  %4785 = load i64, i64* %PC.i722
  %4786 = add i64 %4785, 4
  store i64 %4786, i64* %PC.i722
  %4787 = inttoptr i64 %4784 to i64*
  %4788 = load i64, i64* %4787
  store i64 %4788, i64* %R10.i724, align 8
  store %struct.Memory* %loadMem_423fb8, %struct.Memory** %MEMORY
  %loadMem_423fbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4790 = getelementptr inbounds %struct.GPR, %struct.GPR* %4789, i32 0, i32 33
  %4791 = getelementptr inbounds %struct.Reg, %struct.Reg* %4790, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %4791 to i64*
  %4792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4793 = getelementptr inbounds %struct.GPR, %struct.GPR* %4792, i32 0, i32 23
  %4794 = getelementptr inbounds %struct.Reg, %struct.Reg* %4793, i32 0, i32 0
  %R11D.i720 = bitcast %union.anon* %4794 to i32*
  %4795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4796 = getelementptr inbounds %struct.GPR, %struct.GPR* %4795, i32 0, i32 15
  %4797 = getelementptr inbounds %struct.Reg, %struct.Reg* %4796, i32 0, i32 0
  %RBP.i721 = bitcast %union.anon* %4797 to i64*
  %4798 = bitcast i32* %R11D.i720 to i64*
  %4799 = load i64, i64* %RBP.i721
  %4800 = sub i64 %4799, 228
  %4801 = load i64, i64* %PC.i719
  %4802 = add i64 %4801, 7
  store i64 %4802, i64* %PC.i719
  %4803 = inttoptr i64 %4800 to i32*
  %4804 = load i32, i32* %4803
  %4805 = zext i32 %4804 to i64
  store i64 %4805, i64* %4798, align 8
  store %struct.Memory* %loadMem_423fbc, %struct.Memory** %MEMORY
  %loadMem_423fc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4807 = getelementptr inbounds %struct.GPR, %struct.GPR* %4806, i32 0, i32 33
  %4808 = getelementptr inbounds %struct.Reg, %struct.Reg* %4807, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %4808 to i64*
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4810 = getelementptr inbounds %struct.GPR, %struct.GPR* %4809, i32 0, i32 3
  %4811 = getelementptr inbounds %struct.Reg, %struct.Reg* %4810, i32 0, i32 0
  %RBX.i717 = bitcast %union.anon* %4811 to i64*
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4813 = getelementptr inbounds %struct.GPR, %struct.GPR* %4812, i32 0, i32 15
  %4814 = getelementptr inbounds %struct.Reg, %struct.Reg* %4813, i32 0, i32 0
  %RBP.i718 = bitcast %union.anon* %4814 to i64*
  %4815 = load i64, i64* %RBP.i718
  %4816 = sub i64 %4815, 100
  %4817 = load i64, i64* %PC.i716
  %4818 = add i64 %4817, 3
  store i64 %4818, i64* %PC.i716
  %4819 = inttoptr i64 %4816 to i32*
  %4820 = load i32, i32* %4819
  %4821 = zext i32 %4820 to i64
  store i64 %4821, i64* %RBX.i717, align 8
  store %struct.Memory* %loadMem_423fc3, %struct.Memory** %MEMORY
  %loadMem_423fc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4823 = getelementptr inbounds %struct.GPR, %struct.GPR* %4822, i32 0, i32 33
  %4824 = getelementptr inbounds %struct.Reg, %struct.Reg* %4823, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %4824 to i64*
  %4825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4826 = getelementptr inbounds %struct.GPR, %struct.GPR* %4825, i32 0, i32 29
  %4827 = getelementptr inbounds %struct.Reg, %struct.Reg* %4826, i32 0, i32 0
  %R14D.i714 = bitcast %union.anon* %4827 to i32*
  %4828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4829 = getelementptr inbounds %struct.GPR, %struct.GPR* %4828, i32 0, i32 15
  %4830 = getelementptr inbounds %struct.Reg, %struct.Reg* %4829, i32 0, i32 0
  %RBP.i715 = bitcast %union.anon* %4830 to i64*
  %4831 = bitcast i32* %R14D.i714 to i64*
  %4832 = load i64, i64* %RBP.i715
  %4833 = sub i64 %4832, 116
  %4834 = load i64, i64* %PC.i713
  %4835 = add i64 %4834, 4
  store i64 %4835, i64* %PC.i713
  %4836 = inttoptr i64 %4833 to i32*
  %4837 = load i32, i32* %4836
  %4838 = zext i32 %4837 to i64
  store i64 %4838, i64* %4831, align 8
  store %struct.Memory* %loadMem_423fc6, %struct.Memory** %MEMORY
  %loadMem_423fca = load %struct.Memory*, %struct.Memory** %MEMORY
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4840 = getelementptr inbounds %struct.GPR, %struct.GPR* %4839, i32 0, i32 33
  %4841 = getelementptr inbounds %struct.Reg, %struct.Reg* %4840, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %4841 to i64*
  %4842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4843 = getelementptr inbounds %struct.GPR, %struct.GPR* %4842, i32 0, i32 1
  %4844 = getelementptr inbounds %struct.Reg, %struct.Reg* %4843, i32 0, i32 0
  %RAX.i711 = bitcast %union.anon* %4844 to i64*
  %4845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4846 = getelementptr inbounds %struct.GPR, %struct.GPR* %4845, i32 0, i32 13
  %4847 = getelementptr inbounds %struct.Reg, %struct.Reg* %4846, i32 0, i32 0
  %RSP.i712 = bitcast %union.anon* %4847 to i64*
  %4848 = load i64, i64* %RSP.i712
  %4849 = load i64, i64* %RAX.i711
  %4850 = load i64, i64* %PC.i710
  %4851 = add i64 %4850, 4
  store i64 %4851, i64* %PC.i710
  %4852 = inttoptr i64 %4848 to i64*
  store i64 %4849, i64* %4852
  store %struct.Memory* %loadMem_423fca, %struct.Memory** %MEMORY
  %loadMem_423fce = load %struct.Memory*, %struct.Memory** %MEMORY
  %4853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4854 = getelementptr inbounds %struct.GPR, %struct.GPR* %4853, i32 0, i32 33
  %4855 = getelementptr inbounds %struct.Reg, %struct.Reg* %4854, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %4855 to i64*
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4857 = getelementptr inbounds %struct.GPR, %struct.GPR* %4856, i32 0, i32 13
  %4858 = getelementptr inbounds %struct.Reg, %struct.Reg* %4857, i32 0, i32 0
  %RSP.i708 = bitcast %union.anon* %4858 to i64*
  %4859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4860 = getelementptr inbounds %struct.GPR, %struct.GPR* %4859, i32 0, i32 21
  %4861 = getelementptr inbounds %struct.Reg, %struct.Reg* %4860, i32 0, i32 0
  %R10.i709 = bitcast %union.anon* %4861 to i64*
  %4862 = load i64, i64* %RSP.i708
  %4863 = add i64 %4862, 8
  %4864 = load i64, i64* %R10.i709
  %4865 = load i64, i64* %PC.i707
  %4866 = add i64 %4865, 5
  store i64 %4866, i64* %PC.i707
  %4867 = inttoptr i64 %4863 to i64*
  store i64 %4864, i64* %4867
  store %struct.Memory* %loadMem_423fce, %struct.Memory** %MEMORY
  %loadMem_423fd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4869 = getelementptr inbounds %struct.GPR, %struct.GPR* %4868, i32 0, i32 33
  %4870 = getelementptr inbounds %struct.Reg, %struct.Reg* %4869, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %4870 to i64*
  %4871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4872 = getelementptr inbounds %struct.GPR, %struct.GPR* %4871, i32 0, i32 23
  %4873 = getelementptr inbounds %struct.Reg, %struct.Reg* %4872, i32 0, i32 0
  %R11D.i705 = bitcast %union.anon* %4873 to i32*
  %4874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4875 = getelementptr inbounds %struct.GPR, %struct.GPR* %4874, i32 0, i32 13
  %4876 = getelementptr inbounds %struct.Reg, %struct.Reg* %4875, i32 0, i32 0
  %RSP.i706 = bitcast %union.anon* %4876 to i64*
  %4877 = load i64, i64* %RSP.i706
  %4878 = add i64 %4877, 16
  %4879 = load i32, i32* %R11D.i705
  %4880 = zext i32 %4879 to i64
  %4881 = load i64, i64* %PC.i704
  %4882 = add i64 %4881, 5
  store i64 %4882, i64* %PC.i704
  %4883 = inttoptr i64 %4878 to i32*
  store i32 %4879, i32* %4883
  store %struct.Memory* %loadMem_423fd3, %struct.Memory** %MEMORY
  %loadMem_423fd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4885 = getelementptr inbounds %struct.GPR, %struct.GPR* %4884, i32 0, i32 33
  %4886 = getelementptr inbounds %struct.Reg, %struct.Reg* %4885, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %4886 to i64*
  %4887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4888 = getelementptr inbounds %struct.GPR, %struct.GPR* %4887, i32 0, i32 3
  %4889 = getelementptr inbounds %struct.Reg, %struct.Reg* %4888, i32 0, i32 0
  %EBX.i702 = bitcast %union.anon* %4889 to i32*
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4891 = getelementptr inbounds %struct.GPR, %struct.GPR* %4890, i32 0, i32 13
  %4892 = getelementptr inbounds %struct.Reg, %struct.Reg* %4891, i32 0, i32 0
  %RSP.i703 = bitcast %union.anon* %4892 to i64*
  %4893 = load i64, i64* %RSP.i703
  %4894 = add i64 %4893, 24
  %4895 = load i32, i32* %EBX.i702
  %4896 = zext i32 %4895 to i64
  %4897 = load i64, i64* %PC.i701
  %4898 = add i64 %4897, 4
  store i64 %4898, i64* %PC.i701
  %4899 = inttoptr i64 %4894 to i32*
  store i32 %4895, i32* %4899
  store %struct.Memory* %loadMem_423fd8, %struct.Memory** %MEMORY
  %loadMem_423fdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4901 = getelementptr inbounds %struct.GPR, %struct.GPR* %4900, i32 0, i32 33
  %4902 = getelementptr inbounds %struct.Reg, %struct.Reg* %4901, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %4902 to i64*
  %4903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4904 = getelementptr inbounds %struct.GPR, %struct.GPR* %4903, i32 0, i32 29
  %4905 = getelementptr inbounds %struct.Reg, %struct.Reg* %4904, i32 0, i32 0
  %R14D.i699 = bitcast %union.anon* %4905 to i32*
  %4906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4907 = getelementptr inbounds %struct.GPR, %struct.GPR* %4906, i32 0, i32 13
  %4908 = getelementptr inbounds %struct.Reg, %struct.Reg* %4907, i32 0, i32 0
  %RSP.i700 = bitcast %union.anon* %4908 to i64*
  %4909 = load i64, i64* %RSP.i700
  %4910 = add i64 %4909, 32
  %4911 = load i32, i32* %R14D.i699
  %4912 = zext i32 %4911 to i64
  %4913 = load i64, i64* %PC.i698
  %4914 = add i64 %4913, 5
  store i64 %4914, i64* %PC.i698
  %4915 = inttoptr i64 %4910 to i32*
  store i32 %4911, i32* %4915
  store %struct.Memory* %loadMem_423fdc, %struct.Memory** %MEMORY
  %loadMem1_423fe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4917 = getelementptr inbounds %struct.GPR, %struct.GPR* %4916, i32 0, i32 33
  %4918 = getelementptr inbounds %struct.Reg, %struct.Reg* %4917, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %4918 to i64*
  %4919 = load i64, i64* %PC.i697
  %4920 = add i64 %4919, -3649
  %4921 = load i64, i64* %PC.i697
  %4922 = add i64 %4921, 5
  %4923 = load i64, i64* %PC.i697
  %4924 = add i64 %4923, 5
  store i64 %4924, i64* %PC.i697
  %4925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4926 = load i64, i64* %4925, align 8
  %4927 = add i64 %4926, -8
  %4928 = inttoptr i64 %4927 to i64*
  store i64 %4922, i64* %4928
  store i64 %4927, i64* %4925, align 8
  %4929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4920, i64* %4929, align 8
  store %struct.Memory* %loadMem1_423fe1, %struct.Memory** %MEMORY
  %loadMem2_423fe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_423fe1 = load i64, i64* %3
  %call2_423fe1 = call %struct.Memory* @sub_4231a0.AddUpSADQuarter(%struct.State* %0, i64 %loadPC_423fe1, %struct.Memory* %loadMem2_423fe1)
  store %struct.Memory* %call2_423fe1, %struct.Memory** %MEMORY
  %loadMem_423fe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4931 = getelementptr inbounds %struct.GPR, %struct.GPR* %4930, i32 0, i32 33
  %4932 = getelementptr inbounds %struct.Reg, %struct.Reg* %4931, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %4932 to i64*
  %4933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4934 = getelementptr inbounds %struct.GPR, %struct.GPR* %4933, i32 0, i32 1
  %4935 = getelementptr inbounds %struct.Reg, %struct.Reg* %4934, i32 0, i32 0
  %EAX.i695 = bitcast %union.anon* %4935 to i32*
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4937 = getelementptr inbounds %struct.GPR, %struct.GPR* %4936, i32 0, i32 15
  %4938 = getelementptr inbounds %struct.Reg, %struct.Reg* %4937, i32 0, i32 0
  %RBP.i696 = bitcast %union.anon* %4938 to i64*
  %4939 = load i64, i64* %RBP.i696
  %4940 = sub i64 %4939, 120
  %4941 = load i32, i32* %EAX.i695
  %4942 = zext i32 %4941 to i64
  %4943 = load i64, i64* %PC.i694
  %4944 = add i64 %4943, 3
  store i64 %4944, i64* %PC.i694
  %4945 = inttoptr i64 %4940 to i32*
  store i32 %4941, i32* %4945
  store %struct.Memory* %loadMem_423fe6, %struct.Memory** %MEMORY
  %loadMem_423fe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4947 = getelementptr inbounds %struct.GPR, %struct.GPR* %4946, i32 0, i32 33
  %4948 = getelementptr inbounds %struct.Reg, %struct.Reg* %4947, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %4948 to i64*
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4950 = getelementptr inbounds %struct.GPR, %struct.GPR* %4949, i32 0, i32 21
  %4951 = getelementptr inbounds %struct.Reg, %struct.Reg* %4950, i32 0, i32 0
  %R10.i693 = bitcast %union.anon* %4951 to i64*
  %4952 = load i64, i64* %PC.i692
  %4953 = add i64 %4952, 8
  store i64 %4953, i64* %PC.i692
  %4954 = load i64, i64* bitcast (%G_0x710770_type* @G_0x710770 to i64*)
  store i64 %4954, i64* %R10.i693, align 8
  store %struct.Memory* %loadMem_423fe9, %struct.Memory** %MEMORY
  %loadMem_423ff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4956 = getelementptr inbounds %struct.GPR, %struct.GPR* %4955, i32 0, i32 33
  %4957 = getelementptr inbounds %struct.Reg, %struct.Reg* %4956, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %4957 to i64*
  %4958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4959 = getelementptr inbounds %struct.GPR, %struct.GPR* %4958, i32 0, i32 15
  %4960 = getelementptr inbounds %struct.Reg, %struct.Reg* %4959, i32 0, i32 0
  %RBP.i690 = bitcast %union.anon* %4960 to i64*
  %4961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4962 = getelementptr inbounds %struct.GPR, %struct.GPR* %4961, i32 0, i32 31
  %4963 = getelementptr inbounds %struct.Reg, %struct.Reg* %4962, i32 0, i32 0
  %R15.i691 = bitcast %union.anon* %4963 to i64*
  %4964 = load i64, i64* %RBP.i690
  %4965 = sub i64 %4964, 180
  %4966 = load i64, i64* %PC.i689
  %4967 = add i64 %4966, 7
  store i64 %4967, i64* %PC.i689
  %4968 = inttoptr i64 %4965 to i32*
  %4969 = load i32, i32* %4968
  %4970 = sext i32 %4969 to i64
  store i64 %4970, i64* %R15.i691, align 8
  store %struct.Memory* %loadMem_423ff1, %struct.Memory** %MEMORY
  %loadMem_423ff8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4972 = getelementptr inbounds %struct.GPR, %struct.GPR* %4971, i32 0, i32 33
  %4973 = getelementptr inbounds %struct.Reg, %struct.Reg* %4972, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %4973 to i64*
  %4974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4975 = getelementptr inbounds %struct.GPR, %struct.GPR* %4974, i32 0, i32 21
  %4976 = getelementptr inbounds %struct.Reg, %struct.Reg* %4975, i32 0, i32 0
  %R10.i687 = bitcast %union.anon* %4976 to i64*
  %4977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4978 = getelementptr inbounds %struct.GPR, %struct.GPR* %4977, i32 0, i32 31
  %4979 = getelementptr inbounds %struct.Reg, %struct.Reg* %4978, i32 0, i32 0
  %R15.i688 = bitcast %union.anon* %4979 to i64*
  %4980 = load i64, i64* %R10.i687
  %4981 = load i64, i64* %R15.i688
  %4982 = mul i64 %4981, 8
  %4983 = add i64 %4982, %4980
  %4984 = load i64, i64* %PC.i686
  %4985 = add i64 %4984, 4
  store i64 %4985, i64* %PC.i686
  %4986 = inttoptr i64 %4983 to i64*
  %4987 = load i64, i64* %4986
  store i64 %4987, i64* %R10.i687, align 8
  store %struct.Memory* %loadMem_423ff8, %struct.Memory** %MEMORY
  %loadMem_423ffc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4989 = getelementptr inbounds %struct.GPR, %struct.GPR* %4988, i32 0, i32 33
  %4990 = getelementptr inbounds %struct.Reg, %struct.Reg* %4989, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %4990 to i64*
  %4991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4992 = getelementptr inbounds %struct.GPR, %struct.GPR* %4991, i32 0, i32 15
  %4993 = getelementptr inbounds %struct.Reg, %struct.Reg* %4992, i32 0, i32 0
  %RBP.i684 = bitcast %union.anon* %4993 to i64*
  %4994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4995 = getelementptr inbounds %struct.GPR, %struct.GPR* %4994, i32 0, i32 31
  %4996 = getelementptr inbounds %struct.Reg, %struct.Reg* %4995, i32 0, i32 0
  %R15.i685 = bitcast %union.anon* %4996 to i64*
  %4997 = load i64, i64* %RBP.i684
  %4998 = sub i64 %4997, 180
  %4999 = load i64, i64* %PC.i683
  %5000 = add i64 %4999, 7
  store i64 %5000, i64* %PC.i683
  %5001 = inttoptr i64 %4998 to i32*
  %5002 = load i32, i32* %5001
  %5003 = sext i32 %5002 to i64
  store i64 %5003, i64* %R15.i685, align 8
  store %struct.Memory* %loadMem_423ffc, %struct.Memory** %MEMORY
  %loadMem_424003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5005 = getelementptr inbounds %struct.GPR, %struct.GPR* %5004, i32 0, i32 33
  %5006 = getelementptr inbounds %struct.Reg, %struct.Reg* %5005, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %5006 to i64*
  %5007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5008 = getelementptr inbounds %struct.GPR, %struct.GPR* %5007, i32 0, i32 21
  %5009 = getelementptr inbounds %struct.Reg, %struct.Reg* %5008, i32 0, i32 0
  %R10.i681 = bitcast %union.anon* %5009 to i64*
  %5010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5011 = getelementptr inbounds %struct.GPR, %struct.GPR* %5010, i32 0, i32 31
  %5012 = getelementptr inbounds %struct.Reg, %struct.Reg* %5011, i32 0, i32 0
  %R15.i682 = bitcast %union.anon* %5012 to i64*
  %5013 = load i64, i64* %R10.i681
  %5014 = load i64, i64* %R15.i682
  %5015 = add i64 %5014, %5013
  %5016 = load i64, i64* %PC.i680
  %5017 = add i64 %5016, 5
  store i64 %5017, i64* %PC.i680
  %5018 = inttoptr i64 %5015 to i8*
  store i8 1, i8* %5018
  store %struct.Memory* %loadMem_424003, %struct.Memory** %MEMORY
  %loadMem_424008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5020 = getelementptr inbounds %struct.GPR, %struct.GPR* %5019, i32 0, i32 33
  %5021 = getelementptr inbounds %struct.Reg, %struct.Reg* %5020, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %5021 to i64*
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5023 = getelementptr inbounds %struct.GPR, %struct.GPR* %5022, i32 0, i32 1
  %5024 = getelementptr inbounds %struct.Reg, %struct.Reg* %5023, i32 0, i32 0
  %RAX.i678 = bitcast %union.anon* %5024 to i64*
  %5025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5026 = getelementptr inbounds %struct.GPR, %struct.GPR* %5025, i32 0, i32 15
  %5027 = getelementptr inbounds %struct.Reg, %struct.Reg* %5026, i32 0, i32 0
  %RBP.i679 = bitcast %union.anon* %5027 to i64*
  %5028 = load i64, i64* %RBP.i679
  %5029 = sub i64 %5028, 120
  %5030 = load i64, i64* %PC.i677
  %5031 = add i64 %5030, 3
  store i64 %5031, i64* %PC.i677
  %5032 = inttoptr i64 %5029 to i32*
  %5033 = load i32, i32* %5032
  %5034 = zext i32 %5033 to i64
  store i64 %5034, i64* %RAX.i678, align 8
  store %struct.Memory* %loadMem_424008, %struct.Memory** %MEMORY
  %loadMem_42400b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5036 = getelementptr inbounds %struct.GPR, %struct.GPR* %5035, i32 0, i32 33
  %5037 = getelementptr inbounds %struct.Reg, %struct.Reg* %5036, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %5037 to i64*
  %5038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5039 = getelementptr inbounds %struct.GPR, %struct.GPR* %5038, i32 0, i32 1
  %5040 = getelementptr inbounds %struct.Reg, %struct.Reg* %5039, i32 0, i32 0
  %EAX.i675 = bitcast %union.anon* %5040 to i32*
  %5041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5042 = getelementptr inbounds %struct.GPR, %struct.GPR* %5041, i32 0, i32 15
  %5043 = getelementptr inbounds %struct.Reg, %struct.Reg* %5042, i32 0, i32 0
  %RBP.i676 = bitcast %union.anon* %5043 to i64*
  %5044 = load i32, i32* %EAX.i675
  %5045 = zext i32 %5044 to i64
  %5046 = load i64, i64* %RBP.i676
  %5047 = sub i64 %5046, 100
  %5048 = load i64, i64* %PC.i674
  %5049 = add i64 %5048, 3
  store i64 %5049, i64* %PC.i674
  %5050 = inttoptr i64 %5047 to i32*
  %5051 = load i32, i32* %5050
  %5052 = sub i32 %5044, %5051
  %5053 = icmp ult i32 %5044, %5051
  %5054 = zext i1 %5053 to i8
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5054, i8* %5055, align 1
  %5056 = and i32 %5052, 255
  %5057 = call i32 @llvm.ctpop.i32(i32 %5056)
  %5058 = trunc i32 %5057 to i8
  %5059 = and i8 %5058, 1
  %5060 = xor i8 %5059, 1
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5060, i8* %5061, align 1
  %5062 = xor i32 %5051, %5044
  %5063 = xor i32 %5062, %5052
  %5064 = lshr i32 %5063, 4
  %5065 = trunc i32 %5064 to i8
  %5066 = and i8 %5065, 1
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5066, i8* %5067, align 1
  %5068 = icmp eq i32 %5052, 0
  %5069 = zext i1 %5068 to i8
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5069, i8* %5070, align 1
  %5071 = lshr i32 %5052, 31
  %5072 = trunc i32 %5071 to i8
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5072, i8* %5073, align 1
  %5074 = lshr i32 %5044, 31
  %5075 = lshr i32 %5051, 31
  %5076 = xor i32 %5075, %5074
  %5077 = xor i32 %5071, %5074
  %5078 = add i32 %5077, %5076
  %5079 = icmp eq i32 %5078, 2
  %5080 = zext i1 %5079 to i8
  %5081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5080, i8* %5081, align 1
  store %struct.Memory* %loadMem_42400b, %struct.Memory** %MEMORY
  %loadMem_42400e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5083 = getelementptr inbounds %struct.GPR, %struct.GPR* %5082, i32 0, i32 33
  %5084 = getelementptr inbounds %struct.Reg, %struct.Reg* %5083, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %5084 to i64*
  %5085 = load i64, i64* %PC.i673
  %5086 = add i64 %5085, 30
  %5087 = load i64, i64* %PC.i673
  %5088 = add i64 %5087, 6
  %5089 = load i64, i64* %PC.i673
  %5090 = add i64 %5089, 6
  store i64 %5090, i64* %PC.i673
  %5091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5092 = load i8, i8* %5091, align 1
  %5093 = icmp ne i8 %5092, 0
  %5094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5095 = load i8, i8* %5094, align 1
  %5096 = icmp ne i8 %5095, 0
  %5097 = xor i1 %5093, %5096
  %5098 = xor i1 %5097, true
  %5099 = zext i1 %5098 to i8
  store i8 %5099, i8* %BRANCH_TAKEN, align 1
  %5100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5101 = select i1 %5097, i64 %5088, i64 %5086
  store i64 %5101, i64* %5100, align 8
  store %struct.Memory* %loadMem_42400e, %struct.Memory** %MEMORY
  %loadBr_42400e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42400e = icmp eq i8 %loadBr_42400e, 1
  br i1 %cmpBr_42400e, label %block_.L_42402c, label %block_424014

block_424014:                                     ; preds = %routine_shll__cl___esi.exit773
  %loadMem_424014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5103 = getelementptr inbounds %struct.GPR, %struct.GPR* %5102, i32 0, i32 33
  %5104 = getelementptr inbounds %struct.Reg, %struct.Reg* %5103, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %5104 to i64*
  %5105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5106 = getelementptr inbounds %struct.GPR, %struct.GPR* %5105, i32 0, i32 1
  %5107 = getelementptr inbounds %struct.Reg, %struct.Reg* %5106, i32 0, i32 0
  %RAX.i671 = bitcast %union.anon* %5107 to i64*
  %5108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5109 = getelementptr inbounds %struct.GPR, %struct.GPR* %5108, i32 0, i32 15
  %5110 = getelementptr inbounds %struct.Reg, %struct.Reg* %5109, i32 0, i32 0
  %RBP.i672 = bitcast %union.anon* %5110 to i64*
  %5111 = load i64, i64* %RBP.i672
  %5112 = sub i64 %5111, 120
  %5113 = load i64, i64* %PC.i670
  %5114 = add i64 %5113, 3
  store i64 %5114, i64* %PC.i670
  %5115 = inttoptr i64 %5112 to i32*
  %5116 = load i32, i32* %5115
  %5117 = zext i32 %5116 to i64
  store i64 %5117, i64* %RAX.i671, align 8
  store %struct.Memory* %loadMem_424014, %struct.Memory** %MEMORY
  %loadMem_424017 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5119 = getelementptr inbounds %struct.GPR, %struct.GPR* %5118, i32 0, i32 33
  %5120 = getelementptr inbounds %struct.Reg, %struct.Reg* %5119, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %5120 to i64*
  %5121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5122 = getelementptr inbounds %struct.GPR, %struct.GPR* %5121, i32 0, i32 1
  %5123 = getelementptr inbounds %struct.Reg, %struct.Reg* %5122, i32 0, i32 0
  %EAX.i668 = bitcast %union.anon* %5123 to i32*
  %5124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5125 = getelementptr inbounds %struct.GPR, %struct.GPR* %5124, i32 0, i32 15
  %5126 = getelementptr inbounds %struct.Reg, %struct.Reg* %5125, i32 0, i32 0
  %RBP.i669 = bitcast %union.anon* %5126 to i64*
  %5127 = load i64, i64* %RBP.i669
  %5128 = sub i64 %5127, 100
  %5129 = load i32, i32* %EAX.i668
  %5130 = zext i32 %5129 to i64
  %5131 = load i64, i64* %PC.i667
  %5132 = add i64 %5131, 3
  store i64 %5132, i64* %PC.i667
  %5133 = inttoptr i64 %5128 to i32*
  store i32 %5129, i32* %5133
  store %struct.Memory* %loadMem_424017, %struct.Memory** %MEMORY
  %loadMem_42401a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5135 = getelementptr inbounds %struct.GPR, %struct.GPR* %5134, i32 0, i32 33
  %5136 = getelementptr inbounds %struct.Reg, %struct.Reg* %5135, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %5136 to i64*
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5138 = getelementptr inbounds %struct.GPR, %struct.GPR* %5137, i32 0, i32 1
  %5139 = getelementptr inbounds %struct.Reg, %struct.Reg* %5138, i32 0, i32 0
  %RAX.i665 = bitcast %union.anon* %5139 to i64*
  %5140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5141 = getelementptr inbounds %struct.GPR, %struct.GPR* %5140, i32 0, i32 15
  %5142 = getelementptr inbounds %struct.Reg, %struct.Reg* %5141, i32 0, i32 0
  %RBP.i666 = bitcast %union.anon* %5142 to i64*
  %5143 = load i64, i64* %RBP.i666
  %5144 = sub i64 %5143, 124
  %5145 = load i64, i64* %PC.i664
  %5146 = add i64 %5145, 3
  store i64 %5146, i64* %PC.i664
  %5147 = inttoptr i64 %5144 to i32*
  %5148 = load i32, i32* %5147
  %5149 = zext i32 %5148 to i64
  store i64 %5149, i64* %RAX.i665, align 8
  store %struct.Memory* %loadMem_42401a, %struct.Memory** %MEMORY
  %loadMem_42401d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5151 = getelementptr inbounds %struct.GPR, %struct.GPR* %5150, i32 0, i32 33
  %5152 = getelementptr inbounds %struct.Reg, %struct.Reg* %5151, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %5152 to i64*
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5154 = getelementptr inbounds %struct.GPR, %struct.GPR* %5153, i32 0, i32 1
  %5155 = getelementptr inbounds %struct.Reg, %struct.Reg* %5154, i32 0, i32 0
  %EAX.i662 = bitcast %union.anon* %5155 to i32*
  %5156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5157 = getelementptr inbounds %struct.GPR, %struct.GPR* %5156, i32 0, i32 15
  %5158 = getelementptr inbounds %struct.Reg, %struct.Reg* %5157, i32 0, i32 0
  %RBP.i663 = bitcast %union.anon* %5158 to i64*
  %5159 = load i64, i64* %RBP.i663
  %5160 = sub i64 %5159, 204
  %5161 = load i32, i32* %EAX.i662
  %5162 = zext i32 %5161 to i64
  %5163 = load i64, i64* %PC.i661
  %5164 = add i64 %5163, 6
  store i64 %5164, i64* %PC.i661
  %5165 = inttoptr i64 %5160 to i32*
  store i32 %5161, i32* %5165
  store %struct.Memory* %loadMem_42401d, %struct.Memory** %MEMORY
  %loadMem_424023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5167 = getelementptr inbounds %struct.GPR, %struct.GPR* %5166, i32 0, i32 33
  %5168 = getelementptr inbounds %struct.Reg, %struct.Reg* %5167, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %5168 to i64*
  %5169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5170 = getelementptr inbounds %struct.GPR, %struct.GPR* %5169, i32 0, i32 1
  %5171 = getelementptr inbounds %struct.Reg, %struct.Reg* %5170, i32 0, i32 0
  %RAX.i659 = bitcast %union.anon* %5171 to i64*
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5173 = getelementptr inbounds %struct.GPR, %struct.GPR* %5172, i32 0, i32 15
  %5174 = getelementptr inbounds %struct.Reg, %struct.Reg* %5173, i32 0, i32 0
  %RBP.i660 = bitcast %union.anon* %5174 to i64*
  %5175 = load i64, i64* %RBP.i660
  %5176 = sub i64 %5175, 128
  %5177 = load i64, i64* %PC.i658
  %5178 = add i64 %5177, 3
  store i64 %5178, i64* %PC.i658
  %5179 = inttoptr i64 %5176 to i32*
  %5180 = load i32, i32* %5179
  %5181 = zext i32 %5180 to i64
  store i64 %5181, i64* %RAX.i659, align 8
  store %struct.Memory* %loadMem_424023, %struct.Memory** %MEMORY
  %loadMem_424026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5183 = getelementptr inbounds %struct.GPR, %struct.GPR* %5182, i32 0, i32 33
  %5184 = getelementptr inbounds %struct.Reg, %struct.Reg* %5183, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %5184 to i64*
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5186 = getelementptr inbounds %struct.GPR, %struct.GPR* %5185, i32 0, i32 1
  %5187 = getelementptr inbounds %struct.Reg, %struct.Reg* %5186, i32 0, i32 0
  %EAX.i656 = bitcast %union.anon* %5187 to i32*
  %5188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5189 = getelementptr inbounds %struct.GPR, %struct.GPR* %5188, i32 0, i32 15
  %5190 = getelementptr inbounds %struct.Reg, %struct.Reg* %5189, i32 0, i32 0
  %RBP.i657 = bitcast %union.anon* %5190 to i64*
  %5191 = load i64, i64* %RBP.i657
  %5192 = sub i64 %5191, 208
  %5193 = load i32, i32* %EAX.i656
  %5194 = zext i32 %5193 to i64
  %5195 = load i64, i64* %PC.i655
  %5196 = add i64 %5195, 6
  store i64 %5196, i64* %PC.i655
  %5197 = inttoptr i64 %5192 to i32*
  store i32 %5193, i32* %5197
  store %struct.Memory* %loadMem_424026, %struct.Memory** %MEMORY
  br label %block_.L_42402c

block_.L_42402c:                                  ; preds = %block_424014, %routine_shll__cl___esi.exit773
  %loadMem_42402c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5199 = getelementptr inbounds %struct.GPR, %struct.GPR* %5198, i32 0, i32 33
  %5200 = getelementptr inbounds %struct.Reg, %struct.Reg* %5199, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %5200 to i64*
  %5201 = load i64, i64* %PC.i654
  %5202 = add i64 %5201, 61
  %5203 = load i64, i64* %PC.i654
  %5204 = add i64 %5203, 5
  store i64 %5204, i64* %PC.i654
  %5205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5202, i64* %5205, align 8
  store %struct.Memory* %loadMem_42402c, %struct.Memory** %MEMORY
  br label %block_.L_424069

block_.L_424031:                                  ; preds = %routine_idivl__ecx.exit
  %loadMem_424031 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5207 = getelementptr inbounds %struct.GPR, %struct.GPR* %5206, i32 0, i32 33
  %5208 = getelementptr inbounds %struct.Reg, %struct.Reg* %5207, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %5208 to i64*
  %5209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5210 = getelementptr inbounds %struct.GPR, %struct.GPR* %5209, i32 0, i32 1
  %5211 = getelementptr inbounds %struct.Reg, %struct.Reg* %5210, i32 0, i32 0
  %RAX.i653 = bitcast %union.anon* %5211 to i64*
  %5212 = load i64, i64* %PC.i652
  %5213 = add i64 %5212, 8
  store i64 %5213, i64* %PC.i652
  %5214 = load i64, i64* bitcast (%G_0x710770_type* @G_0x710770 to i64*)
  store i64 %5214, i64* %RAX.i653, align 8
  store %struct.Memory* %loadMem_424031, %struct.Memory** %MEMORY
  %loadMem_424039 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5216 = getelementptr inbounds %struct.GPR, %struct.GPR* %5215, i32 0, i32 33
  %5217 = getelementptr inbounds %struct.Reg, %struct.Reg* %5216, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %5217 to i64*
  %5218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5219 = getelementptr inbounds %struct.GPR, %struct.GPR* %5218, i32 0, i32 5
  %5220 = getelementptr inbounds %struct.Reg, %struct.Reg* %5219, i32 0, i32 0
  %RCX.i650 = bitcast %union.anon* %5220 to i64*
  %5221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5222 = getelementptr inbounds %struct.GPR, %struct.GPR* %5221, i32 0, i32 15
  %5223 = getelementptr inbounds %struct.Reg, %struct.Reg* %5222, i32 0, i32 0
  %RBP.i651 = bitcast %union.anon* %5223 to i64*
  %5224 = load i64, i64* %RBP.i651
  %5225 = sub i64 %5224, 180
  %5226 = load i64, i64* %PC.i649
  %5227 = add i64 %5226, 7
  store i64 %5227, i64* %PC.i649
  %5228 = inttoptr i64 %5225 to i32*
  %5229 = load i32, i32* %5228
  %5230 = sext i32 %5229 to i64
  store i64 %5230, i64* %RCX.i650, align 8
  store %struct.Memory* %loadMem_424039, %struct.Memory** %MEMORY
  %loadMem_424040 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5232 = getelementptr inbounds %struct.GPR, %struct.GPR* %5231, i32 0, i32 33
  %5233 = getelementptr inbounds %struct.Reg, %struct.Reg* %5232, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %5233 to i64*
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5235 = getelementptr inbounds %struct.GPR, %struct.GPR* %5234, i32 0, i32 1
  %5236 = getelementptr inbounds %struct.Reg, %struct.Reg* %5235, i32 0, i32 0
  %RAX.i647 = bitcast %union.anon* %5236 to i64*
  %5237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5238 = getelementptr inbounds %struct.GPR, %struct.GPR* %5237, i32 0, i32 5
  %5239 = getelementptr inbounds %struct.Reg, %struct.Reg* %5238, i32 0, i32 0
  %RCX.i648 = bitcast %union.anon* %5239 to i64*
  %5240 = load i64, i64* %RAX.i647
  %5241 = load i64, i64* %RCX.i648
  %5242 = mul i64 %5241, 8
  %5243 = add i64 %5242, %5240
  %5244 = load i64, i64* %PC.i646
  %5245 = add i64 %5244, 4
  store i64 %5245, i64* %PC.i646
  %5246 = inttoptr i64 %5243 to i64*
  %5247 = load i64, i64* %5246
  store i64 %5247, i64* %RAX.i647, align 8
  store %struct.Memory* %loadMem_424040, %struct.Memory** %MEMORY
  %loadMem_424044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5249 = getelementptr inbounds %struct.GPR, %struct.GPR* %5248, i32 0, i32 33
  %5250 = getelementptr inbounds %struct.Reg, %struct.Reg* %5249, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %5250 to i64*
  %5251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5252 = getelementptr inbounds %struct.GPR, %struct.GPR* %5251, i32 0, i32 5
  %5253 = getelementptr inbounds %struct.Reg, %struct.Reg* %5252, i32 0, i32 0
  %RCX.i644 = bitcast %union.anon* %5253 to i64*
  %5254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5255 = getelementptr inbounds %struct.GPR, %struct.GPR* %5254, i32 0, i32 15
  %5256 = getelementptr inbounds %struct.Reg, %struct.Reg* %5255, i32 0, i32 0
  %RBP.i645 = bitcast %union.anon* %5256 to i64*
  %5257 = load i64, i64* %RBP.i645
  %5258 = sub i64 %5257, 180
  %5259 = load i64, i64* %PC.i643
  %5260 = add i64 %5259, 7
  store i64 %5260, i64* %PC.i643
  %5261 = inttoptr i64 %5258 to i32*
  %5262 = load i32, i32* %5261
  %5263 = sext i32 %5262 to i64
  store i64 %5263, i64* %RCX.i644, align 8
  store %struct.Memory* %loadMem_424044, %struct.Memory** %MEMORY
  %loadMem_42404b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5265 = getelementptr inbounds %struct.GPR, %struct.GPR* %5264, i32 0, i32 33
  %5266 = getelementptr inbounds %struct.Reg, %struct.Reg* %5265, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %5266 to i64*
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5268 = getelementptr inbounds %struct.GPR, %struct.GPR* %5267, i32 0, i32 1
  %5269 = getelementptr inbounds %struct.Reg, %struct.Reg* %5268, i32 0, i32 0
  %RAX.i641 = bitcast %union.anon* %5269 to i64*
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5271 = getelementptr inbounds %struct.GPR, %struct.GPR* %5270, i32 0, i32 5
  %5272 = getelementptr inbounds %struct.Reg, %struct.Reg* %5271, i32 0, i32 0
  %RCX.i642 = bitcast %union.anon* %5272 to i64*
  %5273 = load i64, i64* %RAX.i641
  %5274 = load i64, i64* %RCX.i642
  %5275 = add i64 %5274, %5273
  %5276 = load i64, i64* %PC.i640
  %5277 = add i64 %5276, 4
  store i64 %5277, i64* %PC.i640
  %5278 = inttoptr i64 %5275 to i8*
  store i8 1, i8* %5278
  store %struct.Memory* %loadMem_42404b, %struct.Memory** %MEMORY
  %loadMem_42404f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5280 = getelementptr inbounds %struct.GPR, %struct.GPR* %5279, i32 0, i32 33
  %5281 = getelementptr inbounds %struct.Reg, %struct.Reg* %5280, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %5281 to i64*
  %5282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5283 = getelementptr inbounds %struct.GPR, %struct.GPR* %5282, i32 0, i32 1
  %5284 = getelementptr inbounds %struct.Reg, %struct.Reg* %5283, i32 0, i32 0
  %RAX.i638 = bitcast %union.anon* %5284 to i64*
  %5285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5286 = getelementptr inbounds %struct.GPR, %struct.GPR* %5285, i32 0, i32 15
  %5287 = getelementptr inbounds %struct.Reg, %struct.Reg* %5286, i32 0, i32 0
  %RBP.i639 = bitcast %union.anon* %5287 to i64*
  %5288 = load i64, i64* %RBP.i639
  %5289 = sub i64 %5288, 80
  %5290 = load i64, i64* %PC.i637
  %5291 = add i64 %5290, 4
  store i64 %5291, i64* %PC.i637
  %5292 = inttoptr i64 %5289 to i64*
  %5293 = load i64, i64* %5292
  store i64 %5293, i64* %RAX.i638, align 8
  store %struct.Memory* %loadMem_42404f, %struct.Memory** %MEMORY
  %loadMem_424053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5295 = getelementptr inbounds %struct.GPR, %struct.GPR* %5294, i32 0, i32 33
  %5296 = getelementptr inbounds %struct.Reg, %struct.Reg* %5295, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %5296 to i64*
  %5297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5298 = getelementptr inbounds %struct.GPR, %struct.GPR* %5297, i32 0, i32 1
  %5299 = getelementptr inbounds %struct.Reg, %struct.Reg* %5298, i32 0, i32 0
  %RAX.i635 = bitcast %union.anon* %5299 to i64*
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5301 = getelementptr inbounds %struct.GPR, %struct.GPR* %5300, i32 0, i32 7
  %5302 = getelementptr inbounds %struct.Reg, %struct.Reg* %5301, i32 0, i32 0
  %RDX.i636 = bitcast %union.anon* %5302 to i64*
  %5303 = load i64, i64* %RAX.i635
  %5304 = load i64, i64* %PC.i634
  %5305 = add i64 %5304, 3
  store i64 %5305, i64* %PC.i634
  %5306 = inttoptr i64 %5303 to i16*
  %5307 = load i16, i16* %5306
  %5308 = sext i16 %5307 to i64
  %5309 = and i64 %5308, 4294967295
  store i64 %5309, i64* %RDX.i636, align 8
  store %struct.Memory* %loadMem_424053, %struct.Memory** %MEMORY
  %loadMem_424056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5311 = getelementptr inbounds %struct.GPR, %struct.GPR* %5310, i32 0, i32 33
  %5312 = getelementptr inbounds %struct.Reg, %struct.Reg* %5311, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %5312 to i64*
  %5313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5314 = getelementptr inbounds %struct.GPR, %struct.GPR* %5313, i32 0, i32 7
  %5315 = getelementptr inbounds %struct.Reg, %struct.Reg* %5314, i32 0, i32 0
  %EDX.i632 = bitcast %union.anon* %5315 to i32*
  %5316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5317 = getelementptr inbounds %struct.GPR, %struct.GPR* %5316, i32 0, i32 15
  %5318 = getelementptr inbounds %struct.Reg, %struct.Reg* %5317, i32 0, i32 0
  %RBP.i633 = bitcast %union.anon* %5318 to i64*
  %5319 = load i64, i64* %RBP.i633
  %5320 = sub i64 %5319, 204
  %5321 = load i32, i32* %EDX.i632
  %5322 = zext i32 %5321 to i64
  %5323 = load i64, i64* %PC.i631
  %5324 = add i64 %5323, 6
  store i64 %5324, i64* %PC.i631
  %5325 = inttoptr i64 %5320 to i32*
  store i32 %5321, i32* %5325
  store %struct.Memory* %loadMem_424056, %struct.Memory** %MEMORY
  %loadMem_42405c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5327 = getelementptr inbounds %struct.GPR, %struct.GPR* %5326, i32 0, i32 33
  %5328 = getelementptr inbounds %struct.Reg, %struct.Reg* %5327, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %5328 to i64*
  %5329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5330 = getelementptr inbounds %struct.GPR, %struct.GPR* %5329, i32 0, i32 1
  %5331 = getelementptr inbounds %struct.Reg, %struct.Reg* %5330, i32 0, i32 0
  %RAX.i629 = bitcast %union.anon* %5331 to i64*
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5333 = getelementptr inbounds %struct.GPR, %struct.GPR* %5332, i32 0, i32 15
  %5334 = getelementptr inbounds %struct.Reg, %struct.Reg* %5333, i32 0, i32 0
  %RBP.i630 = bitcast %union.anon* %5334 to i64*
  %5335 = load i64, i64* %RBP.i630
  %5336 = sub i64 %5335, 88
  %5337 = load i64, i64* %PC.i628
  %5338 = add i64 %5337, 4
  store i64 %5338, i64* %PC.i628
  %5339 = inttoptr i64 %5336 to i64*
  %5340 = load i64, i64* %5339
  store i64 %5340, i64* %RAX.i629, align 8
  store %struct.Memory* %loadMem_42405c, %struct.Memory** %MEMORY
  %loadMem_424060 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5342 = getelementptr inbounds %struct.GPR, %struct.GPR* %5341, i32 0, i32 33
  %5343 = getelementptr inbounds %struct.Reg, %struct.Reg* %5342, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %5343 to i64*
  %5344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5345 = getelementptr inbounds %struct.GPR, %struct.GPR* %5344, i32 0, i32 1
  %5346 = getelementptr inbounds %struct.Reg, %struct.Reg* %5345, i32 0, i32 0
  %RAX.i626 = bitcast %union.anon* %5346 to i64*
  %5347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5348 = getelementptr inbounds %struct.GPR, %struct.GPR* %5347, i32 0, i32 7
  %5349 = getelementptr inbounds %struct.Reg, %struct.Reg* %5348, i32 0, i32 0
  %RDX.i627 = bitcast %union.anon* %5349 to i64*
  %5350 = load i64, i64* %RAX.i626
  %5351 = load i64, i64* %PC.i625
  %5352 = add i64 %5351, 3
  store i64 %5352, i64* %PC.i625
  %5353 = inttoptr i64 %5350 to i16*
  %5354 = load i16, i16* %5353
  %5355 = sext i16 %5354 to i64
  %5356 = and i64 %5355, 4294967295
  store i64 %5356, i64* %RDX.i627, align 8
  store %struct.Memory* %loadMem_424060, %struct.Memory** %MEMORY
  %loadMem_424063 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5358 = getelementptr inbounds %struct.GPR, %struct.GPR* %5357, i32 0, i32 33
  %5359 = getelementptr inbounds %struct.Reg, %struct.Reg* %5358, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %5359 to i64*
  %5360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5361 = getelementptr inbounds %struct.GPR, %struct.GPR* %5360, i32 0, i32 7
  %5362 = getelementptr inbounds %struct.Reg, %struct.Reg* %5361, i32 0, i32 0
  %EDX.i623 = bitcast %union.anon* %5362 to i32*
  %5363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5364 = getelementptr inbounds %struct.GPR, %struct.GPR* %5363, i32 0, i32 15
  %5365 = getelementptr inbounds %struct.Reg, %struct.Reg* %5364, i32 0, i32 0
  %RBP.i624 = bitcast %union.anon* %5365 to i64*
  %5366 = load i64, i64* %RBP.i624
  %5367 = sub i64 %5366, 208
  %5368 = load i32, i32* %EDX.i623
  %5369 = zext i32 %5368 to i64
  %5370 = load i64, i64* %PC.i622
  %5371 = add i64 %5370, 6
  store i64 %5371, i64* %PC.i622
  %5372 = inttoptr i64 %5367 to i32*
  store i32 %5368, i32* %5372
  store %struct.Memory* %loadMem_424063, %struct.Memory** %MEMORY
  br label %block_.L_424069

block_.L_424069:                                  ; preds = %block_.L_424031, %block_.L_42402c
  %loadMem_424069 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5374 = getelementptr inbounds %struct.GPR, %struct.GPR* %5373, i32 0, i32 33
  %5375 = getelementptr inbounds %struct.Reg, %struct.Reg* %5374, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %5375 to i64*
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5377 = getelementptr inbounds %struct.GPR, %struct.GPR* %5376, i32 0, i32 15
  %5378 = getelementptr inbounds %struct.Reg, %struct.Reg* %5377, i32 0, i32 0
  %RBP.i621 = bitcast %union.anon* %5378 to i64*
  %5379 = load i64, i64* %RBP.i621
  %5380 = sub i64 %5379, 216
  %5381 = load i64, i64* %PC.i620
  %5382 = add i64 %5381, 7
  store i64 %5382, i64* %PC.i620
  %5383 = inttoptr i64 %5380 to i32*
  %5384 = load i32, i32* %5383
  %5385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5385, align 1
  %5386 = and i32 %5384, 255
  %5387 = call i32 @llvm.ctpop.i32(i32 %5386)
  %5388 = trunc i32 %5387 to i8
  %5389 = and i8 %5388, 1
  %5390 = xor i8 %5389, 1
  %5391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5390, i8* %5391, align 1
  %5392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5392, align 1
  %5393 = icmp eq i32 %5384, 0
  %5394 = zext i1 %5393 to i8
  %5395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5394, i8* %5395, align 1
  %5396 = lshr i32 %5384, 31
  %5397 = trunc i32 %5396 to i8
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5397, i8* %5398, align 1
  %5399 = lshr i32 %5384, 31
  %5400 = xor i32 %5396, %5399
  %5401 = add i32 %5400, %5399
  %5402 = icmp eq i32 %5401, 2
  %5403 = zext i1 %5402 to i8
  %5404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5403, i8* %5404, align 1
  store %struct.Memory* %loadMem_424069, %struct.Memory** %MEMORY
  %loadMem_424070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5406 = getelementptr inbounds %struct.GPR, %struct.GPR* %5405, i32 0, i32 33
  %5407 = getelementptr inbounds %struct.Reg, %struct.Reg* %5406, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %5407 to i64*
  %5408 = load i64, i64* %PC.i619
  %5409 = add i64 %5408, 19
  %5410 = load i64, i64* %PC.i619
  %5411 = add i64 %5410, 6
  %5412 = load i64, i64* %PC.i619
  %5413 = add i64 %5412, 6
  store i64 %5413, i64* %PC.i619
  %5414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5415 = load i8, i8* %5414, align 1
  %5416 = icmp eq i8 %5415, 0
  %5417 = zext i1 %5416 to i8
  store i8 %5417, i8* %BRANCH_TAKEN, align 1
  %5418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5419 = select i1 %5416, i64 %5409, i64 %5411
  store i64 %5419, i64* %5418, align 8
  store %struct.Memory* %loadMem_424070, %struct.Memory** %MEMORY
  %loadBr_424070 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_424070 = icmp eq i8 %loadBr_424070, 1
  br i1 %cmpBr_424070, label %block_.L_424083, label %block_424076

block_424076:                                     ; preds = %block_.L_424069
  %loadMem_424076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5421 = getelementptr inbounds %struct.GPR, %struct.GPR* %5420, i32 0, i32 33
  %5422 = getelementptr inbounds %struct.Reg, %struct.Reg* %5421, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %5422 to i64*
  %5423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5424 = getelementptr inbounds %struct.GPR, %struct.GPR* %5423, i32 0, i32 15
  %5425 = getelementptr inbounds %struct.Reg, %struct.Reg* %5424, i32 0, i32 0
  %RBP.i618 = bitcast %union.anon* %5425 to i64*
  %5426 = load i64, i64* %RBP.i618
  %5427 = sub i64 %5426, 220
  %5428 = load i64, i64* %PC.i617
  %5429 = add i64 %5428, 7
  store i64 %5429, i64* %PC.i617
  %5430 = inttoptr i64 %5427 to i32*
  %5431 = load i32, i32* %5430
  %5432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5432, align 1
  %5433 = and i32 %5431, 255
  %5434 = call i32 @llvm.ctpop.i32(i32 %5433)
  %5435 = trunc i32 %5434 to i8
  %5436 = and i8 %5435, 1
  %5437 = xor i8 %5436, 1
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5437, i8* %5438, align 1
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5439, align 1
  %5440 = icmp eq i32 %5431, 0
  %5441 = zext i1 %5440 to i8
  %5442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5441, i8* %5442, align 1
  %5443 = lshr i32 %5431, 31
  %5444 = trunc i32 %5443 to i8
  %5445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5444, i8* %5445, align 1
  %5446 = lshr i32 %5431, 31
  %5447 = xor i32 %5443, %5446
  %5448 = add i32 %5447, %5446
  %5449 = icmp eq i32 %5448, 2
  %5450 = zext i1 %5449 to i8
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5450, i8* %5451, align 1
  store %struct.Memory* %loadMem_424076, %struct.Memory** %MEMORY
  %loadMem_42407d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5453 = getelementptr inbounds %struct.GPR, %struct.GPR* %5452, i32 0, i32 33
  %5454 = getelementptr inbounds %struct.Reg, %struct.Reg* %5453, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %5454 to i64*
  %5455 = load i64, i64* %PC.i616
  %5456 = add i64 %5455, 318
  %5457 = load i64, i64* %PC.i616
  %5458 = add i64 %5457, 6
  %5459 = load i64, i64* %PC.i616
  %5460 = add i64 %5459, 6
  store i64 %5460, i64* %PC.i616
  %5461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5462 = load i8, i8* %5461, align 1
  store i8 %5462, i8* %BRANCH_TAKEN, align 1
  %5463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5464 = icmp ne i8 %5462, 0
  %5465 = select i1 %5464, i64 %5456, i64 %5458
  store i64 %5465, i64* %5463, align 8
  store %struct.Memory* %loadMem_42407d, %struct.Memory** %MEMORY
  %loadBr_42407d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42407d = icmp eq i8 %loadBr_42407d, 1
  br i1 %cmpBr_42407d, label %block_.L_4241bb, label %block_.L_424083

block_.L_424083:                                  ; preds = %block_424076, %block_.L_424069
  %loadMem_424083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5467 = getelementptr inbounds %struct.GPR, %struct.GPR* %5466, i32 0, i32 33
  %5468 = getelementptr inbounds %struct.Reg, %struct.Reg* %5467, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %5468 to i64*
  %5469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5470 = getelementptr inbounds %struct.GPR, %struct.GPR* %5469, i32 0, i32 1
  %5471 = getelementptr inbounds %struct.Reg, %struct.Reg* %5470, i32 0, i32 0
  %RAX.i614 = bitcast %union.anon* %5471 to i64*
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5473 = getelementptr inbounds %struct.GPR, %struct.GPR* %5472, i32 0, i32 15
  %5474 = getelementptr inbounds %struct.Reg, %struct.Reg* %5473, i32 0, i32 0
  %RBP.i615 = bitcast %union.anon* %5474 to i64*
  %5475 = load i64, i64* %RBP.i615
  %5476 = sub i64 %5475, 80
  %5477 = load i64, i64* %PC.i613
  %5478 = add i64 %5477, 4
  store i64 %5478, i64* %PC.i613
  %5479 = inttoptr i64 %5476 to i64*
  %5480 = load i64, i64* %5479
  store i64 %5480, i64* %RAX.i614, align 8
  store %struct.Memory* %loadMem_424083, %struct.Memory** %MEMORY
  %loadMem_424087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5482 = getelementptr inbounds %struct.GPR, %struct.GPR* %5481, i32 0, i32 33
  %5483 = getelementptr inbounds %struct.Reg, %struct.Reg* %5482, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %5483 to i64*
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5485 = getelementptr inbounds %struct.GPR, %struct.GPR* %5484, i32 0, i32 1
  %5486 = getelementptr inbounds %struct.Reg, %struct.Reg* %5485, i32 0, i32 0
  %RAX.i611 = bitcast %union.anon* %5486 to i64*
  %5487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5488 = getelementptr inbounds %struct.GPR, %struct.GPR* %5487, i32 0, i32 5
  %5489 = getelementptr inbounds %struct.Reg, %struct.Reg* %5488, i32 0, i32 0
  %RCX.i612 = bitcast %union.anon* %5489 to i64*
  %5490 = load i64, i64* %RAX.i611
  %5491 = load i64, i64* %PC.i610
  %5492 = add i64 %5491, 3
  store i64 %5492, i64* %PC.i610
  %5493 = inttoptr i64 %5490 to i16*
  %5494 = load i16, i16* %5493
  %5495 = sext i16 %5494 to i64
  %5496 = and i64 %5495, 4294967295
  store i64 %5496, i64* %RCX.i612, align 8
  store %struct.Memory* %loadMem_424087, %struct.Memory** %MEMORY
  %loadMem_42408a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5498 = getelementptr inbounds %struct.GPR, %struct.GPR* %5497, i32 0, i32 33
  %5499 = getelementptr inbounds %struct.Reg, %struct.Reg* %5498, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %5499 to i64*
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5501 = getelementptr inbounds %struct.GPR, %struct.GPR* %5500, i32 0, i32 5
  %5502 = getelementptr inbounds %struct.Reg, %struct.Reg* %5501, i32 0, i32 0
  %RCX.i608 = bitcast %union.anon* %5502 to i64*
  %5503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5504 = getelementptr inbounds %struct.GPR, %struct.GPR* %5503, i32 0, i32 15
  %5505 = getelementptr inbounds %struct.Reg, %struct.Reg* %5504, i32 0, i32 0
  %RBP.i609 = bitcast %union.anon* %5505 to i64*
  %5506 = load i64, i64* %RCX.i608
  %5507 = load i64, i64* %RBP.i609
  %5508 = sub i64 %5507, 216
  %5509 = load i64, i64* %PC.i607
  %5510 = add i64 %5509, 6
  store i64 %5510, i64* %PC.i607
  %5511 = trunc i64 %5506 to i32
  %5512 = inttoptr i64 %5508 to i32*
  %5513 = load i32, i32* %5512
  %5514 = add i32 %5513, %5511
  %5515 = zext i32 %5514 to i64
  store i64 %5515, i64* %RCX.i608, align 8
  %5516 = icmp ult i32 %5514, %5511
  %5517 = icmp ult i32 %5514, %5513
  %5518 = or i1 %5516, %5517
  %5519 = zext i1 %5518 to i8
  %5520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5519, i8* %5520, align 1
  %5521 = and i32 %5514, 255
  %5522 = call i32 @llvm.ctpop.i32(i32 %5521)
  %5523 = trunc i32 %5522 to i8
  %5524 = and i8 %5523, 1
  %5525 = xor i8 %5524, 1
  %5526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5525, i8* %5526, align 1
  %5527 = xor i32 %5513, %5511
  %5528 = xor i32 %5527, %5514
  %5529 = lshr i32 %5528, 4
  %5530 = trunc i32 %5529 to i8
  %5531 = and i8 %5530, 1
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5531, i8* %5532, align 1
  %5533 = icmp eq i32 %5514, 0
  %5534 = zext i1 %5533 to i8
  %5535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5534, i8* %5535, align 1
  %5536 = lshr i32 %5514, 31
  %5537 = trunc i32 %5536 to i8
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5537, i8* %5538, align 1
  %5539 = lshr i32 %5511, 31
  %5540 = lshr i32 %5513, 31
  %5541 = xor i32 %5536, %5539
  %5542 = xor i32 %5536, %5540
  %5543 = add i32 %5541, %5542
  %5544 = icmp eq i32 %5543, 2
  %5545 = zext i1 %5544 to i8
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5545, i8* %5546, align 1
  store %struct.Memory* %loadMem_42408a, %struct.Memory** %MEMORY
  %loadMem_424090 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5548 = getelementptr inbounds %struct.GPR, %struct.GPR* %5547, i32 0, i32 33
  %5549 = getelementptr inbounds %struct.Reg, %struct.Reg* %5548, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %5549 to i64*
  %5550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5551 = getelementptr inbounds %struct.GPR, %struct.GPR* %5550, i32 0, i32 5
  %5552 = getelementptr inbounds %struct.Reg, %struct.Reg* %5551, i32 0, i32 0
  %ECX.i605 = bitcast %union.anon* %5552 to i32*
  %5553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5554 = getelementptr inbounds %struct.GPR, %struct.GPR* %5553, i32 0, i32 15
  %5555 = getelementptr inbounds %struct.Reg, %struct.Reg* %5554, i32 0, i32 0
  %RBP.i606 = bitcast %union.anon* %5555 to i64*
  %5556 = load i64, i64* %RBP.i606
  %5557 = sub i64 %5556, 124
  %5558 = load i32, i32* %ECX.i605
  %5559 = zext i32 %5558 to i64
  %5560 = load i64, i64* %PC.i604
  %5561 = add i64 %5560, 3
  store i64 %5561, i64* %PC.i604
  %5562 = inttoptr i64 %5557 to i32*
  store i32 %5558, i32* %5562
  store %struct.Memory* %loadMem_424090, %struct.Memory** %MEMORY
  %loadMem_424093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5564 = getelementptr inbounds %struct.GPR, %struct.GPR* %5563, i32 0, i32 33
  %5565 = getelementptr inbounds %struct.Reg, %struct.Reg* %5564, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %5565 to i64*
  %5566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5567 = getelementptr inbounds %struct.GPR, %struct.GPR* %5566, i32 0, i32 1
  %5568 = getelementptr inbounds %struct.Reg, %struct.Reg* %5567, i32 0, i32 0
  %RAX.i602 = bitcast %union.anon* %5568 to i64*
  %5569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5570 = getelementptr inbounds %struct.GPR, %struct.GPR* %5569, i32 0, i32 15
  %5571 = getelementptr inbounds %struct.Reg, %struct.Reg* %5570, i32 0, i32 0
  %RBP.i603 = bitcast %union.anon* %5571 to i64*
  %5572 = load i64, i64* %RBP.i603
  %5573 = sub i64 %5572, 88
  %5574 = load i64, i64* %PC.i601
  %5575 = add i64 %5574, 4
  store i64 %5575, i64* %PC.i601
  %5576 = inttoptr i64 %5573 to i64*
  %5577 = load i64, i64* %5576
  store i64 %5577, i64* %RAX.i602, align 8
  store %struct.Memory* %loadMem_424093, %struct.Memory** %MEMORY
  %loadMem_424097 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5579 = getelementptr inbounds %struct.GPR, %struct.GPR* %5578, i32 0, i32 33
  %5580 = getelementptr inbounds %struct.Reg, %struct.Reg* %5579, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %5580 to i64*
  %5581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5582 = getelementptr inbounds %struct.GPR, %struct.GPR* %5581, i32 0, i32 1
  %5583 = getelementptr inbounds %struct.Reg, %struct.Reg* %5582, i32 0, i32 0
  %RAX.i599 = bitcast %union.anon* %5583 to i64*
  %5584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5585 = getelementptr inbounds %struct.GPR, %struct.GPR* %5584, i32 0, i32 5
  %5586 = getelementptr inbounds %struct.Reg, %struct.Reg* %5585, i32 0, i32 0
  %RCX.i600 = bitcast %union.anon* %5586 to i64*
  %5587 = load i64, i64* %RAX.i599
  %5588 = load i64, i64* %PC.i598
  %5589 = add i64 %5588, 3
  store i64 %5589, i64* %PC.i598
  %5590 = inttoptr i64 %5587 to i16*
  %5591 = load i16, i16* %5590
  %5592 = sext i16 %5591 to i64
  %5593 = and i64 %5592, 4294967295
  store i64 %5593, i64* %RCX.i600, align 8
  store %struct.Memory* %loadMem_424097, %struct.Memory** %MEMORY
  %loadMem_42409a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5595 = getelementptr inbounds %struct.GPR, %struct.GPR* %5594, i32 0, i32 33
  %5596 = getelementptr inbounds %struct.Reg, %struct.Reg* %5595, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %5596 to i64*
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5598 = getelementptr inbounds %struct.GPR, %struct.GPR* %5597, i32 0, i32 5
  %5599 = getelementptr inbounds %struct.Reg, %struct.Reg* %5598, i32 0, i32 0
  %RCX.i596 = bitcast %union.anon* %5599 to i64*
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5601 = getelementptr inbounds %struct.GPR, %struct.GPR* %5600, i32 0, i32 15
  %5602 = getelementptr inbounds %struct.Reg, %struct.Reg* %5601, i32 0, i32 0
  %RBP.i597 = bitcast %union.anon* %5602 to i64*
  %5603 = load i64, i64* %RCX.i596
  %5604 = load i64, i64* %RBP.i597
  %5605 = sub i64 %5604, 220
  %5606 = load i64, i64* %PC.i595
  %5607 = add i64 %5606, 6
  store i64 %5607, i64* %PC.i595
  %5608 = trunc i64 %5603 to i32
  %5609 = inttoptr i64 %5605 to i32*
  %5610 = load i32, i32* %5609
  %5611 = add i32 %5610, %5608
  %5612 = zext i32 %5611 to i64
  store i64 %5612, i64* %RCX.i596, align 8
  %5613 = icmp ult i32 %5611, %5608
  %5614 = icmp ult i32 %5611, %5610
  %5615 = or i1 %5613, %5614
  %5616 = zext i1 %5615 to i8
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5616, i8* %5617, align 1
  %5618 = and i32 %5611, 255
  %5619 = call i32 @llvm.ctpop.i32(i32 %5618)
  %5620 = trunc i32 %5619 to i8
  %5621 = and i8 %5620, 1
  %5622 = xor i8 %5621, 1
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5622, i8* %5623, align 1
  %5624 = xor i32 %5610, %5608
  %5625 = xor i32 %5624, %5611
  %5626 = lshr i32 %5625, 4
  %5627 = trunc i32 %5626 to i8
  %5628 = and i8 %5627, 1
  %5629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5628, i8* %5629, align 1
  %5630 = icmp eq i32 %5611, 0
  %5631 = zext i1 %5630 to i8
  %5632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5631, i8* %5632, align 1
  %5633 = lshr i32 %5611, 31
  %5634 = trunc i32 %5633 to i8
  %5635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5634, i8* %5635, align 1
  %5636 = lshr i32 %5608, 31
  %5637 = lshr i32 %5610, 31
  %5638 = xor i32 %5633, %5636
  %5639 = xor i32 %5633, %5637
  %5640 = add i32 %5638, %5639
  %5641 = icmp eq i32 %5640, 2
  %5642 = zext i1 %5641 to i8
  %5643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5642, i8* %5643, align 1
  store %struct.Memory* %loadMem_42409a, %struct.Memory** %MEMORY
  %loadMem_4240a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5645 = getelementptr inbounds %struct.GPR, %struct.GPR* %5644, i32 0, i32 33
  %5646 = getelementptr inbounds %struct.Reg, %struct.Reg* %5645, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %5646 to i64*
  %5647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5648 = getelementptr inbounds %struct.GPR, %struct.GPR* %5647, i32 0, i32 5
  %5649 = getelementptr inbounds %struct.Reg, %struct.Reg* %5648, i32 0, i32 0
  %ECX.i593 = bitcast %union.anon* %5649 to i32*
  %5650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5651 = getelementptr inbounds %struct.GPR, %struct.GPR* %5650, i32 0, i32 15
  %5652 = getelementptr inbounds %struct.Reg, %struct.Reg* %5651, i32 0, i32 0
  %RBP.i594 = bitcast %union.anon* %5652 to i64*
  %5653 = load i64, i64* %RBP.i594
  %5654 = sub i64 %5653, 128
  %5655 = load i32, i32* %ECX.i593
  %5656 = zext i32 %5655 to i64
  %5657 = load i64, i64* %PC.i592
  %5658 = add i64 %5657, 3
  store i64 %5658, i64* %PC.i592
  %5659 = inttoptr i64 %5654 to i32*
  store i32 %5655, i32* %5659
  store %struct.Memory* %loadMem_4240a0, %struct.Memory** %MEMORY
  %loadMem_4240a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5661 = getelementptr inbounds %struct.GPR, %struct.GPR* %5660, i32 0, i32 33
  %5662 = getelementptr inbounds %struct.Reg, %struct.Reg* %5661, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %5662 to i64*
  %5663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5664 = getelementptr inbounds %struct.GPR, %struct.GPR* %5663, i32 0, i32 5
  %5665 = getelementptr inbounds %struct.Reg, %struct.Reg* %5664, i32 0, i32 0
  %RCX.i590 = bitcast %union.anon* %5665 to i64*
  %5666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5667 = getelementptr inbounds %struct.GPR, %struct.GPR* %5666, i32 0, i32 15
  %5668 = getelementptr inbounds %struct.Reg, %struct.Reg* %5667, i32 0, i32 0
  %RBP.i591 = bitcast %union.anon* %5668 to i64*
  %5669 = load i64, i64* %RBP.i591
  %5670 = sub i64 %5669, 148
  %5671 = load i64, i64* %PC.i589
  %5672 = add i64 %5671, 6
  store i64 %5672, i64* %PC.i589
  %5673 = inttoptr i64 %5670 to i32*
  %5674 = load i32, i32* %5673
  %5675 = zext i32 %5674 to i64
  store i64 %5675, i64* %RCX.i590, align 8
  store %struct.Memory* %loadMem_4240a3, %struct.Memory** %MEMORY
  %loadMem_4240a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5677 = getelementptr inbounds %struct.GPR, %struct.GPR* %5676, i32 0, i32 33
  %5678 = getelementptr inbounds %struct.Reg, %struct.Reg* %5677, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %5678 to i64*
  %5679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5680 = getelementptr inbounds %struct.GPR, %struct.GPR* %5679, i32 0, i32 1
  %5681 = getelementptr inbounds %struct.Reg, %struct.Reg* %5680, i32 0, i32 0
  %RAX.i588 = bitcast %union.anon* %5681 to i64*
  %5682 = load i64, i64* %PC.i587
  %5683 = add i64 %5682, 8
  store i64 %5683, i64* %PC.i587
  %5684 = load i64, i64* bitcast (%G_0x6f8f00_type* @G_0x6f8f00 to i64*)
  store i64 %5684, i64* %RAX.i588, align 8
  store %struct.Memory* %loadMem_4240a9, %struct.Memory** %MEMORY
  %loadMem_4240b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5686 = getelementptr inbounds %struct.GPR, %struct.GPR* %5685, i32 0, i32 33
  %5687 = getelementptr inbounds %struct.Reg, %struct.Reg* %5686, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %5687 to i64*
  %5688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5689 = getelementptr inbounds %struct.GPR, %struct.GPR* %5688, i32 0, i32 7
  %5690 = getelementptr inbounds %struct.Reg, %struct.Reg* %5689, i32 0, i32 0
  %RDX.i585 = bitcast %union.anon* %5690 to i64*
  %5691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5692 = getelementptr inbounds %struct.GPR, %struct.GPR* %5691, i32 0, i32 15
  %5693 = getelementptr inbounds %struct.Reg, %struct.Reg* %5692, i32 0, i32 0
  %RBP.i586 = bitcast %union.anon* %5693 to i64*
  %5694 = load i64, i64* %RBP.i586
  %5695 = sub i64 %5694, 124
  %5696 = load i64, i64* %PC.i584
  %5697 = add i64 %5696, 3
  store i64 %5697, i64* %PC.i584
  %5698 = inttoptr i64 %5695 to i32*
  %5699 = load i32, i32* %5698
  %5700 = zext i32 %5699 to i64
  store i64 %5700, i64* %RDX.i585, align 8
  store %struct.Memory* %loadMem_4240b1, %struct.Memory** %MEMORY
  %loadMem_4240b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5702 = getelementptr inbounds %struct.GPR, %struct.GPR* %5701, i32 0, i32 33
  %5703 = getelementptr inbounds %struct.Reg, %struct.Reg* %5702, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %5703 to i64*
  %5704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5705 = getelementptr inbounds %struct.GPR, %struct.GPR* %5704, i32 0, i32 9
  %5706 = getelementptr inbounds %struct.Reg, %struct.Reg* %5705, i32 0, i32 0
  %RSI.i582 = bitcast %union.anon* %5706 to i64*
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5708 = getelementptr inbounds %struct.GPR, %struct.GPR* %5707, i32 0, i32 15
  %5709 = getelementptr inbounds %struct.Reg, %struct.Reg* %5708, i32 0, i32 0
  %RBP.i583 = bitcast %union.anon* %5709 to i64*
  %5710 = load i64, i64* %RBP.i583
  %5711 = sub i64 %5710, 152
  %5712 = load i64, i64* %PC.i581
  %5713 = add i64 %5712, 6
  store i64 %5713, i64* %PC.i581
  %5714 = inttoptr i64 %5711 to i32*
  %5715 = load i32, i32* %5714
  %5716 = zext i32 %5715 to i64
  store i64 %5716, i64* %RSI.i582, align 8
  store %struct.Memory* %loadMem_4240b4, %struct.Memory** %MEMORY
  %loadMem_4240ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %5717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5718 = getelementptr inbounds %struct.GPR, %struct.GPR* %5717, i32 0, i32 33
  %5719 = getelementptr inbounds %struct.Reg, %struct.Reg* %5718, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %5719 to i64*
  %5720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5721 = getelementptr inbounds %struct.GPR, %struct.GPR* %5720, i32 0, i32 5
  %5722 = getelementptr inbounds %struct.Reg, %struct.Reg* %5721, i32 0, i32 0
  %ECX.i579 = bitcast %union.anon* %5722 to i32*
  %5723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5724 = getelementptr inbounds %struct.GPR, %struct.GPR* %5723, i32 0, i32 15
  %5725 = getelementptr inbounds %struct.Reg, %struct.Reg* %5724, i32 0, i32 0
  %RBP.i580 = bitcast %union.anon* %5725 to i64*
  %5726 = load i64, i64* %RBP.i580
  %5727 = sub i64 %5726, 256
  %5728 = load i32, i32* %ECX.i579
  %5729 = zext i32 %5728 to i64
  %5730 = load i64, i64* %PC.i578
  %5731 = add i64 %5730, 6
  store i64 %5731, i64* %PC.i578
  %5732 = inttoptr i64 %5727 to i32*
  store i32 %5728, i32* %5732
  store %struct.Memory* %loadMem_4240ba, %struct.Memory** %MEMORY
  %loadMem_4240c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5734 = getelementptr inbounds %struct.GPR, %struct.GPR* %5733, i32 0, i32 33
  %5735 = getelementptr inbounds %struct.Reg, %struct.Reg* %5734, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %5735 to i64*
  %5736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5737 = getelementptr inbounds %struct.GPR, %struct.GPR* %5736, i32 0, i32 9
  %5738 = getelementptr inbounds %struct.Reg, %struct.Reg* %5737, i32 0, i32 0
  %ESI.i576 = bitcast %union.anon* %5738 to i32*
  %5739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5740 = getelementptr inbounds %struct.GPR, %struct.GPR* %5739, i32 0, i32 5
  %5741 = getelementptr inbounds %struct.Reg, %struct.Reg* %5740, i32 0, i32 0
  %RCX.i577 = bitcast %union.anon* %5741 to i64*
  %5742 = load i32, i32* %ESI.i576
  %5743 = zext i32 %5742 to i64
  %5744 = load i64, i64* %PC.i575
  %5745 = add i64 %5744, 2
  store i64 %5745, i64* %PC.i575
  %5746 = and i64 %5743, 4294967295
  store i64 %5746, i64* %RCX.i577, align 8
  store %struct.Memory* %loadMem_4240c0, %struct.Memory** %MEMORY
  %loadMem_4240c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5748 = getelementptr inbounds %struct.GPR, %struct.GPR* %5747, i32 0, i32 33
  %5749 = getelementptr inbounds %struct.Reg, %struct.Reg* %5748, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %5749 to i64*
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5751 = getelementptr inbounds %struct.GPR, %struct.GPR* %5750, i32 0, i32 5
  %5752 = getelementptr inbounds %struct.Reg, %struct.Reg* %5751, i32 0, i32 0
  %5753 = bitcast %union.anon* %5752 to %struct.anon.2*
  %CL.i572 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5753, i32 0, i32 0
  %5754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5755 = getelementptr inbounds %struct.GPR, %struct.GPR* %5754, i32 0, i32 7
  %5756 = getelementptr inbounds %struct.Reg, %struct.Reg* %5755, i32 0, i32 0
  %RDX.i573 = bitcast %union.anon* %5756 to i64*
  %5757 = load i64, i64* %RDX.i573
  %5758 = load i8, i8* %CL.i572
  %5759 = zext i8 %5758 to i64
  %5760 = load i64, i64* %PC.i571
  %5761 = add i64 %5760, 2
  store i64 %5761, i64* %PC.i571
  %5762 = trunc i64 %5759 to i5
  switch i5 %5762, label %5769 [
    i5 0, label %routine_shll__cl___edx.exit574
    i5 1, label %5763
  ]

; <label>:5763:                                   ; preds = %block_.L_424083
  %5764 = trunc i64 %5757 to i32
  %5765 = shl i32 %5764, 1
  %5766 = icmp slt i32 %5764, 0
  %5767 = icmp slt i32 %5765, 0
  %5768 = xor i1 %5766, %5767
  br label %5778

; <label>:5769:                                   ; preds = %block_.L_424083
  %5770 = and i64 %5759, 31
  %5771 = add i64 %5770, 4294967295
  %5772 = and i64 %5757, 4294967295
  %5773 = and i64 %5771, 4294967295
  %5774 = shl i64 %5772, %5773
  %5775 = trunc i64 %5774 to i32
  %5776 = icmp slt i32 %5775, 0
  %5777 = shl i32 %5775, 1
  br label %5778

; <label>:5778:                                   ; preds = %5769, %5763
  %5779 = phi i1 [ %5766, %5763 ], [ %5776, %5769 ]
  %5780 = phi i1 [ %5768, %5763 ], [ false, %5769 ]
  %5781 = phi i32 [ %5765, %5763 ], [ %5777, %5769 ]
  %5782 = zext i32 %5781 to i64
  store i64 %5782, i64* %RDX.i573, align 8
  %5783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5784 = zext i1 %5779 to i8
  store i8 %5784, i8* %5783, align 1
  %5785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5786 = and i32 %5781, 254
  %5787 = call i32 @llvm.ctpop.i32(i32 %5786)
  %5788 = trunc i32 %5787 to i8
  %5789 = and i8 %5788, 1
  %5790 = xor i8 %5789, 1
  store i8 %5790, i8* %5785, align 1
  %5791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5791, align 1
  %5792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5793 = icmp eq i32 %5781, 0
  %5794 = zext i1 %5793 to i8
  store i8 %5794, i8* %5792, align 1
  %5795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5796 = lshr i32 %5781, 31
  %5797 = trunc i32 %5796 to i8
  store i8 %5797, i8* %5795, align 1
  %5798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5799 = zext i1 %5780 to i8
  store i8 %5799, i8* %5798, align 1
  br label %routine_shll__cl___edx.exit574

routine_shll__cl___edx.exit574:                   ; preds = %block_.L_424083, %5778
  store %struct.Memory* %loadMem_4240c2, %struct.Memory** %MEMORY
  %loadMem_4240c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5801 = getelementptr inbounds %struct.GPR, %struct.GPR* %5800, i32 0, i32 33
  %5802 = getelementptr inbounds %struct.Reg, %struct.Reg* %5801, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %5802 to i64*
  %5803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5804 = getelementptr inbounds %struct.GPR, %struct.GPR* %5803, i32 0, i32 9
  %5805 = getelementptr inbounds %struct.Reg, %struct.Reg* %5804, i32 0, i32 0
  %RSI.i569 = bitcast %union.anon* %5805 to i64*
  %5806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5807 = getelementptr inbounds %struct.GPR, %struct.GPR* %5806, i32 0, i32 15
  %5808 = getelementptr inbounds %struct.Reg, %struct.Reg* %5807, i32 0, i32 0
  %RBP.i570 = bitcast %union.anon* %5808 to i64*
  %5809 = load i64, i64* %RBP.i570
  %5810 = sub i64 %5809, 70
  %5811 = load i64, i64* %PC.i568
  %5812 = add i64 %5811, 4
  store i64 %5812, i64* %PC.i568
  %5813 = inttoptr i64 %5810 to i16*
  %5814 = load i16, i16* %5813
  %5815 = sext i16 %5814 to i64
  %5816 = and i64 %5815, 4294967295
  store i64 %5816, i64* %RSI.i569, align 8
  store %struct.Memory* %loadMem_4240c4, %struct.Memory** %MEMORY
  %loadMem_4240c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5818 = getelementptr inbounds %struct.GPR, %struct.GPR* %5817, i32 0, i32 33
  %5819 = getelementptr inbounds %struct.Reg, %struct.Reg* %5818, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %5819 to i64*
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5821 = getelementptr inbounds %struct.GPR, %struct.GPR* %5820, i32 0, i32 9
  %5822 = getelementptr inbounds %struct.Reg, %struct.Reg* %5821, i32 0, i32 0
  %ESI.i566 = bitcast %union.anon* %5822 to i32*
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5824 = getelementptr inbounds %struct.GPR, %struct.GPR* %5823, i32 0, i32 7
  %5825 = getelementptr inbounds %struct.Reg, %struct.Reg* %5824, i32 0, i32 0
  %RDX.i567 = bitcast %union.anon* %5825 to i64*
  %5826 = load i64, i64* %RDX.i567
  %5827 = load i32, i32* %ESI.i566
  %5828 = zext i32 %5827 to i64
  %5829 = load i64, i64* %PC.i565
  %5830 = add i64 %5829, 2
  store i64 %5830, i64* %PC.i565
  %5831 = trunc i64 %5826 to i32
  %5832 = sub i32 %5831, %5827
  %5833 = zext i32 %5832 to i64
  store i64 %5833, i64* %RDX.i567, align 8
  %5834 = icmp ult i32 %5831, %5827
  %5835 = zext i1 %5834 to i8
  %5836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5835, i8* %5836, align 1
  %5837 = and i32 %5832, 255
  %5838 = call i32 @llvm.ctpop.i32(i32 %5837)
  %5839 = trunc i32 %5838 to i8
  %5840 = and i8 %5839, 1
  %5841 = xor i8 %5840, 1
  %5842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5841, i8* %5842, align 1
  %5843 = xor i64 %5828, %5826
  %5844 = trunc i64 %5843 to i32
  %5845 = xor i32 %5844, %5832
  %5846 = lshr i32 %5845, 4
  %5847 = trunc i32 %5846 to i8
  %5848 = and i8 %5847, 1
  %5849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5848, i8* %5849, align 1
  %5850 = icmp eq i32 %5832, 0
  %5851 = zext i1 %5850 to i8
  %5852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5851, i8* %5852, align 1
  %5853 = lshr i32 %5832, 31
  %5854 = trunc i32 %5853 to i8
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5854, i8* %5855, align 1
  %5856 = lshr i32 %5831, 31
  %5857 = lshr i32 %5827, 31
  %5858 = xor i32 %5857, %5856
  %5859 = xor i32 %5853, %5856
  %5860 = add i32 %5859, %5858
  %5861 = icmp eq i32 %5860, 2
  %5862 = zext i1 %5861 to i8
  %5863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5862, i8* %5863, align 1
  store %struct.Memory* %loadMem_4240c8, %struct.Memory** %MEMORY
  %loadMem_4240ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %5864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5865 = getelementptr inbounds %struct.GPR, %struct.GPR* %5864, i32 0, i32 33
  %5866 = getelementptr inbounds %struct.Reg, %struct.Reg* %5865, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %5866 to i64*
  %5867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5868 = getelementptr inbounds %struct.GPR, %struct.GPR* %5867, i32 0, i32 7
  %5869 = getelementptr inbounds %struct.Reg, %struct.Reg* %5868, i32 0, i32 0
  %EDX.i563 = bitcast %union.anon* %5869 to i32*
  %5870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5871 = getelementptr inbounds %struct.GPR, %struct.GPR* %5870, i32 0, i32 11
  %5872 = getelementptr inbounds %struct.Reg, %struct.Reg* %5871, i32 0, i32 0
  %RDI.i564 = bitcast %union.anon* %5872 to i64*
  %5873 = load i32, i32* %EDX.i563
  %5874 = zext i32 %5873 to i64
  %5875 = load i64, i64* %PC.i562
  %5876 = add i64 %5875, 3
  store i64 %5876, i64* %PC.i562
  %5877 = shl i64 %5874, 32
  %5878 = ashr exact i64 %5877, 32
  store i64 %5878, i64* %RDI.i564, align 8
  store %struct.Memory* %loadMem_4240ca, %struct.Memory** %MEMORY
  %loadMem_4240cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5880 = getelementptr inbounds %struct.GPR, %struct.GPR* %5879, i32 0, i32 33
  %5881 = getelementptr inbounds %struct.Reg, %struct.Reg* %5880, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %5881 to i64*
  %5882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5883 = getelementptr inbounds %struct.GPR, %struct.GPR* %5882, i32 0, i32 1
  %5884 = getelementptr inbounds %struct.Reg, %struct.Reg* %5883, i32 0, i32 0
  %RAX.i559 = bitcast %union.anon* %5884 to i64*
  %5885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5886 = getelementptr inbounds %struct.GPR, %struct.GPR* %5885, i32 0, i32 7
  %5887 = getelementptr inbounds %struct.Reg, %struct.Reg* %5886, i32 0, i32 0
  %RDX.i560 = bitcast %union.anon* %5887 to i64*
  %5888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5889 = getelementptr inbounds %struct.GPR, %struct.GPR* %5888, i32 0, i32 11
  %5890 = getelementptr inbounds %struct.Reg, %struct.Reg* %5889, i32 0, i32 0
  %RDI.i561 = bitcast %union.anon* %5890 to i64*
  %5891 = load i64, i64* %RAX.i559
  %5892 = load i64, i64* %RDI.i561
  %5893 = mul i64 %5892, 4
  %5894 = add i64 %5893, %5891
  %5895 = load i64, i64* %PC.i558
  %5896 = add i64 %5895, 3
  store i64 %5896, i64* %PC.i558
  %5897 = inttoptr i64 %5894 to i32*
  %5898 = load i32, i32* %5897
  %5899 = zext i32 %5898 to i64
  store i64 %5899, i64* %RDX.i560, align 8
  store %struct.Memory* %loadMem_4240cd, %struct.Memory** %MEMORY
  %loadMem_4240d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5901 = getelementptr inbounds %struct.GPR, %struct.GPR* %5900, i32 0, i32 33
  %5902 = getelementptr inbounds %struct.Reg, %struct.Reg* %5901, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %5902 to i64*
  %5903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5904 = getelementptr inbounds %struct.GPR, %struct.GPR* %5903, i32 0, i32 1
  %5905 = getelementptr inbounds %struct.Reg, %struct.Reg* %5904, i32 0, i32 0
  %RAX.i557 = bitcast %union.anon* %5905 to i64*
  %5906 = load i64, i64* %PC.i556
  %5907 = add i64 %5906, 8
  store i64 %5907, i64* %PC.i556
  %5908 = load i64, i64* bitcast (%G_0x6f8f00_type* @G_0x6f8f00 to i64*)
  store i64 %5908, i64* %RAX.i557, align 8
  store %struct.Memory* %loadMem_4240d0, %struct.Memory** %MEMORY
  %loadMem_4240d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5910 = getelementptr inbounds %struct.GPR, %struct.GPR* %5909, i32 0, i32 33
  %5911 = getelementptr inbounds %struct.Reg, %struct.Reg* %5910, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %5911 to i64*
  %5912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5913 = getelementptr inbounds %struct.GPR, %struct.GPR* %5912, i32 0, i32 9
  %5914 = getelementptr inbounds %struct.Reg, %struct.Reg* %5913, i32 0, i32 0
  %RSI.i554 = bitcast %union.anon* %5914 to i64*
  %5915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5916 = getelementptr inbounds %struct.GPR, %struct.GPR* %5915, i32 0, i32 15
  %5917 = getelementptr inbounds %struct.Reg, %struct.Reg* %5916, i32 0, i32 0
  %RBP.i555 = bitcast %union.anon* %5917 to i64*
  %5918 = load i64, i64* %RBP.i555
  %5919 = sub i64 %5918, 128
  %5920 = load i64, i64* %PC.i553
  %5921 = add i64 %5920, 3
  store i64 %5921, i64* %PC.i553
  %5922 = inttoptr i64 %5919 to i32*
  %5923 = load i32, i32* %5922
  %5924 = zext i32 %5923 to i64
  store i64 %5924, i64* %RSI.i554, align 8
  store %struct.Memory* %loadMem_4240d8, %struct.Memory** %MEMORY
  %loadMem_4240db = load %struct.Memory*, %struct.Memory** %MEMORY
  %5925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5926 = getelementptr inbounds %struct.GPR, %struct.GPR* %5925, i32 0, i32 33
  %5927 = getelementptr inbounds %struct.Reg, %struct.Reg* %5926, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %5927 to i64*
  %5928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5929 = getelementptr inbounds %struct.GPR, %struct.GPR* %5928, i32 0, i32 5
  %5930 = getelementptr inbounds %struct.Reg, %struct.Reg* %5929, i32 0, i32 0
  %RCX.i551 = bitcast %union.anon* %5930 to i64*
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5932 = getelementptr inbounds %struct.GPR, %struct.GPR* %5931, i32 0, i32 15
  %5933 = getelementptr inbounds %struct.Reg, %struct.Reg* %5932, i32 0, i32 0
  %RBP.i552 = bitcast %union.anon* %5933 to i64*
  %5934 = load i64, i64* %RBP.i552
  %5935 = sub i64 %5934, 152
  %5936 = load i64, i64* %PC.i550
  %5937 = add i64 %5936, 6
  store i64 %5937, i64* %PC.i550
  %5938 = inttoptr i64 %5935 to i32*
  %5939 = load i32, i32* %5938
  %5940 = zext i32 %5939 to i64
  store i64 %5940, i64* %RCX.i551, align 8
  store %struct.Memory* %loadMem_4240db, %struct.Memory** %MEMORY
  %loadMem_4240e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5942 = getelementptr inbounds %struct.GPR, %struct.GPR* %5941, i32 0, i32 33
  %5943 = getelementptr inbounds %struct.Reg, %struct.Reg* %5942, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %5943 to i64*
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5945 = getelementptr inbounds %struct.GPR, %struct.GPR* %5944, i32 0, i32 5
  %5946 = getelementptr inbounds %struct.Reg, %struct.Reg* %5945, i32 0, i32 0
  %5947 = bitcast %union.anon* %5946 to %struct.anon.2*
  %CL.i547 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5947, i32 0, i32 0
  %5948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5949 = getelementptr inbounds %struct.GPR, %struct.GPR* %5948, i32 0, i32 9
  %5950 = getelementptr inbounds %struct.Reg, %struct.Reg* %5949, i32 0, i32 0
  %RSI.i548 = bitcast %union.anon* %5950 to i64*
  %5951 = load i64, i64* %RSI.i548
  %5952 = load i8, i8* %CL.i547
  %5953 = zext i8 %5952 to i64
  %5954 = load i64, i64* %PC.i546
  %5955 = add i64 %5954, 2
  store i64 %5955, i64* %PC.i546
  %5956 = trunc i64 %5953 to i5
  switch i5 %5956, label %5963 [
    i5 0, label %routine_shll__cl___esi.exit549
    i5 1, label %5957
  ]

; <label>:5957:                                   ; preds = %routine_shll__cl___edx.exit574
  %5958 = trunc i64 %5951 to i32
  %5959 = shl i32 %5958, 1
  %5960 = icmp slt i32 %5958, 0
  %5961 = icmp slt i32 %5959, 0
  %5962 = xor i1 %5960, %5961
  br label %5972

; <label>:5963:                                   ; preds = %routine_shll__cl___edx.exit574
  %5964 = and i64 %5953, 31
  %5965 = add i64 %5964, 4294967295
  %5966 = and i64 %5951, 4294967295
  %5967 = and i64 %5965, 4294967295
  %5968 = shl i64 %5966, %5967
  %5969 = trunc i64 %5968 to i32
  %5970 = icmp slt i32 %5969, 0
  %5971 = shl i32 %5969, 1
  br label %5972

; <label>:5972:                                   ; preds = %5963, %5957
  %5973 = phi i1 [ %5960, %5957 ], [ %5970, %5963 ]
  %5974 = phi i1 [ %5962, %5957 ], [ false, %5963 ]
  %5975 = phi i32 [ %5959, %5957 ], [ %5971, %5963 ]
  %5976 = zext i32 %5975 to i64
  store i64 %5976, i64* %RSI.i548, align 8
  %5977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5978 = zext i1 %5973 to i8
  store i8 %5978, i8* %5977, align 1
  %5979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5980 = and i32 %5975, 254
  %5981 = call i32 @llvm.ctpop.i32(i32 %5980)
  %5982 = trunc i32 %5981 to i8
  %5983 = and i8 %5982, 1
  %5984 = xor i8 %5983, 1
  store i8 %5984, i8* %5979, align 1
  %5985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5985, align 1
  %5986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5987 = icmp eq i32 %5975, 0
  %5988 = zext i1 %5987 to i8
  store i8 %5988, i8* %5986, align 1
  %5989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5990 = lshr i32 %5975, 31
  %5991 = trunc i32 %5990 to i8
  store i8 %5991, i8* %5989, align 1
  %5992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5993 = zext i1 %5974 to i8
  store i8 %5993, i8* %5992, align 1
  br label %routine_shll__cl___esi.exit549

routine_shll__cl___esi.exit549:                   ; preds = %routine_shll__cl___edx.exit574, %5972
  store %struct.Memory* %loadMem_4240e1, %struct.Memory** %MEMORY
  %loadMem_4240e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5995 = getelementptr inbounds %struct.GPR, %struct.GPR* %5994, i32 0, i32 33
  %5996 = getelementptr inbounds %struct.Reg, %struct.Reg* %5995, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %5996 to i64*
  %5997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5998 = getelementptr inbounds %struct.GPR, %struct.GPR* %5997, i32 0, i32 17
  %5999 = getelementptr inbounds %struct.Reg, %struct.Reg* %5998, i32 0, i32 0
  %R8D.i544 = bitcast %union.anon* %5999 to i32*
  %6000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6001 = getelementptr inbounds %struct.GPR, %struct.GPR* %6000, i32 0, i32 15
  %6002 = getelementptr inbounds %struct.Reg, %struct.Reg* %6001, i32 0, i32 0
  %RBP.i545 = bitcast %union.anon* %6002 to i64*
  %6003 = bitcast i32* %R8D.i544 to i64*
  %6004 = load i64, i64* %RBP.i545
  %6005 = sub i64 %6004, 72
  %6006 = load i64, i64* %PC.i543
  %6007 = add i64 %6006, 5
  store i64 %6007, i64* %PC.i543
  %6008 = inttoptr i64 %6005 to i16*
  %6009 = load i16, i16* %6008
  %6010 = sext i16 %6009 to i64
  %6011 = and i64 %6010, 4294967295
  store i64 %6011, i64* %6003, align 8
  store %struct.Memory* %loadMem_4240e3, %struct.Memory** %MEMORY
  %loadMem_4240e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6013 = getelementptr inbounds %struct.GPR, %struct.GPR* %6012, i32 0, i32 33
  %6014 = getelementptr inbounds %struct.Reg, %struct.Reg* %6013, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %6014 to i64*
  %6015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6016 = getelementptr inbounds %struct.GPR, %struct.GPR* %6015, i32 0, i32 17
  %6017 = getelementptr inbounds %struct.Reg, %struct.Reg* %6016, i32 0, i32 0
  %R8D.i541 = bitcast %union.anon* %6017 to i32*
  %6018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6019 = getelementptr inbounds %struct.GPR, %struct.GPR* %6018, i32 0, i32 9
  %6020 = getelementptr inbounds %struct.Reg, %struct.Reg* %6019, i32 0, i32 0
  %RSI.i542 = bitcast %union.anon* %6020 to i64*
  %6021 = load i64, i64* %RSI.i542
  %6022 = load i32, i32* %R8D.i541
  %6023 = zext i32 %6022 to i64
  %6024 = load i64, i64* %PC.i540
  %6025 = add i64 %6024, 3
  store i64 %6025, i64* %PC.i540
  %6026 = trunc i64 %6021 to i32
  %6027 = sub i32 %6026, %6022
  %6028 = zext i32 %6027 to i64
  store i64 %6028, i64* %RSI.i542, align 8
  %6029 = icmp ult i32 %6026, %6022
  %6030 = zext i1 %6029 to i8
  %6031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6030, i8* %6031, align 1
  %6032 = and i32 %6027, 255
  %6033 = call i32 @llvm.ctpop.i32(i32 %6032)
  %6034 = trunc i32 %6033 to i8
  %6035 = and i8 %6034, 1
  %6036 = xor i8 %6035, 1
  %6037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6036, i8* %6037, align 1
  %6038 = xor i64 %6023, %6021
  %6039 = trunc i64 %6038 to i32
  %6040 = xor i32 %6039, %6027
  %6041 = lshr i32 %6040, 4
  %6042 = trunc i32 %6041 to i8
  %6043 = and i8 %6042, 1
  %6044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6043, i8* %6044, align 1
  %6045 = icmp eq i32 %6027, 0
  %6046 = zext i1 %6045 to i8
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6046, i8* %6047, align 1
  %6048 = lshr i32 %6027, 31
  %6049 = trunc i32 %6048 to i8
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6049, i8* %6050, align 1
  %6051 = lshr i32 %6026, 31
  %6052 = lshr i32 %6022, 31
  %6053 = xor i32 %6052, %6051
  %6054 = xor i32 %6048, %6051
  %6055 = add i32 %6054, %6053
  %6056 = icmp eq i32 %6055, 2
  %6057 = zext i1 %6056 to i8
  %6058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6057, i8* %6058, align 1
  store %struct.Memory* %loadMem_4240e8, %struct.Memory** %MEMORY
  %loadMem_4240eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6060 = getelementptr inbounds %struct.GPR, %struct.GPR* %6059, i32 0, i32 33
  %6061 = getelementptr inbounds %struct.Reg, %struct.Reg* %6060, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %6061 to i64*
  %6062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6063 = getelementptr inbounds %struct.GPR, %struct.GPR* %6062, i32 0, i32 9
  %6064 = getelementptr inbounds %struct.Reg, %struct.Reg* %6063, i32 0, i32 0
  %ESI.i538 = bitcast %union.anon* %6064 to i32*
  %6065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6066 = getelementptr inbounds %struct.GPR, %struct.GPR* %6065, i32 0, i32 11
  %6067 = getelementptr inbounds %struct.Reg, %struct.Reg* %6066, i32 0, i32 0
  %RDI.i539 = bitcast %union.anon* %6067 to i64*
  %6068 = load i32, i32* %ESI.i538
  %6069 = zext i32 %6068 to i64
  %6070 = load i64, i64* %PC.i537
  %6071 = add i64 %6070, 3
  store i64 %6071, i64* %PC.i537
  %6072 = shl i64 %6069, 32
  %6073 = ashr exact i64 %6072, 32
  store i64 %6073, i64* %RDI.i539, align 8
  store %struct.Memory* %loadMem_4240eb, %struct.Memory** %MEMORY
  %loadMem_4240ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %6074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6075 = getelementptr inbounds %struct.GPR, %struct.GPR* %6074, i32 0, i32 33
  %6076 = getelementptr inbounds %struct.Reg, %struct.Reg* %6075, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %6076 to i64*
  %6077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6078 = getelementptr inbounds %struct.GPR, %struct.GPR* %6077, i32 0, i32 1
  %6079 = getelementptr inbounds %struct.Reg, %struct.Reg* %6078, i32 0, i32 0
  %RAX.i534 = bitcast %union.anon* %6079 to i64*
  %6080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6081 = getelementptr inbounds %struct.GPR, %struct.GPR* %6080, i32 0, i32 7
  %6082 = getelementptr inbounds %struct.Reg, %struct.Reg* %6081, i32 0, i32 0
  %RDX.i535 = bitcast %union.anon* %6082 to i64*
  %6083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6084 = getelementptr inbounds %struct.GPR, %struct.GPR* %6083, i32 0, i32 11
  %6085 = getelementptr inbounds %struct.Reg, %struct.Reg* %6084, i32 0, i32 0
  %RDI.i536 = bitcast %union.anon* %6085 to i64*
  %6086 = load i64, i64* %RDX.i535
  %6087 = load i64, i64* %RAX.i534
  %6088 = load i64, i64* %RDI.i536
  %6089 = mul i64 %6088, 4
  %6090 = add i64 %6089, %6087
  %6091 = load i64, i64* %PC.i533
  %6092 = add i64 %6091, 3
  store i64 %6092, i64* %PC.i533
  %6093 = trunc i64 %6086 to i32
  %6094 = inttoptr i64 %6090 to i32*
  %6095 = load i32, i32* %6094
  %6096 = add i32 %6095, %6093
  %6097 = zext i32 %6096 to i64
  store i64 %6097, i64* %RDX.i535, align 8
  %6098 = icmp ult i32 %6096, %6093
  %6099 = icmp ult i32 %6096, %6095
  %6100 = or i1 %6098, %6099
  %6101 = zext i1 %6100 to i8
  %6102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6101, i8* %6102, align 1
  %6103 = and i32 %6096, 255
  %6104 = call i32 @llvm.ctpop.i32(i32 %6103)
  %6105 = trunc i32 %6104 to i8
  %6106 = and i8 %6105, 1
  %6107 = xor i8 %6106, 1
  %6108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6107, i8* %6108, align 1
  %6109 = xor i32 %6095, %6093
  %6110 = xor i32 %6109, %6096
  %6111 = lshr i32 %6110, 4
  %6112 = trunc i32 %6111 to i8
  %6113 = and i8 %6112, 1
  %6114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6113, i8* %6114, align 1
  %6115 = icmp eq i32 %6096, 0
  %6116 = zext i1 %6115 to i8
  %6117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6116, i8* %6117, align 1
  %6118 = lshr i32 %6096, 31
  %6119 = trunc i32 %6118 to i8
  %6120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6119, i8* %6120, align 1
  %6121 = lshr i32 %6093, 31
  %6122 = lshr i32 %6095, 31
  %6123 = xor i32 %6118, %6121
  %6124 = xor i32 %6118, %6122
  %6125 = add i32 %6123, %6124
  %6126 = icmp eq i32 %6125, 2
  %6127 = zext i1 %6126 to i8
  %6128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6127, i8* %6128, align 1
  store %struct.Memory* %loadMem_4240ee, %struct.Memory** %MEMORY
  %loadMem_4240f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6130 = getelementptr inbounds %struct.GPR, %struct.GPR* %6129, i32 0, i32 33
  %6131 = getelementptr inbounds %struct.Reg, %struct.Reg* %6130, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %6131 to i64*
  %6132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6133 = getelementptr inbounds %struct.GPR, %struct.GPR* %6132, i32 0, i32 9
  %6134 = getelementptr inbounds %struct.Reg, %struct.Reg* %6133, i32 0, i32 0
  %RSI.i531 = bitcast %union.anon* %6134 to i64*
  %6135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6136 = getelementptr inbounds %struct.GPR, %struct.GPR* %6135, i32 0, i32 15
  %6137 = getelementptr inbounds %struct.Reg, %struct.Reg* %6136, i32 0, i32 0
  %RBP.i532 = bitcast %union.anon* %6137 to i64*
  %6138 = load i64, i64* %RBP.i532
  %6139 = sub i64 %6138, 256
  %6140 = load i64, i64* %PC.i530
  %6141 = add i64 %6140, 6
  store i64 %6141, i64* %PC.i530
  %6142 = inttoptr i64 %6139 to i32*
  %6143 = load i32, i32* %6142
  %6144 = zext i32 %6143 to i64
  store i64 %6144, i64* %RSI.i531, align 8
  store %struct.Memory* %loadMem_4240f1, %struct.Memory** %MEMORY
  %loadMem_4240f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6146 = getelementptr inbounds %struct.GPR, %struct.GPR* %6145, i32 0, i32 33
  %6147 = getelementptr inbounds %struct.Reg, %struct.Reg* %6146, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %6147 to i64*
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6149 = getelementptr inbounds %struct.GPR, %struct.GPR* %6148, i32 0, i32 7
  %6150 = getelementptr inbounds %struct.Reg, %struct.Reg* %6149, i32 0, i32 0
  %EDX.i528 = bitcast %union.anon* %6150 to i32*
  %6151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6152 = getelementptr inbounds %struct.GPR, %struct.GPR* %6151, i32 0, i32 9
  %6153 = getelementptr inbounds %struct.Reg, %struct.Reg* %6152, i32 0, i32 0
  %RSI.i529 = bitcast %union.anon* %6153 to i64*
  %6154 = load i64, i64* %RSI.i529
  %6155 = load i32, i32* %EDX.i528
  %6156 = zext i32 %6155 to i64
  %6157 = load i64, i64* %PC.i527
  %6158 = add i64 %6157, 3
  store i64 %6158, i64* %PC.i527
  %6159 = shl i64 %6154, 32
  %6160 = ashr exact i64 %6159, 32
  %6161 = shl i64 %6156, 32
  %6162 = ashr exact i64 %6161, 32
  %6163 = mul i64 %6162, %6160
  %6164 = trunc i64 %6163 to i32
  %6165 = and i64 %6163, 4294967295
  store i64 %6165, i64* %RSI.i529, align 8
  %6166 = shl i64 %6163, 32
  %6167 = ashr exact i64 %6166, 32
  %6168 = icmp ne i64 %6167, %6163
  %6169 = zext i1 %6168 to i8
  %6170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6169, i8* %6170, align 1
  %6171 = and i32 %6164, 255
  %6172 = call i32 @llvm.ctpop.i32(i32 %6171)
  %6173 = trunc i32 %6172 to i8
  %6174 = and i8 %6173, 1
  %6175 = xor i8 %6174, 1
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6175, i8* %6176, align 1
  %6177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6177, align 1
  %6178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6178, align 1
  %6179 = lshr i32 %6164, 31
  %6180 = trunc i32 %6179 to i8
  %6181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6180, i8* %6181, align 1
  %6182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6169, i8* %6182, align 1
  store %struct.Memory* %loadMem_4240f7, %struct.Memory** %MEMORY
  %loadMem_4240fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6184 = getelementptr inbounds %struct.GPR, %struct.GPR* %6183, i32 0, i32 33
  %6185 = getelementptr inbounds %struct.Reg, %struct.Reg* %6184, i32 0, i32 0
  %PC.i525 = bitcast %union.anon* %6185 to i64*
  %6186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6187 = getelementptr inbounds %struct.GPR, %struct.GPR* %6186, i32 0, i32 9
  %6188 = getelementptr inbounds %struct.Reg, %struct.Reg* %6187, i32 0, i32 0
  %RSI.i526 = bitcast %union.anon* %6188 to i64*
  %6189 = load i64, i64* %RSI.i526
  %6190 = load i64, i64* %PC.i525
  %6191 = add i64 %6190, 3
  store i64 %6191, i64* %PC.i525
  %6192 = shl i64 %6189, 32
  %6193 = ashr exact i64 %6192, 32
  %6194 = ashr i64 %6193, 15
  %6195 = lshr i64 %6194, 1
  %6196 = trunc i64 %6194 to i8
  %6197 = and i8 %6196, 1
  %6198 = trunc i64 %6195 to i32
  %6199 = and i64 %6195, 4294967295
  store i64 %6199, i64* %RSI.i526, align 8
  %6200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6197, i8* %6200, align 1
  %6201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6202 = and i32 %6198, 255
  %6203 = call i32 @llvm.ctpop.i32(i32 %6202)
  %6204 = trunc i32 %6203 to i8
  %6205 = and i8 %6204, 1
  %6206 = xor i8 %6205, 1
  store i8 %6206, i8* %6201, align 1
  %6207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6207, align 1
  %6208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6209 = icmp eq i32 %6198, 0
  %6210 = zext i1 %6209 to i8
  store i8 %6210, i8* %6208, align 1
  %6211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6212 = lshr i32 %6198, 31
  %6213 = trunc i32 %6212 to i8
  store i8 %6213, i8* %6211, align 1
  %6214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6214, align 1
  store %struct.Memory* %loadMem_4240fa, %struct.Memory** %MEMORY
  %loadMem_4240fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6216 = getelementptr inbounds %struct.GPR, %struct.GPR* %6215, i32 0, i32 33
  %6217 = getelementptr inbounds %struct.Reg, %struct.Reg* %6216, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %6217 to i64*
  %6218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6219 = getelementptr inbounds %struct.GPR, %struct.GPR* %6218, i32 0, i32 9
  %6220 = getelementptr inbounds %struct.Reg, %struct.Reg* %6219, i32 0, i32 0
  %ESI.i523 = bitcast %union.anon* %6220 to i32*
  %6221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6222 = getelementptr inbounds %struct.GPR, %struct.GPR* %6221, i32 0, i32 15
  %6223 = getelementptr inbounds %struct.Reg, %struct.Reg* %6222, i32 0, i32 0
  %RBP.i524 = bitcast %union.anon* %6223 to i64*
  %6224 = load i64, i64* %RBP.i524
  %6225 = sub i64 %6224, 228
  %6226 = load i32, i32* %ESI.i523
  %6227 = zext i32 %6226 to i64
  %6228 = load i64, i64* %PC.i522
  %6229 = add i64 %6228, 6
  store i64 %6229, i64* %PC.i522
  %6230 = inttoptr i64 %6225 to i32*
  store i32 %6226, i32* %6230
  store %struct.Memory* %loadMem_4240fd, %struct.Memory** %MEMORY
  %loadMem_424103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6232 = getelementptr inbounds %struct.GPR, %struct.GPR* %6231, i32 0, i32 33
  %6233 = getelementptr inbounds %struct.Reg, %struct.Reg* %6232, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %6233 to i64*
  %6234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6235 = getelementptr inbounds %struct.GPR, %struct.GPR* %6234, i32 0, i32 11
  %6236 = getelementptr inbounds %struct.Reg, %struct.Reg* %6235, i32 0, i32 0
  %RDI.i520 = bitcast %union.anon* %6236 to i64*
  %6237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6238 = getelementptr inbounds %struct.GPR, %struct.GPR* %6237, i32 0, i32 15
  %6239 = getelementptr inbounds %struct.Reg, %struct.Reg* %6238, i32 0, i32 0
  %RBP.i521 = bitcast %union.anon* %6239 to i64*
  %6240 = load i64, i64* %RBP.i521
  %6241 = sub i64 %6240, 60
  %6242 = load i64, i64* %PC.i519
  %6243 = add i64 %6242, 3
  store i64 %6243, i64* %PC.i519
  %6244 = inttoptr i64 %6241 to i32*
  %6245 = load i32, i32* %6244
  %6246 = zext i32 %6245 to i64
  store i64 %6246, i64* %RDI.i520, align 8
  store %struct.Memory* %loadMem_424103, %struct.Memory** %MEMORY
  %loadMem_424106 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6248 = getelementptr inbounds %struct.GPR, %struct.GPR* %6247, i32 0, i32 33
  %6249 = getelementptr inbounds %struct.Reg, %struct.Reg* %6248, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %6249 to i64*
  %6250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6251 = getelementptr inbounds %struct.GPR, %struct.GPR* %6250, i32 0, i32 9
  %6252 = getelementptr inbounds %struct.Reg, %struct.Reg* %6251, i32 0, i32 0
  %RSI.i517 = bitcast %union.anon* %6252 to i64*
  %6253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6254 = getelementptr inbounds %struct.GPR, %struct.GPR* %6253, i32 0, i32 15
  %6255 = getelementptr inbounds %struct.Reg, %struct.Reg* %6254, i32 0, i32 0
  %RBP.i518 = bitcast %union.anon* %6255 to i64*
  %6256 = load i64, i64* %RBP.i518
  %6257 = sub i64 %6256, 64
  %6258 = load i64, i64* %PC.i516
  %6259 = add i64 %6258, 3
  store i64 %6259, i64* %PC.i516
  %6260 = inttoptr i64 %6257 to i32*
  %6261 = load i32, i32* %6260
  %6262 = zext i32 %6261 to i64
  store i64 %6262, i64* %RSI.i517, align 8
  store %struct.Memory* %loadMem_424106, %struct.Memory** %MEMORY
  %loadMem_424109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6264 = getelementptr inbounds %struct.GPR, %struct.GPR* %6263, i32 0, i32 33
  %6265 = getelementptr inbounds %struct.Reg, %struct.Reg* %6264, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %6265 to i64*
  %6266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6267 = getelementptr inbounds %struct.GPR, %struct.GPR* %6266, i32 0, i32 7
  %6268 = getelementptr inbounds %struct.Reg, %struct.Reg* %6267, i32 0, i32 0
  %RDX.i514 = bitcast %union.anon* %6268 to i64*
  %6269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6270 = getelementptr inbounds %struct.GPR, %struct.GPR* %6269, i32 0, i32 15
  %6271 = getelementptr inbounds %struct.Reg, %struct.Reg* %6270, i32 0, i32 0
  %RBP.i515 = bitcast %union.anon* %6271 to i64*
  %6272 = load i64, i64* %RBP.i515
  %6273 = sub i64 %6272, 156
  %6274 = load i64, i64* %PC.i513
  %6275 = add i64 %6274, 6
  store i64 %6275, i64* %PC.i513
  %6276 = inttoptr i64 %6273 to i32*
  %6277 = load i32, i32* %6276
  %6278 = zext i32 %6277 to i64
  store i64 %6278, i64* %RDX.i514, align 8
  store %struct.Memory* %loadMem_424109, %struct.Memory** %MEMORY
  %loadMem_42410f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6280 = getelementptr inbounds %struct.GPR, %struct.GPR* %6279, i32 0, i32 33
  %6281 = getelementptr inbounds %struct.Reg, %struct.Reg* %6280, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %6281 to i64*
  %6282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6283 = getelementptr inbounds %struct.GPR, %struct.GPR* %6282, i32 0, i32 5
  %6284 = getelementptr inbounds %struct.Reg, %struct.Reg* %6283, i32 0, i32 0
  %RCX.i511 = bitcast %union.anon* %6284 to i64*
  %6285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6286 = getelementptr inbounds %struct.GPR, %struct.GPR* %6285, i32 0, i32 15
  %6287 = getelementptr inbounds %struct.Reg, %struct.Reg* %6286, i32 0, i32 0
  %RBP.i512 = bitcast %union.anon* %6287 to i64*
  %6288 = load i64, i64* %RBP.i512
  %6289 = sub i64 %6288, 160
  %6290 = load i64, i64* %PC.i510
  %6291 = add i64 %6290, 6
  store i64 %6291, i64* %PC.i510
  %6292 = inttoptr i64 %6289 to i32*
  %6293 = load i32, i32* %6292
  %6294 = zext i32 %6293 to i64
  store i64 %6294, i64* %RCX.i511, align 8
  store %struct.Memory* %loadMem_42410f, %struct.Memory** %MEMORY
  %loadMem_424115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6296 = getelementptr inbounds %struct.GPR, %struct.GPR* %6295, i32 0, i32 33
  %6297 = getelementptr inbounds %struct.Reg, %struct.Reg* %6296, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %6297 to i64*
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6299 = getelementptr inbounds %struct.GPR, %struct.GPR* %6298, i32 0, i32 17
  %6300 = getelementptr inbounds %struct.Reg, %struct.Reg* %6299, i32 0, i32 0
  %R8D.i508 = bitcast %union.anon* %6300 to i32*
  %6301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6302 = getelementptr inbounds %struct.GPR, %struct.GPR* %6301, i32 0, i32 15
  %6303 = getelementptr inbounds %struct.Reg, %struct.Reg* %6302, i32 0, i32 0
  %RBP.i509 = bitcast %union.anon* %6303 to i64*
  %6304 = bitcast i32* %R8D.i508 to i64*
  %6305 = load i64, i64* %RBP.i509
  %6306 = sub i64 %6305, 124
  %6307 = load i64, i64* %PC.i507
  %6308 = add i64 %6307, 4
  store i64 %6308, i64* %PC.i507
  %6309 = inttoptr i64 %6306 to i32*
  %6310 = load i32, i32* %6309
  %6311 = zext i32 %6310 to i64
  store i64 %6311, i64* %6304, align 8
  store %struct.Memory* %loadMem_424115, %struct.Memory** %MEMORY
  %loadMem_424119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6313 = getelementptr inbounds %struct.GPR, %struct.GPR* %6312, i32 0, i32 33
  %6314 = getelementptr inbounds %struct.Reg, %struct.Reg* %6313, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %6314 to i64*
  %6315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6316 = getelementptr inbounds %struct.GPR, %struct.GPR* %6315, i32 0, i32 19
  %6317 = getelementptr inbounds %struct.Reg, %struct.Reg* %6316, i32 0, i32 0
  %R9D.i505 = bitcast %union.anon* %6317 to i32*
  %6318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6319 = getelementptr inbounds %struct.GPR, %struct.GPR* %6318, i32 0, i32 15
  %6320 = getelementptr inbounds %struct.Reg, %struct.Reg* %6319, i32 0, i32 0
  %RBP.i506 = bitcast %union.anon* %6320 to i64*
  %6321 = bitcast i32* %R9D.i505 to i64*
  %6322 = load i64, i64* %RBP.i506
  %6323 = sub i64 %6322, 128
  %6324 = load i64, i64* %PC.i504
  %6325 = add i64 %6324, 4
  store i64 %6325, i64* %PC.i504
  %6326 = inttoptr i64 %6323 to i32*
  %6327 = load i32, i32* %6326
  %6328 = zext i32 %6327 to i64
  store i64 %6328, i64* %6321, align 8
  store %struct.Memory* %loadMem_424119, %struct.Memory** %MEMORY
  %loadMem_42411d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6330 = getelementptr inbounds %struct.GPR, %struct.GPR* %6329, i32 0, i32 33
  %6331 = getelementptr inbounds %struct.Reg, %struct.Reg* %6330, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %6331 to i64*
  %6332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6333 = getelementptr inbounds %struct.GPR, %struct.GPR* %6332, i32 0, i32 1
  %6334 = getelementptr inbounds %struct.Reg, %struct.Reg* %6333, i32 0, i32 0
  %RAX.i502 = bitcast %union.anon* %6334 to i64*
  %6335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6336 = getelementptr inbounds %struct.GPR, %struct.GPR* %6335, i32 0, i32 15
  %6337 = getelementptr inbounds %struct.Reg, %struct.Reg* %6336, i32 0, i32 0
  %RBP.i503 = bitcast %union.anon* %6337 to i64*
  %6338 = load i64, i64* %RBP.i503
  %6339 = sub i64 %6338, 144
  %6340 = load i64, i64* %PC.i501
  %6341 = add i64 %6340, 7
  store i64 %6341, i64* %PC.i501
  %6342 = inttoptr i64 %6339 to i64*
  %6343 = load i64, i64* %6342
  store i64 %6343, i64* %RAX.i502, align 8
  store %struct.Memory* %loadMem_42411d, %struct.Memory** %MEMORY
  %loadMem_424124 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6345 = getelementptr inbounds %struct.GPR, %struct.GPR* %6344, i32 0, i32 33
  %6346 = getelementptr inbounds %struct.Reg, %struct.Reg* %6345, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %6346 to i64*
  %6347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6348 = getelementptr inbounds %struct.GPR, %struct.GPR* %6347, i32 0, i32 15
  %6349 = getelementptr inbounds %struct.Reg, %struct.Reg* %6348, i32 0, i32 0
  %RBP.i499 = bitcast %union.anon* %6349 to i64*
  %6350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6351 = getelementptr inbounds %struct.GPR, %struct.GPR* %6350, i32 0, i32 21
  %6352 = getelementptr inbounds %struct.Reg, %struct.Reg* %6351, i32 0, i32 0
  %R10.i500 = bitcast %union.anon* %6352 to i64*
  %6353 = load i64, i64* %RBP.i499
  %6354 = sub i64 %6353, 48
  %6355 = load i64, i64* %PC.i498
  %6356 = add i64 %6355, 4
  store i64 %6356, i64* %PC.i498
  %6357 = inttoptr i64 %6354 to i64*
  %6358 = load i64, i64* %6357
  store i64 %6358, i64* %R10.i500, align 8
  store %struct.Memory* %loadMem_424124, %struct.Memory** %MEMORY
  %loadMem_424128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6360 = getelementptr inbounds %struct.GPR, %struct.GPR* %6359, i32 0, i32 33
  %6361 = getelementptr inbounds %struct.Reg, %struct.Reg* %6360, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %6361 to i64*
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6363 = getelementptr inbounds %struct.GPR, %struct.GPR* %6362, i32 0, i32 23
  %6364 = getelementptr inbounds %struct.Reg, %struct.Reg* %6363, i32 0, i32 0
  %R11D.i496 = bitcast %union.anon* %6364 to i32*
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6366 = getelementptr inbounds %struct.GPR, %struct.GPR* %6365, i32 0, i32 15
  %6367 = getelementptr inbounds %struct.Reg, %struct.Reg* %6366, i32 0, i32 0
  %RBP.i497 = bitcast %union.anon* %6367 to i64*
  %6368 = bitcast i32* %R11D.i496 to i64*
  %6369 = load i64, i64* %RBP.i497
  %6370 = sub i64 %6369, 228
  %6371 = load i64, i64* %PC.i495
  %6372 = add i64 %6371, 7
  store i64 %6372, i64* %PC.i495
  %6373 = inttoptr i64 %6370 to i32*
  %6374 = load i32, i32* %6373
  %6375 = zext i32 %6374 to i64
  store i64 %6375, i64* %6368, align 8
  store %struct.Memory* %loadMem_424128, %struct.Memory** %MEMORY
  %loadMem_42412f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6377 = getelementptr inbounds %struct.GPR, %struct.GPR* %6376, i32 0, i32 33
  %6378 = getelementptr inbounds %struct.Reg, %struct.Reg* %6377, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %6378 to i64*
  %6379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6380 = getelementptr inbounds %struct.GPR, %struct.GPR* %6379, i32 0, i32 3
  %6381 = getelementptr inbounds %struct.Reg, %struct.Reg* %6380, i32 0, i32 0
  %RBX.i493 = bitcast %union.anon* %6381 to i64*
  %6382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6383 = getelementptr inbounds %struct.GPR, %struct.GPR* %6382, i32 0, i32 15
  %6384 = getelementptr inbounds %struct.Reg, %struct.Reg* %6383, i32 0, i32 0
  %RBP.i494 = bitcast %union.anon* %6384 to i64*
  %6385 = load i64, i64* %RBP.i494
  %6386 = sub i64 %6385, 100
  %6387 = load i64, i64* %PC.i492
  %6388 = add i64 %6387, 3
  store i64 %6388, i64* %PC.i492
  %6389 = inttoptr i64 %6386 to i32*
  %6390 = load i32, i32* %6389
  %6391 = zext i32 %6390 to i64
  store i64 %6391, i64* %RBX.i493, align 8
  store %struct.Memory* %loadMem_42412f, %struct.Memory** %MEMORY
  %loadMem_424132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6393 = getelementptr inbounds %struct.GPR, %struct.GPR* %6392, i32 0, i32 33
  %6394 = getelementptr inbounds %struct.Reg, %struct.Reg* %6393, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %6394 to i64*
  %6395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6396 = getelementptr inbounds %struct.GPR, %struct.GPR* %6395, i32 0, i32 29
  %6397 = getelementptr inbounds %struct.Reg, %struct.Reg* %6396, i32 0, i32 0
  %R14D.i490 = bitcast %union.anon* %6397 to i32*
  %6398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6399 = getelementptr inbounds %struct.GPR, %struct.GPR* %6398, i32 0, i32 15
  %6400 = getelementptr inbounds %struct.Reg, %struct.Reg* %6399, i32 0, i32 0
  %RBP.i491 = bitcast %union.anon* %6400 to i64*
  %6401 = bitcast i32* %R14D.i490 to i64*
  %6402 = load i64, i64* %RBP.i491
  %6403 = sub i64 %6402, 116
  %6404 = load i64, i64* %PC.i489
  %6405 = add i64 %6404, 4
  store i64 %6405, i64* %PC.i489
  %6406 = inttoptr i64 %6403 to i32*
  %6407 = load i32, i32* %6406
  %6408 = zext i32 %6407 to i64
  store i64 %6408, i64* %6401, align 8
  store %struct.Memory* %loadMem_424132, %struct.Memory** %MEMORY
  %loadMem_424136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6410 = getelementptr inbounds %struct.GPR, %struct.GPR* %6409, i32 0, i32 33
  %6411 = getelementptr inbounds %struct.Reg, %struct.Reg* %6410, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %6411 to i64*
  %6412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6413 = getelementptr inbounds %struct.GPR, %struct.GPR* %6412, i32 0, i32 1
  %6414 = getelementptr inbounds %struct.Reg, %struct.Reg* %6413, i32 0, i32 0
  %RAX.i487 = bitcast %union.anon* %6414 to i64*
  %6415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6416 = getelementptr inbounds %struct.GPR, %struct.GPR* %6415, i32 0, i32 13
  %6417 = getelementptr inbounds %struct.Reg, %struct.Reg* %6416, i32 0, i32 0
  %RSP.i488 = bitcast %union.anon* %6417 to i64*
  %6418 = load i64, i64* %RSP.i488
  %6419 = load i64, i64* %RAX.i487
  %6420 = load i64, i64* %PC.i486
  %6421 = add i64 %6420, 4
  store i64 %6421, i64* %PC.i486
  %6422 = inttoptr i64 %6418 to i64*
  store i64 %6419, i64* %6422
  store %struct.Memory* %loadMem_424136, %struct.Memory** %MEMORY
  %loadMem_42413a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6424 = getelementptr inbounds %struct.GPR, %struct.GPR* %6423, i32 0, i32 33
  %6425 = getelementptr inbounds %struct.Reg, %struct.Reg* %6424, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %6425 to i64*
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6427 = getelementptr inbounds %struct.GPR, %struct.GPR* %6426, i32 0, i32 13
  %6428 = getelementptr inbounds %struct.Reg, %struct.Reg* %6427, i32 0, i32 0
  %RSP.i484 = bitcast %union.anon* %6428 to i64*
  %6429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6430 = getelementptr inbounds %struct.GPR, %struct.GPR* %6429, i32 0, i32 21
  %6431 = getelementptr inbounds %struct.Reg, %struct.Reg* %6430, i32 0, i32 0
  %R10.i485 = bitcast %union.anon* %6431 to i64*
  %6432 = load i64, i64* %RSP.i484
  %6433 = add i64 %6432, 8
  %6434 = load i64, i64* %R10.i485
  %6435 = load i64, i64* %PC.i483
  %6436 = add i64 %6435, 5
  store i64 %6436, i64* %PC.i483
  %6437 = inttoptr i64 %6433 to i64*
  store i64 %6434, i64* %6437
  store %struct.Memory* %loadMem_42413a, %struct.Memory** %MEMORY
  %loadMem_42413f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6439 = getelementptr inbounds %struct.GPR, %struct.GPR* %6438, i32 0, i32 33
  %6440 = getelementptr inbounds %struct.Reg, %struct.Reg* %6439, i32 0, i32 0
  %PC.i481 = bitcast %union.anon* %6440 to i64*
  %6441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6442 = getelementptr inbounds %struct.GPR, %struct.GPR* %6441, i32 0, i32 23
  %6443 = getelementptr inbounds %struct.Reg, %struct.Reg* %6442, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %6443 to i32*
  %6444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6445 = getelementptr inbounds %struct.GPR, %struct.GPR* %6444, i32 0, i32 13
  %6446 = getelementptr inbounds %struct.Reg, %struct.Reg* %6445, i32 0, i32 0
  %RSP.i482 = bitcast %union.anon* %6446 to i64*
  %6447 = load i64, i64* %RSP.i482
  %6448 = add i64 %6447, 16
  %6449 = load i32, i32* %R11D.i
  %6450 = zext i32 %6449 to i64
  %6451 = load i64, i64* %PC.i481
  %6452 = add i64 %6451, 5
  store i64 %6452, i64* %PC.i481
  %6453 = inttoptr i64 %6448 to i32*
  store i32 %6449, i32* %6453
  store %struct.Memory* %loadMem_42413f, %struct.Memory** %MEMORY
  %loadMem_424144 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6455 = getelementptr inbounds %struct.GPR, %struct.GPR* %6454, i32 0, i32 33
  %6456 = getelementptr inbounds %struct.Reg, %struct.Reg* %6455, i32 0, i32 0
  %PC.i478 = bitcast %union.anon* %6456 to i64*
  %6457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6458 = getelementptr inbounds %struct.GPR, %struct.GPR* %6457, i32 0, i32 3
  %6459 = getelementptr inbounds %struct.Reg, %struct.Reg* %6458, i32 0, i32 0
  %EBX.i479 = bitcast %union.anon* %6459 to i32*
  %6460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6461 = getelementptr inbounds %struct.GPR, %struct.GPR* %6460, i32 0, i32 13
  %6462 = getelementptr inbounds %struct.Reg, %struct.Reg* %6461, i32 0, i32 0
  %RSP.i480 = bitcast %union.anon* %6462 to i64*
  %6463 = load i64, i64* %RSP.i480
  %6464 = add i64 %6463, 24
  %6465 = load i32, i32* %EBX.i479
  %6466 = zext i32 %6465 to i64
  %6467 = load i64, i64* %PC.i478
  %6468 = add i64 %6467, 4
  store i64 %6468, i64* %PC.i478
  %6469 = inttoptr i64 %6464 to i32*
  store i32 %6465, i32* %6469
  store %struct.Memory* %loadMem_424144, %struct.Memory** %MEMORY
  %loadMem_424148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6471 = getelementptr inbounds %struct.GPR, %struct.GPR* %6470, i32 0, i32 33
  %6472 = getelementptr inbounds %struct.Reg, %struct.Reg* %6471, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %6472 to i64*
  %6473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6474 = getelementptr inbounds %struct.GPR, %struct.GPR* %6473, i32 0, i32 29
  %6475 = getelementptr inbounds %struct.Reg, %struct.Reg* %6474, i32 0, i32 0
  %R14D.i476 = bitcast %union.anon* %6475 to i32*
  %6476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6477 = getelementptr inbounds %struct.GPR, %struct.GPR* %6476, i32 0, i32 13
  %6478 = getelementptr inbounds %struct.Reg, %struct.Reg* %6477, i32 0, i32 0
  %RSP.i477 = bitcast %union.anon* %6478 to i64*
  %6479 = load i64, i64* %RSP.i477
  %6480 = add i64 %6479, 32
  %6481 = load i32, i32* %R14D.i476
  %6482 = zext i32 %6481 to i64
  %6483 = load i64, i64* %PC.i475
  %6484 = add i64 %6483, 5
  store i64 %6484, i64* %PC.i475
  %6485 = inttoptr i64 %6480 to i32*
  store i32 %6481, i32* %6485
  store %struct.Memory* %loadMem_424148, %struct.Memory** %MEMORY
  %loadMem1_42414d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6487 = getelementptr inbounds %struct.GPR, %struct.GPR* %6486, i32 0, i32 33
  %6488 = getelementptr inbounds %struct.Reg, %struct.Reg* %6487, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %6488 to i64*
  %6489 = load i64, i64* %PC.i474
  %6490 = add i64 %6489, -4013
  %6491 = load i64, i64* %PC.i474
  %6492 = add i64 %6491, 5
  %6493 = load i64, i64* %PC.i474
  %6494 = add i64 %6493, 5
  store i64 %6494, i64* %PC.i474
  %6495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6496 = load i64, i64* %6495, align 8
  %6497 = add i64 %6496, -8
  %6498 = inttoptr i64 %6497 to i64*
  store i64 %6492, i64* %6498
  store i64 %6497, i64* %6495, align 8
  %6499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6490, i64* %6499, align 8
  store %struct.Memory* %loadMem1_42414d, %struct.Memory** %MEMORY
  %loadMem2_42414d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42414d = load i64, i64* %3
  %call2_42414d = call %struct.Memory* @sub_4231a0.AddUpSADQuarter(%struct.State* %0, i64 %loadPC_42414d, %struct.Memory* %loadMem2_42414d)
  store %struct.Memory* %call2_42414d, %struct.Memory** %MEMORY
  %loadMem_424152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6501 = getelementptr inbounds %struct.GPR, %struct.GPR* %6500, i32 0, i32 33
  %6502 = getelementptr inbounds %struct.Reg, %struct.Reg* %6501, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %6502 to i64*
  %6503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6504 = getelementptr inbounds %struct.GPR, %struct.GPR* %6503, i32 0, i32 1
  %6505 = getelementptr inbounds %struct.Reg, %struct.Reg* %6504, i32 0, i32 0
  %EAX.i472 = bitcast %union.anon* %6505 to i32*
  %6506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6507 = getelementptr inbounds %struct.GPR, %struct.GPR* %6506, i32 0, i32 15
  %6508 = getelementptr inbounds %struct.Reg, %struct.Reg* %6507, i32 0, i32 0
  %RBP.i473 = bitcast %union.anon* %6508 to i64*
  %6509 = load i64, i64* %RBP.i473
  %6510 = sub i64 %6509, 120
  %6511 = load i32, i32* %EAX.i472
  %6512 = zext i32 %6511 to i64
  %6513 = load i64, i64* %PC.i471
  %6514 = add i64 %6513, 3
  store i64 %6514, i64* %PC.i471
  %6515 = inttoptr i64 %6510 to i32*
  store i32 %6511, i32* %6515
  store %struct.Memory* %loadMem_424152, %struct.Memory** %MEMORY
  %loadMem_424155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6517 = getelementptr inbounds %struct.GPR, %struct.GPR* %6516, i32 0, i32 33
  %6518 = getelementptr inbounds %struct.Reg, %struct.Reg* %6517, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %6518 to i64*
  %6519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6520 = getelementptr inbounds %struct.GPR, %struct.GPR* %6519, i32 0, i32 21
  %6521 = getelementptr inbounds %struct.Reg, %struct.Reg* %6520, i32 0, i32 0
  %R10.i470 = bitcast %union.anon* %6521 to i64*
  %6522 = load i64, i64* %PC.i469
  %6523 = add i64 %6522, 8
  store i64 %6523, i64* %PC.i469
  %6524 = load i64, i64* bitcast (%G_0x710770_type* @G_0x710770 to i64*)
  store i64 %6524, i64* %R10.i470, align 8
  store %struct.Memory* %loadMem_424155, %struct.Memory** %MEMORY
  %loadMem_42415d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6526 = getelementptr inbounds %struct.GPR, %struct.GPR* %6525, i32 0, i32 33
  %6527 = getelementptr inbounds %struct.Reg, %struct.Reg* %6526, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %6527 to i64*
  %6528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6529 = getelementptr inbounds %struct.GPR, %struct.GPR* %6528, i32 0, i32 1
  %6530 = getelementptr inbounds %struct.Reg, %struct.Reg* %6529, i32 0, i32 0
  %RAX.i467 = bitcast %union.anon* %6530 to i64*
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6532 = getelementptr inbounds %struct.GPR, %struct.GPR* %6531, i32 0, i32 15
  %6533 = getelementptr inbounds %struct.Reg, %struct.Reg* %6532, i32 0, i32 0
  %RBP.i468 = bitcast %union.anon* %6533 to i64*
  %6534 = load i64, i64* %RBP.i468
  %6535 = sub i64 %6534, 128
  %6536 = load i64, i64* %PC.i466
  %6537 = add i64 %6536, 3
  store i64 %6537, i64* %PC.i466
  %6538 = inttoptr i64 %6535 to i32*
  %6539 = load i32, i32* %6538
  %6540 = zext i32 %6539 to i64
  store i64 %6540, i64* %RAX.i467, align 8
  store %struct.Memory* %loadMem_42415d, %struct.Memory** %MEMORY
  %loadMem_424160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6542 = getelementptr inbounds %struct.GPR, %struct.GPR* %6541, i32 0, i32 33
  %6543 = getelementptr inbounds %struct.Reg, %struct.Reg* %6542, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %6543 to i64*
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6545 = getelementptr inbounds %struct.GPR, %struct.GPR* %6544, i32 0, i32 15
  %6546 = getelementptr inbounds %struct.Reg, %struct.Reg* %6545, i32 0, i32 0
  %RBP.i464 = bitcast %union.anon* %6546 to i64*
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6548 = getelementptr inbounds %struct.GPR, %struct.GPR* %6547, i32 0, i32 31
  %6549 = getelementptr inbounds %struct.Reg, %struct.Reg* %6548, i32 0, i32 0
  %R15.i465 = bitcast %union.anon* %6549 to i64*
  %6550 = load i64, i64* %RBP.i464
  %6551 = sub i64 %6550, 88
  %6552 = load i64, i64* %PC.i463
  %6553 = add i64 %6552, 4
  store i64 %6553, i64* %PC.i463
  %6554 = inttoptr i64 %6551 to i64*
  %6555 = load i64, i64* %6554
  store i64 %6555, i64* %R15.i465, align 8
  store %struct.Memory* %loadMem_424160, %struct.Memory** %MEMORY
  %loadMem_424164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6557 = getelementptr inbounds %struct.GPR, %struct.GPR* %6556, i32 0, i32 33
  %6558 = getelementptr inbounds %struct.Reg, %struct.Reg* %6557, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %6558 to i64*
  %6559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6560 = getelementptr inbounds %struct.GPR, %struct.GPR* %6559, i32 0, i32 5
  %6561 = getelementptr inbounds %struct.Reg, %struct.Reg* %6560, i32 0, i32 0
  %RCX.i461 = bitcast %union.anon* %6561 to i64*
  %6562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6563 = getelementptr inbounds %struct.GPR, %struct.GPR* %6562, i32 0, i32 31
  %6564 = getelementptr inbounds %struct.Reg, %struct.Reg* %6563, i32 0, i32 0
  %R15.i462 = bitcast %union.anon* %6564 to i64*
  %6565 = load i64, i64* %R15.i462
  %6566 = load i64, i64* %PC.i460
  %6567 = add i64 %6566, 4
  store i64 %6567, i64* %PC.i460
  %6568 = inttoptr i64 %6565 to i16*
  %6569 = load i16, i16* %6568
  %6570 = sext i16 %6569 to i64
  %6571 = and i64 %6570, 4294967295
  store i64 %6571, i64* %RCX.i461, align 8
  store %struct.Memory* %loadMem_424164, %struct.Memory** %MEMORY
  %loadMem_424168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6573 = getelementptr inbounds %struct.GPR, %struct.GPR* %6572, i32 0, i32 33
  %6574 = getelementptr inbounds %struct.Reg, %struct.Reg* %6573, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %6574 to i64*
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6576 = getelementptr inbounds %struct.GPR, %struct.GPR* %6575, i32 0, i32 5
  %6577 = getelementptr inbounds %struct.Reg, %struct.Reg* %6576, i32 0, i32 0
  %ECX.i458 = bitcast %union.anon* %6577 to i32*
  %6578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6579 = getelementptr inbounds %struct.GPR, %struct.GPR* %6578, i32 0, i32 1
  %6580 = getelementptr inbounds %struct.Reg, %struct.Reg* %6579, i32 0, i32 0
  %RAX.i459 = bitcast %union.anon* %6580 to i64*
  %6581 = load i64, i64* %RAX.i459
  %6582 = load i32, i32* %ECX.i458
  %6583 = zext i32 %6582 to i64
  %6584 = load i64, i64* %PC.i457
  %6585 = add i64 %6584, 2
  store i64 %6585, i64* %PC.i457
  %6586 = trunc i64 %6581 to i32
  %6587 = sub i32 %6586, %6582
  %6588 = zext i32 %6587 to i64
  store i64 %6588, i64* %RAX.i459, align 8
  %6589 = icmp ult i32 %6586, %6582
  %6590 = zext i1 %6589 to i8
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6590, i8* %6591, align 1
  %6592 = and i32 %6587, 255
  %6593 = call i32 @llvm.ctpop.i32(i32 %6592)
  %6594 = trunc i32 %6593 to i8
  %6595 = and i8 %6594, 1
  %6596 = xor i8 %6595, 1
  %6597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6596, i8* %6597, align 1
  %6598 = xor i64 %6583, %6581
  %6599 = trunc i64 %6598 to i32
  %6600 = xor i32 %6599, %6587
  %6601 = lshr i32 %6600, 4
  %6602 = trunc i32 %6601 to i8
  %6603 = and i8 %6602, 1
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6603, i8* %6604, align 1
  %6605 = icmp eq i32 %6587, 0
  %6606 = zext i1 %6605 to i8
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6606, i8* %6607, align 1
  %6608 = lshr i32 %6587, 31
  %6609 = trunc i32 %6608 to i8
  %6610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6609, i8* %6610, align 1
  %6611 = lshr i32 %6586, 31
  %6612 = lshr i32 %6582, 31
  %6613 = xor i32 %6612, %6611
  %6614 = xor i32 %6608, %6611
  %6615 = add i32 %6614, %6613
  %6616 = icmp eq i32 %6615, 2
  %6617 = zext i1 %6616 to i8
  %6618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6617, i8* %6618, align 1
  store %struct.Memory* %loadMem_424168, %struct.Memory** %MEMORY
  %loadMem_42416a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6620 = getelementptr inbounds %struct.GPR, %struct.GPR* %6619, i32 0, i32 33
  %6621 = getelementptr inbounds %struct.Reg, %struct.Reg* %6620, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %6621 to i64*
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6623 = getelementptr inbounds %struct.GPR, %struct.GPR* %6622, i32 0, i32 1
  %6624 = getelementptr inbounds %struct.Reg, %struct.Reg* %6623, i32 0, i32 0
  %RAX.i455 = bitcast %union.anon* %6624 to i64*
  %6625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6626 = getelementptr inbounds %struct.GPR, %struct.GPR* %6625, i32 0, i32 15
  %6627 = getelementptr inbounds %struct.Reg, %struct.Reg* %6626, i32 0, i32 0
  %RBP.i456 = bitcast %union.anon* %6627 to i64*
  %6628 = load i64, i64* %RAX.i455
  %6629 = load i64, i64* %RBP.i456
  %6630 = sub i64 %6629, 180
  %6631 = load i64, i64* %PC.i454
  %6632 = add i64 %6631, 6
  store i64 %6632, i64* %PC.i454
  %6633 = trunc i64 %6628 to i32
  %6634 = inttoptr i64 %6630 to i32*
  %6635 = load i32, i32* %6634
  %6636 = add i32 %6635, %6633
  %6637 = zext i32 %6636 to i64
  store i64 %6637, i64* %RAX.i455, align 8
  %6638 = icmp ult i32 %6636, %6633
  %6639 = icmp ult i32 %6636, %6635
  %6640 = or i1 %6638, %6639
  %6641 = zext i1 %6640 to i8
  %6642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6641, i8* %6642, align 1
  %6643 = and i32 %6636, 255
  %6644 = call i32 @llvm.ctpop.i32(i32 %6643)
  %6645 = trunc i32 %6644 to i8
  %6646 = and i8 %6645, 1
  %6647 = xor i8 %6646, 1
  %6648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6647, i8* %6648, align 1
  %6649 = xor i32 %6635, %6633
  %6650 = xor i32 %6649, %6636
  %6651 = lshr i32 %6650, 4
  %6652 = trunc i32 %6651 to i8
  %6653 = and i8 %6652, 1
  %6654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6653, i8* %6654, align 1
  %6655 = icmp eq i32 %6636, 0
  %6656 = zext i1 %6655 to i8
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6656, i8* %6657, align 1
  %6658 = lshr i32 %6636, 31
  %6659 = trunc i32 %6658 to i8
  %6660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6659, i8* %6660, align 1
  %6661 = lshr i32 %6633, 31
  %6662 = lshr i32 %6635, 31
  %6663 = xor i32 %6658, %6661
  %6664 = xor i32 %6658, %6662
  %6665 = add i32 %6663, %6664
  %6666 = icmp eq i32 %6665, 2
  %6667 = zext i1 %6666 to i8
  %6668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6667, i8* %6668, align 1
  store %struct.Memory* %loadMem_42416a, %struct.Memory** %MEMORY
  %loadMem_424170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6670 = getelementptr inbounds %struct.GPR, %struct.GPR* %6669, i32 0, i32 33
  %6671 = getelementptr inbounds %struct.Reg, %struct.Reg* %6670, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %6671 to i64*
  %6672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6673 = getelementptr inbounds %struct.GPR, %struct.GPR* %6672, i32 0, i32 1
  %6674 = getelementptr inbounds %struct.Reg, %struct.Reg* %6673, i32 0, i32 0
  %EAX.i452 = bitcast %union.anon* %6674 to i32*
  %6675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6676 = getelementptr inbounds %struct.GPR, %struct.GPR* %6675, i32 0, i32 31
  %6677 = getelementptr inbounds %struct.Reg, %struct.Reg* %6676, i32 0, i32 0
  %R15.i453 = bitcast %union.anon* %6677 to i64*
  %6678 = load i32, i32* %EAX.i452
  %6679 = zext i32 %6678 to i64
  %6680 = load i64, i64* %PC.i451
  %6681 = add i64 %6680, 3
  store i64 %6681, i64* %PC.i451
  %6682 = shl i64 %6679, 32
  %6683 = ashr exact i64 %6682, 32
  store i64 %6683, i64* %R15.i453, align 8
  store %struct.Memory* %loadMem_424170, %struct.Memory** %MEMORY
  %loadMem_424173 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6685 = getelementptr inbounds %struct.GPR, %struct.GPR* %6684, i32 0, i32 33
  %6686 = getelementptr inbounds %struct.Reg, %struct.Reg* %6685, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %6686 to i64*
  %6687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6688 = getelementptr inbounds %struct.GPR, %struct.GPR* %6687, i32 0, i32 21
  %6689 = getelementptr inbounds %struct.Reg, %struct.Reg* %6688, i32 0, i32 0
  %R10.i449 = bitcast %union.anon* %6689 to i64*
  %6690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6691 = getelementptr inbounds %struct.GPR, %struct.GPR* %6690, i32 0, i32 31
  %6692 = getelementptr inbounds %struct.Reg, %struct.Reg* %6691, i32 0, i32 0
  %R15.i450 = bitcast %union.anon* %6692 to i64*
  %6693 = load i64, i64* %R10.i449
  %6694 = load i64, i64* %R15.i450
  %6695 = mul i64 %6694, 8
  %6696 = add i64 %6695, %6693
  %6697 = load i64, i64* %PC.i448
  %6698 = add i64 %6697, 4
  store i64 %6698, i64* %PC.i448
  %6699 = inttoptr i64 %6696 to i64*
  %6700 = load i64, i64* %6699
  store i64 %6700, i64* %R10.i449, align 8
  store %struct.Memory* %loadMem_424173, %struct.Memory** %MEMORY
  %loadMem_424177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6702 = getelementptr inbounds %struct.GPR, %struct.GPR* %6701, i32 0, i32 33
  %6703 = getelementptr inbounds %struct.Reg, %struct.Reg* %6702, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %6703 to i64*
  %6704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6705 = getelementptr inbounds %struct.GPR, %struct.GPR* %6704, i32 0, i32 1
  %6706 = getelementptr inbounds %struct.Reg, %struct.Reg* %6705, i32 0, i32 0
  %RAX.i446 = bitcast %union.anon* %6706 to i64*
  %6707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6708 = getelementptr inbounds %struct.GPR, %struct.GPR* %6707, i32 0, i32 15
  %6709 = getelementptr inbounds %struct.Reg, %struct.Reg* %6708, i32 0, i32 0
  %RBP.i447 = bitcast %union.anon* %6709 to i64*
  %6710 = load i64, i64* %RBP.i447
  %6711 = sub i64 %6710, 124
  %6712 = load i64, i64* %PC.i445
  %6713 = add i64 %6712, 3
  store i64 %6713, i64* %PC.i445
  %6714 = inttoptr i64 %6711 to i32*
  %6715 = load i32, i32* %6714
  %6716 = zext i32 %6715 to i64
  store i64 %6716, i64* %RAX.i446, align 8
  store %struct.Memory* %loadMem_424177, %struct.Memory** %MEMORY
  %loadMem_42417a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6718 = getelementptr inbounds %struct.GPR, %struct.GPR* %6717, i32 0, i32 33
  %6719 = getelementptr inbounds %struct.Reg, %struct.Reg* %6718, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %6719 to i64*
  %6720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6721 = getelementptr inbounds %struct.GPR, %struct.GPR* %6720, i32 0, i32 15
  %6722 = getelementptr inbounds %struct.Reg, %struct.Reg* %6721, i32 0, i32 0
  %RBP.i443 = bitcast %union.anon* %6722 to i64*
  %6723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6724 = getelementptr inbounds %struct.GPR, %struct.GPR* %6723, i32 0, i32 31
  %6725 = getelementptr inbounds %struct.Reg, %struct.Reg* %6724, i32 0, i32 0
  %R15.i444 = bitcast %union.anon* %6725 to i64*
  %6726 = load i64, i64* %RBP.i443
  %6727 = sub i64 %6726, 80
  %6728 = load i64, i64* %PC.i442
  %6729 = add i64 %6728, 4
  store i64 %6729, i64* %PC.i442
  %6730 = inttoptr i64 %6727 to i64*
  %6731 = load i64, i64* %6730
  store i64 %6731, i64* %R15.i444, align 8
  store %struct.Memory* %loadMem_42417a, %struct.Memory** %MEMORY
  %loadMem_42417e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6733 = getelementptr inbounds %struct.GPR, %struct.GPR* %6732, i32 0, i32 33
  %6734 = getelementptr inbounds %struct.Reg, %struct.Reg* %6733, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %6734 to i64*
  %6735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6736 = getelementptr inbounds %struct.GPR, %struct.GPR* %6735, i32 0, i32 5
  %6737 = getelementptr inbounds %struct.Reg, %struct.Reg* %6736, i32 0, i32 0
  %RCX.i440 = bitcast %union.anon* %6737 to i64*
  %6738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6739 = getelementptr inbounds %struct.GPR, %struct.GPR* %6738, i32 0, i32 31
  %6740 = getelementptr inbounds %struct.Reg, %struct.Reg* %6739, i32 0, i32 0
  %R15.i441 = bitcast %union.anon* %6740 to i64*
  %6741 = load i64, i64* %R15.i441
  %6742 = load i64, i64* %PC.i439
  %6743 = add i64 %6742, 4
  store i64 %6743, i64* %PC.i439
  %6744 = inttoptr i64 %6741 to i16*
  %6745 = load i16, i16* %6744
  %6746 = sext i16 %6745 to i64
  %6747 = and i64 %6746, 4294967295
  store i64 %6747, i64* %RCX.i440, align 8
  store %struct.Memory* %loadMem_42417e, %struct.Memory** %MEMORY
  %loadMem_424182 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6749 = getelementptr inbounds %struct.GPR, %struct.GPR* %6748, i32 0, i32 33
  %6750 = getelementptr inbounds %struct.Reg, %struct.Reg* %6749, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %6750 to i64*
  %6751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6752 = getelementptr inbounds %struct.GPR, %struct.GPR* %6751, i32 0, i32 5
  %6753 = getelementptr inbounds %struct.Reg, %struct.Reg* %6752, i32 0, i32 0
  %ECX.i437 = bitcast %union.anon* %6753 to i32*
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6755 = getelementptr inbounds %struct.GPR, %struct.GPR* %6754, i32 0, i32 1
  %6756 = getelementptr inbounds %struct.Reg, %struct.Reg* %6755, i32 0, i32 0
  %RAX.i438 = bitcast %union.anon* %6756 to i64*
  %6757 = load i64, i64* %RAX.i438
  %6758 = load i32, i32* %ECX.i437
  %6759 = zext i32 %6758 to i64
  %6760 = load i64, i64* %PC.i436
  %6761 = add i64 %6760, 2
  store i64 %6761, i64* %PC.i436
  %6762 = trunc i64 %6757 to i32
  %6763 = sub i32 %6762, %6758
  %6764 = zext i32 %6763 to i64
  store i64 %6764, i64* %RAX.i438, align 8
  %6765 = icmp ult i32 %6762, %6758
  %6766 = zext i1 %6765 to i8
  %6767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6766, i8* %6767, align 1
  %6768 = and i32 %6763, 255
  %6769 = call i32 @llvm.ctpop.i32(i32 %6768)
  %6770 = trunc i32 %6769 to i8
  %6771 = and i8 %6770, 1
  %6772 = xor i8 %6771, 1
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6772, i8* %6773, align 1
  %6774 = xor i64 %6759, %6757
  %6775 = trunc i64 %6774 to i32
  %6776 = xor i32 %6775, %6763
  %6777 = lshr i32 %6776, 4
  %6778 = trunc i32 %6777 to i8
  %6779 = and i8 %6778, 1
  %6780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6779, i8* %6780, align 1
  %6781 = icmp eq i32 %6763, 0
  %6782 = zext i1 %6781 to i8
  %6783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6782, i8* %6783, align 1
  %6784 = lshr i32 %6763, 31
  %6785 = trunc i32 %6784 to i8
  %6786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6785, i8* %6786, align 1
  %6787 = lshr i32 %6762, 31
  %6788 = lshr i32 %6758, 31
  %6789 = xor i32 %6788, %6787
  %6790 = xor i32 %6784, %6787
  %6791 = add i32 %6790, %6789
  %6792 = icmp eq i32 %6791, 2
  %6793 = zext i1 %6792 to i8
  %6794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6793, i8* %6794, align 1
  store %struct.Memory* %loadMem_424182, %struct.Memory** %MEMORY
  %loadMem_424184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6796 = getelementptr inbounds %struct.GPR, %struct.GPR* %6795, i32 0, i32 33
  %6797 = getelementptr inbounds %struct.Reg, %struct.Reg* %6796, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %6797 to i64*
  %6798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6799 = getelementptr inbounds %struct.GPR, %struct.GPR* %6798, i32 0, i32 1
  %6800 = getelementptr inbounds %struct.Reg, %struct.Reg* %6799, i32 0, i32 0
  %RAX.i434 = bitcast %union.anon* %6800 to i64*
  %6801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6802 = getelementptr inbounds %struct.GPR, %struct.GPR* %6801, i32 0, i32 15
  %6803 = getelementptr inbounds %struct.Reg, %struct.Reg* %6802, i32 0, i32 0
  %RBP.i435 = bitcast %union.anon* %6803 to i64*
  %6804 = load i64, i64* %RAX.i434
  %6805 = load i64, i64* %RBP.i435
  %6806 = sub i64 %6805, 180
  %6807 = load i64, i64* %PC.i433
  %6808 = add i64 %6807, 6
  store i64 %6808, i64* %PC.i433
  %6809 = trunc i64 %6804 to i32
  %6810 = inttoptr i64 %6806 to i32*
  %6811 = load i32, i32* %6810
  %6812 = add i32 %6811, %6809
  %6813 = zext i32 %6812 to i64
  store i64 %6813, i64* %RAX.i434, align 8
  %6814 = icmp ult i32 %6812, %6809
  %6815 = icmp ult i32 %6812, %6811
  %6816 = or i1 %6814, %6815
  %6817 = zext i1 %6816 to i8
  %6818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6817, i8* %6818, align 1
  %6819 = and i32 %6812, 255
  %6820 = call i32 @llvm.ctpop.i32(i32 %6819)
  %6821 = trunc i32 %6820 to i8
  %6822 = and i8 %6821, 1
  %6823 = xor i8 %6822, 1
  %6824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6823, i8* %6824, align 1
  %6825 = xor i32 %6811, %6809
  %6826 = xor i32 %6825, %6812
  %6827 = lshr i32 %6826, 4
  %6828 = trunc i32 %6827 to i8
  %6829 = and i8 %6828, 1
  %6830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6829, i8* %6830, align 1
  %6831 = icmp eq i32 %6812, 0
  %6832 = zext i1 %6831 to i8
  %6833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6832, i8* %6833, align 1
  %6834 = lshr i32 %6812, 31
  %6835 = trunc i32 %6834 to i8
  %6836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6835, i8* %6836, align 1
  %6837 = lshr i32 %6809, 31
  %6838 = lshr i32 %6811, 31
  %6839 = xor i32 %6834, %6837
  %6840 = xor i32 %6834, %6838
  %6841 = add i32 %6839, %6840
  %6842 = icmp eq i32 %6841, 2
  %6843 = zext i1 %6842 to i8
  %6844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6843, i8* %6844, align 1
  store %struct.Memory* %loadMem_424184, %struct.Memory** %MEMORY
  %loadMem_42418a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 33
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %6847 to i64*
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6849 = getelementptr inbounds %struct.GPR, %struct.GPR* %6848, i32 0, i32 1
  %6850 = getelementptr inbounds %struct.Reg, %struct.Reg* %6849, i32 0, i32 0
  %EAX.i431 = bitcast %union.anon* %6850 to i32*
  %6851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6852 = getelementptr inbounds %struct.GPR, %struct.GPR* %6851, i32 0, i32 31
  %6853 = getelementptr inbounds %struct.Reg, %struct.Reg* %6852, i32 0, i32 0
  %R15.i432 = bitcast %union.anon* %6853 to i64*
  %6854 = load i32, i32* %EAX.i431
  %6855 = zext i32 %6854 to i64
  %6856 = load i64, i64* %PC.i430
  %6857 = add i64 %6856, 3
  store i64 %6857, i64* %PC.i430
  %6858 = shl i64 %6855, 32
  %6859 = ashr exact i64 %6858, 32
  store i64 %6859, i64* %R15.i432, align 8
  store %struct.Memory* %loadMem_42418a, %struct.Memory** %MEMORY
  %loadMem_42418d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6861 = getelementptr inbounds %struct.GPR, %struct.GPR* %6860, i32 0, i32 33
  %6862 = getelementptr inbounds %struct.Reg, %struct.Reg* %6861, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %6862 to i64*
  %6863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6864 = getelementptr inbounds %struct.GPR, %struct.GPR* %6863, i32 0, i32 21
  %6865 = getelementptr inbounds %struct.Reg, %struct.Reg* %6864, i32 0, i32 0
  %R10.i428 = bitcast %union.anon* %6865 to i64*
  %6866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6867 = getelementptr inbounds %struct.GPR, %struct.GPR* %6866, i32 0, i32 31
  %6868 = getelementptr inbounds %struct.Reg, %struct.Reg* %6867, i32 0, i32 0
  %R15.i429 = bitcast %union.anon* %6868 to i64*
  %6869 = load i64, i64* %R10.i428
  %6870 = load i64, i64* %R15.i429
  %6871 = add i64 %6870, %6869
  %6872 = load i64, i64* %PC.i427
  %6873 = add i64 %6872, 5
  store i64 %6873, i64* %PC.i427
  %6874 = inttoptr i64 %6871 to i8*
  store i8 1, i8* %6874
  store %struct.Memory* %loadMem_42418d, %struct.Memory** %MEMORY
  %loadMem_424192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6876 = getelementptr inbounds %struct.GPR, %struct.GPR* %6875, i32 0, i32 33
  %6877 = getelementptr inbounds %struct.Reg, %struct.Reg* %6876, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %6877 to i64*
  %6878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6879 = getelementptr inbounds %struct.GPR, %struct.GPR* %6878, i32 0, i32 1
  %6880 = getelementptr inbounds %struct.Reg, %struct.Reg* %6879, i32 0, i32 0
  %RAX.i425 = bitcast %union.anon* %6880 to i64*
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6882 = getelementptr inbounds %struct.GPR, %struct.GPR* %6881, i32 0, i32 15
  %6883 = getelementptr inbounds %struct.Reg, %struct.Reg* %6882, i32 0, i32 0
  %RBP.i426 = bitcast %union.anon* %6883 to i64*
  %6884 = load i64, i64* %RBP.i426
  %6885 = sub i64 %6884, 120
  %6886 = load i64, i64* %PC.i424
  %6887 = add i64 %6886, 3
  store i64 %6887, i64* %PC.i424
  %6888 = inttoptr i64 %6885 to i32*
  %6889 = load i32, i32* %6888
  %6890 = zext i32 %6889 to i64
  store i64 %6890, i64* %RAX.i425, align 8
  store %struct.Memory* %loadMem_424192, %struct.Memory** %MEMORY
  %loadMem_424195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6892 = getelementptr inbounds %struct.GPR, %struct.GPR* %6891, i32 0, i32 33
  %6893 = getelementptr inbounds %struct.Reg, %struct.Reg* %6892, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %6893 to i64*
  %6894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6895 = getelementptr inbounds %struct.GPR, %struct.GPR* %6894, i32 0, i32 1
  %6896 = getelementptr inbounds %struct.Reg, %struct.Reg* %6895, i32 0, i32 0
  %EAX.i422 = bitcast %union.anon* %6896 to i32*
  %6897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6898 = getelementptr inbounds %struct.GPR, %struct.GPR* %6897, i32 0, i32 15
  %6899 = getelementptr inbounds %struct.Reg, %struct.Reg* %6898, i32 0, i32 0
  %RBP.i423 = bitcast %union.anon* %6899 to i64*
  %6900 = load i32, i32* %EAX.i422
  %6901 = zext i32 %6900 to i64
  %6902 = load i64, i64* %RBP.i423
  %6903 = sub i64 %6902, 100
  %6904 = load i64, i64* %PC.i421
  %6905 = add i64 %6904, 3
  store i64 %6905, i64* %PC.i421
  %6906 = inttoptr i64 %6903 to i32*
  %6907 = load i32, i32* %6906
  %6908 = sub i32 %6900, %6907
  %6909 = icmp ult i32 %6900, %6907
  %6910 = zext i1 %6909 to i8
  %6911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6910, i8* %6911, align 1
  %6912 = and i32 %6908, 255
  %6913 = call i32 @llvm.ctpop.i32(i32 %6912)
  %6914 = trunc i32 %6913 to i8
  %6915 = and i8 %6914, 1
  %6916 = xor i8 %6915, 1
  %6917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6916, i8* %6917, align 1
  %6918 = xor i32 %6907, %6900
  %6919 = xor i32 %6918, %6908
  %6920 = lshr i32 %6919, 4
  %6921 = trunc i32 %6920 to i8
  %6922 = and i8 %6921, 1
  %6923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6922, i8* %6923, align 1
  %6924 = icmp eq i32 %6908, 0
  %6925 = zext i1 %6924 to i8
  %6926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6925, i8* %6926, align 1
  %6927 = lshr i32 %6908, 31
  %6928 = trunc i32 %6927 to i8
  %6929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6928, i8* %6929, align 1
  %6930 = lshr i32 %6900, 31
  %6931 = lshr i32 %6907, 31
  %6932 = xor i32 %6931, %6930
  %6933 = xor i32 %6927, %6930
  %6934 = add i32 %6933, %6932
  %6935 = icmp eq i32 %6934, 2
  %6936 = zext i1 %6935 to i8
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6936, i8* %6937, align 1
  store %struct.Memory* %loadMem_424195, %struct.Memory** %MEMORY
  %loadMem_424198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6939 = getelementptr inbounds %struct.GPR, %struct.GPR* %6938, i32 0, i32 33
  %6940 = getelementptr inbounds %struct.Reg, %struct.Reg* %6939, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %6940 to i64*
  %6941 = load i64, i64* %PC.i420
  %6942 = add i64 %6941, 30
  %6943 = load i64, i64* %PC.i420
  %6944 = add i64 %6943, 6
  %6945 = load i64, i64* %PC.i420
  %6946 = add i64 %6945, 6
  store i64 %6946, i64* %PC.i420
  %6947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6948 = load i8, i8* %6947, align 1
  %6949 = icmp ne i8 %6948, 0
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6951 = load i8, i8* %6950, align 1
  %6952 = icmp ne i8 %6951, 0
  %6953 = xor i1 %6949, %6952
  %6954 = xor i1 %6953, true
  %6955 = zext i1 %6954 to i8
  store i8 %6955, i8* %BRANCH_TAKEN, align 1
  %6956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6957 = select i1 %6953, i64 %6944, i64 %6942
  store i64 %6957, i64* %6956, align 8
  store %struct.Memory* %loadMem_424198, %struct.Memory** %MEMORY
  %loadBr_424198 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_424198 = icmp eq i8 %loadBr_424198, 1
  br i1 %cmpBr_424198, label %block_.L_4241b6, label %block_42419e

block_42419e:                                     ; preds = %routine_shll__cl___esi.exit549
  %loadMem_42419e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6959 = getelementptr inbounds %struct.GPR, %struct.GPR* %6958, i32 0, i32 33
  %6960 = getelementptr inbounds %struct.Reg, %struct.Reg* %6959, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %6960 to i64*
  %6961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6962 = getelementptr inbounds %struct.GPR, %struct.GPR* %6961, i32 0, i32 1
  %6963 = getelementptr inbounds %struct.Reg, %struct.Reg* %6962, i32 0, i32 0
  %RAX.i418 = bitcast %union.anon* %6963 to i64*
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6965 = getelementptr inbounds %struct.GPR, %struct.GPR* %6964, i32 0, i32 15
  %6966 = getelementptr inbounds %struct.Reg, %struct.Reg* %6965, i32 0, i32 0
  %RBP.i419 = bitcast %union.anon* %6966 to i64*
  %6967 = load i64, i64* %RBP.i419
  %6968 = sub i64 %6967, 120
  %6969 = load i64, i64* %PC.i417
  %6970 = add i64 %6969, 3
  store i64 %6970, i64* %PC.i417
  %6971 = inttoptr i64 %6968 to i32*
  %6972 = load i32, i32* %6971
  %6973 = zext i32 %6972 to i64
  store i64 %6973, i64* %RAX.i418, align 8
  store %struct.Memory* %loadMem_42419e, %struct.Memory** %MEMORY
  %loadMem_4241a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6975 = getelementptr inbounds %struct.GPR, %struct.GPR* %6974, i32 0, i32 33
  %6976 = getelementptr inbounds %struct.Reg, %struct.Reg* %6975, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %6976 to i64*
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6978 = getelementptr inbounds %struct.GPR, %struct.GPR* %6977, i32 0, i32 1
  %6979 = getelementptr inbounds %struct.Reg, %struct.Reg* %6978, i32 0, i32 0
  %EAX.i415 = bitcast %union.anon* %6979 to i32*
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6981 = getelementptr inbounds %struct.GPR, %struct.GPR* %6980, i32 0, i32 15
  %6982 = getelementptr inbounds %struct.Reg, %struct.Reg* %6981, i32 0, i32 0
  %RBP.i416 = bitcast %union.anon* %6982 to i64*
  %6983 = load i64, i64* %RBP.i416
  %6984 = sub i64 %6983, 100
  %6985 = load i32, i32* %EAX.i415
  %6986 = zext i32 %6985 to i64
  %6987 = load i64, i64* %PC.i414
  %6988 = add i64 %6987, 3
  store i64 %6988, i64* %PC.i414
  %6989 = inttoptr i64 %6984 to i32*
  store i32 %6985, i32* %6989
  store %struct.Memory* %loadMem_4241a1, %struct.Memory** %MEMORY
  %loadMem_4241a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6991 = getelementptr inbounds %struct.GPR, %struct.GPR* %6990, i32 0, i32 33
  %6992 = getelementptr inbounds %struct.Reg, %struct.Reg* %6991, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %6992 to i64*
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6994 = getelementptr inbounds %struct.GPR, %struct.GPR* %6993, i32 0, i32 1
  %6995 = getelementptr inbounds %struct.Reg, %struct.Reg* %6994, i32 0, i32 0
  %RAX.i412 = bitcast %union.anon* %6995 to i64*
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6997 = getelementptr inbounds %struct.GPR, %struct.GPR* %6996, i32 0, i32 15
  %6998 = getelementptr inbounds %struct.Reg, %struct.Reg* %6997, i32 0, i32 0
  %RBP.i413 = bitcast %union.anon* %6998 to i64*
  %6999 = load i64, i64* %RBP.i413
  %7000 = sub i64 %6999, 124
  %7001 = load i64, i64* %PC.i411
  %7002 = add i64 %7001, 3
  store i64 %7002, i64* %PC.i411
  %7003 = inttoptr i64 %7000 to i32*
  %7004 = load i32, i32* %7003
  %7005 = zext i32 %7004 to i64
  store i64 %7005, i64* %RAX.i412, align 8
  store %struct.Memory* %loadMem_4241a4, %struct.Memory** %MEMORY
  %loadMem_4241a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7007 = getelementptr inbounds %struct.GPR, %struct.GPR* %7006, i32 0, i32 33
  %7008 = getelementptr inbounds %struct.Reg, %struct.Reg* %7007, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %7008 to i64*
  %7009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7010 = getelementptr inbounds %struct.GPR, %struct.GPR* %7009, i32 0, i32 1
  %7011 = getelementptr inbounds %struct.Reg, %struct.Reg* %7010, i32 0, i32 0
  %EAX.i409 = bitcast %union.anon* %7011 to i32*
  %7012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7013 = getelementptr inbounds %struct.GPR, %struct.GPR* %7012, i32 0, i32 15
  %7014 = getelementptr inbounds %struct.Reg, %struct.Reg* %7013, i32 0, i32 0
  %RBP.i410 = bitcast %union.anon* %7014 to i64*
  %7015 = load i64, i64* %RBP.i410
  %7016 = sub i64 %7015, 204
  %7017 = load i32, i32* %EAX.i409
  %7018 = zext i32 %7017 to i64
  %7019 = load i64, i64* %PC.i408
  %7020 = add i64 %7019, 6
  store i64 %7020, i64* %PC.i408
  %7021 = inttoptr i64 %7016 to i32*
  store i32 %7017, i32* %7021
  store %struct.Memory* %loadMem_4241a7, %struct.Memory** %MEMORY
  %loadMem_4241ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %7022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7023 = getelementptr inbounds %struct.GPR, %struct.GPR* %7022, i32 0, i32 33
  %7024 = getelementptr inbounds %struct.Reg, %struct.Reg* %7023, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %7024 to i64*
  %7025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7026 = getelementptr inbounds %struct.GPR, %struct.GPR* %7025, i32 0, i32 1
  %7027 = getelementptr inbounds %struct.Reg, %struct.Reg* %7026, i32 0, i32 0
  %RAX.i406 = bitcast %union.anon* %7027 to i64*
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7029 = getelementptr inbounds %struct.GPR, %struct.GPR* %7028, i32 0, i32 15
  %7030 = getelementptr inbounds %struct.Reg, %struct.Reg* %7029, i32 0, i32 0
  %RBP.i407 = bitcast %union.anon* %7030 to i64*
  %7031 = load i64, i64* %RBP.i407
  %7032 = sub i64 %7031, 128
  %7033 = load i64, i64* %PC.i405
  %7034 = add i64 %7033, 3
  store i64 %7034, i64* %PC.i405
  %7035 = inttoptr i64 %7032 to i32*
  %7036 = load i32, i32* %7035
  %7037 = zext i32 %7036 to i64
  store i64 %7037, i64* %RAX.i406, align 8
  store %struct.Memory* %loadMem_4241ad, %struct.Memory** %MEMORY
  %loadMem_4241b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7039 = getelementptr inbounds %struct.GPR, %struct.GPR* %7038, i32 0, i32 33
  %7040 = getelementptr inbounds %struct.Reg, %struct.Reg* %7039, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %7040 to i64*
  %7041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7042 = getelementptr inbounds %struct.GPR, %struct.GPR* %7041, i32 0, i32 1
  %7043 = getelementptr inbounds %struct.Reg, %struct.Reg* %7042, i32 0, i32 0
  %EAX.i403 = bitcast %union.anon* %7043 to i32*
  %7044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7045 = getelementptr inbounds %struct.GPR, %struct.GPR* %7044, i32 0, i32 15
  %7046 = getelementptr inbounds %struct.Reg, %struct.Reg* %7045, i32 0, i32 0
  %RBP.i404 = bitcast %union.anon* %7046 to i64*
  %7047 = load i64, i64* %RBP.i404
  %7048 = sub i64 %7047, 208
  %7049 = load i32, i32* %EAX.i403
  %7050 = zext i32 %7049 to i64
  %7051 = load i64, i64* %PC.i402
  %7052 = add i64 %7051, 6
  store i64 %7052, i64* %PC.i402
  %7053 = inttoptr i64 %7048 to i32*
  store i32 %7049, i32* %7053
  store %struct.Memory* %loadMem_4241b0, %struct.Memory** %MEMORY
  br label %block_.L_4241b6

block_.L_4241b6:                                  ; preds = %block_42419e, %routine_shll__cl___esi.exit549
  %loadMem_4241b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7055 = getelementptr inbounds %struct.GPR, %struct.GPR* %7054, i32 0, i32 33
  %7056 = getelementptr inbounds %struct.Reg, %struct.Reg* %7055, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %7056 to i64*
  %7057 = load i64, i64* %PC.i401
  %7058 = add i64 %7057, 5
  %7059 = load i64, i64* %PC.i401
  %7060 = add i64 %7059, 5
  store i64 %7060, i64* %PC.i401
  %7061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7058, i64* %7061, align 8
  store %struct.Memory* %loadMem_4241b6, %struct.Memory** %MEMORY
  br label %block_.L_4241bb

block_.L_4241bb:                                  ; preds = %block_.L_4241b6, %block_424076
  %loadMem_4241bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7063 = getelementptr inbounds %struct.GPR, %struct.GPR* %7062, i32 0, i32 33
  %7064 = getelementptr inbounds %struct.Reg, %struct.Reg* %7063, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %7064 to i64*
  %7065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7066 = getelementptr inbounds %struct.GPR, %struct.GPR* %7065, i32 0, i32 1
  %7067 = getelementptr inbounds %struct.Reg, %struct.Reg* %7066, i32 0, i32 0
  %RAX.i399 = bitcast %union.anon* %7067 to i64*
  %7068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7069 = getelementptr inbounds %struct.GPR, %struct.GPR* %7068, i32 0, i32 15
  %7070 = getelementptr inbounds %struct.Reg, %struct.Reg* %7069, i32 0, i32 0
  %RBP.i400 = bitcast %union.anon* %7070 to i64*
  %7071 = load i64, i64* %RBP.i400
  %7072 = sub i64 %7071, 204
  %7073 = load i64, i64* %PC.i398
  %7074 = add i64 %7073, 6
  store i64 %7074, i64* %PC.i398
  %7075 = inttoptr i64 %7072 to i32*
  %7076 = load i32, i32* %7075
  %7077 = zext i32 %7076 to i64
  store i64 %7077, i64* %RAX.i399, align 8
  store %struct.Memory* %loadMem_4241bb, %struct.Memory** %MEMORY
  %loadMem_4241c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7079 = getelementptr inbounds %struct.GPR, %struct.GPR* %7078, i32 0, i32 33
  %7080 = getelementptr inbounds %struct.Reg, %struct.Reg* %7079, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %7080 to i64*
  %7081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7082 = getelementptr inbounds %struct.GPR, %struct.GPR* %7081, i32 0, i32 1
  %7083 = getelementptr inbounds %struct.Reg, %struct.Reg* %7082, i32 0, i32 0
  %EAX.i396 = bitcast %union.anon* %7083 to i32*
  %7084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7085 = getelementptr inbounds %struct.GPR, %struct.GPR* %7084, i32 0, i32 15
  %7086 = getelementptr inbounds %struct.Reg, %struct.Reg* %7085, i32 0, i32 0
  %RBP.i397 = bitcast %union.anon* %7086 to i64*
  %7087 = load i64, i64* %RBP.i397
  %7088 = sub i64 %7087, 184
  %7089 = load i32, i32* %EAX.i396
  %7090 = zext i32 %7089 to i64
  %7091 = load i64, i64* %PC.i395
  %7092 = add i64 %7091, 6
  store i64 %7092, i64* %PC.i395
  %7093 = inttoptr i64 %7088 to i32*
  store i32 %7089, i32* %7093
  store %struct.Memory* %loadMem_4241c1, %struct.Memory** %MEMORY
  %loadMem_4241c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7095 = getelementptr inbounds %struct.GPR, %struct.GPR* %7094, i32 0, i32 33
  %7096 = getelementptr inbounds %struct.Reg, %struct.Reg* %7095, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %7096 to i64*
  %7097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7098 = getelementptr inbounds %struct.GPR, %struct.GPR* %7097, i32 0, i32 1
  %7099 = getelementptr inbounds %struct.Reg, %struct.Reg* %7098, i32 0, i32 0
  %RAX.i393 = bitcast %union.anon* %7099 to i64*
  %7100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7101 = getelementptr inbounds %struct.GPR, %struct.GPR* %7100, i32 0, i32 15
  %7102 = getelementptr inbounds %struct.Reg, %struct.Reg* %7101, i32 0, i32 0
  %RBP.i394 = bitcast %union.anon* %7102 to i64*
  %7103 = load i64, i64* %RBP.i394
  %7104 = sub i64 %7103, 208
  %7105 = load i64, i64* %PC.i392
  %7106 = add i64 %7105, 6
  store i64 %7106, i64* %PC.i392
  %7107 = inttoptr i64 %7104 to i32*
  %7108 = load i32, i32* %7107
  %7109 = zext i32 %7108 to i64
  store i64 %7109, i64* %RAX.i393, align 8
  store %struct.Memory* %loadMem_4241c7, %struct.Memory** %MEMORY
  %loadMem_4241cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7111 = getelementptr inbounds %struct.GPR, %struct.GPR* %7110, i32 0, i32 33
  %7112 = getelementptr inbounds %struct.Reg, %struct.Reg* %7111, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %7112 to i64*
  %7113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7114 = getelementptr inbounds %struct.GPR, %struct.GPR* %7113, i32 0, i32 1
  %7115 = getelementptr inbounds %struct.Reg, %struct.Reg* %7114, i32 0, i32 0
  %EAX.i390 = bitcast %union.anon* %7115 to i32*
  %7116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7117 = getelementptr inbounds %struct.GPR, %struct.GPR* %7116, i32 0, i32 15
  %7118 = getelementptr inbounds %struct.Reg, %struct.Reg* %7117, i32 0, i32 0
  %RBP.i391 = bitcast %union.anon* %7118 to i64*
  %7119 = load i64, i64* %RBP.i391
  %7120 = sub i64 %7119, 188
  %7121 = load i32, i32* %EAX.i390
  %7122 = zext i32 %7121 to i64
  %7123 = load i64, i64* %PC.i389
  %7124 = add i64 %7123, 6
  store i64 %7124, i64* %PC.i389
  %7125 = inttoptr i64 %7120 to i32*
  store i32 %7121, i32* %7125
  store %struct.Memory* %loadMem_4241cd, %struct.Memory** %MEMORY
  %loadMem_4241d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7127 = getelementptr inbounds %struct.GPR, %struct.GPR* %7126, i32 0, i32 33
  %7128 = getelementptr inbounds %struct.Reg, %struct.Reg* %7127, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %7128 to i64*
  %7129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7130 = getelementptr inbounds %struct.GPR, %struct.GPR* %7129, i32 0, i32 1
  %7131 = getelementptr inbounds %struct.Reg, %struct.Reg* %7130, i32 0, i32 0
  %RAX.i387 = bitcast %union.anon* %7131 to i64*
  %7132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7133 = getelementptr inbounds %struct.GPR, %struct.GPR* %7132, i32 0, i32 15
  %7134 = getelementptr inbounds %struct.Reg, %struct.Reg* %7133, i32 0, i32 0
  %RBP.i388 = bitcast %union.anon* %7134 to i64*
  %7135 = load i64, i64* %RBP.i388
  %7136 = sub i64 %7135, 180
  %7137 = load i64, i64* %PC.i386
  %7138 = add i64 %7137, 6
  store i64 %7138, i64* %PC.i386
  %7139 = inttoptr i64 %7136 to i32*
  %7140 = load i32, i32* %7139
  %7141 = zext i32 %7140 to i64
  store i64 %7141, i64* %RAX.i387, align 8
  store %struct.Memory* %loadMem_4241d3, %struct.Memory** %MEMORY
  %loadMem_4241d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7143 = getelementptr inbounds %struct.GPR, %struct.GPR* %7142, i32 0, i32 33
  %7144 = getelementptr inbounds %struct.Reg, %struct.Reg* %7143, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %7144 to i64*
  %7145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7146 = getelementptr inbounds %struct.GPR, %struct.GPR* %7145, i32 0, i32 1
  %7147 = getelementptr inbounds %struct.Reg, %struct.Reg* %7146, i32 0, i32 0
  %RAX.i385 = bitcast %union.anon* %7147 to i64*
  %7148 = load i64, i64* %RAX.i385
  %7149 = load i64, i64* %PC.i384
  %7150 = add i64 %7149, 2
  store i64 %7150, i64* %PC.i384
  %7151 = trunc i64 %7148 to i32
  %7152 = shl i32 %7151, 1
  %7153 = icmp slt i32 %7151, 0
  %7154 = icmp slt i32 %7152, 0
  %7155 = xor i1 %7153, %7154
  %7156 = zext i32 %7152 to i64
  store i64 %7156, i64* %RAX.i385, align 8
  %7157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7158 = zext i1 %7153 to i8
  store i8 %7158, i8* %7157, align 1
  %7159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7160 = and i32 %7152, 254
  %7161 = call i32 @llvm.ctpop.i32(i32 %7160)
  %7162 = trunc i32 %7161 to i8
  %7163 = and i8 %7162, 1
  %7164 = xor i8 %7163, 1
  store i8 %7164, i8* %7159, align 1
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7165, align 1
  %7166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7167 = icmp eq i32 %7152, 0
  %7168 = zext i1 %7167 to i8
  store i8 %7168, i8* %7166, align 1
  %7169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7170 = lshr i32 %7152, 31
  %7171 = trunc i32 %7170 to i8
  store i8 %7171, i8* %7169, align 1
  %7172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7173 = zext i1 %7155 to i8
  store i8 %7173, i8* %7172, align 1
  store %struct.Memory* %loadMem_4241d9, %struct.Memory** %MEMORY
  %loadMem_4241dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7175 = getelementptr inbounds %struct.GPR, %struct.GPR* %7174, i32 0, i32 33
  %7176 = getelementptr inbounds %struct.Reg, %struct.Reg* %7175, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %7176 to i64*
  %7177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7178 = getelementptr inbounds %struct.GPR, %struct.GPR* %7177, i32 0, i32 1
  %7179 = getelementptr inbounds %struct.Reg, %struct.Reg* %7178, i32 0, i32 0
  %RAX.i383 = bitcast %union.anon* %7179 to i64*
  %7180 = load i64, i64* %RAX.i383
  %7181 = load i64, i64* %PC.i382
  %7182 = add i64 %7181, 3
  store i64 %7182, i64* %PC.i382
  %7183 = trunc i64 %7180 to i32
  %7184 = add i32 1, %7183
  %7185 = zext i32 %7184 to i64
  store i64 %7185, i64* %RAX.i383, align 8
  %7186 = icmp ult i32 %7184, %7183
  %7187 = icmp ult i32 %7184, 1
  %7188 = or i1 %7186, %7187
  %7189 = zext i1 %7188 to i8
  %7190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7189, i8* %7190, align 1
  %7191 = and i32 %7184, 255
  %7192 = call i32 @llvm.ctpop.i32(i32 %7191)
  %7193 = trunc i32 %7192 to i8
  %7194 = and i8 %7193, 1
  %7195 = xor i8 %7194, 1
  %7196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7195, i8* %7196, align 1
  %7197 = xor i64 1, %7180
  %7198 = trunc i64 %7197 to i32
  %7199 = xor i32 %7198, %7184
  %7200 = lshr i32 %7199, 4
  %7201 = trunc i32 %7200 to i8
  %7202 = and i8 %7201, 1
  %7203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7202, i8* %7203, align 1
  %7204 = icmp eq i32 %7184, 0
  %7205 = zext i1 %7204 to i8
  %7206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7205, i8* %7206, align 1
  %7207 = lshr i32 %7184, 31
  %7208 = trunc i32 %7207 to i8
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7208, i8* %7209, align 1
  %7210 = lshr i32 %7183, 31
  %7211 = xor i32 %7207, %7210
  %7212 = add i32 %7211, %7207
  %7213 = icmp eq i32 %7212, 2
  %7214 = zext i1 %7213 to i8
  %7215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7214, i8* %7215, align 1
  store %struct.Memory* %loadMem_4241dc, %struct.Memory** %MEMORY
  %loadMem_4241df = load %struct.Memory*, %struct.Memory** %MEMORY
  %7216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7217 = getelementptr inbounds %struct.GPR, %struct.GPR* %7216, i32 0, i32 33
  %7218 = getelementptr inbounds %struct.Reg, %struct.Reg* %7217, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %7218 to i64*
  %7219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7220 = getelementptr inbounds %struct.GPR, %struct.GPR* %7219, i32 0, i32 1
  %7221 = getelementptr inbounds %struct.Reg, %struct.Reg* %7220, i32 0, i32 0
  %EAX.i380 = bitcast %union.anon* %7221 to i32*
  %7222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7223 = getelementptr inbounds %struct.GPR, %struct.GPR* %7222, i32 0, i32 15
  %7224 = getelementptr inbounds %struct.Reg, %struct.Reg* %7223, i32 0, i32 0
  %RBP.i381 = bitcast %union.anon* %7224 to i64*
  %7225 = load i64, i64* %RBP.i381
  %7226 = sub i64 %7225, 212
  %7227 = load i32, i32* %EAX.i380
  %7228 = zext i32 %7227 to i64
  %7229 = load i64, i64* %PC.i379
  %7230 = add i64 %7229, 6
  store i64 %7230, i64* %PC.i379
  %7231 = inttoptr i64 %7226 to i32*
  store i32 %7227, i32* %7231
  store %struct.Memory* %loadMem_4241df, %struct.Memory** %MEMORY
  %loadMem_4241e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7233 = getelementptr inbounds %struct.GPR, %struct.GPR* %7232, i32 0, i32 33
  %7234 = getelementptr inbounds %struct.Reg, %struct.Reg* %7233, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %7234 to i64*
  %7235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7236 = getelementptr inbounds %struct.GPR, %struct.GPR* %7235, i32 0, i32 15
  %7237 = getelementptr inbounds %struct.Reg, %struct.Reg* %7236, i32 0, i32 0
  %RBP.i378 = bitcast %union.anon* %7237 to i64*
  %7238 = load i64, i64* %RBP.i378
  %7239 = sub i64 %7238, 192
  %7240 = load i64, i64* %PC.i377
  %7241 = add i64 %7240, 10
  store i64 %7241, i64* %PC.i377
  %7242 = inttoptr i64 %7239 to i32*
  store i32 0, i32* %7242
  store %struct.Memory* %loadMem_4241e5, %struct.Memory** %MEMORY
  br label %block_.L_4241ef

block_.L_4241ef:                                  ; preds = %block_.L_424449, %block_.L_4241bb
  %loadMem_4241ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %7243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7244 = getelementptr inbounds %struct.GPR, %struct.GPR* %7243, i32 0, i32 33
  %7245 = getelementptr inbounds %struct.Reg, %struct.Reg* %7244, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %7245 to i64*
  %7246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7247 = getelementptr inbounds %struct.GPR, %struct.GPR* %7246, i32 0, i32 1
  %7248 = getelementptr inbounds %struct.Reg, %struct.Reg* %7247, i32 0, i32 0
  %RAX.i375 = bitcast %union.anon* %7248 to i64*
  %7249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7250 = getelementptr inbounds %struct.GPR, %struct.GPR* %7249, i32 0, i32 15
  %7251 = getelementptr inbounds %struct.Reg, %struct.Reg* %7250, i32 0, i32 0
  %RBP.i376 = bitcast %union.anon* %7251 to i64*
  %7252 = load i64, i64* %RBP.i376
  %7253 = sub i64 %7252, 192
  %7254 = load i64, i64* %PC.i374
  %7255 = add i64 %7254, 6
  store i64 %7255, i64* %PC.i374
  %7256 = inttoptr i64 %7253 to i32*
  %7257 = load i32, i32* %7256
  %7258 = zext i32 %7257 to i64
  store i64 %7258, i64* %RAX.i375, align 8
  store %struct.Memory* %loadMem_4241ef, %struct.Memory** %MEMORY
  %loadMem_4241f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7260 = getelementptr inbounds %struct.GPR, %struct.GPR* %7259, i32 0, i32 33
  %7261 = getelementptr inbounds %struct.Reg, %struct.Reg* %7260, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %7261 to i64*
  %7262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7263 = getelementptr inbounds %struct.GPR, %struct.GPR* %7262, i32 0, i32 1
  %7264 = getelementptr inbounds %struct.Reg, %struct.Reg* %7263, i32 0, i32 0
  %EAX.i372 = bitcast %union.anon* %7264 to i32*
  %7265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7266 = getelementptr inbounds %struct.GPR, %struct.GPR* %7265, i32 0, i32 15
  %7267 = getelementptr inbounds %struct.Reg, %struct.Reg* %7266, i32 0, i32 0
  %RBP.i373 = bitcast %union.anon* %7267 to i64*
  %7268 = load i32, i32* %EAX.i372
  %7269 = zext i32 %7268 to i64
  %7270 = load i64, i64* %RBP.i373
  %7271 = sub i64 %7270, 212
  %7272 = load i64, i64* %PC.i371
  %7273 = add i64 %7272, 6
  store i64 %7273, i64* %PC.i371
  %7274 = inttoptr i64 %7271 to i32*
  %7275 = load i32, i32* %7274
  %7276 = sub i32 %7268, %7275
  %7277 = icmp ult i32 %7268, %7275
  %7278 = zext i1 %7277 to i8
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7278, i8* %7279, align 1
  %7280 = and i32 %7276, 255
  %7281 = call i32 @llvm.ctpop.i32(i32 %7280)
  %7282 = trunc i32 %7281 to i8
  %7283 = and i8 %7282, 1
  %7284 = xor i8 %7283, 1
  %7285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7284, i8* %7285, align 1
  %7286 = xor i32 %7275, %7268
  %7287 = xor i32 %7286, %7276
  %7288 = lshr i32 %7287, 4
  %7289 = trunc i32 %7288 to i8
  %7290 = and i8 %7289, 1
  %7291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7290, i8* %7291, align 1
  %7292 = icmp eq i32 %7276, 0
  %7293 = zext i1 %7292 to i8
  %7294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7293, i8* %7294, align 1
  %7295 = lshr i32 %7276, 31
  %7296 = trunc i32 %7295 to i8
  %7297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7296, i8* %7297, align 1
  %7298 = lshr i32 %7268, 31
  %7299 = lshr i32 %7275, 31
  %7300 = xor i32 %7299, %7298
  %7301 = xor i32 %7295, %7298
  %7302 = add i32 %7301, %7300
  %7303 = icmp eq i32 %7302, 2
  %7304 = zext i1 %7303 to i8
  %7305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7304, i8* %7305, align 1
  store %struct.Memory* %loadMem_4241f5, %struct.Memory** %MEMORY
  %loadMem_4241fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7307 = getelementptr inbounds %struct.GPR, %struct.GPR* %7306, i32 0, i32 33
  %7308 = getelementptr inbounds %struct.Reg, %struct.Reg* %7307, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %7308 to i64*
  %7309 = load i64, i64* %PC.i370
  %7310 = add i64 %7309, 610
  %7311 = load i64, i64* %PC.i370
  %7312 = add i64 %7311, 6
  %7313 = load i64, i64* %PC.i370
  %7314 = add i64 %7313, 6
  store i64 %7314, i64* %PC.i370
  %7315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7316 = load i8, i8* %7315, align 1
  %7317 = icmp ne i8 %7316, 0
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7319 = load i8, i8* %7318, align 1
  %7320 = icmp ne i8 %7319, 0
  %7321 = xor i1 %7317, %7320
  %7322 = xor i1 %7321, true
  %7323 = zext i1 %7322 to i8
  store i8 %7323, i8* %BRANCH_TAKEN, align 1
  %7324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7325 = select i1 %7321, i64 %7312, i64 %7310
  store i64 %7325, i64* %7324, align 8
  store %struct.Memory* %loadMem_4241fb, %struct.Memory** %MEMORY
  %loadBr_4241fb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4241fb = icmp eq i8 %loadBr_4241fb, 1
  br i1 %cmpBr_4241fb, label %block_.L_42445d, label %block_424201

block_424201:                                     ; preds = %block_.L_4241ef
  %loadMem_424201 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7327 = getelementptr inbounds %struct.GPR, %struct.GPR* %7326, i32 0, i32 33
  %7328 = getelementptr inbounds %struct.Reg, %struct.Reg* %7327, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %7328 to i64*
  %7329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7330 = getelementptr inbounds %struct.GPR, %struct.GPR* %7329, i32 0, i32 15
  %7331 = getelementptr inbounds %struct.Reg, %struct.Reg* %7330, i32 0, i32 0
  %RBP.i369 = bitcast %union.anon* %7331 to i64*
  %7332 = load i64, i64* %RBP.i369
  %7333 = sub i64 %7332, 224
  %7334 = load i64, i64* %PC.i368
  %7335 = add i64 %7334, 10
  store i64 %7335, i64* %PC.i368
  %7336 = inttoptr i64 %7333 to i32*
  store i32 1, i32* %7336
  store %struct.Memory* %loadMem_424201, %struct.Memory** %MEMORY
  %loadMem_42420b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7338 = getelementptr inbounds %struct.GPR, %struct.GPR* %7337, i32 0, i32 33
  %7339 = getelementptr inbounds %struct.Reg, %struct.Reg* %7338, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %7339 to i64*
  %7340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7341 = getelementptr inbounds %struct.GPR, %struct.GPR* %7340, i32 0, i32 15
  %7342 = getelementptr inbounds %struct.Reg, %struct.Reg* %7341, i32 0, i32 0
  %RBP.i367 = bitcast %union.anon* %7342 to i64*
  %7343 = load i64, i64* %RBP.i367
  %7344 = sub i64 %7343, 196
  %7345 = load i64, i64* %PC.i366
  %7346 = add i64 %7345, 10
  store i64 %7346, i64* %PC.i366
  %7347 = inttoptr i64 %7344 to i32*
  store i32 65536, i32* %7347
  store %struct.Memory* %loadMem_42420b, %struct.Memory** %MEMORY
  %loadMem_424215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7349 = getelementptr inbounds %struct.GPR, %struct.GPR* %7348, i32 0, i32 33
  %7350 = getelementptr inbounds %struct.Reg, %struct.Reg* %7349, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %7350 to i64*
  %7351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7352 = getelementptr inbounds %struct.GPR, %struct.GPR* %7351, i32 0, i32 15
  %7353 = getelementptr inbounds %struct.Reg, %struct.Reg* %7352, i32 0, i32 0
  %RBP.i365 = bitcast %union.anon* %7353 to i64*
  %7354 = load i64, i64* %RBP.i365
  %7355 = sub i64 %7354, 200
  %7356 = load i64, i64* %PC.i364
  %7357 = add i64 %7356, 10
  store i64 %7357, i64* %PC.i364
  %7358 = inttoptr i64 %7355 to i32*
  store i32 0, i32* %7358
  store %struct.Memory* %loadMem_424215, %struct.Memory** %MEMORY
  br label %block_.L_42421f

block_.L_42421f:                                  ; preds = %block_.L_424406, %block_424201
  %loadMem_42421f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7360 = getelementptr inbounds %struct.GPR, %struct.GPR* %7359, i32 0, i32 33
  %7361 = getelementptr inbounds %struct.Reg, %struct.Reg* %7360, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %7361 to i64*
  %7362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7363 = getelementptr inbounds %struct.GPR, %struct.GPR* %7362, i32 0, i32 15
  %7364 = getelementptr inbounds %struct.Reg, %struct.Reg* %7363, i32 0, i32 0
  %RBP.i363 = bitcast %union.anon* %7364 to i64*
  %7365 = load i64, i64* %RBP.i363
  %7366 = sub i64 %7365, 200
  %7367 = load i64, i64* %PC.i362
  %7368 = add i64 %7367, 7
  store i64 %7368, i64* %PC.i362
  %7369 = inttoptr i64 %7366 to i32*
  %7370 = load i32, i32* %7369
  %7371 = sub i32 %7370, 4
  %7372 = icmp ult i32 %7370, 4
  %7373 = zext i1 %7372 to i8
  %7374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7373, i8* %7374, align 1
  %7375 = and i32 %7371, 255
  %7376 = call i32 @llvm.ctpop.i32(i32 %7375)
  %7377 = trunc i32 %7376 to i8
  %7378 = and i8 %7377, 1
  %7379 = xor i8 %7378, 1
  %7380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7379, i8* %7380, align 1
  %7381 = xor i32 %7370, 4
  %7382 = xor i32 %7381, %7371
  %7383 = lshr i32 %7382, 4
  %7384 = trunc i32 %7383 to i8
  %7385 = and i8 %7384, 1
  %7386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7385, i8* %7386, align 1
  %7387 = icmp eq i32 %7371, 0
  %7388 = zext i1 %7387 to i8
  %7389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7388, i8* %7389, align 1
  %7390 = lshr i32 %7371, 31
  %7391 = trunc i32 %7390 to i8
  %7392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7391, i8* %7392, align 1
  %7393 = lshr i32 %7370, 31
  %7394 = xor i32 %7390, %7393
  %7395 = add i32 %7394, %7393
  %7396 = icmp eq i32 %7395, 2
  %7397 = zext i1 %7396 to i8
  %7398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7397, i8* %7398, align 1
  store %struct.Memory* %loadMem_42421f, %struct.Memory** %MEMORY
  %loadMem_424226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7400 = getelementptr inbounds %struct.GPR, %struct.GPR* %7399, i32 0, i32 33
  %7401 = getelementptr inbounds %struct.Reg, %struct.Reg* %7400, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %7401 to i64*
  %7402 = load i64, i64* %PC.i361
  %7403 = add i64 %7402, 500
  %7404 = load i64, i64* %PC.i361
  %7405 = add i64 %7404, 6
  %7406 = load i64, i64* %PC.i361
  %7407 = add i64 %7406, 6
  store i64 %7407, i64* %PC.i361
  %7408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7409 = load i8, i8* %7408, align 1
  %7410 = icmp ne i8 %7409, 0
  %7411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7412 = load i8, i8* %7411, align 1
  %7413 = icmp ne i8 %7412, 0
  %7414 = xor i1 %7410, %7413
  %7415 = xor i1 %7414, true
  %7416 = zext i1 %7415 to i8
  store i8 %7416, i8* %BRANCH_TAKEN, align 1
  %7417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7418 = select i1 %7414, i64 %7405, i64 %7403
  store i64 %7418, i64* %7417, align 8
  store %struct.Memory* %loadMem_424226, %struct.Memory** %MEMORY
  %loadBr_424226 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_424226 = icmp eq i8 %loadBr_424226, 1
  br i1 %cmpBr_424226, label %block_.L_42441a, label %block_42422c

block_42422c:                                     ; preds = %block_.L_42421f
  %loadMem_42422c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7420 = getelementptr inbounds %struct.GPR, %struct.GPR* %7419, i32 0, i32 33
  %7421 = getelementptr inbounds %struct.Reg, %struct.Reg* %7420, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %7421 to i64*
  %7422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7423 = getelementptr inbounds %struct.GPR, %struct.GPR* %7422, i32 0, i32 1
  %7424 = getelementptr inbounds %struct.Reg, %struct.Reg* %7423, i32 0, i32 0
  %RAX.i359 = bitcast %union.anon* %7424 to i64*
  %7425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7426 = getelementptr inbounds %struct.GPR, %struct.GPR* %7425, i32 0, i32 15
  %7427 = getelementptr inbounds %struct.Reg, %struct.Reg* %7426, i32 0, i32 0
  %RBP.i360 = bitcast %union.anon* %7427 to i64*
  %7428 = load i64, i64* %RBP.i360
  %7429 = sub i64 %7428, 184
  %7430 = load i64, i64* %PC.i358
  %7431 = add i64 %7430, 6
  store i64 %7431, i64* %PC.i358
  %7432 = inttoptr i64 %7429 to i32*
  %7433 = load i32, i32* %7432
  %7434 = zext i32 %7433 to i64
  store i64 %7434, i64* %RAX.i359, align 8
  store %struct.Memory* %loadMem_42422c, %struct.Memory** %MEMORY
  %loadMem_424232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7436 = getelementptr inbounds %struct.GPR, %struct.GPR* %7435, i32 0, i32 33
  %7437 = getelementptr inbounds %struct.Reg, %struct.Reg* %7436, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %7437 to i64*
  %7438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7439 = getelementptr inbounds %struct.GPR, %struct.GPR* %7438, i32 0, i32 5
  %7440 = getelementptr inbounds %struct.Reg, %struct.Reg* %7439, i32 0, i32 0
  %RCX.i356 = bitcast %union.anon* %7440 to i64*
  %7441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7442 = getelementptr inbounds %struct.GPR, %struct.GPR* %7441, i32 0, i32 15
  %7443 = getelementptr inbounds %struct.Reg, %struct.Reg* %7442, i32 0, i32 0
  %RBP.i357 = bitcast %union.anon* %7443 to i64*
  %7444 = load i64, i64* %RBP.i357
  %7445 = sub i64 %7444, 200
  %7446 = load i64, i64* %PC.i355
  %7447 = add i64 %7446, 7
  store i64 %7447, i64* %PC.i355
  %7448 = inttoptr i64 %7445 to i32*
  %7449 = load i32, i32* %7448
  %7450 = sext i32 %7449 to i64
  store i64 %7450, i64* %RCX.i356, align 8
  store %struct.Memory* %loadMem_424232, %struct.Memory** %MEMORY
  %loadMem_424239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7452 = getelementptr inbounds %struct.GPR, %struct.GPR* %7451, i32 0, i32 33
  %7453 = getelementptr inbounds %struct.Reg, %struct.Reg* %7452, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %7453 to i64*
  %7454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7455 = getelementptr inbounds %struct.GPR, %struct.GPR* %7454, i32 0, i32 1
  %7456 = getelementptr inbounds %struct.Reg, %struct.Reg* %7455, i32 0, i32 0
  %RAX.i353 = bitcast %union.anon* %7456 to i64*
  %7457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7458 = getelementptr inbounds %struct.GPR, %struct.GPR* %7457, i32 0, i32 5
  %7459 = getelementptr inbounds %struct.Reg, %struct.Reg* %7458, i32 0, i32 0
  %RCX.i354 = bitcast %union.anon* %7459 to i64*
  %7460 = load i64, i64* %RAX.i353
  %7461 = load i64, i64* %RCX.i354
  %7462 = mul i64 %7461, 4
  %7463 = add i64 %7462, 7125120
  %7464 = load i64, i64* %PC.i352
  %7465 = add i64 %7464, 7
  store i64 %7465, i64* %PC.i352
  %7466 = trunc i64 %7460 to i32
  %7467 = inttoptr i64 %7463 to i32*
  %7468 = load i32, i32* %7467
  %7469 = add i32 %7468, %7466
  %7470 = zext i32 %7469 to i64
  store i64 %7470, i64* %RAX.i353, align 8
  %7471 = icmp ult i32 %7469, %7466
  %7472 = icmp ult i32 %7469, %7468
  %7473 = or i1 %7471, %7472
  %7474 = zext i1 %7473 to i8
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7474, i8* %7475, align 1
  %7476 = and i32 %7469, 255
  %7477 = call i32 @llvm.ctpop.i32(i32 %7476)
  %7478 = trunc i32 %7477 to i8
  %7479 = and i8 %7478, 1
  %7480 = xor i8 %7479, 1
  %7481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7480, i8* %7481, align 1
  %7482 = xor i32 %7468, %7466
  %7483 = xor i32 %7482, %7469
  %7484 = lshr i32 %7483, 4
  %7485 = trunc i32 %7484 to i8
  %7486 = and i8 %7485, 1
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7486, i8* %7487, align 1
  %7488 = icmp eq i32 %7469, 0
  %7489 = zext i1 %7488 to i8
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7489, i8* %7490, align 1
  %7491 = lshr i32 %7469, 31
  %7492 = trunc i32 %7491 to i8
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7492, i8* %7493, align 1
  %7494 = lshr i32 %7466, 31
  %7495 = lshr i32 %7468, 31
  %7496 = xor i32 %7491, %7494
  %7497 = xor i32 %7491, %7495
  %7498 = add i32 %7496, %7497
  %7499 = icmp eq i32 %7498, 2
  %7500 = zext i1 %7499 to i8
  %7501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7500, i8* %7501, align 1
  store %struct.Memory* %loadMem_424239, %struct.Memory** %MEMORY
  %loadMem_424240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7503 = getelementptr inbounds %struct.GPR, %struct.GPR* %7502, i32 0, i32 33
  %7504 = getelementptr inbounds %struct.Reg, %struct.Reg* %7503, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %7504 to i64*
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7506 = getelementptr inbounds %struct.GPR, %struct.GPR* %7505, i32 0, i32 1
  %7507 = getelementptr inbounds %struct.Reg, %struct.Reg* %7506, i32 0, i32 0
  %EAX.i350 = bitcast %union.anon* %7507 to i32*
  %7508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7509 = getelementptr inbounds %struct.GPR, %struct.GPR* %7508, i32 0, i32 15
  %7510 = getelementptr inbounds %struct.Reg, %struct.Reg* %7509, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %7510 to i64*
  %7511 = load i64, i64* %RBP.i351
  %7512 = sub i64 %7511, 124
  %7513 = load i32, i32* %EAX.i350
  %7514 = zext i32 %7513 to i64
  %7515 = load i64, i64* %PC.i349
  %7516 = add i64 %7515, 3
  store i64 %7516, i64* %PC.i349
  %7517 = inttoptr i64 %7512 to i32*
  store i32 %7513, i32* %7517
  store %struct.Memory* %loadMem_424240, %struct.Memory** %MEMORY
  %loadMem_424243 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7519 = getelementptr inbounds %struct.GPR, %struct.GPR* %7518, i32 0, i32 33
  %7520 = getelementptr inbounds %struct.Reg, %struct.Reg* %7519, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %7520 to i64*
  %7521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7522 = getelementptr inbounds %struct.GPR, %struct.GPR* %7521, i32 0, i32 1
  %7523 = getelementptr inbounds %struct.Reg, %struct.Reg* %7522, i32 0, i32 0
  %RAX.i347 = bitcast %union.anon* %7523 to i64*
  %7524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7525 = getelementptr inbounds %struct.GPR, %struct.GPR* %7524, i32 0, i32 15
  %7526 = getelementptr inbounds %struct.Reg, %struct.Reg* %7525, i32 0, i32 0
  %RBP.i348 = bitcast %union.anon* %7526 to i64*
  %7527 = load i64, i64* %RBP.i348
  %7528 = sub i64 %7527, 188
  %7529 = load i64, i64* %PC.i346
  %7530 = add i64 %7529, 6
  store i64 %7530, i64* %PC.i346
  %7531 = inttoptr i64 %7528 to i32*
  %7532 = load i32, i32* %7531
  %7533 = zext i32 %7532 to i64
  store i64 %7533, i64* %RAX.i347, align 8
  store %struct.Memory* %loadMem_424243, %struct.Memory** %MEMORY
  %loadMem_424249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7535 = getelementptr inbounds %struct.GPR, %struct.GPR* %7534, i32 0, i32 33
  %7536 = getelementptr inbounds %struct.Reg, %struct.Reg* %7535, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %7536 to i64*
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7538 = getelementptr inbounds %struct.GPR, %struct.GPR* %7537, i32 0, i32 5
  %7539 = getelementptr inbounds %struct.Reg, %struct.Reg* %7538, i32 0, i32 0
  %RCX.i344 = bitcast %union.anon* %7539 to i64*
  %7540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7541 = getelementptr inbounds %struct.GPR, %struct.GPR* %7540, i32 0, i32 15
  %7542 = getelementptr inbounds %struct.Reg, %struct.Reg* %7541, i32 0, i32 0
  %RBP.i345 = bitcast %union.anon* %7542 to i64*
  %7543 = load i64, i64* %RBP.i345
  %7544 = sub i64 %7543, 200
  %7545 = load i64, i64* %PC.i343
  %7546 = add i64 %7545, 7
  store i64 %7546, i64* %PC.i343
  %7547 = inttoptr i64 %7544 to i32*
  %7548 = load i32, i32* %7547
  %7549 = sext i32 %7548 to i64
  store i64 %7549, i64* %RCX.i344, align 8
  store %struct.Memory* %loadMem_424249, %struct.Memory** %MEMORY
  %loadMem_424250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7551 = getelementptr inbounds %struct.GPR, %struct.GPR* %7550, i32 0, i32 33
  %7552 = getelementptr inbounds %struct.Reg, %struct.Reg* %7551, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %7552 to i64*
  %7553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7554 = getelementptr inbounds %struct.GPR, %struct.GPR* %7553, i32 0, i32 1
  %7555 = getelementptr inbounds %struct.Reg, %struct.Reg* %7554, i32 0, i32 0
  %RAX.i341 = bitcast %union.anon* %7555 to i64*
  %7556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7557 = getelementptr inbounds %struct.GPR, %struct.GPR* %7556, i32 0, i32 5
  %7558 = getelementptr inbounds %struct.Reg, %struct.Reg* %7557, i32 0, i32 0
  %RCX.i342 = bitcast %union.anon* %7558 to i64*
  %7559 = load i64, i64* %RAX.i341
  %7560 = load i64, i64* %RCX.i342
  %7561 = mul i64 %7560, 4
  %7562 = add i64 %7561, 7125136
  %7563 = load i64, i64* %PC.i340
  %7564 = add i64 %7563, 7
  store i64 %7564, i64* %PC.i340
  %7565 = trunc i64 %7559 to i32
  %7566 = inttoptr i64 %7562 to i32*
  %7567 = load i32, i32* %7566
  %7568 = add i32 %7567, %7565
  %7569 = zext i32 %7568 to i64
  store i64 %7569, i64* %RAX.i341, align 8
  %7570 = icmp ult i32 %7568, %7565
  %7571 = icmp ult i32 %7568, %7567
  %7572 = or i1 %7570, %7571
  %7573 = zext i1 %7572 to i8
  %7574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7573, i8* %7574, align 1
  %7575 = and i32 %7568, 255
  %7576 = call i32 @llvm.ctpop.i32(i32 %7575)
  %7577 = trunc i32 %7576 to i8
  %7578 = and i8 %7577, 1
  %7579 = xor i8 %7578, 1
  %7580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7579, i8* %7580, align 1
  %7581 = xor i32 %7567, %7565
  %7582 = xor i32 %7581, %7568
  %7583 = lshr i32 %7582, 4
  %7584 = trunc i32 %7583 to i8
  %7585 = and i8 %7584, 1
  %7586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7585, i8* %7586, align 1
  %7587 = icmp eq i32 %7568, 0
  %7588 = zext i1 %7587 to i8
  %7589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7588, i8* %7589, align 1
  %7590 = lshr i32 %7568, 31
  %7591 = trunc i32 %7590 to i8
  %7592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7591, i8* %7592, align 1
  %7593 = lshr i32 %7565, 31
  %7594 = lshr i32 %7567, 31
  %7595 = xor i32 %7590, %7593
  %7596 = xor i32 %7590, %7594
  %7597 = add i32 %7595, %7596
  %7598 = icmp eq i32 %7597, 2
  %7599 = zext i1 %7598 to i8
  %7600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7599, i8* %7600, align 1
  store %struct.Memory* %loadMem_424250, %struct.Memory** %MEMORY
  %loadMem_424257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7602 = getelementptr inbounds %struct.GPR, %struct.GPR* %7601, i32 0, i32 33
  %7603 = getelementptr inbounds %struct.Reg, %struct.Reg* %7602, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %7603 to i64*
  %7604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7605 = getelementptr inbounds %struct.GPR, %struct.GPR* %7604, i32 0, i32 1
  %7606 = getelementptr inbounds %struct.Reg, %struct.Reg* %7605, i32 0, i32 0
  %EAX.i338 = bitcast %union.anon* %7606 to i32*
  %7607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7608 = getelementptr inbounds %struct.GPR, %struct.GPR* %7607, i32 0, i32 15
  %7609 = getelementptr inbounds %struct.Reg, %struct.Reg* %7608, i32 0, i32 0
  %RBP.i339 = bitcast %union.anon* %7609 to i64*
  %7610 = load i64, i64* %RBP.i339
  %7611 = sub i64 %7610, 128
  %7612 = load i32, i32* %EAX.i338
  %7613 = zext i32 %7612 to i64
  %7614 = load i64, i64* %PC.i337
  %7615 = add i64 %7614, 3
  store i64 %7615, i64* %PC.i337
  %7616 = inttoptr i64 %7611 to i32*
  store i32 %7612, i32* %7616
  store %struct.Memory* %loadMem_424257, %struct.Memory** %MEMORY
  %loadMem_42425a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7618 = getelementptr inbounds %struct.GPR, %struct.GPR* %7617, i32 0, i32 33
  %7619 = getelementptr inbounds %struct.Reg, %struct.Reg* %7618, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %7619 to i64*
  %7620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7621 = getelementptr inbounds %struct.GPR, %struct.GPR* %7620, i32 0, i32 1
  %7622 = getelementptr inbounds %struct.Reg, %struct.Reg* %7621, i32 0, i32 0
  %RAX.i335 = bitcast %union.anon* %7622 to i64*
  %7623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7624 = getelementptr inbounds %struct.GPR, %struct.GPR* %7623, i32 0, i32 15
  %7625 = getelementptr inbounds %struct.Reg, %struct.Reg* %7624, i32 0, i32 0
  %RBP.i336 = bitcast %union.anon* %7625 to i64*
  %7626 = load i64, i64* %RBP.i336
  %7627 = sub i64 %7626, 124
  %7628 = load i64, i64* %PC.i334
  %7629 = add i64 %7628, 3
  store i64 %7629, i64* %PC.i334
  %7630 = inttoptr i64 %7627 to i32*
  %7631 = load i32, i32* %7630
  %7632 = zext i32 %7631 to i64
  store i64 %7632, i64* %RAX.i335, align 8
  store %struct.Memory* %loadMem_42425a, %struct.Memory** %MEMORY
  %loadMem_42425d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7634 = getelementptr inbounds %struct.GPR, %struct.GPR* %7633, i32 0, i32 33
  %7635 = getelementptr inbounds %struct.Reg, %struct.Reg* %7634, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %7635 to i64*
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7637 = getelementptr inbounds %struct.GPR, %struct.GPR* %7636, i32 0, i32 5
  %7638 = getelementptr inbounds %struct.Reg, %struct.Reg* %7637, i32 0, i32 0
  %RCX.i332 = bitcast %union.anon* %7638 to i64*
  %7639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7640 = getelementptr inbounds %struct.GPR, %struct.GPR* %7639, i32 0, i32 15
  %7641 = getelementptr inbounds %struct.Reg, %struct.Reg* %7640, i32 0, i32 0
  %RBP.i333 = bitcast %union.anon* %7641 to i64*
  %7642 = load i64, i64* %RBP.i333
  %7643 = sub i64 %7642, 80
  %7644 = load i64, i64* %PC.i331
  %7645 = add i64 %7644, 4
  store i64 %7645, i64* %PC.i331
  %7646 = inttoptr i64 %7643 to i64*
  %7647 = load i64, i64* %7646
  store i64 %7647, i64* %RCX.i332, align 8
  store %struct.Memory* %loadMem_42425d, %struct.Memory** %MEMORY
  %loadMem_424261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7649 = getelementptr inbounds %struct.GPR, %struct.GPR* %7648, i32 0, i32 33
  %7650 = getelementptr inbounds %struct.Reg, %struct.Reg* %7649, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %7650 to i64*
  %7651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7652 = getelementptr inbounds %struct.GPR, %struct.GPR* %7651, i32 0, i32 5
  %7653 = getelementptr inbounds %struct.Reg, %struct.Reg* %7652, i32 0, i32 0
  %RCX.i329 = bitcast %union.anon* %7653 to i64*
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7655 = getelementptr inbounds %struct.GPR, %struct.GPR* %7654, i32 0, i32 7
  %7656 = getelementptr inbounds %struct.Reg, %struct.Reg* %7655, i32 0, i32 0
  %RDX.i330 = bitcast %union.anon* %7656 to i64*
  %7657 = load i64, i64* %RCX.i329
  %7658 = load i64, i64* %PC.i328
  %7659 = add i64 %7658, 3
  store i64 %7659, i64* %PC.i328
  %7660 = inttoptr i64 %7657 to i16*
  %7661 = load i16, i16* %7660
  %7662 = sext i16 %7661 to i64
  %7663 = and i64 %7662, 4294967295
  store i64 %7663, i64* %RDX.i330, align 8
  store %struct.Memory* %loadMem_424261, %struct.Memory** %MEMORY
  %loadMem_424264 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7665 = getelementptr inbounds %struct.GPR, %struct.GPR* %7664, i32 0, i32 33
  %7666 = getelementptr inbounds %struct.Reg, %struct.Reg* %7665, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %7666 to i64*
  %7667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7668 = getelementptr inbounds %struct.GPR, %struct.GPR* %7667, i32 0, i32 7
  %7669 = getelementptr inbounds %struct.Reg, %struct.Reg* %7668, i32 0, i32 0
  %EDX.i326 = bitcast %union.anon* %7669 to i32*
  %7670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7671 = getelementptr inbounds %struct.GPR, %struct.GPR* %7670, i32 0, i32 1
  %7672 = getelementptr inbounds %struct.Reg, %struct.Reg* %7671, i32 0, i32 0
  %RAX.i327 = bitcast %union.anon* %7672 to i64*
  %7673 = load i64, i64* %RAX.i327
  %7674 = load i32, i32* %EDX.i326
  %7675 = zext i32 %7674 to i64
  %7676 = load i64, i64* %PC.i325
  %7677 = add i64 %7676, 2
  store i64 %7677, i64* %PC.i325
  %7678 = trunc i64 %7673 to i32
  %7679 = sub i32 %7678, %7674
  %7680 = zext i32 %7679 to i64
  store i64 %7680, i64* %RAX.i327, align 8
  %7681 = icmp ult i32 %7678, %7674
  %7682 = zext i1 %7681 to i8
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7682, i8* %7683, align 1
  %7684 = and i32 %7679, 255
  %7685 = call i32 @llvm.ctpop.i32(i32 %7684)
  %7686 = trunc i32 %7685 to i8
  %7687 = and i8 %7686, 1
  %7688 = xor i8 %7687, 1
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7688, i8* %7689, align 1
  %7690 = xor i64 %7675, %7673
  %7691 = trunc i64 %7690 to i32
  %7692 = xor i32 %7691, %7679
  %7693 = lshr i32 %7692, 4
  %7694 = trunc i32 %7693 to i8
  %7695 = and i8 %7694, 1
  %7696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7695, i8* %7696, align 1
  %7697 = icmp eq i32 %7679, 0
  %7698 = zext i1 %7697 to i8
  %7699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7698, i8* %7699, align 1
  %7700 = lshr i32 %7679, 31
  %7701 = trunc i32 %7700 to i8
  %7702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7701, i8* %7702, align 1
  %7703 = lshr i32 %7678, 31
  %7704 = lshr i32 %7674, 31
  %7705 = xor i32 %7704, %7703
  %7706 = xor i32 %7700, %7703
  %7707 = add i32 %7706, %7705
  %7708 = icmp eq i32 %7707, 2
  %7709 = zext i1 %7708 to i8
  %7710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7709, i8* %7710, align 1
  store %struct.Memory* %loadMem_424264, %struct.Memory** %MEMORY
  %loadMem_424266 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7712 = getelementptr inbounds %struct.GPR, %struct.GPR* %7711, i32 0, i32 33
  %7713 = getelementptr inbounds %struct.Reg, %struct.Reg* %7712, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %7713 to i64*
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7715 = getelementptr inbounds %struct.GPR, %struct.GPR* %7714, i32 0, i32 1
  %7716 = getelementptr inbounds %struct.Reg, %struct.Reg* %7715, i32 0, i32 0
  %EAX.i323 = bitcast %union.anon* %7716 to i32*
  %7717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7718 = getelementptr inbounds %struct.GPR, %struct.GPR* %7717, i32 0, i32 11
  %7719 = getelementptr inbounds %struct.Reg, %struct.Reg* %7718, i32 0, i32 0
  %RDI.i324 = bitcast %union.anon* %7719 to i64*
  %7720 = load i32, i32* %EAX.i323
  %7721 = zext i32 %7720 to i64
  %7722 = load i64, i64* %PC.i322
  %7723 = add i64 %7722, 2
  store i64 %7723, i64* %PC.i322
  %7724 = and i64 %7721, 4294967295
  store i64 %7724, i64* %RDI.i324, align 8
  store %struct.Memory* %loadMem_424266, %struct.Memory** %MEMORY
  %loadMem1_424268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7726 = getelementptr inbounds %struct.GPR, %struct.GPR* %7725, i32 0, i32 33
  %7727 = getelementptr inbounds %struct.Reg, %struct.Reg* %7726, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %7727 to i64*
  %7728 = load i64, i64* %PC.i321
  %7729 = add i64 %7728, -143976
  %7730 = load i64, i64* %PC.i321
  %7731 = add i64 %7730, 5
  %7732 = load i64, i64* %PC.i321
  %7733 = add i64 %7732, 5
  store i64 %7733, i64* %PC.i321
  %7734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7735 = load i64, i64* %7734, align 8
  %7736 = add i64 %7735, -8
  %7737 = inttoptr i64 %7736 to i64*
  store i64 %7731, i64* %7737
  store i64 %7736, i64* %7734, align 8
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7729, i64* %7738, align 8
  store %struct.Memory* %loadMem1_424268, %struct.Memory** %MEMORY
  %loadMem2_424268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_424268 = load i64, i64* %3
  %7739 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_424268)
  store %struct.Memory* %7739, %struct.Memory** %MEMORY
  %loadMem_42426d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7741 = getelementptr inbounds %struct.GPR, %struct.GPR* %7740, i32 0, i32 33
  %7742 = getelementptr inbounds %struct.Reg, %struct.Reg* %7741, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %7742 to i64*
  %7743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7744 = getelementptr inbounds %struct.GPR, %struct.GPR* %7743, i32 0, i32 1
  %7745 = getelementptr inbounds %struct.Reg, %struct.Reg* %7744, i32 0, i32 0
  %EAX.i317 = bitcast %union.anon* %7745 to i32*
  %7746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7747 = getelementptr inbounds %struct.GPR, %struct.GPR* %7746, i32 0, i32 15
  %7748 = getelementptr inbounds %struct.Reg, %struct.Reg* %7747, i32 0, i32 0
  %RBP.i318 = bitcast %union.anon* %7748 to i64*
  %7749 = load i32, i32* %EAX.i317
  %7750 = zext i32 %7749 to i64
  %7751 = load i64, i64* %RBP.i318
  %7752 = sub i64 %7751, 180
  %7753 = load i64, i64* %PC.i316
  %7754 = add i64 %7753, 6
  store i64 %7754, i64* %PC.i316
  %7755 = inttoptr i64 %7752 to i32*
  %7756 = load i32, i32* %7755
  %7757 = sub i32 %7749, %7756
  %7758 = icmp ult i32 %7749, %7756
  %7759 = zext i1 %7758 to i8
  %7760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7759, i8* %7760, align 1
  %7761 = and i32 %7757, 255
  %7762 = call i32 @llvm.ctpop.i32(i32 %7761)
  %7763 = trunc i32 %7762 to i8
  %7764 = and i8 %7763, 1
  %7765 = xor i8 %7764, 1
  %7766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7765, i8* %7766, align 1
  %7767 = xor i32 %7756, %7749
  %7768 = xor i32 %7767, %7757
  %7769 = lshr i32 %7768, 4
  %7770 = trunc i32 %7769 to i8
  %7771 = and i8 %7770, 1
  %7772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7771, i8* %7772, align 1
  %7773 = icmp eq i32 %7757, 0
  %7774 = zext i1 %7773 to i8
  %7775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7774, i8* %7775, align 1
  %7776 = lshr i32 %7757, 31
  %7777 = trunc i32 %7776 to i8
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7777, i8* %7778, align 1
  %7779 = lshr i32 %7749, 31
  %7780 = lshr i32 %7756, 31
  %7781 = xor i32 %7780, %7779
  %7782 = xor i32 %7776, %7779
  %7783 = add i32 %7782, %7781
  %7784 = icmp eq i32 %7783, 2
  %7785 = zext i1 %7784 to i8
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7785, i8* %7786, align 1
  store %struct.Memory* %loadMem_42426d, %struct.Memory** %MEMORY
  %loadMem_424273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7788 = getelementptr inbounds %struct.GPR, %struct.GPR* %7787, i32 0, i32 33
  %7789 = getelementptr inbounds %struct.Reg, %struct.Reg* %7788, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %7789 to i64*
  %7790 = load i64, i64* %PC.i315
  %7791 = add i64 %7790, 398
  %7792 = load i64, i64* %PC.i315
  %7793 = add i64 %7792, 6
  %7794 = load i64, i64* %PC.i315
  %7795 = add i64 %7794, 6
  store i64 %7795, i64* %PC.i315
  %7796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7797 = load i8, i8* %7796, align 1
  %7798 = icmp eq i8 %7797, 0
  %7799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7800 = load i8, i8* %7799, align 1
  %7801 = icmp ne i8 %7800, 0
  %7802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7803 = load i8, i8* %7802, align 1
  %7804 = icmp ne i8 %7803, 0
  %7805 = xor i1 %7801, %7804
  %7806 = xor i1 %7805, true
  %7807 = and i1 %7798, %7806
  %7808 = zext i1 %7807 to i8
  store i8 %7808, i8* %BRANCH_TAKEN, align 1
  %7809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7810 = select i1 %7807, i64 %7791, i64 %7793
  store i64 %7810, i64* %7809, align 8
  store %struct.Memory* %loadMem_424273, %struct.Memory** %MEMORY
  %loadBr_424273 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_424273 = icmp eq i8 %loadBr_424273, 1
  br i1 %cmpBr_424273, label %block_.L_424401, label %block_424279

block_424279:                                     ; preds = %block_42422c
  %loadMem_424279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7812 = getelementptr inbounds %struct.GPR, %struct.GPR* %7811, i32 0, i32 33
  %7813 = getelementptr inbounds %struct.Reg, %struct.Reg* %7812, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %7813 to i64*
  %7814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7815 = getelementptr inbounds %struct.GPR, %struct.GPR* %7814, i32 0, i32 1
  %7816 = getelementptr inbounds %struct.Reg, %struct.Reg* %7815, i32 0, i32 0
  %RAX.i313 = bitcast %union.anon* %7816 to i64*
  %7817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7818 = getelementptr inbounds %struct.GPR, %struct.GPR* %7817, i32 0, i32 15
  %7819 = getelementptr inbounds %struct.Reg, %struct.Reg* %7818, i32 0, i32 0
  %RBP.i314 = bitcast %union.anon* %7819 to i64*
  %7820 = load i64, i64* %RBP.i314
  %7821 = sub i64 %7820, 128
  %7822 = load i64, i64* %PC.i312
  %7823 = add i64 %7822, 3
  store i64 %7823, i64* %PC.i312
  %7824 = inttoptr i64 %7821 to i32*
  %7825 = load i32, i32* %7824
  %7826 = zext i32 %7825 to i64
  store i64 %7826, i64* %RAX.i313, align 8
  store %struct.Memory* %loadMem_424279, %struct.Memory** %MEMORY
  %loadMem_42427c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7828 = getelementptr inbounds %struct.GPR, %struct.GPR* %7827, i32 0, i32 33
  %7829 = getelementptr inbounds %struct.Reg, %struct.Reg* %7828, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %7829 to i64*
  %7830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7831 = getelementptr inbounds %struct.GPR, %struct.GPR* %7830, i32 0, i32 5
  %7832 = getelementptr inbounds %struct.Reg, %struct.Reg* %7831, i32 0, i32 0
  %RCX.i310 = bitcast %union.anon* %7832 to i64*
  %7833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7834 = getelementptr inbounds %struct.GPR, %struct.GPR* %7833, i32 0, i32 15
  %7835 = getelementptr inbounds %struct.Reg, %struct.Reg* %7834, i32 0, i32 0
  %RBP.i311 = bitcast %union.anon* %7835 to i64*
  %7836 = load i64, i64* %RBP.i311
  %7837 = sub i64 %7836, 88
  %7838 = load i64, i64* %PC.i309
  %7839 = add i64 %7838, 4
  store i64 %7839, i64* %PC.i309
  %7840 = inttoptr i64 %7837 to i64*
  %7841 = load i64, i64* %7840
  store i64 %7841, i64* %RCX.i310, align 8
  store %struct.Memory* %loadMem_42427c, %struct.Memory** %MEMORY
  %loadMem_424280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7843 = getelementptr inbounds %struct.GPR, %struct.GPR* %7842, i32 0, i32 33
  %7844 = getelementptr inbounds %struct.Reg, %struct.Reg* %7843, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %7844 to i64*
  %7845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7846 = getelementptr inbounds %struct.GPR, %struct.GPR* %7845, i32 0, i32 5
  %7847 = getelementptr inbounds %struct.Reg, %struct.Reg* %7846, i32 0, i32 0
  %RCX.i307 = bitcast %union.anon* %7847 to i64*
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7849 = getelementptr inbounds %struct.GPR, %struct.GPR* %7848, i32 0, i32 7
  %7850 = getelementptr inbounds %struct.Reg, %struct.Reg* %7849, i32 0, i32 0
  %RDX.i308 = bitcast %union.anon* %7850 to i64*
  %7851 = load i64, i64* %RCX.i307
  %7852 = load i64, i64* %PC.i306
  %7853 = add i64 %7852, 3
  store i64 %7853, i64* %PC.i306
  %7854 = inttoptr i64 %7851 to i16*
  %7855 = load i16, i16* %7854
  %7856 = sext i16 %7855 to i64
  %7857 = and i64 %7856, 4294967295
  store i64 %7857, i64* %RDX.i308, align 8
  store %struct.Memory* %loadMem_424280, %struct.Memory** %MEMORY
  %loadMem_424283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7859 = getelementptr inbounds %struct.GPR, %struct.GPR* %7858, i32 0, i32 33
  %7860 = getelementptr inbounds %struct.Reg, %struct.Reg* %7859, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %7860 to i64*
  %7861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7862 = getelementptr inbounds %struct.GPR, %struct.GPR* %7861, i32 0, i32 7
  %7863 = getelementptr inbounds %struct.Reg, %struct.Reg* %7862, i32 0, i32 0
  %EDX.i304 = bitcast %union.anon* %7863 to i32*
  %7864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7865 = getelementptr inbounds %struct.GPR, %struct.GPR* %7864, i32 0, i32 1
  %7866 = getelementptr inbounds %struct.Reg, %struct.Reg* %7865, i32 0, i32 0
  %RAX.i305 = bitcast %union.anon* %7866 to i64*
  %7867 = load i64, i64* %RAX.i305
  %7868 = load i32, i32* %EDX.i304
  %7869 = zext i32 %7868 to i64
  %7870 = load i64, i64* %PC.i303
  %7871 = add i64 %7870, 2
  store i64 %7871, i64* %PC.i303
  %7872 = trunc i64 %7867 to i32
  %7873 = sub i32 %7872, %7868
  %7874 = zext i32 %7873 to i64
  store i64 %7874, i64* %RAX.i305, align 8
  %7875 = icmp ult i32 %7872, %7868
  %7876 = zext i1 %7875 to i8
  %7877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7876, i8* %7877, align 1
  %7878 = and i32 %7873, 255
  %7879 = call i32 @llvm.ctpop.i32(i32 %7878)
  %7880 = trunc i32 %7879 to i8
  %7881 = and i8 %7880, 1
  %7882 = xor i8 %7881, 1
  %7883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7882, i8* %7883, align 1
  %7884 = xor i64 %7869, %7867
  %7885 = trunc i64 %7884 to i32
  %7886 = xor i32 %7885, %7873
  %7887 = lshr i32 %7886, 4
  %7888 = trunc i32 %7887 to i8
  %7889 = and i8 %7888, 1
  %7890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7889, i8* %7890, align 1
  %7891 = icmp eq i32 %7873, 0
  %7892 = zext i1 %7891 to i8
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7892, i8* %7893, align 1
  %7894 = lshr i32 %7873, 31
  %7895 = trunc i32 %7894 to i8
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7895, i8* %7896, align 1
  %7897 = lshr i32 %7872, 31
  %7898 = lshr i32 %7868, 31
  %7899 = xor i32 %7898, %7897
  %7900 = xor i32 %7894, %7897
  %7901 = add i32 %7900, %7899
  %7902 = icmp eq i32 %7901, 2
  %7903 = zext i1 %7902 to i8
  %7904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7903, i8* %7904, align 1
  store %struct.Memory* %loadMem_424283, %struct.Memory** %MEMORY
  %loadMem_424285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7906 = getelementptr inbounds %struct.GPR, %struct.GPR* %7905, i32 0, i32 33
  %7907 = getelementptr inbounds %struct.Reg, %struct.Reg* %7906, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %7907 to i64*
  %7908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7909 = getelementptr inbounds %struct.GPR, %struct.GPR* %7908, i32 0, i32 1
  %7910 = getelementptr inbounds %struct.Reg, %struct.Reg* %7909, i32 0, i32 0
  %EAX.i301 = bitcast %union.anon* %7910 to i32*
  %7911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7912 = getelementptr inbounds %struct.GPR, %struct.GPR* %7911, i32 0, i32 11
  %7913 = getelementptr inbounds %struct.Reg, %struct.Reg* %7912, i32 0, i32 0
  %RDI.i302 = bitcast %union.anon* %7913 to i64*
  %7914 = load i32, i32* %EAX.i301
  %7915 = zext i32 %7914 to i64
  %7916 = load i64, i64* %PC.i300
  %7917 = add i64 %7916, 2
  store i64 %7917, i64* %PC.i300
  %7918 = and i64 %7915, 4294967295
  store i64 %7918, i64* %RDI.i302, align 8
  store %struct.Memory* %loadMem_424285, %struct.Memory** %MEMORY
  %loadMem1_424287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7920 = getelementptr inbounds %struct.GPR, %struct.GPR* %7919, i32 0, i32 33
  %7921 = getelementptr inbounds %struct.Reg, %struct.Reg* %7920, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %7921 to i64*
  %7922 = load i64, i64* %PC.i299
  %7923 = add i64 %7922, -144007
  %7924 = load i64, i64* %PC.i299
  %7925 = add i64 %7924, 5
  %7926 = load i64, i64* %PC.i299
  %7927 = add i64 %7926, 5
  store i64 %7927, i64* %PC.i299
  %7928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7929 = load i64, i64* %7928, align 8
  %7930 = add i64 %7929, -8
  %7931 = inttoptr i64 %7930 to i64*
  store i64 %7925, i64* %7931
  store i64 %7930, i64* %7928, align 8
  %7932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7923, i64* %7932, align 8
  store %struct.Memory* %loadMem1_424287, %struct.Memory** %MEMORY
  %loadMem2_424287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_424287 = load i64, i64* %3
  %7933 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_424287)
  store %struct.Memory* %7933, %struct.Memory** %MEMORY
  %loadMem_42428c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7935 = getelementptr inbounds %struct.GPR, %struct.GPR* %7934, i32 0, i32 33
  %7936 = getelementptr inbounds %struct.Reg, %struct.Reg* %7935, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %7936 to i64*
  %7937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7938 = getelementptr inbounds %struct.GPR, %struct.GPR* %7937, i32 0, i32 1
  %7939 = getelementptr inbounds %struct.Reg, %struct.Reg* %7938, i32 0, i32 0
  %EAX.i294 = bitcast %union.anon* %7939 to i32*
  %7940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7941 = getelementptr inbounds %struct.GPR, %struct.GPR* %7940, i32 0, i32 15
  %7942 = getelementptr inbounds %struct.Reg, %struct.Reg* %7941, i32 0, i32 0
  %RBP.i295 = bitcast %union.anon* %7942 to i64*
  %7943 = load i32, i32* %EAX.i294
  %7944 = zext i32 %7943 to i64
  %7945 = load i64, i64* %RBP.i295
  %7946 = sub i64 %7945, 180
  %7947 = load i64, i64* %PC.i293
  %7948 = add i64 %7947, 6
  store i64 %7948, i64* %PC.i293
  %7949 = inttoptr i64 %7946 to i32*
  %7950 = load i32, i32* %7949
  %7951 = sub i32 %7943, %7950
  %7952 = icmp ult i32 %7943, %7950
  %7953 = zext i1 %7952 to i8
  %7954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7953, i8* %7954, align 1
  %7955 = and i32 %7951, 255
  %7956 = call i32 @llvm.ctpop.i32(i32 %7955)
  %7957 = trunc i32 %7956 to i8
  %7958 = and i8 %7957, 1
  %7959 = xor i8 %7958, 1
  %7960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7959, i8* %7960, align 1
  %7961 = xor i32 %7950, %7943
  %7962 = xor i32 %7961, %7951
  %7963 = lshr i32 %7962, 4
  %7964 = trunc i32 %7963 to i8
  %7965 = and i8 %7964, 1
  %7966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7965, i8* %7966, align 1
  %7967 = icmp eq i32 %7951, 0
  %7968 = zext i1 %7967 to i8
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7968, i8* %7969, align 1
  %7970 = lshr i32 %7951, 31
  %7971 = trunc i32 %7970 to i8
  %7972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7971, i8* %7972, align 1
  %7973 = lshr i32 %7943, 31
  %7974 = lshr i32 %7950, 31
  %7975 = xor i32 %7974, %7973
  %7976 = xor i32 %7970, %7973
  %7977 = add i32 %7976, %7975
  %7978 = icmp eq i32 %7977, 2
  %7979 = zext i1 %7978 to i8
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7979, i8* %7980, align 1
  store %struct.Memory* %loadMem_42428c, %struct.Memory** %MEMORY
  %loadMem_424292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7982 = getelementptr inbounds %struct.GPR, %struct.GPR* %7981, i32 0, i32 33
  %7983 = getelementptr inbounds %struct.Reg, %struct.Reg* %7982, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %7983 to i64*
  %7984 = load i64, i64* %PC.i292
  %7985 = add i64 %7984, 367
  %7986 = load i64, i64* %PC.i292
  %7987 = add i64 %7986, 6
  %7988 = load i64, i64* %PC.i292
  %7989 = add i64 %7988, 6
  store i64 %7989, i64* %PC.i292
  %7990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7991 = load i8, i8* %7990, align 1
  %7992 = icmp eq i8 %7991, 0
  %7993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7994 = load i8, i8* %7993, align 1
  %7995 = icmp ne i8 %7994, 0
  %7996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7997 = load i8, i8* %7996, align 1
  %7998 = icmp ne i8 %7997, 0
  %7999 = xor i1 %7995, %7998
  %8000 = xor i1 %7999, true
  %8001 = and i1 %7992, %8000
  %8002 = zext i1 %8001 to i8
  store i8 %8002, i8* %BRANCH_TAKEN, align 1
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8004 = select i1 %8001, i64 %7985, i64 %7987
  store i64 %8004, i64* %8003, align 8
  store %struct.Memory* %loadMem_424292, %struct.Memory** %MEMORY
  %loadBr_424292 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_424292 = icmp eq i8 %loadBr_424292, 1
  br i1 %cmpBr_424292, label %block_.L_424401, label %block_424298

block_424298:                                     ; preds = %block_424279
  %loadMem_424298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8006 = getelementptr inbounds %struct.GPR, %struct.GPR* %8005, i32 0, i32 33
  %8007 = getelementptr inbounds %struct.Reg, %struct.Reg* %8006, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %8007 to i64*
  %8008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8009 = getelementptr inbounds %struct.GPR, %struct.GPR* %8008, i32 0, i32 1
  %8010 = getelementptr inbounds %struct.Reg, %struct.Reg* %8009, i32 0, i32 0
  %RAX.i291 = bitcast %union.anon* %8010 to i64*
  %8011 = load i64, i64* %PC.i290
  %8012 = add i64 %8011, 8
  store i64 %8012, i64* %PC.i290
  %8013 = load i64, i64* bitcast (%G_0x710770_type* @G_0x710770 to i64*)
  store i64 %8013, i64* %RAX.i291, align 8
  store %struct.Memory* %loadMem_424298, %struct.Memory** %MEMORY
  %loadMem_4242a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8015 = getelementptr inbounds %struct.GPR, %struct.GPR* %8014, i32 0, i32 33
  %8016 = getelementptr inbounds %struct.Reg, %struct.Reg* %8015, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %8016 to i64*
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8018 = getelementptr inbounds %struct.GPR, %struct.GPR* %8017, i32 0, i32 5
  %8019 = getelementptr inbounds %struct.Reg, %struct.Reg* %8018, i32 0, i32 0
  %RCX.i288 = bitcast %union.anon* %8019 to i64*
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8021 = getelementptr inbounds %struct.GPR, %struct.GPR* %8020, i32 0, i32 15
  %8022 = getelementptr inbounds %struct.Reg, %struct.Reg* %8021, i32 0, i32 0
  %RBP.i289 = bitcast %union.anon* %8022 to i64*
  %8023 = load i64, i64* %RBP.i289
  %8024 = sub i64 %8023, 128
  %8025 = load i64, i64* %PC.i287
  %8026 = add i64 %8025, 3
  store i64 %8026, i64* %PC.i287
  %8027 = inttoptr i64 %8024 to i32*
  %8028 = load i32, i32* %8027
  %8029 = zext i32 %8028 to i64
  store i64 %8029, i64* %RCX.i288, align 8
  store %struct.Memory* %loadMem_4242a0, %struct.Memory** %MEMORY
  %loadMem_4242a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8031 = getelementptr inbounds %struct.GPR, %struct.GPR* %8030, i32 0, i32 33
  %8032 = getelementptr inbounds %struct.Reg, %struct.Reg* %8031, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %8032 to i64*
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8034 = getelementptr inbounds %struct.GPR, %struct.GPR* %8033, i32 0, i32 7
  %8035 = getelementptr inbounds %struct.Reg, %struct.Reg* %8034, i32 0, i32 0
  %RDX.i285 = bitcast %union.anon* %8035 to i64*
  %8036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8037 = getelementptr inbounds %struct.GPR, %struct.GPR* %8036, i32 0, i32 15
  %8038 = getelementptr inbounds %struct.Reg, %struct.Reg* %8037, i32 0, i32 0
  %RBP.i286 = bitcast %union.anon* %8038 to i64*
  %8039 = load i64, i64* %RBP.i286
  %8040 = sub i64 %8039, 88
  %8041 = load i64, i64* %PC.i284
  %8042 = add i64 %8041, 4
  store i64 %8042, i64* %PC.i284
  %8043 = inttoptr i64 %8040 to i64*
  %8044 = load i64, i64* %8043
  store i64 %8044, i64* %RDX.i285, align 8
  store %struct.Memory* %loadMem_4242a3, %struct.Memory** %MEMORY
  %loadMem_4242a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8046 = getelementptr inbounds %struct.GPR, %struct.GPR* %8045, i32 0, i32 33
  %8047 = getelementptr inbounds %struct.Reg, %struct.Reg* %8046, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %8047 to i64*
  %8048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8049 = getelementptr inbounds %struct.GPR, %struct.GPR* %8048, i32 0, i32 7
  %8050 = getelementptr inbounds %struct.Reg, %struct.Reg* %8049, i32 0, i32 0
  %RDX.i282 = bitcast %union.anon* %8050 to i64*
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8052 = getelementptr inbounds %struct.GPR, %struct.GPR* %8051, i32 0, i32 9
  %8053 = getelementptr inbounds %struct.Reg, %struct.Reg* %8052, i32 0, i32 0
  %RSI.i283 = bitcast %union.anon* %8053 to i64*
  %8054 = load i64, i64* %RDX.i282
  %8055 = load i64, i64* %PC.i281
  %8056 = add i64 %8055, 3
  store i64 %8056, i64* %PC.i281
  %8057 = inttoptr i64 %8054 to i16*
  %8058 = load i16, i16* %8057
  %8059 = sext i16 %8058 to i64
  %8060 = and i64 %8059, 4294967295
  store i64 %8060, i64* %RSI.i283, align 8
  store %struct.Memory* %loadMem_4242a7, %struct.Memory** %MEMORY
  %loadMem_4242aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8062 = getelementptr inbounds %struct.GPR, %struct.GPR* %8061, i32 0, i32 33
  %8063 = getelementptr inbounds %struct.Reg, %struct.Reg* %8062, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %8063 to i64*
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8065 = getelementptr inbounds %struct.GPR, %struct.GPR* %8064, i32 0, i32 9
  %8066 = getelementptr inbounds %struct.Reg, %struct.Reg* %8065, i32 0, i32 0
  %ESI.i279 = bitcast %union.anon* %8066 to i32*
  %8067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8068 = getelementptr inbounds %struct.GPR, %struct.GPR* %8067, i32 0, i32 5
  %8069 = getelementptr inbounds %struct.Reg, %struct.Reg* %8068, i32 0, i32 0
  %RCX.i280 = bitcast %union.anon* %8069 to i64*
  %8070 = load i64, i64* %RCX.i280
  %8071 = load i32, i32* %ESI.i279
  %8072 = zext i32 %8071 to i64
  %8073 = load i64, i64* %PC.i278
  %8074 = add i64 %8073, 2
  store i64 %8074, i64* %PC.i278
  %8075 = trunc i64 %8070 to i32
  %8076 = sub i32 %8075, %8071
  %8077 = zext i32 %8076 to i64
  store i64 %8077, i64* %RCX.i280, align 8
  %8078 = icmp ult i32 %8075, %8071
  %8079 = zext i1 %8078 to i8
  %8080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8079, i8* %8080, align 1
  %8081 = and i32 %8076, 255
  %8082 = call i32 @llvm.ctpop.i32(i32 %8081)
  %8083 = trunc i32 %8082 to i8
  %8084 = and i8 %8083, 1
  %8085 = xor i8 %8084, 1
  %8086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8085, i8* %8086, align 1
  %8087 = xor i64 %8072, %8070
  %8088 = trunc i64 %8087 to i32
  %8089 = xor i32 %8088, %8076
  %8090 = lshr i32 %8089, 4
  %8091 = trunc i32 %8090 to i8
  %8092 = and i8 %8091, 1
  %8093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8092, i8* %8093, align 1
  %8094 = icmp eq i32 %8076, 0
  %8095 = zext i1 %8094 to i8
  %8096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8095, i8* %8096, align 1
  %8097 = lshr i32 %8076, 31
  %8098 = trunc i32 %8097 to i8
  %8099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8098, i8* %8099, align 1
  %8100 = lshr i32 %8075, 31
  %8101 = lshr i32 %8071, 31
  %8102 = xor i32 %8101, %8100
  %8103 = xor i32 %8097, %8100
  %8104 = add i32 %8103, %8102
  %8105 = icmp eq i32 %8104, 2
  %8106 = zext i1 %8105 to i8
  %8107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8106, i8* %8107, align 1
  store %struct.Memory* %loadMem_4242aa, %struct.Memory** %MEMORY
  %loadMem_4242ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8109 = getelementptr inbounds %struct.GPR, %struct.GPR* %8108, i32 0, i32 33
  %8110 = getelementptr inbounds %struct.Reg, %struct.Reg* %8109, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %8110 to i64*
  %8111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8112 = getelementptr inbounds %struct.GPR, %struct.GPR* %8111, i32 0, i32 5
  %8113 = getelementptr inbounds %struct.Reg, %struct.Reg* %8112, i32 0, i32 0
  %RCX.i276 = bitcast %union.anon* %8113 to i64*
  %8114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8115 = getelementptr inbounds %struct.GPR, %struct.GPR* %8114, i32 0, i32 15
  %8116 = getelementptr inbounds %struct.Reg, %struct.Reg* %8115, i32 0, i32 0
  %RBP.i277 = bitcast %union.anon* %8116 to i64*
  %8117 = load i64, i64* %RCX.i276
  %8118 = load i64, i64* %RBP.i277
  %8119 = sub i64 %8118, 180
  %8120 = load i64, i64* %PC.i275
  %8121 = add i64 %8120, 6
  store i64 %8121, i64* %PC.i275
  %8122 = trunc i64 %8117 to i32
  %8123 = inttoptr i64 %8119 to i32*
  %8124 = load i32, i32* %8123
  %8125 = add i32 %8124, %8122
  %8126 = zext i32 %8125 to i64
  store i64 %8126, i64* %RCX.i276, align 8
  %8127 = icmp ult i32 %8125, %8122
  %8128 = icmp ult i32 %8125, %8124
  %8129 = or i1 %8127, %8128
  %8130 = zext i1 %8129 to i8
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8130, i8* %8131, align 1
  %8132 = and i32 %8125, 255
  %8133 = call i32 @llvm.ctpop.i32(i32 %8132)
  %8134 = trunc i32 %8133 to i8
  %8135 = and i8 %8134, 1
  %8136 = xor i8 %8135, 1
  %8137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8136, i8* %8137, align 1
  %8138 = xor i32 %8124, %8122
  %8139 = xor i32 %8138, %8125
  %8140 = lshr i32 %8139, 4
  %8141 = trunc i32 %8140 to i8
  %8142 = and i8 %8141, 1
  %8143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8142, i8* %8143, align 1
  %8144 = icmp eq i32 %8125, 0
  %8145 = zext i1 %8144 to i8
  %8146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8145, i8* %8146, align 1
  %8147 = lshr i32 %8125, 31
  %8148 = trunc i32 %8147 to i8
  %8149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8148, i8* %8149, align 1
  %8150 = lshr i32 %8122, 31
  %8151 = lshr i32 %8124, 31
  %8152 = xor i32 %8147, %8150
  %8153 = xor i32 %8147, %8151
  %8154 = add i32 %8152, %8153
  %8155 = icmp eq i32 %8154, 2
  %8156 = zext i1 %8155 to i8
  %8157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8156, i8* %8157, align 1
  store %struct.Memory* %loadMem_4242ac, %struct.Memory** %MEMORY
  %loadMem_4242b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8159 = getelementptr inbounds %struct.GPR, %struct.GPR* %8158, i32 0, i32 33
  %8160 = getelementptr inbounds %struct.Reg, %struct.Reg* %8159, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %8160 to i64*
  %8161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8162 = getelementptr inbounds %struct.GPR, %struct.GPR* %8161, i32 0, i32 5
  %8163 = getelementptr inbounds %struct.Reg, %struct.Reg* %8162, i32 0, i32 0
  %ECX.i273 = bitcast %union.anon* %8163 to i32*
  %8164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8165 = getelementptr inbounds %struct.GPR, %struct.GPR* %8164, i32 0, i32 7
  %8166 = getelementptr inbounds %struct.Reg, %struct.Reg* %8165, i32 0, i32 0
  %RDX.i274 = bitcast %union.anon* %8166 to i64*
  %8167 = load i32, i32* %ECX.i273
  %8168 = zext i32 %8167 to i64
  %8169 = load i64, i64* %PC.i272
  %8170 = add i64 %8169, 3
  store i64 %8170, i64* %PC.i272
  %8171 = shl i64 %8168, 32
  %8172 = ashr exact i64 %8171, 32
  store i64 %8172, i64* %RDX.i274, align 8
  store %struct.Memory* %loadMem_4242b2, %struct.Memory** %MEMORY
  %loadMem_4242b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8174 = getelementptr inbounds %struct.GPR, %struct.GPR* %8173, i32 0, i32 33
  %8175 = getelementptr inbounds %struct.Reg, %struct.Reg* %8174, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %8175 to i64*
  %8176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8177 = getelementptr inbounds %struct.GPR, %struct.GPR* %8176, i32 0, i32 1
  %8178 = getelementptr inbounds %struct.Reg, %struct.Reg* %8177, i32 0, i32 0
  %RAX.i270 = bitcast %union.anon* %8178 to i64*
  %8179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8180 = getelementptr inbounds %struct.GPR, %struct.GPR* %8179, i32 0, i32 7
  %8181 = getelementptr inbounds %struct.Reg, %struct.Reg* %8180, i32 0, i32 0
  %RDX.i271 = bitcast %union.anon* %8181 to i64*
  %8182 = load i64, i64* %RAX.i270
  %8183 = load i64, i64* %RDX.i271
  %8184 = mul i64 %8183, 8
  %8185 = add i64 %8184, %8182
  %8186 = load i64, i64* %PC.i269
  %8187 = add i64 %8186, 4
  store i64 %8187, i64* %PC.i269
  %8188 = inttoptr i64 %8185 to i64*
  %8189 = load i64, i64* %8188
  store i64 %8189, i64* %RAX.i270, align 8
  store %struct.Memory* %loadMem_4242b5, %struct.Memory** %MEMORY
  %loadMem_4242b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8191 = getelementptr inbounds %struct.GPR, %struct.GPR* %8190, i32 0, i32 33
  %8192 = getelementptr inbounds %struct.Reg, %struct.Reg* %8191, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %8192 to i64*
  %8193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8194 = getelementptr inbounds %struct.GPR, %struct.GPR* %8193, i32 0, i32 5
  %8195 = getelementptr inbounds %struct.Reg, %struct.Reg* %8194, i32 0, i32 0
  %RCX.i267 = bitcast %union.anon* %8195 to i64*
  %8196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8197 = getelementptr inbounds %struct.GPR, %struct.GPR* %8196, i32 0, i32 15
  %8198 = getelementptr inbounds %struct.Reg, %struct.Reg* %8197, i32 0, i32 0
  %RBP.i268 = bitcast %union.anon* %8198 to i64*
  %8199 = load i64, i64* %RBP.i268
  %8200 = sub i64 %8199, 124
  %8201 = load i64, i64* %PC.i266
  %8202 = add i64 %8201, 3
  store i64 %8202, i64* %PC.i266
  %8203 = inttoptr i64 %8200 to i32*
  %8204 = load i32, i32* %8203
  %8205 = zext i32 %8204 to i64
  store i64 %8205, i64* %RCX.i267, align 8
  store %struct.Memory* %loadMem_4242b9, %struct.Memory** %MEMORY
  %loadMem_4242bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8207 = getelementptr inbounds %struct.GPR, %struct.GPR* %8206, i32 0, i32 33
  %8208 = getelementptr inbounds %struct.Reg, %struct.Reg* %8207, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %8208 to i64*
  %8209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8210 = getelementptr inbounds %struct.GPR, %struct.GPR* %8209, i32 0, i32 7
  %8211 = getelementptr inbounds %struct.Reg, %struct.Reg* %8210, i32 0, i32 0
  %RDX.i264 = bitcast %union.anon* %8211 to i64*
  %8212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8213 = getelementptr inbounds %struct.GPR, %struct.GPR* %8212, i32 0, i32 15
  %8214 = getelementptr inbounds %struct.Reg, %struct.Reg* %8213, i32 0, i32 0
  %RBP.i265 = bitcast %union.anon* %8214 to i64*
  %8215 = load i64, i64* %RBP.i265
  %8216 = sub i64 %8215, 80
  %8217 = load i64, i64* %PC.i263
  %8218 = add i64 %8217, 4
  store i64 %8218, i64* %PC.i263
  %8219 = inttoptr i64 %8216 to i64*
  %8220 = load i64, i64* %8219
  store i64 %8220, i64* %RDX.i264, align 8
  store %struct.Memory* %loadMem_4242bc, %struct.Memory** %MEMORY
  %loadMem_4242c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8222 = getelementptr inbounds %struct.GPR, %struct.GPR* %8221, i32 0, i32 33
  %8223 = getelementptr inbounds %struct.Reg, %struct.Reg* %8222, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %8223 to i64*
  %8224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8225 = getelementptr inbounds %struct.GPR, %struct.GPR* %8224, i32 0, i32 7
  %8226 = getelementptr inbounds %struct.Reg, %struct.Reg* %8225, i32 0, i32 0
  %RDX.i261 = bitcast %union.anon* %8226 to i64*
  %8227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8228 = getelementptr inbounds %struct.GPR, %struct.GPR* %8227, i32 0, i32 9
  %8229 = getelementptr inbounds %struct.Reg, %struct.Reg* %8228, i32 0, i32 0
  %RSI.i262 = bitcast %union.anon* %8229 to i64*
  %8230 = load i64, i64* %RDX.i261
  %8231 = load i64, i64* %PC.i260
  %8232 = add i64 %8231, 3
  store i64 %8232, i64* %PC.i260
  %8233 = inttoptr i64 %8230 to i16*
  %8234 = load i16, i16* %8233
  %8235 = sext i16 %8234 to i64
  %8236 = and i64 %8235, 4294967295
  store i64 %8236, i64* %RSI.i262, align 8
  store %struct.Memory* %loadMem_4242c0, %struct.Memory** %MEMORY
  %loadMem_4242c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8238 = getelementptr inbounds %struct.GPR, %struct.GPR* %8237, i32 0, i32 33
  %8239 = getelementptr inbounds %struct.Reg, %struct.Reg* %8238, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %8239 to i64*
  %8240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8241 = getelementptr inbounds %struct.GPR, %struct.GPR* %8240, i32 0, i32 9
  %8242 = getelementptr inbounds %struct.Reg, %struct.Reg* %8241, i32 0, i32 0
  %ESI.i258 = bitcast %union.anon* %8242 to i32*
  %8243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8244 = getelementptr inbounds %struct.GPR, %struct.GPR* %8243, i32 0, i32 5
  %8245 = getelementptr inbounds %struct.Reg, %struct.Reg* %8244, i32 0, i32 0
  %RCX.i259 = bitcast %union.anon* %8245 to i64*
  %8246 = load i64, i64* %RCX.i259
  %8247 = load i32, i32* %ESI.i258
  %8248 = zext i32 %8247 to i64
  %8249 = load i64, i64* %PC.i257
  %8250 = add i64 %8249, 2
  store i64 %8250, i64* %PC.i257
  %8251 = trunc i64 %8246 to i32
  %8252 = sub i32 %8251, %8247
  %8253 = zext i32 %8252 to i64
  store i64 %8253, i64* %RCX.i259, align 8
  %8254 = icmp ult i32 %8251, %8247
  %8255 = zext i1 %8254 to i8
  %8256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8255, i8* %8256, align 1
  %8257 = and i32 %8252, 255
  %8258 = call i32 @llvm.ctpop.i32(i32 %8257)
  %8259 = trunc i32 %8258 to i8
  %8260 = and i8 %8259, 1
  %8261 = xor i8 %8260, 1
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8261, i8* %8262, align 1
  %8263 = xor i64 %8248, %8246
  %8264 = trunc i64 %8263 to i32
  %8265 = xor i32 %8264, %8252
  %8266 = lshr i32 %8265, 4
  %8267 = trunc i32 %8266 to i8
  %8268 = and i8 %8267, 1
  %8269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8268, i8* %8269, align 1
  %8270 = icmp eq i32 %8252, 0
  %8271 = zext i1 %8270 to i8
  %8272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8271, i8* %8272, align 1
  %8273 = lshr i32 %8252, 31
  %8274 = trunc i32 %8273 to i8
  %8275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8274, i8* %8275, align 1
  %8276 = lshr i32 %8251, 31
  %8277 = lshr i32 %8247, 31
  %8278 = xor i32 %8277, %8276
  %8279 = xor i32 %8273, %8276
  %8280 = add i32 %8279, %8278
  %8281 = icmp eq i32 %8280, 2
  %8282 = zext i1 %8281 to i8
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8282, i8* %8283, align 1
  store %struct.Memory* %loadMem_4242c3, %struct.Memory** %MEMORY
  %loadMem_4242c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8285 = getelementptr inbounds %struct.GPR, %struct.GPR* %8284, i32 0, i32 33
  %8286 = getelementptr inbounds %struct.Reg, %struct.Reg* %8285, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %8286 to i64*
  %8287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8288 = getelementptr inbounds %struct.GPR, %struct.GPR* %8287, i32 0, i32 5
  %8289 = getelementptr inbounds %struct.Reg, %struct.Reg* %8288, i32 0, i32 0
  %RCX.i255 = bitcast %union.anon* %8289 to i64*
  %8290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8291 = getelementptr inbounds %struct.GPR, %struct.GPR* %8290, i32 0, i32 15
  %8292 = getelementptr inbounds %struct.Reg, %struct.Reg* %8291, i32 0, i32 0
  %RBP.i256 = bitcast %union.anon* %8292 to i64*
  %8293 = load i64, i64* %RCX.i255
  %8294 = load i64, i64* %RBP.i256
  %8295 = sub i64 %8294, 180
  %8296 = load i64, i64* %PC.i254
  %8297 = add i64 %8296, 6
  store i64 %8297, i64* %PC.i254
  %8298 = trunc i64 %8293 to i32
  %8299 = inttoptr i64 %8295 to i32*
  %8300 = load i32, i32* %8299
  %8301 = add i32 %8300, %8298
  %8302 = zext i32 %8301 to i64
  store i64 %8302, i64* %RCX.i255, align 8
  %8303 = icmp ult i32 %8301, %8298
  %8304 = icmp ult i32 %8301, %8300
  %8305 = or i1 %8303, %8304
  %8306 = zext i1 %8305 to i8
  %8307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8306, i8* %8307, align 1
  %8308 = and i32 %8301, 255
  %8309 = call i32 @llvm.ctpop.i32(i32 %8308)
  %8310 = trunc i32 %8309 to i8
  %8311 = and i8 %8310, 1
  %8312 = xor i8 %8311, 1
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8312, i8* %8313, align 1
  %8314 = xor i32 %8300, %8298
  %8315 = xor i32 %8314, %8301
  %8316 = lshr i32 %8315, 4
  %8317 = trunc i32 %8316 to i8
  %8318 = and i8 %8317, 1
  %8319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8318, i8* %8319, align 1
  %8320 = icmp eq i32 %8301, 0
  %8321 = zext i1 %8320 to i8
  %8322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8321, i8* %8322, align 1
  %8323 = lshr i32 %8301, 31
  %8324 = trunc i32 %8323 to i8
  %8325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8324, i8* %8325, align 1
  %8326 = lshr i32 %8298, 31
  %8327 = lshr i32 %8300, 31
  %8328 = xor i32 %8323, %8326
  %8329 = xor i32 %8323, %8327
  %8330 = add i32 %8328, %8329
  %8331 = icmp eq i32 %8330, 2
  %8332 = zext i1 %8331 to i8
  %8333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8332, i8* %8333, align 1
  store %struct.Memory* %loadMem_4242c5, %struct.Memory** %MEMORY
  %loadMem_4242cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8335 = getelementptr inbounds %struct.GPR, %struct.GPR* %8334, i32 0, i32 33
  %8336 = getelementptr inbounds %struct.Reg, %struct.Reg* %8335, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %8336 to i64*
  %8337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8338 = getelementptr inbounds %struct.GPR, %struct.GPR* %8337, i32 0, i32 5
  %8339 = getelementptr inbounds %struct.Reg, %struct.Reg* %8338, i32 0, i32 0
  %ECX.i252 = bitcast %union.anon* %8339 to i32*
  %8340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8341 = getelementptr inbounds %struct.GPR, %struct.GPR* %8340, i32 0, i32 7
  %8342 = getelementptr inbounds %struct.Reg, %struct.Reg* %8341, i32 0, i32 0
  %RDX.i253 = bitcast %union.anon* %8342 to i64*
  %8343 = load i32, i32* %ECX.i252
  %8344 = zext i32 %8343 to i64
  %8345 = load i64, i64* %PC.i251
  %8346 = add i64 %8345, 3
  store i64 %8346, i64* %PC.i251
  %8347 = shl i64 %8344, 32
  %8348 = ashr exact i64 %8347, 32
  store i64 %8348, i64* %RDX.i253, align 8
  store %struct.Memory* %loadMem_4242cb, %struct.Memory** %MEMORY
  %loadMem_4242ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %8349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8350 = getelementptr inbounds %struct.GPR, %struct.GPR* %8349, i32 0, i32 33
  %8351 = getelementptr inbounds %struct.Reg, %struct.Reg* %8350, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %8351 to i64*
  %8352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8353 = getelementptr inbounds %struct.GPR, %struct.GPR* %8352, i32 0, i32 1
  %8354 = getelementptr inbounds %struct.Reg, %struct.Reg* %8353, i32 0, i32 0
  %RAX.i249 = bitcast %union.anon* %8354 to i64*
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8356 = getelementptr inbounds %struct.GPR, %struct.GPR* %8355, i32 0, i32 7
  %8357 = getelementptr inbounds %struct.Reg, %struct.Reg* %8356, i32 0, i32 0
  %RDX.i250 = bitcast %union.anon* %8357 to i64*
  %8358 = load i64, i64* %RAX.i249
  %8359 = load i64, i64* %RDX.i250
  %8360 = add i64 %8359, %8358
  %8361 = load i64, i64* %PC.i248
  %8362 = add i64 %8361, 4
  store i64 %8362, i64* %PC.i248
  %8363 = inttoptr i64 %8360 to i8*
  %8364 = load i8, i8* %8363
  %8365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8365, align 1
  %8366 = zext i8 %8364 to i32
  %8367 = call i32 @llvm.ctpop.i32(i32 %8366)
  %8368 = trunc i32 %8367 to i8
  %8369 = and i8 %8368, 1
  %8370 = xor i8 %8369, 1
  %8371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8370, i8* %8371, align 1
  %8372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8372, align 1
  %8373 = icmp eq i8 %8364, 0
  %8374 = zext i1 %8373 to i8
  %8375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8374, i8* %8375, align 1
  %8376 = lshr i8 %8364, 7
  %8377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8376, i8* %8377, align 1
  %8378 = lshr i8 %8364, 7
  %8379 = xor i8 %8376, %8378
  %8380 = add i8 %8379, %8378
  %8381 = icmp eq i8 %8380, 2
  %8382 = zext i1 %8381 to i8
  %8383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8382, i8* %8383, align 1
  store %struct.Memory* %loadMem_4242ce, %struct.Memory** %MEMORY
  %loadMem_4242d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8385 = getelementptr inbounds %struct.GPR, %struct.GPR* %8384, i32 0, i32 33
  %8386 = getelementptr inbounds %struct.Reg, %struct.Reg* %8385, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %8386 to i64*
  %8387 = load i64, i64* %PC.i247
  %8388 = add i64 %8387, 298
  %8389 = load i64, i64* %PC.i247
  %8390 = add i64 %8389, 6
  %8391 = load i64, i64* %PC.i247
  %8392 = add i64 %8391, 6
  store i64 %8392, i64* %PC.i247
  %8393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8394 = load i8, i8* %8393, align 1
  %8395 = icmp eq i8 %8394, 0
  %8396 = zext i1 %8395 to i8
  store i8 %8396, i8* %BRANCH_TAKEN, align 1
  %8397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8398 = select i1 %8395, i64 %8388, i64 %8390
  store i64 %8398, i64* %8397, align 8
  store %struct.Memory* %loadMem_4242d2, %struct.Memory** %MEMORY
  %loadBr_4242d2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4242d2 = icmp eq i8 %loadBr_4242d2, 1
  br i1 %cmpBr_4242d2, label %block_.L_4243fc, label %block_4242d8

block_4242d8:                                     ; preds = %block_424298
  %loadMem_4242d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8400 = getelementptr inbounds %struct.GPR, %struct.GPR* %8399, i32 0, i32 33
  %8401 = getelementptr inbounds %struct.Reg, %struct.Reg* %8400, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %8401 to i64*
  %8402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8403 = getelementptr inbounds %struct.GPR, %struct.GPR* %8402, i32 0, i32 1
  %8404 = getelementptr inbounds %struct.Reg, %struct.Reg* %8403, i32 0, i32 0
  %RAX.i245 = bitcast %union.anon* %8404 to i64*
  %8405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8406 = getelementptr inbounds %struct.GPR, %struct.GPR* %8405, i32 0, i32 15
  %8407 = getelementptr inbounds %struct.Reg, %struct.Reg* %8406, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %8407 to i64*
  %8408 = load i64, i64* %RBP.i246
  %8409 = sub i64 %8408, 148
  %8410 = load i64, i64* %PC.i244
  %8411 = add i64 %8410, 6
  store i64 %8411, i64* %PC.i244
  %8412 = inttoptr i64 %8409 to i32*
  %8413 = load i32, i32* %8412
  %8414 = zext i32 %8413 to i64
  store i64 %8414, i64* %RAX.i245, align 8
  store %struct.Memory* %loadMem_4242d8, %struct.Memory** %MEMORY
  %loadMem_4242de = load %struct.Memory*, %struct.Memory** %MEMORY
  %8415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8416 = getelementptr inbounds %struct.GPR, %struct.GPR* %8415, i32 0, i32 33
  %8417 = getelementptr inbounds %struct.Reg, %struct.Reg* %8416, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %8417 to i64*
  %8418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8419 = getelementptr inbounds %struct.GPR, %struct.GPR* %8418, i32 0, i32 5
  %8420 = getelementptr inbounds %struct.Reg, %struct.Reg* %8419, i32 0, i32 0
  %RCX.i243 = bitcast %union.anon* %8420 to i64*
  %8421 = load i64, i64* %PC.i242
  %8422 = add i64 %8421, 8
  store i64 %8422, i64* %PC.i242
  %8423 = load i64, i64* bitcast (%G_0x6f8f00_type* @G_0x6f8f00 to i64*)
  store i64 %8423, i64* %RCX.i243, align 8
  store %struct.Memory* %loadMem_4242de, %struct.Memory** %MEMORY
  %loadMem_4242e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8425 = getelementptr inbounds %struct.GPR, %struct.GPR* %8424, i32 0, i32 33
  %8426 = getelementptr inbounds %struct.Reg, %struct.Reg* %8425, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %8426 to i64*
  %8427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8428 = getelementptr inbounds %struct.GPR, %struct.GPR* %8427, i32 0, i32 7
  %8429 = getelementptr inbounds %struct.Reg, %struct.Reg* %8428, i32 0, i32 0
  %RDX.i240 = bitcast %union.anon* %8429 to i64*
  %8430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8431 = getelementptr inbounds %struct.GPR, %struct.GPR* %8430, i32 0, i32 15
  %8432 = getelementptr inbounds %struct.Reg, %struct.Reg* %8431, i32 0, i32 0
  %RBP.i241 = bitcast %union.anon* %8432 to i64*
  %8433 = load i64, i64* %RBP.i241
  %8434 = sub i64 %8433, 124
  %8435 = load i64, i64* %PC.i239
  %8436 = add i64 %8435, 3
  store i64 %8436, i64* %PC.i239
  %8437 = inttoptr i64 %8434 to i32*
  %8438 = load i32, i32* %8437
  %8439 = zext i32 %8438 to i64
  store i64 %8439, i64* %RDX.i240, align 8
  store %struct.Memory* %loadMem_4242e6, %struct.Memory** %MEMORY
  %loadMem_4242e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8441 = getelementptr inbounds %struct.GPR, %struct.GPR* %8440, i32 0, i32 33
  %8442 = getelementptr inbounds %struct.Reg, %struct.Reg* %8441, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %8442 to i64*
  %8443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8444 = getelementptr inbounds %struct.GPR, %struct.GPR* %8443, i32 0, i32 9
  %8445 = getelementptr inbounds %struct.Reg, %struct.Reg* %8444, i32 0, i32 0
  %RSI.i237 = bitcast %union.anon* %8445 to i64*
  %8446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8447 = getelementptr inbounds %struct.GPR, %struct.GPR* %8446, i32 0, i32 15
  %8448 = getelementptr inbounds %struct.Reg, %struct.Reg* %8447, i32 0, i32 0
  %RBP.i238 = bitcast %union.anon* %8448 to i64*
  %8449 = load i64, i64* %RBP.i238
  %8450 = sub i64 %8449, 152
  %8451 = load i64, i64* %PC.i236
  %8452 = add i64 %8451, 6
  store i64 %8452, i64* %PC.i236
  %8453 = inttoptr i64 %8450 to i32*
  %8454 = load i32, i32* %8453
  %8455 = zext i32 %8454 to i64
  store i64 %8455, i64* %RSI.i237, align 8
  store %struct.Memory* %loadMem_4242e9, %struct.Memory** %MEMORY
  %loadMem_4242ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %8456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8457 = getelementptr inbounds %struct.GPR, %struct.GPR* %8456, i32 0, i32 33
  %8458 = getelementptr inbounds %struct.Reg, %struct.Reg* %8457, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %8458 to i64*
  %8459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8460 = getelementptr inbounds %struct.GPR, %struct.GPR* %8459, i32 0, i32 5
  %8461 = getelementptr inbounds %struct.Reg, %struct.Reg* %8460, i32 0, i32 0
  %RCX.i234 = bitcast %union.anon* %8461 to i64*
  %8462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8463 = getelementptr inbounds %struct.GPR, %struct.GPR* %8462, i32 0, i32 15
  %8464 = getelementptr inbounds %struct.Reg, %struct.Reg* %8463, i32 0, i32 0
  %RBP.i235 = bitcast %union.anon* %8464 to i64*
  %8465 = load i64, i64* %RBP.i235
  %8466 = sub i64 %8465, 264
  %8467 = load i64, i64* %RCX.i234
  %8468 = load i64, i64* %PC.i233
  %8469 = add i64 %8468, 7
  store i64 %8469, i64* %PC.i233
  %8470 = inttoptr i64 %8466 to i64*
  store i64 %8467, i64* %8470
  store %struct.Memory* %loadMem_4242ef, %struct.Memory** %MEMORY
  %loadMem_4242f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8472 = getelementptr inbounds %struct.GPR, %struct.GPR* %8471, i32 0, i32 33
  %8473 = getelementptr inbounds %struct.Reg, %struct.Reg* %8472, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %8473 to i64*
  %8474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8475 = getelementptr inbounds %struct.GPR, %struct.GPR* %8474, i32 0, i32 9
  %8476 = getelementptr inbounds %struct.Reg, %struct.Reg* %8475, i32 0, i32 0
  %ESI.i231 = bitcast %union.anon* %8476 to i32*
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8478 = getelementptr inbounds %struct.GPR, %struct.GPR* %8477, i32 0, i32 5
  %8479 = getelementptr inbounds %struct.Reg, %struct.Reg* %8478, i32 0, i32 0
  %RCX.i232 = bitcast %union.anon* %8479 to i64*
  %8480 = load i32, i32* %ESI.i231
  %8481 = zext i32 %8480 to i64
  %8482 = load i64, i64* %PC.i230
  %8483 = add i64 %8482, 2
  store i64 %8483, i64* %PC.i230
  %8484 = and i64 %8481, 4294967295
  store i64 %8484, i64* %RCX.i232, align 8
  store %struct.Memory* %loadMem_4242f6, %struct.Memory** %MEMORY
  %loadMem_4242f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8486 = getelementptr inbounds %struct.GPR, %struct.GPR* %8485, i32 0, i32 33
  %8487 = getelementptr inbounds %struct.Reg, %struct.Reg* %8486, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %8487 to i64*
  %8488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8489 = getelementptr inbounds %struct.GPR, %struct.GPR* %8488, i32 0, i32 5
  %8490 = getelementptr inbounds %struct.Reg, %struct.Reg* %8489, i32 0, i32 0
  %8491 = bitcast %union.anon* %8490 to %struct.anon.2*
  %CL.i228 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8491, i32 0, i32 0
  %8492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8493 = getelementptr inbounds %struct.GPR, %struct.GPR* %8492, i32 0, i32 7
  %8494 = getelementptr inbounds %struct.Reg, %struct.Reg* %8493, i32 0, i32 0
  %RDX.i229 = bitcast %union.anon* %8494 to i64*
  %8495 = load i64, i64* %RDX.i229
  %8496 = load i8, i8* %CL.i228
  %8497 = zext i8 %8496 to i64
  %8498 = load i64, i64* %PC.i227
  %8499 = add i64 %8498, 2
  store i64 %8499, i64* %PC.i227
  %8500 = trunc i64 %8497 to i5
  switch i5 %8500, label %8507 [
    i5 0, label %routine_shll__cl___edx.exit
    i5 1, label %8501
  ]

; <label>:8501:                                   ; preds = %block_4242d8
  %8502 = trunc i64 %8495 to i32
  %8503 = shl i32 %8502, 1
  %8504 = icmp slt i32 %8502, 0
  %8505 = icmp slt i32 %8503, 0
  %8506 = xor i1 %8504, %8505
  br label %8516

; <label>:8507:                                   ; preds = %block_4242d8
  %8508 = and i64 %8497, 31
  %8509 = add i64 %8508, 4294967295
  %8510 = and i64 %8495, 4294967295
  %8511 = and i64 %8509, 4294967295
  %8512 = shl i64 %8510, %8511
  %8513 = trunc i64 %8512 to i32
  %8514 = icmp slt i32 %8513, 0
  %8515 = shl i32 %8513, 1
  br label %8516

; <label>:8516:                                   ; preds = %8507, %8501
  %8517 = phi i1 [ %8504, %8501 ], [ %8514, %8507 ]
  %8518 = phi i1 [ %8506, %8501 ], [ false, %8507 ]
  %8519 = phi i32 [ %8503, %8501 ], [ %8515, %8507 ]
  %8520 = zext i32 %8519 to i64
  store i64 %8520, i64* %RDX.i229, align 8
  %8521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8522 = zext i1 %8517 to i8
  store i8 %8522, i8* %8521, align 1
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8524 = and i32 %8519, 254
  %8525 = call i32 @llvm.ctpop.i32(i32 %8524)
  %8526 = trunc i32 %8525 to i8
  %8527 = and i8 %8526, 1
  %8528 = xor i8 %8527, 1
  store i8 %8528, i8* %8523, align 1
  %8529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8529, align 1
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8531 = icmp eq i32 %8519, 0
  %8532 = zext i1 %8531 to i8
  store i8 %8532, i8* %8530, align 1
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8534 = lshr i32 %8519, 31
  %8535 = trunc i32 %8534 to i8
  store i8 %8535, i8* %8533, align 1
  %8536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8537 = zext i1 %8518 to i8
  store i8 %8537, i8* %8536, align 1
  br label %routine_shll__cl___edx.exit

routine_shll__cl___edx.exit:                      ; preds = %block_4242d8, %8516
  store %struct.Memory* %loadMem_4242f8, %struct.Memory** %MEMORY
  %loadMem_4242fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8539 = getelementptr inbounds %struct.GPR, %struct.GPR* %8538, i32 0, i32 33
  %8540 = getelementptr inbounds %struct.Reg, %struct.Reg* %8539, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %8540 to i64*
  %8541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8542 = getelementptr inbounds %struct.GPR, %struct.GPR* %8541, i32 0, i32 9
  %8543 = getelementptr inbounds %struct.Reg, %struct.Reg* %8542, i32 0, i32 0
  %RSI.i225 = bitcast %union.anon* %8543 to i64*
  %8544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8545 = getelementptr inbounds %struct.GPR, %struct.GPR* %8544, i32 0, i32 15
  %8546 = getelementptr inbounds %struct.Reg, %struct.Reg* %8545, i32 0, i32 0
  %RBP.i226 = bitcast %union.anon* %8546 to i64*
  %8547 = load i64, i64* %RBP.i226
  %8548 = sub i64 %8547, 70
  %8549 = load i64, i64* %PC.i224
  %8550 = add i64 %8549, 4
  store i64 %8550, i64* %PC.i224
  %8551 = inttoptr i64 %8548 to i16*
  %8552 = load i16, i16* %8551
  %8553 = sext i16 %8552 to i64
  %8554 = and i64 %8553, 4294967295
  store i64 %8554, i64* %RSI.i225, align 8
  store %struct.Memory* %loadMem_4242fa, %struct.Memory** %MEMORY
  %loadMem_4242fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %8555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8556 = getelementptr inbounds %struct.GPR, %struct.GPR* %8555, i32 0, i32 33
  %8557 = getelementptr inbounds %struct.Reg, %struct.Reg* %8556, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %8557 to i64*
  %8558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8559 = getelementptr inbounds %struct.GPR, %struct.GPR* %8558, i32 0, i32 9
  %8560 = getelementptr inbounds %struct.Reg, %struct.Reg* %8559, i32 0, i32 0
  %ESI.i222 = bitcast %union.anon* %8560 to i32*
  %8561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8562 = getelementptr inbounds %struct.GPR, %struct.GPR* %8561, i32 0, i32 7
  %8563 = getelementptr inbounds %struct.Reg, %struct.Reg* %8562, i32 0, i32 0
  %RDX.i223 = bitcast %union.anon* %8563 to i64*
  %8564 = load i64, i64* %RDX.i223
  %8565 = load i32, i32* %ESI.i222
  %8566 = zext i32 %8565 to i64
  %8567 = load i64, i64* %PC.i221
  %8568 = add i64 %8567, 2
  store i64 %8568, i64* %PC.i221
  %8569 = trunc i64 %8564 to i32
  %8570 = sub i32 %8569, %8565
  %8571 = zext i32 %8570 to i64
  store i64 %8571, i64* %RDX.i223, align 8
  %8572 = icmp ult i32 %8569, %8565
  %8573 = zext i1 %8572 to i8
  %8574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8573, i8* %8574, align 1
  %8575 = and i32 %8570, 255
  %8576 = call i32 @llvm.ctpop.i32(i32 %8575)
  %8577 = trunc i32 %8576 to i8
  %8578 = and i8 %8577, 1
  %8579 = xor i8 %8578, 1
  %8580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8579, i8* %8580, align 1
  %8581 = xor i64 %8566, %8564
  %8582 = trunc i64 %8581 to i32
  %8583 = xor i32 %8582, %8570
  %8584 = lshr i32 %8583, 4
  %8585 = trunc i32 %8584 to i8
  %8586 = and i8 %8585, 1
  %8587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8586, i8* %8587, align 1
  %8588 = icmp eq i32 %8570, 0
  %8589 = zext i1 %8588 to i8
  %8590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8589, i8* %8590, align 1
  %8591 = lshr i32 %8570, 31
  %8592 = trunc i32 %8591 to i8
  %8593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8592, i8* %8593, align 1
  %8594 = lshr i32 %8569, 31
  %8595 = lshr i32 %8565, 31
  %8596 = xor i32 %8595, %8594
  %8597 = xor i32 %8591, %8594
  %8598 = add i32 %8597, %8596
  %8599 = icmp eq i32 %8598, 2
  %8600 = zext i1 %8599 to i8
  %8601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8600, i8* %8601, align 1
  store %struct.Memory* %loadMem_4242fe, %struct.Memory** %MEMORY
  %loadMem_424300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8603 = getelementptr inbounds %struct.GPR, %struct.GPR* %8602, i32 0, i32 33
  %8604 = getelementptr inbounds %struct.Reg, %struct.Reg* %8603, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %8604 to i64*
  %8605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8606 = getelementptr inbounds %struct.GPR, %struct.GPR* %8605, i32 0, i32 7
  %8607 = getelementptr inbounds %struct.Reg, %struct.Reg* %8606, i32 0, i32 0
  %EDX.i219 = bitcast %union.anon* %8607 to i32*
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8609 = getelementptr inbounds %struct.GPR, %struct.GPR* %8608, i32 0, i32 11
  %8610 = getelementptr inbounds %struct.Reg, %struct.Reg* %8609, i32 0, i32 0
  %RDI.i220 = bitcast %union.anon* %8610 to i64*
  %8611 = load i32, i32* %EDX.i219
  %8612 = zext i32 %8611 to i64
  %8613 = load i64, i64* %PC.i218
  %8614 = add i64 %8613, 3
  store i64 %8614, i64* %PC.i218
  %8615 = shl i64 %8612, 32
  %8616 = ashr exact i64 %8615, 32
  store i64 %8616, i64* %RDI.i220, align 8
  store %struct.Memory* %loadMem_424300, %struct.Memory** %MEMORY
  %loadMem_424303 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8618 = getelementptr inbounds %struct.GPR, %struct.GPR* %8617, i32 0, i32 33
  %8619 = getelementptr inbounds %struct.Reg, %struct.Reg* %8618, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %8619 to i64*
  %8620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8621 = getelementptr inbounds %struct.GPR, %struct.GPR* %8620, i32 0, i32 15
  %8622 = getelementptr inbounds %struct.Reg, %struct.Reg* %8621, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %8622 to i64*
  %8623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8624 = getelementptr inbounds %struct.GPR, %struct.GPR* %8623, i32 0, i32 17
  %8625 = getelementptr inbounds %struct.Reg, %struct.Reg* %8624, i32 0, i32 0
  %R8.i217 = bitcast %union.anon* %8625 to i64*
  %8626 = load i64, i64* %RBP.i216
  %8627 = sub i64 %8626, 264
  %8628 = load i64, i64* %PC.i215
  %8629 = add i64 %8628, 7
  store i64 %8629, i64* %PC.i215
  %8630 = inttoptr i64 %8627 to i64*
  %8631 = load i64, i64* %8630
  store i64 %8631, i64* %R8.i217, align 8
  store %struct.Memory* %loadMem_424303, %struct.Memory** %MEMORY
  %loadMem_42430a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8633 = getelementptr inbounds %struct.GPR, %struct.GPR* %8632, i32 0, i32 33
  %8634 = getelementptr inbounds %struct.Reg, %struct.Reg* %8633, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %8634 to i64*
  %8635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8636 = getelementptr inbounds %struct.GPR, %struct.GPR* %8635, i32 0, i32 7
  %8637 = getelementptr inbounds %struct.Reg, %struct.Reg* %8636, i32 0, i32 0
  %RDX.i213 = bitcast %union.anon* %8637 to i64*
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8639 = getelementptr inbounds %struct.GPR, %struct.GPR* %8638, i32 0, i32 11
  %8640 = getelementptr inbounds %struct.Reg, %struct.Reg* %8639, i32 0, i32 0
  %RDI.i214 = bitcast %union.anon* %8640 to i64*
  %8641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8642 = getelementptr inbounds %struct.GPR, %struct.GPR* %8641, i32 0, i32 17
  %8643 = getelementptr inbounds %struct.Reg, %struct.Reg* %8642, i32 0, i32 0
  %R8.i = bitcast %union.anon* %8643 to i64*
  %8644 = load i64, i64* %R8.i
  %8645 = load i64, i64* %RDI.i214
  %8646 = mul i64 %8645, 4
  %8647 = add i64 %8646, %8644
  %8648 = load i64, i64* %PC.i212
  %8649 = add i64 %8648, 4
  store i64 %8649, i64* %PC.i212
  %8650 = inttoptr i64 %8647 to i32*
  %8651 = load i32, i32* %8650
  %8652 = zext i32 %8651 to i64
  store i64 %8652, i64* %RDX.i213, align 8
  store %struct.Memory* %loadMem_42430a, %struct.Memory** %MEMORY
  %loadMem_42430e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8654 = getelementptr inbounds %struct.GPR, %struct.GPR* %8653, i32 0, i32 33
  %8655 = getelementptr inbounds %struct.Reg, %struct.Reg* %8654, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %8655 to i64*
  %8656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8657 = getelementptr inbounds %struct.GPR, %struct.GPR* %8656, i32 0, i32 11
  %8658 = getelementptr inbounds %struct.Reg, %struct.Reg* %8657, i32 0, i32 0
  %RDI.i211 = bitcast %union.anon* %8658 to i64*
  %8659 = load i64, i64* %PC.i210
  %8660 = add i64 %8659, 8
  store i64 %8660, i64* %PC.i210
  %8661 = load i64, i64* bitcast (%G_0x6f8f00_type* @G_0x6f8f00 to i64*)
  store i64 %8661, i64* %RDI.i211, align 8
  store %struct.Memory* %loadMem_42430e, %struct.Memory** %MEMORY
  %loadMem_424316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8663 = getelementptr inbounds %struct.GPR, %struct.GPR* %8662, i32 0, i32 33
  %8664 = getelementptr inbounds %struct.Reg, %struct.Reg* %8663, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %8664 to i64*
  %8665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8666 = getelementptr inbounds %struct.GPR, %struct.GPR* %8665, i32 0, i32 9
  %8667 = getelementptr inbounds %struct.Reg, %struct.Reg* %8666, i32 0, i32 0
  %RSI.i208 = bitcast %union.anon* %8667 to i64*
  %8668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8669 = getelementptr inbounds %struct.GPR, %struct.GPR* %8668, i32 0, i32 15
  %8670 = getelementptr inbounds %struct.Reg, %struct.Reg* %8669, i32 0, i32 0
  %RBP.i209 = bitcast %union.anon* %8670 to i64*
  %8671 = load i64, i64* %RBP.i209
  %8672 = sub i64 %8671, 128
  %8673 = load i64, i64* %PC.i207
  %8674 = add i64 %8673, 3
  store i64 %8674, i64* %PC.i207
  %8675 = inttoptr i64 %8672 to i32*
  %8676 = load i32, i32* %8675
  %8677 = zext i32 %8676 to i64
  store i64 %8677, i64* %RSI.i208, align 8
  store %struct.Memory* %loadMem_424316, %struct.Memory** %MEMORY
  %loadMem_424319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8679 = getelementptr inbounds %struct.GPR, %struct.GPR* %8678, i32 0, i32 33
  %8680 = getelementptr inbounds %struct.Reg, %struct.Reg* %8679, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %8680 to i64*
  %8681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8682 = getelementptr inbounds %struct.GPR, %struct.GPR* %8681, i32 0, i32 5
  %8683 = getelementptr inbounds %struct.Reg, %struct.Reg* %8682, i32 0, i32 0
  %RCX.i205 = bitcast %union.anon* %8683 to i64*
  %8684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8685 = getelementptr inbounds %struct.GPR, %struct.GPR* %8684, i32 0, i32 15
  %8686 = getelementptr inbounds %struct.Reg, %struct.Reg* %8685, i32 0, i32 0
  %RBP.i206 = bitcast %union.anon* %8686 to i64*
  %8687 = load i64, i64* %RBP.i206
  %8688 = sub i64 %8687, 152
  %8689 = load i64, i64* %PC.i204
  %8690 = add i64 %8689, 6
  store i64 %8690, i64* %PC.i204
  %8691 = inttoptr i64 %8688 to i32*
  %8692 = load i32, i32* %8691
  %8693 = zext i32 %8692 to i64
  store i64 %8693, i64* %RCX.i205, align 8
  store %struct.Memory* %loadMem_424319, %struct.Memory** %MEMORY
  %loadMem_42431f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8695 = getelementptr inbounds %struct.GPR, %struct.GPR* %8694, i32 0, i32 33
  %8696 = getelementptr inbounds %struct.Reg, %struct.Reg* %8695, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %8696 to i64*
  %8697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8698 = getelementptr inbounds %struct.GPR, %struct.GPR* %8697, i32 0, i32 5
  %8699 = getelementptr inbounds %struct.Reg, %struct.Reg* %8698, i32 0, i32 0
  %8700 = bitcast %union.anon* %8699 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8700, i32 0, i32 0
  %8701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8702 = getelementptr inbounds %struct.GPR, %struct.GPR* %8701, i32 0, i32 9
  %8703 = getelementptr inbounds %struct.Reg, %struct.Reg* %8702, i32 0, i32 0
  %RSI.i203 = bitcast %union.anon* %8703 to i64*
  %8704 = load i64, i64* %RSI.i203
  %8705 = load i8, i8* %CL.i
  %8706 = zext i8 %8705 to i64
  %8707 = load i64, i64* %PC.i202
  %8708 = add i64 %8707, 2
  store i64 %8708, i64* %PC.i202
  %8709 = trunc i64 %8706 to i5
  switch i5 %8709, label %8716 [
    i5 0, label %routine_shll__cl___esi.exit
    i5 1, label %8710
  ]

; <label>:8710:                                   ; preds = %routine_shll__cl___edx.exit
  %8711 = trunc i64 %8704 to i32
  %8712 = shl i32 %8711, 1
  %8713 = icmp slt i32 %8711, 0
  %8714 = icmp slt i32 %8712, 0
  %8715 = xor i1 %8713, %8714
  br label %8725

; <label>:8716:                                   ; preds = %routine_shll__cl___edx.exit
  %8717 = and i64 %8706, 31
  %8718 = add i64 %8717, 4294967295
  %8719 = and i64 %8704, 4294967295
  %8720 = and i64 %8718, 4294967295
  %8721 = shl i64 %8719, %8720
  %8722 = trunc i64 %8721 to i32
  %8723 = icmp slt i32 %8722, 0
  %8724 = shl i32 %8722, 1
  br label %8725

; <label>:8725:                                   ; preds = %8716, %8710
  %8726 = phi i1 [ %8713, %8710 ], [ %8723, %8716 ]
  %8727 = phi i1 [ %8715, %8710 ], [ false, %8716 ]
  %8728 = phi i32 [ %8712, %8710 ], [ %8724, %8716 ]
  %8729 = zext i32 %8728 to i64
  store i64 %8729, i64* %RSI.i203, align 8
  %8730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8731 = zext i1 %8726 to i8
  store i8 %8731, i8* %8730, align 1
  %8732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8733 = and i32 %8728, 254
  %8734 = call i32 @llvm.ctpop.i32(i32 %8733)
  %8735 = trunc i32 %8734 to i8
  %8736 = and i8 %8735, 1
  %8737 = xor i8 %8736, 1
  store i8 %8737, i8* %8732, align 1
  %8738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8738, align 1
  %8739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8740 = icmp eq i32 %8728, 0
  %8741 = zext i1 %8740 to i8
  store i8 %8741, i8* %8739, align 1
  %8742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8743 = lshr i32 %8728, 31
  %8744 = trunc i32 %8743 to i8
  store i8 %8744, i8* %8742, align 1
  %8745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8746 = zext i1 %8727 to i8
  store i8 %8746, i8* %8745, align 1
  br label %routine_shll__cl___esi.exit

routine_shll__cl___esi.exit:                      ; preds = %routine_shll__cl___edx.exit, %8725
  store %struct.Memory* %loadMem_42431f, %struct.Memory** %MEMORY
  %loadMem_424321 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8748 = getelementptr inbounds %struct.GPR, %struct.GPR* %8747, i32 0, i32 33
  %8749 = getelementptr inbounds %struct.Reg, %struct.Reg* %8748, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %8749 to i64*
  %8750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8751 = getelementptr inbounds %struct.GPR, %struct.GPR* %8750, i32 0, i32 19
  %8752 = getelementptr inbounds %struct.Reg, %struct.Reg* %8751, i32 0, i32 0
  %R9D.i200 = bitcast %union.anon* %8752 to i32*
  %8753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8754 = getelementptr inbounds %struct.GPR, %struct.GPR* %8753, i32 0, i32 15
  %8755 = getelementptr inbounds %struct.Reg, %struct.Reg* %8754, i32 0, i32 0
  %RBP.i201 = bitcast %union.anon* %8755 to i64*
  %8756 = bitcast i32* %R9D.i200 to i64*
  %8757 = load i64, i64* %RBP.i201
  %8758 = sub i64 %8757, 72
  %8759 = load i64, i64* %PC.i199
  %8760 = add i64 %8759, 5
  store i64 %8760, i64* %PC.i199
  %8761 = inttoptr i64 %8758 to i16*
  %8762 = load i16, i16* %8761
  %8763 = sext i16 %8762 to i64
  %8764 = and i64 %8763, 4294967295
  store i64 %8764, i64* %8756, align 8
  store %struct.Memory* %loadMem_424321, %struct.Memory** %MEMORY
  %loadMem_424326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8766 = getelementptr inbounds %struct.GPR, %struct.GPR* %8765, i32 0, i32 33
  %8767 = getelementptr inbounds %struct.Reg, %struct.Reg* %8766, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %8767 to i64*
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8769 = getelementptr inbounds %struct.GPR, %struct.GPR* %8768, i32 0, i32 19
  %8770 = getelementptr inbounds %struct.Reg, %struct.Reg* %8769, i32 0, i32 0
  %R9D.i197 = bitcast %union.anon* %8770 to i32*
  %8771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8772 = getelementptr inbounds %struct.GPR, %struct.GPR* %8771, i32 0, i32 9
  %8773 = getelementptr inbounds %struct.Reg, %struct.Reg* %8772, i32 0, i32 0
  %RSI.i198 = bitcast %union.anon* %8773 to i64*
  %8774 = load i64, i64* %RSI.i198
  %8775 = load i32, i32* %R9D.i197
  %8776 = zext i32 %8775 to i64
  %8777 = load i64, i64* %PC.i196
  %8778 = add i64 %8777, 3
  store i64 %8778, i64* %PC.i196
  %8779 = trunc i64 %8774 to i32
  %8780 = sub i32 %8779, %8775
  %8781 = zext i32 %8780 to i64
  store i64 %8781, i64* %RSI.i198, align 8
  %8782 = icmp ult i32 %8779, %8775
  %8783 = zext i1 %8782 to i8
  %8784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8783, i8* %8784, align 1
  %8785 = and i32 %8780, 255
  %8786 = call i32 @llvm.ctpop.i32(i32 %8785)
  %8787 = trunc i32 %8786 to i8
  %8788 = and i8 %8787, 1
  %8789 = xor i8 %8788, 1
  %8790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8789, i8* %8790, align 1
  %8791 = xor i64 %8776, %8774
  %8792 = trunc i64 %8791 to i32
  %8793 = xor i32 %8792, %8780
  %8794 = lshr i32 %8793, 4
  %8795 = trunc i32 %8794 to i8
  %8796 = and i8 %8795, 1
  %8797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8796, i8* %8797, align 1
  %8798 = icmp eq i32 %8780, 0
  %8799 = zext i1 %8798 to i8
  %8800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8799, i8* %8800, align 1
  %8801 = lshr i32 %8780, 31
  %8802 = trunc i32 %8801 to i8
  %8803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8802, i8* %8803, align 1
  %8804 = lshr i32 %8779, 31
  %8805 = lshr i32 %8775, 31
  %8806 = xor i32 %8805, %8804
  %8807 = xor i32 %8801, %8804
  %8808 = add i32 %8807, %8806
  %8809 = icmp eq i32 %8808, 2
  %8810 = zext i1 %8809 to i8
  %8811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8810, i8* %8811, align 1
  store %struct.Memory* %loadMem_424326, %struct.Memory** %MEMORY
  %loadMem_424329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8813 = getelementptr inbounds %struct.GPR, %struct.GPR* %8812, i32 0, i32 33
  %8814 = getelementptr inbounds %struct.Reg, %struct.Reg* %8813, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %8814 to i64*
  %8815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8816 = getelementptr inbounds %struct.GPR, %struct.GPR* %8815, i32 0, i32 9
  %8817 = getelementptr inbounds %struct.Reg, %struct.Reg* %8816, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %8817 to i32*
  %8818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8819 = getelementptr inbounds %struct.GPR, %struct.GPR* %8818, i32 0, i32 21
  %8820 = getelementptr inbounds %struct.Reg, %struct.Reg* %8819, i32 0, i32 0
  %R10.i195 = bitcast %union.anon* %8820 to i64*
  %8821 = load i32, i32* %ESI.i
  %8822 = zext i32 %8821 to i64
  %8823 = load i64, i64* %PC.i194
  %8824 = add i64 %8823, 3
  store i64 %8824, i64* %PC.i194
  %8825 = shl i64 %8822, 32
  %8826 = ashr exact i64 %8825, 32
  store i64 %8826, i64* %R10.i195, align 8
  store %struct.Memory* %loadMem_424329, %struct.Memory** %MEMORY
  %loadMem_42432c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8828 = getelementptr inbounds %struct.GPR, %struct.GPR* %8827, i32 0, i32 33
  %8829 = getelementptr inbounds %struct.Reg, %struct.Reg* %8828, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %8829 to i64*
  %8830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8831 = getelementptr inbounds %struct.GPR, %struct.GPR* %8830, i32 0, i32 7
  %8832 = getelementptr inbounds %struct.Reg, %struct.Reg* %8831, i32 0, i32 0
  %RDX.i191 = bitcast %union.anon* %8832 to i64*
  %8833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8834 = getelementptr inbounds %struct.GPR, %struct.GPR* %8833, i32 0, i32 11
  %8835 = getelementptr inbounds %struct.Reg, %struct.Reg* %8834, i32 0, i32 0
  %RDI.i192 = bitcast %union.anon* %8835 to i64*
  %8836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8837 = getelementptr inbounds %struct.GPR, %struct.GPR* %8836, i32 0, i32 21
  %8838 = getelementptr inbounds %struct.Reg, %struct.Reg* %8837, i32 0, i32 0
  %R10.i193 = bitcast %union.anon* %8838 to i64*
  %8839 = load i64, i64* %RDX.i191
  %8840 = load i64, i64* %RDI.i192
  %8841 = load i64, i64* %R10.i193
  %8842 = mul i64 %8841, 4
  %8843 = add i64 %8842, %8840
  %8844 = load i64, i64* %PC.i190
  %8845 = add i64 %8844, 4
  store i64 %8845, i64* %PC.i190
  %8846 = trunc i64 %8839 to i32
  %8847 = inttoptr i64 %8843 to i32*
  %8848 = load i32, i32* %8847
  %8849 = add i32 %8848, %8846
  %8850 = zext i32 %8849 to i64
  store i64 %8850, i64* %RDX.i191, align 8
  %8851 = icmp ult i32 %8849, %8846
  %8852 = icmp ult i32 %8849, %8848
  %8853 = or i1 %8851, %8852
  %8854 = zext i1 %8853 to i8
  %8855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8854, i8* %8855, align 1
  %8856 = and i32 %8849, 255
  %8857 = call i32 @llvm.ctpop.i32(i32 %8856)
  %8858 = trunc i32 %8857 to i8
  %8859 = and i8 %8858, 1
  %8860 = xor i8 %8859, 1
  %8861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8860, i8* %8861, align 1
  %8862 = xor i32 %8848, %8846
  %8863 = xor i32 %8862, %8849
  %8864 = lshr i32 %8863, 4
  %8865 = trunc i32 %8864 to i8
  %8866 = and i8 %8865, 1
  %8867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8866, i8* %8867, align 1
  %8868 = icmp eq i32 %8849, 0
  %8869 = zext i1 %8868 to i8
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8869, i8* %8870, align 1
  %8871 = lshr i32 %8849, 31
  %8872 = trunc i32 %8871 to i8
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8872, i8* %8873, align 1
  %8874 = lshr i32 %8846, 31
  %8875 = lshr i32 %8848, 31
  %8876 = xor i32 %8871, %8874
  %8877 = xor i32 %8871, %8875
  %8878 = add i32 %8876, %8877
  %8879 = icmp eq i32 %8878, 2
  %8880 = zext i1 %8879 to i8
  %8881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8880, i8* %8881, align 1
  store %struct.Memory* %loadMem_42432c, %struct.Memory** %MEMORY
  %loadMem_424330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8883 = getelementptr inbounds %struct.GPR, %struct.GPR* %8882, i32 0, i32 33
  %8884 = getelementptr inbounds %struct.Reg, %struct.Reg* %8883, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %8884 to i64*
  %8885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8886 = getelementptr inbounds %struct.GPR, %struct.GPR* %8885, i32 0, i32 7
  %8887 = getelementptr inbounds %struct.Reg, %struct.Reg* %8886, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %8887 to i32*
  %8888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8889 = getelementptr inbounds %struct.GPR, %struct.GPR* %8888, i32 0, i32 1
  %8890 = getelementptr inbounds %struct.Reg, %struct.Reg* %8889, i32 0, i32 0
  %RAX.i189 = bitcast %union.anon* %8890 to i64*
  %8891 = load i64, i64* %RAX.i189
  %8892 = load i32, i32* %EDX.i
  %8893 = zext i32 %8892 to i64
  %8894 = load i64, i64* %PC.i188
  %8895 = add i64 %8894, 3
  store i64 %8895, i64* %PC.i188
  %8896 = shl i64 %8891, 32
  %8897 = ashr exact i64 %8896, 32
  %8898 = shl i64 %8893, 32
  %8899 = ashr exact i64 %8898, 32
  %8900 = mul i64 %8899, %8897
  %8901 = trunc i64 %8900 to i32
  %8902 = and i64 %8900, 4294967295
  store i64 %8902, i64* %RAX.i189, align 8
  %8903 = shl i64 %8900, 32
  %8904 = ashr exact i64 %8903, 32
  %8905 = icmp ne i64 %8904, %8900
  %8906 = zext i1 %8905 to i8
  %8907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8906, i8* %8907, align 1
  %8908 = and i32 %8901, 255
  %8909 = call i32 @llvm.ctpop.i32(i32 %8908)
  %8910 = trunc i32 %8909 to i8
  %8911 = and i8 %8910, 1
  %8912 = xor i8 %8911, 1
  %8913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8912, i8* %8913, align 1
  %8914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8914, align 1
  %8915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8915, align 1
  %8916 = lshr i32 %8901, 31
  %8917 = trunc i32 %8916 to i8
  %8918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8917, i8* %8918, align 1
  %8919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8906, i8* %8919, align 1
  store %struct.Memory* %loadMem_424330, %struct.Memory** %MEMORY
  %loadMem_424333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8921 = getelementptr inbounds %struct.GPR, %struct.GPR* %8920, i32 0, i32 33
  %8922 = getelementptr inbounds %struct.Reg, %struct.Reg* %8921, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %8922 to i64*
  %8923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8924 = getelementptr inbounds %struct.GPR, %struct.GPR* %8923, i32 0, i32 1
  %8925 = getelementptr inbounds %struct.Reg, %struct.Reg* %8924, i32 0, i32 0
  %RAX.i187 = bitcast %union.anon* %8925 to i64*
  %8926 = load i64, i64* %RAX.i187
  %8927 = load i64, i64* %PC.i186
  %8928 = add i64 %8927, 3
  store i64 %8928, i64* %PC.i186
  %8929 = shl i64 %8926, 32
  %8930 = ashr exact i64 %8929, 32
  %8931 = ashr i64 %8930, 15
  %8932 = lshr i64 %8931, 1
  %8933 = trunc i64 %8931 to i8
  %8934 = and i8 %8933, 1
  %8935 = trunc i64 %8932 to i32
  %8936 = and i64 %8932, 4294967295
  store i64 %8936, i64* %RAX.i187, align 8
  %8937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8934, i8* %8937, align 1
  %8938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8939 = and i32 %8935, 255
  %8940 = call i32 @llvm.ctpop.i32(i32 %8939)
  %8941 = trunc i32 %8940 to i8
  %8942 = and i8 %8941, 1
  %8943 = xor i8 %8942, 1
  store i8 %8943, i8* %8938, align 1
  %8944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8944, align 1
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8946 = icmp eq i32 %8935, 0
  %8947 = zext i1 %8946 to i8
  store i8 %8947, i8* %8945, align 1
  %8948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8949 = lshr i32 %8935, 31
  %8950 = trunc i32 %8949 to i8
  store i8 %8950, i8* %8948, align 1
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8951, align 1
  store %struct.Memory* %loadMem_424333, %struct.Memory** %MEMORY
  %loadMem_424336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8953 = getelementptr inbounds %struct.GPR, %struct.GPR* %8952, i32 0, i32 33
  %8954 = getelementptr inbounds %struct.Reg, %struct.Reg* %8953, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %8954 to i64*
  %8955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8956 = getelementptr inbounds %struct.GPR, %struct.GPR* %8955, i32 0, i32 1
  %8957 = getelementptr inbounds %struct.Reg, %struct.Reg* %8956, i32 0, i32 0
  %EAX.i184 = bitcast %union.anon* %8957 to i32*
  %8958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8959 = getelementptr inbounds %struct.GPR, %struct.GPR* %8958, i32 0, i32 15
  %8960 = getelementptr inbounds %struct.Reg, %struct.Reg* %8959, i32 0, i32 0
  %RBP.i185 = bitcast %union.anon* %8960 to i64*
  %8961 = load i64, i64* %RBP.i185
  %8962 = sub i64 %8961, 228
  %8963 = load i32, i32* %EAX.i184
  %8964 = zext i32 %8963 to i64
  %8965 = load i64, i64* %PC.i183
  %8966 = add i64 %8965, 6
  store i64 %8966, i64* %PC.i183
  %8967 = inttoptr i64 %8962 to i32*
  store i32 %8963, i32* %8967
  store %struct.Memory* %loadMem_424336, %struct.Memory** %MEMORY
  %loadMem_42433c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8969 = getelementptr inbounds %struct.GPR, %struct.GPR* %8968, i32 0, i32 33
  %8970 = getelementptr inbounds %struct.Reg, %struct.Reg* %8969, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %8970 to i64*
  %8971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8972 = getelementptr inbounds %struct.GPR, %struct.GPR* %8971, i32 0, i32 11
  %8973 = getelementptr inbounds %struct.Reg, %struct.Reg* %8972, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %8973 to i64*
  %8974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8975 = getelementptr inbounds %struct.GPR, %struct.GPR* %8974, i32 0, i32 15
  %8976 = getelementptr inbounds %struct.Reg, %struct.Reg* %8975, i32 0, i32 0
  %RBP.i182 = bitcast %union.anon* %8976 to i64*
  %8977 = load i64, i64* %RBP.i182
  %8978 = sub i64 %8977, 60
  %8979 = load i64, i64* %PC.i181
  %8980 = add i64 %8979, 3
  store i64 %8980, i64* %PC.i181
  %8981 = inttoptr i64 %8978 to i32*
  %8982 = load i32, i32* %8981
  %8983 = zext i32 %8982 to i64
  store i64 %8983, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_42433c, %struct.Memory** %MEMORY
  %loadMem_42433f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8985 = getelementptr inbounds %struct.GPR, %struct.GPR* %8984, i32 0, i32 33
  %8986 = getelementptr inbounds %struct.Reg, %struct.Reg* %8985, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %8986 to i64*
  %8987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8988 = getelementptr inbounds %struct.GPR, %struct.GPR* %8987, i32 0, i32 9
  %8989 = getelementptr inbounds %struct.Reg, %struct.Reg* %8988, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %8989 to i64*
  %8990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8991 = getelementptr inbounds %struct.GPR, %struct.GPR* %8990, i32 0, i32 15
  %8992 = getelementptr inbounds %struct.Reg, %struct.Reg* %8991, i32 0, i32 0
  %RBP.i180 = bitcast %union.anon* %8992 to i64*
  %8993 = load i64, i64* %RBP.i180
  %8994 = sub i64 %8993, 64
  %8995 = load i64, i64* %PC.i179
  %8996 = add i64 %8995, 3
  store i64 %8996, i64* %PC.i179
  %8997 = inttoptr i64 %8994 to i32*
  %8998 = load i32, i32* %8997
  %8999 = zext i32 %8998 to i64
  store i64 %8999, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_42433f, %struct.Memory** %MEMORY
  %loadMem_424342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9001 = getelementptr inbounds %struct.GPR, %struct.GPR* %9000, i32 0, i32 33
  %9002 = getelementptr inbounds %struct.Reg, %struct.Reg* %9001, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %9002 to i64*
  %9003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9004 = getelementptr inbounds %struct.GPR, %struct.GPR* %9003, i32 0, i32 7
  %9005 = getelementptr inbounds %struct.Reg, %struct.Reg* %9004, i32 0, i32 0
  %RDX.i177 = bitcast %union.anon* %9005 to i64*
  %9006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9007 = getelementptr inbounds %struct.GPR, %struct.GPR* %9006, i32 0, i32 15
  %9008 = getelementptr inbounds %struct.Reg, %struct.Reg* %9007, i32 0, i32 0
  %RBP.i178 = bitcast %union.anon* %9008 to i64*
  %9009 = load i64, i64* %RBP.i178
  %9010 = sub i64 %9009, 156
  %9011 = load i64, i64* %PC.i176
  %9012 = add i64 %9011, 6
  store i64 %9012, i64* %PC.i176
  %9013 = inttoptr i64 %9010 to i32*
  %9014 = load i32, i32* %9013
  %9015 = zext i32 %9014 to i64
  store i64 %9015, i64* %RDX.i177, align 8
  store %struct.Memory* %loadMem_424342, %struct.Memory** %MEMORY
  %loadMem_424348 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9017 = getelementptr inbounds %struct.GPR, %struct.GPR* %9016, i32 0, i32 33
  %9018 = getelementptr inbounds %struct.Reg, %struct.Reg* %9017, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %9018 to i64*
  %9019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9020 = getelementptr inbounds %struct.GPR, %struct.GPR* %9019, i32 0, i32 5
  %9021 = getelementptr inbounds %struct.Reg, %struct.Reg* %9020, i32 0, i32 0
  %RCX.i174 = bitcast %union.anon* %9021 to i64*
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9023 = getelementptr inbounds %struct.GPR, %struct.GPR* %9022, i32 0, i32 15
  %9024 = getelementptr inbounds %struct.Reg, %struct.Reg* %9023, i32 0, i32 0
  %RBP.i175 = bitcast %union.anon* %9024 to i64*
  %9025 = load i64, i64* %RBP.i175
  %9026 = sub i64 %9025, 160
  %9027 = load i64, i64* %PC.i173
  %9028 = add i64 %9027, 6
  store i64 %9028, i64* %PC.i173
  %9029 = inttoptr i64 %9026 to i32*
  %9030 = load i32, i32* %9029
  %9031 = zext i32 %9030 to i64
  store i64 %9031, i64* %RCX.i174, align 8
  store %struct.Memory* %loadMem_424348, %struct.Memory** %MEMORY
  %loadMem_42434e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9033 = getelementptr inbounds %struct.GPR, %struct.GPR* %9032, i32 0, i32 33
  %9034 = getelementptr inbounds %struct.Reg, %struct.Reg* %9033, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %9034 to i64*
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9036 = getelementptr inbounds %struct.GPR, %struct.GPR* %9035, i32 0, i32 17
  %9037 = getelementptr inbounds %struct.Reg, %struct.Reg* %9036, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %9037 to i32*
  %9038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9039 = getelementptr inbounds %struct.GPR, %struct.GPR* %9038, i32 0, i32 15
  %9040 = getelementptr inbounds %struct.Reg, %struct.Reg* %9039, i32 0, i32 0
  %RBP.i172 = bitcast %union.anon* %9040 to i64*
  %9041 = bitcast i32* %R8D.i to i64*
  %9042 = load i64, i64* %RBP.i172
  %9043 = sub i64 %9042, 124
  %9044 = load i64, i64* %PC.i171
  %9045 = add i64 %9044, 4
  store i64 %9045, i64* %PC.i171
  %9046 = inttoptr i64 %9043 to i32*
  %9047 = load i32, i32* %9046
  %9048 = zext i32 %9047 to i64
  store i64 %9048, i64* %9041, align 8
  store %struct.Memory* %loadMem_42434e, %struct.Memory** %MEMORY
  %loadMem_424352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9050 = getelementptr inbounds %struct.GPR, %struct.GPR* %9049, i32 0, i32 33
  %9051 = getelementptr inbounds %struct.Reg, %struct.Reg* %9050, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %9051 to i64*
  %9052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9053 = getelementptr inbounds %struct.GPR, %struct.GPR* %9052, i32 0, i32 19
  %9054 = getelementptr inbounds %struct.Reg, %struct.Reg* %9053, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %9054 to i32*
  %9055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9056 = getelementptr inbounds %struct.GPR, %struct.GPR* %9055, i32 0, i32 15
  %9057 = getelementptr inbounds %struct.Reg, %struct.Reg* %9056, i32 0, i32 0
  %RBP.i170 = bitcast %union.anon* %9057 to i64*
  %9058 = bitcast i32* %R9D.i to i64*
  %9059 = load i64, i64* %RBP.i170
  %9060 = sub i64 %9059, 128
  %9061 = load i64, i64* %PC.i169
  %9062 = add i64 %9061, 4
  store i64 %9062, i64* %PC.i169
  %9063 = inttoptr i64 %9060 to i32*
  %9064 = load i32, i32* %9063
  %9065 = zext i32 %9064 to i64
  store i64 %9065, i64* %9058, align 8
  store %struct.Memory* %loadMem_424352, %struct.Memory** %MEMORY
  %loadMem_424356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9067 = getelementptr inbounds %struct.GPR, %struct.GPR* %9066, i32 0, i32 33
  %9068 = getelementptr inbounds %struct.Reg, %struct.Reg* %9067, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %9068 to i64*
  %9069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9070 = getelementptr inbounds %struct.GPR, %struct.GPR* %9069, i32 0, i32 15
  %9071 = getelementptr inbounds %struct.Reg, %struct.Reg* %9070, i32 0, i32 0
  %RBP.i167 = bitcast %union.anon* %9071 to i64*
  %9072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9073 = getelementptr inbounds %struct.GPR, %struct.GPR* %9072, i32 0, i32 21
  %9074 = getelementptr inbounds %struct.Reg, %struct.Reg* %9073, i32 0, i32 0
  %R10.i168 = bitcast %union.anon* %9074 to i64*
  %9075 = load i64, i64* %RBP.i167
  %9076 = sub i64 %9075, 144
  %9077 = load i64, i64* %PC.i166
  %9078 = add i64 %9077, 7
  store i64 %9078, i64* %PC.i166
  %9079 = inttoptr i64 %9076 to i64*
  %9080 = load i64, i64* %9079
  store i64 %9080, i64* %R10.i168, align 8
  store %struct.Memory* %loadMem_424356, %struct.Memory** %MEMORY
  %loadMem_42435d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9082 = getelementptr inbounds %struct.GPR, %struct.GPR* %9081, i32 0, i32 33
  %9083 = getelementptr inbounds %struct.Reg, %struct.Reg* %9082, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %9083 to i64*
  %9084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9085 = getelementptr inbounds %struct.GPR, %struct.GPR* %9084, i32 0, i32 15
  %9086 = getelementptr inbounds %struct.Reg, %struct.Reg* %9085, i32 0, i32 0
  %RBP.i164 = bitcast %union.anon* %9086 to i64*
  %9087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9088 = getelementptr inbounds %struct.GPR, %struct.GPR* %9087, i32 0, i32 23
  %9089 = getelementptr inbounds %struct.Reg, %struct.Reg* %9088, i32 0, i32 0
  %R11.i165 = bitcast %union.anon* %9089 to i64*
  %9090 = load i64, i64* %RBP.i164
  %9091 = sub i64 %9090, 48
  %9092 = load i64, i64* %PC.i163
  %9093 = add i64 %9092, 4
  store i64 %9093, i64* %PC.i163
  %9094 = inttoptr i64 %9091 to i64*
  %9095 = load i64, i64* %9094
  store i64 %9095, i64* %R11.i165, align 8
  store %struct.Memory* %loadMem_42435d, %struct.Memory** %MEMORY
  %loadMem_424361 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9097 = getelementptr inbounds %struct.GPR, %struct.GPR* %9096, i32 0, i32 33
  %9098 = getelementptr inbounds %struct.Reg, %struct.Reg* %9097, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %9098 to i64*
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9100 = getelementptr inbounds %struct.GPR, %struct.GPR* %9099, i32 0, i32 1
  %9101 = getelementptr inbounds %struct.Reg, %struct.Reg* %9100, i32 0, i32 0
  %RAX.i161 = bitcast %union.anon* %9101 to i64*
  %9102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9103 = getelementptr inbounds %struct.GPR, %struct.GPR* %9102, i32 0, i32 15
  %9104 = getelementptr inbounds %struct.Reg, %struct.Reg* %9103, i32 0, i32 0
  %RBP.i162 = bitcast %union.anon* %9104 to i64*
  %9105 = load i64, i64* %RBP.i162
  %9106 = sub i64 %9105, 228
  %9107 = load i64, i64* %PC.i160
  %9108 = add i64 %9107, 6
  store i64 %9108, i64* %PC.i160
  %9109 = inttoptr i64 %9106 to i32*
  %9110 = load i32, i32* %9109
  %9111 = zext i32 %9110 to i64
  store i64 %9111, i64* %RAX.i161, align 8
  store %struct.Memory* %loadMem_424361, %struct.Memory** %MEMORY
  %loadMem_424367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9113 = getelementptr inbounds %struct.GPR, %struct.GPR* %9112, i32 0, i32 33
  %9114 = getelementptr inbounds %struct.Reg, %struct.Reg* %9113, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %9114 to i64*
  %9115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9116 = getelementptr inbounds %struct.GPR, %struct.GPR* %9115, i32 0, i32 3
  %9117 = getelementptr inbounds %struct.Reg, %struct.Reg* %9116, i32 0, i32 0
  %RBX.i158 = bitcast %union.anon* %9117 to i64*
  %9118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9119 = getelementptr inbounds %struct.GPR, %struct.GPR* %9118, i32 0, i32 15
  %9120 = getelementptr inbounds %struct.Reg, %struct.Reg* %9119, i32 0, i32 0
  %RBP.i159 = bitcast %union.anon* %9120 to i64*
  %9121 = load i64, i64* %RBP.i159
  %9122 = sub i64 %9121, 100
  %9123 = load i64, i64* %PC.i157
  %9124 = add i64 %9123, 3
  store i64 %9124, i64* %PC.i157
  %9125 = inttoptr i64 %9122 to i32*
  %9126 = load i32, i32* %9125
  %9127 = zext i32 %9126 to i64
  store i64 %9127, i64* %RBX.i158, align 8
  store %struct.Memory* %loadMem_424367, %struct.Memory** %MEMORY
  %loadMem_42436a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9129 = getelementptr inbounds %struct.GPR, %struct.GPR* %9128, i32 0, i32 33
  %9130 = getelementptr inbounds %struct.Reg, %struct.Reg* %9129, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %9130 to i64*
  %9131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9132 = getelementptr inbounds %struct.GPR, %struct.GPR* %9131, i32 0, i32 29
  %9133 = getelementptr inbounds %struct.Reg, %struct.Reg* %9132, i32 0, i32 0
  %R14D.i155 = bitcast %union.anon* %9133 to i32*
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9135 = getelementptr inbounds %struct.GPR, %struct.GPR* %9134, i32 0, i32 15
  %9136 = getelementptr inbounds %struct.Reg, %struct.Reg* %9135, i32 0, i32 0
  %RBP.i156 = bitcast %union.anon* %9136 to i64*
  %9137 = bitcast i32* %R14D.i155 to i64*
  %9138 = load i64, i64* %RBP.i156
  %9139 = sub i64 %9138, 116
  %9140 = load i64, i64* %PC.i154
  %9141 = add i64 %9140, 4
  store i64 %9141, i64* %PC.i154
  %9142 = inttoptr i64 %9139 to i32*
  %9143 = load i32, i32* %9142
  %9144 = zext i32 %9143 to i64
  store i64 %9144, i64* %9137, align 8
  store %struct.Memory* %loadMem_42436a, %struct.Memory** %MEMORY
  %loadMem_42436e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9146 = getelementptr inbounds %struct.GPR, %struct.GPR* %9145, i32 0, i32 33
  %9147 = getelementptr inbounds %struct.Reg, %struct.Reg* %9146, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %9147 to i64*
  %9148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9149 = getelementptr inbounds %struct.GPR, %struct.GPR* %9148, i32 0, i32 13
  %9150 = getelementptr inbounds %struct.Reg, %struct.Reg* %9149, i32 0, i32 0
  %RSP.i152 = bitcast %union.anon* %9150 to i64*
  %9151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9152 = getelementptr inbounds %struct.GPR, %struct.GPR* %9151, i32 0, i32 21
  %9153 = getelementptr inbounds %struct.Reg, %struct.Reg* %9152, i32 0, i32 0
  %R10.i153 = bitcast %union.anon* %9153 to i64*
  %9154 = load i64, i64* %RSP.i152
  %9155 = load i64, i64* %R10.i153
  %9156 = load i64, i64* %PC.i151
  %9157 = add i64 %9156, 4
  store i64 %9157, i64* %PC.i151
  %9158 = inttoptr i64 %9154 to i64*
  store i64 %9155, i64* %9158
  store %struct.Memory* %loadMem_42436e, %struct.Memory** %MEMORY
  %loadMem_424372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9160 = getelementptr inbounds %struct.GPR, %struct.GPR* %9159, i32 0, i32 33
  %9161 = getelementptr inbounds %struct.Reg, %struct.Reg* %9160, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %9161 to i64*
  %9162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9163 = getelementptr inbounds %struct.GPR, %struct.GPR* %9162, i32 0, i32 13
  %9164 = getelementptr inbounds %struct.Reg, %struct.Reg* %9163, i32 0, i32 0
  %RSP.i149 = bitcast %union.anon* %9164 to i64*
  %9165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9166 = getelementptr inbounds %struct.GPR, %struct.GPR* %9165, i32 0, i32 23
  %9167 = getelementptr inbounds %struct.Reg, %struct.Reg* %9166, i32 0, i32 0
  %R11.i150 = bitcast %union.anon* %9167 to i64*
  %9168 = load i64, i64* %RSP.i149
  %9169 = add i64 %9168, 8
  %9170 = load i64, i64* %R11.i150
  %9171 = load i64, i64* %PC.i148
  %9172 = add i64 %9171, 5
  store i64 %9172, i64* %PC.i148
  %9173 = inttoptr i64 %9169 to i64*
  store i64 %9170, i64* %9173
  store %struct.Memory* %loadMem_424372, %struct.Memory** %MEMORY
  %loadMem_424377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9175 = getelementptr inbounds %struct.GPR, %struct.GPR* %9174, i32 0, i32 33
  %9176 = getelementptr inbounds %struct.Reg, %struct.Reg* %9175, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %9176 to i64*
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9178 = getelementptr inbounds %struct.GPR, %struct.GPR* %9177, i32 0, i32 1
  %9179 = getelementptr inbounds %struct.Reg, %struct.Reg* %9178, i32 0, i32 0
  %EAX.i146 = bitcast %union.anon* %9179 to i32*
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9181 = getelementptr inbounds %struct.GPR, %struct.GPR* %9180, i32 0, i32 13
  %9182 = getelementptr inbounds %struct.Reg, %struct.Reg* %9181, i32 0, i32 0
  %RSP.i147 = bitcast %union.anon* %9182 to i64*
  %9183 = load i64, i64* %RSP.i147
  %9184 = add i64 %9183, 16
  %9185 = load i32, i32* %EAX.i146
  %9186 = zext i32 %9185 to i64
  %9187 = load i64, i64* %PC.i145
  %9188 = add i64 %9187, 4
  store i64 %9188, i64* %PC.i145
  %9189 = inttoptr i64 %9184 to i32*
  store i32 %9185, i32* %9189
  store %struct.Memory* %loadMem_424377, %struct.Memory** %MEMORY
  %loadMem_42437b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9191 = getelementptr inbounds %struct.GPR, %struct.GPR* %9190, i32 0, i32 33
  %9192 = getelementptr inbounds %struct.Reg, %struct.Reg* %9191, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %9192 to i64*
  %9193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9194 = getelementptr inbounds %struct.GPR, %struct.GPR* %9193, i32 0, i32 3
  %9195 = getelementptr inbounds %struct.Reg, %struct.Reg* %9194, i32 0, i32 0
  %EBX.i = bitcast %union.anon* %9195 to i32*
  %9196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9197 = getelementptr inbounds %struct.GPR, %struct.GPR* %9196, i32 0, i32 13
  %9198 = getelementptr inbounds %struct.Reg, %struct.Reg* %9197, i32 0, i32 0
  %RSP.i144 = bitcast %union.anon* %9198 to i64*
  %9199 = load i64, i64* %RSP.i144
  %9200 = add i64 %9199, 24
  %9201 = load i32, i32* %EBX.i
  %9202 = zext i32 %9201 to i64
  %9203 = load i64, i64* %PC.i143
  %9204 = add i64 %9203, 4
  store i64 %9204, i64* %PC.i143
  %9205 = inttoptr i64 %9200 to i32*
  store i32 %9201, i32* %9205
  store %struct.Memory* %loadMem_42437b, %struct.Memory** %MEMORY
  %loadMem_42437f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9207 = getelementptr inbounds %struct.GPR, %struct.GPR* %9206, i32 0, i32 33
  %9208 = getelementptr inbounds %struct.Reg, %struct.Reg* %9207, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %9208 to i64*
  %9209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9210 = getelementptr inbounds %struct.GPR, %struct.GPR* %9209, i32 0, i32 29
  %9211 = getelementptr inbounds %struct.Reg, %struct.Reg* %9210, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %9211 to i32*
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9213 = getelementptr inbounds %struct.GPR, %struct.GPR* %9212, i32 0, i32 13
  %9214 = getelementptr inbounds %struct.Reg, %struct.Reg* %9213, i32 0, i32 0
  %RSP.i142 = bitcast %union.anon* %9214 to i64*
  %9215 = load i64, i64* %RSP.i142
  %9216 = add i64 %9215, 32
  %9217 = load i32, i32* %R14D.i
  %9218 = zext i32 %9217 to i64
  %9219 = load i64, i64* %PC.i141
  %9220 = add i64 %9219, 5
  store i64 %9220, i64* %PC.i141
  %9221 = inttoptr i64 %9216 to i32*
  store i32 %9217, i32* %9221
  store %struct.Memory* %loadMem_42437f, %struct.Memory** %MEMORY
  %loadMem1_424384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9223 = getelementptr inbounds %struct.GPR, %struct.GPR* %9222, i32 0, i32 33
  %9224 = getelementptr inbounds %struct.Reg, %struct.Reg* %9223, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %9224 to i64*
  %9225 = load i64, i64* %PC.i140
  %9226 = add i64 %9225, -4580
  %9227 = load i64, i64* %PC.i140
  %9228 = add i64 %9227, 5
  %9229 = load i64, i64* %PC.i140
  %9230 = add i64 %9229, 5
  store i64 %9230, i64* %PC.i140
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9232 = load i64, i64* %9231, align 8
  %9233 = add i64 %9232, -8
  %9234 = inttoptr i64 %9233 to i64*
  store i64 %9228, i64* %9234
  store i64 %9233, i64* %9231, align 8
  %9235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9226, i64* %9235, align 8
  store %struct.Memory* %loadMem1_424384, %struct.Memory** %MEMORY
  %loadMem2_424384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_424384 = load i64, i64* %3
  %call2_424384 = call %struct.Memory* @sub_4231a0.AddUpSADQuarter(%struct.State* %0, i64 %loadPC_424384, %struct.Memory* %loadMem2_424384)
  store %struct.Memory* %call2_424384, %struct.Memory** %MEMORY
  %loadMem_424389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9237 = getelementptr inbounds %struct.GPR, %struct.GPR* %9236, i32 0, i32 33
  %9238 = getelementptr inbounds %struct.Reg, %struct.Reg* %9237, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %9238 to i64*
  %9239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9240 = getelementptr inbounds %struct.GPR, %struct.GPR* %9239, i32 0, i32 1
  %9241 = getelementptr inbounds %struct.Reg, %struct.Reg* %9240, i32 0, i32 0
  %EAX.i138 = bitcast %union.anon* %9241 to i32*
  %9242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9243 = getelementptr inbounds %struct.GPR, %struct.GPR* %9242, i32 0, i32 15
  %9244 = getelementptr inbounds %struct.Reg, %struct.Reg* %9243, i32 0, i32 0
  %RBP.i139 = bitcast %union.anon* %9244 to i64*
  %9245 = load i64, i64* %RBP.i139
  %9246 = sub i64 %9245, 120
  %9247 = load i32, i32* %EAX.i138
  %9248 = zext i32 %9247 to i64
  %9249 = load i64, i64* %PC.i137
  %9250 = add i64 %9249, 3
  store i64 %9250, i64* %PC.i137
  %9251 = inttoptr i64 %9246 to i32*
  store i32 %9247, i32* %9251
  store %struct.Memory* %loadMem_424389, %struct.Memory** %MEMORY
  %loadMem_42438c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9253 = getelementptr inbounds %struct.GPR, %struct.GPR* %9252, i32 0, i32 33
  %9254 = getelementptr inbounds %struct.Reg, %struct.Reg* %9253, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %9254 to i64*
  %9255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9256 = getelementptr inbounds %struct.GPR, %struct.GPR* %9255, i32 0, i32 21
  %9257 = getelementptr inbounds %struct.Reg, %struct.Reg* %9256, i32 0, i32 0
  %R10.i136 = bitcast %union.anon* %9257 to i64*
  %9258 = load i64, i64* %PC.i135
  %9259 = add i64 %9258, 8
  store i64 %9259, i64* %PC.i135
  %9260 = load i64, i64* bitcast (%G_0x710770_type* @G_0x710770 to i64*)
  store i64 %9260, i64* %R10.i136, align 8
  store %struct.Memory* %loadMem_42438c, %struct.Memory** %MEMORY
  %loadMem_424394 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9262 = getelementptr inbounds %struct.GPR, %struct.GPR* %9261, i32 0, i32 33
  %9263 = getelementptr inbounds %struct.Reg, %struct.Reg* %9262, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %9263 to i64*
  %9264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9265 = getelementptr inbounds %struct.GPR, %struct.GPR* %9264, i32 0, i32 1
  %9266 = getelementptr inbounds %struct.Reg, %struct.Reg* %9265, i32 0, i32 0
  %RAX.i133 = bitcast %union.anon* %9266 to i64*
  %9267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9268 = getelementptr inbounds %struct.GPR, %struct.GPR* %9267, i32 0, i32 15
  %9269 = getelementptr inbounds %struct.Reg, %struct.Reg* %9268, i32 0, i32 0
  %RBP.i134 = bitcast %union.anon* %9269 to i64*
  %9270 = load i64, i64* %RBP.i134
  %9271 = sub i64 %9270, 128
  %9272 = load i64, i64* %PC.i132
  %9273 = add i64 %9272, 3
  store i64 %9273, i64* %PC.i132
  %9274 = inttoptr i64 %9271 to i32*
  %9275 = load i32, i32* %9274
  %9276 = zext i32 %9275 to i64
  store i64 %9276, i64* %RAX.i133, align 8
  store %struct.Memory* %loadMem_424394, %struct.Memory** %MEMORY
  %loadMem_424397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9278 = getelementptr inbounds %struct.GPR, %struct.GPR* %9277, i32 0, i32 33
  %9279 = getelementptr inbounds %struct.Reg, %struct.Reg* %9278, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %9279 to i64*
  %9280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9281 = getelementptr inbounds %struct.GPR, %struct.GPR* %9280, i32 0, i32 15
  %9282 = getelementptr inbounds %struct.Reg, %struct.Reg* %9281, i32 0, i32 0
  %RBP.i130 = bitcast %union.anon* %9282 to i64*
  %9283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9284 = getelementptr inbounds %struct.GPR, %struct.GPR* %9283, i32 0, i32 23
  %9285 = getelementptr inbounds %struct.Reg, %struct.Reg* %9284, i32 0, i32 0
  %R11.i131 = bitcast %union.anon* %9285 to i64*
  %9286 = load i64, i64* %RBP.i130
  %9287 = sub i64 %9286, 88
  %9288 = load i64, i64* %PC.i129
  %9289 = add i64 %9288, 4
  store i64 %9289, i64* %PC.i129
  %9290 = inttoptr i64 %9287 to i64*
  %9291 = load i64, i64* %9290
  store i64 %9291, i64* %R11.i131, align 8
  store %struct.Memory* %loadMem_424397, %struct.Memory** %MEMORY
  %loadMem_42439b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9293 = getelementptr inbounds %struct.GPR, %struct.GPR* %9292, i32 0, i32 33
  %9294 = getelementptr inbounds %struct.Reg, %struct.Reg* %9293, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %9294 to i64*
  %9295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9296 = getelementptr inbounds %struct.GPR, %struct.GPR* %9295, i32 0, i32 5
  %9297 = getelementptr inbounds %struct.Reg, %struct.Reg* %9296, i32 0, i32 0
  %RCX.i127 = bitcast %union.anon* %9297 to i64*
  %9298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9299 = getelementptr inbounds %struct.GPR, %struct.GPR* %9298, i32 0, i32 23
  %9300 = getelementptr inbounds %struct.Reg, %struct.Reg* %9299, i32 0, i32 0
  %R11.i128 = bitcast %union.anon* %9300 to i64*
  %9301 = load i64, i64* %R11.i128
  %9302 = load i64, i64* %PC.i126
  %9303 = add i64 %9302, 4
  store i64 %9303, i64* %PC.i126
  %9304 = inttoptr i64 %9301 to i16*
  %9305 = load i16, i16* %9304
  %9306 = sext i16 %9305 to i64
  %9307 = and i64 %9306, 4294967295
  store i64 %9307, i64* %RCX.i127, align 8
  store %struct.Memory* %loadMem_42439b, %struct.Memory** %MEMORY
  %loadMem_42439f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9309 = getelementptr inbounds %struct.GPR, %struct.GPR* %9308, i32 0, i32 33
  %9310 = getelementptr inbounds %struct.Reg, %struct.Reg* %9309, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %9310 to i64*
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9312 = getelementptr inbounds %struct.GPR, %struct.GPR* %9311, i32 0, i32 5
  %9313 = getelementptr inbounds %struct.Reg, %struct.Reg* %9312, i32 0, i32 0
  %ECX.i124 = bitcast %union.anon* %9313 to i32*
  %9314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9315 = getelementptr inbounds %struct.GPR, %struct.GPR* %9314, i32 0, i32 1
  %9316 = getelementptr inbounds %struct.Reg, %struct.Reg* %9315, i32 0, i32 0
  %RAX.i125 = bitcast %union.anon* %9316 to i64*
  %9317 = load i64, i64* %RAX.i125
  %9318 = load i32, i32* %ECX.i124
  %9319 = zext i32 %9318 to i64
  %9320 = load i64, i64* %PC.i123
  %9321 = add i64 %9320, 2
  store i64 %9321, i64* %PC.i123
  %9322 = trunc i64 %9317 to i32
  %9323 = sub i32 %9322, %9318
  %9324 = zext i32 %9323 to i64
  store i64 %9324, i64* %RAX.i125, align 8
  %9325 = icmp ult i32 %9322, %9318
  %9326 = zext i1 %9325 to i8
  %9327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9326, i8* %9327, align 1
  %9328 = and i32 %9323, 255
  %9329 = call i32 @llvm.ctpop.i32(i32 %9328)
  %9330 = trunc i32 %9329 to i8
  %9331 = and i8 %9330, 1
  %9332 = xor i8 %9331, 1
  %9333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9332, i8* %9333, align 1
  %9334 = xor i64 %9319, %9317
  %9335 = trunc i64 %9334 to i32
  %9336 = xor i32 %9335, %9323
  %9337 = lshr i32 %9336, 4
  %9338 = trunc i32 %9337 to i8
  %9339 = and i8 %9338, 1
  %9340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9339, i8* %9340, align 1
  %9341 = icmp eq i32 %9323, 0
  %9342 = zext i1 %9341 to i8
  %9343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9342, i8* %9343, align 1
  %9344 = lshr i32 %9323, 31
  %9345 = trunc i32 %9344 to i8
  %9346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9345, i8* %9346, align 1
  %9347 = lshr i32 %9322, 31
  %9348 = lshr i32 %9318, 31
  %9349 = xor i32 %9348, %9347
  %9350 = xor i32 %9344, %9347
  %9351 = add i32 %9350, %9349
  %9352 = icmp eq i32 %9351, 2
  %9353 = zext i1 %9352 to i8
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9353, i8* %9354, align 1
  store %struct.Memory* %loadMem_42439f, %struct.Memory** %MEMORY
  %loadMem_4243a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9356 = getelementptr inbounds %struct.GPR, %struct.GPR* %9355, i32 0, i32 33
  %9357 = getelementptr inbounds %struct.Reg, %struct.Reg* %9356, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %9357 to i64*
  %9358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9359 = getelementptr inbounds %struct.GPR, %struct.GPR* %9358, i32 0, i32 1
  %9360 = getelementptr inbounds %struct.Reg, %struct.Reg* %9359, i32 0, i32 0
  %RAX.i121 = bitcast %union.anon* %9360 to i64*
  %9361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9362 = getelementptr inbounds %struct.GPR, %struct.GPR* %9361, i32 0, i32 15
  %9363 = getelementptr inbounds %struct.Reg, %struct.Reg* %9362, i32 0, i32 0
  %RBP.i122 = bitcast %union.anon* %9363 to i64*
  %9364 = load i64, i64* %RAX.i121
  %9365 = load i64, i64* %RBP.i122
  %9366 = sub i64 %9365, 180
  %9367 = load i64, i64* %PC.i120
  %9368 = add i64 %9367, 6
  store i64 %9368, i64* %PC.i120
  %9369 = trunc i64 %9364 to i32
  %9370 = inttoptr i64 %9366 to i32*
  %9371 = load i32, i32* %9370
  %9372 = add i32 %9371, %9369
  %9373 = zext i32 %9372 to i64
  store i64 %9373, i64* %RAX.i121, align 8
  %9374 = icmp ult i32 %9372, %9369
  %9375 = icmp ult i32 %9372, %9371
  %9376 = or i1 %9374, %9375
  %9377 = zext i1 %9376 to i8
  %9378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9377, i8* %9378, align 1
  %9379 = and i32 %9372, 255
  %9380 = call i32 @llvm.ctpop.i32(i32 %9379)
  %9381 = trunc i32 %9380 to i8
  %9382 = and i8 %9381, 1
  %9383 = xor i8 %9382, 1
  %9384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9383, i8* %9384, align 1
  %9385 = xor i32 %9371, %9369
  %9386 = xor i32 %9385, %9372
  %9387 = lshr i32 %9386, 4
  %9388 = trunc i32 %9387 to i8
  %9389 = and i8 %9388, 1
  %9390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9389, i8* %9390, align 1
  %9391 = icmp eq i32 %9372, 0
  %9392 = zext i1 %9391 to i8
  %9393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9392, i8* %9393, align 1
  %9394 = lshr i32 %9372, 31
  %9395 = trunc i32 %9394 to i8
  %9396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9395, i8* %9396, align 1
  %9397 = lshr i32 %9369, 31
  %9398 = lshr i32 %9371, 31
  %9399 = xor i32 %9394, %9397
  %9400 = xor i32 %9394, %9398
  %9401 = add i32 %9399, %9400
  %9402 = icmp eq i32 %9401, 2
  %9403 = zext i1 %9402 to i8
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9403, i8* %9404, align 1
  store %struct.Memory* %loadMem_4243a1, %struct.Memory** %MEMORY
  %loadMem_4243a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9406 = getelementptr inbounds %struct.GPR, %struct.GPR* %9405, i32 0, i32 33
  %9407 = getelementptr inbounds %struct.Reg, %struct.Reg* %9406, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %9407 to i64*
  %9408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9409 = getelementptr inbounds %struct.GPR, %struct.GPR* %9408, i32 0, i32 1
  %9410 = getelementptr inbounds %struct.Reg, %struct.Reg* %9409, i32 0, i32 0
  %EAX.i118 = bitcast %union.anon* %9410 to i32*
  %9411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9412 = getelementptr inbounds %struct.GPR, %struct.GPR* %9411, i32 0, i32 23
  %9413 = getelementptr inbounds %struct.Reg, %struct.Reg* %9412, i32 0, i32 0
  %R11.i119 = bitcast %union.anon* %9413 to i64*
  %9414 = load i32, i32* %EAX.i118
  %9415 = zext i32 %9414 to i64
  %9416 = load i64, i64* %PC.i117
  %9417 = add i64 %9416, 3
  store i64 %9417, i64* %PC.i117
  %9418 = shl i64 %9415, 32
  %9419 = ashr exact i64 %9418, 32
  store i64 %9419, i64* %R11.i119, align 8
  store %struct.Memory* %loadMem_4243a7, %struct.Memory** %MEMORY
  %loadMem_4243aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9421 = getelementptr inbounds %struct.GPR, %struct.GPR* %9420, i32 0, i32 33
  %9422 = getelementptr inbounds %struct.Reg, %struct.Reg* %9421, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %9422 to i64*
  %9423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9424 = getelementptr inbounds %struct.GPR, %struct.GPR* %9423, i32 0, i32 21
  %9425 = getelementptr inbounds %struct.Reg, %struct.Reg* %9424, i32 0, i32 0
  %R10.i115 = bitcast %union.anon* %9425 to i64*
  %9426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9427 = getelementptr inbounds %struct.GPR, %struct.GPR* %9426, i32 0, i32 23
  %9428 = getelementptr inbounds %struct.Reg, %struct.Reg* %9427, i32 0, i32 0
  %R11.i116 = bitcast %union.anon* %9428 to i64*
  %9429 = load i64, i64* %R10.i115
  %9430 = load i64, i64* %R11.i116
  %9431 = mul i64 %9430, 8
  %9432 = add i64 %9431, %9429
  %9433 = load i64, i64* %PC.i114
  %9434 = add i64 %9433, 4
  store i64 %9434, i64* %PC.i114
  %9435 = inttoptr i64 %9432 to i64*
  %9436 = load i64, i64* %9435
  store i64 %9436, i64* %R10.i115, align 8
  store %struct.Memory* %loadMem_4243aa, %struct.Memory** %MEMORY
  %loadMem_4243ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %9437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9438 = getelementptr inbounds %struct.GPR, %struct.GPR* %9437, i32 0, i32 33
  %9439 = getelementptr inbounds %struct.Reg, %struct.Reg* %9438, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %9439 to i64*
  %9440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9441 = getelementptr inbounds %struct.GPR, %struct.GPR* %9440, i32 0, i32 1
  %9442 = getelementptr inbounds %struct.Reg, %struct.Reg* %9441, i32 0, i32 0
  %RAX.i112 = bitcast %union.anon* %9442 to i64*
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9444 = getelementptr inbounds %struct.GPR, %struct.GPR* %9443, i32 0, i32 15
  %9445 = getelementptr inbounds %struct.Reg, %struct.Reg* %9444, i32 0, i32 0
  %RBP.i113 = bitcast %union.anon* %9445 to i64*
  %9446 = load i64, i64* %RBP.i113
  %9447 = sub i64 %9446, 124
  %9448 = load i64, i64* %PC.i111
  %9449 = add i64 %9448, 3
  store i64 %9449, i64* %PC.i111
  %9450 = inttoptr i64 %9447 to i32*
  %9451 = load i32, i32* %9450
  %9452 = zext i32 %9451 to i64
  store i64 %9452, i64* %RAX.i112, align 8
  store %struct.Memory* %loadMem_4243ae, %struct.Memory** %MEMORY
  %loadMem_4243b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9454 = getelementptr inbounds %struct.GPR, %struct.GPR* %9453, i32 0, i32 33
  %9455 = getelementptr inbounds %struct.Reg, %struct.Reg* %9454, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %9455 to i64*
  %9456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9457 = getelementptr inbounds %struct.GPR, %struct.GPR* %9456, i32 0, i32 15
  %9458 = getelementptr inbounds %struct.Reg, %struct.Reg* %9457, i32 0, i32 0
  %RBP.i109 = bitcast %union.anon* %9458 to i64*
  %9459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9460 = getelementptr inbounds %struct.GPR, %struct.GPR* %9459, i32 0, i32 23
  %9461 = getelementptr inbounds %struct.Reg, %struct.Reg* %9460, i32 0, i32 0
  %R11.i110 = bitcast %union.anon* %9461 to i64*
  %9462 = load i64, i64* %RBP.i109
  %9463 = sub i64 %9462, 80
  %9464 = load i64, i64* %PC.i108
  %9465 = add i64 %9464, 4
  store i64 %9465, i64* %PC.i108
  %9466 = inttoptr i64 %9463 to i64*
  %9467 = load i64, i64* %9466
  store i64 %9467, i64* %R11.i110, align 8
  store %struct.Memory* %loadMem_4243b1, %struct.Memory** %MEMORY
  %loadMem_4243b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9469 = getelementptr inbounds %struct.GPR, %struct.GPR* %9468, i32 0, i32 33
  %9470 = getelementptr inbounds %struct.Reg, %struct.Reg* %9469, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %9470 to i64*
  %9471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9472 = getelementptr inbounds %struct.GPR, %struct.GPR* %9471, i32 0, i32 5
  %9473 = getelementptr inbounds %struct.Reg, %struct.Reg* %9472, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %9473 to i64*
  %9474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9475 = getelementptr inbounds %struct.GPR, %struct.GPR* %9474, i32 0, i32 23
  %9476 = getelementptr inbounds %struct.Reg, %struct.Reg* %9475, i32 0, i32 0
  %R11.i107 = bitcast %union.anon* %9476 to i64*
  %9477 = load i64, i64* %R11.i107
  %9478 = load i64, i64* %PC.i106
  %9479 = add i64 %9478, 4
  store i64 %9479, i64* %PC.i106
  %9480 = inttoptr i64 %9477 to i16*
  %9481 = load i16, i16* %9480
  %9482 = sext i16 %9481 to i64
  %9483 = and i64 %9482, 4294967295
  store i64 %9483, i64* %RCX.i, align 8
  store %struct.Memory* %loadMem_4243b5, %struct.Memory** %MEMORY
  %loadMem_4243b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9485 = getelementptr inbounds %struct.GPR, %struct.GPR* %9484, i32 0, i32 33
  %9486 = getelementptr inbounds %struct.Reg, %struct.Reg* %9485, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %9486 to i64*
  %9487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9488 = getelementptr inbounds %struct.GPR, %struct.GPR* %9487, i32 0, i32 5
  %9489 = getelementptr inbounds %struct.Reg, %struct.Reg* %9488, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %9489 to i32*
  %9490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9491 = getelementptr inbounds %struct.GPR, %struct.GPR* %9490, i32 0, i32 1
  %9492 = getelementptr inbounds %struct.Reg, %struct.Reg* %9491, i32 0, i32 0
  %RAX.i105 = bitcast %union.anon* %9492 to i64*
  %9493 = load i64, i64* %RAX.i105
  %9494 = load i32, i32* %ECX.i
  %9495 = zext i32 %9494 to i64
  %9496 = load i64, i64* %PC.i104
  %9497 = add i64 %9496, 2
  store i64 %9497, i64* %PC.i104
  %9498 = trunc i64 %9493 to i32
  %9499 = sub i32 %9498, %9494
  %9500 = zext i32 %9499 to i64
  store i64 %9500, i64* %RAX.i105, align 8
  %9501 = icmp ult i32 %9498, %9494
  %9502 = zext i1 %9501 to i8
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9502, i8* %9503, align 1
  %9504 = and i32 %9499, 255
  %9505 = call i32 @llvm.ctpop.i32(i32 %9504)
  %9506 = trunc i32 %9505 to i8
  %9507 = and i8 %9506, 1
  %9508 = xor i8 %9507, 1
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9508, i8* %9509, align 1
  %9510 = xor i64 %9495, %9493
  %9511 = trunc i64 %9510 to i32
  %9512 = xor i32 %9511, %9499
  %9513 = lshr i32 %9512, 4
  %9514 = trunc i32 %9513 to i8
  %9515 = and i8 %9514, 1
  %9516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9515, i8* %9516, align 1
  %9517 = icmp eq i32 %9499, 0
  %9518 = zext i1 %9517 to i8
  %9519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9518, i8* %9519, align 1
  %9520 = lshr i32 %9499, 31
  %9521 = trunc i32 %9520 to i8
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9521, i8* %9522, align 1
  %9523 = lshr i32 %9498, 31
  %9524 = lshr i32 %9494, 31
  %9525 = xor i32 %9524, %9523
  %9526 = xor i32 %9520, %9523
  %9527 = add i32 %9526, %9525
  %9528 = icmp eq i32 %9527, 2
  %9529 = zext i1 %9528 to i8
  %9530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9529, i8* %9530, align 1
  store %struct.Memory* %loadMem_4243b9, %struct.Memory** %MEMORY
  %loadMem_4243bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9532 = getelementptr inbounds %struct.GPR, %struct.GPR* %9531, i32 0, i32 33
  %9533 = getelementptr inbounds %struct.Reg, %struct.Reg* %9532, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %9533 to i64*
  %9534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9535 = getelementptr inbounds %struct.GPR, %struct.GPR* %9534, i32 0, i32 1
  %9536 = getelementptr inbounds %struct.Reg, %struct.Reg* %9535, i32 0, i32 0
  %RAX.i102 = bitcast %union.anon* %9536 to i64*
  %9537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9538 = getelementptr inbounds %struct.GPR, %struct.GPR* %9537, i32 0, i32 15
  %9539 = getelementptr inbounds %struct.Reg, %struct.Reg* %9538, i32 0, i32 0
  %RBP.i103 = bitcast %union.anon* %9539 to i64*
  %9540 = load i64, i64* %RAX.i102
  %9541 = load i64, i64* %RBP.i103
  %9542 = sub i64 %9541, 180
  %9543 = load i64, i64* %PC.i101
  %9544 = add i64 %9543, 6
  store i64 %9544, i64* %PC.i101
  %9545 = trunc i64 %9540 to i32
  %9546 = inttoptr i64 %9542 to i32*
  %9547 = load i32, i32* %9546
  %9548 = add i32 %9547, %9545
  %9549 = zext i32 %9548 to i64
  store i64 %9549, i64* %RAX.i102, align 8
  %9550 = icmp ult i32 %9548, %9545
  %9551 = icmp ult i32 %9548, %9547
  %9552 = or i1 %9550, %9551
  %9553 = zext i1 %9552 to i8
  %9554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9553, i8* %9554, align 1
  %9555 = and i32 %9548, 255
  %9556 = call i32 @llvm.ctpop.i32(i32 %9555)
  %9557 = trunc i32 %9556 to i8
  %9558 = and i8 %9557, 1
  %9559 = xor i8 %9558, 1
  %9560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9559, i8* %9560, align 1
  %9561 = xor i32 %9547, %9545
  %9562 = xor i32 %9561, %9548
  %9563 = lshr i32 %9562, 4
  %9564 = trunc i32 %9563 to i8
  %9565 = and i8 %9564, 1
  %9566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9565, i8* %9566, align 1
  %9567 = icmp eq i32 %9548, 0
  %9568 = zext i1 %9567 to i8
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9568, i8* %9569, align 1
  %9570 = lshr i32 %9548, 31
  %9571 = trunc i32 %9570 to i8
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9571, i8* %9572, align 1
  %9573 = lshr i32 %9545, 31
  %9574 = lshr i32 %9547, 31
  %9575 = xor i32 %9570, %9573
  %9576 = xor i32 %9570, %9574
  %9577 = add i32 %9575, %9576
  %9578 = icmp eq i32 %9577, 2
  %9579 = zext i1 %9578 to i8
  %9580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9579, i8* %9580, align 1
  store %struct.Memory* %loadMem_4243bb, %struct.Memory** %MEMORY
  %loadMem_4243c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9582 = getelementptr inbounds %struct.GPR, %struct.GPR* %9581, i32 0, i32 33
  %9583 = getelementptr inbounds %struct.Reg, %struct.Reg* %9582, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %9583 to i64*
  %9584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9585 = getelementptr inbounds %struct.GPR, %struct.GPR* %9584, i32 0, i32 1
  %9586 = getelementptr inbounds %struct.Reg, %struct.Reg* %9585, i32 0, i32 0
  %EAX.i99 = bitcast %union.anon* %9586 to i32*
  %9587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9588 = getelementptr inbounds %struct.GPR, %struct.GPR* %9587, i32 0, i32 23
  %9589 = getelementptr inbounds %struct.Reg, %struct.Reg* %9588, i32 0, i32 0
  %R11.i100 = bitcast %union.anon* %9589 to i64*
  %9590 = load i32, i32* %EAX.i99
  %9591 = zext i32 %9590 to i64
  %9592 = load i64, i64* %PC.i98
  %9593 = add i64 %9592, 3
  store i64 %9593, i64* %PC.i98
  %9594 = shl i64 %9591, 32
  %9595 = ashr exact i64 %9594, 32
  store i64 %9595, i64* %R11.i100, align 8
  store %struct.Memory* %loadMem_4243c1, %struct.Memory** %MEMORY
  %loadMem_4243c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9597 = getelementptr inbounds %struct.GPR, %struct.GPR* %9596, i32 0, i32 33
  %9598 = getelementptr inbounds %struct.Reg, %struct.Reg* %9597, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %9598 to i64*
  %9599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9600 = getelementptr inbounds %struct.GPR, %struct.GPR* %9599, i32 0, i32 21
  %9601 = getelementptr inbounds %struct.Reg, %struct.Reg* %9600, i32 0, i32 0
  %R10.i = bitcast %union.anon* %9601 to i64*
  %9602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9603 = getelementptr inbounds %struct.GPR, %struct.GPR* %9602, i32 0, i32 23
  %9604 = getelementptr inbounds %struct.Reg, %struct.Reg* %9603, i32 0, i32 0
  %R11.i = bitcast %union.anon* %9604 to i64*
  %9605 = load i64, i64* %R10.i
  %9606 = load i64, i64* %R11.i
  %9607 = add i64 %9606, %9605
  %9608 = load i64, i64* %PC.i97
  %9609 = add i64 %9608, 5
  store i64 %9609, i64* %PC.i97
  %9610 = inttoptr i64 %9607 to i8*
  store i8 1, i8* %9610
  store %struct.Memory* %loadMem_4243c4, %struct.Memory** %MEMORY
  %loadMem_4243c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9612 = getelementptr inbounds %struct.GPR, %struct.GPR* %9611, i32 0, i32 33
  %9613 = getelementptr inbounds %struct.Reg, %struct.Reg* %9612, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %9613 to i64*
  %9614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9615 = getelementptr inbounds %struct.GPR, %struct.GPR* %9614, i32 0, i32 1
  %9616 = getelementptr inbounds %struct.Reg, %struct.Reg* %9615, i32 0, i32 0
  %RAX.i95 = bitcast %union.anon* %9616 to i64*
  %9617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9618 = getelementptr inbounds %struct.GPR, %struct.GPR* %9617, i32 0, i32 15
  %9619 = getelementptr inbounds %struct.Reg, %struct.Reg* %9618, i32 0, i32 0
  %RBP.i96 = bitcast %union.anon* %9619 to i64*
  %9620 = load i64, i64* %RBP.i96
  %9621 = sub i64 %9620, 120
  %9622 = load i64, i64* %PC.i94
  %9623 = add i64 %9622, 3
  store i64 %9623, i64* %PC.i94
  %9624 = inttoptr i64 %9621 to i32*
  %9625 = load i32, i32* %9624
  %9626 = zext i32 %9625 to i64
  store i64 %9626, i64* %RAX.i95, align 8
  store %struct.Memory* %loadMem_4243c9, %struct.Memory** %MEMORY
  %loadMem_4243cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9628 = getelementptr inbounds %struct.GPR, %struct.GPR* %9627, i32 0, i32 33
  %9629 = getelementptr inbounds %struct.Reg, %struct.Reg* %9628, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %9629 to i64*
  %9630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9631 = getelementptr inbounds %struct.GPR, %struct.GPR* %9630, i32 0, i32 1
  %9632 = getelementptr inbounds %struct.Reg, %struct.Reg* %9631, i32 0, i32 0
  %EAX.i92 = bitcast %union.anon* %9632 to i32*
  %9633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9634 = getelementptr inbounds %struct.GPR, %struct.GPR* %9633, i32 0, i32 15
  %9635 = getelementptr inbounds %struct.Reg, %struct.Reg* %9634, i32 0, i32 0
  %RBP.i93 = bitcast %union.anon* %9635 to i64*
  %9636 = load i32, i32* %EAX.i92
  %9637 = zext i32 %9636 to i64
  %9638 = load i64, i64* %RBP.i93
  %9639 = sub i64 %9638, 100
  %9640 = load i64, i64* %PC.i91
  %9641 = add i64 %9640, 3
  store i64 %9641, i64* %PC.i91
  %9642 = inttoptr i64 %9639 to i32*
  %9643 = load i32, i32* %9642
  %9644 = sub i32 %9636, %9643
  %9645 = icmp ult i32 %9636, %9643
  %9646 = zext i1 %9645 to i8
  %9647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9646, i8* %9647, align 1
  %9648 = and i32 %9644, 255
  %9649 = call i32 @llvm.ctpop.i32(i32 %9648)
  %9650 = trunc i32 %9649 to i8
  %9651 = and i8 %9650, 1
  %9652 = xor i8 %9651, 1
  %9653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9652, i8* %9653, align 1
  %9654 = xor i32 %9643, %9636
  %9655 = xor i32 %9654, %9644
  %9656 = lshr i32 %9655, 4
  %9657 = trunc i32 %9656 to i8
  %9658 = and i8 %9657, 1
  %9659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9658, i8* %9659, align 1
  %9660 = icmp eq i32 %9644, 0
  %9661 = zext i1 %9660 to i8
  %9662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9661, i8* %9662, align 1
  %9663 = lshr i32 %9644, 31
  %9664 = trunc i32 %9663 to i8
  %9665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9664, i8* %9665, align 1
  %9666 = lshr i32 %9636, 31
  %9667 = lshr i32 %9643, 31
  %9668 = xor i32 %9667, %9666
  %9669 = xor i32 %9663, %9666
  %9670 = add i32 %9669, %9668
  %9671 = icmp eq i32 %9670, 2
  %9672 = zext i1 %9671 to i8
  %9673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9672, i8* %9673, align 1
  store %struct.Memory* %loadMem_4243cc, %struct.Memory** %MEMORY
  %loadMem_4243cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9675 = getelementptr inbounds %struct.GPR, %struct.GPR* %9674, i32 0, i32 33
  %9676 = getelementptr inbounds %struct.Reg, %struct.Reg* %9675, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %9676 to i64*
  %9677 = load i64, i64* %PC.i90
  %9678 = add i64 %9677, 40
  %9679 = load i64, i64* %PC.i90
  %9680 = add i64 %9679, 6
  %9681 = load i64, i64* %PC.i90
  %9682 = add i64 %9681, 6
  store i64 %9682, i64* %PC.i90
  %9683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9684 = load i8, i8* %9683, align 1
  %9685 = icmp ne i8 %9684, 0
  %9686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9687 = load i8, i8* %9686, align 1
  %9688 = icmp ne i8 %9687, 0
  %9689 = xor i1 %9685, %9688
  %9690 = xor i1 %9689, true
  %9691 = zext i1 %9690 to i8
  store i8 %9691, i8* %BRANCH_TAKEN, align 1
  %9692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9693 = select i1 %9689, i64 %9680, i64 %9678
  store i64 %9693, i64* %9692, align 8
  store %struct.Memory* %loadMem_4243cf, %struct.Memory** %MEMORY
  %loadBr_4243cf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4243cf = icmp eq i8 %loadBr_4243cf, 1
  br i1 %cmpBr_4243cf, label %block_.L_4243f7, label %block_4243d5

block_4243d5:                                     ; preds = %routine_shll__cl___esi.exit
  %loadMem_4243d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9695 = getelementptr inbounds %struct.GPR, %struct.GPR* %9694, i32 0, i32 33
  %9696 = getelementptr inbounds %struct.Reg, %struct.Reg* %9695, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %9696 to i64*
  %9697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9698 = getelementptr inbounds %struct.GPR, %struct.GPR* %9697, i32 0, i32 1
  %9699 = getelementptr inbounds %struct.Reg, %struct.Reg* %9698, i32 0, i32 0
  %RAX.i88 = bitcast %union.anon* %9699 to i64*
  %9700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9701 = getelementptr inbounds %struct.GPR, %struct.GPR* %9700, i32 0, i32 15
  %9702 = getelementptr inbounds %struct.Reg, %struct.Reg* %9701, i32 0, i32 0
  %RBP.i89 = bitcast %union.anon* %9702 to i64*
  %9703 = load i64, i64* %RBP.i89
  %9704 = sub i64 %9703, 120
  %9705 = load i64, i64* %PC.i87
  %9706 = add i64 %9705, 3
  store i64 %9706, i64* %PC.i87
  %9707 = inttoptr i64 %9704 to i32*
  %9708 = load i32, i32* %9707
  %9709 = zext i32 %9708 to i64
  store i64 %9709, i64* %RAX.i88, align 8
  store %struct.Memory* %loadMem_4243d5, %struct.Memory** %MEMORY
  %loadMem_4243d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9711 = getelementptr inbounds %struct.GPR, %struct.GPR* %9710, i32 0, i32 33
  %9712 = getelementptr inbounds %struct.Reg, %struct.Reg* %9711, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %9712 to i64*
  %9713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9714 = getelementptr inbounds %struct.GPR, %struct.GPR* %9713, i32 0, i32 1
  %9715 = getelementptr inbounds %struct.Reg, %struct.Reg* %9714, i32 0, i32 0
  %EAX.i85 = bitcast %union.anon* %9715 to i32*
  %9716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9717 = getelementptr inbounds %struct.GPR, %struct.GPR* %9716, i32 0, i32 15
  %9718 = getelementptr inbounds %struct.Reg, %struct.Reg* %9717, i32 0, i32 0
  %RBP.i86 = bitcast %union.anon* %9718 to i64*
  %9719 = load i64, i64* %RBP.i86
  %9720 = sub i64 %9719, 100
  %9721 = load i32, i32* %EAX.i85
  %9722 = zext i32 %9721 to i64
  %9723 = load i64, i64* %PC.i84
  %9724 = add i64 %9723, 3
  store i64 %9724, i64* %PC.i84
  %9725 = inttoptr i64 %9720 to i32*
  store i32 %9721, i32* %9725
  store %struct.Memory* %loadMem_4243d8, %struct.Memory** %MEMORY
  %loadMem_4243db = load %struct.Memory*, %struct.Memory** %MEMORY
  %9726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9727 = getelementptr inbounds %struct.GPR, %struct.GPR* %9726, i32 0, i32 33
  %9728 = getelementptr inbounds %struct.Reg, %struct.Reg* %9727, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %9728 to i64*
  %9729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9730 = getelementptr inbounds %struct.GPR, %struct.GPR* %9729, i32 0, i32 1
  %9731 = getelementptr inbounds %struct.Reg, %struct.Reg* %9730, i32 0, i32 0
  %RAX.i82 = bitcast %union.anon* %9731 to i64*
  %9732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9733 = getelementptr inbounds %struct.GPR, %struct.GPR* %9732, i32 0, i32 15
  %9734 = getelementptr inbounds %struct.Reg, %struct.Reg* %9733, i32 0, i32 0
  %RBP.i83 = bitcast %union.anon* %9734 to i64*
  %9735 = load i64, i64* %RBP.i83
  %9736 = sub i64 %9735, 124
  %9737 = load i64, i64* %PC.i81
  %9738 = add i64 %9737, 3
  store i64 %9738, i64* %PC.i81
  %9739 = inttoptr i64 %9736 to i32*
  %9740 = load i32, i32* %9739
  %9741 = zext i32 %9740 to i64
  store i64 %9741, i64* %RAX.i82, align 8
  store %struct.Memory* %loadMem_4243db, %struct.Memory** %MEMORY
  %loadMem_4243de = load %struct.Memory*, %struct.Memory** %MEMORY
  %9742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9743 = getelementptr inbounds %struct.GPR, %struct.GPR* %9742, i32 0, i32 33
  %9744 = getelementptr inbounds %struct.Reg, %struct.Reg* %9743, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %9744 to i64*
  %9745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9746 = getelementptr inbounds %struct.GPR, %struct.GPR* %9745, i32 0, i32 1
  %9747 = getelementptr inbounds %struct.Reg, %struct.Reg* %9746, i32 0, i32 0
  %EAX.i79 = bitcast %union.anon* %9747 to i32*
  %9748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9749 = getelementptr inbounds %struct.GPR, %struct.GPR* %9748, i32 0, i32 15
  %9750 = getelementptr inbounds %struct.Reg, %struct.Reg* %9749, i32 0, i32 0
  %RBP.i80 = bitcast %union.anon* %9750 to i64*
  %9751 = load i64, i64* %RBP.i80
  %9752 = sub i64 %9751, 204
  %9753 = load i32, i32* %EAX.i79
  %9754 = zext i32 %9753 to i64
  %9755 = load i64, i64* %PC.i78
  %9756 = add i64 %9755, 6
  store i64 %9756, i64* %PC.i78
  %9757 = inttoptr i64 %9752 to i32*
  store i32 %9753, i32* %9757
  store %struct.Memory* %loadMem_4243de, %struct.Memory** %MEMORY
  %loadMem_4243e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9759 = getelementptr inbounds %struct.GPR, %struct.GPR* %9758, i32 0, i32 33
  %9760 = getelementptr inbounds %struct.Reg, %struct.Reg* %9759, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %9760 to i64*
  %9761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9762 = getelementptr inbounds %struct.GPR, %struct.GPR* %9761, i32 0, i32 1
  %9763 = getelementptr inbounds %struct.Reg, %struct.Reg* %9762, i32 0, i32 0
  %RAX.i76 = bitcast %union.anon* %9763 to i64*
  %9764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9765 = getelementptr inbounds %struct.GPR, %struct.GPR* %9764, i32 0, i32 15
  %9766 = getelementptr inbounds %struct.Reg, %struct.Reg* %9765, i32 0, i32 0
  %RBP.i77 = bitcast %union.anon* %9766 to i64*
  %9767 = load i64, i64* %RBP.i77
  %9768 = sub i64 %9767, 128
  %9769 = load i64, i64* %PC.i75
  %9770 = add i64 %9769, 3
  store i64 %9770, i64* %PC.i75
  %9771 = inttoptr i64 %9768 to i32*
  %9772 = load i32, i32* %9771
  %9773 = zext i32 %9772 to i64
  store i64 %9773, i64* %RAX.i76, align 8
  store %struct.Memory* %loadMem_4243e4, %struct.Memory** %MEMORY
  %loadMem_4243e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9775 = getelementptr inbounds %struct.GPR, %struct.GPR* %9774, i32 0, i32 33
  %9776 = getelementptr inbounds %struct.Reg, %struct.Reg* %9775, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %9776 to i64*
  %9777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9778 = getelementptr inbounds %struct.GPR, %struct.GPR* %9777, i32 0, i32 1
  %9779 = getelementptr inbounds %struct.Reg, %struct.Reg* %9778, i32 0, i32 0
  %EAX.i73 = bitcast %union.anon* %9779 to i32*
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9781 = getelementptr inbounds %struct.GPR, %struct.GPR* %9780, i32 0, i32 15
  %9782 = getelementptr inbounds %struct.Reg, %struct.Reg* %9781, i32 0, i32 0
  %RBP.i74 = bitcast %union.anon* %9782 to i64*
  %9783 = load i64, i64* %RBP.i74
  %9784 = sub i64 %9783, 208
  %9785 = load i32, i32* %EAX.i73
  %9786 = zext i32 %9785 to i64
  %9787 = load i64, i64* %PC.i72
  %9788 = add i64 %9787, 6
  store i64 %9788, i64* %PC.i72
  %9789 = inttoptr i64 %9784 to i32*
  store i32 %9785, i32* %9789
  store %struct.Memory* %loadMem_4243e7, %struct.Memory** %MEMORY
  %loadMem_4243ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9791 = getelementptr inbounds %struct.GPR, %struct.GPR* %9790, i32 0, i32 33
  %9792 = getelementptr inbounds %struct.Reg, %struct.Reg* %9791, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %9792 to i64*
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9794 = getelementptr inbounds %struct.GPR, %struct.GPR* %9793, i32 0, i32 15
  %9795 = getelementptr inbounds %struct.Reg, %struct.Reg* %9794, i32 0, i32 0
  %RBP.i71 = bitcast %union.anon* %9795 to i64*
  %9796 = load i64, i64* %RBP.i71
  %9797 = sub i64 %9796, 224
  %9798 = load i64, i64* %PC.i70
  %9799 = add i64 %9798, 10
  store i64 %9799, i64* %PC.i70
  %9800 = inttoptr i64 %9797 to i32*
  store i32 0, i32* %9800
  store %struct.Memory* %loadMem_4243ed, %struct.Memory** %MEMORY
  br label %block_.L_4243f7

block_.L_4243f7:                                  ; preds = %block_4243d5, %routine_shll__cl___esi.exit
  %loadMem_4243f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9802 = getelementptr inbounds %struct.GPR, %struct.GPR* %9801, i32 0, i32 33
  %9803 = getelementptr inbounds %struct.Reg, %struct.Reg* %9802, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %9803 to i64*
  %9804 = load i64, i64* %PC.i69
  %9805 = add i64 %9804, 5
  %9806 = load i64, i64* %PC.i69
  %9807 = add i64 %9806, 5
  store i64 %9807, i64* %PC.i69
  %9808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9805, i64* %9808, align 8
  store %struct.Memory* %loadMem_4243f7, %struct.Memory** %MEMORY
  br label %block_.L_4243fc

block_.L_4243fc:                                  ; preds = %block_.L_4243f7, %block_424298
  %loadMem_4243fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9810 = getelementptr inbounds %struct.GPR, %struct.GPR* %9809, i32 0, i32 33
  %9811 = getelementptr inbounds %struct.Reg, %struct.Reg* %9810, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %9811 to i64*
  %9812 = load i64, i64* %PC.i68
  %9813 = add i64 %9812, 5
  %9814 = load i64, i64* %PC.i68
  %9815 = add i64 %9814, 5
  store i64 %9815, i64* %PC.i68
  %9816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9813, i64* %9816, align 8
  store %struct.Memory* %loadMem_4243fc, %struct.Memory** %MEMORY
  br label %block_.L_424401

block_.L_424401:                                  ; preds = %block_.L_4243fc, %block_424279, %block_42422c
  %loadMem_424401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9818 = getelementptr inbounds %struct.GPR, %struct.GPR* %9817, i32 0, i32 33
  %9819 = getelementptr inbounds %struct.Reg, %struct.Reg* %9818, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %9819 to i64*
  %9820 = load i64, i64* %PC.i67
  %9821 = add i64 %9820, 5
  %9822 = load i64, i64* %PC.i67
  %9823 = add i64 %9822, 5
  store i64 %9823, i64* %PC.i67
  %9824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9821, i64* %9824, align 8
  store %struct.Memory* %loadMem_424401, %struct.Memory** %MEMORY
  br label %block_.L_424406

block_.L_424406:                                  ; preds = %block_.L_424401
  %loadMem_424406 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9826 = getelementptr inbounds %struct.GPR, %struct.GPR* %9825, i32 0, i32 33
  %9827 = getelementptr inbounds %struct.Reg, %struct.Reg* %9826, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %9827 to i64*
  %9828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9829 = getelementptr inbounds %struct.GPR, %struct.GPR* %9828, i32 0, i32 1
  %9830 = getelementptr inbounds %struct.Reg, %struct.Reg* %9829, i32 0, i32 0
  %RAX.i65 = bitcast %union.anon* %9830 to i64*
  %9831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9832 = getelementptr inbounds %struct.GPR, %struct.GPR* %9831, i32 0, i32 15
  %9833 = getelementptr inbounds %struct.Reg, %struct.Reg* %9832, i32 0, i32 0
  %RBP.i66 = bitcast %union.anon* %9833 to i64*
  %9834 = load i64, i64* %RBP.i66
  %9835 = sub i64 %9834, 200
  %9836 = load i64, i64* %PC.i64
  %9837 = add i64 %9836, 6
  store i64 %9837, i64* %PC.i64
  %9838 = inttoptr i64 %9835 to i32*
  %9839 = load i32, i32* %9838
  %9840 = zext i32 %9839 to i64
  store i64 %9840, i64* %RAX.i65, align 8
  store %struct.Memory* %loadMem_424406, %struct.Memory** %MEMORY
  %loadMem_42440c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9842 = getelementptr inbounds %struct.GPR, %struct.GPR* %9841, i32 0, i32 33
  %9843 = getelementptr inbounds %struct.Reg, %struct.Reg* %9842, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %9843 to i64*
  %9844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9845 = getelementptr inbounds %struct.GPR, %struct.GPR* %9844, i32 0, i32 1
  %9846 = getelementptr inbounds %struct.Reg, %struct.Reg* %9845, i32 0, i32 0
  %RAX.i63 = bitcast %union.anon* %9846 to i64*
  %9847 = load i64, i64* %RAX.i63
  %9848 = load i64, i64* %PC.i62
  %9849 = add i64 %9848, 3
  store i64 %9849, i64* %PC.i62
  %9850 = trunc i64 %9847 to i32
  %9851 = add i32 1, %9850
  %9852 = zext i32 %9851 to i64
  store i64 %9852, i64* %RAX.i63, align 8
  %9853 = icmp ult i32 %9851, %9850
  %9854 = icmp ult i32 %9851, 1
  %9855 = or i1 %9853, %9854
  %9856 = zext i1 %9855 to i8
  %9857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9856, i8* %9857, align 1
  %9858 = and i32 %9851, 255
  %9859 = call i32 @llvm.ctpop.i32(i32 %9858)
  %9860 = trunc i32 %9859 to i8
  %9861 = and i8 %9860, 1
  %9862 = xor i8 %9861, 1
  %9863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9862, i8* %9863, align 1
  %9864 = xor i64 1, %9847
  %9865 = trunc i64 %9864 to i32
  %9866 = xor i32 %9865, %9851
  %9867 = lshr i32 %9866, 4
  %9868 = trunc i32 %9867 to i8
  %9869 = and i8 %9868, 1
  %9870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9869, i8* %9870, align 1
  %9871 = icmp eq i32 %9851, 0
  %9872 = zext i1 %9871 to i8
  %9873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9872, i8* %9873, align 1
  %9874 = lshr i32 %9851, 31
  %9875 = trunc i32 %9874 to i8
  %9876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9875, i8* %9876, align 1
  %9877 = lshr i32 %9850, 31
  %9878 = xor i32 %9874, %9877
  %9879 = add i32 %9878, %9874
  %9880 = icmp eq i32 %9879, 2
  %9881 = zext i1 %9880 to i8
  %9882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9881, i8* %9882, align 1
  store %struct.Memory* %loadMem_42440c, %struct.Memory** %MEMORY
  %loadMem_42440f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9884 = getelementptr inbounds %struct.GPR, %struct.GPR* %9883, i32 0, i32 33
  %9885 = getelementptr inbounds %struct.Reg, %struct.Reg* %9884, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %9885 to i64*
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9887 = getelementptr inbounds %struct.GPR, %struct.GPR* %9886, i32 0, i32 1
  %9888 = getelementptr inbounds %struct.Reg, %struct.Reg* %9887, i32 0, i32 0
  %EAX.i60 = bitcast %union.anon* %9888 to i32*
  %9889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9890 = getelementptr inbounds %struct.GPR, %struct.GPR* %9889, i32 0, i32 15
  %9891 = getelementptr inbounds %struct.Reg, %struct.Reg* %9890, i32 0, i32 0
  %RBP.i61 = bitcast %union.anon* %9891 to i64*
  %9892 = load i64, i64* %RBP.i61
  %9893 = sub i64 %9892, 200
  %9894 = load i32, i32* %EAX.i60
  %9895 = zext i32 %9894 to i64
  %9896 = load i64, i64* %PC.i59
  %9897 = add i64 %9896, 6
  store i64 %9897, i64* %PC.i59
  %9898 = inttoptr i64 %9893 to i32*
  store i32 %9894, i32* %9898
  store %struct.Memory* %loadMem_42440f, %struct.Memory** %MEMORY
  %loadMem_424415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9900 = getelementptr inbounds %struct.GPR, %struct.GPR* %9899, i32 0, i32 33
  %9901 = getelementptr inbounds %struct.Reg, %struct.Reg* %9900, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %9901 to i64*
  %9902 = load i64, i64* %PC.i58
  %9903 = add i64 %9902, -502
  %9904 = load i64, i64* %PC.i58
  %9905 = add i64 %9904, 5
  store i64 %9905, i64* %PC.i58
  %9906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9903, i64* %9906, align 8
  store %struct.Memory* %loadMem_424415, %struct.Memory** %MEMORY
  br label %block_.L_42421f

block_.L_42441a:                                  ; preds = %block_.L_42421f
  %loadMem_42441a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9908 = getelementptr inbounds %struct.GPR, %struct.GPR* %9907, i32 0, i32 33
  %9909 = getelementptr inbounds %struct.Reg, %struct.Reg* %9908, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %9909 to i64*
  %9910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9911 = getelementptr inbounds %struct.GPR, %struct.GPR* %9910, i32 0, i32 1
  %9912 = getelementptr inbounds %struct.Reg, %struct.Reg* %9911, i32 0, i32 0
  %RAX.i56 = bitcast %union.anon* %9912 to i64*
  %9913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9914 = getelementptr inbounds %struct.GPR, %struct.GPR* %9913, i32 0, i32 15
  %9915 = getelementptr inbounds %struct.Reg, %struct.Reg* %9914, i32 0, i32 0
  %RBP.i57 = bitcast %union.anon* %9915 to i64*
  %9916 = load i64, i64* %RBP.i57
  %9917 = sub i64 %9916, 204
  %9918 = load i64, i64* %PC.i55
  %9919 = add i64 %9918, 6
  store i64 %9919, i64* %PC.i55
  %9920 = inttoptr i64 %9917 to i32*
  %9921 = load i32, i32* %9920
  %9922 = zext i32 %9921 to i64
  store i64 %9922, i64* %RAX.i56, align 8
  store %struct.Memory* %loadMem_42441a, %struct.Memory** %MEMORY
  %loadMem_424420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9924 = getelementptr inbounds %struct.GPR, %struct.GPR* %9923, i32 0, i32 33
  %9925 = getelementptr inbounds %struct.Reg, %struct.Reg* %9924, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %9925 to i64*
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9927 = getelementptr inbounds %struct.GPR, %struct.GPR* %9926, i32 0, i32 1
  %9928 = getelementptr inbounds %struct.Reg, %struct.Reg* %9927, i32 0, i32 0
  %EAX.i53 = bitcast %union.anon* %9928 to i32*
  %9929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9930 = getelementptr inbounds %struct.GPR, %struct.GPR* %9929, i32 0, i32 15
  %9931 = getelementptr inbounds %struct.Reg, %struct.Reg* %9930, i32 0, i32 0
  %RBP.i54 = bitcast %union.anon* %9931 to i64*
  %9932 = load i64, i64* %RBP.i54
  %9933 = sub i64 %9932, 184
  %9934 = load i32, i32* %EAX.i53
  %9935 = zext i32 %9934 to i64
  %9936 = load i64, i64* %PC.i52
  %9937 = add i64 %9936, 6
  store i64 %9937, i64* %PC.i52
  %9938 = inttoptr i64 %9933 to i32*
  store i32 %9934, i32* %9938
  store %struct.Memory* %loadMem_424420, %struct.Memory** %MEMORY
  %loadMem_424426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9940 = getelementptr inbounds %struct.GPR, %struct.GPR* %9939, i32 0, i32 33
  %9941 = getelementptr inbounds %struct.Reg, %struct.Reg* %9940, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %9941 to i64*
  %9942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9943 = getelementptr inbounds %struct.GPR, %struct.GPR* %9942, i32 0, i32 1
  %9944 = getelementptr inbounds %struct.Reg, %struct.Reg* %9943, i32 0, i32 0
  %RAX.i50 = bitcast %union.anon* %9944 to i64*
  %9945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9946 = getelementptr inbounds %struct.GPR, %struct.GPR* %9945, i32 0, i32 15
  %9947 = getelementptr inbounds %struct.Reg, %struct.Reg* %9946, i32 0, i32 0
  %RBP.i51 = bitcast %union.anon* %9947 to i64*
  %9948 = load i64, i64* %RBP.i51
  %9949 = sub i64 %9948, 208
  %9950 = load i64, i64* %PC.i49
  %9951 = add i64 %9950, 6
  store i64 %9951, i64* %PC.i49
  %9952 = inttoptr i64 %9949 to i32*
  %9953 = load i32, i32* %9952
  %9954 = zext i32 %9953 to i64
  store i64 %9954, i64* %RAX.i50, align 8
  store %struct.Memory* %loadMem_424426, %struct.Memory** %MEMORY
  %loadMem_42442c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9956 = getelementptr inbounds %struct.GPR, %struct.GPR* %9955, i32 0, i32 33
  %9957 = getelementptr inbounds %struct.Reg, %struct.Reg* %9956, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %9957 to i64*
  %9958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9959 = getelementptr inbounds %struct.GPR, %struct.GPR* %9958, i32 0, i32 1
  %9960 = getelementptr inbounds %struct.Reg, %struct.Reg* %9959, i32 0, i32 0
  %EAX.i47 = bitcast %union.anon* %9960 to i32*
  %9961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9962 = getelementptr inbounds %struct.GPR, %struct.GPR* %9961, i32 0, i32 15
  %9963 = getelementptr inbounds %struct.Reg, %struct.Reg* %9962, i32 0, i32 0
  %RBP.i48 = bitcast %union.anon* %9963 to i64*
  %9964 = load i64, i64* %RBP.i48
  %9965 = sub i64 %9964, 188
  %9966 = load i32, i32* %EAX.i47
  %9967 = zext i32 %9966 to i64
  %9968 = load i64, i64* %PC.i46
  %9969 = add i64 %9968, 6
  store i64 %9969, i64* %PC.i46
  %9970 = inttoptr i64 %9965 to i32*
  store i32 %9966, i32* %9970
  store %struct.Memory* %loadMem_42442c, %struct.Memory** %MEMORY
  %loadMem_424432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9972 = getelementptr inbounds %struct.GPR, %struct.GPR* %9971, i32 0, i32 33
  %9973 = getelementptr inbounds %struct.Reg, %struct.Reg* %9972, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %9973 to i64*
  %9974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9975 = getelementptr inbounds %struct.GPR, %struct.GPR* %9974, i32 0, i32 15
  %9976 = getelementptr inbounds %struct.Reg, %struct.Reg* %9975, i32 0, i32 0
  %RBP.i45 = bitcast %union.anon* %9976 to i64*
  %9977 = load i64, i64* %RBP.i45
  %9978 = sub i64 %9977, 224
  %9979 = load i64, i64* %PC.i44
  %9980 = add i64 %9979, 7
  store i64 %9980, i64* %PC.i44
  %9981 = inttoptr i64 %9978 to i32*
  %9982 = load i32, i32* %9981
  %9983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9983, align 1
  %9984 = and i32 %9982, 255
  %9985 = call i32 @llvm.ctpop.i32(i32 %9984)
  %9986 = trunc i32 %9985 to i8
  %9987 = and i8 %9986, 1
  %9988 = xor i8 %9987, 1
  %9989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9988, i8* %9989, align 1
  %9990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9990, align 1
  %9991 = icmp eq i32 %9982, 0
  %9992 = zext i1 %9991 to i8
  %9993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9992, i8* %9993, align 1
  %9994 = lshr i32 %9982, 31
  %9995 = trunc i32 %9994 to i8
  %9996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9995, i8* %9996, align 1
  %9997 = lshr i32 %9982, 31
  %9998 = xor i32 %9994, %9997
  %9999 = add i32 %9998, %9997
  %10000 = icmp eq i32 %9999, 2
  %10001 = zext i1 %10000 to i8
  %10002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10001, i8* %10002, align 1
  store %struct.Memory* %loadMem_424432, %struct.Memory** %MEMORY
  %loadMem_424439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10004 = getelementptr inbounds %struct.GPR, %struct.GPR* %10003, i32 0, i32 33
  %10005 = getelementptr inbounds %struct.Reg, %struct.Reg* %10004, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %10005 to i64*
  %10006 = load i64, i64* %PC.i43
  %10007 = add i64 %10006, 11
  %10008 = load i64, i64* %PC.i43
  %10009 = add i64 %10008, 6
  %10010 = load i64, i64* %PC.i43
  %10011 = add i64 %10010, 6
  store i64 %10011, i64* %PC.i43
  %10012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10013 = load i8, i8* %10012, align 1
  store i8 %10013, i8* %BRANCH_TAKEN, align 1
  %10014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10015 = icmp ne i8 %10013, 0
  %10016 = select i1 %10015, i64 %10007, i64 %10009
  store i64 %10016, i64* %10014, align 8
  store %struct.Memory* %loadMem_424439, %struct.Memory** %MEMORY
  %loadBr_424439 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_424439 = icmp eq i8 %loadBr_424439, 1
  br i1 %cmpBr_424439, label %block_.L_424444, label %block_42443f

block_42443f:                                     ; preds = %block_.L_42441a
  %loadMem_42443f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10018 = getelementptr inbounds %struct.GPR, %struct.GPR* %10017, i32 0, i32 33
  %10019 = getelementptr inbounds %struct.Reg, %struct.Reg* %10018, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %10019 to i64*
  %10020 = load i64, i64* %PC.i42
  %10021 = add i64 %10020, 30
  %10022 = load i64, i64* %PC.i42
  %10023 = add i64 %10022, 5
  store i64 %10023, i64* %PC.i42
  %10024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10021, i64* %10024, align 8
  store %struct.Memory* %loadMem_42443f, %struct.Memory** %MEMORY
  br label %block_.L_42445d

block_.L_424444:                                  ; preds = %block_.L_42441a
  %loadMem_424444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10026 = getelementptr inbounds %struct.GPR, %struct.GPR* %10025, i32 0, i32 33
  %10027 = getelementptr inbounds %struct.Reg, %struct.Reg* %10026, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %10027 to i64*
  %10028 = load i64, i64* %PC.i41
  %10029 = add i64 %10028, 5
  %10030 = load i64, i64* %PC.i41
  %10031 = add i64 %10030, 5
  store i64 %10031, i64* %PC.i41
  %10032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10029, i64* %10032, align 8
  store %struct.Memory* %loadMem_424444, %struct.Memory** %MEMORY
  br label %block_.L_424449

block_.L_424449:                                  ; preds = %block_.L_424444
  %loadMem_424449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10034 = getelementptr inbounds %struct.GPR, %struct.GPR* %10033, i32 0, i32 33
  %10035 = getelementptr inbounds %struct.Reg, %struct.Reg* %10034, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %10035 to i64*
  %10036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10037 = getelementptr inbounds %struct.GPR, %struct.GPR* %10036, i32 0, i32 1
  %10038 = getelementptr inbounds %struct.Reg, %struct.Reg* %10037, i32 0, i32 0
  %RAX.i39 = bitcast %union.anon* %10038 to i64*
  %10039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10040 = getelementptr inbounds %struct.GPR, %struct.GPR* %10039, i32 0, i32 15
  %10041 = getelementptr inbounds %struct.Reg, %struct.Reg* %10040, i32 0, i32 0
  %RBP.i40 = bitcast %union.anon* %10041 to i64*
  %10042 = load i64, i64* %RBP.i40
  %10043 = sub i64 %10042, 192
  %10044 = load i64, i64* %PC.i38
  %10045 = add i64 %10044, 6
  store i64 %10045, i64* %PC.i38
  %10046 = inttoptr i64 %10043 to i32*
  %10047 = load i32, i32* %10046
  %10048 = zext i32 %10047 to i64
  store i64 %10048, i64* %RAX.i39, align 8
  store %struct.Memory* %loadMem_424449, %struct.Memory** %MEMORY
  %loadMem_42444f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10050 = getelementptr inbounds %struct.GPR, %struct.GPR* %10049, i32 0, i32 33
  %10051 = getelementptr inbounds %struct.Reg, %struct.Reg* %10050, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %10051 to i64*
  %10052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10053 = getelementptr inbounds %struct.GPR, %struct.GPR* %10052, i32 0, i32 1
  %10054 = getelementptr inbounds %struct.Reg, %struct.Reg* %10053, i32 0, i32 0
  %RAX.i37 = bitcast %union.anon* %10054 to i64*
  %10055 = load i64, i64* %RAX.i37
  %10056 = load i64, i64* %PC.i36
  %10057 = add i64 %10056, 3
  store i64 %10057, i64* %PC.i36
  %10058 = trunc i64 %10055 to i32
  %10059 = add i32 1, %10058
  %10060 = zext i32 %10059 to i64
  store i64 %10060, i64* %RAX.i37, align 8
  %10061 = icmp ult i32 %10059, %10058
  %10062 = icmp ult i32 %10059, 1
  %10063 = or i1 %10061, %10062
  %10064 = zext i1 %10063 to i8
  %10065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10064, i8* %10065, align 1
  %10066 = and i32 %10059, 255
  %10067 = call i32 @llvm.ctpop.i32(i32 %10066)
  %10068 = trunc i32 %10067 to i8
  %10069 = and i8 %10068, 1
  %10070 = xor i8 %10069, 1
  %10071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10070, i8* %10071, align 1
  %10072 = xor i64 1, %10055
  %10073 = trunc i64 %10072 to i32
  %10074 = xor i32 %10073, %10059
  %10075 = lshr i32 %10074, 4
  %10076 = trunc i32 %10075 to i8
  %10077 = and i8 %10076, 1
  %10078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10077, i8* %10078, align 1
  %10079 = icmp eq i32 %10059, 0
  %10080 = zext i1 %10079 to i8
  %10081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10080, i8* %10081, align 1
  %10082 = lshr i32 %10059, 31
  %10083 = trunc i32 %10082 to i8
  %10084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10083, i8* %10084, align 1
  %10085 = lshr i32 %10058, 31
  %10086 = xor i32 %10082, %10085
  %10087 = add i32 %10086, %10082
  %10088 = icmp eq i32 %10087, 2
  %10089 = zext i1 %10088 to i8
  %10090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10089, i8* %10090, align 1
  store %struct.Memory* %loadMem_42444f, %struct.Memory** %MEMORY
  %loadMem_424452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10092 = getelementptr inbounds %struct.GPR, %struct.GPR* %10091, i32 0, i32 33
  %10093 = getelementptr inbounds %struct.Reg, %struct.Reg* %10092, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %10093 to i64*
  %10094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10095 = getelementptr inbounds %struct.GPR, %struct.GPR* %10094, i32 0, i32 1
  %10096 = getelementptr inbounds %struct.Reg, %struct.Reg* %10095, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %10096 to i32*
  %10097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10098 = getelementptr inbounds %struct.GPR, %struct.GPR* %10097, i32 0, i32 15
  %10099 = getelementptr inbounds %struct.Reg, %struct.Reg* %10098, i32 0, i32 0
  %RBP.i35 = bitcast %union.anon* %10099 to i64*
  %10100 = load i64, i64* %RBP.i35
  %10101 = sub i64 %10100, 192
  %10102 = load i32, i32* %EAX.i
  %10103 = zext i32 %10102 to i64
  %10104 = load i64, i64* %PC.i34
  %10105 = add i64 %10104, 6
  store i64 %10105, i64* %PC.i34
  %10106 = inttoptr i64 %10101 to i32*
  store i32 %10102, i32* %10106
  store %struct.Memory* %loadMem_424452, %struct.Memory** %MEMORY
  %loadMem_424458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10108 = getelementptr inbounds %struct.GPR, %struct.GPR* %10107, i32 0, i32 33
  %10109 = getelementptr inbounds %struct.Reg, %struct.Reg* %10108, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %10109 to i64*
  %10110 = load i64, i64* %PC.i33
  %10111 = add i64 %10110, -617
  %10112 = load i64, i64* %PC.i33
  %10113 = add i64 %10112, 5
  store i64 %10113, i64* %PC.i33
  %10114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10111, i64* %10114, align 8
  store %struct.Memory* %loadMem_424458, %struct.Memory** %MEMORY
  br label %block_.L_4241ef

block_.L_42445d:                                  ; preds = %block_42443f, %block_.L_4241ef
  %loadMem_42445d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10116 = getelementptr inbounds %struct.GPR, %struct.GPR* %10115, i32 0, i32 33
  %10117 = getelementptr inbounds %struct.Reg, %struct.Reg* %10116, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %10117 to i64*
  %10118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10119 = getelementptr inbounds %struct.GPR, %struct.GPR* %10118, i32 0, i32 1
  %10120 = getelementptr inbounds %struct.Reg, %struct.Reg* %10119, i32 0, i32 0
  %RAX.i31 = bitcast %union.anon* %10120 to i64*
  %10121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10122 = getelementptr inbounds %struct.GPR, %struct.GPR* %10121, i32 0, i32 15
  %10123 = getelementptr inbounds %struct.Reg, %struct.Reg* %10122, i32 0, i32 0
  %RBP.i32 = bitcast %union.anon* %10123 to i64*
  %10124 = load i64, i64* %RBP.i32
  %10125 = sub i64 %10124, 204
  %10126 = load i64, i64* %PC.i30
  %10127 = add i64 %10126, 6
  store i64 %10127, i64* %PC.i30
  %10128 = inttoptr i64 %10125 to i32*
  %10129 = load i32, i32* %10128
  %10130 = zext i32 %10129 to i64
  store i64 %10130, i64* %RAX.i31, align 8
  store %struct.Memory* %loadMem_42445d, %struct.Memory** %MEMORY
  %loadMem_424463 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10132 = getelementptr inbounds %struct.GPR, %struct.GPR* %10131, i32 0, i32 33
  %10133 = getelementptr inbounds %struct.Reg, %struct.Reg* %10132, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %10133 to i64*
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10135 = getelementptr inbounds %struct.GPR, %struct.GPR* %10134, i32 0, i32 1
  %10136 = getelementptr inbounds %struct.Reg, %struct.Reg* %10135, i32 0, i32 0
  %AX.i28 = bitcast %union.anon* %10136 to i16*
  %10137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10138 = getelementptr inbounds %struct.GPR, %struct.GPR* %10137, i32 0, i32 5
  %10139 = getelementptr inbounds %struct.Reg, %struct.Reg* %10138, i32 0, i32 0
  %CX.i29 = bitcast %union.anon* %10139 to i16*
  %10140 = load i16, i16* %AX.i28
  %10141 = zext i16 %10140 to i64
  %10142 = load i64, i64* %PC.i27
  %10143 = add i64 %10142, 3
  store i64 %10143, i64* %PC.i27
  store i16 %10140, i16* %CX.i29, align 2
  store %struct.Memory* %loadMem_424463, %struct.Memory** %MEMORY
  %loadMem_424466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10145 = getelementptr inbounds %struct.GPR, %struct.GPR* %10144, i32 0, i32 33
  %10146 = getelementptr inbounds %struct.Reg, %struct.Reg* %10145, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %10146 to i64*
  %10147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10148 = getelementptr inbounds %struct.GPR, %struct.GPR* %10147, i32 0, i32 7
  %10149 = getelementptr inbounds %struct.Reg, %struct.Reg* %10148, i32 0, i32 0
  %RDX.i25 = bitcast %union.anon* %10149 to i64*
  %10150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10151 = getelementptr inbounds %struct.GPR, %struct.GPR* %10150, i32 0, i32 15
  %10152 = getelementptr inbounds %struct.Reg, %struct.Reg* %10151, i32 0, i32 0
  %RBP.i26 = bitcast %union.anon* %10152 to i64*
  %10153 = load i64, i64* %RBP.i26
  %10154 = sub i64 %10153, 80
  %10155 = load i64, i64* %PC.i24
  %10156 = add i64 %10155, 4
  store i64 %10156, i64* %PC.i24
  %10157 = inttoptr i64 %10154 to i64*
  %10158 = load i64, i64* %10157
  store i64 %10158, i64* %RDX.i25, align 8
  store %struct.Memory* %loadMem_424466, %struct.Memory** %MEMORY
  %loadMem_42446a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10160 = getelementptr inbounds %struct.GPR, %struct.GPR* %10159, i32 0, i32 33
  %10161 = getelementptr inbounds %struct.Reg, %struct.Reg* %10160, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %10161 to i64*
  %10162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10163 = getelementptr inbounds %struct.GPR, %struct.GPR* %10162, i32 0, i32 5
  %10164 = getelementptr inbounds %struct.Reg, %struct.Reg* %10163, i32 0, i32 0
  %CX.i22 = bitcast %union.anon* %10164 to i16*
  %10165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10166 = getelementptr inbounds %struct.GPR, %struct.GPR* %10165, i32 0, i32 7
  %10167 = getelementptr inbounds %struct.Reg, %struct.Reg* %10166, i32 0, i32 0
  %RDX.i23 = bitcast %union.anon* %10167 to i64*
  %10168 = load i64, i64* %RDX.i23
  %10169 = load i16, i16* %CX.i22
  %10170 = zext i16 %10169 to i64
  %10171 = load i64, i64* %PC.i21
  %10172 = add i64 %10171, 3
  store i64 %10172, i64* %PC.i21
  %10173 = inttoptr i64 %10168 to i16*
  store i16 %10169, i16* %10173
  store %struct.Memory* %loadMem_42446a, %struct.Memory** %MEMORY
  %loadMem_42446d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10175 = getelementptr inbounds %struct.GPR, %struct.GPR* %10174, i32 0, i32 33
  %10176 = getelementptr inbounds %struct.Reg, %struct.Reg* %10175, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %10176 to i64*
  %10177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10178 = getelementptr inbounds %struct.GPR, %struct.GPR* %10177, i32 0, i32 1
  %10179 = getelementptr inbounds %struct.Reg, %struct.Reg* %10178, i32 0, i32 0
  %RAX.i19 = bitcast %union.anon* %10179 to i64*
  %10180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10181 = getelementptr inbounds %struct.GPR, %struct.GPR* %10180, i32 0, i32 15
  %10182 = getelementptr inbounds %struct.Reg, %struct.Reg* %10181, i32 0, i32 0
  %RBP.i20 = bitcast %union.anon* %10182 to i64*
  %10183 = load i64, i64* %RBP.i20
  %10184 = sub i64 %10183, 208
  %10185 = load i64, i64* %PC.i18
  %10186 = add i64 %10185, 6
  store i64 %10186, i64* %PC.i18
  %10187 = inttoptr i64 %10184 to i32*
  %10188 = load i32, i32* %10187
  %10189 = zext i32 %10188 to i64
  store i64 %10189, i64* %RAX.i19, align 8
  store %struct.Memory* %loadMem_42446d, %struct.Memory** %MEMORY
  %loadMem_424473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10191 = getelementptr inbounds %struct.GPR, %struct.GPR* %10190, i32 0, i32 33
  %10192 = getelementptr inbounds %struct.Reg, %struct.Reg* %10191, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %10192 to i64*
  %10193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10194 = getelementptr inbounds %struct.GPR, %struct.GPR* %10193, i32 0, i32 1
  %10195 = getelementptr inbounds %struct.Reg, %struct.Reg* %10194, i32 0, i32 0
  %AX.i = bitcast %union.anon* %10195 to i16*
  %10196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10197 = getelementptr inbounds %struct.GPR, %struct.GPR* %10196, i32 0, i32 5
  %10198 = getelementptr inbounds %struct.Reg, %struct.Reg* %10197, i32 0, i32 0
  %CX.i17 = bitcast %union.anon* %10198 to i16*
  %10199 = load i16, i16* %AX.i
  %10200 = zext i16 %10199 to i64
  %10201 = load i64, i64* %PC.i16
  %10202 = add i64 %10201, 3
  store i64 %10202, i64* %PC.i16
  store i16 %10199, i16* %CX.i17, align 2
  store %struct.Memory* %loadMem_424473, %struct.Memory** %MEMORY
  %loadMem_424476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10204 = getelementptr inbounds %struct.GPR, %struct.GPR* %10203, i32 0, i32 33
  %10205 = getelementptr inbounds %struct.Reg, %struct.Reg* %10204, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %10205 to i64*
  %10206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10207 = getelementptr inbounds %struct.GPR, %struct.GPR* %10206, i32 0, i32 7
  %10208 = getelementptr inbounds %struct.Reg, %struct.Reg* %10207, i32 0, i32 0
  %RDX.i14 = bitcast %union.anon* %10208 to i64*
  %10209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10210 = getelementptr inbounds %struct.GPR, %struct.GPR* %10209, i32 0, i32 15
  %10211 = getelementptr inbounds %struct.Reg, %struct.Reg* %10210, i32 0, i32 0
  %RBP.i15 = bitcast %union.anon* %10211 to i64*
  %10212 = load i64, i64* %RBP.i15
  %10213 = sub i64 %10212, 88
  %10214 = load i64, i64* %PC.i13
  %10215 = add i64 %10214, 4
  store i64 %10215, i64* %PC.i13
  %10216 = inttoptr i64 %10213 to i64*
  %10217 = load i64, i64* %10216
  store i64 %10217, i64* %RDX.i14, align 8
  store %struct.Memory* %loadMem_424476, %struct.Memory** %MEMORY
  %loadMem_42447a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10219 = getelementptr inbounds %struct.GPR, %struct.GPR* %10218, i32 0, i32 33
  %10220 = getelementptr inbounds %struct.Reg, %struct.Reg* %10219, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %10220 to i64*
  %10221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10222 = getelementptr inbounds %struct.GPR, %struct.GPR* %10221, i32 0, i32 5
  %10223 = getelementptr inbounds %struct.Reg, %struct.Reg* %10222, i32 0, i32 0
  %CX.i = bitcast %union.anon* %10223 to i16*
  %10224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10225 = getelementptr inbounds %struct.GPR, %struct.GPR* %10224, i32 0, i32 7
  %10226 = getelementptr inbounds %struct.Reg, %struct.Reg* %10225, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %10226 to i64*
  %10227 = load i64, i64* %RDX.i
  %10228 = load i16, i16* %CX.i
  %10229 = zext i16 %10228 to i64
  %10230 = load i64, i64* %PC.i12
  %10231 = add i64 %10230, 3
  store i64 %10231, i64* %PC.i12
  %10232 = inttoptr i64 %10227 to i16*
  store i16 %10228, i16* %10232
  store %struct.Memory* %loadMem_42447a, %struct.Memory** %MEMORY
  %loadMem_42447d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10234 = getelementptr inbounds %struct.GPR, %struct.GPR* %10233, i32 0, i32 33
  %10235 = getelementptr inbounds %struct.Reg, %struct.Reg* %10234, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %10235 to i64*
  %10236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10237 = getelementptr inbounds %struct.GPR, %struct.GPR* %10236, i32 0, i32 1
  %10238 = getelementptr inbounds %struct.Reg, %struct.Reg* %10237, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %10238 to i64*
  %10239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10240 = getelementptr inbounds %struct.GPR, %struct.GPR* %10239, i32 0, i32 15
  %10241 = getelementptr inbounds %struct.Reg, %struct.Reg* %10240, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %10241 to i64*
  %10242 = load i64, i64* %RBP.i11
  %10243 = sub i64 %10242, 100
  %10244 = load i64, i64* %PC.i10
  %10245 = add i64 %10244, 3
  store i64 %10245, i64* %PC.i10
  %10246 = inttoptr i64 %10243 to i32*
  %10247 = load i32, i32* %10246
  %10248 = zext i32 %10247 to i64
  store i64 %10248, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_42447d, %struct.Memory** %MEMORY
  %loadMem_424480 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10250 = getelementptr inbounds %struct.GPR, %struct.GPR* %10249, i32 0, i32 33
  %10251 = getelementptr inbounds %struct.Reg, %struct.Reg* %10250, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %10251 to i64*
  %10252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10253 = getelementptr inbounds %struct.GPR, %struct.GPR* %10252, i32 0, i32 13
  %10254 = getelementptr inbounds %struct.Reg, %struct.Reg* %10253, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %10254 to i64*
  %10255 = load i64, i64* %RSP.i
  %10256 = load i64, i64* %PC.i9
  %10257 = add i64 %10256, 7
  store i64 %10257, i64* %PC.i9
  %10258 = add i64 264, %10255
  store i64 %10258, i64* %RSP.i, align 8
  %10259 = icmp ult i64 %10258, %10255
  %10260 = icmp ult i64 %10258, 264
  %10261 = or i1 %10259, %10260
  %10262 = zext i1 %10261 to i8
  %10263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10262, i8* %10263, align 1
  %10264 = trunc i64 %10258 to i32
  %10265 = and i32 %10264, 255
  %10266 = call i32 @llvm.ctpop.i32(i32 %10265)
  %10267 = trunc i32 %10266 to i8
  %10268 = and i8 %10267, 1
  %10269 = xor i8 %10268, 1
  %10270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10269, i8* %10270, align 1
  %10271 = xor i64 264, %10255
  %10272 = xor i64 %10271, %10258
  %10273 = lshr i64 %10272, 4
  %10274 = trunc i64 %10273 to i8
  %10275 = and i8 %10274, 1
  %10276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10275, i8* %10276, align 1
  %10277 = icmp eq i64 %10258, 0
  %10278 = zext i1 %10277 to i8
  %10279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10278, i8* %10279, align 1
  %10280 = lshr i64 %10258, 63
  %10281 = trunc i64 %10280 to i8
  %10282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10281, i8* %10282, align 1
  %10283 = lshr i64 %10255, 63
  %10284 = xor i64 %10280, %10283
  %10285 = add i64 %10284, %10280
  %10286 = icmp eq i64 %10285, 2
  %10287 = zext i1 %10286 to i8
  %10288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10287, i8* %10288, align 1
  store %struct.Memory* %loadMem_424480, %struct.Memory** %MEMORY
  %loadMem_424487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10290 = getelementptr inbounds %struct.GPR, %struct.GPR* %10289, i32 0, i32 33
  %10291 = getelementptr inbounds %struct.Reg, %struct.Reg* %10290, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %10291 to i64*
  %10292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10293 = getelementptr inbounds %struct.GPR, %struct.GPR* %10292, i32 0, i32 3
  %10294 = getelementptr inbounds %struct.Reg, %struct.Reg* %10293, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %10294 to i64*
  %10295 = load i64, i64* %PC.i8
  %10296 = add i64 %10295, 1
  store i64 %10296, i64* %PC.i8
  %10297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10298 = load i64, i64* %10297, align 8
  %10299 = add i64 %10298, 8
  %10300 = inttoptr i64 %10298 to i64*
  %10301 = load i64, i64* %10300
  store i64 %10301, i64* %RBX.i, align 8
  store i64 %10299, i64* %10297, align 8
  store %struct.Memory* %loadMem_424487, %struct.Memory** %MEMORY
  %loadMem_424488 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10303 = getelementptr inbounds %struct.GPR, %struct.GPR* %10302, i32 0, i32 33
  %10304 = getelementptr inbounds %struct.Reg, %struct.Reg* %10303, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %10304 to i64*
  %10305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10306 = getelementptr inbounds %struct.GPR, %struct.GPR* %10305, i32 0, i32 25
  %10307 = getelementptr inbounds %struct.Reg, %struct.Reg* %10306, i32 0, i32 0
  %R12.i = bitcast %union.anon* %10307 to i64*
  %10308 = load i64, i64* %PC.i7
  %10309 = add i64 %10308, 2
  store i64 %10309, i64* %PC.i7
  %10310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10311 = load i64, i64* %10310, align 8
  %10312 = add i64 %10311, 8
  %10313 = inttoptr i64 %10311 to i64*
  %10314 = load i64, i64* %10313
  store i64 %10314, i64* %R12.i, align 8
  store i64 %10312, i64* %10310, align 8
  store %struct.Memory* %loadMem_424488, %struct.Memory** %MEMORY
  %loadMem_42448a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10316 = getelementptr inbounds %struct.GPR, %struct.GPR* %10315, i32 0, i32 33
  %10317 = getelementptr inbounds %struct.Reg, %struct.Reg* %10316, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %10317 to i64*
  %10318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10319 = getelementptr inbounds %struct.GPR, %struct.GPR* %10318, i32 0, i32 27
  %10320 = getelementptr inbounds %struct.Reg, %struct.Reg* %10319, i32 0, i32 0
  %R13.i = bitcast %union.anon* %10320 to i64*
  %10321 = load i64, i64* %PC.i6
  %10322 = add i64 %10321, 2
  store i64 %10322, i64* %PC.i6
  %10323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10324 = load i64, i64* %10323, align 8
  %10325 = add i64 %10324, 8
  %10326 = inttoptr i64 %10324 to i64*
  %10327 = load i64, i64* %10326
  store i64 %10327, i64* %R13.i, align 8
  store i64 %10325, i64* %10323, align 8
  store %struct.Memory* %loadMem_42448a, %struct.Memory** %MEMORY
  %loadMem_42448c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10329 = getelementptr inbounds %struct.GPR, %struct.GPR* %10328, i32 0, i32 33
  %10330 = getelementptr inbounds %struct.Reg, %struct.Reg* %10329, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %10330 to i64*
  %10331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10332 = getelementptr inbounds %struct.GPR, %struct.GPR* %10331, i32 0, i32 29
  %10333 = getelementptr inbounds %struct.Reg, %struct.Reg* %10332, i32 0, i32 0
  %R14.i = bitcast %union.anon* %10333 to i64*
  %10334 = load i64, i64* %PC.i5
  %10335 = add i64 %10334, 2
  store i64 %10335, i64* %PC.i5
  %10336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10337 = load i64, i64* %10336, align 8
  %10338 = add i64 %10337, 8
  %10339 = inttoptr i64 %10337 to i64*
  %10340 = load i64, i64* %10339
  store i64 %10340, i64* %R14.i, align 8
  store i64 %10338, i64* %10336, align 8
  store %struct.Memory* %loadMem_42448c, %struct.Memory** %MEMORY
  %loadMem_42448e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10342 = getelementptr inbounds %struct.GPR, %struct.GPR* %10341, i32 0, i32 33
  %10343 = getelementptr inbounds %struct.Reg, %struct.Reg* %10342, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %10343 to i64*
  %10344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10345 = getelementptr inbounds %struct.GPR, %struct.GPR* %10344, i32 0, i32 31
  %10346 = getelementptr inbounds %struct.Reg, %struct.Reg* %10345, i32 0, i32 0
  %R15.i = bitcast %union.anon* %10346 to i64*
  %10347 = load i64, i64* %PC.i4
  %10348 = add i64 %10347, 2
  store i64 %10348, i64* %PC.i4
  %10349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10350 = load i64, i64* %10349, align 8
  %10351 = add i64 %10350, 8
  %10352 = inttoptr i64 %10350 to i64*
  %10353 = load i64, i64* %10352
  store i64 %10353, i64* %R15.i, align 8
  store i64 %10351, i64* %10349, align 8
  store %struct.Memory* %loadMem_42448e, %struct.Memory** %MEMORY
  %loadMem_424490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10355 = getelementptr inbounds %struct.GPR, %struct.GPR* %10354, i32 0, i32 33
  %10356 = getelementptr inbounds %struct.Reg, %struct.Reg* %10355, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %10356 to i64*
  %10357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10358 = getelementptr inbounds %struct.GPR, %struct.GPR* %10357, i32 0, i32 15
  %10359 = getelementptr inbounds %struct.Reg, %struct.Reg* %10358, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %10359 to i64*
  %10360 = load i64, i64* %PC.i2
  %10361 = add i64 %10360, 1
  store i64 %10361, i64* %PC.i2
  %10362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10363 = load i64, i64* %10362, align 8
  %10364 = add i64 %10363, 8
  %10365 = inttoptr i64 %10363 to i64*
  %10366 = load i64, i64* %10365
  store i64 %10366, i64* %RBP.i3, align 8
  store i64 %10364, i64* %10362, align 8
  store %struct.Memory* %loadMem_424490, %struct.Memory** %MEMORY
  %loadMem_424491 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10368 = getelementptr inbounds %struct.GPR, %struct.GPR* %10367, i32 0, i32 33
  %10369 = getelementptr inbounds %struct.Reg, %struct.Reg* %10368, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %10369 to i64*
  %10370 = load i64, i64* %PC.i1
  %10371 = add i64 %10370, 1
  store i64 %10371, i64* %PC.i1
  %10372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10374 = load i64, i64* %10373, align 8
  %10375 = inttoptr i64 %10374 to i64*
  %10376 = load i64, i64* %10375
  store i64 %10376, i64* %10372, align 8
  %10377 = add i64 %10374, 8
  store i64 %10377, i64* %10373, align 8
  store %struct.Memory* %loadMem_424491, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_424491
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r15(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R15
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R14
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r13(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 27
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R13 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R13
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r12(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R12
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x108___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 264
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 264
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 264, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__si___ax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %SI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %SI
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %AX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x48__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x40__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = add i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x38__rbp____r11d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = add i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x30__rbp____ebx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x28__rbp____r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 29
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R14 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x20__rbp____r15(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 31
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R15 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw_0x18__rbp____r12w(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  store i16 %17, i16* %R12W, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw_0x10__rbp____r13w(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 27
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R13W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  store i16 %17, i16* %R13W, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax__MINUS0x32__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 50
  %14 = load i16, i16* %AX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i16*
  store i16 %14, i16* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__r13w__MINUS0x46__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 27
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R13W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 70
  %14 = load i16, i16* %R13W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i16*
  store i16 %14, i16* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__r12w__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i16, i16* %R12W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i16*
  store i16 %14, i16* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r15__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 31
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R15 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %R15
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r14__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 29
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R14 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %R14
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ebx__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EBX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r11d__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %R11D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 112
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11ad0__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 72400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_423ca0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xf0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xf0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__ecx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RSI, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0xf4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 244
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_423cad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xf4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 244
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xf4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 244
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x8dbcd__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x8dbcd__rip__type* @G_0x8dbcd__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x8dbcd__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x8dbcd__rip__type* @G_0x8dbcd__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x84__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 132
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722b20___rcx_8____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 8
  %11 = add i64 %10, 7482144
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswq_MINUS0x32__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 50
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd_MINUS0x70__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 112
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fmul double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to double*
  %15 = load double, double* %14, align 1
  %16 = call double @llvm.trunc.f64(double %15)
  %17 = call double @llvm.fabs.f64(double %16)
  %18 = fcmp ogt double %17, 0x41DFFFFFFFC00000
  %19 = fptosi double %16 to i32
  %20 = zext i32 %19 to i64
  %21 = select i1 %18, i64 2147483648, i64 %20
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 152
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x44__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x50__rcx__rdx_8____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 8
  %18 = add i64 %15, 80
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x9c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x54__rcx__rdx_8____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 8
  %18 = add i64 %15, 84
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 1
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x18f8__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 6392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x9c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 156
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x18fc__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 6396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 160
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xcc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 204
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 208
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl___rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i16*
  %16 = load i16, i16* %15
  %17 = sext i16 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___si(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %SI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %SI, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__si____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i16, i16* %SI
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i16*
  store i16 %13, i16* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl___rcx____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i16*
  %16 = load i16, i16* %15
  %17 = sext i16 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 1
  %14 = icmp ult i32 %9, 1
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_423e47(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl___rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i16*
  %16 = load i16, i16* %15
  %17 = sext i16 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xac__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x2___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 2
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 2
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 2, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_423e47(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb0__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x49e910___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x49e910_type* @G__0x49e910 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x6cbf58(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x6cbf58_type* @G_0x6cbf58 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_423e59(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x49e710___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x49e710_type* @G__0x49e710 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__esi___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RSI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__MINUS0xb4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 180
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 3, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl_MINUS0x46__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 70
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl___rdx____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i16*
  %16 = load i16, i16* %15
  %17 = sext i16 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xf8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xf8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__edx__MINUS0xd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl_MINUS0x48__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl___r8____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i16*
  %16 = load i16, i16* %15
  %17 = sext i16 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xdc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6d1fa0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6d1fa0_type* @G_0x6d1fa0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xe8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6d1fa4___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6d1fa4_type* @G_0x6d1fa4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 236
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x710770___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x710770_type* @G_0x710770 to i64*)
  store i64 %11, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___r8____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i64*
  %16 = load i64, i64* %15
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb4__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 180
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = shl i32 %10, 1
  %15 = icmp slt i32 %10, 0
  %16 = icmp slt i32 %14, 0
  %17 = xor i1 %15, %16
  %18 = zext i32 %14 to i64
  store i64 %18, i64* %9, align 8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %20 = zext i1 %15 to i8
  store i8 %20, i8* %19, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %14, 254
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %14, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %14, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %35 = zext i1 %17 to i8
  store i8 %35, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 1, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 1
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 1, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__r9d___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = shl i64 %12, 32
  %18 = ashr exact i64 %17, 32
  %19 = shl i64 %14, 32
  %20 = ashr exact i64 %19, 32
  %21 = mul i64 %20, %18
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RDX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.memset_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x18__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_424031(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl___rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i16*
  %16 = load i16, i16* %15
  %17 = sext i16 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x94__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f8f00___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f8f00_type* @G_0x6f8f00 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x7c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x98__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xfc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl_MINUS0x46__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 70
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rdi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x80__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x98__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 9
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RSI = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RSI
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RSI, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl_MINUS0x48__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 72
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i16*
  %18 = load i16, i16* %17
  %19 = sext i16 %18 to i64
  %20 = and i64 %19, 4294967295
  store i64 %20, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__r8d___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rax__rdi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RDX, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xfc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__edx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = shl i64 %12, 32
  %18 = ashr exact i64 %17, 32
  %19 = shl i64 %14, 32
  %20 = ashr exact i64 %19, 32
  %21 = mul i64 %20, %18
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RSI, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x10___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 15
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RSI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0xe4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x9c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa0__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x7c__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 124
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x80__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xe4__rbp____r11d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 228
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x64__rbp____ebx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x74__rbp____r14d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R14D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 116
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax____rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r10__0x8__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 8
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r11d__0x10__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 16
  %14 = load i32, i32* %R11D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 24
  %14 = load i32, i32* %EBX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r14d__0x20__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 32
  %14 = load i32, i32* %R14D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.AddUpSADQuarter(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x710770___r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x710770_type* @G_0x710770 to i64*)
  store i64 %11, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xb4__rbp____r15(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 31
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R15 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___r10__r15_8____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 31
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R15 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %R15
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1____r10__r15_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 31
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R15 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %R15
  %14 = add i64 %13, %12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  store i8 1, i8* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x78__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x64__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 100
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_42402c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x7c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xcc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x80__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_424069(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x710770___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x710770_type* @G_0x710770 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xb4__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1____rax__rcx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, %12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  store i8 1, i8* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i16*
  %16 = load i16, i16* %15
  %17 = sext i16 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xcc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 216
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_424083(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xdc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 220
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4241bb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0xd8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 216
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0xdc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 220
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x100__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x100__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____r15(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 31
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R15 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl___r15____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 31
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R15 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R15
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i16*
  %16 = load i16, i16* %15
  %17 = sext i16 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0xb4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 180
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___r15(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 31
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R15 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____r15(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 31
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R15 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4241b6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4241bb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xcc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 192
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xd4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 212
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_42445d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x10000__MINUS0xc4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 196
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 65536, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 200
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 200
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_42441a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x6cb880___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 7125120
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = trunc i64 %12 to i32
  %19 = inttoptr i64 %15 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %18
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %RAX, align 8
  %23 = icmp ult i32 %21, %18
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %18
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %18, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x6cb890___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 7125136
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = trunc i64 %12 to i32
  %19 = inttoptr i64 %15 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %18
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %RAX, align 8
  %23 = icmp ult i32 %21, %18
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %18
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %18, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abs_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xb4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 180
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_424401(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x80__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl___rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i16*
  %16 = load i16, i16* %15
  %17 = sext i16 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__esi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0xb4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 180
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x7c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpb__0x0____rax__rdx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = add i64 %13, %12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19, align 1
  %20 = zext i8 %18 to i32
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = icmp eq i8 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i8 %18, 7
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i8 %18, 7
  %33 = xor i8 %30, %32
  %34 = add i8 %33, %32
  %35 = icmp eq i8 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4243fc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x94__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f8f00___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f8f00_type* @G_0x6f8f00 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x108__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x108__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___r8__rdi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R8
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f8f00___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f8f00_type* @G_0x6f8f00 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl_MINUS0x48__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 72
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i16*
  %18 = load i16, i16* %17
  %19 = sext i16 %18 to i64
  %20 = and i64 %19, 4294967295
  store i64 %20, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__r9d___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rdi__r10_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 21
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R10 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RDI
  %17 = load i64, i64* %R10
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RDX, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = shl i64 %12, 32
  %18 = ashr exact i64 %17, 32
  %19 = shl i64 %14, 32
  %20 = ashr exact i64 %19, 32
  %21 = mul i64 %20, %18
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RAX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x10___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 15
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xe4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x90__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r10____rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %R10
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r11__0x8__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 8
  %14 = load i64, i64* %R11
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x10__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl___r11____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R11
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i16*
  %16 = load i16, i16* %15
  %17 = sext i16 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___r10__r11_8____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %R11
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1____r10__r11_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %R11
  %14 = add i64 %13, %12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  store i8 1, i8* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4243f7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4243fc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_424401(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_424406(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42421f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_424444(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42445d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_424449(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4241ef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___cx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %CX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__cx____rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i16, i16* %CX
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i16*
  store i16 %13, i16* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x108___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 264, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 264
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 264, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBX, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r12(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R12, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r13(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 27
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R13 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R13, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R14, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r15(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R15, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
