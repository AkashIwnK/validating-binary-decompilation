; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x2a53ca__rip__type = type <{ [8 x i8] }>
%G_0x2ae13d__rip__type = type <{ [8 x i8] }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6d32c8_type = type <{ [4 x i8] }>
%G_0x6d4690_type = type <{ [8 x i8] }>
%G_0x722c98_type = type <{ [4 x i8] }>
%G_0x722cb0_type = type <{ [8 x i8] }>
%G_0x8b2c7__rip__type = type <{ [8 x i8] }>
%G_0x97305__rip__type = type <{ [4 x i8] }>
%G__0x4bfa23_type = type <{ [8 x i8] }>
%G__0x4bfa39_type = type <{ [8 x i8] }>
%G__0x4bfa48_type = type <{ [8 x i8] }>
%G__0x4bfa61_type = type <{ [8 x i8] }>
%G__0x4bfa6f_type = type <{ [8 x i8] }>
%G__0x4bfa82_type = type <{ [8 x i8] }>
%G__0x4bfa98_type = type <{ [8 x i8] }>
%G__0x4bfaa7_type = type <{ [8 x i8] }>
%G__0x4bfabd_type = type <{ [8 x i8] }>
%G__0x4bfadc_type = type <{ [8 x i8] }>
%G__0x4bfaf7_type = type <{ [8 x i8] }>
%G__0x4bfb12_type = type <{ [8 x i8] }>
%G__0x4bfb28_type = type <{ [8 x i8] }>
%G__0x4bfb48_type = type <{ [8 x i8] }>
%G__0x4bfb6d_type = type <{ [8 x i8] }>
%G__0x4bfb8e_type = type <{ [8 x i8] }>
%G__0x4bfbaf_type = type <{ [8 x i8] }>
%G__0x4bfbc2_type = type <{ [8 x i8] }>
%G__0x4bfbd5_type = type <{ [8 x i8] }>
%G__0x4bfbec_type = type <{ [8 x i8] }>
%G__0x4bfbff_type = type <{ [8 x i8] }>
%G__0x4bfc21_type = type <{ [8 x i8] }>
%G__0x4bfc40_type = type <{ [8 x i8] }>
%G__0x4bfc5b_type = type <{ [8 x i8] }>
%G__0x4bfc78_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x2a53ca__rip_ = global %G_0x2a53ca__rip__type zeroinitializer
@G_0x2ae13d__rip_ = global %G_0x2ae13d__rip__type zeroinitializer
@G_0x6cb8f8 = global %G_0x6cb8f8_type zeroinitializer
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6d32c8 = global %G_0x6d32c8_type zeroinitializer
@G_0x6d4690 = global %G_0x6d4690_type zeroinitializer
@G_0x722c98 = global %G_0x722c98_type zeroinitializer
@G_0x722cb0 = global %G_0x722cb0_type zeroinitializer
@G_0x8b2c7__rip_ = global %G_0x8b2c7__rip__type zeroinitializer
@G_0x97305__rip_ = global %G_0x97305__rip__type zeroinitializer
@G__0x4bfa23 = global %G__0x4bfa23_type zeroinitializer
@G__0x4bfa39 = global %G__0x4bfa39_type zeroinitializer
@G__0x4bfa48 = global %G__0x4bfa48_type zeroinitializer
@G__0x4bfa61 = global %G__0x4bfa61_type zeroinitializer
@G__0x4bfa6f = global %G__0x4bfa6f_type zeroinitializer
@G__0x4bfa82 = global %G__0x4bfa82_type zeroinitializer
@G__0x4bfa98 = global %G__0x4bfa98_type zeroinitializer
@G__0x4bfaa7 = global %G__0x4bfaa7_type zeroinitializer
@G__0x4bfabd = global %G__0x4bfabd_type zeroinitializer
@G__0x4bfadc = global %G__0x4bfadc_type zeroinitializer
@G__0x4bfaf7 = global %G__0x4bfaf7_type zeroinitializer
@G__0x4bfb12 = global %G__0x4bfb12_type zeroinitializer
@G__0x4bfb28 = global %G__0x4bfb28_type zeroinitializer
@G__0x4bfb48 = global %G__0x4bfb48_type zeroinitializer
@G__0x4bfb6d = global %G__0x4bfb6d_type zeroinitializer
@G__0x4bfb8e = global %G__0x4bfb8e_type zeroinitializer
@G__0x4bfbaf = global %G__0x4bfbaf_type zeroinitializer
@G__0x4bfbc2 = global %G__0x4bfbc2_type zeroinitializer
@G__0x4bfbd5 = global %G__0x4bfbd5_type zeroinitializer
@G__0x4bfbec = global %G__0x4bfbec_type zeroinitializer
@G__0x4bfbff = global %G__0x4bfbff_type zeroinitializer
@G__0x4bfc21 = global %G__0x4bfc21_type zeroinitializer
@G__0x4bfc40 = global %G__0x4bfc40_type zeroinitializer
@G__0x4bfc5b = global %G__0x4bfc5b_type zeroinitializer
@G__0x4bfc78 = global %G__0x4bfc78_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_4ac6a0.ue_v(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_426640.get_picture_type(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4acbc0.u_v(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4acb00.u_1(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4ac9c0.se_v(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4266e0.ref_pic_list_reordering(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4269c0.pred_weight_table(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_426f50.dec_ref_pic_marking(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401200.ceil_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @SliceHeader(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_425c40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_425c40, %struct.Memory** %MEMORY
  %loadMem_425c41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i69 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i70 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i69
  %27 = load i64, i64* %PC.i68
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i68
  store i64 %26, i64* %RBP.i70, align 8
  store %struct.Memory* %loadMem_425c41, %struct.Memory** %MEMORY
  %loadMem_425c44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i80 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i81 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i81
  %36 = load i64, i64* %PC.i80
  %37 = add i64 %36, 4
  store i64 %37, i64* %PC.i80
  %38 = sub i64 %35, 80
  store i64 %38, i64* %RSP.i81, align 8
  %39 = icmp ult i64 %35, 80
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 80, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_425c44, %struct.Memory** %MEMORY
  %loadMem_425c48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RAX.i158 = bitcast %union.anon* %72 to i64*
  %73 = load i64, i64* %PC.i157
  %74 = add i64 %73, 8
  store i64 %74, i64* %PC.i157
  %75 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %75, i64* %RAX.i158, align 8
  store %struct.Memory* %loadMem_425c48, %struct.Memory** %MEMORY
  %loadMem_425c50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %77 = getelementptr inbounds %struct.GPR, %struct.GPR* %76, i32 0, i32 33
  %78 = getelementptr inbounds %struct.Reg, %struct.Reg* %77, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %78 to i64*
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 1
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %RAX.i189 = bitcast %union.anon* %81 to i64*
  %82 = load i64, i64* %RAX.i189
  %83 = add i64 %82, 2364
  %84 = load i64, i64* %PC.i188
  %85 = add i64 %84, 7
  store i64 %85, i64* %PC.i188
  %86 = inttoptr i64 %83 to i32*
  %87 = load i32, i32* %86
  %88 = sext i32 %87 to i64
  store i64 %88, i64* %RAX.i189, align 8
  store %struct.Memory* %loadMem_425c50, %struct.Memory** %MEMORY
  %loadMem_425c57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %90 = getelementptr inbounds %struct.GPR, %struct.GPR* %89, i32 0, i32 33
  %91 = getelementptr inbounds %struct.Reg, %struct.Reg* %90, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %91 to i64*
  %92 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %93 = getelementptr inbounds %struct.GPR, %struct.GPR* %92, i32 0, i32 1
  %94 = getelementptr inbounds %struct.Reg, %struct.Reg* %93, i32 0, i32 0
  %RAX.i840 = bitcast %union.anon* %94 to i64*
  %95 = load i64, i64* %RAX.i840
  %96 = mul i64 %95, 8
  %97 = add i64 %96, 7493120
  %98 = load i64, i64* %PC.i839
  %99 = add i64 %98, 8
  store i64 %99, i64* %PC.i839
  %100 = inttoptr i64 %97 to i64*
  %101 = load i64, i64* %100
  store i64 %101, i64* %RAX.i840, align 8
  store %struct.Memory* %loadMem_425c57, %struct.Memory** %MEMORY
  %loadMem_425c5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 33
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %104 to i64*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 1
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %RAX.i1085 = bitcast %union.anon* %107 to i64*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 5
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %RCX.i1086 = bitcast %union.anon* %110 to i64*
  %111 = load i64, i64* %RAX.i1085
  %112 = load i64, i64* %PC.i1084
  %113 = add i64 %112, 2
  store i64 %113, i64* %PC.i1084
  %114 = inttoptr i64 %111 to i32*
  %115 = load i32, i32* %114
  %116 = zext i32 %115 to i64
  store i64 %116, i64* %RCX.i1086, align 8
  store %struct.Memory* %loadMem_425c5f, %struct.Memory** %MEMORY
  %loadMem_425c61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 33
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %119 to i64*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 5
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %ECX.i1082 = bitcast %union.anon* %122 to i32*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 15
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %RBP.i1083 = bitcast %union.anon* %125 to i64*
  %126 = load i64, i64* %RBP.i1083
  %127 = sub i64 %126, 4
  %128 = load i32, i32* %ECX.i1082
  %129 = zext i32 %128 to i64
  %130 = load i64, i64* %PC.i1081
  %131 = add i64 %130, 3
  store i64 %131, i64* %PC.i1081
  %132 = inttoptr i64 %127 to i32*
  store i32 %128, i32* %132
  store %struct.Memory* %loadMem_425c61, %struct.Memory** %MEMORY
  %loadMem_425c64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %134 = getelementptr inbounds %struct.GPR, %struct.GPR* %133, i32 0, i32 33
  %135 = getelementptr inbounds %struct.Reg, %struct.Reg* %134, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %135 to i64*
  %136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %137 = getelementptr inbounds %struct.GPR, %struct.GPR* %136, i32 0, i32 1
  %138 = getelementptr inbounds %struct.Reg, %struct.Reg* %137, i32 0, i32 0
  %RAX.i1080 = bitcast %union.anon* %138 to i64*
  %139 = load i64, i64* %PC.i1079
  %140 = add i64 %139, 8
  store i64 %140, i64* %PC.i1079
  %141 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %141, i64* %RAX.i1080, align 8
  store %struct.Memory* %loadMem_425c64, %struct.Memory** %MEMORY
  %loadMem_425c6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %143 = getelementptr inbounds %struct.GPR, %struct.GPR* %142, i32 0, i32 33
  %144 = getelementptr inbounds %struct.Reg, %struct.Reg* %143, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %144 to i64*
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %146 = getelementptr inbounds %struct.GPR, %struct.GPR* %145, i32 0, i32 1
  %147 = getelementptr inbounds %struct.Reg, %struct.Reg* %146, i32 0, i32 0
  %RAX.i1078 = bitcast %union.anon* %147 to i64*
  %148 = load i64, i64* %RAX.i1078
  %149 = add i64 %148, 14160
  %150 = load i64, i64* %PC.i1077
  %151 = add i64 %150, 7
  store i64 %151, i64* %PC.i1077
  %152 = inttoptr i64 %149 to i64*
  %153 = load i64, i64* %152
  store i64 %153, i64* %RAX.i1078, align 8
  store %struct.Memory* %loadMem_425c6c, %struct.Memory** %MEMORY
  %loadMem_425c73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %155 = getelementptr inbounds %struct.GPR, %struct.GPR* %154, i32 0, i32 33
  %156 = getelementptr inbounds %struct.Reg, %struct.Reg* %155, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %156 to i64*
  %157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %158 = getelementptr inbounds %struct.GPR, %struct.GPR* %157, i32 0, i32 1
  %159 = getelementptr inbounds %struct.Reg, %struct.Reg* %158, i32 0, i32 0
  %RAX.i1076 = bitcast %union.anon* %159 to i64*
  %160 = load i64, i64* %RAX.i1076
  %161 = add i64 %160, 24
  %162 = load i64, i64* %PC.i1075
  %163 = add i64 %162, 4
  store i64 %163, i64* %PC.i1075
  %164 = inttoptr i64 %161 to i64*
  %165 = load i64, i64* %164
  store i64 %165, i64* %RAX.i1076, align 8
  store %struct.Memory* %loadMem_425c73, %struct.Memory** %MEMORY
  %loadMem_425c77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %167 = getelementptr inbounds %struct.GPR, %struct.GPR* %166, i32 0, i32 33
  %168 = getelementptr inbounds %struct.Reg, %struct.Reg* %167, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %168 to i64*
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %170 = getelementptr inbounds %struct.GPR, %struct.GPR* %169, i32 0, i32 7
  %171 = getelementptr inbounds %struct.Reg, %struct.Reg* %170, i32 0, i32 0
  %RDX.i1073 = bitcast %union.anon* %171 to i64*
  %172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %173 = getelementptr inbounds %struct.GPR, %struct.GPR* %172, i32 0, i32 15
  %174 = getelementptr inbounds %struct.Reg, %struct.Reg* %173, i32 0, i32 0
  %RBP.i1074 = bitcast %union.anon* %174 to i64*
  %175 = load i64, i64* %RBP.i1074
  %176 = sub i64 %175, 4
  %177 = load i64, i64* %PC.i1072
  %178 = add i64 %177, 4
  store i64 %178, i64* %PC.i1072
  %179 = inttoptr i64 %176 to i32*
  %180 = load i32, i32* %179
  %181 = sext i32 %180 to i64
  store i64 %181, i64* %RDX.i1073, align 8
  store %struct.Memory* %loadMem_425c77, %struct.Memory** %MEMORY
  %loadMem_425c7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %183 = getelementptr inbounds %struct.GPR, %struct.GPR* %182, i32 0, i32 33
  %184 = getelementptr inbounds %struct.Reg, %struct.Reg* %183, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %184 to i64*
  %185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %186 = getelementptr inbounds %struct.GPR, %struct.GPR* %185, i32 0, i32 7
  %187 = getelementptr inbounds %struct.Reg, %struct.Reg* %186, i32 0, i32 0
  %RDX.i1071 = bitcast %union.anon* %187 to i64*
  %188 = load i64, i64* %RDX.i1071
  %189 = load i64, i64* %PC.i1070
  %190 = add i64 %189, 4
  store i64 %190, i64* %PC.i1070
  %191 = sext i64 %188 to i128
  %192 = and i128 %191, -18446744073709551616
  %193 = zext i64 %188 to i128
  %194 = or i128 %192, %193
  %195 = mul i128 120, %194
  %196 = trunc i128 %195 to i64
  store i64 %196, i64* %RDX.i1071, align 8
  %197 = sext i64 %196 to i128
  %198 = icmp ne i128 %197, %195
  %199 = zext i1 %198 to i8
  %200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %199, i8* %200, align 1
  %201 = trunc i128 %195 to i32
  %202 = and i32 %201, 255
  %203 = call i32 @llvm.ctpop.i32(i32 %202)
  %204 = trunc i32 %203 to i8
  %205 = and i8 %204, 1
  %206 = xor i8 %205, 1
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %206, i8* %207, align 1
  %208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %208, align 1
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %209, align 1
  %210 = lshr i64 %196, 63
  %211 = trunc i64 %210 to i8
  %212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %211, i8* %212, align 1
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %199, i8* %213, align 1
  store %struct.Memory* %loadMem_425c7b, %struct.Memory** %MEMORY
  %loadMem_425c7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %215 = getelementptr inbounds %struct.GPR, %struct.GPR* %214, i32 0, i32 33
  %216 = getelementptr inbounds %struct.Reg, %struct.Reg* %215, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %216 to i64*
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %218 = getelementptr inbounds %struct.GPR, %struct.GPR* %217, i32 0, i32 1
  %219 = getelementptr inbounds %struct.Reg, %struct.Reg* %218, i32 0, i32 0
  %RAX.i1068 = bitcast %union.anon* %219 to i64*
  %220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %221 = getelementptr inbounds %struct.GPR, %struct.GPR* %220, i32 0, i32 7
  %222 = getelementptr inbounds %struct.Reg, %struct.Reg* %221, i32 0, i32 0
  %RDX.i1069 = bitcast %union.anon* %222 to i64*
  %223 = load i64, i64* %RAX.i1068
  %224 = load i64, i64* %RDX.i1069
  %225 = load i64, i64* %PC.i1067
  %226 = add i64 %225, 3
  store i64 %226, i64* %PC.i1067
  %227 = add i64 %224, %223
  store i64 %227, i64* %RAX.i1068, align 8
  %228 = icmp ult i64 %227, %223
  %229 = icmp ult i64 %227, %224
  %230 = or i1 %228, %229
  %231 = zext i1 %230 to i8
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %231, i8* %232, align 1
  %233 = trunc i64 %227 to i32
  %234 = and i32 %233, 255
  %235 = call i32 @llvm.ctpop.i32(i32 %234)
  %236 = trunc i32 %235 to i8
  %237 = and i8 %236, 1
  %238 = xor i8 %237, 1
  %239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %238, i8* %239, align 1
  %240 = xor i64 %224, %223
  %241 = xor i64 %240, %227
  %242 = lshr i64 %241, 4
  %243 = trunc i64 %242 to i8
  %244 = and i8 %243, 1
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %244, i8* %245, align 1
  %246 = icmp eq i64 %227, 0
  %247 = zext i1 %246 to i8
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %247, i8* %248, align 1
  %249 = lshr i64 %227, 63
  %250 = trunc i64 %249 to i8
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %250, i8* %251, align 1
  %252 = lshr i64 %223, 63
  %253 = lshr i64 %224, 63
  %254 = xor i64 %249, %252
  %255 = xor i64 %249, %253
  %256 = add i64 %254, %255
  %257 = icmp eq i64 %256, 2
  %258 = zext i1 %257 to i8
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %258, i8* %259, align 1
  store %struct.Memory* %loadMem_425c7f, %struct.Memory** %MEMORY
  %loadMem_425c82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %261 = getelementptr inbounds %struct.GPR, %struct.GPR* %260, i32 0, i32 33
  %262 = getelementptr inbounds %struct.Reg, %struct.Reg* %261, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %262 to i64*
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %264 = getelementptr inbounds %struct.GPR, %struct.GPR* %263, i32 0, i32 1
  %265 = getelementptr inbounds %struct.Reg, %struct.Reg* %264, i32 0, i32 0
  %RAX.i1065 = bitcast %union.anon* %265 to i64*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %267 = getelementptr inbounds %struct.GPR, %struct.GPR* %266, i32 0, i32 15
  %268 = getelementptr inbounds %struct.Reg, %struct.Reg* %267, i32 0, i32 0
  %RBP.i1066 = bitcast %union.anon* %268 to i64*
  %269 = load i64, i64* %RBP.i1066
  %270 = sub i64 %269, 16
  %271 = load i64, i64* %RAX.i1065
  %272 = load i64, i64* %PC.i1064
  %273 = add i64 %272, 4
  store i64 %273, i64* %PC.i1064
  %274 = inttoptr i64 %270 to i64*
  store i64 %271, i64* %274
  store %struct.Memory* %loadMem_425c82, %struct.Memory** %MEMORY
  %loadMem_425c86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %276 = getelementptr inbounds %struct.GPR, %struct.GPR* %275, i32 0, i32 33
  %277 = getelementptr inbounds %struct.Reg, %struct.Reg* %276, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %277 to i64*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %279 = getelementptr inbounds %struct.GPR, %struct.GPR* %278, i32 0, i32 1
  %280 = getelementptr inbounds %struct.Reg, %struct.Reg* %279, i32 0, i32 0
  %RAX.i1063 = bitcast %union.anon* %280 to i64*
  %281 = load i64, i64* %PC.i1062
  %282 = add i64 %281, 8
  store i64 %282, i64* %PC.i1062
  %283 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %283, i64* %RAX.i1063, align 8
  store %struct.Memory* %loadMem_425c86, %struct.Memory** %MEMORY
  %loadMem_425c8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %285 = getelementptr inbounds %struct.GPR, %struct.GPR* %284, i32 0, i32 33
  %286 = getelementptr inbounds %struct.Reg, %struct.Reg* %285, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %286 to i64*
  %287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %288 = getelementptr inbounds %struct.GPR, %struct.GPR* %287, i32 0, i32 1
  %289 = getelementptr inbounds %struct.Reg, %struct.Reg* %288, i32 0, i32 0
  %RAX.i1061 = bitcast %union.anon* %289 to i64*
  %290 = load i64, i64* %RAX.i1061
  %291 = add i64 %290, 14160
  %292 = load i64, i64* %PC.i1060
  %293 = add i64 %292, 7
  store i64 %293, i64* %PC.i1060
  %294 = inttoptr i64 %291 to i64*
  %295 = load i64, i64* %294
  store i64 %295, i64* %RAX.i1061, align 8
  store %struct.Memory* %loadMem_425c8e, %struct.Memory** %MEMORY
  %loadMem_425c95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %297 = getelementptr inbounds %struct.GPR, %struct.GPR* %296, i32 0, i32 33
  %298 = getelementptr inbounds %struct.Reg, %struct.Reg* %297, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %298 to i64*
  %299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %300 = getelementptr inbounds %struct.GPR, %struct.GPR* %299, i32 0, i32 1
  %301 = getelementptr inbounds %struct.Reg, %struct.Reg* %300, i32 0, i32 0
  %RAX.i1058 = bitcast %union.anon* %301 to i64*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %303 = getelementptr inbounds %struct.GPR, %struct.GPR* %302, i32 0, i32 15
  %304 = getelementptr inbounds %struct.Reg, %struct.Reg* %303, i32 0, i32 0
  %RBP.i1059 = bitcast %union.anon* %304 to i64*
  %305 = load i64, i64* %RBP.i1059
  %306 = sub i64 %305, 24
  %307 = load i64, i64* %RAX.i1058
  %308 = load i64, i64* %PC.i1057
  %309 = add i64 %308, 4
  store i64 %309, i64* %PC.i1057
  %310 = inttoptr i64 %306 to i64*
  store i64 %307, i64* %310
  store %struct.Memory* %loadMem_425c95, %struct.Memory** %MEMORY
  %loadMem_425c99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %312 = getelementptr inbounds %struct.GPR, %struct.GPR* %311, i32 0, i32 33
  %313 = getelementptr inbounds %struct.Reg, %struct.Reg* %312, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %313 to i64*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %315 = getelementptr inbounds %struct.GPR, %struct.GPR* %314, i32 0, i32 15
  %316 = getelementptr inbounds %struct.Reg, %struct.Reg* %315, i32 0, i32 0
  %RBP.i1056 = bitcast %union.anon* %316 to i64*
  %317 = load i64, i64* %RBP.i1056
  %318 = sub i64 %317, 28
  %319 = load i64, i64* %PC.i1055
  %320 = add i64 %319, 7
  store i64 %320, i64* %PC.i1055
  %321 = inttoptr i64 %318 to i32*
  store i32 0, i32* %321
  store %struct.Memory* %loadMem_425c99, %struct.Memory** %MEMORY
  %loadMem_425ca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %323 = getelementptr inbounds %struct.GPR, %struct.GPR* %322, i32 0, i32 33
  %324 = getelementptr inbounds %struct.Reg, %struct.Reg* %323, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %324 to i64*
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %326 = getelementptr inbounds %struct.GPR, %struct.GPR* %325, i32 0, i32 15
  %327 = getelementptr inbounds %struct.Reg, %struct.Reg* %326, i32 0, i32 0
  %RBP.i1054 = bitcast %union.anon* %327 to i64*
  %328 = load i64, i64* %RBP.i1054
  %329 = sub i64 %328, 32
  %330 = load i64, i64* %PC.i1053
  %331 = add i64 %330, 7
  store i64 %331, i64* %PC.i1053
  %332 = inttoptr i64 %329 to i32*
  store i32 0, i32* %332
  store %struct.Memory* %loadMem_425ca0, %struct.Memory** %MEMORY
  %loadMem_425ca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %334 = getelementptr inbounds %struct.GPR, %struct.GPR* %333, i32 0, i32 33
  %335 = getelementptr inbounds %struct.Reg, %struct.Reg* %334, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %335 to i64*
  %336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %337 = getelementptr inbounds %struct.GPR, %struct.GPR* %336, i32 0, i32 15
  %338 = getelementptr inbounds %struct.Reg, %struct.Reg* %337, i32 0, i32 0
  %RBP.i1052 = bitcast %union.anon* %338 to i64*
  %339 = load i64, i64* %RBP.i1052
  %340 = sub i64 %339, 36
  %341 = load i64, i64* %PC.i1051
  %342 = add i64 %341, 7
  store i64 %342, i64* %PC.i1051
  %343 = inttoptr i64 %340 to i32*
  store i32 0, i32* %343
  store %struct.Memory* %loadMem_425ca7, %struct.Memory** %MEMORY
  %loadMem_425cae = load %struct.Memory*, %struct.Memory** %MEMORY
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %345 = getelementptr inbounds %struct.GPR, %struct.GPR* %344, i32 0, i32 33
  %346 = getelementptr inbounds %struct.Reg, %struct.Reg* %345, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %346 to i64*
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %348 = getelementptr inbounds %struct.GPR, %struct.GPR* %347, i32 0, i32 1
  %349 = getelementptr inbounds %struct.Reg, %struct.Reg* %348, i32 0, i32 0
  %RAX.i1050 = bitcast %union.anon* %349 to i64*
  %350 = load i64, i64* %PC.i1049
  %351 = add i64 %350, 8
  store i64 %351, i64* %PC.i1049
  %352 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %352, i64* %RAX.i1050, align 8
  store %struct.Memory* %loadMem_425cae, %struct.Memory** %MEMORY
  %loadMem_425cb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %354 = getelementptr inbounds %struct.GPR, %struct.GPR* %353, i32 0, i32 33
  %355 = getelementptr inbounds %struct.Reg, %struct.Reg* %354, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %355 to i64*
  %356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %357 = getelementptr inbounds %struct.GPR, %struct.GPR* %356, i32 0, i32 1
  %358 = getelementptr inbounds %struct.Reg, %struct.Reg* %357, i32 0, i32 0
  %RAX.i1048 = bitcast %union.anon* %358 to i64*
  %359 = load i64, i64* %RAX.i1048
  %360 = add i64 %359, 72400
  %361 = load i64, i64* %PC.i1047
  %362 = add i64 %361, 7
  store i64 %362, i64* %PC.i1047
  %363 = inttoptr i64 %360 to i32*
  %364 = load i32, i32* %363
  %365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %365, align 1
  %366 = and i32 %364, 255
  %367 = call i32 @llvm.ctpop.i32(i32 %366)
  %368 = trunc i32 %367 to i8
  %369 = and i8 %368, 1
  %370 = xor i8 %369, 1
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %370, i8* %371, align 1
  %372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %372, align 1
  %373 = icmp eq i32 %364, 0
  %374 = zext i1 %373 to i8
  %375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %374, i8* %375, align 1
  %376 = lshr i32 %364, 31
  %377 = trunc i32 %376 to i8
  %378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %377, i8* %378, align 1
  %379 = lshr i32 %364, 31
  %380 = xor i32 %376, %379
  %381 = add i32 %380, %379
  %382 = icmp eq i32 %381, 2
  %383 = zext i1 %382 to i8
  %384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %383, i8* %384, align 1
  store %struct.Memory* %loadMem_425cb6, %struct.Memory** %MEMORY
  %loadMem_425cbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %386 = getelementptr inbounds %struct.GPR, %struct.GPR* %385, i32 0, i32 33
  %387 = getelementptr inbounds %struct.Reg, %struct.Reg* %386, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %387 to i64*
  %388 = load i64, i64* %PC.i1046
  %389 = add i64 %388, 49
  %390 = load i64, i64* %PC.i1046
  %391 = add i64 %390, 6
  %392 = load i64, i64* %PC.i1046
  %393 = add i64 %392, 6
  store i64 %393, i64* %PC.i1046
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %395 = load i8, i8* %394, align 1
  store i8 %395, i8* %BRANCH_TAKEN, align 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %397 = icmp ne i8 %395, 0
  %398 = select i1 %397, i64 %389, i64 %391
  store i64 %398, i64* %396, align 8
  store %struct.Memory* %loadMem_425cbd, %struct.Memory** %MEMORY
  %loadBr_425cbd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_425cbd = icmp eq i8 %loadBr_425cbd, 1
  br i1 %cmpBr_425cbd, label %block_.L_425cee, label %block_425cc3

block_425cc3:                                     ; preds = %entry
  %loadMem_425cc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %400 = getelementptr inbounds %struct.GPR, %struct.GPR* %399, i32 0, i32 33
  %401 = getelementptr inbounds %struct.Reg, %struct.Reg* %400, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %401 to i64*
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %403 = getelementptr inbounds %struct.GPR, %struct.GPR* %402, i32 0, i32 11
  %404 = getelementptr inbounds %struct.Reg, %struct.Reg* %403, i32 0, i32 0
  %RDI.i1045 = bitcast %union.anon* %404 to i64*
  %405 = load i64, i64* %PC.i1044
  %406 = add i64 %405, 10
  store i64 %406, i64* %PC.i1044
  store i64 ptrtoint (%G__0x4bfa23_type* @G__0x4bfa23 to i64), i64* %RDI.i1045, align 8
  store %struct.Memory* %loadMem_425cc3, %struct.Memory** %MEMORY
  %loadMem_425ccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %408 = getelementptr inbounds %struct.GPR, %struct.GPR* %407, i32 0, i32 33
  %409 = getelementptr inbounds %struct.Reg, %struct.Reg* %408, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %409 to i64*
  %410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %411 = getelementptr inbounds %struct.GPR, %struct.GPR* %410, i32 0, i32 1
  %412 = getelementptr inbounds %struct.Reg, %struct.Reg* %411, i32 0, i32 0
  %RAX.i1043 = bitcast %union.anon* %412 to i64*
  %413 = load i64, i64* %PC.i1042
  %414 = add i64 %413, 8
  store i64 %414, i64* %PC.i1042
  %415 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %415, i64* %RAX.i1043, align 8
  store %struct.Memory* %loadMem_425ccd, %struct.Memory** %MEMORY
  %loadMem_425cd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %417 = getelementptr inbounds %struct.GPR, %struct.GPR* %416, i32 0, i32 33
  %418 = getelementptr inbounds %struct.Reg, %struct.Reg* %417, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %418 to i64*
  %419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %420 = getelementptr inbounds %struct.GPR, %struct.GPR* %419, i32 0, i32 1
  %421 = getelementptr inbounds %struct.Reg, %struct.Reg* %420, i32 0, i32 0
  %RAX.i1040 = bitcast %union.anon* %421 to i64*
  %422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %423 = getelementptr inbounds %struct.GPR, %struct.GPR* %422, i32 0, i32 5
  %424 = getelementptr inbounds %struct.Reg, %struct.Reg* %423, i32 0, i32 0
  %RCX.i1041 = bitcast %union.anon* %424 to i64*
  %425 = load i64, i64* %RAX.i1040
  %426 = add i64 %425, 12
  %427 = load i64, i64* %PC.i1039
  %428 = add i64 %427, 3
  store i64 %428, i64* %PC.i1039
  %429 = inttoptr i64 %426 to i32*
  %430 = load i32, i32* %429
  %431 = zext i32 %430 to i64
  store i64 %431, i64* %RCX.i1041, align 8
  store %struct.Memory* %loadMem_425cd5, %struct.Memory** %MEMORY
  %loadMem_425cd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %433 = getelementptr inbounds %struct.GPR, %struct.GPR* %432, i32 0, i32 33
  %434 = getelementptr inbounds %struct.Reg, %struct.Reg* %433, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %434 to i64*
  %435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %436 = getelementptr inbounds %struct.GPR, %struct.GPR* %435, i32 0, i32 5
  %437 = getelementptr inbounds %struct.Reg, %struct.Reg* %436, i32 0, i32 0
  %RCX.i1038 = bitcast %union.anon* %437 to i64*
  %438 = load i64, i64* %RCX.i1038
  %439 = load i64, i64* %PC.i1037
  %440 = add i64 %439, 2
  store i64 %440, i64* %PC.i1037
  %441 = shl i64 %438, 32
  %442 = ashr i64 %441, 33
  %443 = trunc i64 %438 to i8
  %444 = and i8 %443, 1
  %445 = trunc i64 %442 to i32
  %446 = and i64 %442, 4294967295
  store i64 %446, i64* %RCX.i1038, align 8
  %447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %444, i8* %447, align 1
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %449 = and i32 %445, 255
  %450 = call i32 @llvm.ctpop.i32(i32 %449)
  %451 = trunc i32 %450 to i8
  %452 = and i8 %451, 1
  %453 = xor i8 %452, 1
  store i8 %453, i8* %448, align 1
  %454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %454, align 1
  %455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %456 = icmp eq i32 %445, 0
  %457 = zext i1 %456 to i8
  store i8 %457, i8* %455, align 1
  %458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %459 = lshr i32 %445, 31
  %460 = trunc i32 %459 to i8
  store i8 %460, i8* %458, align 1
  %461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %461, align 1
  store %struct.Memory* %loadMem_425cd8, %struct.Memory** %MEMORY
  %loadMem_425cdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %463 = getelementptr inbounds %struct.GPR, %struct.GPR* %462, i32 0, i32 33
  %464 = getelementptr inbounds %struct.Reg, %struct.Reg* %463, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %464 to i64*
  %465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %466 = getelementptr inbounds %struct.GPR, %struct.GPR* %465, i32 0, i32 7
  %467 = getelementptr inbounds %struct.Reg, %struct.Reg* %466, i32 0, i32 0
  %RDX.i1035 = bitcast %union.anon* %467 to i64*
  %468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %469 = getelementptr inbounds %struct.GPR, %struct.GPR* %468, i32 0, i32 15
  %470 = getelementptr inbounds %struct.Reg, %struct.Reg* %469, i32 0, i32 0
  %RBP.i1036 = bitcast %union.anon* %470 to i64*
  %471 = load i64, i64* %RBP.i1036
  %472 = sub i64 %471, 16
  %473 = load i64, i64* %PC.i1034
  %474 = add i64 %473, 4
  store i64 %474, i64* %PC.i1034
  %475 = inttoptr i64 %472 to i64*
  %476 = load i64, i64* %475
  store i64 %476, i64* %RDX.i1035, align 8
  store %struct.Memory* %loadMem_425cdb, %struct.Memory** %MEMORY
  %loadMem_425cdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %478 = getelementptr inbounds %struct.GPR, %struct.GPR* %477, i32 0, i32 33
  %479 = getelementptr inbounds %struct.Reg, %struct.Reg* %478, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %479 to i64*
  %480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %481 = getelementptr inbounds %struct.GPR, %struct.GPR* %480, i32 0, i32 5
  %482 = getelementptr inbounds %struct.Reg, %struct.Reg* %481, i32 0, i32 0
  %ECX.i1032 = bitcast %union.anon* %482 to i32*
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %484 = getelementptr inbounds %struct.GPR, %struct.GPR* %483, i32 0, i32 9
  %485 = getelementptr inbounds %struct.Reg, %struct.Reg* %484, i32 0, i32 0
  %RSI.i1033 = bitcast %union.anon* %485 to i64*
  %486 = load i32, i32* %ECX.i1032
  %487 = zext i32 %486 to i64
  %488 = load i64, i64* %PC.i1031
  %489 = add i64 %488, 2
  store i64 %489, i64* %PC.i1031
  %490 = and i64 %487, 4294967295
  store i64 %490, i64* %RSI.i1033, align 8
  store %struct.Memory* %loadMem_425cdf, %struct.Memory** %MEMORY
  %loadMem1_425ce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %492 = getelementptr inbounds %struct.GPR, %struct.GPR* %491, i32 0, i32 33
  %493 = getelementptr inbounds %struct.Reg, %struct.Reg* %492, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %493 to i64*
  %494 = load i64, i64* %PC.i1030
  %495 = add i64 %494, 551359
  %496 = load i64, i64* %PC.i1030
  %497 = add i64 %496, 5
  %498 = load i64, i64* %PC.i1030
  %499 = add i64 %498, 5
  store i64 %499, i64* %PC.i1030
  %500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %501 = load i64, i64* %500, align 8
  %502 = add i64 %501, -8
  %503 = inttoptr i64 %502 to i64*
  store i64 %497, i64* %503
  store i64 %502, i64* %500, align 8
  %504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %495, i64* %504, align 8
  store %struct.Memory* %loadMem1_425ce1, %struct.Memory** %MEMORY
  %loadMem2_425ce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_425ce1 = load i64, i64* %3
  %call2_425ce1 = call %struct.Memory* @sub_4ac6a0.ue_v(%struct.State* %0, i64 %loadPC_425ce1, %struct.Memory* %loadMem2_425ce1)
  store %struct.Memory* %call2_425ce1, %struct.Memory** %MEMORY
  %loadMem_425ce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %506 = getelementptr inbounds %struct.GPR, %struct.GPR* %505, i32 0, i32 33
  %507 = getelementptr inbounds %struct.Reg, %struct.Reg* %506, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %507 to i64*
  %508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %509 = getelementptr inbounds %struct.GPR, %struct.GPR* %508, i32 0, i32 1
  %510 = getelementptr inbounds %struct.Reg, %struct.Reg* %509, i32 0, i32 0
  %EAX.i1028 = bitcast %union.anon* %510 to i32*
  %511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %512 = getelementptr inbounds %struct.GPR, %struct.GPR* %511, i32 0, i32 15
  %513 = getelementptr inbounds %struct.Reg, %struct.Reg* %512, i32 0, i32 0
  %RBP.i1029 = bitcast %union.anon* %513 to i64*
  %514 = load i64, i64* %RBP.i1029
  %515 = sub i64 %514, 28
  %516 = load i32, i32* %EAX.i1028
  %517 = zext i32 %516 to i64
  %518 = load i64, i64* %PC.i1027
  %519 = add i64 %518, 3
  store i64 %519, i64* %PC.i1027
  %520 = inttoptr i64 %515 to i32*
  store i32 %516, i32* %520
  store %struct.Memory* %loadMem_425ce6, %struct.Memory** %MEMORY
  %loadMem_425ce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %522 = getelementptr inbounds %struct.GPR, %struct.GPR* %521, i32 0, i32 33
  %523 = getelementptr inbounds %struct.Reg, %struct.Reg* %522, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %523 to i64*
  %524 = load i64, i64* %PC.i1026
  %525 = add i64 %524, 38
  %526 = load i64, i64* %PC.i1026
  %527 = add i64 %526, 5
  store i64 %527, i64* %PC.i1026
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %525, i64* %528, align 8
  store %struct.Memory* %loadMem_425ce9, %struct.Memory** %MEMORY
  br label %block_.L_425d0f

block_.L_425cee:                                  ; preds = %entry
  %loadMem_425cee = load %struct.Memory*, %struct.Memory** %MEMORY
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %530 = getelementptr inbounds %struct.GPR, %struct.GPR* %529, i32 0, i32 33
  %531 = getelementptr inbounds %struct.Reg, %struct.Reg* %530, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %531 to i64*
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %533 = getelementptr inbounds %struct.GPR, %struct.GPR* %532, i32 0, i32 11
  %534 = getelementptr inbounds %struct.Reg, %struct.Reg* %533, i32 0, i32 0
  %RDI.i1025 = bitcast %union.anon* %534 to i64*
  %535 = load i64, i64* %PC.i1024
  %536 = add i64 %535, 10
  store i64 %536, i64* %PC.i1024
  store i64 ptrtoint (%G__0x4bfa23_type* @G__0x4bfa23 to i64), i64* %RDI.i1025, align 8
  store %struct.Memory* %loadMem_425cee, %struct.Memory** %MEMORY
  %loadMem_425cf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %538 = getelementptr inbounds %struct.GPR, %struct.GPR* %537, i32 0, i32 33
  %539 = getelementptr inbounds %struct.Reg, %struct.Reg* %538, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %539 to i64*
  %540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %541 = getelementptr inbounds %struct.GPR, %struct.GPR* %540, i32 0, i32 1
  %542 = getelementptr inbounds %struct.Reg, %struct.Reg* %541, i32 0, i32 0
  %RAX.i1023 = bitcast %union.anon* %542 to i64*
  %543 = load i64, i64* %PC.i1022
  %544 = add i64 %543, 8
  store i64 %544, i64* %PC.i1022
  %545 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %545, i64* %RAX.i1023, align 8
  store %struct.Memory* %loadMem_425cf8, %struct.Memory** %MEMORY
  %loadMem_425d00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %547 = getelementptr inbounds %struct.GPR, %struct.GPR* %546, i32 0, i32 33
  %548 = getelementptr inbounds %struct.Reg, %struct.Reg* %547, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %548 to i64*
  %549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %550 = getelementptr inbounds %struct.GPR, %struct.GPR* %549, i32 0, i32 1
  %551 = getelementptr inbounds %struct.Reg, %struct.Reg* %550, i32 0, i32 0
  %RAX.i1020 = bitcast %union.anon* %551 to i64*
  %552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %553 = getelementptr inbounds %struct.GPR, %struct.GPR* %552, i32 0, i32 9
  %554 = getelementptr inbounds %struct.Reg, %struct.Reg* %553, i32 0, i32 0
  %RSI.i1021 = bitcast %union.anon* %554 to i64*
  %555 = load i64, i64* %RAX.i1020
  %556 = add i64 %555, 12
  %557 = load i64, i64* %PC.i1019
  %558 = add i64 %557, 3
  store i64 %558, i64* %PC.i1019
  %559 = inttoptr i64 %556 to i32*
  %560 = load i32, i32* %559
  %561 = zext i32 %560 to i64
  store i64 %561, i64* %RSI.i1021, align 8
  store %struct.Memory* %loadMem_425d00, %struct.Memory** %MEMORY
  %loadMem_425d03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %563 = getelementptr inbounds %struct.GPR, %struct.GPR* %562, i32 0, i32 33
  %564 = getelementptr inbounds %struct.Reg, %struct.Reg* %563, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %564 to i64*
  %565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %566 = getelementptr inbounds %struct.GPR, %struct.GPR* %565, i32 0, i32 7
  %567 = getelementptr inbounds %struct.Reg, %struct.Reg* %566, i32 0, i32 0
  %RDX.i1017 = bitcast %union.anon* %567 to i64*
  %568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %569 = getelementptr inbounds %struct.GPR, %struct.GPR* %568, i32 0, i32 15
  %570 = getelementptr inbounds %struct.Reg, %struct.Reg* %569, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %570 to i64*
  %571 = load i64, i64* %RBP.i1018
  %572 = sub i64 %571, 16
  %573 = load i64, i64* %PC.i1016
  %574 = add i64 %573, 4
  store i64 %574, i64* %PC.i1016
  %575 = inttoptr i64 %572 to i64*
  %576 = load i64, i64* %575
  store i64 %576, i64* %RDX.i1017, align 8
  store %struct.Memory* %loadMem_425d03, %struct.Memory** %MEMORY
  %loadMem1_425d07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %578 = getelementptr inbounds %struct.GPR, %struct.GPR* %577, i32 0, i32 33
  %579 = getelementptr inbounds %struct.Reg, %struct.Reg* %578, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %579 to i64*
  %580 = load i64, i64* %PC.i1015
  %581 = add i64 %580, 551321
  %582 = load i64, i64* %PC.i1015
  %583 = add i64 %582, 5
  %584 = load i64, i64* %PC.i1015
  %585 = add i64 %584, 5
  store i64 %585, i64* %PC.i1015
  %586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %587 = load i64, i64* %586, align 8
  %588 = add i64 %587, -8
  %589 = inttoptr i64 %588 to i64*
  store i64 %583, i64* %589
  store i64 %588, i64* %586, align 8
  %590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %581, i64* %590, align 8
  store %struct.Memory* %loadMem1_425d07, %struct.Memory** %MEMORY
  %loadMem2_425d07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_425d07 = load i64, i64* %3
  %call2_425d07 = call %struct.Memory* @sub_4ac6a0.ue_v(%struct.State* %0, i64 %loadPC_425d07, %struct.Memory* %loadMem2_425d07)
  store %struct.Memory* %call2_425d07, %struct.Memory** %MEMORY
  %loadMem_425d0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %592 = getelementptr inbounds %struct.GPR, %struct.GPR* %591, i32 0, i32 33
  %593 = getelementptr inbounds %struct.Reg, %struct.Reg* %592, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %593 to i64*
  %594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %595 = getelementptr inbounds %struct.GPR, %struct.GPR* %594, i32 0, i32 1
  %596 = getelementptr inbounds %struct.Reg, %struct.Reg* %595, i32 0, i32 0
  %EAX.i1013 = bitcast %union.anon* %596 to i32*
  %597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %598 = getelementptr inbounds %struct.GPR, %struct.GPR* %597, i32 0, i32 15
  %599 = getelementptr inbounds %struct.Reg, %struct.Reg* %598, i32 0, i32 0
  %RBP.i1014 = bitcast %union.anon* %599 to i64*
  %600 = load i64, i64* %RBP.i1014
  %601 = sub i64 %600, 28
  %602 = load i32, i32* %EAX.i1013
  %603 = zext i32 %602 to i64
  %604 = load i64, i64* %PC.i1012
  %605 = add i64 %604, 3
  store i64 %605, i64* %PC.i1012
  %606 = inttoptr i64 %601 to i32*
  store i32 %602, i32* %606
  store %struct.Memory* %loadMem_425d0c, %struct.Memory** %MEMORY
  br label %block_.L_425d0f

block_.L_425d0f:                                  ; preds = %block_.L_425cee, %block_425cc3
  %loadMem1_425d0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %608 = getelementptr inbounds %struct.GPR, %struct.GPR* %607, i32 0, i32 33
  %609 = getelementptr inbounds %struct.Reg, %struct.Reg* %608, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %609 to i64*
  %610 = load i64, i64* %PC.i1011
  %611 = add i64 %610, 2353
  %612 = load i64, i64* %PC.i1011
  %613 = add i64 %612, 5
  %614 = load i64, i64* %PC.i1011
  %615 = add i64 %614, 5
  store i64 %615, i64* %PC.i1011
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %617 = load i64, i64* %616, align 8
  %618 = add i64 %617, -8
  %619 = inttoptr i64 %618 to i64*
  store i64 %613, i64* %619
  store i64 %618, i64* %616, align 8
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %611, i64* %620, align 8
  store %struct.Memory* %loadMem1_425d0f, %struct.Memory** %MEMORY
  %loadMem2_425d0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_425d0f = load i64, i64* %3
  %call2_425d0f = call %struct.Memory* @sub_426640.get_picture_type(%struct.State* %0, i64 %loadPC_425d0f, %struct.Memory* %loadMem2_425d0f)
  store %struct.Memory* %call2_425d0f, %struct.Memory** %MEMORY
  %loadMem_425d14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %622 = getelementptr inbounds %struct.GPR, %struct.GPR* %621, i32 0, i32 33
  %623 = getelementptr inbounds %struct.Reg, %struct.Reg* %622, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %623 to i64*
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %625 = getelementptr inbounds %struct.GPR, %struct.GPR* %624, i32 0, i32 11
  %626 = getelementptr inbounds %struct.Reg, %struct.Reg* %625, i32 0, i32 0
  %RDI.i1010 = bitcast %union.anon* %626 to i64*
  %627 = load i64, i64* %PC.i1009
  %628 = add i64 %627, 10
  store i64 %628, i64* %PC.i1009
  store i64 ptrtoint (%G__0x4bfa39_type* @G__0x4bfa39 to i64), i64* %RDI.i1010, align 8
  store %struct.Memory* %loadMem_425d14, %struct.Memory** %MEMORY
  %loadMem_425d1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %630 = getelementptr inbounds %struct.GPR, %struct.GPR* %629, i32 0, i32 33
  %631 = getelementptr inbounds %struct.Reg, %struct.Reg* %630, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %631 to i64*
  %632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %633 = getelementptr inbounds %struct.GPR, %struct.GPR* %632, i32 0, i32 7
  %634 = getelementptr inbounds %struct.Reg, %struct.Reg* %633, i32 0, i32 0
  %RDX.i1007 = bitcast %union.anon* %634 to i64*
  %635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %636 = getelementptr inbounds %struct.GPR, %struct.GPR* %635, i32 0, i32 15
  %637 = getelementptr inbounds %struct.Reg, %struct.Reg* %636, i32 0, i32 0
  %RBP.i1008 = bitcast %union.anon* %637 to i64*
  %638 = load i64, i64* %RBP.i1008
  %639 = sub i64 %638, 16
  %640 = load i64, i64* %PC.i1006
  %641 = add i64 %640, 4
  store i64 %641, i64* %PC.i1006
  %642 = inttoptr i64 %639 to i64*
  %643 = load i64, i64* %642
  store i64 %643, i64* %RDX.i1007, align 8
  store %struct.Memory* %loadMem_425d1e, %struct.Memory** %MEMORY
  %loadMem_425d22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %645 = getelementptr inbounds %struct.GPR, %struct.GPR* %644, i32 0, i32 33
  %646 = getelementptr inbounds %struct.Reg, %struct.Reg* %645, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %646 to i64*
  %647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %648 = getelementptr inbounds %struct.GPR, %struct.GPR* %647, i32 0, i32 1
  %649 = getelementptr inbounds %struct.Reg, %struct.Reg* %648, i32 0, i32 0
  %EAX.i1004 = bitcast %union.anon* %649 to i32*
  %650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %651 = getelementptr inbounds %struct.GPR, %struct.GPR* %650, i32 0, i32 9
  %652 = getelementptr inbounds %struct.Reg, %struct.Reg* %651, i32 0, i32 0
  %RSI.i1005 = bitcast %union.anon* %652 to i64*
  %653 = load i32, i32* %EAX.i1004
  %654 = zext i32 %653 to i64
  %655 = load i64, i64* %PC.i1003
  %656 = add i64 %655, 2
  store i64 %656, i64* %PC.i1003
  %657 = and i64 %654, 4294967295
  store i64 %657, i64* %RSI.i1005, align 8
  store %struct.Memory* %loadMem_425d22, %struct.Memory** %MEMORY
  %loadMem1_425d24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %659 = getelementptr inbounds %struct.GPR, %struct.GPR* %658, i32 0, i32 33
  %660 = getelementptr inbounds %struct.Reg, %struct.Reg* %659, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %660 to i64*
  %661 = load i64, i64* %PC.i1002
  %662 = add i64 %661, 551292
  %663 = load i64, i64* %PC.i1002
  %664 = add i64 %663, 5
  %665 = load i64, i64* %PC.i1002
  %666 = add i64 %665, 5
  store i64 %666, i64* %PC.i1002
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %668 = load i64, i64* %667, align 8
  %669 = add i64 %668, -8
  %670 = inttoptr i64 %669 to i64*
  store i64 %664, i64* %670
  store i64 %669, i64* %667, align 8
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %662, i64* %671, align 8
  store %struct.Memory* %loadMem1_425d24, %struct.Memory** %MEMORY
  %loadMem2_425d24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_425d24 = load i64, i64* %3
  %call2_425d24 = call %struct.Memory* @sub_4ac6a0.ue_v(%struct.State* %0, i64 %loadPC_425d24, %struct.Memory* %loadMem2_425d24)
  store %struct.Memory* %call2_425d24, %struct.Memory** %MEMORY
  %loadMem_425d29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %673 = getelementptr inbounds %struct.GPR, %struct.GPR* %672, i32 0, i32 33
  %674 = getelementptr inbounds %struct.Reg, %struct.Reg* %673, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %674 to i64*
  %675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %676 = getelementptr inbounds %struct.GPR, %struct.GPR* %675, i32 0, i32 11
  %677 = getelementptr inbounds %struct.Reg, %struct.Reg* %676, i32 0, i32 0
  %RDI.i1001 = bitcast %union.anon* %677 to i64*
  %678 = load i64, i64* %PC.i1000
  %679 = add i64 %678, 10
  store i64 %679, i64* %PC.i1000
  store i64 ptrtoint (%G__0x4bfa48_type* @G__0x4bfa48 to i64), i64* %RDI.i1001, align 8
  store %struct.Memory* %loadMem_425d29, %struct.Memory** %MEMORY
  %loadMem_425d33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %681 = getelementptr inbounds %struct.GPR, %struct.GPR* %680, i32 0, i32 33
  %682 = getelementptr inbounds %struct.Reg, %struct.Reg* %681, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %682 to i64*
  %683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %684 = getelementptr inbounds %struct.GPR, %struct.GPR* %683, i32 0, i32 1
  %685 = getelementptr inbounds %struct.Reg, %struct.Reg* %684, i32 0, i32 0
  %RAX.i998 = bitcast %union.anon* %685 to i64*
  %686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %687 = getelementptr inbounds %struct.GPR, %struct.GPR* %686, i32 0, i32 15
  %688 = getelementptr inbounds %struct.Reg, %struct.Reg* %687, i32 0, i32 0
  %RBP.i999 = bitcast %union.anon* %688 to i64*
  %689 = load i64, i64* %RAX.i998
  %690 = load i64, i64* %RBP.i999
  %691 = sub i64 %690, 28
  %692 = load i64, i64* %PC.i997
  %693 = add i64 %692, 3
  store i64 %693, i64* %PC.i997
  %694 = trunc i64 %689 to i32
  %695 = inttoptr i64 %691 to i32*
  %696 = load i32, i32* %695
  %697 = add i32 %696, %694
  %698 = zext i32 %697 to i64
  store i64 %698, i64* %RAX.i998, align 8
  %699 = icmp ult i32 %697, %694
  %700 = icmp ult i32 %697, %696
  %701 = or i1 %699, %700
  %702 = zext i1 %701 to i8
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %702, i8* %703, align 1
  %704 = and i32 %697, 255
  %705 = call i32 @llvm.ctpop.i32(i32 %704)
  %706 = trunc i32 %705 to i8
  %707 = and i8 %706, 1
  %708 = xor i8 %707, 1
  %709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %708, i8* %709, align 1
  %710 = xor i32 %696, %694
  %711 = xor i32 %710, %697
  %712 = lshr i32 %711, 4
  %713 = trunc i32 %712 to i8
  %714 = and i8 %713, 1
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %714, i8* %715, align 1
  %716 = icmp eq i32 %697, 0
  %717 = zext i1 %716 to i8
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %717, i8* %718, align 1
  %719 = lshr i32 %697, 31
  %720 = trunc i32 %719 to i8
  %721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %720, i8* %721, align 1
  %722 = lshr i32 %694, 31
  %723 = lshr i32 %696, 31
  %724 = xor i32 %719, %722
  %725 = xor i32 %719, %723
  %726 = add i32 %724, %725
  %727 = icmp eq i32 %726, 2
  %728 = zext i1 %727 to i8
  %729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %728, i8* %729, align 1
  store %struct.Memory* %loadMem_425d33, %struct.Memory** %MEMORY
  %loadMem_425d36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %731 = getelementptr inbounds %struct.GPR, %struct.GPR* %730, i32 0, i32 33
  %732 = getelementptr inbounds %struct.Reg, %struct.Reg* %731, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %732 to i64*
  %733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %734 = getelementptr inbounds %struct.GPR, %struct.GPR* %733, i32 0, i32 1
  %735 = getelementptr inbounds %struct.Reg, %struct.Reg* %734, i32 0, i32 0
  %EAX.i995 = bitcast %union.anon* %735 to i32*
  %736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %737 = getelementptr inbounds %struct.GPR, %struct.GPR* %736, i32 0, i32 15
  %738 = getelementptr inbounds %struct.Reg, %struct.Reg* %737, i32 0, i32 0
  %RBP.i996 = bitcast %union.anon* %738 to i64*
  %739 = load i64, i64* %RBP.i996
  %740 = sub i64 %739, 28
  %741 = load i32, i32* %EAX.i995
  %742 = zext i32 %741 to i64
  %743 = load i64, i64* %PC.i994
  %744 = add i64 %743, 3
  store i64 %744, i64* %PC.i994
  %745 = inttoptr i64 %740 to i32*
  store i32 %741, i32* %745
  store %struct.Memory* %loadMem_425d36, %struct.Memory** %MEMORY
  %loadMem_425d39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %747 = getelementptr inbounds %struct.GPR, %struct.GPR* %746, i32 0, i32 33
  %748 = getelementptr inbounds %struct.Reg, %struct.Reg* %747, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %748 to i64*
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %750 = getelementptr inbounds %struct.GPR, %struct.GPR* %749, i32 0, i32 7
  %751 = getelementptr inbounds %struct.Reg, %struct.Reg* %750, i32 0, i32 0
  %RDX.i993 = bitcast %union.anon* %751 to i64*
  %752 = load i64, i64* %PC.i992
  %753 = add i64 %752, 8
  store i64 %753, i64* %PC.i992
  %754 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %754, i64* %RDX.i993, align 8
  store %struct.Memory* %loadMem_425d39, %struct.Memory** %MEMORY
  %loadMem_425d41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %756 = getelementptr inbounds %struct.GPR, %struct.GPR* %755, i32 0, i32 33
  %757 = getelementptr inbounds %struct.Reg, %struct.Reg* %756, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %757 to i64*
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %759 = getelementptr inbounds %struct.GPR, %struct.GPR* %758, i32 0, i32 7
  %760 = getelementptr inbounds %struct.Reg, %struct.Reg* %759, i32 0, i32 0
  %RDX.i990 = bitcast %union.anon* %760 to i64*
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %762 = getelementptr inbounds %struct.GPR, %struct.GPR* %761, i32 0, i32 9
  %763 = getelementptr inbounds %struct.Reg, %struct.Reg* %762, i32 0, i32 0
  %RSI.i991 = bitcast %union.anon* %763 to i64*
  %764 = load i64, i64* %RDX.i990
  %765 = add i64 %764, 4
  %766 = load i64, i64* %PC.i989
  %767 = add i64 %766, 3
  store i64 %767, i64* %PC.i989
  %768 = inttoptr i64 %765 to i32*
  %769 = load i32, i32* %768
  %770 = zext i32 %769 to i64
  store i64 %770, i64* %RSI.i991, align 8
  store %struct.Memory* %loadMem_425d41, %struct.Memory** %MEMORY
  %loadMem_425d44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %772 = getelementptr inbounds %struct.GPR, %struct.GPR* %771, i32 0, i32 33
  %773 = getelementptr inbounds %struct.Reg, %struct.Reg* %772, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %773 to i64*
  %774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %775 = getelementptr inbounds %struct.GPR, %struct.GPR* %774, i32 0, i32 7
  %776 = getelementptr inbounds %struct.Reg, %struct.Reg* %775, i32 0, i32 0
  %RDX.i987 = bitcast %union.anon* %776 to i64*
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %778 = getelementptr inbounds %struct.GPR, %struct.GPR* %777, i32 0, i32 15
  %779 = getelementptr inbounds %struct.Reg, %struct.Reg* %778, i32 0, i32 0
  %RBP.i988 = bitcast %union.anon* %779 to i64*
  %780 = load i64, i64* %RBP.i988
  %781 = sub i64 %780, 16
  %782 = load i64, i64* %PC.i986
  %783 = add i64 %782, 4
  store i64 %783, i64* %PC.i986
  %784 = inttoptr i64 %781 to i64*
  %785 = load i64, i64* %784
  store i64 %785, i64* %RDX.i987, align 8
  store %struct.Memory* %loadMem_425d44, %struct.Memory** %MEMORY
  %loadMem1_425d48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %787 = getelementptr inbounds %struct.GPR, %struct.GPR* %786, i32 0, i32 33
  %788 = getelementptr inbounds %struct.Reg, %struct.Reg* %787, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %788 to i64*
  %789 = load i64, i64* %PC.i985
  %790 = add i64 %789, 551256
  %791 = load i64, i64* %PC.i985
  %792 = add i64 %791, 5
  %793 = load i64, i64* %PC.i985
  %794 = add i64 %793, 5
  store i64 %794, i64* %PC.i985
  %795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %796 = load i64, i64* %795, align 8
  %797 = add i64 %796, -8
  %798 = inttoptr i64 %797 to i64*
  store i64 %792, i64* %798
  store i64 %797, i64* %795, align 8
  %799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %790, i64* %799, align 8
  store %struct.Memory* %loadMem1_425d48, %struct.Memory** %MEMORY
  %loadMem2_425d48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_425d48 = load i64, i64* %3
  %call2_425d48 = call %struct.Memory* @sub_4ac6a0.ue_v(%struct.State* %0, i64 %loadPC_425d48, %struct.Memory* %loadMem2_425d48)
  store %struct.Memory* %call2_425d48, %struct.Memory** %MEMORY
  %loadMem_425d4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %801 = getelementptr inbounds %struct.GPR, %struct.GPR* %800, i32 0, i32 33
  %802 = getelementptr inbounds %struct.Reg, %struct.Reg* %801, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %802 to i64*
  %803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %804 = getelementptr inbounds %struct.GPR, %struct.GPR* %803, i32 0, i32 9
  %805 = getelementptr inbounds %struct.Reg, %struct.Reg* %804, i32 0, i32 0
  %RSI.i984 = bitcast %union.anon* %805 to i64*
  %806 = load i64, i64* %PC.i983
  %807 = add i64 %806, 10
  store i64 %807, i64* %PC.i983
  store i64 ptrtoint (%G__0x4bfa61_type* @G__0x4bfa61 to i64), i64* %RSI.i984, align 8
  store %struct.Memory* %loadMem_425d4d, %struct.Memory** %MEMORY
  %loadMem_425d57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %809 = getelementptr inbounds %struct.GPR, %struct.GPR* %808, i32 0, i32 33
  %810 = getelementptr inbounds %struct.Reg, %struct.Reg* %809, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %810 to i64*
  %811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %812 = getelementptr inbounds %struct.GPR, %struct.GPR* %811, i32 0, i32 1
  %813 = getelementptr inbounds %struct.Reg, %struct.Reg* %812, i32 0, i32 0
  %RAX.i981 = bitcast %union.anon* %813 to i64*
  %814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %815 = getelementptr inbounds %struct.GPR, %struct.GPR* %814, i32 0, i32 15
  %816 = getelementptr inbounds %struct.Reg, %struct.Reg* %815, i32 0, i32 0
  %RBP.i982 = bitcast %union.anon* %816 to i64*
  %817 = load i64, i64* %RAX.i981
  %818 = load i64, i64* %RBP.i982
  %819 = sub i64 %818, 28
  %820 = load i64, i64* %PC.i980
  %821 = add i64 %820, 3
  store i64 %821, i64* %PC.i980
  %822 = trunc i64 %817 to i32
  %823 = inttoptr i64 %819 to i32*
  %824 = load i32, i32* %823
  %825 = add i32 %824, %822
  %826 = zext i32 %825 to i64
  store i64 %826, i64* %RAX.i981, align 8
  %827 = icmp ult i32 %825, %822
  %828 = icmp ult i32 %825, %824
  %829 = or i1 %827, %828
  %830 = zext i1 %829 to i8
  %831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %830, i8* %831, align 1
  %832 = and i32 %825, 255
  %833 = call i32 @llvm.ctpop.i32(i32 %832)
  %834 = trunc i32 %833 to i8
  %835 = and i8 %834, 1
  %836 = xor i8 %835, 1
  %837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %836, i8* %837, align 1
  %838 = xor i32 %824, %822
  %839 = xor i32 %838, %825
  %840 = lshr i32 %839, 4
  %841 = trunc i32 %840 to i8
  %842 = and i8 %841, 1
  %843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %842, i8* %843, align 1
  %844 = icmp eq i32 %825, 0
  %845 = zext i1 %844 to i8
  %846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %845, i8* %846, align 1
  %847 = lshr i32 %825, 31
  %848 = trunc i32 %847 to i8
  %849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %848, i8* %849, align 1
  %850 = lshr i32 %822, 31
  %851 = lshr i32 %824, 31
  %852 = xor i32 %847, %850
  %853 = xor i32 %847, %851
  %854 = add i32 %852, %853
  %855 = icmp eq i32 %854, 2
  %856 = zext i1 %855 to i8
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %856, i8* %857, align 1
  store %struct.Memory* %loadMem_425d57, %struct.Memory** %MEMORY
  %loadMem_425d5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %859 = getelementptr inbounds %struct.GPR, %struct.GPR* %858, i32 0, i32 33
  %860 = getelementptr inbounds %struct.Reg, %struct.Reg* %859, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %860 to i64*
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %862 = getelementptr inbounds %struct.GPR, %struct.GPR* %861, i32 0, i32 1
  %863 = getelementptr inbounds %struct.Reg, %struct.Reg* %862, i32 0, i32 0
  %EAX.i978 = bitcast %union.anon* %863 to i32*
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %865 = getelementptr inbounds %struct.GPR, %struct.GPR* %864, i32 0, i32 15
  %866 = getelementptr inbounds %struct.Reg, %struct.Reg* %865, i32 0, i32 0
  %RBP.i979 = bitcast %union.anon* %866 to i64*
  %867 = load i64, i64* %RBP.i979
  %868 = sub i64 %867, 28
  %869 = load i32, i32* %EAX.i978
  %870 = zext i32 %869 to i64
  %871 = load i64, i64* %PC.i977
  %872 = add i64 %871, 3
  store i64 %872, i64* %PC.i977
  %873 = inttoptr i64 %868 to i32*
  store i32 %869, i32* %873
  store %struct.Memory* %loadMem_425d5a, %struct.Memory** %MEMORY
  %loadMem_425d5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %875 = getelementptr inbounds %struct.GPR, %struct.GPR* %874, i32 0, i32 33
  %876 = getelementptr inbounds %struct.Reg, %struct.Reg* %875, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %876 to i64*
  %877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %878 = getelementptr inbounds %struct.GPR, %struct.GPR* %877, i32 0, i32 1
  %879 = getelementptr inbounds %struct.Reg, %struct.Reg* %878, i32 0, i32 0
  %RAX.i976 = bitcast %union.anon* %879 to i64*
  %880 = load i64, i64* %PC.i975
  %881 = add i64 %880, 7
  store i64 %881, i64* %PC.i975
  %882 = load i32, i32* bitcast (%G_0x722c98_type* @G_0x722c98 to i32*)
  %883 = zext i32 %882 to i64
  store i64 %883, i64* %RAX.i976, align 8
  store %struct.Memory* %loadMem_425d5d, %struct.Memory** %MEMORY
  %loadMem_425d64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 33
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %886 to i64*
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %888 = getelementptr inbounds %struct.GPR, %struct.GPR* %887, i32 0, i32 1
  %889 = getelementptr inbounds %struct.Reg, %struct.Reg* %888, i32 0, i32 0
  %RAX.i974 = bitcast %union.anon* %889 to i64*
  %890 = load i64, i64* %RAX.i974
  %891 = load i64, i64* %PC.i973
  %892 = add i64 %891, 3
  store i64 %892, i64* %PC.i973
  %893 = trunc i64 %890 to i32
  %894 = add i32 4, %893
  %895 = zext i32 %894 to i64
  store i64 %895, i64* %RAX.i974, align 8
  %896 = icmp ult i32 %894, %893
  %897 = icmp ult i32 %894, 4
  %898 = or i1 %896, %897
  %899 = zext i1 %898 to i8
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %899, i8* %900, align 1
  %901 = and i32 %894, 255
  %902 = call i32 @llvm.ctpop.i32(i32 %901)
  %903 = trunc i32 %902 to i8
  %904 = and i8 %903, 1
  %905 = xor i8 %904, 1
  %906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %905, i8* %906, align 1
  %907 = xor i64 4, %890
  %908 = trunc i64 %907 to i32
  %909 = xor i32 %908, %894
  %910 = lshr i32 %909, 4
  %911 = trunc i32 %910 to i8
  %912 = and i8 %911, 1
  %913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %912, i8* %913, align 1
  %914 = icmp eq i32 %894, 0
  %915 = zext i1 %914 to i8
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %915, i8* %916, align 1
  %917 = lshr i32 %894, 31
  %918 = trunc i32 %917 to i8
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %918, i8* %919, align 1
  %920 = lshr i32 %893, 31
  %921 = xor i32 %917, %920
  %922 = add i32 %921, %917
  %923 = icmp eq i32 %922, 2
  %924 = zext i1 %923 to i8
  %925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %924, i8* %925, align 1
  store %struct.Memory* %loadMem_425d64, %struct.Memory** %MEMORY
  %loadMem_425d67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %927 = getelementptr inbounds %struct.GPR, %struct.GPR* %926, i32 0, i32 33
  %928 = getelementptr inbounds %struct.Reg, %struct.Reg* %927, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %928 to i64*
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %930 = getelementptr inbounds %struct.GPR, %struct.GPR* %929, i32 0, i32 7
  %931 = getelementptr inbounds %struct.Reg, %struct.Reg* %930, i32 0, i32 0
  %RDX.i972 = bitcast %union.anon* %931 to i64*
  %932 = load i64, i64* %PC.i971
  %933 = add i64 %932, 8
  store i64 %933, i64* %PC.i971
  %934 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %934, i64* %RDX.i972, align 8
  store %struct.Memory* %loadMem_425d67, %struct.Memory** %MEMORY
  %loadMem_425d6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %936 = getelementptr inbounds %struct.GPR, %struct.GPR* %935, i32 0, i32 33
  %937 = getelementptr inbounds %struct.Reg, %struct.Reg* %936, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %937 to i64*
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %939 = getelementptr inbounds %struct.GPR, %struct.GPR* %938, i32 0, i32 7
  %940 = getelementptr inbounds %struct.Reg, %struct.Reg* %939, i32 0, i32 0
  %RDX.i970 = bitcast %union.anon* %940 to i64*
  %941 = load i64, i64* %RDX.i970
  %942 = add i64 %941, 72464
  %943 = load i64, i64* %PC.i969
  %944 = add i64 %943, 6
  store i64 %944, i64* %PC.i969
  %945 = inttoptr i64 %942 to i32*
  %946 = load i32, i32* %945
  %947 = zext i32 %946 to i64
  store i64 %947, i64* %RDX.i970, align 8
  store %struct.Memory* %loadMem_425d6f, %struct.Memory** %MEMORY
  %loadMem_425d75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %949 = getelementptr inbounds %struct.GPR, %struct.GPR* %948, i32 0, i32 33
  %950 = getelementptr inbounds %struct.Reg, %struct.Reg* %949, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %950 to i64*
  %951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %952 = getelementptr inbounds %struct.GPR, %struct.GPR* %951, i32 0, i32 5
  %953 = getelementptr inbounds %struct.Reg, %struct.Reg* %952, i32 0, i32 0
  %RCX.i967 = bitcast %union.anon* %953 to i64*
  %954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %955 = getelementptr inbounds %struct.GPR, %struct.GPR* %954, i32 0, i32 15
  %956 = getelementptr inbounds %struct.Reg, %struct.Reg* %955, i32 0, i32 0
  %RBP.i968 = bitcast %union.anon* %956 to i64*
  %957 = load i64, i64* %RBP.i968
  %958 = sub i64 %957, 16
  %959 = load i64, i64* %PC.i966
  %960 = add i64 %959, 4
  store i64 %960, i64* %PC.i966
  %961 = inttoptr i64 %958 to i64*
  %962 = load i64, i64* %961
  store i64 %962, i64* %RCX.i967, align 8
  store %struct.Memory* %loadMem_425d75, %struct.Memory** %MEMORY
  %loadMem_425d79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %964 = getelementptr inbounds %struct.GPR, %struct.GPR* %963, i32 0, i32 33
  %965 = getelementptr inbounds %struct.Reg, %struct.Reg* %964, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %965 to i64*
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %967 = getelementptr inbounds %struct.GPR, %struct.GPR* %966, i32 0, i32 1
  %968 = getelementptr inbounds %struct.Reg, %struct.Reg* %967, i32 0, i32 0
  %EAX.i964 = bitcast %union.anon* %968 to i32*
  %969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %970 = getelementptr inbounds %struct.GPR, %struct.GPR* %969, i32 0, i32 11
  %971 = getelementptr inbounds %struct.Reg, %struct.Reg* %970, i32 0, i32 0
  %RDI.i965 = bitcast %union.anon* %971 to i64*
  %972 = load i32, i32* %EAX.i964
  %973 = zext i32 %972 to i64
  %974 = load i64, i64* %PC.i963
  %975 = add i64 %974, 2
  store i64 %975, i64* %PC.i963
  %976 = and i64 %973, 4294967295
  store i64 %976, i64* %RDI.i965, align 8
  store %struct.Memory* %loadMem_425d79, %struct.Memory** %MEMORY
  %loadMem1_425d7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %978 = getelementptr inbounds %struct.GPR, %struct.GPR* %977, i32 0, i32 33
  %979 = getelementptr inbounds %struct.Reg, %struct.Reg* %978, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %979 to i64*
  %980 = load i64, i64* %PC.i962
  %981 = add i64 %980, 552517
  %982 = load i64, i64* %PC.i962
  %983 = add i64 %982, 5
  %984 = load i64, i64* %PC.i962
  %985 = add i64 %984, 5
  store i64 %985, i64* %PC.i962
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %987 = load i64, i64* %986, align 8
  %988 = add i64 %987, -8
  %989 = inttoptr i64 %988 to i64*
  store i64 %983, i64* %989
  store i64 %988, i64* %986, align 8
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %981, i64* %990, align 8
  store %struct.Memory* %loadMem1_425d7b, %struct.Memory** %MEMORY
  %loadMem2_425d7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_425d7b = load i64, i64* %3
  %call2_425d7b = call %struct.Memory* @sub_4acbc0.u_v(%struct.State* %0, i64 %loadPC_425d7b, %struct.Memory* %loadMem2_425d7b)
  store %struct.Memory* %call2_425d7b, %struct.Memory** %MEMORY
  %loadMem_425d80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %992 = getelementptr inbounds %struct.GPR, %struct.GPR* %991, i32 0, i32 33
  %993 = getelementptr inbounds %struct.Reg, %struct.Reg* %992, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %993 to i64*
  %994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %995 = getelementptr inbounds %struct.GPR, %struct.GPR* %994, i32 0, i32 1
  %996 = getelementptr inbounds %struct.Reg, %struct.Reg* %995, i32 0, i32 0
  %RAX.i960 = bitcast %union.anon* %996 to i64*
  %997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %998 = getelementptr inbounds %struct.GPR, %struct.GPR* %997, i32 0, i32 15
  %999 = getelementptr inbounds %struct.Reg, %struct.Reg* %998, i32 0, i32 0
  %RBP.i961 = bitcast %union.anon* %999 to i64*
  %1000 = load i64, i64* %RAX.i960
  %1001 = load i64, i64* %RBP.i961
  %1002 = sub i64 %1001, 28
  %1003 = load i64, i64* %PC.i959
  %1004 = add i64 %1003, 3
  store i64 %1004, i64* %PC.i959
  %1005 = trunc i64 %1000 to i32
  %1006 = inttoptr i64 %1002 to i32*
  %1007 = load i32, i32* %1006
  %1008 = add i32 %1007, %1005
  %1009 = zext i32 %1008 to i64
  store i64 %1009, i64* %RAX.i960, align 8
  %1010 = icmp ult i32 %1008, %1005
  %1011 = icmp ult i32 %1008, %1007
  %1012 = or i1 %1010, %1011
  %1013 = zext i1 %1012 to i8
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1013, i8* %1014, align 1
  %1015 = and i32 %1008, 255
  %1016 = call i32 @llvm.ctpop.i32(i32 %1015)
  %1017 = trunc i32 %1016 to i8
  %1018 = and i8 %1017, 1
  %1019 = xor i8 %1018, 1
  %1020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1019, i8* %1020, align 1
  %1021 = xor i32 %1007, %1005
  %1022 = xor i32 %1021, %1008
  %1023 = lshr i32 %1022, 4
  %1024 = trunc i32 %1023 to i8
  %1025 = and i8 %1024, 1
  %1026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1025, i8* %1026, align 1
  %1027 = icmp eq i32 %1008, 0
  %1028 = zext i1 %1027 to i8
  %1029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1028, i8* %1029, align 1
  %1030 = lshr i32 %1008, 31
  %1031 = trunc i32 %1030 to i8
  %1032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1031, i8* %1032, align 1
  %1033 = lshr i32 %1005, 31
  %1034 = lshr i32 %1007, 31
  %1035 = xor i32 %1030, %1033
  %1036 = xor i32 %1030, %1034
  %1037 = add i32 %1035, %1036
  %1038 = icmp eq i32 %1037, 2
  %1039 = zext i1 %1038 to i8
  %1040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1039, i8* %1040, align 1
  store %struct.Memory* %loadMem_425d80, %struct.Memory** %MEMORY
  %loadMem_425d83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1042 = getelementptr inbounds %struct.GPR, %struct.GPR* %1041, i32 0, i32 33
  %1043 = getelementptr inbounds %struct.Reg, %struct.Reg* %1042, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %1043 to i64*
  %1044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1045 = getelementptr inbounds %struct.GPR, %struct.GPR* %1044, i32 0, i32 1
  %1046 = getelementptr inbounds %struct.Reg, %struct.Reg* %1045, i32 0, i32 0
  %EAX.i957 = bitcast %union.anon* %1046 to i32*
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1048 = getelementptr inbounds %struct.GPR, %struct.GPR* %1047, i32 0, i32 15
  %1049 = getelementptr inbounds %struct.Reg, %struct.Reg* %1048, i32 0, i32 0
  %RBP.i958 = bitcast %union.anon* %1049 to i64*
  %1050 = load i64, i64* %RBP.i958
  %1051 = sub i64 %1050, 28
  %1052 = load i32, i32* %EAX.i957
  %1053 = zext i32 %1052 to i64
  %1054 = load i64, i64* %PC.i956
  %1055 = add i64 %1054, 3
  store i64 %1055, i64* %PC.i956
  %1056 = inttoptr i64 %1051 to i32*
  store i32 %1052, i32* %1056
  store %struct.Memory* %loadMem_425d83, %struct.Memory** %MEMORY
  %loadMem_425d86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1058 = getelementptr inbounds %struct.GPR, %struct.GPR* %1057, i32 0, i32 33
  %1059 = getelementptr inbounds %struct.Reg, %struct.Reg* %1058, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %1059 to i64*
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1061 = getelementptr inbounds %struct.GPR, %struct.GPR* %1060, i32 0, i32 5
  %1062 = getelementptr inbounds %struct.Reg, %struct.Reg* %1061, i32 0, i32 0
  %RCX.i955 = bitcast %union.anon* %1062 to i64*
  %1063 = load i64, i64* %PC.i954
  %1064 = add i64 %1063, 8
  store i64 %1064, i64* %PC.i954
  %1065 = load i64, i64* bitcast (%G_0x722cb0_type* @G_0x722cb0 to i64*)
  store i64 %1065, i64* %RCX.i955, align 8
  store %struct.Memory* %loadMem_425d86, %struct.Memory** %MEMORY
  %loadMem_425d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1067 = getelementptr inbounds %struct.GPR, %struct.GPR* %1066, i32 0, i32 33
  %1068 = getelementptr inbounds %struct.Reg, %struct.Reg* %1067, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %1068 to i64*
  %1069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1070 = getelementptr inbounds %struct.GPR, %struct.GPR* %1069, i32 0, i32 5
  %1071 = getelementptr inbounds %struct.Reg, %struct.Reg* %1070, i32 0, i32 0
  %RCX.i953 = bitcast %union.anon* %1071 to i64*
  %1072 = load i64, i64* %RCX.i953
  %1073 = add i64 %1072, 1148
  %1074 = load i64, i64* %PC.i952
  %1075 = add i64 %1074, 7
  store i64 %1075, i64* %PC.i952
  %1076 = inttoptr i64 %1073 to i32*
  %1077 = load i32, i32* %1076
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1078, align 1
  %1079 = and i32 %1077, 255
  %1080 = call i32 @llvm.ctpop.i32(i32 %1079)
  %1081 = trunc i32 %1080 to i8
  %1082 = and i8 %1081, 1
  %1083 = xor i8 %1082, 1
  %1084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1083, i8* %1084, align 1
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1085, align 1
  %1086 = icmp eq i32 %1077, 0
  %1087 = zext i1 %1086 to i8
  %1088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1087, i8* %1088, align 1
  %1089 = lshr i32 %1077, 31
  %1090 = trunc i32 %1089 to i8
  %1091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1090, i8* %1091, align 1
  %1092 = lshr i32 %1077, 31
  %1093 = xor i32 %1089, %1092
  %1094 = add i32 %1093, %1092
  %1095 = icmp eq i32 %1094, 2
  %1096 = zext i1 %1095 to i8
  %1097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1096, i8* %1097, align 1
  store %struct.Memory* %loadMem_425d8e, %struct.Memory** %MEMORY
  %loadMem_425d95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1099 = getelementptr inbounds %struct.GPR, %struct.GPR* %1098, i32 0, i32 33
  %1100 = getelementptr inbounds %struct.Reg, %struct.Reg* %1099, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %1100 to i64*
  %1101 = load i64, i64* %PC.i951
  %1102 = add i64 %1101, 161
  %1103 = load i64, i64* %PC.i951
  %1104 = add i64 %1103, 6
  %1105 = load i64, i64* %PC.i951
  %1106 = add i64 %1105, 6
  store i64 %1106, i64* %PC.i951
  %1107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1108 = load i8, i8* %1107, align 1
  %1109 = icmp eq i8 %1108, 0
  %1110 = zext i1 %1109 to i8
  store i8 %1110, i8* %BRANCH_TAKEN, align 1
  %1111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1112 = select i1 %1109, i64 %1102, i64 %1104
  store i64 %1112, i64* %1111, align 8
  store %struct.Memory* %loadMem_425d95, %struct.Memory** %MEMORY
  %loadBr_425d95 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_425d95 = icmp eq i8 %loadBr_425d95, 1
  br i1 %cmpBr_425d95, label %block_.L_425e36, label %block_425d9b

block_425d9b:                                     ; preds = %block_.L_425d0f
  %loadMem_425d9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1114 = getelementptr inbounds %struct.GPR, %struct.GPR* %1113, i32 0, i32 33
  %1115 = getelementptr inbounds %struct.Reg, %struct.Reg* %1114, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %1115 to i64*
  %1116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1117 = getelementptr inbounds %struct.GPR, %struct.GPR* %1116, i32 0, i32 1
  %1118 = getelementptr inbounds %struct.Reg, %struct.Reg* %1117, i32 0, i32 0
  %1119 = bitcast %union.anon* %1118 to %struct.anon.2*
  %AL.i950 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1119, i32 0, i32 0
  %1120 = load i64, i64* %PC.i949
  %1121 = add i64 %1120, 2
  store i64 %1121, i64* %PC.i949
  store i8 1, i8* %AL.i950, align 1
  store %struct.Memory* %loadMem_425d9b, %struct.Memory** %MEMORY
  %loadMem_425d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1123 = getelementptr inbounds %struct.GPR, %struct.GPR* %1122, i32 0, i32 33
  %1124 = getelementptr inbounds %struct.Reg, %struct.Reg* %1123, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %1124 to i64*
  %1125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1126 = getelementptr inbounds %struct.GPR, %struct.GPR* %1125, i32 0, i32 5
  %1127 = getelementptr inbounds %struct.Reg, %struct.Reg* %1126, i32 0, i32 0
  %RCX.i948 = bitcast %union.anon* %1127 to i64*
  %1128 = load i64, i64* %PC.i947
  %1129 = add i64 %1128, 8
  store i64 %1129, i64* %PC.i947
  %1130 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1130, i64* %RCX.i948, align 8
  store %struct.Memory* %loadMem_425d9d, %struct.Memory** %MEMORY
  %loadMem_425da5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1132 = getelementptr inbounds %struct.GPR, %struct.GPR* %1131, i32 0, i32 33
  %1133 = getelementptr inbounds %struct.Reg, %struct.Reg* %1132, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %1133 to i64*
  %1134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1135 = getelementptr inbounds %struct.GPR, %struct.GPR* %1134, i32 0, i32 5
  %1136 = getelementptr inbounds %struct.Reg, %struct.Reg* %1135, i32 0, i32 0
  %RCX.i946 = bitcast %union.anon* %1136 to i64*
  %1137 = load i64, i64* %RCX.i946
  %1138 = add i64 %1137, 28
  %1139 = load i64, i64* %PC.i945
  %1140 = add i64 %1139, 4
  store i64 %1140, i64* %PC.i945
  %1141 = inttoptr i64 %1138 to i32*
  %1142 = load i32, i32* %1141
  %1143 = sub i32 %1142, 1
  %1144 = icmp ult i32 %1142, 1
  %1145 = zext i1 %1144 to i8
  %1146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1145, i8* %1146, align 1
  %1147 = and i32 %1143, 255
  %1148 = call i32 @llvm.ctpop.i32(i32 %1147)
  %1149 = trunc i32 %1148 to i8
  %1150 = and i8 %1149, 1
  %1151 = xor i8 %1150, 1
  %1152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1151, i8* %1152, align 1
  %1153 = xor i32 %1142, 1
  %1154 = xor i32 %1153, %1143
  %1155 = lshr i32 %1154, 4
  %1156 = trunc i32 %1155 to i8
  %1157 = and i8 %1156, 1
  %1158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1157, i8* %1158, align 1
  %1159 = icmp eq i32 %1143, 0
  %1160 = zext i1 %1159 to i8
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1160, i8* %1161, align 1
  %1162 = lshr i32 %1143, 31
  %1163 = trunc i32 %1162 to i8
  %1164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1163, i8* %1164, align 1
  %1165 = lshr i32 %1142, 31
  %1166 = xor i32 %1162, %1165
  %1167 = add i32 %1166, %1165
  %1168 = icmp eq i32 %1167, 2
  %1169 = zext i1 %1168 to i8
  %1170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1169, i8* %1170, align 1
  store %struct.Memory* %loadMem_425da5, %struct.Memory** %MEMORY
  %loadMem_425da9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1172 = getelementptr inbounds %struct.GPR, %struct.GPR* %1171, i32 0, i32 33
  %1173 = getelementptr inbounds %struct.Reg, %struct.Reg* %1172, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %1173 to i64*
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1175 = getelementptr inbounds %struct.GPR, %struct.GPR* %1174, i32 0, i32 1
  %1176 = getelementptr inbounds %struct.Reg, %struct.Reg* %1175, i32 0, i32 0
  %1177 = bitcast %union.anon* %1176 to %struct.anon.2*
  %AL.i943 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1177, i32 0, i32 0
  %1178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1179 = getelementptr inbounds %struct.GPR, %struct.GPR* %1178, i32 0, i32 15
  %1180 = getelementptr inbounds %struct.Reg, %struct.Reg* %1179, i32 0, i32 0
  %RBP.i944 = bitcast %union.anon* %1180 to i64*
  %1181 = load i64, i64* %RBP.i944
  %1182 = sub i64 %1181, 49
  %1183 = load i8, i8* %AL.i943
  %1184 = zext i8 %1183 to i64
  %1185 = load i64, i64* %PC.i942
  %1186 = add i64 %1185, 3
  store i64 %1186, i64* %PC.i942
  %1187 = inttoptr i64 %1182 to i8*
  store i8 %1183, i8* %1187
  store %struct.Memory* %loadMem_425da9, %struct.Memory** %MEMORY
  %loadMem_425dac = load %struct.Memory*, %struct.Memory** %MEMORY
  %1188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1189 = getelementptr inbounds %struct.GPR, %struct.GPR* %1188, i32 0, i32 33
  %1190 = getelementptr inbounds %struct.Reg, %struct.Reg* %1189, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %1190 to i64*
  %1191 = load i64, i64* %PC.i941
  %1192 = add i64 %1191, 24
  %1193 = load i64, i64* %PC.i941
  %1194 = add i64 %1193, 6
  %1195 = load i64, i64* %PC.i941
  %1196 = add i64 %1195, 6
  store i64 %1196, i64* %PC.i941
  %1197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1198 = load i8, i8* %1197, align 1
  store i8 %1198, i8* %BRANCH_TAKEN, align 1
  %1199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1200 = icmp ne i8 %1198, 0
  %1201 = select i1 %1200, i64 %1192, i64 %1194
  store i64 %1201, i64* %1199, align 8
  store %struct.Memory* %loadMem_425dac, %struct.Memory** %MEMORY
  %loadBr_425dac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_425dac = icmp eq i8 %loadBr_425dac, 1
  br i1 %cmpBr_425dac, label %block_.L_425dc4, label %block_425db2

block_425db2:                                     ; preds = %block_425d9b
  %loadMem_425db2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1203 = getelementptr inbounds %struct.GPR, %struct.GPR* %1202, i32 0, i32 33
  %1204 = getelementptr inbounds %struct.Reg, %struct.Reg* %1203, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %1204 to i64*
  %1205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1206 = getelementptr inbounds %struct.GPR, %struct.GPR* %1205, i32 0, i32 1
  %1207 = getelementptr inbounds %struct.Reg, %struct.Reg* %1206, i32 0, i32 0
  %RAX.i940 = bitcast %union.anon* %1207 to i64*
  %1208 = load i64, i64* %PC.i939
  %1209 = add i64 %1208, 8
  store i64 %1209, i64* %PC.i939
  %1210 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1210, i64* %RAX.i940, align 8
  store %struct.Memory* %loadMem_425db2, %struct.Memory** %MEMORY
  %loadMem_425dba = load %struct.Memory*, %struct.Memory** %MEMORY
  %1211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1212 = getelementptr inbounds %struct.GPR, %struct.GPR* %1211, i32 0, i32 33
  %1213 = getelementptr inbounds %struct.Reg, %struct.Reg* %1212, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %1213 to i64*
  %1214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1215 = getelementptr inbounds %struct.GPR, %struct.GPR* %1214, i32 0, i32 1
  %1216 = getelementptr inbounds %struct.Reg, %struct.Reg* %1215, i32 0, i32 0
  %RAX.i938 = bitcast %union.anon* %1216 to i64*
  %1217 = load i64, i64* %RAX.i938
  %1218 = add i64 %1217, 28
  %1219 = load i64, i64* %PC.i937
  %1220 = add i64 %1219, 4
  store i64 %1220, i64* %PC.i937
  %1221 = inttoptr i64 %1218 to i32*
  %1222 = load i32, i32* %1221
  %1223 = sub i32 %1222, 2
  %1224 = icmp ult i32 %1222, 2
  %1225 = zext i1 %1224 to i8
  %1226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1225, i8* %1226, align 1
  %1227 = and i32 %1223, 255
  %1228 = call i32 @llvm.ctpop.i32(i32 %1227)
  %1229 = trunc i32 %1228 to i8
  %1230 = and i8 %1229, 1
  %1231 = xor i8 %1230, 1
  %1232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1231, i8* %1232, align 1
  %1233 = xor i32 %1222, 2
  %1234 = xor i32 %1233, %1223
  %1235 = lshr i32 %1234, 4
  %1236 = trunc i32 %1235 to i8
  %1237 = and i8 %1236, 1
  %1238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1237, i8* %1238, align 1
  %1239 = icmp eq i32 %1223, 0
  %1240 = zext i1 %1239 to i8
  %1241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1240, i8* %1241, align 1
  %1242 = lshr i32 %1223, 31
  %1243 = trunc i32 %1242 to i8
  %1244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1243, i8* %1244, align 1
  %1245 = lshr i32 %1222, 31
  %1246 = xor i32 %1242, %1245
  %1247 = add i32 %1246, %1245
  %1248 = icmp eq i32 %1247, 2
  %1249 = zext i1 %1248 to i8
  %1250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1249, i8* %1250, align 1
  store %struct.Memory* %loadMem_425dba, %struct.Memory** %MEMORY
  %loadMem_425dbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %1251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1252 = getelementptr inbounds %struct.GPR, %struct.GPR* %1251, i32 0, i32 33
  %1253 = getelementptr inbounds %struct.Reg, %struct.Reg* %1252, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %1253 to i64*
  %1254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1255 = getelementptr inbounds %struct.GPR, %struct.GPR* %1254, i32 0, i32 5
  %1256 = getelementptr inbounds %struct.Reg, %struct.Reg* %1255, i32 0, i32 0
  %1257 = bitcast %union.anon* %1256 to %struct.anon.2*
  %CL.i936 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1257, i32 0, i32 0
  %1258 = load i64, i64* %PC.i935
  %1259 = add i64 %1258, 3
  store i64 %1259, i64* %PC.i935
  %1260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1261 = load i8, i8* %1260, align 1
  store i8 %1261, i8* %CL.i936, align 1
  store %struct.Memory* %loadMem_425dbe, %struct.Memory** %MEMORY
  %loadMem_425dc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1263 = getelementptr inbounds %struct.GPR, %struct.GPR* %1262, i32 0, i32 33
  %1264 = getelementptr inbounds %struct.Reg, %struct.Reg* %1263, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %1264 to i64*
  %1265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1266 = getelementptr inbounds %struct.GPR, %struct.GPR* %1265, i32 0, i32 5
  %1267 = getelementptr inbounds %struct.Reg, %struct.Reg* %1266, i32 0, i32 0
  %1268 = bitcast %union.anon* %1267 to %struct.anon.2*
  %CL.i933 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1268, i32 0, i32 0
  %1269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1270 = getelementptr inbounds %struct.GPR, %struct.GPR* %1269, i32 0, i32 15
  %1271 = getelementptr inbounds %struct.Reg, %struct.Reg* %1270, i32 0, i32 0
  %RBP.i934 = bitcast %union.anon* %1271 to i64*
  %1272 = load i64, i64* %RBP.i934
  %1273 = sub i64 %1272, 49
  %1274 = load i8, i8* %CL.i933
  %1275 = zext i8 %1274 to i64
  %1276 = load i64, i64* %PC.i932
  %1277 = add i64 %1276, 3
  store i64 %1277, i64* %PC.i932
  %1278 = inttoptr i64 %1273 to i8*
  store i8 %1274, i8* %1278
  store %struct.Memory* %loadMem_425dc1, %struct.Memory** %MEMORY
  br label %block_.L_425dc4

block_.L_425dc4:                                  ; preds = %block_425db2, %block_425d9b
  %loadMem_425dc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1280 = getelementptr inbounds %struct.GPR, %struct.GPR* %1279, i32 0, i32 33
  %1281 = getelementptr inbounds %struct.Reg, %struct.Reg* %1280, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %1281 to i64*
  %1282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1283 = getelementptr inbounds %struct.GPR, %struct.GPR* %1282, i32 0, i32 1
  %1284 = getelementptr inbounds %struct.Reg, %struct.Reg* %1283, i32 0, i32 0
  %1285 = bitcast %union.anon* %1284 to %struct.anon.2*
  %AL.i930 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1285, i32 0, i32 0
  %1286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1287 = getelementptr inbounds %struct.GPR, %struct.GPR* %1286, i32 0, i32 15
  %1288 = getelementptr inbounds %struct.Reg, %struct.Reg* %1287, i32 0, i32 0
  %RBP.i931 = bitcast %union.anon* %1288 to i64*
  %1289 = load i64, i64* %RBP.i931
  %1290 = sub i64 %1289, 49
  %1291 = load i64, i64* %PC.i929
  %1292 = add i64 %1291, 3
  store i64 %1292, i64* %PC.i929
  %1293 = inttoptr i64 %1290 to i8*
  %1294 = load i8, i8* %1293
  store i8 %1294, i8* %AL.i930, align 1
  store %struct.Memory* %loadMem_425dc4, %struct.Memory** %MEMORY
  %loadMem_425dc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1296 = getelementptr inbounds %struct.GPR, %struct.GPR* %1295, i32 0, i32 33
  %1297 = getelementptr inbounds %struct.Reg, %struct.Reg* %1296, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %1297 to i64*
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1299 = getelementptr inbounds %struct.GPR, %struct.GPR* %1298, i32 0, i32 11
  %1300 = getelementptr inbounds %struct.Reg, %struct.Reg* %1299, i32 0, i32 0
  %RDI.i928 = bitcast %union.anon* %1300 to i64*
  %1301 = load i64, i64* %PC.i927
  %1302 = add i64 %1301, 10
  store i64 %1302, i64* %PC.i927
  store i64 ptrtoint (%G__0x4bfa6f_type* @G__0x4bfa6f to i64), i64* %RDI.i928, align 8
  store %struct.Memory* %loadMem_425dc7, %struct.Memory** %MEMORY
  %loadMem_425dd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1304 = getelementptr inbounds %struct.GPR, %struct.GPR* %1303, i32 0, i32 33
  %1305 = getelementptr inbounds %struct.Reg, %struct.Reg* %1304, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %1305 to i64*
  %1306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1307 = getelementptr inbounds %struct.GPR, %struct.GPR* %1306, i32 0, i32 5
  %1308 = getelementptr inbounds %struct.Reg, %struct.Reg* %1307, i32 0, i32 0
  %ECX.i925 = bitcast %union.anon* %1308 to i32*
  %1309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1310 = getelementptr inbounds %struct.GPR, %struct.GPR* %1309, i32 0, i32 5
  %1311 = getelementptr inbounds %struct.Reg, %struct.Reg* %1310, i32 0, i32 0
  %RCX.i926 = bitcast %union.anon* %1311 to i64*
  %1312 = load i64, i64* %RCX.i926
  %1313 = load i32, i32* %ECX.i925
  %1314 = zext i32 %1313 to i64
  %1315 = load i64, i64* %PC.i924
  %1316 = add i64 %1315, 2
  store i64 %1316, i64* %PC.i924
  %1317 = xor i64 %1314, %1312
  %1318 = trunc i64 %1317 to i32
  %1319 = and i64 %1317, 4294967295
  store i64 %1319, i64* %RCX.i926, align 8
  %1320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1320, align 1
  %1321 = and i32 %1318, 255
  %1322 = call i32 @llvm.ctpop.i32(i32 %1321)
  %1323 = trunc i32 %1322 to i8
  %1324 = and i8 %1323, 1
  %1325 = xor i8 %1324, 1
  %1326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1325, i8* %1326, align 1
  %1327 = icmp eq i32 %1318, 0
  %1328 = zext i1 %1327 to i8
  %1329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1328, i8* %1329, align 1
  %1330 = lshr i32 %1318, 31
  %1331 = trunc i32 %1330 to i8
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1331, i8* %1332, align 1
  %1333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1333, align 1
  %1334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1334, align 1
  store %struct.Memory* %loadMem_425dd1, %struct.Memory** %MEMORY
  %loadMem_425dd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1336 = getelementptr inbounds %struct.GPR, %struct.GPR* %1335, i32 0, i32 33
  %1337 = getelementptr inbounds %struct.Reg, %struct.Reg* %1336, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %1337 to i64*
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1339 = getelementptr inbounds %struct.GPR, %struct.GPR* %1338, i32 0, i32 7
  %1340 = getelementptr inbounds %struct.Reg, %struct.Reg* %1339, i32 0, i32 0
  %RDX.i923 = bitcast %union.anon* %1340 to i64*
  %1341 = load i64, i64* %PC.i922
  %1342 = add i64 %1341, 5
  store i64 %1342, i64* %PC.i922
  store i64 1, i64* %RDX.i923, align 8
  store %struct.Memory* %loadMem_425dd3, %struct.Memory** %MEMORY
  %loadMem_425dd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1344 = getelementptr inbounds %struct.GPR, %struct.GPR* %1343, i32 0, i32 33
  %1345 = getelementptr inbounds %struct.Reg, %struct.Reg* %1344, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %1345 to i64*
  %1346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1347 = getelementptr inbounds %struct.GPR, %struct.GPR* %1346, i32 0, i32 1
  %1348 = getelementptr inbounds %struct.Reg, %struct.Reg* %1347, i32 0, i32 0
  %1349 = bitcast %union.anon* %1348 to %struct.anon.2*
  %AL.i921 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1349, i32 0, i32 0
  %1350 = load i8, i8* %AL.i921
  %1351 = zext i8 %1350 to i64
  %1352 = load i64, i64* %PC.i920
  %1353 = add i64 %1352, 2
  store i64 %1353, i64* %PC.i920
  %1354 = and i64 1, %1351
  %1355 = trunc i64 %1354 to i8
  %1356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1356, align 1
  %1357 = trunc i64 %1354 to i32
  %1358 = and i32 %1357, 255
  %1359 = call i32 @llvm.ctpop.i32(i32 %1358)
  %1360 = trunc i32 %1359 to i8
  %1361 = and i8 %1360, 1
  %1362 = xor i8 %1361, 1
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1362, i8* %1363, align 1
  %1364 = icmp eq i8 %1355, 0
  %1365 = zext i1 %1364 to i8
  %1366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1365, i8* %1366, align 1
  %1367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1367, align 1
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1368, align 1
  %1369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1369, align 1
  store %struct.Memory* %loadMem_425dd8, %struct.Memory** %MEMORY
  %loadMem_425dda = load %struct.Memory*, %struct.Memory** %MEMORY
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1371 = getelementptr inbounds %struct.GPR, %struct.GPR* %1370, i32 0, i32 33
  %1372 = getelementptr inbounds %struct.Reg, %struct.Reg* %1371, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %1372 to i64*
  %1373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1374 = getelementptr inbounds %struct.GPR, %struct.GPR* %1373, i32 0, i32 7
  %1375 = getelementptr inbounds %struct.Reg, %struct.Reg* %1374, i32 0, i32 0
  %EDX.i918 = bitcast %union.anon* %1375 to i32*
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1377 = getelementptr inbounds %struct.GPR, %struct.GPR* %1376, i32 0, i32 5
  %1378 = getelementptr inbounds %struct.Reg, %struct.Reg* %1377, i32 0, i32 0
  %RCX.i919 = bitcast %union.anon* %1378 to i64*
  %1379 = load i32, i32* %EDX.i918
  %1380 = zext i32 %1379 to i64
  %1381 = load i64, i64* %PC.i917
  %1382 = add i64 %1381, 3
  store i64 %1382, i64* %PC.i917
  %1383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1384 = load i8, i8* %1383, align 1
  %1385 = icmp eq i8 %1384, 0
  %1386 = load i64, i64* %RCX.i919, align 8
  %1387 = select i1 %1385, i64 %1380, i64 %1386
  %1388 = and i64 %1387, 4294967295
  store i64 %1388, i64* %RCX.i919, align 8
  store %struct.Memory* %loadMem_425dda, %struct.Memory** %MEMORY
  %loadMem_425ddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1390 = getelementptr inbounds %struct.GPR, %struct.GPR* %1389, i32 0, i32 33
  %1391 = getelementptr inbounds %struct.Reg, %struct.Reg* %1390, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %1391 to i64*
  %1392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1393 = getelementptr inbounds %struct.GPR, %struct.GPR* %1392, i32 0, i32 5
  %1394 = getelementptr inbounds %struct.Reg, %struct.Reg* %1393, i32 0, i32 0
  %ECX.i915 = bitcast %union.anon* %1394 to i32*
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1396 = getelementptr inbounds %struct.GPR, %struct.GPR* %1395, i32 0, i32 15
  %1397 = getelementptr inbounds %struct.Reg, %struct.Reg* %1396, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %1397 to i64*
  %1398 = load i64, i64* %RBP.i916
  %1399 = sub i64 %1398, 32
  %1400 = load i32, i32* %ECX.i915
  %1401 = zext i32 %1400 to i64
  %1402 = load i64, i64* %PC.i914
  %1403 = add i64 %1402, 3
  store i64 %1403, i64* %PC.i914
  %1404 = inttoptr i64 %1399 to i32*
  store i32 %1400, i32* %1404
  store %struct.Memory* %loadMem_425ddd, %struct.Memory** %MEMORY
  %loadMem_425de0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1406 = getelementptr inbounds %struct.GPR, %struct.GPR* %1405, i32 0, i32 33
  %1407 = getelementptr inbounds %struct.Reg, %struct.Reg* %1406, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %1407 to i64*
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1409 = getelementptr inbounds %struct.GPR, %struct.GPR* %1408, i32 0, i32 9
  %1410 = getelementptr inbounds %struct.Reg, %struct.Reg* %1409, i32 0, i32 0
  %RSI.i912 = bitcast %union.anon* %1410 to i64*
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1412 = getelementptr inbounds %struct.GPR, %struct.GPR* %1411, i32 0, i32 15
  %1413 = getelementptr inbounds %struct.Reg, %struct.Reg* %1412, i32 0, i32 0
  %RBP.i913 = bitcast %union.anon* %1413 to i64*
  %1414 = load i64, i64* %RBP.i913
  %1415 = sub i64 %1414, 32
  %1416 = load i64, i64* %PC.i911
  %1417 = add i64 %1416, 3
  store i64 %1417, i64* %PC.i911
  %1418 = inttoptr i64 %1415 to i32*
  %1419 = load i32, i32* %1418
  %1420 = zext i32 %1419 to i64
  store i64 %1420, i64* %RSI.i912, align 8
  store %struct.Memory* %loadMem_425de0, %struct.Memory** %MEMORY
  %loadMem_425de3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1422 = getelementptr inbounds %struct.GPR, %struct.GPR* %1421, i32 0, i32 33
  %1423 = getelementptr inbounds %struct.Reg, %struct.Reg* %1422, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %1423 to i64*
  %1424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1425 = getelementptr inbounds %struct.GPR, %struct.GPR* %1424, i32 0, i32 7
  %1426 = getelementptr inbounds %struct.Reg, %struct.Reg* %1425, i32 0, i32 0
  %RDX.i909 = bitcast %union.anon* %1426 to i64*
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1428 = getelementptr inbounds %struct.GPR, %struct.GPR* %1427, i32 0, i32 15
  %1429 = getelementptr inbounds %struct.Reg, %struct.Reg* %1428, i32 0, i32 0
  %RBP.i910 = bitcast %union.anon* %1429 to i64*
  %1430 = load i64, i64* %RBP.i910
  %1431 = sub i64 %1430, 16
  %1432 = load i64, i64* %PC.i908
  %1433 = add i64 %1432, 4
  store i64 %1433, i64* %PC.i908
  %1434 = inttoptr i64 %1431 to i64*
  %1435 = load i64, i64* %1434
  store i64 %1435, i64* %RDX.i909, align 8
  store %struct.Memory* %loadMem_425de3, %struct.Memory** %MEMORY
  %loadMem1_425de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1437 = getelementptr inbounds %struct.GPR, %struct.GPR* %1436, i32 0, i32 33
  %1438 = getelementptr inbounds %struct.Reg, %struct.Reg* %1437, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %1438 to i64*
  %1439 = load i64, i64* %PC.i907
  %1440 = add i64 %1439, 552217
  %1441 = load i64, i64* %PC.i907
  %1442 = add i64 %1441, 5
  %1443 = load i64, i64* %PC.i907
  %1444 = add i64 %1443, 5
  store i64 %1444, i64* %PC.i907
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1446 = load i64, i64* %1445, align 8
  %1447 = add i64 %1446, -8
  %1448 = inttoptr i64 %1447 to i64*
  store i64 %1442, i64* %1448
  store i64 %1447, i64* %1445, align 8
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1440, i64* %1449, align 8
  store %struct.Memory* %loadMem1_425de7, %struct.Memory** %MEMORY
  %loadMem2_425de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_425de7 = load i64, i64* %3
  %call2_425de7 = call %struct.Memory* @sub_4acb00.u_1(%struct.State* %0, i64 %loadPC_425de7, %struct.Memory* %loadMem2_425de7)
  store %struct.Memory* %call2_425de7, %struct.Memory** %MEMORY
  %loadMem_425dec = load %struct.Memory*, %struct.Memory** %MEMORY
  %1450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1451 = getelementptr inbounds %struct.GPR, %struct.GPR* %1450, i32 0, i32 33
  %1452 = getelementptr inbounds %struct.Reg, %struct.Reg* %1451, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %1452 to i64*
  %1453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1454 = getelementptr inbounds %struct.GPR, %struct.GPR* %1453, i32 0, i32 1
  %1455 = getelementptr inbounds %struct.Reg, %struct.Reg* %1454, i32 0, i32 0
  %RAX.i905 = bitcast %union.anon* %1455 to i64*
  %1456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1457 = getelementptr inbounds %struct.GPR, %struct.GPR* %1456, i32 0, i32 15
  %1458 = getelementptr inbounds %struct.Reg, %struct.Reg* %1457, i32 0, i32 0
  %RBP.i906 = bitcast %union.anon* %1458 to i64*
  %1459 = load i64, i64* %RAX.i905
  %1460 = load i64, i64* %RBP.i906
  %1461 = sub i64 %1460, 28
  %1462 = load i64, i64* %PC.i904
  %1463 = add i64 %1462, 3
  store i64 %1463, i64* %PC.i904
  %1464 = trunc i64 %1459 to i32
  %1465 = inttoptr i64 %1461 to i32*
  %1466 = load i32, i32* %1465
  %1467 = add i32 %1466, %1464
  %1468 = zext i32 %1467 to i64
  store i64 %1468, i64* %RAX.i905, align 8
  %1469 = icmp ult i32 %1467, %1464
  %1470 = icmp ult i32 %1467, %1466
  %1471 = or i1 %1469, %1470
  %1472 = zext i1 %1471 to i8
  %1473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1472, i8* %1473, align 1
  %1474 = and i32 %1467, 255
  %1475 = call i32 @llvm.ctpop.i32(i32 %1474)
  %1476 = trunc i32 %1475 to i8
  %1477 = and i8 %1476, 1
  %1478 = xor i8 %1477, 1
  %1479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1478, i8* %1479, align 1
  %1480 = xor i32 %1466, %1464
  %1481 = xor i32 %1480, %1467
  %1482 = lshr i32 %1481, 4
  %1483 = trunc i32 %1482 to i8
  %1484 = and i8 %1483, 1
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1484, i8* %1485, align 1
  %1486 = icmp eq i32 %1467, 0
  %1487 = zext i1 %1486 to i8
  %1488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1487, i8* %1488, align 1
  %1489 = lshr i32 %1467, 31
  %1490 = trunc i32 %1489 to i8
  %1491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1490, i8* %1491, align 1
  %1492 = lshr i32 %1464, 31
  %1493 = lshr i32 %1466, 31
  %1494 = xor i32 %1489, %1492
  %1495 = xor i32 %1489, %1493
  %1496 = add i32 %1494, %1495
  %1497 = icmp eq i32 %1496, 2
  %1498 = zext i1 %1497 to i8
  %1499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1498, i8* %1499, align 1
  store %struct.Memory* %loadMem_425dec, %struct.Memory** %MEMORY
  %loadMem_425def = load %struct.Memory*, %struct.Memory** %MEMORY
  %1500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1501 = getelementptr inbounds %struct.GPR, %struct.GPR* %1500, i32 0, i32 33
  %1502 = getelementptr inbounds %struct.Reg, %struct.Reg* %1501, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %1502 to i64*
  %1503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1504 = getelementptr inbounds %struct.GPR, %struct.GPR* %1503, i32 0, i32 1
  %1505 = getelementptr inbounds %struct.Reg, %struct.Reg* %1504, i32 0, i32 0
  %EAX.i902 = bitcast %union.anon* %1505 to i32*
  %1506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1507 = getelementptr inbounds %struct.GPR, %struct.GPR* %1506, i32 0, i32 15
  %1508 = getelementptr inbounds %struct.Reg, %struct.Reg* %1507, i32 0, i32 0
  %RBP.i903 = bitcast %union.anon* %1508 to i64*
  %1509 = load i64, i64* %RBP.i903
  %1510 = sub i64 %1509, 28
  %1511 = load i32, i32* %EAX.i902
  %1512 = zext i32 %1511 to i64
  %1513 = load i64, i64* %PC.i901
  %1514 = add i64 %1513, 3
  store i64 %1514, i64* %PC.i901
  %1515 = inttoptr i64 %1510 to i32*
  store i32 %1511, i32* %1515
  store %struct.Memory* %loadMem_425def, %struct.Memory** %MEMORY
  %loadMem_425df2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1517 = getelementptr inbounds %struct.GPR, %struct.GPR* %1516, i32 0, i32 33
  %1518 = getelementptr inbounds %struct.Reg, %struct.Reg* %1517, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %1518 to i64*
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1520 = getelementptr inbounds %struct.GPR, %struct.GPR* %1519, i32 0, i32 15
  %1521 = getelementptr inbounds %struct.Reg, %struct.Reg* %1520, i32 0, i32 0
  %RBP.i900 = bitcast %union.anon* %1521 to i64*
  %1522 = load i64, i64* %RBP.i900
  %1523 = sub i64 %1522, 32
  %1524 = load i64, i64* %PC.i899
  %1525 = add i64 %1524, 4
  store i64 %1525, i64* %PC.i899
  %1526 = inttoptr i64 %1523 to i32*
  %1527 = load i32, i32* %1526
  %1528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1528, align 1
  %1529 = and i32 %1527, 255
  %1530 = call i32 @llvm.ctpop.i32(i32 %1529)
  %1531 = trunc i32 %1530 to i8
  %1532 = and i8 %1531, 1
  %1533 = xor i8 %1532, 1
  %1534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1533, i8* %1534, align 1
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1535, align 1
  %1536 = icmp eq i32 %1527, 0
  %1537 = zext i1 %1536 to i8
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1537, i8* %1538, align 1
  %1539 = lshr i32 %1527, 31
  %1540 = trunc i32 %1539 to i8
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1540, i8* %1541, align 1
  %1542 = lshr i32 %1527, 31
  %1543 = xor i32 %1539, %1542
  %1544 = add i32 %1543, %1542
  %1545 = icmp eq i32 %1544, 2
  %1546 = zext i1 %1545 to i8
  %1547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1546, i8* %1547, align 1
  store %struct.Memory* %loadMem_425df2, %struct.Memory** %MEMORY
  %loadMem_425df6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1549 = getelementptr inbounds %struct.GPR, %struct.GPR* %1548, i32 0, i32 33
  %1550 = getelementptr inbounds %struct.Reg, %struct.Reg* %1549, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %1550 to i64*
  %1551 = load i64, i64* %PC.i898
  %1552 = add i64 %1551, 59
  %1553 = load i64, i64* %PC.i898
  %1554 = add i64 %1553, 6
  %1555 = load i64, i64* %PC.i898
  %1556 = add i64 %1555, 6
  store i64 %1556, i64* %PC.i898
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1558 = load i8, i8* %1557, align 1
  store i8 %1558, i8* %BRANCH_TAKEN, align 1
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1560 = icmp ne i8 %1558, 0
  %1561 = select i1 %1560, i64 %1552, i64 %1554
  store i64 %1561, i64* %1559, align 8
  store %struct.Memory* %loadMem_425df6, %struct.Memory** %MEMORY
  %loadBr_425df6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_425df6 = icmp eq i8 %loadBr_425df6, 1
  br i1 %cmpBr_425df6, label %block_.L_425e31, label %block_425dfc

block_425dfc:                                     ; preds = %block_.L_425dc4
  %loadMem_425dfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1563 = getelementptr inbounds %struct.GPR, %struct.GPR* %1562, i32 0, i32 33
  %1564 = getelementptr inbounds %struct.Reg, %struct.Reg* %1563, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %1564 to i64*
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1566 = getelementptr inbounds %struct.GPR, %struct.GPR* %1565, i32 0, i32 11
  %1567 = getelementptr inbounds %struct.Reg, %struct.Reg* %1566, i32 0, i32 0
  %RDI.i897 = bitcast %union.anon* %1567 to i64*
  %1568 = load i64, i64* %PC.i896
  %1569 = add i64 %1568, 10
  store i64 %1569, i64* %PC.i896
  store i64 ptrtoint (%G__0x4bfa82_type* @G__0x4bfa82 to i64), i64* %RDI.i897, align 8
  store %struct.Memory* %loadMem_425dfc, %struct.Memory** %MEMORY
  %loadMem_425e06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1571 = getelementptr inbounds %struct.GPR, %struct.GPR* %1570, i32 0, i32 33
  %1572 = getelementptr inbounds %struct.Reg, %struct.Reg* %1571, i32 0, i32 0
  %PC.i893 = bitcast %union.anon* %1572 to i64*
  %1573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1574 = getelementptr inbounds %struct.GPR, %struct.GPR* %1573, i32 0, i32 1
  %1575 = getelementptr inbounds %struct.Reg, %struct.Reg* %1574, i32 0, i32 0
  %EAX.i894 = bitcast %union.anon* %1575 to i32*
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1577 = getelementptr inbounds %struct.GPR, %struct.GPR* %1576, i32 0, i32 1
  %1578 = getelementptr inbounds %struct.Reg, %struct.Reg* %1577, i32 0, i32 0
  %RAX.i895 = bitcast %union.anon* %1578 to i64*
  %1579 = load i64, i64* %RAX.i895
  %1580 = load i32, i32* %EAX.i894
  %1581 = zext i32 %1580 to i64
  %1582 = load i64, i64* %PC.i893
  %1583 = add i64 %1582, 2
  store i64 %1583, i64* %PC.i893
  %1584 = xor i64 %1581, %1579
  %1585 = trunc i64 %1584 to i32
  %1586 = and i64 %1584, 4294967295
  store i64 %1586, i64* %RAX.i895, align 8
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1587, align 1
  %1588 = and i32 %1585, 255
  %1589 = call i32 @llvm.ctpop.i32(i32 %1588)
  %1590 = trunc i32 %1589 to i8
  %1591 = and i8 %1590, 1
  %1592 = xor i8 %1591, 1
  %1593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1592, i8* %1593, align 1
  %1594 = icmp eq i32 %1585, 0
  %1595 = zext i1 %1594 to i8
  %1596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1595, i8* %1596, align 1
  %1597 = lshr i32 %1585, 31
  %1598 = trunc i32 %1597 to i8
  %1599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1598, i8* %1599, align 1
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1600, align 1
  %1601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1601, align 1
  store %struct.Memory* %loadMem_425e06, %struct.Memory** %MEMORY
  %loadMem_425e08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1603 = getelementptr inbounds %struct.GPR, %struct.GPR* %1602, i32 0, i32 33
  %1604 = getelementptr inbounds %struct.Reg, %struct.Reg* %1603, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %1604 to i64*
  %1605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1606 = getelementptr inbounds %struct.GPR, %struct.GPR* %1605, i32 0, i32 5
  %1607 = getelementptr inbounds %struct.Reg, %struct.Reg* %1606, i32 0, i32 0
  %RCX.i892 = bitcast %union.anon* %1607 to i64*
  %1608 = load i64, i64* %PC.i891
  %1609 = add i64 %1608, 5
  store i64 %1609, i64* %PC.i891
  store i64 1, i64* %RCX.i892, align 8
  store %struct.Memory* %loadMem_425e08, %struct.Memory** %MEMORY
  %loadMem_425e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1611 = getelementptr inbounds %struct.GPR, %struct.GPR* %1610, i32 0, i32 33
  %1612 = getelementptr inbounds %struct.Reg, %struct.Reg* %1611, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %1612 to i64*
  %1613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1614 = getelementptr inbounds %struct.GPR, %struct.GPR* %1613, i32 0, i32 7
  %1615 = getelementptr inbounds %struct.Reg, %struct.Reg* %1614, i32 0, i32 0
  %RDX.i890 = bitcast %union.anon* %1615 to i64*
  %1616 = load i64, i64* %PC.i889
  %1617 = add i64 %1616, 8
  store i64 %1617, i64* %PC.i889
  %1618 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1618, i64* %RDX.i890, align 8
  store %struct.Memory* %loadMem_425e0d, %struct.Memory** %MEMORY
  %loadMem_425e15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1620 = getelementptr inbounds %struct.GPR, %struct.GPR* %1619, i32 0, i32 33
  %1621 = getelementptr inbounds %struct.Reg, %struct.Reg* %1620, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %1621 to i64*
  %1622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1623 = getelementptr inbounds %struct.GPR, %struct.GPR* %1622, i32 0, i32 7
  %1624 = getelementptr inbounds %struct.Reg, %struct.Reg* %1623, i32 0, i32 0
  %RDX.i888 = bitcast %union.anon* %1624 to i64*
  %1625 = load i64, i64* %RDX.i888
  %1626 = add i64 %1625, 28
  %1627 = load i64, i64* %PC.i887
  %1628 = add i64 %1627, 4
  store i64 %1628, i64* %PC.i887
  %1629 = inttoptr i64 %1626 to i32*
  %1630 = load i32, i32* %1629
  %1631 = sub i32 %1630, 2
  %1632 = icmp ult i32 %1630, 2
  %1633 = zext i1 %1632 to i8
  %1634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1633, i8* %1634, align 1
  %1635 = and i32 %1631, 255
  %1636 = call i32 @llvm.ctpop.i32(i32 %1635)
  %1637 = trunc i32 %1636 to i8
  %1638 = and i8 %1637, 1
  %1639 = xor i8 %1638, 1
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1639, i8* %1640, align 1
  %1641 = xor i32 %1630, 2
  %1642 = xor i32 %1641, %1631
  %1643 = lshr i32 %1642, 4
  %1644 = trunc i32 %1643 to i8
  %1645 = and i8 %1644, 1
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1645, i8* %1646, align 1
  %1647 = icmp eq i32 %1631, 0
  %1648 = zext i1 %1647 to i8
  %1649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1648, i8* %1649, align 1
  %1650 = lshr i32 %1631, 31
  %1651 = trunc i32 %1650 to i8
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1651, i8* %1652, align 1
  %1653 = lshr i32 %1630, 31
  %1654 = xor i32 %1650, %1653
  %1655 = add i32 %1654, %1653
  %1656 = icmp eq i32 %1655, 2
  %1657 = zext i1 %1656 to i8
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1657, i8* %1658, align 1
  store %struct.Memory* %loadMem_425e15, %struct.Memory** %MEMORY
  %loadMem_425e19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1660 = getelementptr inbounds %struct.GPR, %struct.GPR* %1659, i32 0, i32 33
  %1661 = getelementptr inbounds %struct.Reg, %struct.Reg* %1660, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %1661 to i64*
  %1662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1663 = getelementptr inbounds %struct.GPR, %struct.GPR* %1662, i32 0, i32 5
  %1664 = getelementptr inbounds %struct.Reg, %struct.Reg* %1663, i32 0, i32 0
  %ECX.i885 = bitcast %union.anon* %1664 to i32*
  %1665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1666 = getelementptr inbounds %struct.GPR, %struct.GPR* %1665, i32 0, i32 1
  %1667 = getelementptr inbounds %struct.Reg, %struct.Reg* %1666, i32 0, i32 0
  %RAX.i886 = bitcast %union.anon* %1667 to i64*
  %1668 = load i32, i32* %ECX.i885
  %1669 = zext i32 %1668 to i64
  %1670 = load i64, i64* %PC.i884
  %1671 = add i64 %1670, 3
  store i64 %1671, i64* %PC.i884
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1673 = load i8, i8* %1672, align 1
  %1674 = icmp ne i8 %1673, 0
  %1675 = load i64, i64* %RAX.i886, align 8
  %1676 = select i1 %1674, i64 %1669, i64 %1675
  %1677 = and i64 %1676, 4294967295
  store i64 %1677, i64* %RAX.i886, align 8
  store %struct.Memory* %loadMem_425e19, %struct.Memory** %MEMORY
  %loadMem_425e1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1679 = getelementptr inbounds %struct.GPR, %struct.GPR* %1678, i32 0, i32 33
  %1680 = getelementptr inbounds %struct.Reg, %struct.Reg* %1679, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %1680 to i64*
  %1681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1682 = getelementptr inbounds %struct.GPR, %struct.GPR* %1681, i32 0, i32 1
  %1683 = getelementptr inbounds %struct.Reg, %struct.Reg* %1682, i32 0, i32 0
  %EAX.i882 = bitcast %union.anon* %1683 to i32*
  %1684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1685 = getelementptr inbounds %struct.GPR, %struct.GPR* %1684, i32 0, i32 15
  %1686 = getelementptr inbounds %struct.Reg, %struct.Reg* %1685, i32 0, i32 0
  %RBP.i883 = bitcast %union.anon* %1686 to i64*
  %1687 = load i64, i64* %RBP.i883
  %1688 = sub i64 %1687, 36
  %1689 = load i32, i32* %EAX.i882
  %1690 = zext i32 %1689 to i64
  %1691 = load i64, i64* %PC.i881
  %1692 = add i64 %1691, 3
  store i64 %1692, i64* %PC.i881
  %1693 = inttoptr i64 %1688 to i32*
  store i32 %1689, i32* %1693
  store %struct.Memory* %loadMem_425e1c, %struct.Memory** %MEMORY
  %loadMem_425e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1695 = getelementptr inbounds %struct.GPR, %struct.GPR* %1694, i32 0, i32 33
  %1696 = getelementptr inbounds %struct.Reg, %struct.Reg* %1695, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %1696 to i64*
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1698 = getelementptr inbounds %struct.GPR, %struct.GPR* %1697, i32 0, i32 9
  %1699 = getelementptr inbounds %struct.Reg, %struct.Reg* %1698, i32 0, i32 0
  %RSI.i879 = bitcast %union.anon* %1699 to i64*
  %1700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1701 = getelementptr inbounds %struct.GPR, %struct.GPR* %1700, i32 0, i32 15
  %1702 = getelementptr inbounds %struct.Reg, %struct.Reg* %1701, i32 0, i32 0
  %RBP.i880 = bitcast %union.anon* %1702 to i64*
  %1703 = load i64, i64* %RBP.i880
  %1704 = sub i64 %1703, 36
  %1705 = load i64, i64* %PC.i878
  %1706 = add i64 %1705, 3
  store i64 %1706, i64* %PC.i878
  %1707 = inttoptr i64 %1704 to i32*
  %1708 = load i32, i32* %1707
  %1709 = zext i32 %1708 to i64
  store i64 %1709, i64* %RSI.i879, align 8
  store %struct.Memory* %loadMem_425e1f, %struct.Memory** %MEMORY
  %loadMem_425e22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1711 = getelementptr inbounds %struct.GPR, %struct.GPR* %1710, i32 0, i32 33
  %1712 = getelementptr inbounds %struct.Reg, %struct.Reg* %1711, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %1712 to i64*
  %1713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1714 = getelementptr inbounds %struct.GPR, %struct.GPR* %1713, i32 0, i32 7
  %1715 = getelementptr inbounds %struct.Reg, %struct.Reg* %1714, i32 0, i32 0
  %RDX.i876 = bitcast %union.anon* %1715 to i64*
  %1716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1717 = getelementptr inbounds %struct.GPR, %struct.GPR* %1716, i32 0, i32 15
  %1718 = getelementptr inbounds %struct.Reg, %struct.Reg* %1717, i32 0, i32 0
  %RBP.i877 = bitcast %union.anon* %1718 to i64*
  %1719 = load i64, i64* %RBP.i877
  %1720 = sub i64 %1719, 16
  %1721 = load i64, i64* %PC.i875
  %1722 = add i64 %1721, 4
  store i64 %1722, i64* %PC.i875
  %1723 = inttoptr i64 %1720 to i64*
  %1724 = load i64, i64* %1723
  store i64 %1724, i64* %RDX.i876, align 8
  store %struct.Memory* %loadMem_425e22, %struct.Memory** %MEMORY
  %loadMem1_425e26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1726 = getelementptr inbounds %struct.GPR, %struct.GPR* %1725, i32 0, i32 33
  %1727 = getelementptr inbounds %struct.Reg, %struct.Reg* %1726, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %1727 to i64*
  %1728 = load i64, i64* %PC.i874
  %1729 = add i64 %1728, 552154
  %1730 = load i64, i64* %PC.i874
  %1731 = add i64 %1730, 5
  %1732 = load i64, i64* %PC.i874
  %1733 = add i64 %1732, 5
  store i64 %1733, i64* %PC.i874
  %1734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1735 = load i64, i64* %1734, align 8
  %1736 = add i64 %1735, -8
  %1737 = inttoptr i64 %1736 to i64*
  store i64 %1731, i64* %1737
  store i64 %1736, i64* %1734, align 8
  %1738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1729, i64* %1738, align 8
  store %struct.Memory* %loadMem1_425e26, %struct.Memory** %MEMORY
  %loadMem2_425e26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_425e26 = load i64, i64* %3
  %call2_425e26 = call %struct.Memory* @sub_4acb00.u_1(%struct.State* %0, i64 %loadPC_425e26, %struct.Memory* %loadMem2_425e26)
  store %struct.Memory* %call2_425e26, %struct.Memory** %MEMORY
  %loadMem_425e2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1740 = getelementptr inbounds %struct.GPR, %struct.GPR* %1739, i32 0, i32 33
  %1741 = getelementptr inbounds %struct.Reg, %struct.Reg* %1740, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %1741 to i64*
  %1742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1743 = getelementptr inbounds %struct.GPR, %struct.GPR* %1742, i32 0, i32 1
  %1744 = getelementptr inbounds %struct.Reg, %struct.Reg* %1743, i32 0, i32 0
  %RAX.i872 = bitcast %union.anon* %1744 to i64*
  %1745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1746 = getelementptr inbounds %struct.GPR, %struct.GPR* %1745, i32 0, i32 15
  %1747 = getelementptr inbounds %struct.Reg, %struct.Reg* %1746, i32 0, i32 0
  %RBP.i873 = bitcast %union.anon* %1747 to i64*
  %1748 = load i64, i64* %RAX.i872
  %1749 = load i64, i64* %RBP.i873
  %1750 = sub i64 %1749, 28
  %1751 = load i64, i64* %PC.i871
  %1752 = add i64 %1751, 3
  store i64 %1752, i64* %PC.i871
  %1753 = trunc i64 %1748 to i32
  %1754 = inttoptr i64 %1750 to i32*
  %1755 = load i32, i32* %1754
  %1756 = add i32 %1755, %1753
  %1757 = zext i32 %1756 to i64
  store i64 %1757, i64* %RAX.i872, align 8
  %1758 = icmp ult i32 %1756, %1753
  %1759 = icmp ult i32 %1756, %1755
  %1760 = or i1 %1758, %1759
  %1761 = zext i1 %1760 to i8
  %1762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1761, i8* %1762, align 1
  %1763 = and i32 %1756, 255
  %1764 = call i32 @llvm.ctpop.i32(i32 %1763)
  %1765 = trunc i32 %1764 to i8
  %1766 = and i8 %1765, 1
  %1767 = xor i8 %1766, 1
  %1768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1767, i8* %1768, align 1
  %1769 = xor i32 %1755, %1753
  %1770 = xor i32 %1769, %1756
  %1771 = lshr i32 %1770, 4
  %1772 = trunc i32 %1771 to i8
  %1773 = and i8 %1772, 1
  %1774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1773, i8* %1774, align 1
  %1775 = icmp eq i32 %1756, 0
  %1776 = zext i1 %1775 to i8
  %1777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1776, i8* %1777, align 1
  %1778 = lshr i32 %1756, 31
  %1779 = trunc i32 %1778 to i8
  %1780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1779, i8* %1780, align 1
  %1781 = lshr i32 %1753, 31
  %1782 = lshr i32 %1755, 31
  %1783 = xor i32 %1778, %1781
  %1784 = xor i32 %1778, %1782
  %1785 = add i32 %1783, %1784
  %1786 = icmp eq i32 %1785, 2
  %1787 = zext i1 %1786 to i8
  %1788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1787, i8* %1788, align 1
  store %struct.Memory* %loadMem_425e2b, %struct.Memory** %MEMORY
  %loadMem_425e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1790 = getelementptr inbounds %struct.GPR, %struct.GPR* %1789, i32 0, i32 33
  %1791 = getelementptr inbounds %struct.Reg, %struct.Reg* %1790, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %1791 to i64*
  %1792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1793 = getelementptr inbounds %struct.GPR, %struct.GPR* %1792, i32 0, i32 1
  %1794 = getelementptr inbounds %struct.Reg, %struct.Reg* %1793, i32 0, i32 0
  %EAX.i869 = bitcast %union.anon* %1794 to i32*
  %1795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1796 = getelementptr inbounds %struct.GPR, %struct.GPR* %1795, i32 0, i32 15
  %1797 = getelementptr inbounds %struct.Reg, %struct.Reg* %1796, i32 0, i32 0
  %RBP.i870 = bitcast %union.anon* %1797 to i64*
  %1798 = load i64, i64* %RBP.i870
  %1799 = sub i64 %1798, 28
  %1800 = load i32, i32* %EAX.i869
  %1801 = zext i32 %1800 to i64
  %1802 = load i64, i64* %PC.i868
  %1803 = add i64 %1802, 3
  store i64 %1803, i64* %PC.i868
  %1804 = inttoptr i64 %1799 to i32*
  store i32 %1800, i32* %1804
  store %struct.Memory* %loadMem_425e2e, %struct.Memory** %MEMORY
  br label %block_.L_425e31

block_.L_425e31:                                  ; preds = %block_425dfc, %block_.L_425dc4
  %loadMem_425e31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1806 = getelementptr inbounds %struct.GPR, %struct.GPR* %1805, i32 0, i32 33
  %1807 = getelementptr inbounds %struct.Reg, %struct.Reg* %1806, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %1807 to i64*
  %1808 = load i64, i64* %PC.i867
  %1809 = add i64 %1808, 5
  %1810 = load i64, i64* %PC.i867
  %1811 = add i64 %1810, 5
  store i64 %1811, i64* %PC.i867
  %1812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1809, i64* %1812, align 8
  store %struct.Memory* %loadMem_425e31, %struct.Memory** %MEMORY
  br label %block_.L_425e36

block_.L_425e36:                                  ; preds = %block_.L_425e31, %block_.L_425d0f
  %loadMem_425e36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1814 = getelementptr inbounds %struct.GPR, %struct.GPR* %1813, i32 0, i32 33
  %1815 = getelementptr inbounds %struct.Reg, %struct.Reg* %1814, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %1815 to i64*
  %1816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1817 = getelementptr inbounds %struct.GPR, %struct.GPR* %1816, i32 0, i32 1
  %1818 = getelementptr inbounds %struct.Reg, %struct.Reg* %1817, i32 0, i32 0
  %RAX.i866 = bitcast %union.anon* %1818 to i64*
  %1819 = load i64, i64* %PC.i865
  %1820 = add i64 %1819, 8
  store i64 %1820, i64* %PC.i865
  %1821 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1821, i64* %RAX.i866, align 8
  store %struct.Memory* %loadMem_425e36, %struct.Memory** %MEMORY
  %loadMem_425e3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1823 = getelementptr inbounds %struct.GPR, %struct.GPR* %1822, i32 0, i32 33
  %1824 = getelementptr inbounds %struct.Reg, %struct.Reg* %1823, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %1824 to i64*
  %1825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1826 = getelementptr inbounds %struct.GPR, %struct.GPR* %1825, i32 0, i32 1
  %1827 = getelementptr inbounds %struct.Reg, %struct.Reg* %1826, i32 0, i32 0
  %RAX.i864 = bitcast %union.anon* %1827 to i64*
  %1828 = load i64, i64* %RAX.i864
  %1829 = add i64 %1828, 14152
  %1830 = load i64, i64* %PC.i863
  %1831 = add i64 %1830, 7
  store i64 %1831, i64* %PC.i863
  %1832 = inttoptr i64 %1829 to i64*
  %1833 = load i64, i64* %1832
  store i64 %1833, i64* %RAX.i864, align 8
  store %struct.Memory* %loadMem_425e3e, %struct.Memory** %MEMORY
  %loadMem_425e45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1835 = getelementptr inbounds %struct.GPR, %struct.GPR* %1834, i32 0, i32 33
  %1836 = getelementptr inbounds %struct.Reg, %struct.Reg* %1835, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %1836 to i64*
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1838 = getelementptr inbounds %struct.GPR, %struct.GPR* %1837, i32 0, i32 1
  %1839 = getelementptr inbounds %struct.Reg, %struct.Reg* %1838, i32 0, i32 0
  %RAX.i862 = bitcast %union.anon* %1839 to i64*
  %1840 = load i64, i64* %RAX.i862
  %1841 = add i64 %1840, 4
  %1842 = load i64, i64* %PC.i861
  %1843 = add i64 %1842, 4
  store i64 %1843, i64* %PC.i861
  %1844 = inttoptr i64 %1841 to i32*
  %1845 = load i32, i32* %1844
  %1846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1846, align 1
  %1847 = and i32 %1845, 255
  %1848 = call i32 @llvm.ctpop.i32(i32 %1847)
  %1849 = trunc i32 %1848 to i8
  %1850 = and i8 %1849, 1
  %1851 = xor i8 %1850, 1
  %1852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1851, i8* %1852, align 1
  %1853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1853, align 1
  %1854 = icmp eq i32 %1845, 0
  %1855 = zext i1 %1854 to i8
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1855, i8* %1856, align 1
  %1857 = lshr i32 %1845, 31
  %1858 = trunc i32 %1857 to i8
  %1859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1858, i8* %1859, align 1
  %1860 = lshr i32 %1845, 31
  %1861 = xor i32 %1857, %1860
  %1862 = add i32 %1861, %1860
  %1863 = icmp eq i32 %1862, 2
  %1864 = zext i1 %1863 to i8
  %1865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1864, i8* %1865, align 1
  store %struct.Memory* %loadMem_425e45, %struct.Memory** %MEMORY
  %loadMem_425e49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1867 = getelementptr inbounds %struct.GPR, %struct.GPR* %1866, i32 0, i32 33
  %1868 = getelementptr inbounds %struct.Reg, %struct.Reg* %1867, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %1868 to i64*
  %1869 = load i64, i64* %PC.i860
  %1870 = add i64 %1869, 62
  %1871 = load i64, i64* %PC.i860
  %1872 = add i64 %1871, 6
  %1873 = load i64, i64* %PC.i860
  %1874 = add i64 %1873, 6
  store i64 %1874, i64* %PC.i860
  %1875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1876 = load i8, i8* %1875, align 1
  store i8 %1876, i8* %BRANCH_TAKEN, align 1
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1878 = icmp ne i8 %1876, 0
  %1879 = select i1 %1878, i64 %1870, i64 %1872
  store i64 %1879, i64* %1877, align 8
  store %struct.Memory* %loadMem_425e49, %struct.Memory** %MEMORY
  %loadBr_425e49 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_425e49 = icmp eq i8 %loadBr_425e49, 1
  br i1 %cmpBr_425e49, label %block_.L_425e87, label %block_425e4f

block_425e4f:                                     ; preds = %block_.L_425e36
  %loadMem_425e4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1881 = getelementptr inbounds %struct.GPR, %struct.GPR* %1880, i32 0, i32 33
  %1882 = getelementptr inbounds %struct.Reg, %struct.Reg* %1881, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %1882 to i64*
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1884 = getelementptr inbounds %struct.GPR, %struct.GPR* %1883, i32 0, i32 11
  %1885 = getelementptr inbounds %struct.Reg, %struct.Reg* %1884, i32 0, i32 0
  %RDI.i859 = bitcast %union.anon* %1885 to i64*
  %1886 = load i64, i64* %PC.i858
  %1887 = add i64 %1886, 10
  store i64 %1887, i64* %PC.i858
  store i64 ptrtoint (%G__0x4bfa98_type* @G__0x4bfa98 to i64), i64* %RDI.i859, align 8
  store %struct.Memory* %loadMem_425e4f, %struct.Memory** %MEMORY
  %loadMem_425e59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1889 = getelementptr inbounds %struct.GPR, %struct.GPR* %1888, i32 0, i32 33
  %1890 = getelementptr inbounds %struct.Reg, %struct.Reg* %1889, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %1890 to i64*
  %1891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1892 = getelementptr inbounds %struct.GPR, %struct.GPR* %1891, i32 0, i32 1
  %1893 = getelementptr inbounds %struct.Reg, %struct.Reg* %1892, i32 0, i32 0
  %RAX.i857 = bitcast %union.anon* %1893 to i64*
  %1894 = load i64, i64* %PC.i856
  %1895 = add i64 %1894, 5
  store i64 %1895, i64* %PC.i856
  store i64 2, i64* %RAX.i857, align 8
  store %struct.Memory* %loadMem_425e59, %struct.Memory** %MEMORY
  %loadMem_425e5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1897 = getelementptr inbounds %struct.GPR, %struct.GPR* %1896, i32 0, i32 33
  %1898 = getelementptr inbounds %struct.Reg, %struct.Reg* %1897, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %1898 to i64*
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1900 = getelementptr inbounds %struct.GPR, %struct.GPR* %1899, i32 0, i32 5
  %1901 = getelementptr inbounds %struct.Reg, %struct.Reg* %1900, i32 0, i32 0
  %RCX.i855 = bitcast %union.anon* %1901 to i64*
  %1902 = load i64, i64* %PC.i854
  %1903 = add i64 %1902, 8
  store i64 %1903, i64* %PC.i854
  %1904 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1904, i64* %RCX.i855, align 8
  store %struct.Memory* %loadMem_425e5e, %struct.Memory** %MEMORY
  %loadMem_425e66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1906 = getelementptr inbounds %struct.GPR, %struct.GPR* %1905, i32 0, i32 33
  %1907 = getelementptr inbounds %struct.Reg, %struct.Reg* %1906, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %1907 to i64*
  %1908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1909 = getelementptr inbounds %struct.GPR, %struct.GPR* %1908, i32 0, i32 5
  %1910 = getelementptr inbounds %struct.Reg, %struct.Reg* %1909, i32 0, i32 0
  %RCX.i852 = bitcast %union.anon* %1910 to i64*
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1912 = getelementptr inbounds %struct.GPR, %struct.GPR* %1911, i32 0, i32 7
  %1913 = getelementptr inbounds %struct.Reg, %struct.Reg* %1912, i32 0, i32 0
  %RDX.i853 = bitcast %union.anon* %1913 to i64*
  %1914 = load i64, i64* %RCX.i852
  %1915 = load i64, i64* %PC.i851
  %1916 = add i64 %1915, 2
  store i64 %1916, i64* %PC.i851
  %1917 = inttoptr i64 %1914 to i32*
  %1918 = load i32, i32* %1917
  %1919 = zext i32 %1918 to i64
  store i64 %1919, i64* %RDX.i853, align 8
  store %struct.Memory* %loadMem_425e66, %struct.Memory** %MEMORY
  %loadMem_425e68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1921 = getelementptr inbounds %struct.GPR, %struct.GPR* %1920, i32 0, i32 33
  %1922 = getelementptr inbounds %struct.Reg, %struct.Reg* %1921, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %1922 to i64*
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1924 = getelementptr inbounds %struct.GPR, %struct.GPR* %1923, i32 0, i32 1
  %1925 = getelementptr inbounds %struct.Reg, %struct.Reg* %1924, i32 0, i32 0
  %EAX.i849 = bitcast %union.anon* %1925 to i32*
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1927 = getelementptr inbounds %struct.GPR, %struct.GPR* %1926, i32 0, i32 15
  %1928 = getelementptr inbounds %struct.Reg, %struct.Reg* %1927, i32 0, i32 0
  %RBP.i850 = bitcast %union.anon* %1928 to i64*
  %1929 = load i64, i64* %RBP.i850
  %1930 = sub i64 %1929, 56
  %1931 = load i32, i32* %EAX.i849
  %1932 = zext i32 %1931 to i64
  %1933 = load i64, i64* %PC.i848
  %1934 = add i64 %1933, 3
  store i64 %1934, i64* %PC.i848
  %1935 = inttoptr i64 %1930 to i32*
  store i32 %1931, i32* %1935
  store %struct.Memory* %loadMem_425e68, %struct.Memory** %MEMORY
  %loadMem_425e6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1937 = getelementptr inbounds %struct.GPR, %struct.GPR* %1936, i32 0, i32 33
  %1938 = getelementptr inbounds %struct.Reg, %struct.Reg* %1937, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %1938 to i64*
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1940 = getelementptr inbounds %struct.GPR, %struct.GPR* %1939, i32 0, i32 7
  %1941 = getelementptr inbounds %struct.Reg, %struct.Reg* %1940, i32 0, i32 0
  %EDX.i846 = bitcast %union.anon* %1941 to i32*
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1943 = getelementptr inbounds %struct.GPR, %struct.GPR* %1942, i32 0, i32 1
  %1944 = getelementptr inbounds %struct.Reg, %struct.Reg* %1943, i32 0, i32 0
  %RAX.i847 = bitcast %union.anon* %1944 to i64*
  %1945 = load i32, i32* %EDX.i846
  %1946 = zext i32 %1945 to i64
  %1947 = load i64, i64* %PC.i845
  %1948 = add i64 %1947, 2
  store i64 %1948, i64* %PC.i845
  %1949 = and i64 %1946, 4294967295
  store i64 %1949, i64* %RAX.i847, align 8
  store %struct.Memory* %loadMem_425e6b, %struct.Memory** %MEMORY
  %loadMem_425e6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1951 = getelementptr inbounds %struct.GPR, %struct.GPR* %1950, i32 0, i32 33
  %1952 = getelementptr inbounds %struct.Reg, %struct.Reg* %1951, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %1952 to i64*
  %1953 = load i64, i64* %PC.i844
  %1954 = add i64 %1953, 1
  store i64 %1954, i64* %PC.i844
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1957 = bitcast %union.anon* %1956 to i32*
  %1958 = load i32, i32* %1957, align 8
  %1959 = sext i32 %1958 to i64
  %1960 = lshr i64 %1959, 32
  store i64 %1960, i64* %1955, align 8
  store %struct.Memory* %loadMem_425e6d, %struct.Memory** %MEMORY
  %loadMem_425e6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1962 = getelementptr inbounds %struct.GPR, %struct.GPR* %1961, i32 0, i32 33
  %1963 = getelementptr inbounds %struct.Reg, %struct.Reg* %1962, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %1963 to i64*
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1965 = getelementptr inbounds %struct.GPR, %struct.GPR* %1964, i32 0, i32 9
  %1966 = getelementptr inbounds %struct.Reg, %struct.Reg* %1965, i32 0, i32 0
  %RSI.i842 = bitcast %union.anon* %1966 to i64*
  %1967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1968 = getelementptr inbounds %struct.GPR, %struct.GPR* %1967, i32 0, i32 15
  %1969 = getelementptr inbounds %struct.Reg, %struct.Reg* %1968, i32 0, i32 0
  %RBP.i843 = bitcast %union.anon* %1969 to i64*
  %1970 = load i64, i64* %RBP.i843
  %1971 = sub i64 %1970, 56
  %1972 = load i64, i64* %PC.i841
  %1973 = add i64 %1972, 3
  store i64 %1973, i64* %PC.i841
  %1974 = inttoptr i64 %1971 to i32*
  %1975 = load i32, i32* %1974
  %1976 = zext i32 %1975 to i64
  store i64 %1976, i64* %RSI.i842, align 8
  store %struct.Memory* %loadMem_425e6e, %struct.Memory** %MEMORY
  %loadMem_425e71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1978 = getelementptr inbounds %struct.GPR, %struct.GPR* %1977, i32 0, i32 33
  %1979 = getelementptr inbounds %struct.Reg, %struct.Reg* %1978, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %1979 to i64*
  %1980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1981 = getelementptr inbounds %struct.GPR, %struct.GPR* %1980, i32 0, i32 9
  %1982 = getelementptr inbounds %struct.Reg, %struct.Reg* %1981, i32 0, i32 0
  %ESI.i837 = bitcast %union.anon* %1982 to i32*
  %1983 = load i32, i32* %ESI.i837
  %1984 = zext i32 %1983 to i64
  %1985 = load i64, i64* %PC.i836
  %1986 = add i64 %1985, 2
  store i64 %1986, i64* %PC.i836
  %1987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1988 = bitcast %union.anon* %1987 to i32*
  %1989 = load i32, i32* %1988, align 8
  %1990 = zext i32 %1989 to i64
  %1991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1992 = bitcast %union.anon* %1991 to i32*
  %1993 = load i32, i32* %1992, align 8
  %1994 = zext i32 %1993 to i64
  %1995 = shl i64 %1984, 32
  %1996 = ashr exact i64 %1995, 32
  %1997 = shl i64 %1994, 32
  %1998 = or i64 %1997, %1990
  %1999 = sdiv i64 %1998, %1996
  %2000 = shl i64 %1999, 32
  %2001 = ashr exact i64 %2000, 32
  %2002 = icmp eq i64 %1999, %2001
  br i1 %2002, label %2007, label %2003

; <label>:2003:                                   ; preds = %block_425e4f
  %2004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2005 = load i64, i64* %2004, align 8
  %2006 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2005, %struct.Memory* %loadMem_425e71)
  br label %routine_idivl__esi.exit838

; <label>:2007:                                   ; preds = %block_425e4f
  %2008 = srem i64 %1998, %1996
  %2009 = getelementptr inbounds %union.anon, %union.anon* %1987, i64 0, i32 0
  %2010 = and i64 %1999, 4294967295
  store i64 %2010, i64* %2009, align 8
  %2011 = getelementptr inbounds %union.anon, %union.anon* %1991, i64 0, i32 0
  %2012 = and i64 %2008, 4294967295
  store i64 %2012, i64* %2011, align 8
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2013, align 1
  %2014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %2014, align 1
  %2015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2015, align 1
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2016, align 1
  %2017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2017, align 1
  %2018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2018, align 1
  br label %routine_idivl__esi.exit838

routine_idivl__esi.exit838:                       ; preds = %2003, %2007
  %2019 = phi %struct.Memory* [ %2006, %2003 ], [ %loadMem_425e71, %2007 ]
  store %struct.Memory* %2019, %struct.Memory** %MEMORY
  %loadMem_425e73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2021 = getelementptr inbounds %struct.GPR, %struct.GPR* %2020, i32 0, i32 33
  %2022 = getelementptr inbounds %struct.Reg, %struct.Reg* %2021, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %2022 to i64*
  %2023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2024 = getelementptr inbounds %struct.GPR, %struct.GPR* %2023, i32 0, i32 5
  %2025 = getelementptr inbounds %struct.Reg, %struct.Reg* %2024, i32 0, i32 0
  %RCX.i834 = bitcast %union.anon* %2025 to i64*
  %2026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2027 = getelementptr inbounds %struct.GPR, %struct.GPR* %2026, i32 0, i32 15
  %2028 = getelementptr inbounds %struct.Reg, %struct.Reg* %2027, i32 0, i32 0
  %RBP.i835 = bitcast %union.anon* %2028 to i64*
  %2029 = load i64, i64* %RBP.i835
  %2030 = sub i64 %2029, 16
  %2031 = load i64, i64* %PC.i833
  %2032 = add i64 %2031, 4
  store i64 %2032, i64* %PC.i833
  %2033 = inttoptr i64 %2030 to i64*
  %2034 = load i64, i64* %2033
  store i64 %2034, i64* %RCX.i834, align 8
  store %struct.Memory* %loadMem_425e73, %struct.Memory** %MEMORY
  %loadMem_425e77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2036 = getelementptr inbounds %struct.GPR, %struct.GPR* %2035, i32 0, i32 33
  %2037 = getelementptr inbounds %struct.Reg, %struct.Reg* %2036, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %2037 to i64*
  %2038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2039 = getelementptr inbounds %struct.GPR, %struct.GPR* %2038, i32 0, i32 7
  %2040 = getelementptr inbounds %struct.Reg, %struct.Reg* %2039, i32 0, i32 0
  %EDX.i831 = bitcast %union.anon* %2040 to i32*
  %2041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2042 = getelementptr inbounds %struct.GPR, %struct.GPR* %2041, i32 0, i32 9
  %2043 = getelementptr inbounds %struct.Reg, %struct.Reg* %2042, i32 0, i32 0
  %RSI.i832 = bitcast %union.anon* %2043 to i64*
  %2044 = load i32, i32* %EDX.i831
  %2045 = zext i32 %2044 to i64
  %2046 = load i64, i64* %PC.i830
  %2047 = add i64 %2046, 2
  store i64 %2047, i64* %PC.i830
  %2048 = and i64 %2045, 4294967295
  store i64 %2048, i64* %RSI.i832, align 8
  store %struct.Memory* %loadMem_425e77, %struct.Memory** %MEMORY
  %loadMem_425e79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2050 = getelementptr inbounds %struct.GPR, %struct.GPR* %2049, i32 0, i32 33
  %2051 = getelementptr inbounds %struct.Reg, %struct.Reg* %2050, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %2051 to i64*
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2053 = getelementptr inbounds %struct.GPR, %struct.GPR* %2052, i32 0, i32 5
  %2054 = getelementptr inbounds %struct.Reg, %struct.Reg* %2053, i32 0, i32 0
  %RCX.i828 = bitcast %union.anon* %2054 to i64*
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2056 = getelementptr inbounds %struct.GPR, %struct.GPR* %2055, i32 0, i32 7
  %2057 = getelementptr inbounds %struct.Reg, %struct.Reg* %2056, i32 0, i32 0
  %RDX.i829 = bitcast %union.anon* %2057 to i64*
  %2058 = load i64, i64* %RCX.i828
  %2059 = load i64, i64* %PC.i827
  %2060 = add i64 %2059, 3
  store i64 %2060, i64* %PC.i827
  store i64 %2058, i64* %RDX.i829, align 8
  store %struct.Memory* %loadMem_425e79, %struct.Memory** %MEMORY
  %loadMem1_425e7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2062 = getelementptr inbounds %struct.GPR, %struct.GPR* %2061, i32 0, i32 33
  %2063 = getelementptr inbounds %struct.Reg, %struct.Reg* %2062, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %2063 to i64*
  %2064 = load i64, i64* %PC.i826
  %2065 = add i64 %2064, 550948
  %2066 = load i64, i64* %PC.i826
  %2067 = add i64 %2066, 5
  %2068 = load i64, i64* %PC.i826
  %2069 = add i64 %2068, 5
  store i64 %2069, i64* %PC.i826
  %2070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2071 = load i64, i64* %2070, align 8
  %2072 = add i64 %2071, -8
  %2073 = inttoptr i64 %2072 to i64*
  store i64 %2067, i64* %2073
  store i64 %2072, i64* %2070, align 8
  %2074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2065, i64* %2074, align 8
  store %struct.Memory* %loadMem1_425e7c, %struct.Memory** %MEMORY
  %loadMem2_425e7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_425e7c = load i64, i64* %3
  %call2_425e7c = call %struct.Memory* @sub_4ac6a0.ue_v(%struct.State* %0, i64 %loadPC_425e7c, %struct.Memory* %loadMem2_425e7c)
  store %struct.Memory* %call2_425e7c, %struct.Memory** %MEMORY
  %loadMem_425e81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2076 = getelementptr inbounds %struct.GPR, %struct.GPR* %2075, i32 0, i32 33
  %2077 = getelementptr inbounds %struct.Reg, %struct.Reg* %2076, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %2077 to i64*
  %2078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2079 = getelementptr inbounds %struct.GPR, %struct.GPR* %2078, i32 0, i32 1
  %2080 = getelementptr inbounds %struct.Reg, %struct.Reg* %2079, i32 0, i32 0
  %RAX.i824 = bitcast %union.anon* %2080 to i64*
  %2081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2082 = getelementptr inbounds %struct.GPR, %struct.GPR* %2081, i32 0, i32 15
  %2083 = getelementptr inbounds %struct.Reg, %struct.Reg* %2082, i32 0, i32 0
  %RBP.i825 = bitcast %union.anon* %2083 to i64*
  %2084 = load i64, i64* %RAX.i824
  %2085 = load i64, i64* %RBP.i825
  %2086 = sub i64 %2085, 28
  %2087 = load i64, i64* %PC.i823
  %2088 = add i64 %2087, 3
  store i64 %2088, i64* %PC.i823
  %2089 = trunc i64 %2084 to i32
  %2090 = inttoptr i64 %2086 to i32*
  %2091 = load i32, i32* %2090
  %2092 = add i32 %2091, %2089
  %2093 = zext i32 %2092 to i64
  store i64 %2093, i64* %RAX.i824, align 8
  %2094 = icmp ult i32 %2092, %2089
  %2095 = icmp ult i32 %2092, %2091
  %2096 = or i1 %2094, %2095
  %2097 = zext i1 %2096 to i8
  %2098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2097, i8* %2098, align 1
  %2099 = and i32 %2092, 255
  %2100 = call i32 @llvm.ctpop.i32(i32 %2099)
  %2101 = trunc i32 %2100 to i8
  %2102 = and i8 %2101, 1
  %2103 = xor i8 %2102, 1
  %2104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2103, i8* %2104, align 1
  %2105 = xor i32 %2091, %2089
  %2106 = xor i32 %2105, %2092
  %2107 = lshr i32 %2106, 4
  %2108 = trunc i32 %2107 to i8
  %2109 = and i8 %2108, 1
  %2110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2109, i8* %2110, align 1
  %2111 = icmp eq i32 %2092, 0
  %2112 = zext i1 %2111 to i8
  %2113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2112, i8* %2113, align 1
  %2114 = lshr i32 %2092, 31
  %2115 = trunc i32 %2114 to i8
  %2116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2115, i8* %2116, align 1
  %2117 = lshr i32 %2089, 31
  %2118 = lshr i32 %2091, 31
  %2119 = xor i32 %2114, %2117
  %2120 = xor i32 %2114, %2118
  %2121 = add i32 %2119, %2120
  %2122 = icmp eq i32 %2121, 2
  %2123 = zext i1 %2122 to i8
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2123, i8* %2124, align 1
  store %struct.Memory* %loadMem_425e81, %struct.Memory** %MEMORY
  %loadMem_425e84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2126 = getelementptr inbounds %struct.GPR, %struct.GPR* %2125, i32 0, i32 33
  %2127 = getelementptr inbounds %struct.Reg, %struct.Reg* %2126, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %2127 to i64*
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2129 = getelementptr inbounds %struct.GPR, %struct.GPR* %2128, i32 0, i32 1
  %2130 = getelementptr inbounds %struct.Reg, %struct.Reg* %2129, i32 0, i32 0
  %EAX.i821 = bitcast %union.anon* %2130 to i32*
  %2131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2132 = getelementptr inbounds %struct.GPR, %struct.GPR* %2131, i32 0, i32 15
  %2133 = getelementptr inbounds %struct.Reg, %struct.Reg* %2132, i32 0, i32 0
  %RBP.i822 = bitcast %union.anon* %2133 to i64*
  %2134 = load i64, i64* %RBP.i822
  %2135 = sub i64 %2134, 28
  %2136 = load i32, i32* %EAX.i821
  %2137 = zext i32 %2136 to i64
  %2138 = load i64, i64* %PC.i820
  %2139 = add i64 %2138, 3
  store i64 %2139, i64* %PC.i820
  %2140 = inttoptr i64 %2135 to i32*
  store i32 %2136, i32* %2140
  store %struct.Memory* %loadMem_425e84, %struct.Memory** %MEMORY
  br label %block_.L_425e87

block_.L_425e87:                                  ; preds = %routine_idivl__esi.exit838, %block_.L_425e36
  %loadMem_425e87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2142 = getelementptr inbounds %struct.GPR, %struct.GPR* %2141, i32 0, i32 33
  %2143 = getelementptr inbounds %struct.Reg, %struct.Reg* %2142, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %2143 to i64*
  %2144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2145 = getelementptr inbounds %struct.GPR, %struct.GPR* %2144, i32 0, i32 1
  %2146 = getelementptr inbounds %struct.Reg, %struct.Reg* %2145, i32 0, i32 0
  %RAX.i819 = bitcast %union.anon* %2146 to i64*
  %2147 = load i64, i64* %PC.i818
  %2148 = add i64 %2147, 8
  store i64 %2148, i64* %PC.i818
  %2149 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2149, i64* %RAX.i819, align 8
  store %struct.Memory* %loadMem_425e87, %struct.Memory** %MEMORY
  %loadMem_425e8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2151 = getelementptr inbounds %struct.GPR, %struct.GPR* %2150, i32 0, i32 33
  %2152 = getelementptr inbounds %struct.Reg, %struct.Reg* %2151, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %2152 to i64*
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2154 = getelementptr inbounds %struct.GPR, %struct.GPR* %2153, i32 0, i32 1
  %2155 = getelementptr inbounds %struct.Reg, %struct.Reg* %2154, i32 0, i32 0
  %RAX.i817 = bitcast %union.anon* %2155 to i64*
  %2156 = load i64, i64* %RAX.i817
  %2157 = add i64 %2156, 72404
  %2158 = load i64, i64* %PC.i816
  %2159 = add i64 %2158, 7
  store i64 %2159, i64* %PC.i816
  %2160 = inttoptr i64 %2157 to i32*
  %2161 = load i32, i32* %2160
  %2162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2162, align 1
  %2163 = and i32 %2161, 255
  %2164 = call i32 @llvm.ctpop.i32(i32 %2163)
  %2165 = trunc i32 %2164 to i8
  %2166 = and i8 %2165, 1
  %2167 = xor i8 %2166, 1
  %2168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2167, i8* %2168, align 1
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2169, align 1
  %2170 = icmp eq i32 %2161, 0
  %2171 = zext i1 %2170 to i8
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2171, i8* %2172, align 1
  %2173 = lshr i32 %2161, 31
  %2174 = trunc i32 %2173 to i8
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2174, i8* %2175, align 1
  %2176 = lshr i32 %2161, 31
  %2177 = xor i32 %2173, %2176
  %2178 = add i32 %2177, %2176
  %2179 = icmp eq i32 %2178, 2
  %2180 = zext i1 %2179 to i8
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2180, i8* %2181, align 1
  store %struct.Memory* %loadMem_425e8f, %struct.Memory** %MEMORY
  %loadMem_425e96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2183 = getelementptr inbounds %struct.GPR, %struct.GPR* %2182, i32 0, i32 33
  %2184 = getelementptr inbounds %struct.Reg, %struct.Reg* %2183, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %2184 to i64*
  %2185 = load i64, i64* %PC.i815
  %2186 = add i64 %2185, 375
  %2187 = load i64, i64* %PC.i815
  %2188 = add i64 %2187, 6
  %2189 = load i64, i64* %PC.i815
  %2190 = add i64 %2189, 6
  store i64 %2190, i64* %PC.i815
  %2191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2192 = load i8, i8* %2191, align 1
  %2193 = icmp eq i8 %2192, 0
  %2194 = zext i1 %2193 to i8
  store i8 %2194, i8* %BRANCH_TAKEN, align 1
  %2195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2196 = select i1 %2193, i64 %2186, i64 %2188
  store i64 %2196, i64* %2195, align 8
  store %struct.Memory* %loadMem_425e96, %struct.Memory** %MEMORY
  %loadBr_425e96 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_425e96 = icmp eq i8 %loadBr_425e96, 1
  br i1 %cmpBr_425e96, label %block_.L_42600d, label %block_425e9c

block_425e9c:                                     ; preds = %block_.L_425e87
  %loadMem_425e9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2198 = getelementptr inbounds %struct.GPR, %struct.GPR* %2197, i32 0, i32 33
  %2199 = getelementptr inbounds %struct.Reg, %struct.Reg* %2198, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %2199 to i64*
  %2200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2201 = getelementptr inbounds %struct.GPR, %struct.GPR* %2200, i32 0, i32 1
  %2202 = getelementptr inbounds %struct.Reg, %struct.Reg* %2201, i32 0, i32 0
  %RAX.i814 = bitcast %union.anon* %2202 to i64*
  %2203 = load i64, i64* %PC.i813
  %2204 = add i64 %2203, 8
  store i64 %2204, i64* %PC.i813
  %2205 = load i64, i64* bitcast (%G_0x722cb0_type* @G_0x722cb0 to i64*)
  store i64 %2205, i64* %RAX.i814, align 8
  store %struct.Memory* %loadMem_425e9c, %struct.Memory** %MEMORY
  %loadMem_425ea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2207 = getelementptr inbounds %struct.GPR, %struct.GPR* %2206, i32 0, i32 33
  %2208 = getelementptr inbounds %struct.Reg, %struct.Reg* %2207, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %2208 to i64*
  %2209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2210 = getelementptr inbounds %struct.GPR, %struct.GPR* %2209, i32 0, i32 1
  %2211 = getelementptr inbounds %struct.Reg, %struct.Reg* %2210, i32 0, i32 0
  %RAX.i812 = bitcast %union.anon* %2211 to i64*
  %2212 = load i64, i64* %RAX.i812
  %2213 = add i64 %2212, 1148
  %2214 = load i64, i64* %PC.i811
  %2215 = add i64 %2214, 7
  store i64 %2215, i64* %PC.i811
  %2216 = inttoptr i64 %2213 to i32*
  %2217 = load i32, i32* %2216
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2218, align 1
  %2219 = and i32 %2217, 255
  %2220 = call i32 @llvm.ctpop.i32(i32 %2219)
  %2221 = trunc i32 %2220 to i8
  %2222 = and i8 %2221, 1
  %2223 = xor i8 %2222, 1
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2223, i8* %2224, align 1
  %2225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2225, align 1
  %2226 = icmp eq i32 %2217, 0
  %2227 = zext i1 %2226 to i8
  %2228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2227, i8* %2228, align 1
  %2229 = lshr i32 %2217, 31
  %2230 = trunc i32 %2229 to i8
  %2231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2230, i8* %2231, align 1
  %2232 = lshr i32 %2217, 31
  %2233 = xor i32 %2229, %2232
  %2234 = add i32 %2233, %2232
  %2235 = icmp eq i32 %2234, 2
  %2236 = zext i1 %2235 to i8
  %2237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2236, i8* %2237, align 1
  store %struct.Memory* %loadMem_425ea4, %struct.Memory** %MEMORY
  %loadMem_425eab = load %struct.Memory*, %struct.Memory** %MEMORY
  %2238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2239 = getelementptr inbounds %struct.GPR, %struct.GPR* %2238, i32 0, i32 33
  %2240 = getelementptr inbounds %struct.Reg, %struct.Reg* %2239, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %2240 to i64*
  %2241 = load i64, i64* %PC.i810
  %2242 = add i64 %2241, 63
  %2243 = load i64, i64* %PC.i810
  %2244 = add i64 %2243, 6
  %2245 = load i64, i64* %PC.i810
  %2246 = add i64 %2245, 6
  store i64 %2246, i64* %PC.i810
  %2247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2248 = load i8, i8* %2247, align 1
  store i8 %2248, i8* %BRANCH_TAKEN, align 1
  %2249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2250 = icmp ne i8 %2248, 0
  %2251 = select i1 %2250, i64 %2242, i64 %2244
  store i64 %2251, i64* %2249, align 8
  store %struct.Memory* %loadMem_425eab, %struct.Memory** %MEMORY
  %loadBr_425eab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_425eab = icmp eq i8 %loadBr_425eab, 1
  br i1 %cmpBr_425eab, label %block_.L_425eea, label %block_425eb1

block_425eb1:                                     ; preds = %block_425e9c
  %loadMem_425eb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2253 = getelementptr inbounds %struct.GPR, %struct.GPR* %2252, i32 0, i32 33
  %2254 = getelementptr inbounds %struct.Reg, %struct.Reg* %2253, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %2254 to i64*
  %2255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2256 = getelementptr inbounds %struct.GPR, %struct.GPR* %2255, i32 0, i32 1
  %2257 = getelementptr inbounds %struct.Reg, %struct.Reg* %2256, i32 0, i32 0
  %RAX.i809 = bitcast %union.anon* %2257 to i64*
  %2258 = load i64, i64* %PC.i808
  %2259 = add i64 %2258, 5
  store i64 %2259, i64* %PC.i808
  store i64 4294967295, i64* %RAX.i809, align 8
  store %struct.Memory* %loadMem_425eb1, %struct.Memory** %MEMORY
  %loadMem_425eb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2261 = getelementptr inbounds %struct.GPR, %struct.GPR* %2260, i32 0, i32 33
  %2262 = getelementptr inbounds %struct.Reg, %struct.Reg* %2261, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %2262 to i64*
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2264 = getelementptr inbounds %struct.GPR, %struct.GPR* %2263, i32 0, i32 5
  %2265 = getelementptr inbounds %struct.Reg, %struct.Reg* %2264, i32 0, i32 0
  %RCX.i807 = bitcast %union.anon* %2265 to i64*
  %2266 = load i64, i64* %PC.i806
  %2267 = add i64 %2266, 8
  store i64 %2267, i64* %PC.i806
  %2268 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2268, i64* %RCX.i807, align 8
  store %struct.Memory* %loadMem_425eb6, %struct.Memory** %MEMORY
  %loadMem_425ebe = load %struct.Memory*, %struct.Memory** %MEMORY
  %2269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2270 = getelementptr inbounds %struct.GPR, %struct.GPR* %2269, i32 0, i32 33
  %2271 = getelementptr inbounds %struct.Reg, %struct.Reg* %2270, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %2271 to i64*
  %2272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2273 = getelementptr inbounds %struct.GPR, %struct.GPR* %2272, i32 0, i32 5
  %2274 = getelementptr inbounds %struct.Reg, %struct.Reg* %2273, i32 0, i32 0
  %RCX.i804 = bitcast %union.anon* %2274 to i64*
  %2275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2276 = getelementptr inbounds %struct.GPR, %struct.GPR* %2275, i32 0, i32 7
  %2277 = getelementptr inbounds %struct.Reg, %struct.Reg* %2276, i32 0, i32 0
  %RDX.i805 = bitcast %union.anon* %2277 to i64*
  %2278 = load i64, i64* %RCX.i804
  %2279 = add i64 %2278, 72448
  %2280 = load i64, i64* %PC.i803
  %2281 = add i64 %2280, 6
  store i64 %2281, i64* %PC.i803
  %2282 = inttoptr i64 %2279 to i32*
  %2283 = load i32, i32* %2282
  %2284 = zext i32 %2283 to i64
  store i64 %2284, i64* %RDX.i805, align 8
  store %struct.Memory* %loadMem_425ebe, %struct.Memory** %MEMORY
  %loadMem_425ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2286 = getelementptr inbounds %struct.GPR, %struct.GPR* %2285, i32 0, i32 33
  %2287 = getelementptr inbounds %struct.Reg, %struct.Reg* %2286, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %2287 to i64*
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2289 = getelementptr inbounds %struct.GPR, %struct.GPR* %2288, i32 0, i32 9
  %2290 = getelementptr inbounds %struct.Reg, %struct.Reg* %2289, i32 0, i32 0
  %RSI.i802 = bitcast %union.anon* %2290 to i64*
  %2291 = load i64, i64* %PC.i801
  %2292 = add i64 %2291, 7
  store i64 %2292, i64* %PC.i801
  %2293 = load i32, i32* bitcast (%G_0x6d32c8_type* @G_0x6d32c8 to i32*)
  %2294 = zext i32 %2293 to i64
  store i64 %2294, i64* %RSI.i802, align 8
  store %struct.Memory* %loadMem_425ec4, %struct.Memory** %MEMORY
  %loadMem_425ecb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2296 = getelementptr inbounds %struct.GPR, %struct.GPR* %2295, i32 0, i32 33
  %2297 = getelementptr inbounds %struct.Reg, %struct.Reg* %2296, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %2297 to i64*
  %2298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2299 = getelementptr inbounds %struct.GPR, %struct.GPR* %2298, i32 0, i32 9
  %2300 = getelementptr inbounds %struct.Reg, %struct.Reg* %2299, i32 0, i32 0
  %RSI.i800 = bitcast %union.anon* %2300 to i64*
  %2301 = load i64, i64* %RSI.i800
  %2302 = load i64, i64* %PC.i799
  %2303 = add i64 %2302, 3
  store i64 %2303, i64* %PC.i799
  %2304 = trunc i64 %2301 to i32
  %2305 = add i32 4, %2304
  %2306 = zext i32 %2305 to i64
  store i64 %2306, i64* %RSI.i800, align 8
  %2307 = icmp ult i32 %2305, %2304
  %2308 = icmp ult i32 %2305, 4
  %2309 = or i1 %2307, %2308
  %2310 = zext i1 %2309 to i8
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2310, i8* %2311, align 1
  %2312 = and i32 %2305, 255
  %2313 = call i32 @llvm.ctpop.i32(i32 %2312)
  %2314 = trunc i32 %2313 to i8
  %2315 = and i8 %2314, 1
  %2316 = xor i8 %2315, 1
  %2317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2316, i8* %2317, align 1
  %2318 = xor i64 4, %2301
  %2319 = trunc i64 %2318 to i32
  %2320 = xor i32 %2319, %2305
  %2321 = lshr i32 %2320, 4
  %2322 = trunc i32 %2321 to i8
  %2323 = and i8 %2322, 1
  %2324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2323, i8* %2324, align 1
  %2325 = icmp eq i32 %2305, 0
  %2326 = zext i1 %2325 to i8
  %2327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2326, i8* %2327, align 1
  %2328 = lshr i32 %2305, 31
  %2329 = trunc i32 %2328 to i8
  %2330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2329, i8* %2330, align 1
  %2331 = lshr i32 %2304, 31
  %2332 = xor i32 %2328, %2331
  %2333 = add i32 %2332, %2328
  %2334 = icmp eq i32 %2333, 2
  %2335 = zext i1 %2334 to i8
  %2336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2335, i8* %2336, align 1
  store %struct.Memory* %loadMem_425ecb, %struct.Memory** %MEMORY
  %loadMem_425ece = load %struct.Memory*, %struct.Memory** %MEMORY
  %2337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2338 = getelementptr inbounds %struct.GPR, %struct.GPR* %2337, i32 0, i32 33
  %2339 = getelementptr inbounds %struct.Reg, %struct.Reg* %2338, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %2339 to i64*
  %2340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2341 = getelementptr inbounds %struct.GPR, %struct.GPR* %2340, i32 0, i32 9
  %2342 = getelementptr inbounds %struct.Reg, %struct.Reg* %2341, i32 0, i32 0
  %ESI.i797 = bitcast %union.anon* %2342 to i32*
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2344 = getelementptr inbounds %struct.GPR, %struct.GPR* %2343, i32 0, i32 5
  %2345 = getelementptr inbounds %struct.Reg, %struct.Reg* %2344, i32 0, i32 0
  %RCX.i798 = bitcast %union.anon* %2345 to i64*
  %2346 = load i32, i32* %ESI.i797
  %2347 = zext i32 %2346 to i64
  %2348 = load i64, i64* %PC.i796
  %2349 = add i64 %2348, 2
  store i64 %2349, i64* %PC.i796
  %2350 = and i64 %2347, 4294967295
  store i64 %2350, i64* %RCX.i798, align 8
  store %struct.Memory* %loadMem_425ece, %struct.Memory** %MEMORY
  %loadMem_425ed0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2352 = getelementptr inbounds %struct.GPR, %struct.GPR* %2351, i32 0, i32 33
  %2353 = getelementptr inbounds %struct.Reg, %struct.Reg* %2352, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %2353 to i64*
  %2354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2355 = getelementptr inbounds %struct.GPR, %struct.GPR* %2354, i32 0, i32 5
  %2356 = getelementptr inbounds %struct.Reg, %struct.Reg* %2355, i32 0, i32 0
  %2357 = bitcast %union.anon* %2356 to %struct.anon.2*
  %CL.i793 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2357, i32 0, i32 0
  %2358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2359 = getelementptr inbounds %struct.GPR, %struct.GPR* %2358, i32 0, i32 1
  %2360 = getelementptr inbounds %struct.Reg, %struct.Reg* %2359, i32 0, i32 0
  %RAX.i794 = bitcast %union.anon* %2360 to i64*
  %2361 = load i64, i64* %RAX.i794
  %2362 = load i8, i8* %CL.i793
  %2363 = zext i8 %2362 to i64
  %2364 = load i64, i64* %PC.i792
  %2365 = add i64 %2364, 2
  store i64 %2365, i64* %PC.i792
  %2366 = trunc i64 %2363 to i5
  switch i5 %2366, label %2373 [
    i5 0, label %routine_shll__cl___eax.exit795
    i5 1, label %2367
  ]

; <label>:2367:                                   ; preds = %block_425eb1
  %2368 = trunc i64 %2361 to i32
  %2369 = shl i32 %2368, 1
  %2370 = icmp slt i32 %2368, 0
  %2371 = icmp slt i32 %2369, 0
  %2372 = xor i1 %2370, %2371
  br label %2382

; <label>:2373:                                   ; preds = %block_425eb1
  %2374 = and i64 %2363, 31
  %2375 = add i64 %2374, 4294967295
  %2376 = and i64 %2361, 4294967295
  %2377 = and i64 %2375, 4294967295
  %2378 = shl i64 %2376, %2377
  %2379 = trunc i64 %2378 to i32
  %2380 = icmp slt i32 %2379, 0
  %2381 = shl i32 %2379, 1
  br label %2382

; <label>:2382:                                   ; preds = %2373, %2367
  %2383 = phi i1 [ %2370, %2367 ], [ %2380, %2373 ]
  %2384 = phi i1 [ %2372, %2367 ], [ false, %2373 ]
  %2385 = phi i32 [ %2369, %2367 ], [ %2381, %2373 ]
  %2386 = zext i32 %2385 to i64
  store i64 %2386, i64* %RAX.i794, align 8
  %2387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2388 = zext i1 %2383 to i8
  store i8 %2388, i8* %2387, align 1
  %2389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2390 = and i32 %2385, 254
  %2391 = call i32 @llvm.ctpop.i32(i32 %2390)
  %2392 = trunc i32 %2391 to i8
  %2393 = and i8 %2392, 1
  %2394 = xor i8 %2393, 1
  store i8 %2394, i8* %2389, align 1
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2395, align 1
  %2396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2397 = icmp eq i32 %2385, 0
  %2398 = zext i1 %2397 to i8
  store i8 %2398, i8* %2396, align 1
  %2399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2400 = lshr i32 %2385, 31
  %2401 = trunc i32 %2400 to i8
  store i8 %2401, i8* %2399, align 1
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2403 = zext i1 %2384 to i8
  store i8 %2403, i8* %2402, align 1
  br label %routine_shll__cl___eax.exit795

routine_shll__cl___eax.exit795:                   ; preds = %block_425eb1, %2382
  store %struct.Memory* %loadMem_425ed0, %struct.Memory** %MEMORY
  %loadMem_425ed2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2405 = getelementptr inbounds %struct.GPR, %struct.GPR* %2404, i32 0, i32 33
  %2406 = getelementptr inbounds %struct.Reg, %struct.Reg* %2405, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %2406 to i64*
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2408 = getelementptr inbounds %struct.GPR, %struct.GPR* %2407, i32 0, i32 1
  %2409 = getelementptr inbounds %struct.Reg, %struct.Reg* %2408, i32 0, i32 0
  %RAX.i791 = bitcast %union.anon* %2409 to i64*
  %2410 = load i64, i64* %RAX.i791
  %2411 = load i64, i64* %PC.i790
  %2412 = add i64 %2411, 3
  store i64 %2412, i64* %PC.i790
  %2413 = xor i64 -1, %2410
  %2414 = trunc i64 %2413 to i32
  %2415 = and i64 %2413, 4294967295
  store i64 %2415, i64* %RAX.i791, align 8
  %2416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2416, align 1
  %2417 = and i32 %2414, 255
  %2418 = call i32 @llvm.ctpop.i32(i32 %2417)
  %2419 = trunc i32 %2418 to i8
  %2420 = and i8 %2419, 1
  %2421 = xor i8 %2420, 1
  %2422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2421, i8* %2422, align 1
  %2423 = icmp eq i32 %2414, 0
  %2424 = zext i1 %2423 to i8
  %2425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2424, i8* %2425, align 1
  %2426 = lshr i32 %2414, 31
  %2427 = trunc i32 %2426 to i8
  %2428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2427, i8* %2428, align 1
  %2429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2429, align 1
  %2430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2430, align 1
  store %struct.Memory* %loadMem_425ed2, %struct.Memory** %MEMORY
  %loadMem_425ed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2432 = getelementptr inbounds %struct.GPR, %struct.GPR* %2431, i32 0, i32 33
  %2433 = getelementptr inbounds %struct.Reg, %struct.Reg* %2432, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %2433 to i64*
  %2434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2435 = getelementptr inbounds %struct.GPR, %struct.GPR* %2434, i32 0, i32 1
  %2436 = getelementptr inbounds %struct.Reg, %struct.Reg* %2435, i32 0, i32 0
  %EAX.i788 = bitcast %union.anon* %2436 to i32*
  %2437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2438 = getelementptr inbounds %struct.GPR, %struct.GPR* %2437, i32 0, i32 7
  %2439 = getelementptr inbounds %struct.Reg, %struct.Reg* %2438, i32 0, i32 0
  %RDX.i789 = bitcast %union.anon* %2439 to i64*
  %2440 = load i64, i64* %RDX.i789
  %2441 = load i32, i32* %EAX.i788
  %2442 = zext i32 %2441 to i64
  %2443 = load i64, i64* %PC.i787
  %2444 = add i64 %2443, 2
  store i64 %2444, i64* %PC.i787
  %2445 = and i64 %2442, %2440
  %2446 = trunc i64 %2445 to i32
  %2447 = and i64 %2445, 4294967295
  store i64 %2447, i64* %RDX.i789, align 8
  %2448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2448, align 1
  %2449 = and i32 %2446, 255
  %2450 = call i32 @llvm.ctpop.i32(i32 %2449)
  %2451 = trunc i32 %2450 to i8
  %2452 = and i8 %2451, 1
  %2453 = xor i8 %2452, 1
  %2454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2453, i8* %2454, align 1
  %2455 = icmp eq i32 %2446, 0
  %2456 = zext i1 %2455 to i8
  %2457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2456, i8* %2457, align 1
  %2458 = lshr i32 %2446, 31
  %2459 = trunc i32 %2458 to i8
  %2460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2459, i8* %2460, align 1
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2461, align 1
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2462, align 1
  store %struct.Memory* %loadMem_425ed5, %struct.Memory** %MEMORY
  %loadMem_425ed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2464 = getelementptr inbounds %struct.GPR, %struct.GPR* %2463, i32 0, i32 33
  %2465 = getelementptr inbounds %struct.Reg, %struct.Reg* %2464, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %2465 to i64*
  %2466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2467 = getelementptr inbounds %struct.GPR, %struct.GPR* %2466, i32 0, i32 11
  %2468 = getelementptr inbounds %struct.Reg, %struct.Reg* %2467, i32 0, i32 0
  %RDI.i786 = bitcast %union.anon* %2468 to i64*
  %2469 = load i64, i64* %PC.i785
  %2470 = add i64 %2469, 8
  store i64 %2470, i64* %PC.i785
  %2471 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2471, i64* %RDI.i786, align 8
  store %struct.Memory* %loadMem_425ed7, %struct.Memory** %MEMORY
  %loadMem_425edf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2473 = getelementptr inbounds %struct.GPR, %struct.GPR* %2472, i32 0, i32 33
  %2474 = getelementptr inbounds %struct.Reg, %struct.Reg* %2473, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %2474 to i64*
  %2475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2476 = getelementptr inbounds %struct.GPR, %struct.GPR* %2475, i32 0, i32 7
  %2477 = getelementptr inbounds %struct.Reg, %struct.Reg* %2476, i32 0, i32 0
  %EDX.i783 = bitcast %union.anon* %2477 to i32*
  %2478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2479 = getelementptr inbounds %struct.GPR, %struct.GPR* %2478, i32 0, i32 11
  %2480 = getelementptr inbounds %struct.Reg, %struct.Reg* %2479, i32 0, i32 0
  %RDI.i784 = bitcast %union.anon* %2480 to i64*
  %2481 = load i64, i64* %RDI.i784
  %2482 = add i64 %2481, 72428
  %2483 = load i32, i32* %EDX.i783
  %2484 = zext i32 %2483 to i64
  %2485 = load i64, i64* %PC.i782
  %2486 = add i64 %2485, 6
  store i64 %2486, i64* %PC.i782
  %2487 = inttoptr i64 %2482 to i32*
  store i32 %2483, i32* %2487
  store %struct.Memory* %loadMem_425edf, %struct.Memory** %MEMORY
  %loadMem_425ee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2489 = getelementptr inbounds %struct.GPR, %struct.GPR* %2488, i32 0, i32 33
  %2490 = getelementptr inbounds %struct.Reg, %struct.Reg* %2489, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %2490 to i64*
  %2491 = load i64, i64* %PC.i781
  %2492 = add i64 %2491, 170
  %2493 = load i64, i64* %PC.i781
  %2494 = add i64 %2493, 5
  store i64 %2494, i64* %PC.i781
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2492, i64* %2495, align 8
  store %struct.Memory* %loadMem_425ee5, %struct.Memory** %MEMORY
  br label %block_.L_425f8f

block_.L_425eea:                                  ; preds = %block_425e9c
  %loadMem_425eea = load %struct.Memory*, %struct.Memory** %MEMORY
  %2496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2497 = getelementptr inbounds %struct.GPR, %struct.GPR* %2496, i32 0, i32 33
  %2498 = getelementptr inbounds %struct.Reg, %struct.Reg* %2497, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %2498 to i64*
  %2499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2500 = getelementptr inbounds %struct.GPR, %struct.GPR* %2499, i32 0, i32 15
  %2501 = getelementptr inbounds %struct.Reg, %struct.Reg* %2500, i32 0, i32 0
  %RBP.i780 = bitcast %union.anon* %2501 to i64*
  %2502 = load i64, i64* %RBP.i780
  %2503 = sub i64 %2502, 32
  %2504 = load i64, i64* %PC.i779
  %2505 = add i64 %2504, 4
  store i64 %2505, i64* %PC.i779
  %2506 = inttoptr i64 %2503 to i32*
  %2507 = load i32, i32* %2506
  %2508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2508, align 1
  %2509 = and i32 %2507, 255
  %2510 = call i32 @llvm.ctpop.i32(i32 %2509)
  %2511 = trunc i32 %2510 to i8
  %2512 = and i8 %2511, 1
  %2513 = xor i8 %2512, 1
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2513, i8* %2514, align 1
  %2515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2515, align 1
  %2516 = icmp eq i32 %2507, 0
  %2517 = zext i1 %2516 to i8
  %2518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2517, i8* %2518, align 1
  %2519 = lshr i32 %2507, 31
  %2520 = trunc i32 %2519 to i8
  %2521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2520, i8* %2521, align 1
  %2522 = lshr i32 %2507, 31
  %2523 = xor i32 %2519, %2522
  %2524 = add i32 %2523, %2522
  %2525 = icmp eq i32 %2524, 2
  %2526 = zext i1 %2525 to i8
  %2527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2526, i8* %2527, align 1
  store %struct.Memory* %loadMem_425eea, %struct.Memory** %MEMORY
  %loadMem_425eee = load %struct.Memory*, %struct.Memory** %MEMORY
  %2528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2529 = getelementptr inbounds %struct.GPR, %struct.GPR* %2528, i32 0, i32 33
  %2530 = getelementptr inbounds %struct.Reg, %struct.Reg* %2529, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %2530 to i64*
  %2531 = load i64, i64* %PC.i778
  %2532 = add i64 %2531, 24
  %2533 = load i64, i64* %PC.i778
  %2534 = add i64 %2533, 6
  %2535 = load i64, i64* %PC.i778
  %2536 = add i64 %2535, 6
  store i64 %2536, i64* %PC.i778
  %2537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2538 = load i8, i8* %2537, align 1
  store i8 %2538, i8* %BRANCH_TAKEN, align 1
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2540 = icmp ne i8 %2538, 0
  %2541 = select i1 %2540, i64 %2532, i64 %2534
  store i64 %2541, i64* %2539, align 8
  store %struct.Memory* %loadMem_425eee, %struct.Memory** %MEMORY
  %loadBr_425eee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_425eee = icmp eq i8 %loadBr_425eee, 1
  br i1 %cmpBr_425eee, label %block_.L_425f06, label %block_425ef4

block_425ef4:                                     ; preds = %block_.L_425eea
  %loadMem_425ef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2543 = getelementptr inbounds %struct.GPR, %struct.GPR* %2542, i32 0, i32 33
  %2544 = getelementptr inbounds %struct.Reg, %struct.Reg* %2543, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %2544 to i64*
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2546 = getelementptr inbounds %struct.GPR, %struct.GPR* %2545, i32 0, i32 1
  %2547 = getelementptr inbounds %struct.Reg, %struct.Reg* %2546, i32 0, i32 0
  %RAX.i777 = bitcast %union.anon* %2547 to i64*
  %2548 = load i64, i64* %PC.i776
  %2549 = add i64 %2548, 8
  store i64 %2549, i64* %PC.i776
  %2550 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2550, i64* %RAX.i777, align 8
  store %struct.Memory* %loadMem_425ef4, %struct.Memory** %MEMORY
  %loadMem_425efc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2552 = getelementptr inbounds %struct.GPR, %struct.GPR* %2551, i32 0, i32 33
  %2553 = getelementptr inbounds %struct.Reg, %struct.Reg* %2552, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %2553 to i64*
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2555 = getelementptr inbounds %struct.GPR, %struct.GPR* %2554, i32 0, i32 1
  %2556 = getelementptr inbounds %struct.Reg, %struct.Reg* %2555, i32 0, i32 0
  %RAX.i775 = bitcast %union.anon* %2556 to i64*
  %2557 = load i64, i64* %RAX.i775
  %2558 = add i64 %2557, 28
  %2559 = load i64, i64* %PC.i774
  %2560 = add i64 %2559, 4
  store i64 %2560, i64* %PC.i774
  %2561 = inttoptr i64 %2558 to i32*
  %2562 = load i32, i32* %2561
  %2563 = sub i32 %2562, 1
  %2564 = icmp ult i32 %2562, 1
  %2565 = zext i1 %2564 to i8
  %2566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2565, i8* %2566, align 1
  %2567 = and i32 %2563, 255
  %2568 = call i32 @llvm.ctpop.i32(i32 %2567)
  %2569 = trunc i32 %2568 to i8
  %2570 = and i8 %2569, 1
  %2571 = xor i8 %2570, 1
  %2572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2571, i8* %2572, align 1
  %2573 = xor i32 %2562, 1
  %2574 = xor i32 %2573, %2563
  %2575 = lshr i32 %2574, 4
  %2576 = trunc i32 %2575 to i8
  %2577 = and i8 %2576, 1
  %2578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2577, i8* %2578, align 1
  %2579 = icmp eq i32 %2563, 0
  %2580 = zext i1 %2579 to i8
  %2581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2580, i8* %2581, align 1
  %2582 = lshr i32 %2563, 31
  %2583 = trunc i32 %2582 to i8
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2583, i8* %2584, align 1
  %2585 = lshr i32 %2562, 31
  %2586 = xor i32 %2582, %2585
  %2587 = add i32 %2586, %2585
  %2588 = icmp eq i32 %2587, 2
  %2589 = zext i1 %2588 to i8
  %2590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2589, i8* %2590, align 1
  store %struct.Memory* %loadMem_425efc, %struct.Memory** %MEMORY
  %loadMem_425f00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2592 = getelementptr inbounds %struct.GPR, %struct.GPR* %2591, i32 0, i32 33
  %2593 = getelementptr inbounds %struct.Reg, %struct.Reg* %2592, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %2593 to i64*
  %2594 = load i64, i64* %PC.i773
  %2595 = add i64 %2594, 63
  %2596 = load i64, i64* %PC.i773
  %2597 = add i64 %2596, 6
  %2598 = load i64, i64* %PC.i773
  %2599 = add i64 %2598, 6
  store i64 %2599, i64* %PC.i773
  %2600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2601 = load i8, i8* %2600, align 1
  %2602 = icmp eq i8 %2601, 0
  %2603 = zext i1 %2602 to i8
  store i8 %2603, i8* %BRANCH_TAKEN, align 1
  %2604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2605 = select i1 %2602, i64 %2595, i64 %2597
  store i64 %2605, i64* %2604, align 8
  store %struct.Memory* %loadMem_425f00, %struct.Memory** %MEMORY
  %loadBr_425f00 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_425f00 = icmp eq i8 %loadBr_425f00, 1
  br i1 %cmpBr_425f00, label %block_.L_425f3f, label %block_.L_425f06

block_.L_425f06:                                  ; preds = %block_425ef4, %block_.L_425eea
  %loadMem_425f06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2607 = getelementptr inbounds %struct.GPR, %struct.GPR* %2606, i32 0, i32 33
  %2608 = getelementptr inbounds %struct.Reg, %struct.Reg* %2607, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %2608 to i64*
  %2609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2610 = getelementptr inbounds %struct.GPR, %struct.GPR* %2609, i32 0, i32 1
  %2611 = getelementptr inbounds %struct.Reg, %struct.Reg* %2610, i32 0, i32 0
  %RAX.i772 = bitcast %union.anon* %2611 to i64*
  %2612 = load i64, i64* %PC.i771
  %2613 = add i64 %2612, 5
  store i64 %2613, i64* %PC.i771
  store i64 4294967295, i64* %RAX.i772, align 8
  store %struct.Memory* %loadMem_425f06, %struct.Memory** %MEMORY
  %loadMem_425f0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2615 = getelementptr inbounds %struct.GPR, %struct.GPR* %2614, i32 0, i32 33
  %2616 = getelementptr inbounds %struct.Reg, %struct.Reg* %2615, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %2616 to i64*
  %2617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2618 = getelementptr inbounds %struct.GPR, %struct.GPR* %2617, i32 0, i32 5
  %2619 = getelementptr inbounds %struct.Reg, %struct.Reg* %2618, i32 0, i32 0
  %RCX.i770 = bitcast %union.anon* %2619 to i64*
  %2620 = load i64, i64* %PC.i769
  %2621 = add i64 %2620, 8
  store i64 %2621, i64* %PC.i769
  %2622 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2622, i64* %RCX.i770, align 8
  store %struct.Memory* %loadMem_425f0b, %struct.Memory** %MEMORY
  %loadMem_425f13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2624 = getelementptr inbounds %struct.GPR, %struct.GPR* %2623, i32 0, i32 33
  %2625 = getelementptr inbounds %struct.Reg, %struct.Reg* %2624, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %2625 to i64*
  %2626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2627 = getelementptr inbounds %struct.GPR, %struct.GPR* %2626, i32 0, i32 5
  %2628 = getelementptr inbounds %struct.Reg, %struct.Reg* %2627, i32 0, i32 0
  %RCX.i767 = bitcast %union.anon* %2628 to i64*
  %2629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2630 = getelementptr inbounds %struct.GPR, %struct.GPR* %2629, i32 0, i32 7
  %2631 = getelementptr inbounds %struct.Reg, %struct.Reg* %2630, i32 0, i32 0
  %RDX.i768 = bitcast %union.anon* %2631 to i64*
  %2632 = load i64, i64* %RCX.i767
  %2633 = add i64 %2632, 72448
  %2634 = load i64, i64* %PC.i766
  %2635 = add i64 %2634, 6
  store i64 %2635, i64* %PC.i766
  %2636 = inttoptr i64 %2633 to i32*
  %2637 = load i32, i32* %2636
  %2638 = zext i32 %2637 to i64
  store i64 %2638, i64* %RDX.i768, align 8
  store %struct.Memory* %loadMem_425f13, %struct.Memory** %MEMORY
  %loadMem_425f19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2640 = getelementptr inbounds %struct.GPR, %struct.GPR* %2639, i32 0, i32 33
  %2641 = getelementptr inbounds %struct.Reg, %struct.Reg* %2640, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %2641 to i64*
  %2642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2643 = getelementptr inbounds %struct.GPR, %struct.GPR* %2642, i32 0, i32 9
  %2644 = getelementptr inbounds %struct.Reg, %struct.Reg* %2643, i32 0, i32 0
  %RSI.i765 = bitcast %union.anon* %2644 to i64*
  %2645 = load i64, i64* %PC.i764
  %2646 = add i64 %2645, 7
  store i64 %2646, i64* %PC.i764
  %2647 = load i32, i32* bitcast (%G_0x6d32c8_type* @G_0x6d32c8 to i32*)
  %2648 = zext i32 %2647 to i64
  store i64 %2648, i64* %RSI.i765, align 8
  store %struct.Memory* %loadMem_425f19, %struct.Memory** %MEMORY
  %loadMem_425f20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2650 = getelementptr inbounds %struct.GPR, %struct.GPR* %2649, i32 0, i32 33
  %2651 = getelementptr inbounds %struct.Reg, %struct.Reg* %2650, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %2651 to i64*
  %2652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2653 = getelementptr inbounds %struct.GPR, %struct.GPR* %2652, i32 0, i32 9
  %2654 = getelementptr inbounds %struct.Reg, %struct.Reg* %2653, i32 0, i32 0
  %RSI.i763 = bitcast %union.anon* %2654 to i64*
  %2655 = load i64, i64* %RSI.i763
  %2656 = load i64, i64* %PC.i762
  %2657 = add i64 %2656, 3
  store i64 %2657, i64* %PC.i762
  %2658 = trunc i64 %2655 to i32
  %2659 = add i32 4, %2658
  %2660 = zext i32 %2659 to i64
  store i64 %2660, i64* %RSI.i763, align 8
  %2661 = icmp ult i32 %2659, %2658
  %2662 = icmp ult i32 %2659, 4
  %2663 = or i1 %2661, %2662
  %2664 = zext i1 %2663 to i8
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2664, i8* %2665, align 1
  %2666 = and i32 %2659, 255
  %2667 = call i32 @llvm.ctpop.i32(i32 %2666)
  %2668 = trunc i32 %2667 to i8
  %2669 = and i8 %2668, 1
  %2670 = xor i8 %2669, 1
  %2671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2670, i8* %2671, align 1
  %2672 = xor i64 4, %2655
  %2673 = trunc i64 %2672 to i32
  %2674 = xor i32 %2673, %2659
  %2675 = lshr i32 %2674, 4
  %2676 = trunc i32 %2675 to i8
  %2677 = and i8 %2676, 1
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2677, i8* %2678, align 1
  %2679 = icmp eq i32 %2659, 0
  %2680 = zext i1 %2679 to i8
  %2681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2680, i8* %2681, align 1
  %2682 = lshr i32 %2659, 31
  %2683 = trunc i32 %2682 to i8
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2683, i8* %2684, align 1
  %2685 = lshr i32 %2658, 31
  %2686 = xor i32 %2682, %2685
  %2687 = add i32 %2686, %2682
  %2688 = icmp eq i32 %2687, 2
  %2689 = zext i1 %2688 to i8
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2689, i8* %2690, align 1
  store %struct.Memory* %loadMem_425f20, %struct.Memory** %MEMORY
  %loadMem_425f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2692 = getelementptr inbounds %struct.GPR, %struct.GPR* %2691, i32 0, i32 33
  %2693 = getelementptr inbounds %struct.Reg, %struct.Reg* %2692, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %2693 to i64*
  %2694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2695 = getelementptr inbounds %struct.GPR, %struct.GPR* %2694, i32 0, i32 9
  %2696 = getelementptr inbounds %struct.Reg, %struct.Reg* %2695, i32 0, i32 0
  %ESI.i760 = bitcast %union.anon* %2696 to i32*
  %2697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2698 = getelementptr inbounds %struct.GPR, %struct.GPR* %2697, i32 0, i32 5
  %2699 = getelementptr inbounds %struct.Reg, %struct.Reg* %2698, i32 0, i32 0
  %RCX.i761 = bitcast %union.anon* %2699 to i64*
  %2700 = load i32, i32* %ESI.i760
  %2701 = zext i32 %2700 to i64
  %2702 = load i64, i64* %PC.i759
  %2703 = add i64 %2702, 2
  store i64 %2703, i64* %PC.i759
  %2704 = and i64 %2701, 4294967295
  store i64 %2704, i64* %RCX.i761, align 8
  store %struct.Memory* %loadMem_425f23, %struct.Memory** %MEMORY
  %loadMem_425f25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2706 = getelementptr inbounds %struct.GPR, %struct.GPR* %2705, i32 0, i32 33
  %2707 = getelementptr inbounds %struct.Reg, %struct.Reg* %2706, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %2707 to i64*
  %2708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2709 = getelementptr inbounds %struct.GPR, %struct.GPR* %2708, i32 0, i32 5
  %2710 = getelementptr inbounds %struct.Reg, %struct.Reg* %2709, i32 0, i32 0
  %2711 = bitcast %union.anon* %2710 to %struct.anon.2*
  %CL.i756 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2711, i32 0, i32 0
  %2712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2713 = getelementptr inbounds %struct.GPR, %struct.GPR* %2712, i32 0, i32 1
  %2714 = getelementptr inbounds %struct.Reg, %struct.Reg* %2713, i32 0, i32 0
  %RAX.i757 = bitcast %union.anon* %2714 to i64*
  %2715 = load i64, i64* %RAX.i757
  %2716 = load i8, i8* %CL.i756
  %2717 = zext i8 %2716 to i64
  %2718 = load i64, i64* %PC.i755
  %2719 = add i64 %2718, 2
  store i64 %2719, i64* %PC.i755
  %2720 = trunc i64 %2717 to i5
  switch i5 %2720, label %2727 [
    i5 0, label %routine_shll__cl___eax.exit758
    i5 1, label %2721
  ]

; <label>:2721:                                   ; preds = %block_.L_425f06
  %2722 = trunc i64 %2715 to i32
  %2723 = shl i32 %2722, 1
  %2724 = icmp slt i32 %2722, 0
  %2725 = icmp slt i32 %2723, 0
  %2726 = xor i1 %2724, %2725
  br label %2736

; <label>:2727:                                   ; preds = %block_.L_425f06
  %2728 = and i64 %2717, 31
  %2729 = add i64 %2728, 4294967295
  %2730 = and i64 %2715, 4294967295
  %2731 = and i64 %2729, 4294967295
  %2732 = shl i64 %2730, %2731
  %2733 = trunc i64 %2732 to i32
  %2734 = icmp slt i32 %2733, 0
  %2735 = shl i32 %2733, 1
  br label %2736

; <label>:2736:                                   ; preds = %2727, %2721
  %2737 = phi i1 [ %2724, %2721 ], [ %2734, %2727 ]
  %2738 = phi i1 [ %2726, %2721 ], [ false, %2727 ]
  %2739 = phi i32 [ %2723, %2721 ], [ %2735, %2727 ]
  %2740 = zext i32 %2739 to i64
  store i64 %2740, i64* %RAX.i757, align 8
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2742 = zext i1 %2737 to i8
  store i8 %2742, i8* %2741, align 1
  %2743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2744 = and i32 %2739, 254
  %2745 = call i32 @llvm.ctpop.i32(i32 %2744)
  %2746 = trunc i32 %2745 to i8
  %2747 = and i8 %2746, 1
  %2748 = xor i8 %2747, 1
  store i8 %2748, i8* %2743, align 1
  %2749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2749, align 1
  %2750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2751 = icmp eq i32 %2739, 0
  %2752 = zext i1 %2751 to i8
  store i8 %2752, i8* %2750, align 1
  %2753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2754 = lshr i32 %2739, 31
  %2755 = trunc i32 %2754 to i8
  store i8 %2755, i8* %2753, align 1
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2757 = zext i1 %2738 to i8
  store i8 %2757, i8* %2756, align 1
  br label %routine_shll__cl___eax.exit758

routine_shll__cl___eax.exit758:                   ; preds = %block_.L_425f06, %2736
  store %struct.Memory* %loadMem_425f25, %struct.Memory** %MEMORY
  %loadMem_425f27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2759 = getelementptr inbounds %struct.GPR, %struct.GPR* %2758, i32 0, i32 33
  %2760 = getelementptr inbounds %struct.Reg, %struct.Reg* %2759, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %2760 to i64*
  %2761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2762 = getelementptr inbounds %struct.GPR, %struct.GPR* %2761, i32 0, i32 1
  %2763 = getelementptr inbounds %struct.Reg, %struct.Reg* %2762, i32 0, i32 0
  %RAX.i754 = bitcast %union.anon* %2763 to i64*
  %2764 = load i64, i64* %RAX.i754
  %2765 = load i64, i64* %PC.i753
  %2766 = add i64 %2765, 3
  store i64 %2766, i64* %PC.i753
  %2767 = xor i64 -1, %2764
  %2768 = trunc i64 %2767 to i32
  %2769 = and i64 %2767, 4294967295
  store i64 %2769, i64* %RAX.i754, align 8
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2770, align 1
  %2771 = and i32 %2768, 255
  %2772 = call i32 @llvm.ctpop.i32(i32 %2771)
  %2773 = trunc i32 %2772 to i8
  %2774 = and i8 %2773, 1
  %2775 = xor i8 %2774, 1
  %2776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2775, i8* %2776, align 1
  %2777 = icmp eq i32 %2768, 0
  %2778 = zext i1 %2777 to i8
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2778, i8* %2779, align 1
  %2780 = lshr i32 %2768, 31
  %2781 = trunc i32 %2780 to i8
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2781, i8* %2782, align 1
  %2783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2783, align 1
  %2784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2784, align 1
  store %struct.Memory* %loadMem_425f27, %struct.Memory** %MEMORY
  %loadMem_425f2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2786 = getelementptr inbounds %struct.GPR, %struct.GPR* %2785, i32 0, i32 33
  %2787 = getelementptr inbounds %struct.Reg, %struct.Reg* %2786, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %2787 to i64*
  %2788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2789 = getelementptr inbounds %struct.GPR, %struct.GPR* %2788, i32 0, i32 1
  %2790 = getelementptr inbounds %struct.Reg, %struct.Reg* %2789, i32 0, i32 0
  %EAX.i751 = bitcast %union.anon* %2790 to i32*
  %2791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2792 = getelementptr inbounds %struct.GPR, %struct.GPR* %2791, i32 0, i32 7
  %2793 = getelementptr inbounds %struct.Reg, %struct.Reg* %2792, i32 0, i32 0
  %RDX.i752 = bitcast %union.anon* %2793 to i64*
  %2794 = load i64, i64* %RDX.i752
  %2795 = load i32, i32* %EAX.i751
  %2796 = zext i32 %2795 to i64
  %2797 = load i64, i64* %PC.i750
  %2798 = add i64 %2797, 2
  store i64 %2798, i64* %PC.i750
  %2799 = and i64 %2796, %2794
  %2800 = trunc i64 %2799 to i32
  %2801 = and i64 %2799, 4294967295
  store i64 %2801, i64* %RDX.i752, align 8
  %2802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2802, align 1
  %2803 = and i32 %2800, 255
  %2804 = call i32 @llvm.ctpop.i32(i32 %2803)
  %2805 = trunc i32 %2804 to i8
  %2806 = and i8 %2805, 1
  %2807 = xor i8 %2806, 1
  %2808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2807, i8* %2808, align 1
  %2809 = icmp eq i32 %2800, 0
  %2810 = zext i1 %2809 to i8
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2810, i8* %2811, align 1
  %2812 = lshr i32 %2800, 31
  %2813 = trunc i32 %2812 to i8
  %2814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2813, i8* %2814, align 1
  %2815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2815, align 1
  %2816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2816, align 1
  store %struct.Memory* %loadMem_425f2a, %struct.Memory** %MEMORY
  %loadMem_425f2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2818 = getelementptr inbounds %struct.GPR, %struct.GPR* %2817, i32 0, i32 33
  %2819 = getelementptr inbounds %struct.Reg, %struct.Reg* %2818, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %2819 to i64*
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2821 = getelementptr inbounds %struct.GPR, %struct.GPR* %2820, i32 0, i32 11
  %2822 = getelementptr inbounds %struct.Reg, %struct.Reg* %2821, i32 0, i32 0
  %RDI.i749 = bitcast %union.anon* %2822 to i64*
  %2823 = load i64, i64* %PC.i748
  %2824 = add i64 %2823, 8
  store i64 %2824, i64* %PC.i748
  %2825 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2825, i64* %RDI.i749, align 8
  store %struct.Memory* %loadMem_425f2c, %struct.Memory** %MEMORY
  %loadMem_425f34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2827 = getelementptr inbounds %struct.GPR, %struct.GPR* %2826, i32 0, i32 33
  %2828 = getelementptr inbounds %struct.Reg, %struct.Reg* %2827, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %2828 to i64*
  %2829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2830 = getelementptr inbounds %struct.GPR, %struct.GPR* %2829, i32 0, i32 7
  %2831 = getelementptr inbounds %struct.Reg, %struct.Reg* %2830, i32 0, i32 0
  %EDX.i746 = bitcast %union.anon* %2831 to i32*
  %2832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2833 = getelementptr inbounds %struct.GPR, %struct.GPR* %2832, i32 0, i32 11
  %2834 = getelementptr inbounds %struct.Reg, %struct.Reg* %2833, i32 0, i32 0
  %RDI.i747 = bitcast %union.anon* %2834 to i64*
  %2835 = load i64, i64* %RDI.i747
  %2836 = add i64 %2835, 72428
  %2837 = load i32, i32* %EDX.i746
  %2838 = zext i32 %2837 to i64
  %2839 = load i64, i64* %PC.i745
  %2840 = add i64 %2839, 6
  store i64 %2840, i64* %PC.i745
  %2841 = inttoptr i64 %2836 to i32*
  store i32 %2837, i32* %2841
  store %struct.Memory* %loadMem_425f34, %struct.Memory** %MEMORY
  %loadMem_425f3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2843 = getelementptr inbounds %struct.GPR, %struct.GPR* %2842, i32 0, i32 33
  %2844 = getelementptr inbounds %struct.Reg, %struct.Reg* %2843, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %2844 to i64*
  %2845 = load i64, i64* %PC.i744
  %2846 = add i64 %2845, 80
  %2847 = load i64, i64* %PC.i744
  %2848 = add i64 %2847, 5
  store i64 %2848, i64* %PC.i744
  %2849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2846, i64* %2849, align 8
  store %struct.Memory* %loadMem_425f3a, %struct.Memory** %MEMORY
  br label %block_.L_425f8a

block_.L_425f3f:                                  ; preds = %block_425ef4
  %loadMem_425f3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2851 = getelementptr inbounds %struct.GPR, %struct.GPR* %2850, i32 0, i32 33
  %2852 = getelementptr inbounds %struct.Reg, %struct.Reg* %2851, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %2852 to i64*
  %2853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2854 = getelementptr inbounds %struct.GPR, %struct.GPR* %2853, i32 0, i32 1
  %2855 = getelementptr inbounds %struct.Reg, %struct.Reg* %2854, i32 0, i32 0
  %RAX.i743 = bitcast %union.anon* %2855 to i64*
  %2856 = load i64, i64* %PC.i742
  %2857 = add i64 %2856, 8
  store i64 %2857, i64* %PC.i742
  %2858 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2858, i64* %RAX.i743, align 8
  store %struct.Memory* %loadMem_425f3f, %struct.Memory** %MEMORY
  %loadMem_425f47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2860 = getelementptr inbounds %struct.GPR, %struct.GPR* %2859, i32 0, i32 33
  %2861 = getelementptr inbounds %struct.Reg, %struct.Reg* %2860, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %2861 to i64*
  %2862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2863 = getelementptr inbounds %struct.GPR, %struct.GPR* %2862, i32 0, i32 1
  %2864 = getelementptr inbounds %struct.Reg, %struct.Reg* %2863, i32 0, i32 0
  %RAX.i741 = bitcast %union.anon* %2864 to i64*
  %2865 = load i64, i64* %RAX.i741
  %2866 = add i64 %2865, 28
  %2867 = load i64, i64* %PC.i740
  %2868 = add i64 %2867, 4
  store i64 %2868, i64* %PC.i740
  %2869 = inttoptr i64 %2866 to i32*
  %2870 = load i32, i32* %2869
  %2871 = sub i32 %2870, 2
  %2872 = icmp ult i32 %2870, 2
  %2873 = zext i1 %2872 to i8
  %2874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2873, i8* %2874, align 1
  %2875 = and i32 %2871, 255
  %2876 = call i32 @llvm.ctpop.i32(i32 %2875)
  %2877 = trunc i32 %2876 to i8
  %2878 = and i8 %2877, 1
  %2879 = xor i8 %2878, 1
  %2880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2879, i8* %2880, align 1
  %2881 = xor i32 %2870, 2
  %2882 = xor i32 %2881, %2871
  %2883 = lshr i32 %2882, 4
  %2884 = trunc i32 %2883 to i8
  %2885 = and i8 %2884, 1
  %2886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2885, i8* %2886, align 1
  %2887 = icmp eq i32 %2871, 0
  %2888 = zext i1 %2887 to i8
  %2889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2888, i8* %2889, align 1
  %2890 = lshr i32 %2871, 31
  %2891 = trunc i32 %2890 to i8
  %2892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2891, i8* %2892, align 1
  %2893 = lshr i32 %2870, 31
  %2894 = xor i32 %2890, %2893
  %2895 = add i32 %2894, %2893
  %2896 = icmp eq i32 %2895, 2
  %2897 = zext i1 %2896 to i8
  %2898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2897, i8* %2898, align 1
  store %struct.Memory* %loadMem_425f47, %struct.Memory** %MEMORY
  %loadMem_425f4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2900 = getelementptr inbounds %struct.GPR, %struct.GPR* %2899, i32 0, i32 33
  %2901 = getelementptr inbounds %struct.Reg, %struct.Reg* %2900, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %2901 to i64*
  %2902 = load i64, i64* %PC.i739
  %2903 = add i64 %2902, 58
  %2904 = load i64, i64* %PC.i739
  %2905 = add i64 %2904, 6
  %2906 = load i64, i64* %PC.i739
  %2907 = add i64 %2906, 6
  store i64 %2907, i64* %PC.i739
  %2908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2909 = load i8, i8* %2908, align 1
  %2910 = icmp eq i8 %2909, 0
  %2911 = zext i1 %2910 to i8
  store i8 %2911, i8* %BRANCH_TAKEN, align 1
  %2912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2913 = select i1 %2910, i64 %2903, i64 %2905
  store i64 %2913, i64* %2912, align 8
  store %struct.Memory* %loadMem_425f4b, %struct.Memory** %MEMORY
  %loadBr_425f4b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_425f4b = icmp eq i8 %loadBr_425f4b, 1
  br i1 %cmpBr_425f4b, label %block_.L_425f85, label %block_425f51

block_425f51:                                     ; preds = %block_.L_425f3f
  %loadMem_425f51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2915 = getelementptr inbounds %struct.GPR, %struct.GPR* %2914, i32 0, i32 33
  %2916 = getelementptr inbounds %struct.Reg, %struct.Reg* %2915, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %2916 to i64*
  %2917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2918 = getelementptr inbounds %struct.GPR, %struct.GPR* %2917, i32 0, i32 1
  %2919 = getelementptr inbounds %struct.Reg, %struct.Reg* %2918, i32 0, i32 0
  %RAX.i738 = bitcast %union.anon* %2919 to i64*
  %2920 = load i64, i64* %PC.i737
  %2921 = add i64 %2920, 5
  store i64 %2921, i64* %PC.i737
  store i64 4294967295, i64* %RAX.i738, align 8
  store %struct.Memory* %loadMem_425f51, %struct.Memory** %MEMORY
  %loadMem_425f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2923 = getelementptr inbounds %struct.GPR, %struct.GPR* %2922, i32 0, i32 33
  %2924 = getelementptr inbounds %struct.Reg, %struct.Reg* %2923, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %2924 to i64*
  %2925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2926 = getelementptr inbounds %struct.GPR, %struct.GPR* %2925, i32 0, i32 5
  %2927 = getelementptr inbounds %struct.Reg, %struct.Reg* %2926, i32 0, i32 0
  %RCX.i736 = bitcast %union.anon* %2927 to i64*
  %2928 = load i64, i64* %PC.i735
  %2929 = add i64 %2928, 8
  store i64 %2929, i64* %PC.i735
  %2930 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2930, i64* %RCX.i736, align 8
  store %struct.Memory* %loadMem_425f56, %struct.Memory** %MEMORY
  %loadMem_425f5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2932 = getelementptr inbounds %struct.GPR, %struct.GPR* %2931, i32 0, i32 33
  %2933 = getelementptr inbounds %struct.Reg, %struct.Reg* %2932, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %2933 to i64*
  %2934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2935 = getelementptr inbounds %struct.GPR, %struct.GPR* %2934, i32 0, i32 5
  %2936 = getelementptr inbounds %struct.Reg, %struct.Reg* %2935, i32 0, i32 0
  %RCX.i733 = bitcast %union.anon* %2936 to i64*
  %2937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2938 = getelementptr inbounds %struct.GPR, %struct.GPR* %2937, i32 0, i32 7
  %2939 = getelementptr inbounds %struct.Reg, %struct.Reg* %2938, i32 0, i32 0
  %RDX.i734 = bitcast %union.anon* %2939 to i64*
  %2940 = load i64, i64* %RCX.i733
  %2941 = add i64 %2940, 72452
  %2942 = load i64, i64* %PC.i732
  %2943 = add i64 %2942, 6
  store i64 %2943, i64* %PC.i732
  %2944 = inttoptr i64 %2941 to i32*
  %2945 = load i32, i32* %2944
  %2946 = zext i32 %2945 to i64
  store i64 %2946, i64* %RDX.i734, align 8
  store %struct.Memory* %loadMem_425f5e, %struct.Memory** %MEMORY
  %loadMem_425f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2948 = getelementptr inbounds %struct.GPR, %struct.GPR* %2947, i32 0, i32 33
  %2949 = getelementptr inbounds %struct.Reg, %struct.Reg* %2948, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %2949 to i64*
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2951 = getelementptr inbounds %struct.GPR, %struct.GPR* %2950, i32 0, i32 9
  %2952 = getelementptr inbounds %struct.Reg, %struct.Reg* %2951, i32 0, i32 0
  %RSI.i731 = bitcast %union.anon* %2952 to i64*
  %2953 = load i64, i64* %PC.i730
  %2954 = add i64 %2953, 7
  store i64 %2954, i64* %PC.i730
  %2955 = load i32, i32* bitcast (%G_0x6d32c8_type* @G_0x6d32c8 to i32*)
  %2956 = zext i32 %2955 to i64
  store i64 %2956, i64* %RSI.i731, align 8
  store %struct.Memory* %loadMem_425f64, %struct.Memory** %MEMORY
  %loadMem_425f6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2958 = getelementptr inbounds %struct.GPR, %struct.GPR* %2957, i32 0, i32 33
  %2959 = getelementptr inbounds %struct.Reg, %struct.Reg* %2958, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %2959 to i64*
  %2960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2961 = getelementptr inbounds %struct.GPR, %struct.GPR* %2960, i32 0, i32 9
  %2962 = getelementptr inbounds %struct.Reg, %struct.Reg* %2961, i32 0, i32 0
  %RSI.i729 = bitcast %union.anon* %2962 to i64*
  %2963 = load i64, i64* %RSI.i729
  %2964 = load i64, i64* %PC.i728
  %2965 = add i64 %2964, 3
  store i64 %2965, i64* %PC.i728
  %2966 = trunc i64 %2963 to i32
  %2967 = add i32 4, %2966
  %2968 = zext i32 %2967 to i64
  store i64 %2968, i64* %RSI.i729, align 8
  %2969 = icmp ult i32 %2967, %2966
  %2970 = icmp ult i32 %2967, 4
  %2971 = or i1 %2969, %2970
  %2972 = zext i1 %2971 to i8
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2972, i8* %2973, align 1
  %2974 = and i32 %2967, 255
  %2975 = call i32 @llvm.ctpop.i32(i32 %2974)
  %2976 = trunc i32 %2975 to i8
  %2977 = and i8 %2976, 1
  %2978 = xor i8 %2977, 1
  %2979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2978, i8* %2979, align 1
  %2980 = xor i64 4, %2963
  %2981 = trunc i64 %2980 to i32
  %2982 = xor i32 %2981, %2967
  %2983 = lshr i32 %2982, 4
  %2984 = trunc i32 %2983 to i8
  %2985 = and i8 %2984, 1
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2985, i8* %2986, align 1
  %2987 = icmp eq i32 %2967, 0
  %2988 = zext i1 %2987 to i8
  %2989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2988, i8* %2989, align 1
  %2990 = lshr i32 %2967, 31
  %2991 = trunc i32 %2990 to i8
  %2992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2991, i8* %2992, align 1
  %2993 = lshr i32 %2966, 31
  %2994 = xor i32 %2990, %2993
  %2995 = add i32 %2994, %2990
  %2996 = icmp eq i32 %2995, 2
  %2997 = zext i1 %2996 to i8
  %2998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2997, i8* %2998, align 1
  store %struct.Memory* %loadMem_425f6b, %struct.Memory** %MEMORY
  %loadMem_425f6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3000 = getelementptr inbounds %struct.GPR, %struct.GPR* %2999, i32 0, i32 33
  %3001 = getelementptr inbounds %struct.Reg, %struct.Reg* %3000, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %3001 to i64*
  %3002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3003 = getelementptr inbounds %struct.GPR, %struct.GPR* %3002, i32 0, i32 9
  %3004 = getelementptr inbounds %struct.Reg, %struct.Reg* %3003, i32 0, i32 0
  %ESI.i726 = bitcast %union.anon* %3004 to i32*
  %3005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3006 = getelementptr inbounds %struct.GPR, %struct.GPR* %3005, i32 0, i32 5
  %3007 = getelementptr inbounds %struct.Reg, %struct.Reg* %3006, i32 0, i32 0
  %RCX.i727 = bitcast %union.anon* %3007 to i64*
  %3008 = load i32, i32* %ESI.i726
  %3009 = zext i32 %3008 to i64
  %3010 = load i64, i64* %PC.i725
  %3011 = add i64 %3010, 2
  store i64 %3011, i64* %PC.i725
  %3012 = and i64 %3009, 4294967295
  store i64 %3012, i64* %RCX.i727, align 8
  store %struct.Memory* %loadMem_425f6e, %struct.Memory** %MEMORY
  %loadMem_425f70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3014 = getelementptr inbounds %struct.GPR, %struct.GPR* %3013, i32 0, i32 33
  %3015 = getelementptr inbounds %struct.Reg, %struct.Reg* %3014, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %3015 to i64*
  %3016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3017 = getelementptr inbounds %struct.GPR, %struct.GPR* %3016, i32 0, i32 5
  %3018 = getelementptr inbounds %struct.Reg, %struct.Reg* %3017, i32 0, i32 0
  %3019 = bitcast %union.anon* %3018 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3019, i32 0, i32 0
  %3020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3021 = getelementptr inbounds %struct.GPR, %struct.GPR* %3020, i32 0, i32 1
  %3022 = getelementptr inbounds %struct.Reg, %struct.Reg* %3021, i32 0, i32 0
  %RAX.i724 = bitcast %union.anon* %3022 to i64*
  %3023 = load i64, i64* %RAX.i724
  %3024 = load i8, i8* %CL.i
  %3025 = zext i8 %3024 to i64
  %3026 = load i64, i64* %PC.i723
  %3027 = add i64 %3026, 2
  store i64 %3027, i64* %PC.i723
  %3028 = trunc i64 %3025 to i5
  switch i5 %3028, label %3035 [
    i5 0, label %routine_shll__cl___eax.exit
    i5 1, label %3029
  ]

; <label>:3029:                                   ; preds = %block_425f51
  %3030 = trunc i64 %3023 to i32
  %3031 = shl i32 %3030, 1
  %3032 = icmp slt i32 %3030, 0
  %3033 = icmp slt i32 %3031, 0
  %3034 = xor i1 %3032, %3033
  br label %3044

; <label>:3035:                                   ; preds = %block_425f51
  %3036 = and i64 %3025, 31
  %3037 = add i64 %3036, 4294967295
  %3038 = and i64 %3023, 4294967295
  %3039 = and i64 %3037, 4294967295
  %3040 = shl i64 %3038, %3039
  %3041 = trunc i64 %3040 to i32
  %3042 = icmp slt i32 %3041, 0
  %3043 = shl i32 %3041, 1
  br label %3044

; <label>:3044:                                   ; preds = %3035, %3029
  %3045 = phi i1 [ %3032, %3029 ], [ %3042, %3035 ]
  %3046 = phi i1 [ %3034, %3029 ], [ false, %3035 ]
  %3047 = phi i32 [ %3031, %3029 ], [ %3043, %3035 ]
  %3048 = zext i32 %3047 to i64
  store i64 %3048, i64* %RAX.i724, align 8
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3050 = zext i1 %3045 to i8
  store i8 %3050, i8* %3049, align 1
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3052 = and i32 %3047, 254
  %3053 = call i32 @llvm.ctpop.i32(i32 %3052)
  %3054 = trunc i32 %3053 to i8
  %3055 = and i8 %3054, 1
  %3056 = xor i8 %3055, 1
  store i8 %3056, i8* %3051, align 1
  %3057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3057, align 1
  %3058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3059 = icmp eq i32 %3047, 0
  %3060 = zext i1 %3059 to i8
  store i8 %3060, i8* %3058, align 1
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3062 = lshr i32 %3047, 31
  %3063 = trunc i32 %3062 to i8
  store i8 %3063, i8* %3061, align 1
  %3064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3065 = zext i1 %3046 to i8
  store i8 %3065, i8* %3064, align 1
  br label %routine_shll__cl___eax.exit

routine_shll__cl___eax.exit:                      ; preds = %block_425f51, %3044
  store %struct.Memory* %loadMem_425f70, %struct.Memory** %MEMORY
  %loadMem_425f72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3067 = getelementptr inbounds %struct.GPR, %struct.GPR* %3066, i32 0, i32 33
  %3068 = getelementptr inbounds %struct.Reg, %struct.Reg* %3067, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %3068 to i64*
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3070 = getelementptr inbounds %struct.GPR, %struct.GPR* %3069, i32 0, i32 1
  %3071 = getelementptr inbounds %struct.Reg, %struct.Reg* %3070, i32 0, i32 0
  %RAX.i722 = bitcast %union.anon* %3071 to i64*
  %3072 = load i64, i64* %RAX.i722
  %3073 = load i64, i64* %PC.i721
  %3074 = add i64 %3073, 3
  store i64 %3074, i64* %PC.i721
  %3075 = xor i64 -1, %3072
  %3076 = trunc i64 %3075 to i32
  %3077 = and i64 %3075, 4294967295
  store i64 %3077, i64* %RAX.i722, align 8
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3078, align 1
  %3079 = and i32 %3076, 255
  %3080 = call i32 @llvm.ctpop.i32(i32 %3079)
  %3081 = trunc i32 %3080 to i8
  %3082 = and i8 %3081, 1
  %3083 = xor i8 %3082, 1
  %3084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3083, i8* %3084, align 1
  %3085 = icmp eq i32 %3076, 0
  %3086 = zext i1 %3085 to i8
  %3087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3086, i8* %3087, align 1
  %3088 = lshr i32 %3076, 31
  %3089 = trunc i32 %3088 to i8
  %3090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3089, i8* %3090, align 1
  %3091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3091, align 1
  %3092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3092, align 1
  store %struct.Memory* %loadMem_425f72, %struct.Memory** %MEMORY
  %loadMem_425f75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3094 = getelementptr inbounds %struct.GPR, %struct.GPR* %3093, i32 0, i32 33
  %3095 = getelementptr inbounds %struct.Reg, %struct.Reg* %3094, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %3095 to i64*
  %3096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3097 = getelementptr inbounds %struct.GPR, %struct.GPR* %3096, i32 0, i32 1
  %3098 = getelementptr inbounds %struct.Reg, %struct.Reg* %3097, i32 0, i32 0
  %EAX.i719 = bitcast %union.anon* %3098 to i32*
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3100 = getelementptr inbounds %struct.GPR, %struct.GPR* %3099, i32 0, i32 7
  %3101 = getelementptr inbounds %struct.Reg, %struct.Reg* %3100, i32 0, i32 0
  %RDX.i720 = bitcast %union.anon* %3101 to i64*
  %3102 = load i64, i64* %RDX.i720
  %3103 = load i32, i32* %EAX.i719
  %3104 = zext i32 %3103 to i64
  %3105 = load i64, i64* %PC.i718
  %3106 = add i64 %3105, 2
  store i64 %3106, i64* %PC.i718
  %3107 = and i64 %3104, %3102
  %3108 = trunc i64 %3107 to i32
  %3109 = and i64 %3107, 4294967295
  store i64 %3109, i64* %RDX.i720, align 8
  %3110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3110, align 1
  %3111 = and i32 %3108, 255
  %3112 = call i32 @llvm.ctpop.i32(i32 %3111)
  %3113 = trunc i32 %3112 to i8
  %3114 = and i8 %3113, 1
  %3115 = xor i8 %3114, 1
  %3116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3115, i8* %3116, align 1
  %3117 = icmp eq i32 %3108, 0
  %3118 = zext i1 %3117 to i8
  %3119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3118, i8* %3119, align 1
  %3120 = lshr i32 %3108, 31
  %3121 = trunc i32 %3120 to i8
  %3122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3121, i8* %3122, align 1
  %3123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3123, align 1
  %3124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3124, align 1
  store %struct.Memory* %loadMem_425f75, %struct.Memory** %MEMORY
  %loadMem_425f77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3126 = getelementptr inbounds %struct.GPR, %struct.GPR* %3125, i32 0, i32 33
  %3127 = getelementptr inbounds %struct.Reg, %struct.Reg* %3126, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %3127 to i64*
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3129 = getelementptr inbounds %struct.GPR, %struct.GPR* %3128, i32 0, i32 11
  %3130 = getelementptr inbounds %struct.Reg, %struct.Reg* %3129, i32 0, i32 0
  %RDI.i717 = bitcast %union.anon* %3130 to i64*
  %3131 = load i64, i64* %PC.i716
  %3132 = add i64 %3131, 8
  store i64 %3132, i64* %PC.i716
  %3133 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3133, i64* %RDI.i717, align 8
  store %struct.Memory* %loadMem_425f77, %struct.Memory** %MEMORY
  %loadMem_425f7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3135 = getelementptr inbounds %struct.GPR, %struct.GPR* %3134, i32 0, i32 33
  %3136 = getelementptr inbounds %struct.Reg, %struct.Reg* %3135, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %3136 to i64*
  %3137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3138 = getelementptr inbounds %struct.GPR, %struct.GPR* %3137, i32 0, i32 7
  %3139 = getelementptr inbounds %struct.Reg, %struct.Reg* %3138, i32 0, i32 0
  %EDX.i714 = bitcast %union.anon* %3139 to i32*
  %3140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3141 = getelementptr inbounds %struct.GPR, %struct.GPR* %3140, i32 0, i32 11
  %3142 = getelementptr inbounds %struct.Reg, %struct.Reg* %3141, i32 0, i32 0
  %RDI.i715 = bitcast %union.anon* %3142 to i64*
  %3143 = load i64, i64* %RDI.i715
  %3144 = add i64 %3143, 72428
  %3145 = load i32, i32* %EDX.i714
  %3146 = zext i32 %3145 to i64
  %3147 = load i64, i64* %PC.i713
  %3148 = add i64 %3147, 6
  store i64 %3148, i64* %PC.i713
  %3149 = inttoptr i64 %3144 to i32*
  store i32 %3145, i32* %3149
  store %struct.Memory* %loadMem_425f7f, %struct.Memory** %MEMORY
  br label %block_.L_425f85

block_.L_425f85:                                  ; preds = %routine_shll__cl___eax.exit, %block_.L_425f3f
  %loadMem_425f85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3151 = getelementptr inbounds %struct.GPR, %struct.GPR* %3150, i32 0, i32 33
  %3152 = getelementptr inbounds %struct.Reg, %struct.Reg* %3151, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %3152 to i64*
  %3153 = load i64, i64* %PC.i712
  %3154 = add i64 %3153, 5
  %3155 = load i64, i64* %PC.i712
  %3156 = add i64 %3155, 5
  store i64 %3156, i64* %PC.i712
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3154, i64* %3157, align 8
  store %struct.Memory* %loadMem_425f85, %struct.Memory** %MEMORY
  br label %block_.L_425f8a

block_.L_425f8a:                                  ; preds = %block_.L_425f85, %routine_shll__cl___eax.exit758
  %loadMem_425f8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3159 = getelementptr inbounds %struct.GPR, %struct.GPR* %3158, i32 0, i32 33
  %3160 = getelementptr inbounds %struct.Reg, %struct.Reg* %3159, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %3160 to i64*
  %3161 = load i64, i64* %PC.i711
  %3162 = add i64 %3161, 5
  %3163 = load i64, i64* %PC.i711
  %3164 = add i64 %3163, 5
  store i64 %3164, i64* %PC.i711
  %3165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3162, i64* %3165, align 8
  store %struct.Memory* %loadMem_425f8a, %struct.Memory** %MEMORY
  br label %block_.L_425f8f

block_.L_425f8f:                                  ; preds = %block_.L_425f8a, %routine_shll__cl___eax.exit795
  %loadMem_425f8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3167 = getelementptr inbounds %struct.GPR, %struct.GPR* %3166, i32 0, i32 33
  %3168 = getelementptr inbounds %struct.Reg, %struct.Reg* %3167, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %3168 to i64*
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3170 = getelementptr inbounds %struct.GPR, %struct.GPR* %3169, i32 0, i32 9
  %3171 = getelementptr inbounds %struct.Reg, %struct.Reg* %3170, i32 0, i32 0
  %RSI.i710 = bitcast %union.anon* %3171 to i64*
  %3172 = load i64, i64* %PC.i709
  %3173 = add i64 %3172, 10
  store i64 %3173, i64* %PC.i709
  store i64 ptrtoint (%G__0x4bfaa7_type* @G__0x4bfaa7 to i64), i64* %RSI.i710, align 8
  store %struct.Memory* %loadMem_425f8f, %struct.Memory** %MEMORY
  %loadMem_425f99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3175 = getelementptr inbounds %struct.GPR, %struct.GPR* %3174, i32 0, i32 33
  %3176 = getelementptr inbounds %struct.Reg, %struct.Reg* %3175, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %3176 to i64*
  %3177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3178 = getelementptr inbounds %struct.GPR, %struct.GPR* %3177, i32 0, i32 1
  %3179 = getelementptr inbounds %struct.Reg, %struct.Reg* %3178, i32 0, i32 0
  %RAX.i708 = bitcast %union.anon* %3179 to i64*
  %3180 = load i64, i64* %PC.i707
  %3181 = add i64 %3180, 7
  store i64 %3181, i64* %PC.i707
  %3182 = load i32, i32* bitcast (%G_0x6d32c8_type* @G_0x6d32c8 to i32*)
  %3183 = zext i32 %3182 to i64
  store i64 %3183, i64* %RAX.i708, align 8
  store %struct.Memory* %loadMem_425f99, %struct.Memory** %MEMORY
  %loadMem_425fa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3185 = getelementptr inbounds %struct.GPR, %struct.GPR* %3184, i32 0, i32 33
  %3186 = getelementptr inbounds %struct.Reg, %struct.Reg* %3185, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %3186 to i64*
  %3187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3188 = getelementptr inbounds %struct.GPR, %struct.GPR* %3187, i32 0, i32 1
  %3189 = getelementptr inbounds %struct.Reg, %struct.Reg* %3188, i32 0, i32 0
  %RAX.i706 = bitcast %union.anon* %3189 to i64*
  %3190 = load i64, i64* %RAX.i706
  %3191 = load i64, i64* %PC.i705
  %3192 = add i64 %3191, 3
  store i64 %3192, i64* %PC.i705
  %3193 = trunc i64 %3190 to i32
  %3194 = add i32 4, %3193
  %3195 = zext i32 %3194 to i64
  store i64 %3195, i64* %RAX.i706, align 8
  %3196 = icmp ult i32 %3194, %3193
  %3197 = icmp ult i32 %3194, 4
  %3198 = or i1 %3196, %3197
  %3199 = zext i1 %3198 to i8
  %3200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3199, i8* %3200, align 1
  %3201 = and i32 %3194, 255
  %3202 = call i32 @llvm.ctpop.i32(i32 %3201)
  %3203 = trunc i32 %3202 to i8
  %3204 = and i8 %3203, 1
  %3205 = xor i8 %3204, 1
  %3206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3205, i8* %3206, align 1
  %3207 = xor i64 4, %3190
  %3208 = trunc i64 %3207 to i32
  %3209 = xor i32 %3208, %3194
  %3210 = lshr i32 %3209, 4
  %3211 = trunc i32 %3210 to i8
  %3212 = and i8 %3211, 1
  %3213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3212, i8* %3213, align 1
  %3214 = icmp eq i32 %3194, 0
  %3215 = zext i1 %3214 to i8
  %3216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3215, i8* %3216, align 1
  %3217 = lshr i32 %3194, 31
  %3218 = trunc i32 %3217 to i8
  %3219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3218, i8* %3219, align 1
  %3220 = lshr i32 %3193, 31
  %3221 = xor i32 %3217, %3220
  %3222 = add i32 %3221, %3217
  %3223 = icmp eq i32 %3222, 2
  %3224 = zext i1 %3223 to i8
  %3225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3224, i8* %3225, align 1
  store %struct.Memory* %loadMem_425fa0, %struct.Memory** %MEMORY
  %loadMem_425fa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3227 = getelementptr inbounds %struct.GPR, %struct.GPR* %3226, i32 0, i32 33
  %3228 = getelementptr inbounds %struct.Reg, %struct.Reg* %3227, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %3228 to i64*
  %3229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3230 = getelementptr inbounds %struct.GPR, %struct.GPR* %3229, i32 0, i32 5
  %3231 = getelementptr inbounds %struct.Reg, %struct.Reg* %3230, i32 0, i32 0
  %RCX.i704 = bitcast %union.anon* %3231 to i64*
  %3232 = load i64, i64* %PC.i703
  %3233 = add i64 %3232, 8
  store i64 %3233, i64* %PC.i703
  %3234 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3234, i64* %RCX.i704, align 8
  store %struct.Memory* %loadMem_425fa3, %struct.Memory** %MEMORY
  %loadMem_425fab = load %struct.Memory*, %struct.Memory** %MEMORY
  %3235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3236 = getelementptr inbounds %struct.GPR, %struct.GPR* %3235, i32 0, i32 33
  %3237 = getelementptr inbounds %struct.Reg, %struct.Reg* %3236, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %3237 to i64*
  %3238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3239 = getelementptr inbounds %struct.GPR, %struct.GPR* %3238, i32 0, i32 5
  %3240 = getelementptr inbounds %struct.Reg, %struct.Reg* %3239, i32 0, i32 0
  %RCX.i701 = bitcast %union.anon* %3240 to i64*
  %3241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3242 = getelementptr inbounds %struct.GPR, %struct.GPR* %3241, i32 0, i32 7
  %3243 = getelementptr inbounds %struct.Reg, %struct.Reg* %3242, i32 0, i32 0
  %RDX.i702 = bitcast %union.anon* %3243 to i64*
  %3244 = load i64, i64* %RCX.i701
  %3245 = add i64 %3244, 72428
  %3246 = load i64, i64* %PC.i700
  %3247 = add i64 %3246, 6
  store i64 %3247, i64* %PC.i700
  %3248 = inttoptr i64 %3245 to i32*
  %3249 = load i32, i32* %3248
  %3250 = zext i32 %3249 to i64
  store i64 %3250, i64* %RDX.i702, align 8
  store %struct.Memory* %loadMem_425fab, %struct.Memory** %MEMORY
  %loadMem_425fb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3252 = getelementptr inbounds %struct.GPR, %struct.GPR* %3251, i32 0, i32 33
  %3253 = getelementptr inbounds %struct.Reg, %struct.Reg* %3252, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %3253 to i64*
  %3254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3255 = getelementptr inbounds %struct.GPR, %struct.GPR* %3254, i32 0, i32 5
  %3256 = getelementptr inbounds %struct.Reg, %struct.Reg* %3255, i32 0, i32 0
  %RCX.i698 = bitcast %union.anon* %3256 to i64*
  %3257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3258 = getelementptr inbounds %struct.GPR, %struct.GPR* %3257, i32 0, i32 15
  %3259 = getelementptr inbounds %struct.Reg, %struct.Reg* %3258, i32 0, i32 0
  %RBP.i699 = bitcast %union.anon* %3259 to i64*
  %3260 = load i64, i64* %RBP.i699
  %3261 = sub i64 %3260, 16
  %3262 = load i64, i64* %PC.i697
  %3263 = add i64 %3262, 4
  store i64 %3263, i64* %PC.i697
  %3264 = inttoptr i64 %3261 to i64*
  %3265 = load i64, i64* %3264
  store i64 %3265, i64* %RCX.i698, align 8
  store %struct.Memory* %loadMem_425fb1, %struct.Memory** %MEMORY
  %loadMem_425fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3267 = getelementptr inbounds %struct.GPR, %struct.GPR* %3266, i32 0, i32 33
  %3268 = getelementptr inbounds %struct.Reg, %struct.Reg* %3267, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %3268 to i64*
  %3269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3270 = getelementptr inbounds %struct.GPR, %struct.GPR* %3269, i32 0, i32 1
  %3271 = getelementptr inbounds %struct.Reg, %struct.Reg* %3270, i32 0, i32 0
  %EAX.i695 = bitcast %union.anon* %3271 to i32*
  %3272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3273 = getelementptr inbounds %struct.GPR, %struct.GPR* %3272, i32 0, i32 11
  %3274 = getelementptr inbounds %struct.Reg, %struct.Reg* %3273, i32 0, i32 0
  %RDI.i696 = bitcast %union.anon* %3274 to i64*
  %3275 = load i32, i32* %EAX.i695
  %3276 = zext i32 %3275 to i64
  %3277 = load i64, i64* %PC.i694
  %3278 = add i64 %3277, 2
  store i64 %3278, i64* %PC.i694
  %3279 = and i64 %3276, 4294967295
  store i64 %3279, i64* %RDI.i696, align 8
  store %struct.Memory* %loadMem_425fb5, %struct.Memory** %MEMORY
  %loadMem1_425fb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3281 = getelementptr inbounds %struct.GPR, %struct.GPR* %3280, i32 0, i32 33
  %3282 = getelementptr inbounds %struct.Reg, %struct.Reg* %3281, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %3282 to i64*
  %3283 = load i64, i64* %PC.i693
  %3284 = add i64 %3283, 551945
  %3285 = load i64, i64* %PC.i693
  %3286 = add i64 %3285, 5
  %3287 = load i64, i64* %PC.i693
  %3288 = add i64 %3287, 5
  store i64 %3288, i64* %PC.i693
  %3289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3290 = load i64, i64* %3289, align 8
  %3291 = add i64 %3290, -8
  %3292 = inttoptr i64 %3291 to i64*
  store i64 %3286, i64* %3292
  store i64 %3291, i64* %3289, align 8
  %3293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3284, i64* %3293, align 8
  store %struct.Memory* %loadMem1_425fb7, %struct.Memory** %MEMORY
  %loadMem2_425fb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_425fb7 = load i64, i64* %3
  %call2_425fb7 = call %struct.Memory* @sub_4acbc0.u_v(%struct.State* %0, i64 %loadPC_425fb7, %struct.Memory* %loadMem2_425fb7)
  store %struct.Memory* %call2_425fb7, %struct.Memory** %MEMORY
  %loadMem_425fbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3295 = getelementptr inbounds %struct.GPR, %struct.GPR* %3294, i32 0, i32 33
  %3296 = getelementptr inbounds %struct.Reg, %struct.Reg* %3295, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %3296 to i64*
  %3297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3298 = getelementptr inbounds %struct.GPR, %struct.GPR* %3297, i32 0, i32 1
  %3299 = getelementptr inbounds %struct.Reg, %struct.Reg* %3298, i32 0, i32 0
  %RAX.i691 = bitcast %union.anon* %3299 to i64*
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3301 = getelementptr inbounds %struct.GPR, %struct.GPR* %3300, i32 0, i32 15
  %3302 = getelementptr inbounds %struct.Reg, %struct.Reg* %3301, i32 0, i32 0
  %RBP.i692 = bitcast %union.anon* %3302 to i64*
  %3303 = load i64, i64* %RAX.i691
  %3304 = load i64, i64* %RBP.i692
  %3305 = sub i64 %3304, 28
  %3306 = load i64, i64* %PC.i690
  %3307 = add i64 %3306, 3
  store i64 %3307, i64* %PC.i690
  %3308 = trunc i64 %3303 to i32
  %3309 = inttoptr i64 %3305 to i32*
  %3310 = load i32, i32* %3309
  %3311 = add i32 %3310, %3308
  %3312 = zext i32 %3311 to i64
  store i64 %3312, i64* %RAX.i691, align 8
  %3313 = icmp ult i32 %3311, %3308
  %3314 = icmp ult i32 %3311, %3310
  %3315 = or i1 %3313, %3314
  %3316 = zext i1 %3315 to i8
  %3317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3316, i8* %3317, align 1
  %3318 = and i32 %3311, 255
  %3319 = call i32 @llvm.ctpop.i32(i32 %3318)
  %3320 = trunc i32 %3319 to i8
  %3321 = and i8 %3320, 1
  %3322 = xor i8 %3321, 1
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3322, i8* %3323, align 1
  %3324 = xor i32 %3310, %3308
  %3325 = xor i32 %3324, %3311
  %3326 = lshr i32 %3325, 4
  %3327 = trunc i32 %3326 to i8
  %3328 = and i8 %3327, 1
  %3329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3328, i8* %3329, align 1
  %3330 = icmp eq i32 %3311, 0
  %3331 = zext i1 %3330 to i8
  %3332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3331, i8* %3332, align 1
  %3333 = lshr i32 %3311, 31
  %3334 = trunc i32 %3333 to i8
  %3335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3334, i8* %3335, align 1
  %3336 = lshr i32 %3308, 31
  %3337 = lshr i32 %3310, 31
  %3338 = xor i32 %3333, %3336
  %3339 = xor i32 %3333, %3337
  %3340 = add i32 %3338, %3339
  %3341 = icmp eq i32 %3340, 2
  %3342 = zext i1 %3341 to i8
  %3343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3342, i8* %3343, align 1
  store %struct.Memory* %loadMem_425fbc, %struct.Memory** %MEMORY
  %loadMem_425fbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3345 = getelementptr inbounds %struct.GPR, %struct.GPR* %3344, i32 0, i32 33
  %3346 = getelementptr inbounds %struct.Reg, %struct.Reg* %3345, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %3346 to i64*
  %3347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3348 = getelementptr inbounds %struct.GPR, %struct.GPR* %3347, i32 0, i32 1
  %3349 = getelementptr inbounds %struct.Reg, %struct.Reg* %3348, i32 0, i32 0
  %EAX.i688 = bitcast %union.anon* %3349 to i32*
  %3350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3351 = getelementptr inbounds %struct.GPR, %struct.GPR* %3350, i32 0, i32 15
  %3352 = getelementptr inbounds %struct.Reg, %struct.Reg* %3351, i32 0, i32 0
  %RBP.i689 = bitcast %union.anon* %3352 to i64*
  %3353 = load i64, i64* %RBP.i689
  %3354 = sub i64 %3353, 28
  %3355 = load i32, i32* %EAX.i688
  %3356 = zext i32 %3355 to i64
  %3357 = load i64, i64* %PC.i687
  %3358 = add i64 %3357, 3
  store i64 %3358, i64* %PC.i687
  %3359 = inttoptr i64 %3354 to i32*
  store i32 %3355, i32* %3359
  store %struct.Memory* %loadMem_425fbf, %struct.Memory** %MEMORY
  %loadMem_425fc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3361 = getelementptr inbounds %struct.GPR, %struct.GPR* %3360, i32 0, i32 33
  %3362 = getelementptr inbounds %struct.Reg, %struct.Reg* %3361, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %3362 to i64*
  %3363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3364 = getelementptr inbounds %struct.GPR, %struct.GPR* %3363, i32 0, i32 5
  %3365 = getelementptr inbounds %struct.Reg, %struct.Reg* %3364, i32 0, i32 0
  %RCX.i686 = bitcast %union.anon* %3365 to i64*
  %3366 = load i64, i64* %PC.i685
  %3367 = add i64 %3366, 8
  store i64 %3367, i64* %PC.i685
  %3368 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3368, i64* %RCX.i686, align 8
  store %struct.Memory* %loadMem_425fc2, %struct.Memory** %MEMORY
  %loadMem_425fca = load %struct.Memory*, %struct.Memory** %MEMORY
  %3369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3370 = getelementptr inbounds %struct.GPR, %struct.GPR* %3369, i32 0, i32 33
  %3371 = getelementptr inbounds %struct.Reg, %struct.Reg* %3370, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %3371 to i64*
  %3372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3373 = getelementptr inbounds %struct.GPR, %struct.GPR* %3372, i32 0, i32 5
  %3374 = getelementptr inbounds %struct.Reg, %struct.Reg* %3373, i32 0, i32 0
  %RCX.i684 = bitcast %union.anon* %3374 to i64*
  %3375 = load i64, i64* %RCX.i684
  %3376 = add i64 %3375, 72492
  %3377 = load i64, i64* %PC.i683
  %3378 = add i64 %3377, 7
  store i64 %3378, i64* %PC.i683
  %3379 = inttoptr i64 %3376 to i32*
  %3380 = load i32, i32* %3379
  %3381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3381, align 1
  %3382 = and i32 %3380, 255
  %3383 = call i32 @llvm.ctpop.i32(i32 %3382)
  %3384 = trunc i32 %3383 to i8
  %3385 = and i8 %3384, 1
  %3386 = xor i8 %3385, 1
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3386, i8* %3387, align 1
  %3388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3388, align 1
  %3389 = icmp eq i32 %3380, 0
  %3390 = zext i1 %3389 to i8
  %3391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3390, i8* %3391, align 1
  %3392 = lshr i32 %3380, 31
  %3393 = trunc i32 %3392 to i8
  %3394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3393, i8* %3394, align 1
  %3395 = lshr i32 %3380, 31
  %3396 = xor i32 %3392, %3395
  %3397 = add i32 %3396, %3395
  %3398 = icmp eq i32 %3397, 2
  %3399 = zext i1 %3398 to i8
  %3400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3399, i8* %3400, align 1
  store %struct.Memory* %loadMem_425fca, %struct.Memory** %MEMORY
  %loadMem_425fd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3402 = getelementptr inbounds %struct.GPR, %struct.GPR* %3401, i32 0, i32 33
  %3403 = getelementptr inbounds %struct.Reg, %struct.Reg* %3402, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %3403 to i64*
  %3404 = load i64, i64* %PC.i682
  %3405 = add i64 %3404, 55
  %3406 = load i64, i64* %PC.i682
  %3407 = add i64 %3406, 6
  %3408 = load i64, i64* %PC.i682
  %3409 = add i64 %3408, 6
  store i64 %3409, i64* %PC.i682
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3411 = load i8, i8* %3410, align 1
  store i8 %3411, i8* %BRANCH_TAKEN, align 1
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3413 = icmp ne i8 %3411, 0
  %3414 = select i1 %3413, i64 %3405, i64 %3407
  store i64 %3414, i64* %3412, align 8
  store %struct.Memory* %loadMem_425fd1, %struct.Memory** %MEMORY
  %loadBr_425fd1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_425fd1 = icmp eq i8 %loadBr_425fd1, 1
  br i1 %cmpBr_425fd1, label %block_.L_426008, label %block_425fd7

block_425fd7:                                     ; preds = %block_.L_425f8f
  %loadMem_425fd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3416 = getelementptr inbounds %struct.GPR, %struct.GPR* %3415, i32 0, i32 33
  %3417 = getelementptr inbounds %struct.Reg, %struct.Reg* %3416, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %3417 to i64*
  %3418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3419 = getelementptr inbounds %struct.GPR, %struct.GPR* %3418, i32 0, i32 15
  %3420 = getelementptr inbounds %struct.Reg, %struct.Reg* %3419, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %3420 to i64*
  %3421 = load i64, i64* %RBP.i681
  %3422 = sub i64 %3421, 32
  %3423 = load i64, i64* %PC.i680
  %3424 = add i64 %3423, 4
  store i64 %3424, i64* %PC.i680
  %3425 = inttoptr i64 %3422 to i32*
  %3426 = load i32, i32* %3425
  %3427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3427, align 1
  %3428 = and i32 %3426, 255
  %3429 = call i32 @llvm.ctpop.i32(i32 %3428)
  %3430 = trunc i32 %3429 to i8
  %3431 = and i8 %3430, 1
  %3432 = xor i8 %3431, 1
  %3433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3432, i8* %3433, align 1
  %3434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3434, align 1
  %3435 = icmp eq i32 %3426, 0
  %3436 = zext i1 %3435 to i8
  %3437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3436, i8* %3437, align 1
  %3438 = lshr i32 %3426, 31
  %3439 = trunc i32 %3438 to i8
  %3440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3439, i8* %3440, align 1
  %3441 = lshr i32 %3426, 31
  %3442 = xor i32 %3438, %3441
  %3443 = add i32 %3442, %3441
  %3444 = icmp eq i32 %3443, 2
  %3445 = zext i1 %3444 to i8
  %3446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3445, i8* %3446, align 1
  store %struct.Memory* %loadMem_425fd7, %struct.Memory** %MEMORY
  %loadMem_425fdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3448 = getelementptr inbounds %struct.GPR, %struct.GPR* %3447, i32 0, i32 33
  %3449 = getelementptr inbounds %struct.Reg, %struct.Reg* %3448, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %3449 to i64*
  %3450 = load i64, i64* %PC.i679
  %3451 = add i64 %3450, 45
  %3452 = load i64, i64* %PC.i679
  %3453 = add i64 %3452, 6
  %3454 = load i64, i64* %PC.i679
  %3455 = add i64 %3454, 6
  store i64 %3455, i64* %PC.i679
  %3456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3457 = load i8, i8* %3456, align 1
  %3458 = icmp eq i8 %3457, 0
  %3459 = zext i1 %3458 to i8
  store i8 %3459, i8* %BRANCH_TAKEN, align 1
  %3460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3461 = select i1 %3458, i64 %3451, i64 %3453
  store i64 %3461, i64* %3460, align 8
  store %struct.Memory* %loadMem_425fdb, %struct.Memory** %MEMORY
  %loadBr_425fdb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_425fdb = icmp eq i8 %loadBr_425fdb, 1
  br i1 %cmpBr_425fdb, label %block_.L_426008, label %block_425fe1

block_425fe1:                                     ; preds = %block_425fd7
  %loadMem_425fe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3463 = getelementptr inbounds %struct.GPR, %struct.GPR* %3462, i32 0, i32 33
  %3464 = getelementptr inbounds %struct.Reg, %struct.Reg* %3463, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %3464 to i64*
  %3465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3466 = getelementptr inbounds %struct.GPR, %struct.GPR* %3465, i32 0, i32 11
  %3467 = getelementptr inbounds %struct.Reg, %struct.Reg* %3466, i32 0, i32 0
  %RDI.i678 = bitcast %union.anon* %3467 to i64*
  %3468 = load i64, i64* %PC.i677
  %3469 = add i64 %3468, 10
  store i64 %3469, i64* %PC.i677
  store i64 ptrtoint (%G__0x4bfabd_type* @G__0x4bfabd to i64), i64* %RDI.i678, align 8
  store %struct.Memory* %loadMem_425fe1, %struct.Memory** %MEMORY
  %loadMem_425feb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3471 = getelementptr inbounds %struct.GPR, %struct.GPR* %3470, i32 0, i32 33
  %3472 = getelementptr inbounds %struct.Reg, %struct.Reg* %3471, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %3472 to i64*
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3474 = getelementptr inbounds %struct.GPR, %struct.GPR* %3473, i32 0, i32 1
  %3475 = getelementptr inbounds %struct.Reg, %struct.Reg* %3474, i32 0, i32 0
  %RAX.i676 = bitcast %union.anon* %3475 to i64*
  %3476 = load i64, i64* %PC.i675
  %3477 = add i64 %3476, 8
  store i64 %3477, i64* %PC.i675
  %3478 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3478, i64* %RAX.i676, align 8
  store %struct.Memory* %loadMem_425feb, %struct.Memory** %MEMORY
  %loadMem_425ff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3480 = getelementptr inbounds %struct.GPR, %struct.GPR* %3479, i32 0, i32 33
  %3481 = getelementptr inbounds %struct.Reg, %struct.Reg* %3480, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %3481 to i64*
  %3482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3483 = getelementptr inbounds %struct.GPR, %struct.GPR* %3482, i32 0, i32 1
  %3484 = getelementptr inbounds %struct.Reg, %struct.Reg* %3483, i32 0, i32 0
  %RAX.i673 = bitcast %union.anon* %3484 to i64*
  %3485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3486 = getelementptr inbounds %struct.GPR, %struct.GPR* %3485, i32 0, i32 9
  %3487 = getelementptr inbounds %struct.Reg, %struct.Reg* %3486, i32 0, i32 0
  %RSI.i674 = bitcast %union.anon* %3487 to i64*
  %3488 = load i64, i64* %RAX.i673
  %3489 = add i64 %3488, 72432
  %3490 = load i64, i64* %PC.i672
  %3491 = add i64 %3490, 6
  store i64 %3491, i64* %PC.i672
  %3492 = inttoptr i64 %3489 to i32*
  %3493 = load i32, i32* %3492
  %3494 = zext i32 %3493 to i64
  store i64 %3494, i64* %RSI.i674, align 8
  store %struct.Memory* %loadMem_425ff3, %struct.Memory** %MEMORY
  %loadMem_425ff9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3496 = getelementptr inbounds %struct.GPR, %struct.GPR* %3495, i32 0, i32 33
  %3497 = getelementptr inbounds %struct.Reg, %struct.Reg* %3496, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %3497 to i64*
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3499 = getelementptr inbounds %struct.GPR, %struct.GPR* %3498, i32 0, i32 7
  %3500 = getelementptr inbounds %struct.Reg, %struct.Reg* %3499, i32 0, i32 0
  %RDX.i670 = bitcast %union.anon* %3500 to i64*
  %3501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3502 = getelementptr inbounds %struct.GPR, %struct.GPR* %3501, i32 0, i32 15
  %3503 = getelementptr inbounds %struct.Reg, %struct.Reg* %3502, i32 0, i32 0
  %RBP.i671 = bitcast %union.anon* %3503 to i64*
  %3504 = load i64, i64* %RBP.i671
  %3505 = sub i64 %3504, 16
  %3506 = load i64, i64* %PC.i669
  %3507 = add i64 %3506, 4
  store i64 %3507, i64* %PC.i669
  %3508 = inttoptr i64 %3505 to i64*
  %3509 = load i64, i64* %3508
  store i64 %3509, i64* %RDX.i670, align 8
  store %struct.Memory* %loadMem_425ff9, %struct.Memory** %MEMORY
  %loadMem1_425ffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3511 = getelementptr inbounds %struct.GPR, %struct.GPR* %3510, i32 0, i32 33
  %3512 = getelementptr inbounds %struct.Reg, %struct.Reg* %3511, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %3512 to i64*
  %3513 = load i64, i64* %PC.i668
  %3514 = add i64 %3513, 551363
  %3515 = load i64, i64* %PC.i668
  %3516 = add i64 %3515, 5
  %3517 = load i64, i64* %PC.i668
  %3518 = add i64 %3517, 5
  store i64 %3518, i64* %PC.i668
  %3519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3520 = load i64, i64* %3519, align 8
  %3521 = add i64 %3520, -8
  %3522 = inttoptr i64 %3521 to i64*
  store i64 %3516, i64* %3522
  store i64 %3521, i64* %3519, align 8
  %3523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3514, i64* %3523, align 8
  store %struct.Memory* %loadMem1_425ffd, %struct.Memory** %MEMORY
  %loadMem2_425ffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_425ffd = load i64, i64* %3
  %call2_425ffd = call %struct.Memory* @sub_4ac9c0.se_v(%struct.State* %0, i64 %loadPC_425ffd, %struct.Memory* %loadMem2_425ffd)
  store %struct.Memory* %call2_425ffd, %struct.Memory** %MEMORY
  %loadMem_426002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3525 = getelementptr inbounds %struct.GPR, %struct.GPR* %3524, i32 0, i32 33
  %3526 = getelementptr inbounds %struct.Reg, %struct.Reg* %3525, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %3526 to i64*
  %3527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3528 = getelementptr inbounds %struct.GPR, %struct.GPR* %3527, i32 0, i32 1
  %3529 = getelementptr inbounds %struct.Reg, %struct.Reg* %3528, i32 0, i32 0
  %RAX.i666 = bitcast %union.anon* %3529 to i64*
  %3530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3531 = getelementptr inbounds %struct.GPR, %struct.GPR* %3530, i32 0, i32 15
  %3532 = getelementptr inbounds %struct.Reg, %struct.Reg* %3531, i32 0, i32 0
  %RBP.i667 = bitcast %union.anon* %3532 to i64*
  %3533 = load i64, i64* %RAX.i666
  %3534 = load i64, i64* %RBP.i667
  %3535 = sub i64 %3534, 28
  %3536 = load i64, i64* %PC.i665
  %3537 = add i64 %3536, 3
  store i64 %3537, i64* %PC.i665
  %3538 = trunc i64 %3533 to i32
  %3539 = inttoptr i64 %3535 to i32*
  %3540 = load i32, i32* %3539
  %3541 = add i32 %3540, %3538
  %3542 = zext i32 %3541 to i64
  store i64 %3542, i64* %RAX.i666, align 8
  %3543 = icmp ult i32 %3541, %3538
  %3544 = icmp ult i32 %3541, %3540
  %3545 = or i1 %3543, %3544
  %3546 = zext i1 %3545 to i8
  %3547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3546, i8* %3547, align 1
  %3548 = and i32 %3541, 255
  %3549 = call i32 @llvm.ctpop.i32(i32 %3548)
  %3550 = trunc i32 %3549 to i8
  %3551 = and i8 %3550, 1
  %3552 = xor i8 %3551, 1
  %3553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3552, i8* %3553, align 1
  %3554 = xor i32 %3540, %3538
  %3555 = xor i32 %3554, %3541
  %3556 = lshr i32 %3555, 4
  %3557 = trunc i32 %3556 to i8
  %3558 = and i8 %3557, 1
  %3559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3558, i8* %3559, align 1
  %3560 = icmp eq i32 %3541, 0
  %3561 = zext i1 %3560 to i8
  %3562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3561, i8* %3562, align 1
  %3563 = lshr i32 %3541, 31
  %3564 = trunc i32 %3563 to i8
  %3565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3564, i8* %3565, align 1
  %3566 = lshr i32 %3538, 31
  %3567 = lshr i32 %3540, 31
  %3568 = xor i32 %3563, %3566
  %3569 = xor i32 %3563, %3567
  %3570 = add i32 %3568, %3569
  %3571 = icmp eq i32 %3570, 2
  %3572 = zext i1 %3571 to i8
  %3573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3572, i8* %3573, align 1
  store %struct.Memory* %loadMem_426002, %struct.Memory** %MEMORY
  %loadMem_426005 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3575 = getelementptr inbounds %struct.GPR, %struct.GPR* %3574, i32 0, i32 33
  %3576 = getelementptr inbounds %struct.Reg, %struct.Reg* %3575, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %3576 to i64*
  %3577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3578 = getelementptr inbounds %struct.GPR, %struct.GPR* %3577, i32 0, i32 1
  %3579 = getelementptr inbounds %struct.Reg, %struct.Reg* %3578, i32 0, i32 0
  %EAX.i663 = bitcast %union.anon* %3579 to i32*
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3581 = getelementptr inbounds %struct.GPR, %struct.GPR* %3580, i32 0, i32 15
  %3582 = getelementptr inbounds %struct.Reg, %struct.Reg* %3581, i32 0, i32 0
  %RBP.i664 = bitcast %union.anon* %3582 to i64*
  %3583 = load i64, i64* %RBP.i664
  %3584 = sub i64 %3583, 28
  %3585 = load i32, i32* %EAX.i663
  %3586 = zext i32 %3585 to i64
  %3587 = load i64, i64* %PC.i662
  %3588 = add i64 %3587, 3
  store i64 %3588, i64* %PC.i662
  %3589 = inttoptr i64 %3584 to i32*
  store i32 %3585, i32* %3589
  store %struct.Memory* %loadMem_426005, %struct.Memory** %MEMORY
  br label %block_.L_426008

block_.L_426008:                                  ; preds = %block_425fe1, %block_425fd7, %block_.L_425f8f
  %loadMem_426008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3591 = getelementptr inbounds %struct.GPR, %struct.GPR* %3590, i32 0, i32 33
  %3592 = getelementptr inbounds %struct.Reg, %struct.Reg* %3591, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %3592 to i64*
  %3593 = load i64, i64* %PC.i661
  %3594 = add i64 %3593, 5
  %3595 = load i64, i64* %PC.i661
  %3596 = add i64 %3595, 5
  store i64 %3596, i64* %PC.i661
  %3597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3594, i64* %3597, align 8
  store %struct.Memory* %loadMem_426008, %struct.Memory** %MEMORY
  br label %block_.L_42600d

block_.L_42600d:                                  ; preds = %block_.L_426008, %block_.L_425e87
  %loadMem_42600d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3599 = getelementptr inbounds %struct.GPR, %struct.GPR* %3598, i32 0, i32 33
  %3600 = getelementptr inbounds %struct.Reg, %struct.Reg* %3599, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %3600 to i64*
  %3601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3602 = getelementptr inbounds %struct.GPR, %struct.GPR* %3601, i32 0, i32 1
  %3603 = getelementptr inbounds %struct.Reg, %struct.Reg* %3602, i32 0, i32 0
  %RAX.i660 = bitcast %union.anon* %3603 to i64*
  %3604 = load i64, i64* %PC.i659
  %3605 = add i64 %3604, 8
  store i64 %3605, i64* %PC.i659
  %3606 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3606, i64* %RAX.i660, align 8
  store %struct.Memory* %loadMem_42600d, %struct.Memory** %MEMORY
  %loadMem_426015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3608 = getelementptr inbounds %struct.GPR, %struct.GPR* %3607, i32 0, i32 33
  %3609 = getelementptr inbounds %struct.Reg, %struct.Reg* %3608, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %3609 to i64*
  %3610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3611 = getelementptr inbounds %struct.GPR, %struct.GPR* %3610, i32 0, i32 1
  %3612 = getelementptr inbounds %struct.Reg, %struct.Reg* %3611, i32 0, i32 0
  %RAX.i658 = bitcast %union.anon* %3612 to i64*
  %3613 = load i64, i64* %RAX.i658
  %3614 = add i64 %3613, 72404
  %3615 = load i64, i64* %PC.i657
  %3616 = add i64 %3615, 7
  store i64 %3616, i64* %PC.i657
  %3617 = inttoptr i64 %3614 to i32*
  %3618 = load i32, i32* %3617
  %3619 = sub i32 %3618, 1
  %3620 = icmp ult i32 %3618, 1
  %3621 = zext i1 %3620 to i8
  %3622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3621, i8* %3622, align 1
  %3623 = and i32 %3619, 255
  %3624 = call i32 @llvm.ctpop.i32(i32 %3623)
  %3625 = trunc i32 %3624 to i8
  %3626 = and i8 %3625, 1
  %3627 = xor i8 %3626, 1
  %3628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3627, i8* %3628, align 1
  %3629 = xor i32 %3618, 1
  %3630 = xor i32 %3629, %3619
  %3631 = lshr i32 %3630, 4
  %3632 = trunc i32 %3631 to i8
  %3633 = and i8 %3632, 1
  %3634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3633, i8* %3634, align 1
  %3635 = icmp eq i32 %3619, 0
  %3636 = zext i1 %3635 to i8
  %3637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3636, i8* %3637, align 1
  %3638 = lshr i32 %3619, 31
  %3639 = trunc i32 %3638 to i8
  %3640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3639, i8* %3640, align 1
  %3641 = lshr i32 %3618, 31
  %3642 = xor i32 %3638, %3641
  %3643 = add i32 %3642, %3641
  %3644 = icmp eq i32 %3643, 2
  %3645 = zext i1 %3644 to i8
  %3646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3645, i8* %3646, align 1
  store %struct.Memory* %loadMem_426015, %struct.Memory** %MEMORY
  %loadMem_42601c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3648 = getelementptr inbounds %struct.GPR, %struct.GPR* %3647, i32 0, i32 33
  %3649 = getelementptr inbounds %struct.Reg, %struct.Reg* %3648, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %3649 to i64*
  %3650 = load i64, i64* %PC.i656
  %3651 = add i64 %3650, 141
  %3652 = load i64, i64* %PC.i656
  %3653 = add i64 %3652, 6
  %3654 = load i64, i64* %PC.i656
  %3655 = add i64 %3654, 6
  store i64 %3655, i64* %PC.i656
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3657 = load i8, i8* %3656, align 1
  %3658 = icmp eq i8 %3657, 0
  %3659 = zext i1 %3658 to i8
  store i8 %3659, i8* %BRANCH_TAKEN, align 1
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3661 = select i1 %3658, i64 %3651, i64 %3653
  store i64 %3661, i64* %3660, align 8
  store %struct.Memory* %loadMem_42601c, %struct.Memory** %MEMORY
  %loadBr_42601c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42601c = icmp eq i8 %loadBr_42601c, 1
  br i1 %cmpBr_42601c, label %block_.L_4260a9, label %block_426022

block_426022:                                     ; preds = %block_.L_42600d
  %loadMem_426022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3663 = getelementptr inbounds %struct.GPR, %struct.GPR* %3662, i32 0, i32 33
  %3664 = getelementptr inbounds %struct.Reg, %struct.Reg* %3663, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %3664 to i64*
  %3665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3666 = getelementptr inbounds %struct.GPR, %struct.GPR* %3665, i32 0, i32 1
  %3667 = getelementptr inbounds %struct.Reg, %struct.Reg* %3666, i32 0, i32 0
  %RAX.i655 = bitcast %union.anon* %3667 to i64*
  %3668 = load i64, i64* %PC.i654
  %3669 = add i64 %3668, 8
  store i64 %3669, i64* %PC.i654
  %3670 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3670, i64* %RAX.i655, align 8
  store %struct.Memory* %loadMem_426022, %struct.Memory** %MEMORY
  %loadMem_42602a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3672 = getelementptr inbounds %struct.GPR, %struct.GPR* %3671, i32 0, i32 33
  %3673 = getelementptr inbounds %struct.Reg, %struct.Reg* %3672, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %3673 to i64*
  %3674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3675 = getelementptr inbounds %struct.GPR, %struct.GPR* %3674, i32 0, i32 1
  %3676 = getelementptr inbounds %struct.Reg, %struct.Reg* %3675, i32 0, i32 0
  %RAX.i653 = bitcast %union.anon* %3676 to i64*
  %3677 = load i64, i64* %RAX.i653
  %3678 = add i64 %3677, 72408
  %3679 = load i64, i64* %PC.i652
  %3680 = add i64 %3679, 7
  store i64 %3680, i64* %PC.i652
  %3681 = inttoptr i64 %3678 to i32*
  %3682 = load i32, i32* %3681
  %3683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3683, align 1
  %3684 = and i32 %3682, 255
  %3685 = call i32 @llvm.ctpop.i32(i32 %3684)
  %3686 = trunc i32 %3685 to i8
  %3687 = and i8 %3686, 1
  %3688 = xor i8 %3687, 1
  %3689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3688, i8* %3689, align 1
  %3690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3690, align 1
  %3691 = icmp eq i32 %3682, 0
  %3692 = zext i1 %3691 to i8
  %3693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3692, i8* %3693, align 1
  %3694 = lshr i32 %3682, 31
  %3695 = trunc i32 %3694 to i8
  %3696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3695, i8* %3696, align 1
  %3697 = lshr i32 %3682, 31
  %3698 = xor i32 %3694, %3697
  %3699 = add i32 %3698, %3697
  %3700 = icmp eq i32 %3699, 2
  %3701 = zext i1 %3700 to i8
  %3702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3701, i8* %3702, align 1
  store %struct.Memory* %loadMem_42602a, %struct.Memory** %MEMORY
  %loadMem_426031 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3704 = getelementptr inbounds %struct.GPR, %struct.GPR* %3703, i32 0, i32 33
  %3705 = getelementptr inbounds %struct.Reg, %struct.Reg* %3704, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %3705 to i64*
  %3706 = load i64, i64* %PC.i651
  %3707 = add i64 %3706, 120
  %3708 = load i64, i64* %PC.i651
  %3709 = add i64 %3708, 6
  %3710 = load i64, i64* %PC.i651
  %3711 = add i64 %3710, 6
  store i64 %3711, i64* %PC.i651
  %3712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3713 = load i8, i8* %3712, align 1
  %3714 = icmp eq i8 %3713, 0
  %3715 = zext i1 %3714 to i8
  store i8 %3715, i8* %BRANCH_TAKEN, align 1
  %3716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3717 = select i1 %3714, i64 %3707, i64 %3709
  store i64 %3717, i64* %3716, align 8
  store %struct.Memory* %loadMem_426031, %struct.Memory** %MEMORY
  %loadBr_426031 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_426031 = icmp eq i8 %loadBr_426031, 1
  br i1 %cmpBr_426031, label %block_.L_4260a9, label %block_426037

block_426037:                                     ; preds = %block_426022
  %loadMem_426037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3719 = getelementptr inbounds %struct.GPR, %struct.GPR* %3718, i32 0, i32 33
  %3720 = getelementptr inbounds %struct.Reg, %struct.Reg* %3719, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %3720 to i64*
  %3721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3722 = getelementptr inbounds %struct.GPR, %struct.GPR* %3721, i32 0, i32 11
  %3723 = getelementptr inbounds %struct.Reg, %struct.Reg* %3722, i32 0, i32 0
  %RDI.i650 = bitcast %union.anon* %3723 to i64*
  %3724 = load i64, i64* %PC.i649
  %3725 = add i64 %3724, 10
  store i64 %3725, i64* %PC.i649
  store i64 ptrtoint (%G__0x4bfadc_type* @G__0x4bfadc to i64), i64* %RDI.i650, align 8
  store %struct.Memory* %loadMem_426037, %struct.Memory** %MEMORY
  %loadMem_426041 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3727 = getelementptr inbounds %struct.GPR, %struct.GPR* %3726, i32 0, i32 33
  %3728 = getelementptr inbounds %struct.Reg, %struct.Reg* %3727, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %3728 to i64*
  %3729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3730 = getelementptr inbounds %struct.GPR, %struct.GPR* %3729, i32 0, i32 1
  %3731 = getelementptr inbounds %struct.Reg, %struct.Reg* %3730, i32 0, i32 0
  %RAX.i648 = bitcast %union.anon* %3731 to i64*
  %3732 = load i64, i64* %PC.i647
  %3733 = add i64 %3732, 8
  store i64 %3733, i64* %PC.i647
  %3734 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3734, i64* %RAX.i648, align 8
  store %struct.Memory* %loadMem_426041, %struct.Memory** %MEMORY
  %loadMem_426049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3736 = getelementptr inbounds %struct.GPR, %struct.GPR* %3735, i32 0, i32 33
  %3737 = getelementptr inbounds %struct.Reg, %struct.Reg* %3736, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %3737 to i64*
  %3738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3739 = getelementptr inbounds %struct.GPR, %struct.GPR* %3738, i32 0, i32 1
  %3740 = getelementptr inbounds %struct.Reg, %struct.Reg* %3739, i32 0, i32 0
  %RAX.i645 = bitcast %union.anon* %3740 to i64*
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3742 = getelementptr inbounds %struct.GPR, %struct.GPR* %3741, i32 0, i32 9
  %3743 = getelementptr inbounds %struct.Reg, %struct.Reg* %3742, i32 0, i32 0
  %RSI.i646 = bitcast %union.anon* %3743 to i64*
  %3744 = load i64, i64* %RAX.i645
  %3745 = add i64 %3744, 72436
  %3746 = load i64, i64* %PC.i644
  %3747 = add i64 %3746, 6
  store i64 %3747, i64* %PC.i644
  %3748 = inttoptr i64 %3745 to i32*
  %3749 = load i32, i32* %3748
  %3750 = zext i32 %3749 to i64
  store i64 %3750, i64* %RSI.i646, align 8
  store %struct.Memory* %loadMem_426049, %struct.Memory** %MEMORY
  %loadMem_42604f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3752 = getelementptr inbounds %struct.GPR, %struct.GPR* %3751, i32 0, i32 33
  %3753 = getelementptr inbounds %struct.Reg, %struct.Reg* %3752, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %3753 to i64*
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3755 = getelementptr inbounds %struct.GPR, %struct.GPR* %3754, i32 0, i32 7
  %3756 = getelementptr inbounds %struct.Reg, %struct.Reg* %3755, i32 0, i32 0
  %RDX.i642 = bitcast %union.anon* %3756 to i64*
  %3757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3758 = getelementptr inbounds %struct.GPR, %struct.GPR* %3757, i32 0, i32 15
  %3759 = getelementptr inbounds %struct.Reg, %struct.Reg* %3758, i32 0, i32 0
  %RBP.i643 = bitcast %union.anon* %3759 to i64*
  %3760 = load i64, i64* %RBP.i643
  %3761 = sub i64 %3760, 16
  %3762 = load i64, i64* %PC.i641
  %3763 = add i64 %3762, 4
  store i64 %3763, i64* %PC.i641
  %3764 = inttoptr i64 %3761 to i64*
  %3765 = load i64, i64* %3764
  store i64 %3765, i64* %RDX.i642, align 8
  store %struct.Memory* %loadMem_42604f, %struct.Memory** %MEMORY
  %loadMem1_426053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3767 = getelementptr inbounds %struct.GPR, %struct.GPR* %3766, i32 0, i32 33
  %3768 = getelementptr inbounds %struct.Reg, %struct.Reg* %3767, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %3768 to i64*
  %3769 = load i64, i64* %PC.i640
  %3770 = add i64 %3769, 551277
  %3771 = load i64, i64* %PC.i640
  %3772 = add i64 %3771, 5
  %3773 = load i64, i64* %PC.i640
  %3774 = add i64 %3773, 5
  store i64 %3774, i64* %PC.i640
  %3775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3776 = load i64, i64* %3775, align 8
  %3777 = add i64 %3776, -8
  %3778 = inttoptr i64 %3777 to i64*
  store i64 %3772, i64* %3778
  store i64 %3777, i64* %3775, align 8
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3770, i64* %3779, align 8
  store %struct.Memory* %loadMem1_426053, %struct.Memory** %MEMORY
  %loadMem2_426053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_426053 = load i64, i64* %3
  %call2_426053 = call %struct.Memory* @sub_4ac9c0.se_v(%struct.State* %0, i64 %loadPC_426053, %struct.Memory* %loadMem2_426053)
  store %struct.Memory* %call2_426053, %struct.Memory** %MEMORY
  %loadMem_426058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3781 = getelementptr inbounds %struct.GPR, %struct.GPR* %3780, i32 0, i32 33
  %3782 = getelementptr inbounds %struct.Reg, %struct.Reg* %3781, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %3782 to i64*
  %3783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3784 = getelementptr inbounds %struct.GPR, %struct.GPR* %3783, i32 0, i32 1
  %3785 = getelementptr inbounds %struct.Reg, %struct.Reg* %3784, i32 0, i32 0
  %RAX.i638 = bitcast %union.anon* %3785 to i64*
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3787 = getelementptr inbounds %struct.GPR, %struct.GPR* %3786, i32 0, i32 15
  %3788 = getelementptr inbounds %struct.Reg, %struct.Reg* %3787, i32 0, i32 0
  %RBP.i639 = bitcast %union.anon* %3788 to i64*
  %3789 = load i64, i64* %RAX.i638
  %3790 = load i64, i64* %RBP.i639
  %3791 = sub i64 %3790, 28
  %3792 = load i64, i64* %PC.i637
  %3793 = add i64 %3792, 3
  store i64 %3793, i64* %PC.i637
  %3794 = trunc i64 %3789 to i32
  %3795 = inttoptr i64 %3791 to i32*
  %3796 = load i32, i32* %3795
  %3797 = add i32 %3796, %3794
  %3798 = zext i32 %3797 to i64
  store i64 %3798, i64* %RAX.i638, align 8
  %3799 = icmp ult i32 %3797, %3794
  %3800 = icmp ult i32 %3797, %3796
  %3801 = or i1 %3799, %3800
  %3802 = zext i1 %3801 to i8
  %3803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3802, i8* %3803, align 1
  %3804 = and i32 %3797, 255
  %3805 = call i32 @llvm.ctpop.i32(i32 %3804)
  %3806 = trunc i32 %3805 to i8
  %3807 = and i8 %3806, 1
  %3808 = xor i8 %3807, 1
  %3809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3808, i8* %3809, align 1
  %3810 = xor i32 %3796, %3794
  %3811 = xor i32 %3810, %3797
  %3812 = lshr i32 %3811, 4
  %3813 = trunc i32 %3812 to i8
  %3814 = and i8 %3813, 1
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3814, i8* %3815, align 1
  %3816 = icmp eq i32 %3797, 0
  %3817 = zext i1 %3816 to i8
  %3818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3817, i8* %3818, align 1
  %3819 = lshr i32 %3797, 31
  %3820 = trunc i32 %3819 to i8
  %3821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3820, i8* %3821, align 1
  %3822 = lshr i32 %3794, 31
  %3823 = lshr i32 %3796, 31
  %3824 = xor i32 %3819, %3822
  %3825 = xor i32 %3819, %3823
  %3826 = add i32 %3824, %3825
  %3827 = icmp eq i32 %3826, 2
  %3828 = zext i1 %3827 to i8
  %3829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3828, i8* %3829, align 1
  store %struct.Memory* %loadMem_426058, %struct.Memory** %MEMORY
  %loadMem_42605b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3831 = getelementptr inbounds %struct.GPR, %struct.GPR* %3830, i32 0, i32 33
  %3832 = getelementptr inbounds %struct.Reg, %struct.Reg* %3831, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %3832 to i64*
  %3833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3834 = getelementptr inbounds %struct.GPR, %struct.GPR* %3833, i32 0, i32 1
  %3835 = getelementptr inbounds %struct.Reg, %struct.Reg* %3834, i32 0, i32 0
  %EAX.i635 = bitcast %union.anon* %3835 to i32*
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3837 = getelementptr inbounds %struct.GPR, %struct.GPR* %3836, i32 0, i32 15
  %3838 = getelementptr inbounds %struct.Reg, %struct.Reg* %3837, i32 0, i32 0
  %RBP.i636 = bitcast %union.anon* %3838 to i64*
  %3839 = load i64, i64* %RBP.i636
  %3840 = sub i64 %3839, 28
  %3841 = load i32, i32* %EAX.i635
  %3842 = zext i32 %3841 to i64
  %3843 = load i64, i64* %PC.i634
  %3844 = add i64 %3843, 3
  store i64 %3844, i64* %PC.i634
  %3845 = inttoptr i64 %3840 to i32*
  store i32 %3841, i32* %3845
  store %struct.Memory* %loadMem_42605b, %struct.Memory** %MEMORY
  %loadMem_42605e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3847 = getelementptr inbounds %struct.GPR, %struct.GPR* %3846, i32 0, i32 33
  %3848 = getelementptr inbounds %struct.Reg, %struct.Reg* %3847, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %3848 to i64*
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3850 = getelementptr inbounds %struct.GPR, %struct.GPR* %3849, i32 0, i32 7
  %3851 = getelementptr inbounds %struct.Reg, %struct.Reg* %3850, i32 0, i32 0
  %RDX.i633 = bitcast %union.anon* %3851 to i64*
  %3852 = load i64, i64* %PC.i632
  %3853 = add i64 %3852, 8
  store i64 %3853, i64* %PC.i632
  %3854 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3854, i64* %RDX.i633, align 8
  store %struct.Memory* %loadMem_42605e, %struct.Memory** %MEMORY
  %loadMem_426066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3856 = getelementptr inbounds %struct.GPR, %struct.GPR* %3855, i32 0, i32 33
  %3857 = getelementptr inbounds %struct.Reg, %struct.Reg* %3856, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %3857 to i64*
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3859 = getelementptr inbounds %struct.GPR, %struct.GPR* %3858, i32 0, i32 7
  %3860 = getelementptr inbounds %struct.Reg, %struct.Reg* %3859, i32 0, i32 0
  %RDX.i631 = bitcast %union.anon* %3860 to i64*
  %3861 = load i64, i64* %RDX.i631
  %3862 = add i64 %3861, 72492
  %3863 = load i64, i64* %PC.i630
  %3864 = add i64 %3863, 7
  store i64 %3864, i64* %PC.i630
  %3865 = inttoptr i64 %3862 to i32*
  %3866 = load i32, i32* %3865
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3867, align 1
  %3868 = and i32 %3866, 255
  %3869 = call i32 @llvm.ctpop.i32(i32 %3868)
  %3870 = trunc i32 %3869 to i8
  %3871 = and i8 %3870, 1
  %3872 = xor i8 %3871, 1
  %3873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3872, i8* %3873, align 1
  %3874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3874, align 1
  %3875 = icmp eq i32 %3866, 0
  %3876 = zext i1 %3875 to i8
  %3877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3876, i8* %3877, align 1
  %3878 = lshr i32 %3866, 31
  %3879 = trunc i32 %3878 to i8
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3879, i8* %3880, align 1
  %3881 = lshr i32 %3866, 31
  %3882 = xor i32 %3878, %3881
  %3883 = add i32 %3882, %3881
  %3884 = icmp eq i32 %3883, 2
  %3885 = zext i1 %3884 to i8
  %3886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3885, i8* %3886, align 1
  store %struct.Memory* %loadMem_426066, %struct.Memory** %MEMORY
  %loadMem_42606d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3888 = getelementptr inbounds %struct.GPR, %struct.GPR* %3887, i32 0, i32 33
  %3889 = getelementptr inbounds %struct.Reg, %struct.Reg* %3888, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %3889 to i64*
  %3890 = load i64, i64* %PC.i629
  %3891 = add i64 %3890, 55
  %3892 = load i64, i64* %PC.i629
  %3893 = add i64 %3892, 6
  %3894 = load i64, i64* %PC.i629
  %3895 = add i64 %3894, 6
  store i64 %3895, i64* %PC.i629
  %3896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3897 = load i8, i8* %3896, align 1
  store i8 %3897, i8* %BRANCH_TAKEN, align 1
  %3898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3899 = icmp ne i8 %3897, 0
  %3900 = select i1 %3899, i64 %3891, i64 %3893
  store i64 %3900, i64* %3898, align 8
  store %struct.Memory* %loadMem_42606d, %struct.Memory** %MEMORY
  %loadBr_42606d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42606d = icmp eq i8 %loadBr_42606d, 1
  br i1 %cmpBr_42606d, label %block_.L_4260a4, label %block_426073

block_426073:                                     ; preds = %block_426037
  %loadMem_426073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3902 = getelementptr inbounds %struct.GPR, %struct.GPR* %3901, i32 0, i32 33
  %3903 = getelementptr inbounds %struct.Reg, %struct.Reg* %3902, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %3903 to i64*
  %3904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3905 = getelementptr inbounds %struct.GPR, %struct.GPR* %3904, i32 0, i32 15
  %3906 = getelementptr inbounds %struct.Reg, %struct.Reg* %3905, i32 0, i32 0
  %RBP.i628 = bitcast %union.anon* %3906 to i64*
  %3907 = load i64, i64* %RBP.i628
  %3908 = sub i64 %3907, 32
  %3909 = load i64, i64* %PC.i627
  %3910 = add i64 %3909, 4
  store i64 %3910, i64* %PC.i627
  %3911 = inttoptr i64 %3908 to i32*
  %3912 = load i32, i32* %3911
  %3913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3913, align 1
  %3914 = and i32 %3912, 255
  %3915 = call i32 @llvm.ctpop.i32(i32 %3914)
  %3916 = trunc i32 %3915 to i8
  %3917 = and i8 %3916, 1
  %3918 = xor i8 %3917, 1
  %3919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3918, i8* %3919, align 1
  %3920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3920, align 1
  %3921 = icmp eq i32 %3912, 0
  %3922 = zext i1 %3921 to i8
  %3923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3922, i8* %3923, align 1
  %3924 = lshr i32 %3912, 31
  %3925 = trunc i32 %3924 to i8
  %3926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3925, i8* %3926, align 1
  %3927 = lshr i32 %3912, 31
  %3928 = xor i32 %3924, %3927
  %3929 = add i32 %3928, %3927
  %3930 = icmp eq i32 %3929, 2
  %3931 = zext i1 %3930 to i8
  %3932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3931, i8* %3932, align 1
  store %struct.Memory* %loadMem_426073, %struct.Memory** %MEMORY
  %loadMem_426077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3934 = getelementptr inbounds %struct.GPR, %struct.GPR* %3933, i32 0, i32 33
  %3935 = getelementptr inbounds %struct.Reg, %struct.Reg* %3934, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %3935 to i64*
  %3936 = load i64, i64* %PC.i626
  %3937 = add i64 %3936, 45
  %3938 = load i64, i64* %PC.i626
  %3939 = add i64 %3938, 6
  %3940 = load i64, i64* %PC.i626
  %3941 = add i64 %3940, 6
  store i64 %3941, i64* %PC.i626
  %3942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3943 = load i8, i8* %3942, align 1
  %3944 = icmp eq i8 %3943, 0
  %3945 = zext i1 %3944 to i8
  store i8 %3945, i8* %BRANCH_TAKEN, align 1
  %3946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3947 = select i1 %3944, i64 %3937, i64 %3939
  store i64 %3947, i64* %3946, align 8
  store %struct.Memory* %loadMem_426077, %struct.Memory** %MEMORY
  %loadBr_426077 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_426077 = icmp eq i8 %loadBr_426077, 1
  br i1 %cmpBr_426077, label %block_.L_4260a4, label %block_42607d

block_42607d:                                     ; preds = %block_426073
  %loadMem_42607d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3949 = getelementptr inbounds %struct.GPR, %struct.GPR* %3948, i32 0, i32 33
  %3950 = getelementptr inbounds %struct.Reg, %struct.Reg* %3949, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %3950 to i64*
  %3951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3952 = getelementptr inbounds %struct.GPR, %struct.GPR* %3951, i32 0, i32 11
  %3953 = getelementptr inbounds %struct.Reg, %struct.Reg* %3952, i32 0, i32 0
  %RDI.i625 = bitcast %union.anon* %3953 to i64*
  %3954 = load i64, i64* %PC.i624
  %3955 = add i64 %3954, 10
  store i64 %3955, i64* %PC.i624
  store i64 ptrtoint (%G__0x4bfaf7_type* @G__0x4bfaf7 to i64), i64* %RDI.i625, align 8
  store %struct.Memory* %loadMem_42607d, %struct.Memory** %MEMORY
  %loadMem_426087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3957 = getelementptr inbounds %struct.GPR, %struct.GPR* %3956, i32 0, i32 33
  %3958 = getelementptr inbounds %struct.Reg, %struct.Reg* %3957, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %3958 to i64*
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3960 = getelementptr inbounds %struct.GPR, %struct.GPR* %3959, i32 0, i32 1
  %3961 = getelementptr inbounds %struct.Reg, %struct.Reg* %3960, i32 0, i32 0
  %RAX.i623 = bitcast %union.anon* %3961 to i64*
  %3962 = load i64, i64* %PC.i622
  %3963 = add i64 %3962, 8
  store i64 %3963, i64* %PC.i622
  %3964 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3964, i64* %RAX.i623, align 8
  store %struct.Memory* %loadMem_426087, %struct.Memory** %MEMORY
  %loadMem_42608f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3966 = getelementptr inbounds %struct.GPR, %struct.GPR* %3965, i32 0, i32 33
  %3967 = getelementptr inbounds %struct.Reg, %struct.Reg* %3966, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %3967 to i64*
  %3968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3969 = getelementptr inbounds %struct.GPR, %struct.GPR* %3968, i32 0, i32 1
  %3970 = getelementptr inbounds %struct.Reg, %struct.Reg* %3969, i32 0, i32 0
  %RAX.i620 = bitcast %union.anon* %3970 to i64*
  %3971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3972 = getelementptr inbounds %struct.GPR, %struct.GPR* %3971, i32 0, i32 9
  %3973 = getelementptr inbounds %struct.Reg, %struct.Reg* %3972, i32 0, i32 0
  %RSI.i621 = bitcast %union.anon* %3973 to i64*
  %3974 = load i64, i64* %RAX.i620
  %3975 = add i64 %3974, 72440
  %3976 = load i64, i64* %PC.i619
  %3977 = add i64 %3976, 6
  store i64 %3977, i64* %PC.i619
  %3978 = inttoptr i64 %3975 to i32*
  %3979 = load i32, i32* %3978
  %3980 = zext i32 %3979 to i64
  store i64 %3980, i64* %RSI.i621, align 8
  store %struct.Memory* %loadMem_42608f, %struct.Memory** %MEMORY
  %loadMem_426095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3982 = getelementptr inbounds %struct.GPR, %struct.GPR* %3981, i32 0, i32 33
  %3983 = getelementptr inbounds %struct.Reg, %struct.Reg* %3982, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %3983 to i64*
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3985 = getelementptr inbounds %struct.GPR, %struct.GPR* %3984, i32 0, i32 7
  %3986 = getelementptr inbounds %struct.Reg, %struct.Reg* %3985, i32 0, i32 0
  %RDX.i617 = bitcast %union.anon* %3986 to i64*
  %3987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3988 = getelementptr inbounds %struct.GPR, %struct.GPR* %3987, i32 0, i32 15
  %3989 = getelementptr inbounds %struct.Reg, %struct.Reg* %3988, i32 0, i32 0
  %RBP.i618 = bitcast %union.anon* %3989 to i64*
  %3990 = load i64, i64* %RBP.i618
  %3991 = sub i64 %3990, 16
  %3992 = load i64, i64* %PC.i616
  %3993 = add i64 %3992, 4
  store i64 %3993, i64* %PC.i616
  %3994 = inttoptr i64 %3991 to i64*
  %3995 = load i64, i64* %3994
  store i64 %3995, i64* %RDX.i617, align 8
  store %struct.Memory* %loadMem_426095, %struct.Memory** %MEMORY
  %loadMem1_426099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3997 = getelementptr inbounds %struct.GPR, %struct.GPR* %3996, i32 0, i32 33
  %3998 = getelementptr inbounds %struct.Reg, %struct.Reg* %3997, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %3998 to i64*
  %3999 = load i64, i64* %PC.i615
  %4000 = add i64 %3999, 551207
  %4001 = load i64, i64* %PC.i615
  %4002 = add i64 %4001, 5
  %4003 = load i64, i64* %PC.i615
  %4004 = add i64 %4003, 5
  store i64 %4004, i64* %PC.i615
  %4005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4006 = load i64, i64* %4005, align 8
  %4007 = add i64 %4006, -8
  %4008 = inttoptr i64 %4007 to i64*
  store i64 %4002, i64* %4008
  store i64 %4007, i64* %4005, align 8
  %4009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4000, i64* %4009, align 8
  store %struct.Memory* %loadMem1_426099, %struct.Memory** %MEMORY
  %loadMem2_426099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_426099 = load i64, i64* %3
  %call2_426099 = call %struct.Memory* @sub_4ac9c0.se_v(%struct.State* %0, i64 %loadPC_426099, %struct.Memory* %loadMem2_426099)
  store %struct.Memory* %call2_426099, %struct.Memory** %MEMORY
  %loadMem_42609e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4011 = getelementptr inbounds %struct.GPR, %struct.GPR* %4010, i32 0, i32 33
  %4012 = getelementptr inbounds %struct.Reg, %struct.Reg* %4011, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %4012 to i64*
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4014 = getelementptr inbounds %struct.GPR, %struct.GPR* %4013, i32 0, i32 1
  %4015 = getelementptr inbounds %struct.Reg, %struct.Reg* %4014, i32 0, i32 0
  %RAX.i613 = bitcast %union.anon* %4015 to i64*
  %4016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4017 = getelementptr inbounds %struct.GPR, %struct.GPR* %4016, i32 0, i32 15
  %4018 = getelementptr inbounds %struct.Reg, %struct.Reg* %4017, i32 0, i32 0
  %RBP.i614 = bitcast %union.anon* %4018 to i64*
  %4019 = load i64, i64* %RAX.i613
  %4020 = load i64, i64* %RBP.i614
  %4021 = sub i64 %4020, 28
  %4022 = load i64, i64* %PC.i612
  %4023 = add i64 %4022, 3
  store i64 %4023, i64* %PC.i612
  %4024 = trunc i64 %4019 to i32
  %4025 = inttoptr i64 %4021 to i32*
  %4026 = load i32, i32* %4025
  %4027 = add i32 %4026, %4024
  %4028 = zext i32 %4027 to i64
  store i64 %4028, i64* %RAX.i613, align 8
  %4029 = icmp ult i32 %4027, %4024
  %4030 = icmp ult i32 %4027, %4026
  %4031 = or i1 %4029, %4030
  %4032 = zext i1 %4031 to i8
  %4033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4032, i8* %4033, align 1
  %4034 = and i32 %4027, 255
  %4035 = call i32 @llvm.ctpop.i32(i32 %4034)
  %4036 = trunc i32 %4035 to i8
  %4037 = and i8 %4036, 1
  %4038 = xor i8 %4037, 1
  %4039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4038, i8* %4039, align 1
  %4040 = xor i32 %4026, %4024
  %4041 = xor i32 %4040, %4027
  %4042 = lshr i32 %4041, 4
  %4043 = trunc i32 %4042 to i8
  %4044 = and i8 %4043, 1
  %4045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4044, i8* %4045, align 1
  %4046 = icmp eq i32 %4027, 0
  %4047 = zext i1 %4046 to i8
  %4048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4047, i8* %4048, align 1
  %4049 = lshr i32 %4027, 31
  %4050 = trunc i32 %4049 to i8
  %4051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4050, i8* %4051, align 1
  %4052 = lshr i32 %4024, 31
  %4053 = lshr i32 %4026, 31
  %4054 = xor i32 %4049, %4052
  %4055 = xor i32 %4049, %4053
  %4056 = add i32 %4054, %4055
  %4057 = icmp eq i32 %4056, 2
  %4058 = zext i1 %4057 to i8
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4058, i8* %4059, align 1
  store %struct.Memory* %loadMem_42609e, %struct.Memory** %MEMORY
  %loadMem_4260a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4061 = getelementptr inbounds %struct.GPR, %struct.GPR* %4060, i32 0, i32 33
  %4062 = getelementptr inbounds %struct.Reg, %struct.Reg* %4061, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %4062 to i64*
  %4063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4064 = getelementptr inbounds %struct.GPR, %struct.GPR* %4063, i32 0, i32 1
  %4065 = getelementptr inbounds %struct.Reg, %struct.Reg* %4064, i32 0, i32 0
  %EAX.i610 = bitcast %union.anon* %4065 to i32*
  %4066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4067 = getelementptr inbounds %struct.GPR, %struct.GPR* %4066, i32 0, i32 15
  %4068 = getelementptr inbounds %struct.Reg, %struct.Reg* %4067, i32 0, i32 0
  %RBP.i611 = bitcast %union.anon* %4068 to i64*
  %4069 = load i64, i64* %RBP.i611
  %4070 = sub i64 %4069, 28
  %4071 = load i32, i32* %EAX.i610
  %4072 = zext i32 %4071 to i64
  %4073 = load i64, i64* %PC.i609
  %4074 = add i64 %4073, 3
  store i64 %4074, i64* %PC.i609
  %4075 = inttoptr i64 %4070 to i32*
  store i32 %4071, i32* %4075
  store %struct.Memory* %loadMem_4260a1, %struct.Memory** %MEMORY
  br label %block_.L_4260a4

block_.L_4260a4:                                  ; preds = %block_42607d, %block_426073, %block_426037
  %loadMem_4260a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4077 = getelementptr inbounds %struct.GPR, %struct.GPR* %4076, i32 0, i32 33
  %4078 = getelementptr inbounds %struct.Reg, %struct.Reg* %4077, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %4078 to i64*
  %4079 = load i64, i64* %PC.i608
  %4080 = add i64 %4079, 5
  %4081 = load i64, i64* %PC.i608
  %4082 = add i64 %4081, 5
  store i64 %4082, i64* %PC.i608
  %4083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4080, i64* %4083, align 8
  store %struct.Memory* %loadMem_4260a4, %struct.Memory** %MEMORY
  br label %block_.L_4260a9

block_.L_4260a9:                                  ; preds = %block_.L_4260a4, %block_426022, %block_.L_42600d
  %loadMem_4260a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4085 = getelementptr inbounds %struct.GPR, %struct.GPR* %4084, i32 0, i32 33
  %4086 = getelementptr inbounds %struct.Reg, %struct.Reg* %4085, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %4086 to i64*
  %4087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4088 = getelementptr inbounds %struct.GPR, %struct.GPR* %4087, i32 0, i32 1
  %4089 = getelementptr inbounds %struct.Reg, %struct.Reg* %4088, i32 0, i32 0
  %RAX.i607 = bitcast %union.anon* %4089 to i64*
  %4090 = load i64, i64* %PC.i606
  %4091 = add i64 %4090, 8
  store i64 %4091, i64* %PC.i606
  %4092 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %4092, i64* %RAX.i607, align 8
  store %struct.Memory* %loadMem_4260a9, %struct.Memory** %MEMORY
  %loadMem_4260b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4094 = getelementptr inbounds %struct.GPR, %struct.GPR* %4093, i32 0, i32 33
  %4095 = getelementptr inbounds %struct.Reg, %struct.Reg* %4094, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %4095 to i64*
  %4096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4097 = getelementptr inbounds %struct.GPR, %struct.GPR* %4096, i32 0, i32 1
  %4098 = getelementptr inbounds %struct.Reg, %struct.Reg* %4097, i32 0, i32 0
  %RAX.i605 = bitcast %union.anon* %4098 to i64*
  %4099 = load i64, i64* %RAX.i605
  %4100 = add i64 %4099, 3204
  %4101 = load i64, i64* %PC.i604
  %4102 = add i64 %4101, 7
  store i64 %4102, i64* %PC.i604
  %4103 = inttoptr i64 %4100 to i32*
  %4104 = load i32, i32* %4103
  %4105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4105, align 1
  %4106 = and i32 %4104, 255
  %4107 = call i32 @llvm.ctpop.i32(i32 %4106)
  %4108 = trunc i32 %4107 to i8
  %4109 = and i8 %4108, 1
  %4110 = xor i8 %4109, 1
  %4111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4110, i8* %4111, align 1
  %4112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4112, align 1
  %4113 = icmp eq i32 %4104, 0
  %4114 = zext i1 %4113 to i8
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4114, i8* %4115, align 1
  %4116 = lshr i32 %4104, 31
  %4117 = trunc i32 %4116 to i8
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4117, i8* %4118, align 1
  %4119 = lshr i32 %4104, 31
  %4120 = xor i32 %4116, %4119
  %4121 = add i32 %4120, %4119
  %4122 = icmp eq i32 %4121, 2
  %4123 = zext i1 %4122 to i8
  %4124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4123, i8* %4124, align 1
  store %struct.Memory* %loadMem_4260b1, %struct.Memory** %MEMORY
  %loadMem_4260b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4126 = getelementptr inbounds %struct.GPR, %struct.GPR* %4125, i32 0, i32 33
  %4127 = getelementptr inbounds %struct.Reg, %struct.Reg* %4126, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %4127 to i64*
  %4128 = load i64, i64* %PC.i603
  %4129 = add i64 %4128, 45
  %4130 = load i64, i64* %PC.i603
  %4131 = add i64 %4130, 6
  %4132 = load i64, i64* %PC.i603
  %4133 = add i64 %4132, 6
  store i64 %4133, i64* %PC.i603
  %4134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4135 = load i8, i8* %4134, align 1
  store i8 %4135, i8* %BRANCH_TAKEN, align 1
  %4136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4137 = icmp ne i8 %4135, 0
  %4138 = select i1 %4137, i64 %4129, i64 %4131
  store i64 %4138, i64* %4136, align 8
  store %struct.Memory* %loadMem_4260b8, %struct.Memory** %MEMORY
  %loadBr_4260b8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4260b8 = icmp eq i8 %loadBr_4260b8, 1
  br i1 %cmpBr_4260b8, label %block_.L_4260e5, label %block_4260be

block_4260be:                                     ; preds = %block_.L_4260a9
  %loadMem_4260be = load %struct.Memory*, %struct.Memory** %MEMORY
  %4139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4140 = getelementptr inbounds %struct.GPR, %struct.GPR* %4139, i32 0, i32 33
  %4141 = getelementptr inbounds %struct.Reg, %struct.Reg* %4140, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %4141 to i64*
  %4142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4143 = getelementptr inbounds %struct.GPR, %struct.GPR* %4142, i32 0, i32 11
  %4144 = getelementptr inbounds %struct.Reg, %struct.Reg* %4143, i32 0, i32 0
  %RDI.i602 = bitcast %union.anon* %4144 to i64*
  %4145 = load i64, i64* %PC.i601
  %4146 = add i64 %4145, 10
  store i64 %4146, i64* %PC.i601
  store i64 ptrtoint (%G__0x4bfb12_type* @G__0x4bfb12 to i64), i64* %RDI.i602, align 8
  store %struct.Memory* %loadMem_4260be, %struct.Memory** %MEMORY
  %loadMem_4260c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4148 = getelementptr inbounds %struct.GPR, %struct.GPR* %4147, i32 0, i32 33
  %4149 = getelementptr inbounds %struct.Reg, %struct.Reg* %4148, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %4149 to i64*
  %4150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4151 = getelementptr inbounds %struct.GPR, %struct.GPR* %4150, i32 0, i32 1
  %4152 = getelementptr inbounds %struct.Reg, %struct.Reg* %4151, i32 0, i32 0
  %RAX.i600 = bitcast %union.anon* %4152 to i64*
  %4153 = load i64, i64* %PC.i599
  %4154 = add i64 %4153, 8
  store i64 %4154, i64* %PC.i599
  %4155 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4155, i64* %RAX.i600, align 8
  store %struct.Memory* %loadMem_4260c8, %struct.Memory** %MEMORY
  %loadMem_4260d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4157 = getelementptr inbounds %struct.GPR, %struct.GPR* %4156, i32 0, i32 33
  %4158 = getelementptr inbounds %struct.Reg, %struct.Reg* %4157, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %4158 to i64*
  %4159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4160 = getelementptr inbounds %struct.GPR, %struct.GPR* %4159, i32 0, i32 1
  %4161 = getelementptr inbounds %struct.Reg, %struct.Reg* %4160, i32 0, i32 0
  %RAX.i597 = bitcast %union.anon* %4161 to i64*
  %4162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4163 = getelementptr inbounds %struct.GPR, %struct.GPR* %4162, i32 0, i32 9
  %4164 = getelementptr inbounds %struct.Reg, %struct.Reg* %4163, i32 0, i32 0
  %RSI.i598 = bitcast %union.anon* %4164 to i64*
  %4165 = load i64, i64* %RAX.i597
  %4166 = add i64 %4165, 72396
  %4167 = load i64, i64* %PC.i596
  %4168 = add i64 %4167, 6
  store i64 %4168, i64* %PC.i596
  %4169 = inttoptr i64 %4166 to i32*
  %4170 = load i32, i32* %4169
  %4171 = zext i32 %4170 to i64
  store i64 %4171, i64* %RSI.i598, align 8
  store %struct.Memory* %loadMem_4260d0, %struct.Memory** %MEMORY
  %loadMem_4260d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4173 = getelementptr inbounds %struct.GPR, %struct.GPR* %4172, i32 0, i32 33
  %4174 = getelementptr inbounds %struct.Reg, %struct.Reg* %4173, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %4174 to i64*
  %4175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4176 = getelementptr inbounds %struct.GPR, %struct.GPR* %4175, i32 0, i32 7
  %4177 = getelementptr inbounds %struct.Reg, %struct.Reg* %4176, i32 0, i32 0
  %RDX.i594 = bitcast %union.anon* %4177 to i64*
  %4178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4179 = getelementptr inbounds %struct.GPR, %struct.GPR* %4178, i32 0, i32 15
  %4180 = getelementptr inbounds %struct.Reg, %struct.Reg* %4179, i32 0, i32 0
  %RBP.i595 = bitcast %union.anon* %4180 to i64*
  %4181 = load i64, i64* %RBP.i595
  %4182 = sub i64 %4181, 16
  %4183 = load i64, i64* %PC.i593
  %4184 = add i64 %4183, 4
  store i64 %4184, i64* %PC.i593
  %4185 = inttoptr i64 %4182 to i64*
  %4186 = load i64, i64* %4185
  store i64 %4186, i64* %RDX.i594, align 8
  store %struct.Memory* %loadMem_4260d6, %struct.Memory** %MEMORY
  %loadMem1_4260da = load %struct.Memory*, %struct.Memory** %MEMORY
  %4187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4188 = getelementptr inbounds %struct.GPR, %struct.GPR* %4187, i32 0, i32 33
  %4189 = getelementptr inbounds %struct.Reg, %struct.Reg* %4188, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %4189 to i64*
  %4190 = load i64, i64* %PC.i592
  %4191 = add i64 %4190, 550342
  %4192 = load i64, i64* %PC.i592
  %4193 = add i64 %4192, 5
  %4194 = load i64, i64* %PC.i592
  %4195 = add i64 %4194, 5
  store i64 %4195, i64* %PC.i592
  %4196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4197 = load i64, i64* %4196, align 8
  %4198 = add i64 %4197, -8
  %4199 = inttoptr i64 %4198 to i64*
  store i64 %4193, i64* %4199
  store i64 %4198, i64* %4196, align 8
  %4200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4191, i64* %4200, align 8
  store %struct.Memory* %loadMem1_4260da, %struct.Memory** %MEMORY
  %loadMem2_4260da = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4260da = load i64, i64* %3
  %call2_4260da = call %struct.Memory* @sub_4ac6a0.ue_v(%struct.State* %0, i64 %loadPC_4260da, %struct.Memory* %loadMem2_4260da)
  store %struct.Memory* %call2_4260da, %struct.Memory** %MEMORY
  %loadMem_4260df = load %struct.Memory*, %struct.Memory** %MEMORY
  %4201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4202 = getelementptr inbounds %struct.GPR, %struct.GPR* %4201, i32 0, i32 33
  %4203 = getelementptr inbounds %struct.Reg, %struct.Reg* %4202, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %4203 to i64*
  %4204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4205 = getelementptr inbounds %struct.GPR, %struct.GPR* %4204, i32 0, i32 1
  %4206 = getelementptr inbounds %struct.Reg, %struct.Reg* %4205, i32 0, i32 0
  %RAX.i590 = bitcast %union.anon* %4206 to i64*
  %4207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4208 = getelementptr inbounds %struct.GPR, %struct.GPR* %4207, i32 0, i32 15
  %4209 = getelementptr inbounds %struct.Reg, %struct.Reg* %4208, i32 0, i32 0
  %RBP.i591 = bitcast %union.anon* %4209 to i64*
  %4210 = load i64, i64* %RAX.i590
  %4211 = load i64, i64* %RBP.i591
  %4212 = sub i64 %4211, 28
  %4213 = load i64, i64* %PC.i589
  %4214 = add i64 %4213, 3
  store i64 %4214, i64* %PC.i589
  %4215 = trunc i64 %4210 to i32
  %4216 = inttoptr i64 %4212 to i32*
  %4217 = load i32, i32* %4216
  %4218 = add i32 %4217, %4215
  %4219 = zext i32 %4218 to i64
  store i64 %4219, i64* %RAX.i590, align 8
  %4220 = icmp ult i32 %4218, %4215
  %4221 = icmp ult i32 %4218, %4217
  %4222 = or i1 %4220, %4221
  %4223 = zext i1 %4222 to i8
  %4224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4223, i8* %4224, align 1
  %4225 = and i32 %4218, 255
  %4226 = call i32 @llvm.ctpop.i32(i32 %4225)
  %4227 = trunc i32 %4226 to i8
  %4228 = and i8 %4227, 1
  %4229 = xor i8 %4228, 1
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4229, i8* %4230, align 1
  %4231 = xor i32 %4217, %4215
  %4232 = xor i32 %4231, %4218
  %4233 = lshr i32 %4232, 4
  %4234 = trunc i32 %4233 to i8
  %4235 = and i8 %4234, 1
  %4236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4235, i8* %4236, align 1
  %4237 = icmp eq i32 %4218, 0
  %4238 = zext i1 %4237 to i8
  %4239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4238, i8* %4239, align 1
  %4240 = lshr i32 %4218, 31
  %4241 = trunc i32 %4240 to i8
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4241, i8* %4242, align 1
  %4243 = lshr i32 %4215, 31
  %4244 = lshr i32 %4217, 31
  %4245 = xor i32 %4240, %4243
  %4246 = xor i32 %4240, %4244
  %4247 = add i32 %4245, %4246
  %4248 = icmp eq i32 %4247, 2
  %4249 = zext i1 %4248 to i8
  %4250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4249, i8* %4250, align 1
  store %struct.Memory* %loadMem_4260df, %struct.Memory** %MEMORY
  %loadMem_4260e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4252 = getelementptr inbounds %struct.GPR, %struct.GPR* %4251, i32 0, i32 33
  %4253 = getelementptr inbounds %struct.Reg, %struct.Reg* %4252, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %4253 to i64*
  %4254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4255 = getelementptr inbounds %struct.GPR, %struct.GPR* %4254, i32 0, i32 1
  %4256 = getelementptr inbounds %struct.Reg, %struct.Reg* %4255, i32 0, i32 0
  %EAX.i587 = bitcast %union.anon* %4256 to i32*
  %4257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4258 = getelementptr inbounds %struct.GPR, %struct.GPR* %4257, i32 0, i32 15
  %4259 = getelementptr inbounds %struct.Reg, %struct.Reg* %4258, i32 0, i32 0
  %RBP.i588 = bitcast %union.anon* %4259 to i64*
  %4260 = load i64, i64* %RBP.i588
  %4261 = sub i64 %4260, 28
  %4262 = load i32, i32* %EAX.i587
  %4263 = zext i32 %4262 to i64
  %4264 = load i64, i64* %PC.i586
  %4265 = add i64 %4264, 3
  store i64 %4265, i64* %PC.i586
  %4266 = inttoptr i64 %4261 to i32*
  store i32 %4262, i32* %4266
  store %struct.Memory* %loadMem_4260e2, %struct.Memory** %MEMORY
  br label %block_.L_4260e5

block_.L_4260e5:                                  ; preds = %block_4260be, %block_.L_4260a9
  %loadMem_4260e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4268 = getelementptr inbounds %struct.GPR, %struct.GPR* %4267, i32 0, i32 33
  %4269 = getelementptr inbounds %struct.Reg, %struct.Reg* %4268, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %4269 to i64*
  %4270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4271 = getelementptr inbounds %struct.GPR, %struct.GPR* %4270, i32 0, i32 1
  %4272 = getelementptr inbounds %struct.Reg, %struct.Reg* %4271, i32 0, i32 0
  %RAX.i585 = bitcast %union.anon* %4272 to i64*
  %4273 = load i64, i64* %PC.i584
  %4274 = add i64 %4273, 8
  store i64 %4274, i64* %PC.i584
  %4275 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4275, i64* %RAX.i585, align 8
  store %struct.Memory* %loadMem_4260e5, %struct.Memory** %MEMORY
  %loadMem_4260ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %4276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4277 = getelementptr inbounds %struct.GPR, %struct.GPR* %4276, i32 0, i32 33
  %4278 = getelementptr inbounds %struct.Reg, %struct.Reg* %4277, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %4278 to i64*
  %4279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4280 = getelementptr inbounds %struct.GPR, %struct.GPR* %4279, i32 0, i32 1
  %4281 = getelementptr inbounds %struct.Reg, %struct.Reg* %4280, i32 0, i32 0
  %RAX.i583 = bitcast %union.anon* %4281 to i64*
  %4282 = load i64, i64* %RAX.i583
  %4283 = add i64 %4282, 24
  %4284 = load i64, i64* %PC.i582
  %4285 = add i64 %4284, 4
  store i64 %4285, i64* %PC.i582
  %4286 = inttoptr i64 %4283 to i32*
  %4287 = load i32, i32* %4286
  %4288 = sub i32 %4287, 1
  %4289 = icmp ult i32 %4287, 1
  %4290 = zext i1 %4289 to i8
  %4291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4290, i8* %4291, align 1
  %4292 = and i32 %4288, 255
  %4293 = call i32 @llvm.ctpop.i32(i32 %4292)
  %4294 = trunc i32 %4293 to i8
  %4295 = and i8 %4294, 1
  %4296 = xor i8 %4295, 1
  %4297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4296, i8* %4297, align 1
  %4298 = xor i32 %4287, 1
  %4299 = xor i32 %4298, %4288
  %4300 = lshr i32 %4299, 4
  %4301 = trunc i32 %4300 to i8
  %4302 = and i8 %4301, 1
  %4303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4302, i8* %4303, align 1
  %4304 = icmp eq i32 %4288, 0
  %4305 = zext i1 %4304 to i8
  %4306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4305, i8* %4306, align 1
  %4307 = lshr i32 %4288, 31
  %4308 = trunc i32 %4307 to i8
  %4309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4308, i8* %4309, align 1
  %4310 = lshr i32 %4287, 31
  %4311 = xor i32 %4307, %4310
  %4312 = add i32 %4311, %4310
  %4313 = icmp eq i32 %4312, 2
  %4314 = zext i1 %4313 to i8
  %4315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4314, i8* %4315, align 1
  store %struct.Memory* %loadMem_4260ed, %struct.Memory** %MEMORY
  %loadMem_4260f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4317 = getelementptr inbounds %struct.GPR, %struct.GPR* %4316, i32 0, i32 33
  %4318 = getelementptr inbounds %struct.Reg, %struct.Reg* %4317, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %4318 to i64*
  %4319 = load i64, i64* %PC.i581
  %4320 = add i64 %4319, 45
  %4321 = load i64, i64* %PC.i581
  %4322 = add i64 %4321, 6
  %4323 = load i64, i64* %PC.i581
  %4324 = add i64 %4323, 6
  store i64 %4324, i64* %PC.i581
  %4325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4326 = load i8, i8* %4325, align 1
  %4327 = icmp eq i8 %4326, 0
  %4328 = zext i1 %4327 to i8
  store i8 %4328, i8* %BRANCH_TAKEN, align 1
  %4329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4330 = select i1 %4327, i64 %4320, i64 %4322
  store i64 %4330, i64* %4329, align 8
  store %struct.Memory* %loadMem_4260f1, %struct.Memory** %MEMORY
  %loadBr_4260f1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4260f1 = icmp eq i8 %loadBr_4260f1, 1
  br i1 %cmpBr_4260f1, label %block_.L_42611e, label %block_4260f7

block_4260f7:                                     ; preds = %block_.L_4260e5
  %loadMem_4260f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4332 = getelementptr inbounds %struct.GPR, %struct.GPR* %4331, i32 0, i32 33
  %4333 = getelementptr inbounds %struct.Reg, %struct.Reg* %4332, i32 0, i32 0
  %PC.i579 = bitcast %union.anon* %4333 to i64*
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4335 = getelementptr inbounds %struct.GPR, %struct.GPR* %4334, i32 0, i32 11
  %4336 = getelementptr inbounds %struct.Reg, %struct.Reg* %4335, i32 0, i32 0
  %RDI.i580 = bitcast %union.anon* %4336 to i64*
  %4337 = load i64, i64* %PC.i579
  %4338 = add i64 %4337, 10
  store i64 %4338, i64* %PC.i579
  store i64 ptrtoint (%G__0x4bfb28_type* @G__0x4bfb28 to i64), i64* %RDI.i580, align 8
  store %struct.Memory* %loadMem_4260f7, %struct.Memory** %MEMORY
  %loadMem_426101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4340 = getelementptr inbounds %struct.GPR, %struct.GPR* %4339, i32 0, i32 33
  %4341 = getelementptr inbounds %struct.Reg, %struct.Reg* %4340, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %4341 to i64*
  %4342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4343 = getelementptr inbounds %struct.GPR, %struct.GPR* %4342, i32 0, i32 1
  %4344 = getelementptr inbounds %struct.Reg, %struct.Reg* %4343, i32 0, i32 0
  %RAX.i578 = bitcast %union.anon* %4344 to i64*
  %4345 = load i64, i64* %PC.i577
  %4346 = add i64 %4345, 8
  store i64 %4346, i64* %PC.i577
  %4347 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4347, i64* %RAX.i578, align 8
  store %struct.Memory* %loadMem_426101, %struct.Memory** %MEMORY
  %loadMem_426109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4349 = getelementptr inbounds %struct.GPR, %struct.GPR* %4348, i32 0, i32 33
  %4350 = getelementptr inbounds %struct.Reg, %struct.Reg* %4349, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %4350 to i64*
  %4351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4352 = getelementptr inbounds %struct.GPR, %struct.GPR* %4351, i32 0, i32 1
  %4353 = getelementptr inbounds %struct.Reg, %struct.Reg* %4352, i32 0, i32 0
  %RAX.i575 = bitcast %union.anon* %4353 to i64*
  %4354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4355 = getelementptr inbounds %struct.GPR, %struct.GPR* %4354, i32 0, i32 9
  %4356 = getelementptr inbounds %struct.Reg, %struct.Reg* %4355, i32 0, i32 0
  %RSI.i576 = bitcast %union.anon* %4356 to i64*
  %4357 = load i64, i64* %RAX.i575
  %4358 = add i64 %4357, 71996
  %4359 = load i64, i64* %PC.i574
  %4360 = add i64 %4359, 6
  store i64 %4360, i64* %PC.i574
  %4361 = inttoptr i64 %4358 to i32*
  %4362 = load i32, i32* %4361
  %4363 = zext i32 %4362 to i64
  store i64 %4363, i64* %RSI.i576, align 8
  store %struct.Memory* %loadMem_426109, %struct.Memory** %MEMORY
  %loadMem_42610f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4365 = getelementptr inbounds %struct.GPR, %struct.GPR* %4364, i32 0, i32 33
  %4366 = getelementptr inbounds %struct.Reg, %struct.Reg* %4365, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %4366 to i64*
  %4367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4368 = getelementptr inbounds %struct.GPR, %struct.GPR* %4367, i32 0, i32 7
  %4369 = getelementptr inbounds %struct.Reg, %struct.Reg* %4368, i32 0, i32 0
  %RDX.i572 = bitcast %union.anon* %4369 to i64*
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4371 = getelementptr inbounds %struct.GPR, %struct.GPR* %4370, i32 0, i32 15
  %4372 = getelementptr inbounds %struct.Reg, %struct.Reg* %4371, i32 0, i32 0
  %RBP.i573 = bitcast %union.anon* %4372 to i64*
  %4373 = load i64, i64* %RBP.i573
  %4374 = sub i64 %4373, 16
  %4375 = load i64, i64* %PC.i571
  %4376 = add i64 %4375, 4
  store i64 %4376, i64* %PC.i571
  %4377 = inttoptr i64 %4374 to i64*
  %4378 = load i64, i64* %4377
  store i64 %4378, i64* %RDX.i572, align 8
  store %struct.Memory* %loadMem_42610f, %struct.Memory** %MEMORY
  %loadMem1_426113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4380 = getelementptr inbounds %struct.GPR, %struct.GPR* %4379, i32 0, i32 33
  %4381 = getelementptr inbounds %struct.Reg, %struct.Reg* %4380, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %4381 to i64*
  %4382 = load i64, i64* %PC.i570
  %4383 = add i64 %4382, 551405
  %4384 = load i64, i64* %PC.i570
  %4385 = add i64 %4384, 5
  %4386 = load i64, i64* %PC.i570
  %4387 = add i64 %4386, 5
  store i64 %4387, i64* %PC.i570
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4389 = load i64, i64* %4388, align 8
  %4390 = add i64 %4389, -8
  %4391 = inttoptr i64 %4390 to i64*
  store i64 %4385, i64* %4391
  store i64 %4390, i64* %4388, align 8
  %4392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4383, i64* %4392, align 8
  store %struct.Memory* %loadMem1_426113, %struct.Memory** %MEMORY
  %loadMem2_426113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_426113 = load i64, i64* %3
  %call2_426113 = call %struct.Memory* @sub_4acb00.u_1(%struct.State* %0, i64 %loadPC_426113, %struct.Memory* %loadMem2_426113)
  store %struct.Memory* %call2_426113, %struct.Memory** %MEMORY
  %loadMem_426118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4394 = getelementptr inbounds %struct.GPR, %struct.GPR* %4393, i32 0, i32 33
  %4395 = getelementptr inbounds %struct.Reg, %struct.Reg* %4394, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %4395 to i64*
  %4396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4397 = getelementptr inbounds %struct.GPR, %struct.GPR* %4396, i32 0, i32 1
  %4398 = getelementptr inbounds %struct.Reg, %struct.Reg* %4397, i32 0, i32 0
  %RAX.i568 = bitcast %union.anon* %4398 to i64*
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4400 = getelementptr inbounds %struct.GPR, %struct.GPR* %4399, i32 0, i32 15
  %4401 = getelementptr inbounds %struct.Reg, %struct.Reg* %4400, i32 0, i32 0
  %RBP.i569 = bitcast %union.anon* %4401 to i64*
  %4402 = load i64, i64* %RAX.i568
  %4403 = load i64, i64* %RBP.i569
  %4404 = sub i64 %4403, 28
  %4405 = load i64, i64* %PC.i567
  %4406 = add i64 %4405, 3
  store i64 %4406, i64* %PC.i567
  %4407 = trunc i64 %4402 to i32
  %4408 = inttoptr i64 %4404 to i32*
  %4409 = load i32, i32* %4408
  %4410 = add i32 %4409, %4407
  %4411 = zext i32 %4410 to i64
  store i64 %4411, i64* %RAX.i568, align 8
  %4412 = icmp ult i32 %4410, %4407
  %4413 = icmp ult i32 %4410, %4409
  %4414 = or i1 %4412, %4413
  %4415 = zext i1 %4414 to i8
  %4416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4415, i8* %4416, align 1
  %4417 = and i32 %4410, 255
  %4418 = call i32 @llvm.ctpop.i32(i32 %4417)
  %4419 = trunc i32 %4418 to i8
  %4420 = and i8 %4419, 1
  %4421 = xor i8 %4420, 1
  %4422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4421, i8* %4422, align 1
  %4423 = xor i32 %4409, %4407
  %4424 = xor i32 %4423, %4410
  %4425 = lshr i32 %4424, 4
  %4426 = trunc i32 %4425 to i8
  %4427 = and i8 %4426, 1
  %4428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4427, i8* %4428, align 1
  %4429 = icmp eq i32 %4410, 0
  %4430 = zext i1 %4429 to i8
  %4431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4430, i8* %4431, align 1
  %4432 = lshr i32 %4410, 31
  %4433 = trunc i32 %4432 to i8
  %4434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4433, i8* %4434, align 1
  %4435 = lshr i32 %4407, 31
  %4436 = lshr i32 %4409, 31
  %4437 = xor i32 %4432, %4435
  %4438 = xor i32 %4432, %4436
  %4439 = add i32 %4437, %4438
  %4440 = icmp eq i32 %4439, 2
  %4441 = zext i1 %4440 to i8
  %4442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4441, i8* %4442, align 1
  store %struct.Memory* %loadMem_426118, %struct.Memory** %MEMORY
  %loadMem_42611b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4444 = getelementptr inbounds %struct.GPR, %struct.GPR* %4443, i32 0, i32 33
  %4445 = getelementptr inbounds %struct.Reg, %struct.Reg* %4444, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %4445 to i64*
  %4446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4447 = getelementptr inbounds %struct.GPR, %struct.GPR* %4446, i32 0, i32 1
  %4448 = getelementptr inbounds %struct.Reg, %struct.Reg* %4447, i32 0, i32 0
  %EAX.i565 = bitcast %union.anon* %4448 to i32*
  %4449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4450 = getelementptr inbounds %struct.GPR, %struct.GPR* %4449, i32 0, i32 15
  %4451 = getelementptr inbounds %struct.Reg, %struct.Reg* %4450, i32 0, i32 0
  %RBP.i566 = bitcast %union.anon* %4451 to i64*
  %4452 = load i64, i64* %RBP.i566
  %4453 = sub i64 %4452, 28
  %4454 = load i32, i32* %EAX.i565
  %4455 = zext i32 %4454 to i64
  %4456 = load i64, i64* %PC.i564
  %4457 = add i64 %4456, 3
  store i64 %4457, i64* %PC.i564
  %4458 = inttoptr i64 %4453 to i32*
  store i32 %4454, i32* %4458
  store %struct.Memory* %loadMem_42611b, %struct.Memory** %MEMORY
  br label %block_.L_42611e

block_.L_42611e:                                  ; preds = %block_4260f7, %block_.L_4260e5
  %loadMem_42611e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4460 = getelementptr inbounds %struct.GPR, %struct.GPR* %4459, i32 0, i32 33
  %4461 = getelementptr inbounds %struct.Reg, %struct.Reg* %4460, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %4461 to i64*
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4463 = getelementptr inbounds %struct.GPR, %struct.GPR* %4462, i32 0, i32 1
  %4464 = getelementptr inbounds %struct.Reg, %struct.Reg* %4463, i32 0, i32 0
  %RAX.i563 = bitcast %union.anon* %4464 to i64*
  %4465 = load i64, i64* %PC.i562
  %4466 = add i64 %4465, 8
  store i64 %4466, i64* %PC.i562
  %4467 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4467, i64* %RAX.i563, align 8
  store %struct.Memory* %loadMem_42611e, %struct.Memory** %MEMORY
  %loadMem_426126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4469 = getelementptr inbounds %struct.GPR, %struct.GPR* %4468, i32 0, i32 33
  %4470 = getelementptr inbounds %struct.Reg, %struct.Reg* %4469, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %4470 to i64*
  %4471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4472 = getelementptr inbounds %struct.GPR, %struct.GPR* %4471, i32 0, i32 1
  %4473 = getelementptr inbounds %struct.Reg, %struct.Reg* %4472, i32 0, i32 0
  %RAX.i561 = bitcast %union.anon* %4473 to i64*
  %4474 = load i64, i64* %RAX.i561
  %4475 = add i64 %4474, 24
  %4476 = load i64, i64* %PC.i560
  %4477 = add i64 %4476, 4
  store i64 %4477, i64* %PC.i560
  %4478 = inttoptr i64 %4475 to i32*
  %4479 = load i32, i32* %4478
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4480, align 1
  %4481 = and i32 %4479, 255
  %4482 = call i32 @llvm.ctpop.i32(i32 %4481)
  %4483 = trunc i32 %4482 to i8
  %4484 = and i8 %4483, 1
  %4485 = xor i8 %4484, 1
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4485, i8* %4486, align 1
  %4487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4487, align 1
  %4488 = icmp eq i32 %4479, 0
  %4489 = zext i1 %4488 to i8
  %4490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4489, i8* %4490, align 1
  %4491 = lshr i32 %4479, 31
  %4492 = trunc i32 %4491 to i8
  %4493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4492, i8* %4493, align 1
  %4494 = lshr i32 %4479, 31
  %4495 = xor i32 %4491, %4494
  %4496 = add i32 %4495, %4494
  %4497 = icmp eq i32 %4496, 2
  %4498 = zext i1 %4497 to i8
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4498, i8* %4499, align 1
  store %struct.Memory* %loadMem_426126, %struct.Memory** %MEMORY
  %loadMem_42612a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4501 = getelementptr inbounds %struct.GPR, %struct.GPR* %4500, i32 0, i32 33
  %4502 = getelementptr inbounds %struct.Reg, %struct.Reg* %4501, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %4502 to i64*
  %4503 = load i64, i64* %PC.i559
  %4504 = add i64 %4503, 42
  %4505 = load i64, i64* %PC.i559
  %4506 = add i64 %4505, 6
  %4507 = load i64, i64* %PC.i559
  %4508 = add i64 %4507, 6
  store i64 %4508, i64* %PC.i559
  %4509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4510 = load i8, i8* %4509, align 1
  store i8 %4510, i8* %BRANCH_TAKEN, align 1
  %4511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4512 = icmp ne i8 %4510, 0
  %4513 = select i1 %4512, i64 %4504, i64 %4506
  store i64 %4513, i64* %4511, align 8
  store %struct.Memory* %loadMem_42612a, %struct.Memory** %MEMORY
  %loadBr_42612a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42612a = icmp eq i8 %loadBr_42612a, 1
  br i1 %cmpBr_42612a, label %block_.L_426154, label %block_426130

block_426130:                                     ; preds = %block_.L_42611e
  %loadMem_426130 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4515 = getelementptr inbounds %struct.GPR, %struct.GPR* %4514, i32 0, i32 33
  %4516 = getelementptr inbounds %struct.Reg, %struct.Reg* %4515, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %4516 to i64*
  %4517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4518 = getelementptr inbounds %struct.GPR, %struct.GPR* %4517, i32 0, i32 1
  %4519 = getelementptr inbounds %struct.Reg, %struct.Reg* %4518, i32 0, i32 0
  %RAX.i558 = bitcast %union.anon* %4519 to i64*
  %4520 = load i64, i64* %PC.i557
  %4521 = add i64 %4520, 8
  store i64 %4521, i64* %PC.i557
  %4522 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4522, i64* %RAX.i558, align 8
  store %struct.Memory* %loadMem_426130, %struct.Memory** %MEMORY
  %loadMem_426138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4524 = getelementptr inbounds %struct.GPR, %struct.GPR* %4523, i32 0, i32 33
  %4525 = getelementptr inbounds %struct.Reg, %struct.Reg* %4524, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %4525 to i64*
  %4526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4527 = getelementptr inbounds %struct.GPR, %struct.GPR* %4526, i32 0, i32 1
  %4528 = getelementptr inbounds %struct.Reg, %struct.Reg* %4527, i32 0, i32 0
  %RAX.i556 = bitcast %union.anon* %4528 to i64*
  %4529 = load i64, i64* %RAX.i556
  %4530 = add i64 %4529, 24
  %4531 = load i64, i64* %PC.i555
  %4532 = add i64 %4531, 4
  store i64 %4532, i64* %PC.i555
  %4533 = inttoptr i64 %4530 to i32*
  %4534 = load i32, i32* %4533
  %4535 = sub i32 %4534, 1
  %4536 = icmp ult i32 %4534, 1
  %4537 = zext i1 %4536 to i8
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4537, i8* %4538, align 1
  %4539 = and i32 %4535, 255
  %4540 = call i32 @llvm.ctpop.i32(i32 %4539)
  %4541 = trunc i32 %4540 to i8
  %4542 = and i8 %4541, 1
  %4543 = xor i8 %4542, 1
  %4544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4543, i8* %4544, align 1
  %4545 = xor i32 %4534, 1
  %4546 = xor i32 %4545, %4535
  %4547 = lshr i32 %4546, 4
  %4548 = trunc i32 %4547 to i8
  %4549 = and i8 %4548, 1
  %4550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4549, i8* %4550, align 1
  %4551 = icmp eq i32 %4535, 0
  %4552 = zext i1 %4551 to i8
  %4553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4552, i8* %4553, align 1
  %4554 = lshr i32 %4535, 31
  %4555 = trunc i32 %4554 to i8
  %4556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4555, i8* %4556, align 1
  %4557 = lshr i32 %4534, 31
  %4558 = xor i32 %4554, %4557
  %4559 = add i32 %4558, %4557
  %4560 = icmp eq i32 %4559, 2
  %4561 = zext i1 %4560 to i8
  %4562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4561, i8* %4562, align 1
  store %struct.Memory* %loadMem_426138, %struct.Memory** %MEMORY
  %loadMem_42613c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4564 = getelementptr inbounds %struct.GPR, %struct.GPR* %4563, i32 0, i32 33
  %4565 = getelementptr inbounds %struct.Reg, %struct.Reg* %4564, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %4565 to i64*
  %4566 = load i64, i64* %PC.i554
  %4567 = add i64 %4566, 24
  %4568 = load i64, i64* %PC.i554
  %4569 = add i64 %4568, 6
  %4570 = load i64, i64* %PC.i554
  %4571 = add i64 %4570, 6
  store i64 %4571, i64* %PC.i554
  %4572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4573 = load i8, i8* %4572, align 1
  store i8 %4573, i8* %BRANCH_TAKEN, align 1
  %4574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4575 = icmp ne i8 %4573, 0
  %4576 = select i1 %4575, i64 %4567, i64 %4569
  store i64 %4576, i64* %4574, align 8
  store %struct.Memory* %loadMem_42613c, %struct.Memory** %MEMORY
  %loadBr_42613c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42613c = icmp eq i8 %loadBr_42613c, 1
  br i1 %cmpBr_42613c, label %block_.L_426154, label %block_426142

block_426142:                                     ; preds = %block_426130
  %loadMem_426142 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4578 = getelementptr inbounds %struct.GPR, %struct.GPR* %4577, i32 0, i32 33
  %4579 = getelementptr inbounds %struct.Reg, %struct.Reg* %4578, i32 0, i32 0
  %PC.i552 = bitcast %union.anon* %4579 to i64*
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4581 = getelementptr inbounds %struct.GPR, %struct.GPR* %4580, i32 0, i32 1
  %4582 = getelementptr inbounds %struct.Reg, %struct.Reg* %4581, i32 0, i32 0
  %RAX.i553 = bitcast %union.anon* %4582 to i64*
  %4583 = load i64, i64* %PC.i552
  %4584 = add i64 %4583, 8
  store i64 %4584, i64* %PC.i552
  %4585 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4585, i64* %RAX.i553, align 8
  store %struct.Memory* %loadMem_426142, %struct.Memory** %MEMORY
  %loadMem_42614a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4587 = getelementptr inbounds %struct.GPR, %struct.GPR* %4586, i32 0, i32 33
  %4588 = getelementptr inbounds %struct.Reg, %struct.Reg* %4587, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %4588 to i64*
  %4589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4590 = getelementptr inbounds %struct.GPR, %struct.GPR* %4589, i32 0, i32 1
  %4591 = getelementptr inbounds %struct.Reg, %struct.Reg* %4590, i32 0, i32 0
  %RAX.i551 = bitcast %union.anon* %4591 to i64*
  %4592 = load i64, i64* %RAX.i551
  %4593 = add i64 %4592, 24
  %4594 = load i64, i64* %PC.i550
  %4595 = add i64 %4594, 4
  store i64 %4595, i64* %PC.i550
  %4596 = inttoptr i64 %4593 to i32*
  %4597 = load i32, i32* %4596
  %4598 = sub i32 %4597, 3
  %4599 = icmp ult i32 %4597, 3
  %4600 = zext i1 %4599 to i8
  %4601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4600, i8* %4601, align 1
  %4602 = and i32 %4598, 255
  %4603 = call i32 @llvm.ctpop.i32(i32 %4602)
  %4604 = trunc i32 %4603 to i8
  %4605 = and i8 %4604, 1
  %4606 = xor i8 %4605, 1
  %4607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4606, i8* %4607, align 1
  %4608 = xor i32 %4597, 3
  %4609 = xor i32 %4608, %4598
  %4610 = lshr i32 %4609, 4
  %4611 = trunc i32 %4610 to i8
  %4612 = and i8 %4611, 1
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4612, i8* %4613, align 1
  %4614 = icmp eq i32 %4598, 0
  %4615 = zext i1 %4614 to i8
  %4616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4615, i8* %4616, align 1
  %4617 = lshr i32 %4598, 31
  %4618 = trunc i32 %4617 to i8
  %4619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4618, i8* %4619, align 1
  %4620 = lshr i32 %4597, 31
  %4621 = xor i32 %4617, %4620
  %4622 = add i32 %4621, %4620
  %4623 = icmp eq i32 %4622, 2
  %4624 = zext i1 %4623 to i8
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4624, i8* %4625, align 1
  store %struct.Memory* %loadMem_42614a, %struct.Memory** %MEMORY
  %loadMem_42614e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4627 = getelementptr inbounds %struct.GPR, %struct.GPR* %4626, i32 0, i32 33
  %4628 = getelementptr inbounds %struct.Reg, %struct.Reg* %4627, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %4628 to i64*
  %4629 = load i64, i64* %PC.i549
  %4630 = add i64 %4629, 350
  %4631 = load i64, i64* %PC.i549
  %4632 = add i64 %4631, 6
  %4633 = load i64, i64* %PC.i549
  %4634 = add i64 %4633, 6
  store i64 %4634, i64* %PC.i549
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4636 = load i8, i8* %4635, align 1
  %4637 = icmp eq i8 %4636, 0
  %4638 = zext i1 %4637 to i8
  store i8 %4638, i8* %BRANCH_TAKEN, align 1
  %4639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4640 = select i1 %4637, i64 %4630, i64 %4632
  store i64 %4640, i64* %4639, align 8
  store %struct.Memory* %loadMem_42614e, %struct.Memory** %MEMORY
  %loadBr_42614e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42614e = icmp eq i8 %loadBr_42614e, 1
  br i1 %cmpBr_42614e, label %block_.L_4262ac, label %block_.L_426154

block_.L_426154:                                  ; preds = %block_426142, %block_426130, %block_.L_42611e
  %loadMem_426154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4642 = getelementptr inbounds %struct.GPR, %struct.GPR* %4641, i32 0, i32 33
  %4643 = getelementptr inbounds %struct.Reg, %struct.Reg* %4642, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %4643 to i64*
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4645 = getelementptr inbounds %struct.GPR, %struct.GPR* %4644, i32 0, i32 1
  %4646 = getelementptr inbounds %struct.Reg, %struct.Reg* %4645, i32 0, i32 0
  %RAX.i548 = bitcast %union.anon* %4646 to i64*
  %4647 = load i64, i64* %PC.i547
  %4648 = add i64 %4647, 8
  store i64 %4648, i64* %PC.i547
  %4649 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4649, i64* %RAX.i548, align 8
  store %struct.Memory* %loadMem_426154, %struct.Memory** %MEMORY
  %loadMem_42615c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4651 = getelementptr inbounds %struct.GPR, %struct.GPR* %4650, i32 0, i32 33
  %4652 = getelementptr inbounds %struct.Reg, %struct.Reg* %4651, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %4652 to i64*
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4654 = getelementptr inbounds %struct.GPR, %struct.GPR* %4653, i32 0, i32 1
  %4655 = getelementptr inbounds %struct.Reg, %struct.Reg* %4654, i32 0, i32 0
  %RAX.i546 = bitcast %union.anon* %4655 to i64*
  %4656 = load i64, i64* %RAX.i546
  %4657 = add i64 %4656, 24
  %4658 = load i64, i64* %PC.i545
  %4659 = add i64 %4658, 4
  store i64 %4659, i64* %PC.i545
  %4660 = inttoptr i64 %4657 to i32*
  %4661 = load i32, i32* %4660
  %4662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4662, align 1
  %4663 = and i32 %4661, 255
  %4664 = call i32 @llvm.ctpop.i32(i32 %4663)
  %4665 = trunc i32 %4664 to i8
  %4666 = and i8 %4665, 1
  %4667 = xor i8 %4666, 1
  %4668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4667, i8* %4668, align 1
  %4669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4669, align 1
  %4670 = icmp eq i32 %4661, 0
  %4671 = zext i1 %4670 to i8
  %4672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4671, i8* %4672, align 1
  %4673 = lshr i32 %4661, 31
  %4674 = trunc i32 %4673 to i8
  %4675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4674, i8* %4675, align 1
  %4676 = lshr i32 %4661, 31
  %4677 = xor i32 %4673, %4676
  %4678 = add i32 %4677, %4676
  %4679 = icmp eq i32 %4678, 2
  %4680 = zext i1 %4679 to i8
  %4681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4680, i8* %4681, align 1
  store %struct.Memory* %loadMem_42615c, %struct.Memory** %MEMORY
  %loadMem_426160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4683 = getelementptr inbounds %struct.GPR, %struct.GPR* %4682, i32 0, i32 33
  %4684 = getelementptr inbounds %struct.Reg, %struct.Reg* %4683, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %4684 to i64*
  %4685 = load i64, i64* %PC.i544
  %4686 = add i64 %4685, 24
  %4687 = load i64, i64* %PC.i544
  %4688 = add i64 %4687, 6
  %4689 = load i64, i64* %PC.i544
  %4690 = add i64 %4689, 6
  store i64 %4690, i64* %PC.i544
  %4691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4692 = load i8, i8* %4691, align 1
  store i8 %4692, i8* %BRANCH_TAKEN, align 1
  %4693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4694 = icmp ne i8 %4692, 0
  %4695 = select i1 %4694, i64 %4686, i64 %4688
  store i64 %4695, i64* %4693, align 8
  store %struct.Memory* %loadMem_426160, %struct.Memory** %MEMORY
  %loadBr_426160 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_426160 = icmp eq i8 %loadBr_426160, 1
  br i1 %cmpBr_426160, label %block_.L_426178, label %block_426166

block_426166:                                     ; preds = %block_.L_426154
  %loadMem_426166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4697 = getelementptr inbounds %struct.GPR, %struct.GPR* %4696, i32 0, i32 33
  %4698 = getelementptr inbounds %struct.Reg, %struct.Reg* %4697, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %4698 to i64*
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4700 = getelementptr inbounds %struct.GPR, %struct.GPR* %4699, i32 0, i32 1
  %4701 = getelementptr inbounds %struct.Reg, %struct.Reg* %4700, i32 0, i32 0
  %RAX.i543 = bitcast %union.anon* %4701 to i64*
  %4702 = load i64, i64* %PC.i542
  %4703 = add i64 %4702, 8
  store i64 %4703, i64* %PC.i542
  %4704 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4704, i64* %RAX.i543, align 8
  store %struct.Memory* %loadMem_426166, %struct.Memory** %MEMORY
  %loadMem_42616e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4706 = getelementptr inbounds %struct.GPR, %struct.GPR* %4705, i32 0, i32 33
  %4707 = getelementptr inbounds %struct.Reg, %struct.Reg* %4706, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %4707 to i64*
  %4708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4709 = getelementptr inbounds %struct.GPR, %struct.GPR* %4708, i32 0, i32 1
  %4710 = getelementptr inbounds %struct.Reg, %struct.Reg* %4709, i32 0, i32 0
  %RAX.i541 = bitcast %union.anon* %4710 to i64*
  %4711 = load i64, i64* %RAX.i541
  %4712 = add i64 %4711, 24
  %4713 = load i64, i64* %PC.i540
  %4714 = add i64 %4713, 4
  store i64 %4714, i64* %PC.i540
  %4715 = inttoptr i64 %4712 to i32*
  %4716 = load i32, i32* %4715
  %4717 = sub i32 %4716, 3
  %4718 = icmp ult i32 %4716, 3
  %4719 = zext i1 %4718 to i8
  %4720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4719, i8* %4720, align 1
  %4721 = and i32 %4717, 255
  %4722 = call i32 @llvm.ctpop.i32(i32 %4721)
  %4723 = trunc i32 %4722 to i8
  %4724 = and i8 %4723, 1
  %4725 = xor i8 %4724, 1
  %4726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4725, i8* %4726, align 1
  %4727 = xor i32 %4716, 3
  %4728 = xor i32 %4727, %4717
  %4729 = lshr i32 %4728, 4
  %4730 = trunc i32 %4729 to i8
  %4731 = and i8 %4730, 1
  %4732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4731, i8* %4732, align 1
  %4733 = icmp eq i32 %4717, 0
  %4734 = zext i1 %4733 to i8
  %4735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4734, i8* %4735, align 1
  %4736 = lshr i32 %4717, 31
  %4737 = trunc i32 %4736 to i8
  %4738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4737, i8* %4738, align 1
  %4739 = lshr i32 %4716, 31
  %4740 = xor i32 %4736, %4739
  %4741 = add i32 %4740, %4739
  %4742 = icmp eq i32 %4741, 2
  %4743 = zext i1 %4742 to i8
  %4744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4743, i8* %4744, align 1
  store %struct.Memory* %loadMem_42616e, %struct.Memory** %MEMORY
  %loadMem_426172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4746 = getelementptr inbounds %struct.GPR, %struct.GPR* %4745, i32 0, i32 33
  %4747 = getelementptr inbounds %struct.Reg, %struct.Reg* %4746, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %4747 to i64*
  %4748 = load i64, i64* %PC.i539
  %4749 = add i64 %4748, 57
  %4750 = load i64, i64* %PC.i539
  %4751 = add i64 %4750, 6
  %4752 = load i64, i64* %PC.i539
  %4753 = add i64 %4752, 6
  store i64 %4753, i64* %PC.i539
  %4754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4755 = load i8, i8* %4754, align 1
  %4756 = icmp eq i8 %4755, 0
  %4757 = zext i1 %4756 to i8
  store i8 %4757, i8* %BRANCH_TAKEN, align 1
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4759 = select i1 %4756, i64 %4749, i64 %4751
  store i64 %4759, i64* %4758, align 8
  store %struct.Memory* %loadMem_426172, %struct.Memory** %MEMORY
  %loadBr_426172 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_426172 = icmp eq i8 %loadBr_426172, 1
  br i1 %cmpBr_426172, label %block_.L_4261ab, label %block_.L_426178

block_.L_426178:                                  ; preds = %block_426166, %block_.L_426154
  %loadMem_426178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4761 = getelementptr inbounds %struct.GPR, %struct.GPR* %4760, i32 0, i32 33
  %4762 = getelementptr inbounds %struct.Reg, %struct.Reg* %4761, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %4762 to i64*
  %4763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4764 = getelementptr inbounds %struct.GPR, %struct.GPR* %4763, i32 0, i32 1
  %4765 = getelementptr inbounds %struct.Reg, %struct.Reg* %4764, i32 0, i32 0
  %EAX.i537 = bitcast %union.anon* %4765 to i32*
  %4766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4767 = getelementptr inbounds %struct.GPR, %struct.GPR* %4766, i32 0, i32 1
  %4768 = getelementptr inbounds %struct.Reg, %struct.Reg* %4767, i32 0, i32 0
  %RAX.i538 = bitcast %union.anon* %4768 to i64*
  %4769 = load i64, i64* %RAX.i538
  %4770 = load i32, i32* %EAX.i537
  %4771 = zext i32 %4770 to i64
  %4772 = load i64, i64* %PC.i536
  %4773 = add i64 %4772, 2
  store i64 %4773, i64* %PC.i536
  %4774 = xor i64 %4771, %4769
  %4775 = trunc i64 %4774 to i32
  %4776 = and i64 %4774, 4294967295
  store i64 %4776, i64* %RAX.i538, align 8
  %4777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4777, align 1
  %4778 = and i32 %4775, 255
  %4779 = call i32 @llvm.ctpop.i32(i32 %4778)
  %4780 = trunc i32 %4779 to i8
  %4781 = and i8 %4780, 1
  %4782 = xor i8 %4781, 1
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4782, i8* %4783, align 1
  %4784 = icmp eq i32 %4775, 0
  %4785 = zext i1 %4784 to i8
  %4786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4785, i8* %4786, align 1
  %4787 = lshr i32 %4775, 31
  %4788 = trunc i32 %4787 to i8
  %4789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4788, i8* %4789, align 1
  %4790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4790, align 1
  %4791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4791, align 1
  store %struct.Memory* %loadMem_426178, %struct.Memory** %MEMORY
  %loadMem_42617a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4793 = getelementptr inbounds %struct.GPR, %struct.GPR* %4792, i32 0, i32 33
  %4794 = getelementptr inbounds %struct.Reg, %struct.Reg* %4793, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %4794 to i64*
  %4795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4796 = getelementptr inbounds %struct.GPR, %struct.GPR* %4795, i32 0, i32 5
  %4797 = getelementptr inbounds %struct.Reg, %struct.Reg* %4796, i32 0, i32 0
  %RCX.i535 = bitcast %union.anon* %4797 to i64*
  %4798 = load i64, i64* %PC.i534
  %4799 = add i64 %4798, 5
  store i64 %4799, i64* %PC.i534
  store i64 1, i64* %RCX.i535, align 8
  store %struct.Memory* %loadMem_42617a, %struct.Memory** %MEMORY
  %loadMem_42617f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4801 = getelementptr inbounds %struct.GPR, %struct.GPR* %4800, i32 0, i32 33
  %4802 = getelementptr inbounds %struct.Reg, %struct.Reg* %4801, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %4802 to i64*
  %4803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4804 = getelementptr inbounds %struct.GPR, %struct.GPR* %4803, i32 0, i32 7
  %4805 = getelementptr inbounds %struct.Reg, %struct.Reg* %4804, i32 0, i32 0
  %RDX.i533 = bitcast %union.anon* %4805 to i64*
  %4806 = load i64, i64* %PC.i532
  %4807 = add i64 %4806, 8
  store i64 %4807, i64* %PC.i532
  %4808 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4808, i64* %RDX.i533, align 8
  store %struct.Memory* %loadMem_42617f, %struct.Memory** %MEMORY
  %loadMem_426187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4810 = getelementptr inbounds %struct.GPR, %struct.GPR* %4809, i32 0, i32 33
  %4811 = getelementptr inbounds %struct.Reg, %struct.Reg* %4810, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %4811 to i64*
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4813 = getelementptr inbounds %struct.GPR, %struct.GPR* %4812, i32 0, i32 7
  %4814 = getelementptr inbounds %struct.Reg, %struct.Reg* %4813, i32 0, i32 0
  %RDX.i530 = bitcast %union.anon* %4814 to i64*
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4816 = getelementptr inbounds %struct.GPR, %struct.GPR* %4815, i32 0, i32 9
  %4817 = getelementptr inbounds %struct.Reg, %struct.Reg* %4816, i32 0, i32 0
  %RSI.i531 = bitcast %union.anon* %4817 to i64*
  %4818 = load i64, i64* %RDX.i530
  %4819 = add i64 %4818, 72000
  %4820 = load i64, i64* %PC.i529
  %4821 = add i64 %4820, 6
  store i64 %4821, i64* %PC.i529
  %4822 = inttoptr i64 %4819 to i32*
  %4823 = load i32, i32* %4822
  %4824 = zext i32 %4823 to i64
  store i64 %4824, i64* %RSI.i531, align 8
  store %struct.Memory* %loadMem_426187, %struct.Memory** %MEMORY
  %loadMem_42618d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4826 = getelementptr inbounds %struct.GPR, %struct.GPR* %4825, i32 0, i32 33
  %4827 = getelementptr inbounds %struct.Reg, %struct.Reg* %4826, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %4827 to i64*
  %4828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4829 = getelementptr inbounds %struct.GPR, %struct.GPR* %4828, i32 0, i32 7
  %4830 = getelementptr inbounds %struct.Reg, %struct.Reg* %4829, i32 0, i32 0
  %RDX.i528 = bitcast %union.anon* %4830 to i64*
  %4831 = load i64, i64* %PC.i527
  %4832 = add i64 %4831, 8
  store i64 %4832, i64* %PC.i527
  %4833 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %4833, i64* %RDX.i528, align 8
  store %struct.Memory* %loadMem_42618d, %struct.Memory** %MEMORY
  %loadMem_426195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4835 = getelementptr inbounds %struct.GPR, %struct.GPR* %4834, i32 0, i32 33
  %4836 = getelementptr inbounds %struct.Reg, %struct.Reg* %4835, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %4836 to i64*
  %4837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4838 = getelementptr inbounds %struct.GPR, %struct.GPR* %4837, i32 0, i32 7
  %4839 = getelementptr inbounds %struct.Reg, %struct.Reg* %4838, i32 0, i32 0
  %RDX.i525 = bitcast %union.anon* %4839 to i64*
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4841 = getelementptr inbounds %struct.GPR, %struct.GPR* %4840, i32 0, i32 11
  %4842 = getelementptr inbounds %struct.Reg, %struct.Reg* %4841, i32 0, i32 0
  %RDI.i526 = bitcast %union.anon* %4842 to i64*
  %4843 = load i64, i64* %RDX.i525
  %4844 = add i64 %4843, 184
  %4845 = load i64, i64* %PC.i524
  %4846 = add i64 %4845, 6
  store i64 %4846, i64* %PC.i524
  %4847 = inttoptr i64 %4844 to i32*
  %4848 = load i32, i32* %4847
  %4849 = zext i32 %4848 to i64
  store i64 %4849, i64* %RDI.i526, align 8
  store %struct.Memory* %loadMem_426195, %struct.Memory** %MEMORY
  %loadMem_42619b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4851 = getelementptr inbounds %struct.GPR, %struct.GPR* %4850, i32 0, i32 33
  %4852 = getelementptr inbounds %struct.Reg, %struct.Reg* %4851, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %4852 to i64*
  %4853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4854 = getelementptr inbounds %struct.GPR, %struct.GPR* %4853, i32 0, i32 11
  %4855 = getelementptr inbounds %struct.Reg, %struct.Reg* %4854, i32 0, i32 0
  %RDI.i523 = bitcast %union.anon* %4855 to i64*
  %4856 = load i64, i64* %RDI.i523
  %4857 = load i64, i64* %PC.i522
  %4858 = add i64 %4857, 3
  store i64 %4858, i64* %PC.i522
  %4859 = trunc i64 %4856 to i32
  %4860 = add i32 1, %4859
  %4861 = zext i32 %4860 to i64
  store i64 %4861, i64* %RDI.i523, align 8
  %4862 = icmp ult i32 %4860, %4859
  %4863 = icmp ult i32 %4860, 1
  %4864 = or i1 %4862, %4863
  %4865 = zext i1 %4864 to i8
  %4866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4865, i8* %4866, align 1
  %4867 = and i32 %4860, 255
  %4868 = call i32 @llvm.ctpop.i32(i32 %4867)
  %4869 = trunc i32 %4868 to i8
  %4870 = and i8 %4869, 1
  %4871 = xor i8 %4870, 1
  %4872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4871, i8* %4872, align 1
  %4873 = xor i64 1, %4856
  %4874 = trunc i64 %4873 to i32
  %4875 = xor i32 %4874, %4860
  %4876 = lshr i32 %4875, 4
  %4877 = trunc i32 %4876 to i8
  %4878 = and i8 %4877, 1
  %4879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4878, i8* %4879, align 1
  %4880 = icmp eq i32 %4860, 0
  %4881 = zext i1 %4880 to i8
  %4882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4881, i8* %4882, align 1
  %4883 = lshr i32 %4860, 31
  %4884 = trunc i32 %4883 to i8
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4884, i8* %4885, align 1
  %4886 = lshr i32 %4859, 31
  %4887 = xor i32 %4883, %4886
  %4888 = add i32 %4887, %4883
  %4889 = icmp eq i32 %4888, 2
  %4890 = zext i1 %4889 to i8
  %4891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4890, i8* %4891, align 1
  store %struct.Memory* %loadMem_42619b, %struct.Memory** %MEMORY
  %loadMem_42619e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4893 = getelementptr inbounds %struct.GPR, %struct.GPR* %4892, i32 0, i32 33
  %4894 = getelementptr inbounds %struct.Reg, %struct.Reg* %4893, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %4894 to i64*
  %4895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4896 = getelementptr inbounds %struct.GPR, %struct.GPR* %4895, i32 0, i32 9
  %4897 = getelementptr inbounds %struct.Reg, %struct.Reg* %4896, i32 0, i32 0
  %ESI.i521 = bitcast %union.anon* %4897 to i32*
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4899 = getelementptr inbounds %struct.GPR, %struct.GPR* %4898, i32 0, i32 11
  %4900 = getelementptr inbounds %struct.Reg, %struct.Reg* %4899, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %4900 to i32*
  %4901 = load i32, i32* %ESI.i521
  %4902 = zext i32 %4901 to i64
  %4903 = load i32, i32* %EDI.i
  %4904 = zext i32 %4903 to i64
  %4905 = load i64, i64* %PC.i520
  %4906 = add i64 %4905, 2
  store i64 %4906, i64* %PC.i520
  %4907 = sub i32 %4901, %4903
  %4908 = icmp ult i32 %4901, %4903
  %4909 = zext i1 %4908 to i8
  %4910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4909, i8* %4910, align 1
  %4911 = and i32 %4907, 255
  %4912 = call i32 @llvm.ctpop.i32(i32 %4911)
  %4913 = trunc i32 %4912 to i8
  %4914 = and i8 %4913, 1
  %4915 = xor i8 %4914, 1
  %4916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4915, i8* %4916, align 1
  %4917 = xor i64 %4904, %4902
  %4918 = trunc i64 %4917 to i32
  %4919 = xor i32 %4918, %4907
  %4920 = lshr i32 %4919, 4
  %4921 = trunc i32 %4920 to i8
  %4922 = and i8 %4921, 1
  %4923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4922, i8* %4923, align 1
  %4924 = icmp eq i32 %4907, 0
  %4925 = zext i1 %4924 to i8
  %4926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4925, i8* %4926, align 1
  %4927 = lshr i32 %4907, 31
  %4928 = trunc i32 %4927 to i8
  %4929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4928, i8* %4929, align 1
  %4930 = lshr i32 %4901, 31
  %4931 = lshr i32 %4903, 31
  %4932 = xor i32 %4931, %4930
  %4933 = xor i32 %4927, %4930
  %4934 = add i32 %4933, %4932
  %4935 = icmp eq i32 %4934, 2
  %4936 = zext i1 %4935 to i8
  %4937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4936, i8* %4937, align 1
  store %struct.Memory* %loadMem_42619e, %struct.Memory** %MEMORY
  %loadMem_4261a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4939 = getelementptr inbounds %struct.GPR, %struct.GPR* %4938, i32 0, i32 33
  %4940 = getelementptr inbounds %struct.Reg, %struct.Reg* %4939, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %4940 to i64*
  %4941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4942 = getelementptr inbounds %struct.GPR, %struct.GPR* %4941, i32 0, i32 5
  %4943 = getelementptr inbounds %struct.Reg, %struct.Reg* %4942, i32 0, i32 0
  %ECX.i518 = bitcast %union.anon* %4943 to i32*
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4945 = getelementptr inbounds %struct.GPR, %struct.GPR* %4944, i32 0, i32 1
  %4946 = getelementptr inbounds %struct.Reg, %struct.Reg* %4945, i32 0, i32 0
  %RAX.i519 = bitcast %union.anon* %4946 to i64*
  %4947 = load i32, i32* %ECX.i518
  %4948 = zext i32 %4947 to i64
  %4949 = load i64, i64* %PC.i517
  %4950 = add i64 %4949, 3
  store i64 %4950, i64* %PC.i517
  %4951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4952 = load i8, i8* %4951, align 1
  %4953 = icmp eq i8 %4952, 0
  %4954 = load i64, i64* %RAX.i519, align 8
  %4955 = select i1 %4953, i64 %4948, i64 %4954
  %4956 = and i64 %4955, 4294967295
  store i64 %4956, i64* %RAX.i519, align 8
  store %struct.Memory* %loadMem_4261a0, %struct.Memory** %MEMORY
  %loadMem_4261a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4958 = getelementptr inbounds %struct.GPR, %struct.GPR* %4957, i32 0, i32 33
  %4959 = getelementptr inbounds %struct.Reg, %struct.Reg* %4958, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %4959 to i64*
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4961 = getelementptr inbounds %struct.GPR, %struct.GPR* %4960, i32 0, i32 1
  %4962 = getelementptr inbounds %struct.Reg, %struct.Reg* %4961, i32 0, i32 0
  %EAX.i515 = bitcast %union.anon* %4962 to i32*
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4964 = getelementptr inbounds %struct.GPR, %struct.GPR* %4963, i32 0, i32 15
  %4965 = getelementptr inbounds %struct.Reg, %struct.Reg* %4964, i32 0, i32 0
  %RBP.i516 = bitcast %union.anon* %4965 to i64*
  %4966 = load i64, i64* %RBP.i516
  %4967 = sub i64 %4966, 48
  %4968 = load i32, i32* %EAX.i515
  %4969 = zext i32 %4968 to i64
  %4970 = load i64, i64* %PC.i514
  %4971 = add i64 %4970, 3
  store i64 %4971, i64* %PC.i514
  %4972 = inttoptr i64 %4967 to i32*
  store i32 %4968, i32* %4972
  store %struct.Memory* %loadMem_4261a3, %struct.Memory** %MEMORY
  %loadMem_4261a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4974 = getelementptr inbounds %struct.GPR, %struct.GPR* %4973, i32 0, i32 33
  %4975 = getelementptr inbounds %struct.Reg, %struct.Reg* %4974, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %4975 to i64*
  %4976 = load i64, i64* %PC.i513
  %4977 = add i64 %4976, 108
  %4978 = load i64, i64* %PC.i513
  %4979 = add i64 %4978, 5
  store i64 %4979, i64* %PC.i513
  %4980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4977, i64* %4980, align 8
  store %struct.Memory* %loadMem_4261a6, %struct.Memory** %MEMORY
  br label %block_.L_426212

block_.L_4261ab:                                  ; preds = %block_426166
  %loadMem_4261ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %4981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4982 = getelementptr inbounds %struct.GPR, %struct.GPR* %4981, i32 0, i32 33
  %4983 = getelementptr inbounds %struct.Reg, %struct.Reg* %4982, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %4983 to i64*
  %4984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4985 = getelementptr inbounds %struct.GPR, %struct.GPR* %4984, i32 0, i32 1
  %4986 = getelementptr inbounds %struct.Reg, %struct.Reg* %4985, i32 0, i32 0
  %4987 = bitcast %union.anon* %4986 to %struct.anon.2*
  %AL.i512 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4987, i32 0, i32 0
  %4988 = load i64, i64* %PC.i511
  %4989 = add i64 %4988, 2
  store i64 %4989, i64* %PC.i511
  store i8 1, i8* %AL.i512, align 1
  store %struct.Memory* %loadMem_4261ab, %struct.Memory** %MEMORY
  %loadMem_4261ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %4990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4991 = getelementptr inbounds %struct.GPR, %struct.GPR* %4990, i32 0, i32 33
  %4992 = getelementptr inbounds %struct.Reg, %struct.Reg* %4991, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %4992 to i64*
  %4993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4994 = getelementptr inbounds %struct.GPR, %struct.GPR* %4993, i32 0, i32 5
  %4995 = getelementptr inbounds %struct.Reg, %struct.Reg* %4994, i32 0, i32 0
  %RCX.i510 = bitcast %union.anon* %4995 to i64*
  %4996 = load i64, i64* %PC.i509
  %4997 = add i64 %4996, 8
  store i64 %4997, i64* %PC.i509
  %4998 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4998, i64* %RCX.i510, align 8
  store %struct.Memory* %loadMem_4261ad, %struct.Memory** %MEMORY
  %loadMem_4261b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5000 = getelementptr inbounds %struct.GPR, %struct.GPR* %4999, i32 0, i32 33
  %5001 = getelementptr inbounds %struct.Reg, %struct.Reg* %5000, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %5001 to i64*
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5003 = getelementptr inbounds %struct.GPR, %struct.GPR* %5002, i32 0, i32 5
  %5004 = getelementptr inbounds %struct.Reg, %struct.Reg* %5003, i32 0, i32 0
  %RCX.i507 = bitcast %union.anon* %5004 to i64*
  %5005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5006 = getelementptr inbounds %struct.GPR, %struct.GPR* %5005, i32 0, i32 7
  %5007 = getelementptr inbounds %struct.Reg, %struct.Reg* %5006, i32 0, i32 0
  %RDX.i508 = bitcast %union.anon* %5007 to i64*
  %5008 = load i64, i64* %RCX.i507
  %5009 = add i64 %5008, 72000
  %5010 = load i64, i64* %PC.i506
  %5011 = add i64 %5010, 6
  store i64 %5011, i64* %PC.i506
  %5012 = inttoptr i64 %5009 to i32*
  %5013 = load i32, i32* %5012
  %5014 = zext i32 %5013 to i64
  store i64 %5014, i64* %RDX.i508, align 8
  store %struct.Memory* %loadMem_4261b5, %struct.Memory** %MEMORY
  %loadMem_4261bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5016 = getelementptr inbounds %struct.GPR, %struct.GPR* %5015, i32 0, i32 33
  %5017 = getelementptr inbounds %struct.Reg, %struct.Reg* %5016, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %5017 to i64*
  %5018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5019 = getelementptr inbounds %struct.GPR, %struct.GPR* %5018, i32 0, i32 5
  %5020 = getelementptr inbounds %struct.Reg, %struct.Reg* %5019, i32 0, i32 0
  %RCX.i505 = bitcast %union.anon* %5020 to i64*
  %5021 = load i64, i64* %PC.i504
  %5022 = add i64 %5021, 8
  store i64 %5022, i64* %PC.i504
  %5023 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %5023, i64* %RCX.i505, align 8
  store %struct.Memory* %loadMem_4261bb, %struct.Memory** %MEMORY
  %loadMem_4261c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5025 = getelementptr inbounds %struct.GPR, %struct.GPR* %5024, i32 0, i32 33
  %5026 = getelementptr inbounds %struct.Reg, %struct.Reg* %5025, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %5026 to i64*
  %5027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5028 = getelementptr inbounds %struct.GPR, %struct.GPR* %5027, i32 0, i32 5
  %5029 = getelementptr inbounds %struct.Reg, %struct.Reg* %5028, i32 0, i32 0
  %RCX.i502 = bitcast %union.anon* %5029 to i64*
  %5030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5031 = getelementptr inbounds %struct.GPR, %struct.GPR* %5030, i32 0, i32 9
  %5032 = getelementptr inbounds %struct.Reg, %struct.Reg* %5031, i32 0, i32 0
  %RSI.i503 = bitcast %union.anon* %5032 to i64*
  %5033 = load i64, i64* %RCX.i502
  %5034 = add i64 %5033, 184
  %5035 = load i64, i64* %PC.i501
  %5036 = add i64 %5035, 6
  store i64 %5036, i64* %PC.i501
  %5037 = inttoptr i64 %5034 to i32*
  %5038 = load i32, i32* %5037
  %5039 = zext i32 %5038 to i64
  store i64 %5039, i64* %RSI.i503, align 8
  store %struct.Memory* %loadMem_4261c3, %struct.Memory** %MEMORY
  %loadMem_4261c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5041 = getelementptr inbounds %struct.GPR, %struct.GPR* %5040, i32 0, i32 33
  %5042 = getelementptr inbounds %struct.Reg, %struct.Reg* %5041, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %5042 to i64*
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5044 = getelementptr inbounds %struct.GPR, %struct.GPR* %5043, i32 0, i32 9
  %5045 = getelementptr inbounds %struct.Reg, %struct.Reg* %5044, i32 0, i32 0
  %RSI.i500 = bitcast %union.anon* %5045 to i64*
  %5046 = load i64, i64* %RSI.i500
  %5047 = load i64, i64* %PC.i499
  %5048 = add i64 %5047, 3
  store i64 %5048, i64* %PC.i499
  %5049 = trunc i64 %5046 to i32
  %5050 = add i32 1, %5049
  %5051 = zext i32 %5050 to i64
  store i64 %5051, i64* %RSI.i500, align 8
  %5052 = icmp ult i32 %5050, %5049
  %5053 = icmp ult i32 %5050, 1
  %5054 = or i1 %5052, %5053
  %5055 = zext i1 %5054 to i8
  %5056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5055, i8* %5056, align 1
  %5057 = and i32 %5050, 255
  %5058 = call i32 @llvm.ctpop.i32(i32 %5057)
  %5059 = trunc i32 %5058 to i8
  %5060 = and i8 %5059, 1
  %5061 = xor i8 %5060, 1
  %5062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5061, i8* %5062, align 1
  %5063 = xor i64 1, %5046
  %5064 = trunc i64 %5063 to i32
  %5065 = xor i32 %5064, %5050
  %5066 = lshr i32 %5065, 4
  %5067 = trunc i32 %5066 to i8
  %5068 = and i8 %5067, 1
  %5069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5068, i8* %5069, align 1
  %5070 = icmp eq i32 %5050, 0
  %5071 = zext i1 %5070 to i8
  %5072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5071, i8* %5072, align 1
  %5073 = lshr i32 %5050, 31
  %5074 = trunc i32 %5073 to i8
  %5075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5074, i8* %5075, align 1
  %5076 = lshr i32 %5049, 31
  %5077 = xor i32 %5073, %5076
  %5078 = add i32 %5077, %5073
  %5079 = icmp eq i32 %5078, 2
  %5080 = zext i1 %5079 to i8
  %5081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5080, i8* %5081, align 1
  store %struct.Memory* %loadMem_4261c9, %struct.Memory** %MEMORY
  %loadMem_4261cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5083 = getelementptr inbounds %struct.GPR, %struct.GPR* %5082, i32 0, i32 33
  %5084 = getelementptr inbounds %struct.Reg, %struct.Reg* %5083, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %5084 to i64*
  %5085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5086 = getelementptr inbounds %struct.GPR, %struct.GPR* %5085, i32 0, i32 7
  %5087 = getelementptr inbounds %struct.Reg, %struct.Reg* %5086, i32 0, i32 0
  %EDX.i497 = bitcast %union.anon* %5087 to i32*
  %5088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5089 = getelementptr inbounds %struct.GPR, %struct.GPR* %5088, i32 0, i32 9
  %5090 = getelementptr inbounds %struct.Reg, %struct.Reg* %5089, i32 0, i32 0
  %ESI.i498 = bitcast %union.anon* %5090 to i32*
  %5091 = load i32, i32* %EDX.i497
  %5092 = zext i32 %5091 to i64
  %5093 = load i32, i32* %ESI.i498
  %5094 = zext i32 %5093 to i64
  %5095 = load i64, i64* %PC.i496
  %5096 = add i64 %5095, 2
  store i64 %5096, i64* %PC.i496
  %5097 = sub i32 %5091, %5093
  %5098 = icmp ult i32 %5091, %5093
  %5099 = zext i1 %5098 to i8
  %5100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5099, i8* %5100, align 1
  %5101 = and i32 %5097, 255
  %5102 = call i32 @llvm.ctpop.i32(i32 %5101)
  %5103 = trunc i32 %5102 to i8
  %5104 = and i8 %5103, 1
  %5105 = xor i8 %5104, 1
  %5106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5105, i8* %5106, align 1
  %5107 = xor i64 %5094, %5092
  %5108 = trunc i64 %5107 to i32
  %5109 = xor i32 %5108, %5097
  %5110 = lshr i32 %5109, 4
  %5111 = trunc i32 %5110 to i8
  %5112 = and i8 %5111, 1
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5112, i8* %5113, align 1
  %5114 = icmp eq i32 %5097, 0
  %5115 = zext i1 %5114 to i8
  %5116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5115, i8* %5116, align 1
  %5117 = lshr i32 %5097, 31
  %5118 = trunc i32 %5117 to i8
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5118, i8* %5119, align 1
  %5120 = lshr i32 %5091, 31
  %5121 = lshr i32 %5093, 31
  %5122 = xor i32 %5121, %5120
  %5123 = xor i32 %5117, %5120
  %5124 = add i32 %5123, %5122
  %5125 = icmp eq i32 %5124, 2
  %5126 = zext i1 %5125 to i8
  %5127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5126, i8* %5127, align 1
  store %struct.Memory* %loadMem_4261cc, %struct.Memory** %MEMORY
  %loadMem_4261ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %5128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5129 = getelementptr inbounds %struct.GPR, %struct.GPR* %5128, i32 0, i32 33
  %5130 = getelementptr inbounds %struct.Reg, %struct.Reg* %5129, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %5130 to i64*
  %5131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5132 = getelementptr inbounds %struct.GPR, %struct.GPR* %5131, i32 0, i32 1
  %5133 = getelementptr inbounds %struct.Reg, %struct.Reg* %5132, i32 0, i32 0
  %5134 = bitcast %union.anon* %5133 to %struct.anon.2*
  %AL.i494 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5134, i32 0, i32 0
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5136 = getelementptr inbounds %struct.GPR, %struct.GPR* %5135, i32 0, i32 15
  %5137 = getelementptr inbounds %struct.Reg, %struct.Reg* %5136, i32 0, i32 0
  %RBP.i495 = bitcast %union.anon* %5137 to i64*
  %5138 = load i64, i64* %RBP.i495
  %5139 = sub i64 %5138, 57
  %5140 = load i8, i8* %AL.i494
  %5141 = zext i8 %5140 to i64
  %5142 = load i64, i64* %PC.i493
  %5143 = add i64 %5142, 3
  store i64 %5143, i64* %PC.i493
  %5144 = inttoptr i64 %5139 to i8*
  store i8 %5140, i8* %5144
  store %struct.Memory* %loadMem_4261ce, %struct.Memory** %MEMORY
  %loadMem_4261d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5146 = getelementptr inbounds %struct.GPR, %struct.GPR* %5145, i32 0, i32 33
  %5147 = getelementptr inbounds %struct.Reg, %struct.Reg* %5146, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %5147 to i64*
  %5148 = load i64, i64* %PC.i492
  %5149 = add i64 %5148, 47
  %5150 = load i64, i64* %PC.i492
  %5151 = add i64 %5150, 6
  %5152 = load i64, i64* %PC.i492
  %5153 = add i64 %5152, 6
  store i64 %5153, i64* %PC.i492
  %5154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5155 = load i8, i8* %5154, align 1
  %5156 = icmp eq i8 %5155, 0
  %5157 = zext i1 %5156 to i8
  store i8 %5157, i8* %BRANCH_TAKEN, align 1
  %5158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5159 = select i1 %5156, i64 %5149, i64 %5151
  store i64 %5159, i64* %5158, align 8
  store %struct.Memory* %loadMem_4261d1, %struct.Memory** %MEMORY
  %loadBr_4261d1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4261d1 = icmp eq i8 %loadBr_4261d1, 1
  br i1 %cmpBr_4261d1, label %block_.L_426200, label %block_4261d7

block_4261d7:                                     ; preds = %block_.L_4261ab
  %loadMem_4261d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5161 = getelementptr inbounds %struct.GPR, %struct.GPR* %5160, i32 0, i32 33
  %5162 = getelementptr inbounds %struct.Reg, %struct.Reg* %5161, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %5162 to i64*
  %5163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5164 = getelementptr inbounds %struct.GPR, %struct.GPR* %5163, i32 0, i32 1
  %5165 = getelementptr inbounds %struct.Reg, %struct.Reg* %5164, i32 0, i32 0
  %RAX.i491 = bitcast %union.anon* %5165 to i64*
  %5166 = load i64, i64* %PC.i490
  %5167 = add i64 %5166, 8
  store i64 %5167, i64* %PC.i490
  %5168 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5168, i64* %RAX.i491, align 8
  store %struct.Memory* %loadMem_4261d7, %struct.Memory** %MEMORY
  %loadMem_4261df = load %struct.Memory*, %struct.Memory** %MEMORY
  %5169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5170 = getelementptr inbounds %struct.GPR, %struct.GPR* %5169, i32 0, i32 33
  %5171 = getelementptr inbounds %struct.Reg, %struct.Reg* %5170, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %5171 to i64*
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5173 = getelementptr inbounds %struct.GPR, %struct.GPR* %5172, i32 0, i32 1
  %5174 = getelementptr inbounds %struct.Reg, %struct.Reg* %5173, i32 0, i32 0
  %RAX.i488 = bitcast %union.anon* %5174 to i64*
  %5175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5176 = getelementptr inbounds %struct.GPR, %struct.GPR* %5175, i32 0, i32 5
  %5177 = getelementptr inbounds %struct.Reg, %struct.Reg* %5176, i32 0, i32 0
  %RCX.i489 = bitcast %union.anon* %5177 to i64*
  %5178 = load i64, i64* %RAX.i488
  %5179 = add i64 %5178, 72004
  %5180 = load i64, i64* %PC.i487
  %5181 = add i64 %5180, 6
  store i64 %5181, i64* %PC.i487
  %5182 = inttoptr i64 %5179 to i32*
  %5183 = load i32, i32* %5182
  %5184 = zext i32 %5183 to i64
  store i64 %5184, i64* %RCX.i489, align 8
  store %struct.Memory* %loadMem_4261df, %struct.Memory** %MEMORY
  %loadMem_4261e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5186 = getelementptr inbounds %struct.GPR, %struct.GPR* %5185, i32 0, i32 33
  %5187 = getelementptr inbounds %struct.Reg, %struct.Reg* %5186, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %5187 to i64*
  %5188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5189 = getelementptr inbounds %struct.GPR, %struct.GPR* %5188, i32 0, i32 1
  %5190 = getelementptr inbounds %struct.Reg, %struct.Reg* %5189, i32 0, i32 0
  %RAX.i486 = bitcast %union.anon* %5190 to i64*
  %5191 = load i64, i64* %PC.i485
  %5192 = add i64 %5191, 8
  store i64 %5192, i64* %PC.i485
  %5193 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %5193, i64* %RAX.i486, align 8
  store %struct.Memory* %loadMem_4261e5, %struct.Memory** %MEMORY
  %loadMem_4261ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %5194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5195 = getelementptr inbounds %struct.GPR, %struct.GPR* %5194, i32 0, i32 33
  %5196 = getelementptr inbounds %struct.Reg, %struct.Reg* %5195, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %5196 to i64*
  %5197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5198 = getelementptr inbounds %struct.GPR, %struct.GPR* %5197, i32 0, i32 1
  %5199 = getelementptr inbounds %struct.Reg, %struct.Reg* %5198, i32 0, i32 0
  %RAX.i483 = bitcast %union.anon* %5199 to i64*
  %5200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5201 = getelementptr inbounds %struct.GPR, %struct.GPR* %5200, i32 0, i32 7
  %5202 = getelementptr inbounds %struct.Reg, %struct.Reg* %5201, i32 0, i32 0
  %RDX.i484 = bitcast %union.anon* %5202 to i64*
  %5203 = load i64, i64* %RAX.i483
  %5204 = add i64 %5203, 188
  %5205 = load i64, i64* %PC.i482
  %5206 = add i64 %5205, 6
  store i64 %5206, i64* %PC.i482
  %5207 = inttoptr i64 %5204 to i32*
  %5208 = load i32, i32* %5207
  %5209 = zext i32 %5208 to i64
  store i64 %5209, i64* %RDX.i484, align 8
  store %struct.Memory* %loadMem_4261ed, %struct.Memory** %MEMORY
  %loadMem_4261f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5211 = getelementptr inbounds %struct.GPR, %struct.GPR* %5210, i32 0, i32 33
  %5212 = getelementptr inbounds %struct.Reg, %struct.Reg* %5211, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %5212 to i64*
  %5213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5214 = getelementptr inbounds %struct.GPR, %struct.GPR* %5213, i32 0, i32 7
  %5215 = getelementptr inbounds %struct.Reg, %struct.Reg* %5214, i32 0, i32 0
  %RDX.i481 = bitcast %union.anon* %5215 to i64*
  %5216 = load i64, i64* %RDX.i481
  %5217 = load i64, i64* %PC.i480
  %5218 = add i64 %5217, 3
  store i64 %5218, i64* %PC.i480
  %5219 = trunc i64 %5216 to i32
  %5220 = add i32 1, %5219
  %5221 = zext i32 %5220 to i64
  store i64 %5221, i64* %RDX.i481, align 8
  %5222 = icmp ult i32 %5220, %5219
  %5223 = icmp ult i32 %5220, 1
  %5224 = or i1 %5222, %5223
  %5225 = zext i1 %5224 to i8
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5225, i8* %5226, align 1
  %5227 = and i32 %5220, 255
  %5228 = call i32 @llvm.ctpop.i32(i32 %5227)
  %5229 = trunc i32 %5228 to i8
  %5230 = and i8 %5229, 1
  %5231 = xor i8 %5230, 1
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5231, i8* %5232, align 1
  %5233 = xor i64 1, %5216
  %5234 = trunc i64 %5233 to i32
  %5235 = xor i32 %5234, %5220
  %5236 = lshr i32 %5235, 4
  %5237 = trunc i32 %5236 to i8
  %5238 = and i8 %5237, 1
  %5239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5238, i8* %5239, align 1
  %5240 = icmp eq i32 %5220, 0
  %5241 = zext i1 %5240 to i8
  %5242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5241, i8* %5242, align 1
  %5243 = lshr i32 %5220, 31
  %5244 = trunc i32 %5243 to i8
  %5245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5244, i8* %5245, align 1
  %5246 = lshr i32 %5219, 31
  %5247 = xor i32 %5243, %5246
  %5248 = add i32 %5247, %5243
  %5249 = icmp eq i32 %5248, 2
  %5250 = zext i1 %5249 to i8
  %5251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5250, i8* %5251, align 1
  store %struct.Memory* %loadMem_4261f3, %struct.Memory** %MEMORY
  %loadMem_4261f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5253 = getelementptr inbounds %struct.GPR, %struct.GPR* %5252, i32 0, i32 33
  %5254 = getelementptr inbounds %struct.Reg, %struct.Reg* %5253, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %5254 to i64*
  %5255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5256 = getelementptr inbounds %struct.GPR, %struct.GPR* %5255, i32 0, i32 5
  %5257 = getelementptr inbounds %struct.Reg, %struct.Reg* %5256, i32 0, i32 0
  %ECX.i478 = bitcast %union.anon* %5257 to i32*
  %5258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5259 = getelementptr inbounds %struct.GPR, %struct.GPR* %5258, i32 0, i32 7
  %5260 = getelementptr inbounds %struct.Reg, %struct.Reg* %5259, i32 0, i32 0
  %EDX.i479 = bitcast %union.anon* %5260 to i32*
  %5261 = load i32, i32* %ECX.i478
  %5262 = zext i32 %5261 to i64
  %5263 = load i32, i32* %EDX.i479
  %5264 = zext i32 %5263 to i64
  %5265 = load i64, i64* %PC.i477
  %5266 = add i64 %5265, 2
  store i64 %5266, i64* %PC.i477
  %5267 = sub i32 %5261, %5263
  %5268 = icmp ult i32 %5261, %5263
  %5269 = zext i1 %5268 to i8
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5269, i8* %5270, align 1
  %5271 = and i32 %5267, 255
  %5272 = call i32 @llvm.ctpop.i32(i32 %5271)
  %5273 = trunc i32 %5272 to i8
  %5274 = and i8 %5273, 1
  %5275 = xor i8 %5274, 1
  %5276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5275, i8* %5276, align 1
  %5277 = xor i64 %5264, %5262
  %5278 = trunc i64 %5277 to i32
  %5279 = xor i32 %5278, %5267
  %5280 = lshr i32 %5279, 4
  %5281 = trunc i32 %5280 to i8
  %5282 = and i8 %5281, 1
  %5283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5282, i8* %5283, align 1
  %5284 = icmp eq i32 %5267, 0
  %5285 = zext i1 %5284 to i8
  %5286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5285, i8* %5286, align 1
  %5287 = lshr i32 %5267, 31
  %5288 = trunc i32 %5287 to i8
  %5289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5288, i8* %5289, align 1
  %5290 = lshr i32 %5261, 31
  %5291 = lshr i32 %5263, 31
  %5292 = xor i32 %5291, %5290
  %5293 = xor i32 %5287, %5290
  %5294 = add i32 %5293, %5292
  %5295 = icmp eq i32 %5294, 2
  %5296 = zext i1 %5295 to i8
  %5297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5296, i8* %5297, align 1
  store %struct.Memory* %loadMem_4261f6, %struct.Memory** %MEMORY
  %loadMem_4261f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5299 = getelementptr inbounds %struct.GPR, %struct.GPR* %5298, i32 0, i32 33
  %5300 = getelementptr inbounds %struct.Reg, %struct.Reg* %5299, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %5300 to i64*
  %5301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5302 = getelementptr inbounds %struct.GPR, %struct.GPR* %5301, i32 0, i32 9
  %5303 = getelementptr inbounds %struct.Reg, %struct.Reg* %5302, i32 0, i32 0
  %5304 = bitcast %union.anon* %5303 to %struct.anon.2*
  %SIL.i476 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5304, i32 0, i32 0
  %5305 = load i64, i64* %PC.i475
  %5306 = add i64 %5305, 4
  store i64 %5306, i64* %PC.i475
  %5307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5308 = load i8, i8* %5307, align 1
  %5309 = icmp eq i8 %5308, 0
  %5310 = zext i1 %5309 to i8
  store i8 %5310, i8* %SIL.i476, align 1
  store %struct.Memory* %loadMem_4261f8, %struct.Memory** %MEMORY
  %loadMem_4261fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5312 = getelementptr inbounds %struct.GPR, %struct.GPR* %5311, i32 0, i32 33
  %5313 = getelementptr inbounds %struct.Reg, %struct.Reg* %5312, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %5313 to i64*
  %5314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5315 = getelementptr inbounds %struct.GPR, %struct.GPR* %5314, i32 0, i32 9
  %5316 = getelementptr inbounds %struct.Reg, %struct.Reg* %5315, i32 0, i32 0
  %5317 = bitcast %union.anon* %5316 to %struct.anon.2*
  %SIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5317, i32 0, i32 0
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5319 = getelementptr inbounds %struct.GPR, %struct.GPR* %5318, i32 0, i32 15
  %5320 = getelementptr inbounds %struct.Reg, %struct.Reg* %5319, i32 0, i32 0
  %RBP.i474 = bitcast %union.anon* %5320 to i64*
  %5321 = load i64, i64* %RBP.i474
  %5322 = sub i64 %5321, 57
  %5323 = load i8, i8* %SIL.i
  %5324 = zext i8 %5323 to i64
  %5325 = load i64, i64* %PC.i473
  %5326 = add i64 %5325, 4
  store i64 %5326, i64* %PC.i473
  %5327 = inttoptr i64 %5322 to i8*
  store i8 %5323, i8* %5327
  store %struct.Memory* %loadMem_4261fc, %struct.Memory** %MEMORY
  br label %block_.L_426200

block_.L_426200:                                  ; preds = %block_4261d7, %block_.L_4261ab
  %loadMem_426200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5329 = getelementptr inbounds %struct.GPR, %struct.GPR* %5328, i32 0, i32 33
  %5330 = getelementptr inbounds %struct.Reg, %struct.Reg* %5329, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %5330 to i64*
  %5331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5332 = getelementptr inbounds %struct.GPR, %struct.GPR* %5331, i32 0, i32 1
  %5333 = getelementptr inbounds %struct.Reg, %struct.Reg* %5332, i32 0, i32 0
  %5334 = bitcast %union.anon* %5333 to %struct.anon.2*
  %AL.i471 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5334, i32 0, i32 0
  %5335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5336 = getelementptr inbounds %struct.GPR, %struct.GPR* %5335, i32 0, i32 15
  %5337 = getelementptr inbounds %struct.Reg, %struct.Reg* %5336, i32 0, i32 0
  %RBP.i472 = bitcast %union.anon* %5337 to i64*
  %5338 = load i64, i64* %RBP.i472
  %5339 = sub i64 %5338, 57
  %5340 = load i64, i64* %PC.i470
  %5341 = add i64 %5340, 3
  store i64 %5341, i64* %PC.i470
  %5342 = inttoptr i64 %5339 to i8*
  %5343 = load i8, i8* %5342
  store i8 %5343, i8* %AL.i471, align 1
  store %struct.Memory* %loadMem_426200, %struct.Memory** %MEMORY
  %loadMem_426203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5345 = getelementptr inbounds %struct.GPR, %struct.GPR* %5344, i32 0, i32 33
  %5346 = getelementptr inbounds %struct.Reg, %struct.Reg* %5345, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %5346 to i64*
  %5347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5348 = getelementptr inbounds %struct.GPR, %struct.GPR* %5347, i32 0, i32 5
  %5349 = getelementptr inbounds %struct.Reg, %struct.Reg* %5348, i32 0, i32 0
  %ECX.i468 = bitcast %union.anon* %5349 to i32*
  %5350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5351 = getelementptr inbounds %struct.GPR, %struct.GPR* %5350, i32 0, i32 5
  %5352 = getelementptr inbounds %struct.Reg, %struct.Reg* %5351, i32 0, i32 0
  %RCX.i469 = bitcast %union.anon* %5352 to i64*
  %5353 = load i64, i64* %RCX.i469
  %5354 = load i32, i32* %ECX.i468
  %5355 = zext i32 %5354 to i64
  %5356 = load i64, i64* %PC.i467
  %5357 = add i64 %5356, 2
  store i64 %5357, i64* %PC.i467
  %5358 = xor i64 %5355, %5353
  %5359 = trunc i64 %5358 to i32
  %5360 = and i64 %5358, 4294967295
  store i64 %5360, i64* %RCX.i469, align 8
  %5361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5361, align 1
  %5362 = and i32 %5359, 255
  %5363 = call i32 @llvm.ctpop.i32(i32 %5362)
  %5364 = trunc i32 %5363 to i8
  %5365 = and i8 %5364, 1
  %5366 = xor i8 %5365, 1
  %5367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5366, i8* %5367, align 1
  %5368 = icmp eq i32 %5359, 0
  %5369 = zext i1 %5368 to i8
  %5370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5369, i8* %5370, align 1
  %5371 = lshr i32 %5359, 31
  %5372 = trunc i32 %5371 to i8
  %5373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5372, i8* %5373, align 1
  %5374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5374, align 1
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5375, align 1
  store %struct.Memory* %loadMem_426203, %struct.Memory** %MEMORY
  %loadMem_426205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5377 = getelementptr inbounds %struct.GPR, %struct.GPR* %5376, i32 0, i32 33
  %5378 = getelementptr inbounds %struct.Reg, %struct.Reg* %5377, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %5378 to i64*
  %5379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5380 = getelementptr inbounds %struct.GPR, %struct.GPR* %5379, i32 0, i32 7
  %5381 = getelementptr inbounds %struct.Reg, %struct.Reg* %5380, i32 0, i32 0
  %RDX.i466 = bitcast %union.anon* %5381 to i64*
  %5382 = load i64, i64* %PC.i465
  %5383 = add i64 %5382, 5
  store i64 %5383, i64* %PC.i465
  store i64 1, i64* %RDX.i466, align 8
  store %struct.Memory* %loadMem_426205, %struct.Memory** %MEMORY
  %loadMem_42620a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5385 = getelementptr inbounds %struct.GPR, %struct.GPR* %5384, i32 0, i32 33
  %5386 = getelementptr inbounds %struct.Reg, %struct.Reg* %5385, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %5386 to i64*
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5388 = getelementptr inbounds %struct.GPR, %struct.GPR* %5387, i32 0, i32 1
  %5389 = getelementptr inbounds %struct.Reg, %struct.Reg* %5388, i32 0, i32 0
  %5390 = bitcast %union.anon* %5389 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5390, i32 0, i32 0
  %5391 = load i8, i8* %AL.i
  %5392 = zext i8 %5391 to i64
  %5393 = load i64, i64* %PC.i464
  %5394 = add i64 %5393, 2
  store i64 %5394, i64* %PC.i464
  %5395 = and i64 1, %5392
  %5396 = trunc i64 %5395 to i8
  %5397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5397, align 1
  %5398 = trunc i64 %5395 to i32
  %5399 = and i32 %5398, 255
  %5400 = call i32 @llvm.ctpop.i32(i32 %5399)
  %5401 = trunc i32 %5400 to i8
  %5402 = and i8 %5401, 1
  %5403 = xor i8 %5402, 1
  %5404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5403, i8* %5404, align 1
  %5405 = icmp eq i8 %5396, 0
  %5406 = zext i1 %5405 to i8
  %5407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5406, i8* %5407, align 1
  %5408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5408, align 1
  %5409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5409, align 1
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5410, align 1
  store %struct.Memory* %loadMem_42620a, %struct.Memory** %MEMORY
  %loadMem_42620c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5412 = getelementptr inbounds %struct.GPR, %struct.GPR* %5411, i32 0, i32 33
  %5413 = getelementptr inbounds %struct.Reg, %struct.Reg* %5412, i32 0, i32 0
  %PC.i461 = bitcast %union.anon* %5413 to i64*
  %5414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5415 = getelementptr inbounds %struct.GPR, %struct.GPR* %5414, i32 0, i32 7
  %5416 = getelementptr inbounds %struct.Reg, %struct.Reg* %5415, i32 0, i32 0
  %EDX.i462 = bitcast %union.anon* %5416 to i32*
  %5417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5418 = getelementptr inbounds %struct.GPR, %struct.GPR* %5417, i32 0, i32 5
  %5419 = getelementptr inbounds %struct.Reg, %struct.Reg* %5418, i32 0, i32 0
  %RCX.i463 = bitcast %union.anon* %5419 to i64*
  %5420 = load i32, i32* %EDX.i462
  %5421 = zext i32 %5420 to i64
  %5422 = load i64, i64* %PC.i461
  %5423 = add i64 %5422, 3
  store i64 %5423, i64* %PC.i461
  %5424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5425 = load i8, i8* %5424, align 1
  %5426 = icmp eq i8 %5425, 0
  %5427 = load i64, i64* %RCX.i463, align 8
  %5428 = select i1 %5426, i64 %5421, i64 %5427
  %5429 = and i64 %5428, 4294967295
  store i64 %5429, i64* %RCX.i463, align 8
  store %struct.Memory* %loadMem_42620c, %struct.Memory** %MEMORY
  %loadMem_42620f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5431 = getelementptr inbounds %struct.GPR, %struct.GPR* %5430, i32 0, i32 33
  %5432 = getelementptr inbounds %struct.Reg, %struct.Reg* %5431, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %5432 to i64*
  %5433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5434 = getelementptr inbounds %struct.GPR, %struct.GPR* %5433, i32 0, i32 5
  %5435 = getelementptr inbounds %struct.Reg, %struct.Reg* %5434, i32 0, i32 0
  %ECX.i459 = bitcast %union.anon* %5435 to i32*
  %5436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5437 = getelementptr inbounds %struct.GPR, %struct.GPR* %5436, i32 0, i32 15
  %5438 = getelementptr inbounds %struct.Reg, %struct.Reg* %5437, i32 0, i32 0
  %RBP.i460 = bitcast %union.anon* %5438 to i64*
  %5439 = load i64, i64* %RBP.i460
  %5440 = sub i64 %5439, 48
  %5441 = load i32, i32* %ECX.i459
  %5442 = zext i32 %5441 to i64
  %5443 = load i64, i64* %PC.i458
  %5444 = add i64 %5443, 3
  store i64 %5444, i64* %PC.i458
  %5445 = inttoptr i64 %5440 to i32*
  store i32 %5441, i32* %5445
  store %struct.Memory* %loadMem_42620f, %struct.Memory** %MEMORY
  br label %block_.L_426212

block_.L_426212:                                  ; preds = %block_.L_426200, %block_.L_426178
  %loadMem_426212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5447 = getelementptr inbounds %struct.GPR, %struct.GPR* %5446, i32 0, i32 33
  %5448 = getelementptr inbounds %struct.Reg, %struct.Reg* %5447, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %5448 to i64*
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5450 = getelementptr inbounds %struct.GPR, %struct.GPR* %5449, i32 0, i32 11
  %5451 = getelementptr inbounds %struct.Reg, %struct.Reg* %5450, i32 0, i32 0
  %RDI.i457 = bitcast %union.anon* %5451 to i64*
  %5452 = load i64, i64* %PC.i456
  %5453 = add i64 %5452, 10
  store i64 %5453, i64* %PC.i456
  store i64 ptrtoint (%G__0x4bfb48_type* @G__0x4bfb48 to i64), i64* %RDI.i457, align 8
  store %struct.Memory* %loadMem_426212, %struct.Memory** %MEMORY
  %loadMem_42621c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5455 = getelementptr inbounds %struct.GPR, %struct.GPR* %5454, i32 0, i32 33
  %5456 = getelementptr inbounds %struct.Reg, %struct.Reg* %5455, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %5456 to i64*
  %5457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5458 = getelementptr inbounds %struct.GPR, %struct.GPR* %5457, i32 0, i32 9
  %5459 = getelementptr inbounds %struct.Reg, %struct.Reg* %5458, i32 0, i32 0
  %RSI.i454 = bitcast %union.anon* %5459 to i64*
  %5460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5461 = getelementptr inbounds %struct.GPR, %struct.GPR* %5460, i32 0, i32 15
  %5462 = getelementptr inbounds %struct.Reg, %struct.Reg* %5461, i32 0, i32 0
  %RBP.i455 = bitcast %union.anon* %5462 to i64*
  %5463 = load i64, i64* %RBP.i455
  %5464 = sub i64 %5463, 48
  %5465 = load i64, i64* %PC.i453
  %5466 = add i64 %5465, 3
  store i64 %5466, i64* %PC.i453
  %5467 = inttoptr i64 %5464 to i32*
  %5468 = load i32, i32* %5467
  %5469 = zext i32 %5468 to i64
  store i64 %5469, i64* %RSI.i454, align 8
  store %struct.Memory* %loadMem_42621c, %struct.Memory** %MEMORY
  %loadMem_42621f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5471 = getelementptr inbounds %struct.GPR, %struct.GPR* %5470, i32 0, i32 33
  %5472 = getelementptr inbounds %struct.Reg, %struct.Reg* %5471, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %5472 to i64*
  %5473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5474 = getelementptr inbounds %struct.GPR, %struct.GPR* %5473, i32 0, i32 7
  %5475 = getelementptr inbounds %struct.Reg, %struct.Reg* %5474, i32 0, i32 0
  %RDX.i451 = bitcast %union.anon* %5475 to i64*
  %5476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5477 = getelementptr inbounds %struct.GPR, %struct.GPR* %5476, i32 0, i32 15
  %5478 = getelementptr inbounds %struct.Reg, %struct.Reg* %5477, i32 0, i32 0
  %RBP.i452 = bitcast %union.anon* %5478 to i64*
  %5479 = load i64, i64* %RBP.i452
  %5480 = sub i64 %5479, 16
  %5481 = load i64, i64* %PC.i450
  %5482 = add i64 %5481, 4
  store i64 %5482, i64* %PC.i450
  %5483 = inttoptr i64 %5480 to i64*
  %5484 = load i64, i64* %5483
  store i64 %5484, i64* %RDX.i451, align 8
  store %struct.Memory* %loadMem_42621f, %struct.Memory** %MEMORY
  %loadMem1_426223 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5486 = getelementptr inbounds %struct.GPR, %struct.GPR* %5485, i32 0, i32 33
  %5487 = getelementptr inbounds %struct.Reg, %struct.Reg* %5486, i32 0, i32 0
  %PC.i449 = bitcast %union.anon* %5487 to i64*
  %5488 = load i64, i64* %PC.i449
  %5489 = add i64 %5488, 551133
  %5490 = load i64, i64* %PC.i449
  %5491 = add i64 %5490, 5
  %5492 = load i64, i64* %PC.i449
  %5493 = add i64 %5492, 5
  store i64 %5493, i64* %PC.i449
  %5494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5495 = load i64, i64* %5494, align 8
  %5496 = add i64 %5495, -8
  %5497 = inttoptr i64 %5496 to i64*
  store i64 %5491, i64* %5497
  store i64 %5496, i64* %5494, align 8
  %5498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5489, i64* %5498, align 8
  store %struct.Memory* %loadMem1_426223, %struct.Memory** %MEMORY
  %loadMem2_426223 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_426223 = load i64, i64* %3
  %call2_426223 = call %struct.Memory* @sub_4acb00.u_1(%struct.State* %0, i64 %loadPC_426223, %struct.Memory* %loadMem2_426223)
  store %struct.Memory* %call2_426223, %struct.Memory** %MEMORY
  %loadMem_426228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5500 = getelementptr inbounds %struct.GPR, %struct.GPR* %5499, i32 0, i32 33
  %5501 = getelementptr inbounds %struct.Reg, %struct.Reg* %5500, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %5501 to i64*
  %5502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5503 = getelementptr inbounds %struct.GPR, %struct.GPR* %5502, i32 0, i32 1
  %5504 = getelementptr inbounds %struct.Reg, %struct.Reg* %5503, i32 0, i32 0
  %RAX.i447 = bitcast %union.anon* %5504 to i64*
  %5505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5506 = getelementptr inbounds %struct.GPR, %struct.GPR* %5505, i32 0, i32 15
  %5507 = getelementptr inbounds %struct.Reg, %struct.Reg* %5506, i32 0, i32 0
  %RBP.i448 = bitcast %union.anon* %5507 to i64*
  %5508 = load i64, i64* %RAX.i447
  %5509 = load i64, i64* %RBP.i448
  %5510 = sub i64 %5509, 28
  %5511 = load i64, i64* %PC.i446
  %5512 = add i64 %5511, 3
  store i64 %5512, i64* %PC.i446
  %5513 = trunc i64 %5508 to i32
  %5514 = inttoptr i64 %5510 to i32*
  %5515 = load i32, i32* %5514
  %5516 = add i32 %5515, %5513
  %5517 = zext i32 %5516 to i64
  store i64 %5517, i64* %RAX.i447, align 8
  %5518 = icmp ult i32 %5516, %5513
  %5519 = icmp ult i32 %5516, %5515
  %5520 = or i1 %5518, %5519
  %5521 = zext i1 %5520 to i8
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5521, i8* %5522, align 1
  %5523 = and i32 %5516, 255
  %5524 = call i32 @llvm.ctpop.i32(i32 %5523)
  %5525 = trunc i32 %5524 to i8
  %5526 = and i8 %5525, 1
  %5527 = xor i8 %5526, 1
  %5528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5527, i8* %5528, align 1
  %5529 = xor i32 %5515, %5513
  %5530 = xor i32 %5529, %5516
  %5531 = lshr i32 %5530, 4
  %5532 = trunc i32 %5531 to i8
  %5533 = and i8 %5532, 1
  %5534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5533, i8* %5534, align 1
  %5535 = icmp eq i32 %5516, 0
  %5536 = zext i1 %5535 to i8
  %5537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5536, i8* %5537, align 1
  %5538 = lshr i32 %5516, 31
  %5539 = trunc i32 %5538 to i8
  %5540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5539, i8* %5540, align 1
  %5541 = lshr i32 %5513, 31
  %5542 = lshr i32 %5515, 31
  %5543 = xor i32 %5538, %5541
  %5544 = xor i32 %5538, %5542
  %5545 = add i32 %5543, %5544
  %5546 = icmp eq i32 %5545, 2
  %5547 = zext i1 %5546 to i8
  %5548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5547, i8* %5548, align 1
  store %struct.Memory* %loadMem_426228, %struct.Memory** %MEMORY
  %loadMem_42622b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5550 = getelementptr inbounds %struct.GPR, %struct.GPR* %5549, i32 0, i32 33
  %5551 = getelementptr inbounds %struct.Reg, %struct.Reg* %5550, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %5551 to i64*
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5553 = getelementptr inbounds %struct.GPR, %struct.GPR* %5552, i32 0, i32 1
  %5554 = getelementptr inbounds %struct.Reg, %struct.Reg* %5553, i32 0, i32 0
  %EAX.i444 = bitcast %union.anon* %5554 to i32*
  %5555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5556 = getelementptr inbounds %struct.GPR, %struct.GPR* %5555, i32 0, i32 15
  %5557 = getelementptr inbounds %struct.Reg, %struct.Reg* %5556, i32 0, i32 0
  %RBP.i445 = bitcast %union.anon* %5557 to i64*
  %5558 = load i64, i64* %RBP.i445
  %5559 = sub i64 %5558, 28
  %5560 = load i32, i32* %EAX.i444
  %5561 = zext i32 %5560 to i64
  %5562 = load i64, i64* %PC.i443
  %5563 = add i64 %5562, 3
  store i64 %5563, i64* %PC.i443
  %5564 = inttoptr i64 %5559 to i32*
  store i32 %5560, i32* %5564
  store %struct.Memory* %loadMem_42622b, %struct.Memory** %MEMORY
  %loadMem_42622e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5566 = getelementptr inbounds %struct.GPR, %struct.GPR* %5565, i32 0, i32 33
  %5567 = getelementptr inbounds %struct.Reg, %struct.Reg* %5566, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %5567 to i64*
  %5568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5569 = getelementptr inbounds %struct.GPR, %struct.GPR* %5568, i32 0, i32 15
  %5570 = getelementptr inbounds %struct.Reg, %struct.Reg* %5569, i32 0, i32 0
  %RBP.i442 = bitcast %union.anon* %5570 to i64*
  %5571 = load i64, i64* %RBP.i442
  %5572 = sub i64 %5571, 48
  %5573 = load i64, i64* %PC.i441
  %5574 = add i64 %5573, 4
  store i64 %5574, i64* %PC.i441
  %5575 = inttoptr i64 %5572 to i32*
  %5576 = load i32, i32* %5575
  %5577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5577, align 1
  %5578 = and i32 %5576, 255
  %5579 = call i32 @llvm.ctpop.i32(i32 %5578)
  %5580 = trunc i32 %5579 to i8
  %5581 = and i8 %5580, 1
  %5582 = xor i8 %5581, 1
  %5583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5582, i8* %5583, align 1
  %5584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5584, align 1
  %5585 = icmp eq i32 %5576, 0
  %5586 = zext i1 %5585 to i8
  %5587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5586, i8* %5587, align 1
  %5588 = lshr i32 %5576, 31
  %5589 = trunc i32 %5588 to i8
  %5590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5589, i8* %5590, align 1
  %5591 = lshr i32 %5576, 31
  %5592 = xor i32 %5588, %5591
  %5593 = add i32 %5592, %5591
  %5594 = icmp eq i32 %5593, 2
  %5595 = zext i1 %5594 to i8
  %5596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5595, i8* %5596, align 1
  store %struct.Memory* %loadMem_42622e, %struct.Memory** %MEMORY
  %loadMem_426232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5598 = getelementptr inbounds %struct.GPR, %struct.GPR* %5597, i32 0, i32 33
  %5599 = getelementptr inbounds %struct.Reg, %struct.Reg* %5598, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %5599 to i64*
  %5600 = load i64, i64* %PC.i440
  %5601 = add i64 %5600, 117
  %5602 = load i64, i64* %PC.i440
  %5603 = add i64 %5602, 6
  %5604 = load i64, i64* %PC.i440
  %5605 = add i64 %5604, 6
  store i64 %5605, i64* %PC.i440
  %5606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5607 = load i8, i8* %5606, align 1
  store i8 %5607, i8* %BRANCH_TAKEN, align 1
  %5608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5609 = icmp ne i8 %5607, 0
  %5610 = select i1 %5609, i64 %5601, i64 %5603
  store i64 %5610, i64* %5608, align 8
  store %struct.Memory* %loadMem_426232, %struct.Memory** %MEMORY
  %loadBr_426232 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_426232 = icmp eq i8 %loadBr_426232, 1
  br i1 %cmpBr_426232, label %block_.L_4262a7, label %block_426238

block_426238:                                     ; preds = %block_.L_426212
  %loadMem_426238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5612 = getelementptr inbounds %struct.GPR, %struct.GPR* %5611, i32 0, i32 33
  %5613 = getelementptr inbounds %struct.Reg, %struct.Reg* %5612, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %5613 to i64*
  %5614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5615 = getelementptr inbounds %struct.GPR, %struct.GPR* %5614, i32 0, i32 11
  %5616 = getelementptr inbounds %struct.Reg, %struct.Reg* %5615, i32 0, i32 0
  %RDI.i439 = bitcast %union.anon* %5616 to i64*
  %5617 = load i64, i64* %PC.i438
  %5618 = add i64 %5617, 10
  store i64 %5618, i64* %PC.i438
  store i64 ptrtoint (%G__0x4bfb6d_type* @G__0x4bfb6d to i64), i64* %RDI.i439, align 8
  store %struct.Memory* %loadMem_426238, %struct.Memory** %MEMORY
  %loadMem_426242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5620 = getelementptr inbounds %struct.GPR, %struct.GPR* %5619, i32 0, i32 33
  %5621 = getelementptr inbounds %struct.Reg, %struct.Reg* %5620, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %5621 to i64*
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5623 = getelementptr inbounds %struct.GPR, %struct.GPR* %5622, i32 0, i32 1
  %5624 = getelementptr inbounds %struct.Reg, %struct.Reg* %5623, i32 0, i32 0
  %RAX.i437 = bitcast %union.anon* %5624 to i64*
  %5625 = load i64, i64* %PC.i436
  %5626 = add i64 %5625, 8
  store i64 %5626, i64* %PC.i436
  %5627 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5627, i64* %RAX.i437, align 8
  store %struct.Memory* %loadMem_426242, %struct.Memory** %MEMORY
  %loadMem_42624a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5629 = getelementptr inbounds %struct.GPR, %struct.GPR* %5628, i32 0, i32 33
  %5630 = getelementptr inbounds %struct.Reg, %struct.Reg* %5629, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %5630 to i64*
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5632 = getelementptr inbounds %struct.GPR, %struct.GPR* %5631, i32 0, i32 1
  %5633 = getelementptr inbounds %struct.Reg, %struct.Reg* %5632, i32 0, i32 0
  %RAX.i434 = bitcast %union.anon* %5633 to i64*
  %5634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5635 = getelementptr inbounds %struct.GPR, %struct.GPR* %5634, i32 0, i32 5
  %5636 = getelementptr inbounds %struct.Reg, %struct.Reg* %5635, i32 0, i32 0
  %RCX.i435 = bitcast %union.anon* %5636 to i64*
  %5637 = load i64, i64* %RAX.i434
  %5638 = add i64 %5637, 72000
  %5639 = load i64, i64* %PC.i433
  %5640 = add i64 %5639, 6
  store i64 %5640, i64* %PC.i433
  %5641 = inttoptr i64 %5638 to i32*
  %5642 = load i32, i32* %5641
  %5643 = zext i32 %5642 to i64
  store i64 %5643, i64* %RCX.i435, align 8
  store %struct.Memory* %loadMem_42624a, %struct.Memory** %MEMORY
  %loadMem_426250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5645 = getelementptr inbounds %struct.GPR, %struct.GPR* %5644, i32 0, i32 33
  %5646 = getelementptr inbounds %struct.Reg, %struct.Reg* %5645, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %5646 to i64*
  %5647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5648 = getelementptr inbounds %struct.GPR, %struct.GPR* %5647, i32 0, i32 5
  %5649 = getelementptr inbounds %struct.Reg, %struct.Reg* %5648, i32 0, i32 0
  %RCX.i432 = bitcast %union.anon* %5649 to i64*
  %5650 = load i64, i64* %RCX.i432
  %5651 = load i64, i64* %PC.i431
  %5652 = add i64 %5651, 3
  store i64 %5652, i64* %PC.i431
  %5653 = trunc i64 %5650 to i32
  %5654 = sub i32 %5653, 1
  %5655 = zext i32 %5654 to i64
  store i64 %5655, i64* %RCX.i432, align 8
  %5656 = icmp ult i32 %5653, 1
  %5657 = zext i1 %5656 to i8
  %5658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5657, i8* %5658, align 1
  %5659 = and i32 %5654, 255
  %5660 = call i32 @llvm.ctpop.i32(i32 %5659)
  %5661 = trunc i32 %5660 to i8
  %5662 = and i8 %5661, 1
  %5663 = xor i8 %5662, 1
  %5664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5663, i8* %5664, align 1
  %5665 = xor i64 1, %5650
  %5666 = trunc i64 %5665 to i32
  %5667 = xor i32 %5666, %5654
  %5668 = lshr i32 %5667, 4
  %5669 = trunc i32 %5668 to i8
  %5670 = and i8 %5669, 1
  %5671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5670, i8* %5671, align 1
  %5672 = icmp eq i32 %5654, 0
  %5673 = zext i1 %5672 to i8
  %5674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5673, i8* %5674, align 1
  %5675 = lshr i32 %5654, 31
  %5676 = trunc i32 %5675 to i8
  %5677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5676, i8* %5677, align 1
  %5678 = lshr i32 %5653, 31
  %5679 = xor i32 %5675, %5678
  %5680 = add i32 %5679, %5678
  %5681 = icmp eq i32 %5680, 2
  %5682 = zext i1 %5681 to i8
  %5683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5682, i8* %5683, align 1
  store %struct.Memory* %loadMem_426250, %struct.Memory** %MEMORY
  %loadMem_426253 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5685 = getelementptr inbounds %struct.GPR, %struct.GPR* %5684, i32 0, i32 33
  %5686 = getelementptr inbounds %struct.Reg, %struct.Reg* %5685, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %5686 to i64*
  %5687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5688 = getelementptr inbounds %struct.GPR, %struct.GPR* %5687, i32 0, i32 7
  %5689 = getelementptr inbounds %struct.Reg, %struct.Reg* %5688, i32 0, i32 0
  %RDX.i429 = bitcast %union.anon* %5689 to i64*
  %5690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5691 = getelementptr inbounds %struct.GPR, %struct.GPR* %5690, i32 0, i32 15
  %5692 = getelementptr inbounds %struct.Reg, %struct.Reg* %5691, i32 0, i32 0
  %RBP.i430 = bitcast %union.anon* %5692 to i64*
  %5693 = load i64, i64* %RBP.i430
  %5694 = sub i64 %5693, 16
  %5695 = load i64, i64* %PC.i428
  %5696 = add i64 %5695, 4
  store i64 %5696, i64* %PC.i428
  %5697 = inttoptr i64 %5694 to i64*
  %5698 = load i64, i64* %5697
  store i64 %5698, i64* %RDX.i429, align 8
  store %struct.Memory* %loadMem_426253, %struct.Memory** %MEMORY
  %loadMem_426257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5700 = getelementptr inbounds %struct.GPR, %struct.GPR* %5699, i32 0, i32 33
  %5701 = getelementptr inbounds %struct.Reg, %struct.Reg* %5700, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %5701 to i64*
  %5702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5703 = getelementptr inbounds %struct.GPR, %struct.GPR* %5702, i32 0, i32 5
  %5704 = getelementptr inbounds %struct.Reg, %struct.Reg* %5703, i32 0, i32 0
  %ECX.i426 = bitcast %union.anon* %5704 to i32*
  %5705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5706 = getelementptr inbounds %struct.GPR, %struct.GPR* %5705, i32 0, i32 9
  %5707 = getelementptr inbounds %struct.Reg, %struct.Reg* %5706, i32 0, i32 0
  %RSI.i427 = bitcast %union.anon* %5707 to i64*
  %5708 = load i32, i32* %ECX.i426
  %5709 = zext i32 %5708 to i64
  %5710 = load i64, i64* %PC.i425
  %5711 = add i64 %5710, 2
  store i64 %5711, i64* %PC.i425
  %5712 = and i64 %5709, 4294967295
  store i64 %5712, i64* %RSI.i427, align 8
  store %struct.Memory* %loadMem_426257, %struct.Memory** %MEMORY
  %loadMem1_426259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5714 = getelementptr inbounds %struct.GPR, %struct.GPR* %5713, i32 0, i32 33
  %5715 = getelementptr inbounds %struct.Reg, %struct.Reg* %5714, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %5715 to i64*
  %5716 = load i64, i64* %PC.i424
  %5717 = add i64 %5716, 549959
  %5718 = load i64, i64* %PC.i424
  %5719 = add i64 %5718, 5
  %5720 = load i64, i64* %PC.i424
  %5721 = add i64 %5720, 5
  store i64 %5721, i64* %PC.i424
  %5722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5723 = load i64, i64* %5722, align 8
  %5724 = add i64 %5723, -8
  %5725 = inttoptr i64 %5724 to i64*
  store i64 %5719, i64* %5725
  store i64 %5724, i64* %5722, align 8
  %5726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5717, i64* %5726, align 8
  store %struct.Memory* %loadMem1_426259, %struct.Memory** %MEMORY
  %loadMem2_426259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_426259 = load i64, i64* %3
  %call2_426259 = call %struct.Memory* @sub_4ac6a0.ue_v(%struct.State* %0, i64 %loadPC_426259, %struct.Memory* %loadMem2_426259)
  store %struct.Memory* %call2_426259, %struct.Memory** %MEMORY
  %loadMem_42625e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5728 = getelementptr inbounds %struct.GPR, %struct.GPR* %5727, i32 0, i32 33
  %5729 = getelementptr inbounds %struct.Reg, %struct.Reg* %5728, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %5729 to i64*
  %5730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5731 = getelementptr inbounds %struct.GPR, %struct.GPR* %5730, i32 0, i32 1
  %5732 = getelementptr inbounds %struct.Reg, %struct.Reg* %5731, i32 0, i32 0
  %RAX.i422 = bitcast %union.anon* %5732 to i64*
  %5733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5734 = getelementptr inbounds %struct.GPR, %struct.GPR* %5733, i32 0, i32 15
  %5735 = getelementptr inbounds %struct.Reg, %struct.Reg* %5734, i32 0, i32 0
  %RBP.i423 = bitcast %union.anon* %5735 to i64*
  %5736 = load i64, i64* %RAX.i422
  %5737 = load i64, i64* %RBP.i423
  %5738 = sub i64 %5737, 28
  %5739 = load i64, i64* %PC.i421
  %5740 = add i64 %5739, 3
  store i64 %5740, i64* %PC.i421
  %5741 = trunc i64 %5736 to i32
  %5742 = inttoptr i64 %5738 to i32*
  %5743 = load i32, i32* %5742
  %5744 = add i32 %5743, %5741
  %5745 = zext i32 %5744 to i64
  store i64 %5745, i64* %RAX.i422, align 8
  %5746 = icmp ult i32 %5744, %5741
  %5747 = icmp ult i32 %5744, %5743
  %5748 = or i1 %5746, %5747
  %5749 = zext i1 %5748 to i8
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5749, i8* %5750, align 1
  %5751 = and i32 %5744, 255
  %5752 = call i32 @llvm.ctpop.i32(i32 %5751)
  %5753 = trunc i32 %5752 to i8
  %5754 = and i8 %5753, 1
  %5755 = xor i8 %5754, 1
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5755, i8* %5756, align 1
  %5757 = xor i32 %5743, %5741
  %5758 = xor i32 %5757, %5744
  %5759 = lshr i32 %5758, 4
  %5760 = trunc i32 %5759 to i8
  %5761 = and i8 %5760, 1
  %5762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5761, i8* %5762, align 1
  %5763 = icmp eq i32 %5744, 0
  %5764 = zext i1 %5763 to i8
  %5765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5764, i8* %5765, align 1
  %5766 = lshr i32 %5744, 31
  %5767 = trunc i32 %5766 to i8
  %5768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5767, i8* %5768, align 1
  %5769 = lshr i32 %5741, 31
  %5770 = lshr i32 %5743, 31
  %5771 = xor i32 %5766, %5769
  %5772 = xor i32 %5766, %5770
  %5773 = add i32 %5771, %5772
  %5774 = icmp eq i32 %5773, 2
  %5775 = zext i1 %5774 to i8
  %5776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5775, i8* %5776, align 1
  store %struct.Memory* %loadMem_42625e, %struct.Memory** %MEMORY
  %loadMem_426261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5778 = getelementptr inbounds %struct.GPR, %struct.GPR* %5777, i32 0, i32 33
  %5779 = getelementptr inbounds %struct.Reg, %struct.Reg* %5778, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %5779 to i64*
  %5780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5781 = getelementptr inbounds %struct.GPR, %struct.GPR* %5780, i32 0, i32 1
  %5782 = getelementptr inbounds %struct.Reg, %struct.Reg* %5781, i32 0, i32 0
  %EAX.i419 = bitcast %union.anon* %5782 to i32*
  %5783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5784 = getelementptr inbounds %struct.GPR, %struct.GPR* %5783, i32 0, i32 15
  %5785 = getelementptr inbounds %struct.Reg, %struct.Reg* %5784, i32 0, i32 0
  %RBP.i420 = bitcast %union.anon* %5785 to i64*
  %5786 = load i64, i64* %RBP.i420
  %5787 = sub i64 %5786, 28
  %5788 = load i32, i32* %EAX.i419
  %5789 = zext i32 %5788 to i64
  %5790 = load i64, i64* %PC.i418
  %5791 = add i64 %5790, 3
  store i64 %5791, i64* %PC.i418
  %5792 = inttoptr i64 %5787 to i32*
  store i32 %5788, i32* %5792
  store %struct.Memory* %loadMem_426261, %struct.Memory** %MEMORY
  %loadMem_426264 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5794 = getelementptr inbounds %struct.GPR, %struct.GPR* %5793, i32 0, i32 33
  %5795 = getelementptr inbounds %struct.Reg, %struct.Reg* %5794, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %5795 to i64*
  %5796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5797 = getelementptr inbounds %struct.GPR, %struct.GPR* %5796, i32 0, i32 7
  %5798 = getelementptr inbounds %struct.Reg, %struct.Reg* %5797, i32 0, i32 0
  %RDX.i417 = bitcast %union.anon* %5798 to i64*
  %5799 = load i64, i64* %PC.i416
  %5800 = add i64 %5799, 8
  store i64 %5800, i64* %PC.i416
  %5801 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5801, i64* %RDX.i417, align 8
  store %struct.Memory* %loadMem_426264, %struct.Memory** %MEMORY
  %loadMem_42626c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5803 = getelementptr inbounds %struct.GPR, %struct.GPR* %5802, i32 0, i32 33
  %5804 = getelementptr inbounds %struct.Reg, %struct.Reg* %5803, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %5804 to i64*
  %5805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5806 = getelementptr inbounds %struct.GPR, %struct.GPR* %5805, i32 0, i32 7
  %5807 = getelementptr inbounds %struct.Reg, %struct.Reg* %5806, i32 0, i32 0
  %RDX.i415 = bitcast %union.anon* %5807 to i64*
  %5808 = load i64, i64* %RDX.i415
  %5809 = add i64 %5808, 24
  %5810 = load i64, i64* %PC.i414
  %5811 = add i64 %5810, 4
  store i64 %5811, i64* %PC.i414
  %5812 = inttoptr i64 %5809 to i32*
  %5813 = load i32, i32* %5812
  %5814 = sub i32 %5813, 1
  %5815 = icmp ult i32 %5813, 1
  %5816 = zext i1 %5815 to i8
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5816, i8* %5817, align 1
  %5818 = and i32 %5814, 255
  %5819 = call i32 @llvm.ctpop.i32(i32 %5818)
  %5820 = trunc i32 %5819 to i8
  %5821 = and i8 %5820, 1
  %5822 = xor i8 %5821, 1
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5822, i8* %5823, align 1
  %5824 = xor i32 %5813, 1
  %5825 = xor i32 %5824, %5814
  %5826 = lshr i32 %5825, 4
  %5827 = trunc i32 %5826 to i8
  %5828 = and i8 %5827, 1
  %5829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5828, i8* %5829, align 1
  %5830 = icmp eq i32 %5814, 0
  %5831 = zext i1 %5830 to i8
  %5832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5831, i8* %5832, align 1
  %5833 = lshr i32 %5814, 31
  %5834 = trunc i32 %5833 to i8
  %5835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5834, i8* %5835, align 1
  %5836 = lshr i32 %5813, 31
  %5837 = xor i32 %5833, %5836
  %5838 = add i32 %5837, %5836
  %5839 = icmp eq i32 %5838, 2
  %5840 = zext i1 %5839 to i8
  %5841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5840, i8* %5841, align 1
  store %struct.Memory* %loadMem_42626c, %struct.Memory** %MEMORY
  %loadMem_426270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5843 = getelementptr inbounds %struct.GPR, %struct.GPR* %5842, i32 0, i32 33
  %5844 = getelementptr inbounds %struct.Reg, %struct.Reg* %5843, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %5844 to i64*
  %5845 = load i64, i64* %PC.i413
  %5846 = add i64 %5845, 50
  %5847 = load i64, i64* %PC.i413
  %5848 = add i64 %5847, 6
  %5849 = load i64, i64* %PC.i413
  %5850 = add i64 %5849, 6
  store i64 %5850, i64* %PC.i413
  %5851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5852 = load i8, i8* %5851, align 1
  %5853 = icmp eq i8 %5852, 0
  %5854 = zext i1 %5853 to i8
  store i8 %5854, i8* %BRANCH_TAKEN, align 1
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5856 = select i1 %5853, i64 %5846, i64 %5848
  store i64 %5856, i64* %5855, align 8
  store %struct.Memory* %loadMem_426270, %struct.Memory** %MEMORY
  %loadBr_426270 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_426270 = icmp eq i8 %loadBr_426270, 1
  br i1 %cmpBr_426270, label %block_.L_4262a2, label %block_426276

block_426276:                                     ; preds = %block_426238
  %loadMem_426276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5858 = getelementptr inbounds %struct.GPR, %struct.GPR* %5857, i32 0, i32 33
  %5859 = getelementptr inbounds %struct.Reg, %struct.Reg* %5858, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %5859 to i64*
  %5860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5861 = getelementptr inbounds %struct.GPR, %struct.GPR* %5860, i32 0, i32 11
  %5862 = getelementptr inbounds %struct.Reg, %struct.Reg* %5861, i32 0, i32 0
  %RDI.i412 = bitcast %union.anon* %5862 to i64*
  %5863 = load i64, i64* %PC.i411
  %5864 = add i64 %5863, 10
  store i64 %5864, i64* %PC.i411
  store i64 ptrtoint (%G__0x4bfb8e_type* @G__0x4bfb8e to i64), i64* %RDI.i412, align 8
  store %struct.Memory* %loadMem_426276, %struct.Memory** %MEMORY
  %loadMem_426280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5866 = getelementptr inbounds %struct.GPR, %struct.GPR* %5865, i32 0, i32 33
  %5867 = getelementptr inbounds %struct.Reg, %struct.Reg* %5866, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %5867 to i64*
  %5868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5869 = getelementptr inbounds %struct.GPR, %struct.GPR* %5868, i32 0, i32 1
  %5870 = getelementptr inbounds %struct.Reg, %struct.Reg* %5869, i32 0, i32 0
  %RAX.i410 = bitcast %union.anon* %5870 to i64*
  %5871 = load i64, i64* %PC.i409
  %5872 = add i64 %5871, 8
  store i64 %5872, i64* %PC.i409
  %5873 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5873, i64* %RAX.i410, align 8
  store %struct.Memory* %loadMem_426280, %struct.Memory** %MEMORY
  %loadMem_426288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5875 = getelementptr inbounds %struct.GPR, %struct.GPR* %5874, i32 0, i32 33
  %5876 = getelementptr inbounds %struct.Reg, %struct.Reg* %5875, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %5876 to i64*
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5878 = getelementptr inbounds %struct.GPR, %struct.GPR* %5877, i32 0, i32 1
  %5879 = getelementptr inbounds %struct.Reg, %struct.Reg* %5878, i32 0, i32 0
  %RAX.i407 = bitcast %union.anon* %5879 to i64*
  %5880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5881 = getelementptr inbounds %struct.GPR, %struct.GPR* %5880, i32 0, i32 5
  %5882 = getelementptr inbounds %struct.Reg, %struct.Reg* %5881, i32 0, i32 0
  %RCX.i408 = bitcast %union.anon* %5882 to i64*
  %5883 = load i64, i64* %RAX.i407
  %5884 = add i64 %5883, 72004
  %5885 = load i64, i64* %PC.i406
  %5886 = add i64 %5885, 6
  store i64 %5886, i64* %PC.i406
  %5887 = inttoptr i64 %5884 to i32*
  %5888 = load i32, i32* %5887
  %5889 = zext i32 %5888 to i64
  store i64 %5889, i64* %RCX.i408, align 8
  store %struct.Memory* %loadMem_426288, %struct.Memory** %MEMORY
  %loadMem_42628e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5891 = getelementptr inbounds %struct.GPR, %struct.GPR* %5890, i32 0, i32 33
  %5892 = getelementptr inbounds %struct.Reg, %struct.Reg* %5891, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %5892 to i64*
  %5893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5894 = getelementptr inbounds %struct.GPR, %struct.GPR* %5893, i32 0, i32 5
  %5895 = getelementptr inbounds %struct.Reg, %struct.Reg* %5894, i32 0, i32 0
  %RCX.i405 = bitcast %union.anon* %5895 to i64*
  %5896 = load i64, i64* %RCX.i405
  %5897 = load i64, i64* %PC.i404
  %5898 = add i64 %5897, 3
  store i64 %5898, i64* %PC.i404
  %5899 = trunc i64 %5896 to i32
  %5900 = sub i32 %5899, 1
  %5901 = zext i32 %5900 to i64
  store i64 %5901, i64* %RCX.i405, align 8
  %5902 = icmp ult i32 %5899, 1
  %5903 = zext i1 %5902 to i8
  %5904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5903, i8* %5904, align 1
  %5905 = and i32 %5900, 255
  %5906 = call i32 @llvm.ctpop.i32(i32 %5905)
  %5907 = trunc i32 %5906 to i8
  %5908 = and i8 %5907, 1
  %5909 = xor i8 %5908, 1
  %5910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5909, i8* %5910, align 1
  %5911 = xor i64 1, %5896
  %5912 = trunc i64 %5911 to i32
  %5913 = xor i32 %5912, %5900
  %5914 = lshr i32 %5913, 4
  %5915 = trunc i32 %5914 to i8
  %5916 = and i8 %5915, 1
  %5917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5916, i8* %5917, align 1
  %5918 = icmp eq i32 %5900, 0
  %5919 = zext i1 %5918 to i8
  %5920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5919, i8* %5920, align 1
  %5921 = lshr i32 %5900, 31
  %5922 = trunc i32 %5921 to i8
  %5923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5922, i8* %5923, align 1
  %5924 = lshr i32 %5899, 31
  %5925 = xor i32 %5921, %5924
  %5926 = add i32 %5925, %5924
  %5927 = icmp eq i32 %5926, 2
  %5928 = zext i1 %5927 to i8
  %5929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5928, i8* %5929, align 1
  store %struct.Memory* %loadMem_42628e, %struct.Memory** %MEMORY
  %loadMem_426291 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5931 = getelementptr inbounds %struct.GPR, %struct.GPR* %5930, i32 0, i32 33
  %5932 = getelementptr inbounds %struct.Reg, %struct.Reg* %5931, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %5932 to i64*
  %5933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5934 = getelementptr inbounds %struct.GPR, %struct.GPR* %5933, i32 0, i32 7
  %5935 = getelementptr inbounds %struct.Reg, %struct.Reg* %5934, i32 0, i32 0
  %RDX.i402 = bitcast %union.anon* %5935 to i64*
  %5936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5937 = getelementptr inbounds %struct.GPR, %struct.GPR* %5936, i32 0, i32 15
  %5938 = getelementptr inbounds %struct.Reg, %struct.Reg* %5937, i32 0, i32 0
  %RBP.i403 = bitcast %union.anon* %5938 to i64*
  %5939 = load i64, i64* %RBP.i403
  %5940 = sub i64 %5939, 16
  %5941 = load i64, i64* %PC.i401
  %5942 = add i64 %5941, 4
  store i64 %5942, i64* %PC.i401
  %5943 = inttoptr i64 %5940 to i64*
  %5944 = load i64, i64* %5943
  store i64 %5944, i64* %RDX.i402, align 8
  store %struct.Memory* %loadMem_426291, %struct.Memory** %MEMORY
  %loadMem_426295 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5946 = getelementptr inbounds %struct.GPR, %struct.GPR* %5945, i32 0, i32 33
  %5947 = getelementptr inbounds %struct.Reg, %struct.Reg* %5946, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %5947 to i64*
  %5948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5949 = getelementptr inbounds %struct.GPR, %struct.GPR* %5948, i32 0, i32 5
  %5950 = getelementptr inbounds %struct.Reg, %struct.Reg* %5949, i32 0, i32 0
  %ECX.i399 = bitcast %union.anon* %5950 to i32*
  %5951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5952 = getelementptr inbounds %struct.GPR, %struct.GPR* %5951, i32 0, i32 9
  %5953 = getelementptr inbounds %struct.Reg, %struct.Reg* %5952, i32 0, i32 0
  %RSI.i400 = bitcast %union.anon* %5953 to i64*
  %5954 = load i32, i32* %ECX.i399
  %5955 = zext i32 %5954 to i64
  %5956 = load i64, i64* %PC.i398
  %5957 = add i64 %5956, 2
  store i64 %5957, i64* %PC.i398
  %5958 = and i64 %5955, 4294967295
  store i64 %5958, i64* %RSI.i400, align 8
  store %struct.Memory* %loadMem_426295, %struct.Memory** %MEMORY
  %loadMem1_426297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5960 = getelementptr inbounds %struct.GPR, %struct.GPR* %5959, i32 0, i32 33
  %5961 = getelementptr inbounds %struct.Reg, %struct.Reg* %5960, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %5961 to i64*
  %5962 = load i64, i64* %PC.i397
  %5963 = add i64 %5962, 549897
  %5964 = load i64, i64* %PC.i397
  %5965 = add i64 %5964, 5
  %5966 = load i64, i64* %PC.i397
  %5967 = add i64 %5966, 5
  store i64 %5967, i64* %PC.i397
  %5968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5969 = load i64, i64* %5968, align 8
  %5970 = add i64 %5969, -8
  %5971 = inttoptr i64 %5970 to i64*
  store i64 %5965, i64* %5971
  store i64 %5970, i64* %5968, align 8
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5963, i64* %5972, align 8
  store %struct.Memory* %loadMem1_426297, %struct.Memory** %MEMORY
  %loadMem2_426297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_426297 = load i64, i64* %3
  %call2_426297 = call %struct.Memory* @sub_4ac6a0.ue_v(%struct.State* %0, i64 %loadPC_426297, %struct.Memory* %loadMem2_426297)
  store %struct.Memory* %call2_426297, %struct.Memory** %MEMORY
  %loadMem_42629c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5974 = getelementptr inbounds %struct.GPR, %struct.GPR* %5973, i32 0, i32 33
  %5975 = getelementptr inbounds %struct.Reg, %struct.Reg* %5974, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %5975 to i64*
  %5976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5977 = getelementptr inbounds %struct.GPR, %struct.GPR* %5976, i32 0, i32 1
  %5978 = getelementptr inbounds %struct.Reg, %struct.Reg* %5977, i32 0, i32 0
  %RAX.i395 = bitcast %union.anon* %5978 to i64*
  %5979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5980 = getelementptr inbounds %struct.GPR, %struct.GPR* %5979, i32 0, i32 15
  %5981 = getelementptr inbounds %struct.Reg, %struct.Reg* %5980, i32 0, i32 0
  %RBP.i396 = bitcast %union.anon* %5981 to i64*
  %5982 = load i64, i64* %RAX.i395
  %5983 = load i64, i64* %RBP.i396
  %5984 = sub i64 %5983, 28
  %5985 = load i64, i64* %PC.i394
  %5986 = add i64 %5985, 3
  store i64 %5986, i64* %PC.i394
  %5987 = trunc i64 %5982 to i32
  %5988 = inttoptr i64 %5984 to i32*
  %5989 = load i32, i32* %5988
  %5990 = add i32 %5989, %5987
  %5991 = zext i32 %5990 to i64
  store i64 %5991, i64* %RAX.i395, align 8
  %5992 = icmp ult i32 %5990, %5987
  %5993 = icmp ult i32 %5990, %5989
  %5994 = or i1 %5992, %5993
  %5995 = zext i1 %5994 to i8
  %5996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5995, i8* %5996, align 1
  %5997 = and i32 %5990, 255
  %5998 = call i32 @llvm.ctpop.i32(i32 %5997)
  %5999 = trunc i32 %5998 to i8
  %6000 = and i8 %5999, 1
  %6001 = xor i8 %6000, 1
  %6002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6001, i8* %6002, align 1
  %6003 = xor i32 %5989, %5987
  %6004 = xor i32 %6003, %5990
  %6005 = lshr i32 %6004, 4
  %6006 = trunc i32 %6005 to i8
  %6007 = and i8 %6006, 1
  %6008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6007, i8* %6008, align 1
  %6009 = icmp eq i32 %5990, 0
  %6010 = zext i1 %6009 to i8
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6010, i8* %6011, align 1
  %6012 = lshr i32 %5990, 31
  %6013 = trunc i32 %6012 to i8
  %6014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6013, i8* %6014, align 1
  %6015 = lshr i32 %5987, 31
  %6016 = lshr i32 %5989, 31
  %6017 = xor i32 %6012, %6015
  %6018 = xor i32 %6012, %6016
  %6019 = add i32 %6017, %6018
  %6020 = icmp eq i32 %6019, 2
  %6021 = zext i1 %6020 to i8
  %6022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6021, i8* %6022, align 1
  store %struct.Memory* %loadMem_42629c, %struct.Memory** %MEMORY
  %loadMem_42629f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6024 = getelementptr inbounds %struct.GPR, %struct.GPR* %6023, i32 0, i32 33
  %6025 = getelementptr inbounds %struct.Reg, %struct.Reg* %6024, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %6025 to i64*
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6027 = getelementptr inbounds %struct.GPR, %struct.GPR* %6026, i32 0, i32 1
  %6028 = getelementptr inbounds %struct.Reg, %struct.Reg* %6027, i32 0, i32 0
  %EAX.i392 = bitcast %union.anon* %6028 to i32*
  %6029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6030 = getelementptr inbounds %struct.GPR, %struct.GPR* %6029, i32 0, i32 15
  %6031 = getelementptr inbounds %struct.Reg, %struct.Reg* %6030, i32 0, i32 0
  %RBP.i393 = bitcast %union.anon* %6031 to i64*
  %6032 = load i64, i64* %RBP.i393
  %6033 = sub i64 %6032, 28
  %6034 = load i32, i32* %EAX.i392
  %6035 = zext i32 %6034 to i64
  %6036 = load i64, i64* %PC.i391
  %6037 = add i64 %6036, 3
  store i64 %6037, i64* %PC.i391
  %6038 = inttoptr i64 %6033 to i32*
  store i32 %6034, i32* %6038
  store %struct.Memory* %loadMem_42629f, %struct.Memory** %MEMORY
  br label %block_.L_4262a2

block_.L_4262a2:                                  ; preds = %block_426276, %block_426238
  %loadMem_4262a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6040 = getelementptr inbounds %struct.GPR, %struct.GPR* %6039, i32 0, i32 33
  %6041 = getelementptr inbounds %struct.Reg, %struct.Reg* %6040, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %6041 to i64*
  %6042 = load i64, i64* %PC.i390
  %6043 = add i64 %6042, 5
  %6044 = load i64, i64* %PC.i390
  %6045 = add i64 %6044, 5
  store i64 %6045, i64* %PC.i390
  %6046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6043, i64* %6046, align 8
  store %struct.Memory* %loadMem_4262a2, %struct.Memory** %MEMORY
  br label %block_.L_4262a7

block_.L_4262a7:                                  ; preds = %block_.L_4262a2, %block_.L_426212
  %loadMem_4262a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6048 = getelementptr inbounds %struct.GPR, %struct.GPR* %6047, i32 0, i32 33
  %6049 = getelementptr inbounds %struct.Reg, %struct.Reg* %6048, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %6049 to i64*
  %6050 = load i64, i64* %PC.i389
  %6051 = add i64 %6050, 5
  %6052 = load i64, i64* %PC.i389
  %6053 = add i64 %6052, 5
  store i64 %6053, i64* %PC.i389
  %6054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6051, i64* %6054, align 8
  store %struct.Memory* %loadMem_4262a7, %struct.Memory** %MEMORY
  br label %block_.L_4262ac

block_.L_4262ac:                                  ; preds = %block_.L_4262a7, %block_426142
  %loadMem1_4262ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %6055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6056 = getelementptr inbounds %struct.GPR, %struct.GPR* %6055, i32 0, i32 33
  %6057 = getelementptr inbounds %struct.Reg, %struct.Reg* %6056, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %6057 to i64*
  %6058 = load i64, i64* %PC.i388
  %6059 = add i64 %6058, 1076
  %6060 = load i64, i64* %PC.i388
  %6061 = add i64 %6060, 5
  %6062 = load i64, i64* %PC.i388
  %6063 = add i64 %6062, 5
  store i64 %6063, i64* %PC.i388
  %6064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6065 = load i64, i64* %6064, align 8
  %6066 = add i64 %6065, -8
  %6067 = inttoptr i64 %6066 to i64*
  store i64 %6061, i64* %6067
  store i64 %6066, i64* %6064, align 8
  %6068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6059, i64* %6068, align 8
  store %struct.Memory* %loadMem1_4262ac, %struct.Memory** %MEMORY
  %loadMem2_4262ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4262ac = load i64, i64* %3
  %call2_4262ac = call %struct.Memory* @sub_4266e0.ref_pic_list_reordering(%struct.State* %0, i64 %loadPC_4262ac, %struct.Memory* %loadMem2_4262ac)
  store %struct.Memory* %call2_4262ac, %struct.Memory** %MEMORY
  %loadMem_4262b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6070 = getelementptr inbounds %struct.GPR, %struct.GPR* %6069, i32 0, i32 33
  %6071 = getelementptr inbounds %struct.Reg, %struct.Reg* %6070, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %6071 to i64*
  %6072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6073 = getelementptr inbounds %struct.GPR, %struct.GPR* %6072, i32 0, i32 1
  %6074 = getelementptr inbounds %struct.Reg, %struct.Reg* %6073, i32 0, i32 0
  %RAX.i386 = bitcast %union.anon* %6074 to i64*
  %6075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6076 = getelementptr inbounds %struct.GPR, %struct.GPR* %6075, i32 0, i32 15
  %6077 = getelementptr inbounds %struct.Reg, %struct.Reg* %6076, i32 0, i32 0
  %RBP.i387 = bitcast %union.anon* %6077 to i64*
  %6078 = load i64, i64* %RAX.i386
  %6079 = load i64, i64* %RBP.i387
  %6080 = sub i64 %6079, 28
  %6081 = load i64, i64* %PC.i385
  %6082 = add i64 %6081, 3
  store i64 %6082, i64* %PC.i385
  %6083 = trunc i64 %6078 to i32
  %6084 = inttoptr i64 %6080 to i32*
  %6085 = load i32, i32* %6084
  %6086 = add i32 %6085, %6083
  %6087 = zext i32 %6086 to i64
  store i64 %6087, i64* %RAX.i386, align 8
  %6088 = icmp ult i32 %6086, %6083
  %6089 = icmp ult i32 %6086, %6085
  %6090 = or i1 %6088, %6089
  %6091 = zext i1 %6090 to i8
  %6092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6091, i8* %6092, align 1
  %6093 = and i32 %6086, 255
  %6094 = call i32 @llvm.ctpop.i32(i32 %6093)
  %6095 = trunc i32 %6094 to i8
  %6096 = and i8 %6095, 1
  %6097 = xor i8 %6096, 1
  %6098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6097, i8* %6098, align 1
  %6099 = xor i32 %6085, %6083
  %6100 = xor i32 %6099, %6086
  %6101 = lshr i32 %6100, 4
  %6102 = trunc i32 %6101 to i8
  %6103 = and i8 %6102, 1
  %6104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6103, i8* %6104, align 1
  %6105 = icmp eq i32 %6086, 0
  %6106 = zext i1 %6105 to i8
  %6107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6106, i8* %6107, align 1
  %6108 = lshr i32 %6086, 31
  %6109 = trunc i32 %6108 to i8
  %6110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6109, i8* %6110, align 1
  %6111 = lshr i32 %6083, 31
  %6112 = lshr i32 %6085, 31
  %6113 = xor i32 %6108, %6111
  %6114 = xor i32 %6108, %6112
  %6115 = add i32 %6113, %6114
  %6116 = icmp eq i32 %6115, 2
  %6117 = zext i1 %6116 to i8
  %6118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6117, i8* %6118, align 1
  store %struct.Memory* %loadMem_4262b1, %struct.Memory** %MEMORY
  %loadMem_4262b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6120 = getelementptr inbounds %struct.GPR, %struct.GPR* %6119, i32 0, i32 33
  %6121 = getelementptr inbounds %struct.Reg, %struct.Reg* %6120, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %6121 to i64*
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6123 = getelementptr inbounds %struct.GPR, %struct.GPR* %6122, i32 0, i32 1
  %6124 = getelementptr inbounds %struct.Reg, %struct.Reg* %6123, i32 0, i32 0
  %EAX.i383 = bitcast %union.anon* %6124 to i32*
  %6125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6126 = getelementptr inbounds %struct.GPR, %struct.GPR* %6125, i32 0, i32 15
  %6127 = getelementptr inbounds %struct.Reg, %struct.Reg* %6126, i32 0, i32 0
  %RBP.i384 = bitcast %union.anon* %6127 to i64*
  %6128 = load i64, i64* %RBP.i384
  %6129 = sub i64 %6128, 28
  %6130 = load i32, i32* %EAX.i383
  %6131 = zext i32 %6130 to i64
  %6132 = load i64, i64* %PC.i382
  %6133 = add i64 %6132, 3
  store i64 %6133, i64* %PC.i382
  %6134 = inttoptr i64 %6129 to i32*
  store i32 %6130, i32* %6134
  store %struct.Memory* %loadMem_4262b4, %struct.Memory** %MEMORY
  %loadMem_4262b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6136 = getelementptr inbounds %struct.GPR, %struct.GPR* %6135, i32 0, i32 33
  %6137 = getelementptr inbounds %struct.Reg, %struct.Reg* %6136, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %6137 to i64*
  %6138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6139 = getelementptr inbounds %struct.GPR, %struct.GPR* %6138, i32 0, i32 5
  %6140 = getelementptr inbounds %struct.Reg, %struct.Reg* %6139, i32 0, i32 0
  %RCX.i381 = bitcast %union.anon* %6140 to i64*
  %6141 = load i64, i64* %PC.i380
  %6142 = add i64 %6141, 8
  store i64 %6142, i64* %PC.i380
  %6143 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6143, i64* %RCX.i381, align 8
  store %struct.Memory* %loadMem_4262b7, %struct.Memory** %MEMORY
  %loadMem_4262bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6145 = getelementptr inbounds %struct.GPR, %struct.GPR* %6144, i32 0, i32 33
  %6146 = getelementptr inbounds %struct.Reg, %struct.Reg* %6145, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %6146 to i64*
  %6147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6148 = getelementptr inbounds %struct.GPR, %struct.GPR* %6147, i32 0, i32 5
  %6149 = getelementptr inbounds %struct.Reg, %struct.Reg* %6148, i32 0, i32 0
  %RCX.i379 = bitcast %union.anon* %6149 to i64*
  %6150 = load i64, i64* %RCX.i379
  %6151 = add i64 %6150, 24
  %6152 = load i64, i64* %PC.i378
  %6153 = add i64 %6152, 4
  store i64 %6153, i64* %PC.i378
  %6154 = inttoptr i64 %6151 to i32*
  %6155 = load i32, i32* %6154
  %6156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6156, align 1
  %6157 = and i32 %6155, 255
  %6158 = call i32 @llvm.ctpop.i32(i32 %6157)
  %6159 = trunc i32 %6158 to i8
  %6160 = and i8 %6159, 1
  %6161 = xor i8 %6160, 1
  %6162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6161, i8* %6162, align 1
  %6163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6163, align 1
  %6164 = icmp eq i32 %6155, 0
  %6165 = zext i1 %6164 to i8
  %6166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6165, i8* %6166, align 1
  %6167 = lshr i32 %6155, 31
  %6168 = trunc i32 %6167 to i8
  %6169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6168, i8* %6169, align 1
  %6170 = lshr i32 %6155, 31
  %6171 = xor i32 %6167, %6170
  %6172 = add i32 %6171, %6170
  %6173 = icmp eq i32 %6172, 2
  %6174 = zext i1 %6173 to i8
  %6175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6174, i8* %6175, align 1
  store %struct.Memory* %loadMem_4262bf, %struct.Memory** %MEMORY
  %loadMem_4262c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6177 = getelementptr inbounds %struct.GPR, %struct.GPR* %6176, i32 0, i32 33
  %6178 = getelementptr inbounds %struct.Reg, %struct.Reg* %6177, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %6178 to i64*
  %6179 = load i64, i64* %PC.i377
  %6180 = add i64 %6179, 24
  %6181 = load i64, i64* %PC.i377
  %6182 = add i64 %6181, 6
  %6183 = load i64, i64* %PC.i377
  %6184 = add i64 %6183, 6
  store i64 %6184, i64* %PC.i377
  %6185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6186 = load i8, i8* %6185, align 1
  store i8 %6186, i8* %BRANCH_TAKEN, align 1
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6188 = icmp ne i8 %6186, 0
  %6189 = select i1 %6188, i64 %6180, i64 %6182
  store i64 %6189, i64* %6187, align 8
  store %struct.Memory* %loadMem_4262c3, %struct.Memory** %MEMORY
  %loadBr_4262c3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4262c3 = icmp eq i8 %loadBr_4262c3, 1
  br i1 %cmpBr_4262c3, label %block_.L_4262db, label %block_4262c9

block_4262c9:                                     ; preds = %block_.L_4262ac
  %loadMem_4262c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6191 = getelementptr inbounds %struct.GPR, %struct.GPR* %6190, i32 0, i32 33
  %6192 = getelementptr inbounds %struct.Reg, %struct.Reg* %6191, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %6192 to i64*
  %6193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6194 = getelementptr inbounds %struct.GPR, %struct.GPR* %6193, i32 0, i32 1
  %6195 = getelementptr inbounds %struct.Reg, %struct.Reg* %6194, i32 0, i32 0
  %RAX.i376 = bitcast %union.anon* %6195 to i64*
  %6196 = load i64, i64* %PC.i375
  %6197 = add i64 %6196, 8
  store i64 %6197, i64* %PC.i375
  %6198 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6198, i64* %RAX.i376, align 8
  store %struct.Memory* %loadMem_4262c9, %struct.Memory** %MEMORY
  %loadMem_4262d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6200 = getelementptr inbounds %struct.GPR, %struct.GPR* %6199, i32 0, i32 33
  %6201 = getelementptr inbounds %struct.Reg, %struct.Reg* %6200, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %6201 to i64*
  %6202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6203 = getelementptr inbounds %struct.GPR, %struct.GPR* %6202, i32 0, i32 1
  %6204 = getelementptr inbounds %struct.Reg, %struct.Reg* %6203, i32 0, i32 0
  %RAX.i374 = bitcast %union.anon* %6204 to i64*
  %6205 = load i64, i64* %RAX.i374
  %6206 = add i64 %6205, 24
  %6207 = load i64, i64* %PC.i373
  %6208 = add i64 %6207, 4
  store i64 %6208, i64* %PC.i373
  %6209 = inttoptr i64 %6206 to i32*
  %6210 = load i32, i32* %6209
  %6211 = sub i32 %6210, 3
  %6212 = icmp ult i32 %6210, 3
  %6213 = zext i1 %6212 to i8
  %6214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6213, i8* %6214, align 1
  %6215 = and i32 %6211, 255
  %6216 = call i32 @llvm.ctpop.i32(i32 %6215)
  %6217 = trunc i32 %6216 to i8
  %6218 = and i8 %6217, 1
  %6219 = xor i8 %6218, 1
  %6220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6219, i8* %6220, align 1
  %6221 = xor i32 %6210, 3
  %6222 = xor i32 %6221, %6211
  %6223 = lshr i32 %6222, 4
  %6224 = trunc i32 %6223 to i8
  %6225 = and i8 %6224, 1
  %6226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6225, i8* %6226, align 1
  %6227 = icmp eq i32 %6211, 0
  %6228 = zext i1 %6227 to i8
  %6229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6228, i8* %6229, align 1
  %6230 = lshr i32 %6211, 31
  %6231 = trunc i32 %6230 to i8
  %6232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6231, i8* %6232, align 1
  %6233 = lshr i32 %6210, 31
  %6234 = xor i32 %6230, %6233
  %6235 = add i32 %6234, %6233
  %6236 = icmp eq i32 %6235, 2
  %6237 = zext i1 %6236 to i8
  %6238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6237, i8* %6238, align 1
  store %struct.Memory* %loadMem_4262d1, %struct.Memory** %MEMORY
  %loadMem_4262d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6240 = getelementptr inbounds %struct.GPR, %struct.GPR* %6239, i32 0, i32 33
  %6241 = getelementptr inbounds %struct.Reg, %struct.Reg* %6240, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %6241 to i64*
  %6242 = load i64, i64* %PC.i372
  %6243 = add i64 %6242, 27
  %6244 = load i64, i64* %PC.i372
  %6245 = add i64 %6244, 6
  %6246 = load i64, i64* %PC.i372
  %6247 = add i64 %6246, 6
  store i64 %6247, i64* %PC.i372
  %6248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6249 = load i8, i8* %6248, align 1
  %6250 = icmp eq i8 %6249, 0
  %6251 = zext i1 %6250 to i8
  store i8 %6251, i8* %BRANCH_TAKEN, align 1
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6253 = select i1 %6250, i64 %6243, i64 %6245
  store i64 %6253, i64* %6252, align 8
  store %struct.Memory* %loadMem_4262d5, %struct.Memory** %MEMORY
  %loadBr_4262d5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4262d5 = icmp eq i8 %loadBr_4262d5, 1
  br i1 %cmpBr_4262d5, label %block_.L_4262f0, label %block_.L_4262db

block_.L_4262db:                                  ; preds = %block_4262c9, %block_.L_4262ac
  %loadMem_4262db = load %struct.Memory*, %struct.Memory** %MEMORY
  %6254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6255 = getelementptr inbounds %struct.GPR, %struct.GPR* %6254, i32 0, i32 33
  %6256 = getelementptr inbounds %struct.Reg, %struct.Reg* %6255, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %6256 to i64*
  %6257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6258 = getelementptr inbounds %struct.GPR, %struct.GPR* %6257, i32 0, i32 1
  %6259 = getelementptr inbounds %struct.Reg, %struct.Reg* %6258, i32 0, i32 0
  %RAX.i371 = bitcast %union.anon* %6259 to i64*
  %6260 = load i64, i64* %PC.i370
  %6261 = add i64 %6260, 8
  store i64 %6261, i64* %PC.i370
  %6262 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %6262, i64* %RAX.i371, align 8
  store %struct.Memory* %loadMem_4262db, %struct.Memory** %MEMORY
  %loadMem_4262e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6264 = getelementptr inbounds %struct.GPR, %struct.GPR* %6263, i32 0, i32 33
  %6265 = getelementptr inbounds %struct.Reg, %struct.Reg* %6264, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %6265 to i64*
  %6266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6267 = getelementptr inbounds %struct.GPR, %struct.GPR* %6266, i32 0, i32 1
  %6268 = getelementptr inbounds %struct.Reg, %struct.Reg* %6267, i32 0, i32 0
  %RAX.i369 = bitcast %union.anon* %6268 to i64*
  %6269 = load i64, i64* %RAX.i369
  %6270 = add i64 %6269, 192
  %6271 = load i64, i64* %PC.i368
  %6272 = add i64 %6271, 7
  store i64 %6272, i64* %PC.i368
  %6273 = inttoptr i64 %6270 to i32*
  %6274 = load i32, i32* %6273
  %6275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6275, align 1
  %6276 = and i32 %6274, 255
  %6277 = call i32 @llvm.ctpop.i32(i32 %6276)
  %6278 = trunc i32 %6277 to i8
  %6279 = and i8 %6278, 1
  %6280 = xor i8 %6279, 1
  %6281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6280, i8* %6281, align 1
  %6282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6282, align 1
  %6283 = icmp eq i32 %6274, 0
  %6284 = zext i1 %6283 to i8
  %6285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6284, i8* %6285, align 1
  %6286 = lshr i32 %6274, 31
  %6287 = trunc i32 %6286 to i8
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6287, i8* %6288, align 1
  %6289 = lshr i32 %6274, 31
  %6290 = xor i32 %6286, %6289
  %6291 = add i32 %6290, %6289
  %6292 = icmp eq i32 %6291, 2
  %6293 = zext i1 %6292 to i8
  %6294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6293, i8* %6294, align 1
  store %struct.Memory* %loadMem_4262e3, %struct.Memory** %MEMORY
  %loadMem_4262ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %6295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6296 = getelementptr inbounds %struct.GPR, %struct.GPR* %6295, i32 0, i32 33
  %6297 = getelementptr inbounds %struct.Reg, %struct.Reg* %6296, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %6297 to i64*
  %6298 = load i64, i64* %PC.i367
  %6299 = add i64 %6298, 45
  %6300 = load i64, i64* %PC.i367
  %6301 = add i64 %6300, 6
  %6302 = load i64, i64* %PC.i367
  %6303 = add i64 %6302, 6
  store i64 %6303, i64* %PC.i367
  %6304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6305 = load i8, i8* %6304, align 1
  %6306 = icmp eq i8 %6305, 0
  %6307 = zext i1 %6306 to i8
  store i8 %6307, i8* %BRANCH_TAKEN, align 1
  %6308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6309 = select i1 %6306, i64 %6299, i64 %6301
  store i64 %6309, i64* %6308, align 8
  store %struct.Memory* %loadMem_4262ea, %struct.Memory** %MEMORY
  %loadBr_4262ea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4262ea = icmp eq i8 %loadBr_4262ea, 1
  br i1 %cmpBr_4262ea, label %block_.L_426317, label %block_.L_4262f0

block_.L_4262f0:                                  ; preds = %block_.L_4262db, %block_4262c9
  %loadMem_4262f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6311 = getelementptr inbounds %struct.GPR, %struct.GPR* %6310, i32 0, i32 33
  %6312 = getelementptr inbounds %struct.Reg, %struct.Reg* %6311, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %6312 to i64*
  %6313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6314 = getelementptr inbounds %struct.GPR, %struct.GPR* %6313, i32 0, i32 1
  %6315 = getelementptr inbounds %struct.Reg, %struct.Reg* %6314, i32 0, i32 0
  %RAX.i366 = bitcast %union.anon* %6315 to i64*
  %6316 = load i64, i64* %PC.i365
  %6317 = add i64 %6316, 8
  store i64 %6317, i64* %PC.i365
  %6318 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6318, i64* %RAX.i366, align 8
  store %struct.Memory* %loadMem_4262f0, %struct.Memory** %MEMORY
  %loadMem_4262f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6320 = getelementptr inbounds %struct.GPR, %struct.GPR* %6319, i32 0, i32 33
  %6321 = getelementptr inbounds %struct.Reg, %struct.Reg* %6320, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %6321 to i64*
  %6322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6323 = getelementptr inbounds %struct.GPR, %struct.GPR* %6322, i32 0, i32 1
  %6324 = getelementptr inbounds %struct.Reg, %struct.Reg* %6323, i32 0, i32 0
  %RAX.i364 = bitcast %union.anon* %6324 to i64*
  %6325 = load i64, i64* %RAX.i364
  %6326 = add i64 %6325, 24
  %6327 = load i64, i64* %PC.i363
  %6328 = add i64 %6327, 4
  store i64 %6328, i64* %PC.i363
  %6329 = inttoptr i64 %6326 to i32*
  %6330 = load i32, i32* %6329
  %6331 = sub i32 %6330, 1
  %6332 = icmp ult i32 %6330, 1
  %6333 = zext i1 %6332 to i8
  %6334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6333, i8* %6334, align 1
  %6335 = and i32 %6331, 255
  %6336 = call i32 @llvm.ctpop.i32(i32 %6335)
  %6337 = trunc i32 %6336 to i8
  %6338 = and i8 %6337, 1
  %6339 = xor i8 %6338, 1
  %6340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6339, i8* %6340, align 1
  %6341 = xor i32 %6330, 1
  %6342 = xor i32 %6341, %6331
  %6343 = lshr i32 %6342, 4
  %6344 = trunc i32 %6343 to i8
  %6345 = and i8 %6344, 1
  %6346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6345, i8* %6346, align 1
  %6347 = icmp eq i32 %6331, 0
  %6348 = zext i1 %6347 to i8
  %6349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6348, i8* %6349, align 1
  %6350 = lshr i32 %6331, 31
  %6351 = trunc i32 %6350 to i8
  %6352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6351, i8* %6352, align 1
  %6353 = lshr i32 %6330, 31
  %6354 = xor i32 %6350, %6353
  %6355 = add i32 %6354, %6353
  %6356 = icmp eq i32 %6355, 2
  %6357 = zext i1 %6356 to i8
  %6358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6357, i8* %6358, align 1
  store %struct.Memory* %loadMem_4262f8, %struct.Memory** %MEMORY
  %loadMem_4262fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6360 = getelementptr inbounds %struct.GPR, %struct.GPR* %6359, i32 0, i32 33
  %6361 = getelementptr inbounds %struct.Reg, %struct.Reg* %6360, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %6361 to i64*
  %6362 = load i64, i64* %PC.i362
  %6363 = add i64 %6362, 38
  %6364 = load i64, i64* %PC.i362
  %6365 = add i64 %6364, 6
  %6366 = load i64, i64* %PC.i362
  %6367 = add i64 %6366, 6
  store i64 %6367, i64* %PC.i362
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6369 = load i8, i8* %6368, align 1
  %6370 = icmp eq i8 %6369, 0
  %6371 = zext i1 %6370 to i8
  store i8 %6371, i8* %BRANCH_TAKEN, align 1
  %6372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6373 = select i1 %6370, i64 %6363, i64 %6365
  store i64 %6373, i64* %6372, align 8
  store %struct.Memory* %loadMem_4262fc, %struct.Memory** %MEMORY
  %loadBr_4262fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4262fc = icmp eq i8 %loadBr_4262fc, 1
  br i1 %cmpBr_4262fc, label %block_.L_426322, label %block_426302

block_426302:                                     ; preds = %block_.L_4262f0
  %loadMem_426302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6375 = getelementptr inbounds %struct.GPR, %struct.GPR* %6374, i32 0, i32 33
  %6376 = getelementptr inbounds %struct.Reg, %struct.Reg* %6375, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %6376 to i64*
  %6377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6378 = getelementptr inbounds %struct.GPR, %struct.GPR* %6377, i32 0, i32 1
  %6379 = getelementptr inbounds %struct.Reg, %struct.Reg* %6378, i32 0, i32 0
  %RAX.i361 = bitcast %union.anon* %6379 to i64*
  %6380 = load i64, i64* %PC.i360
  %6381 = add i64 %6380, 8
  store i64 %6381, i64* %PC.i360
  %6382 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %6382, i64* %RAX.i361, align 8
  store %struct.Memory* %loadMem_426302, %struct.Memory** %MEMORY
  %loadMem_42630a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6384 = getelementptr inbounds %struct.GPR, %struct.GPR* %6383, i32 0, i32 33
  %6385 = getelementptr inbounds %struct.Reg, %struct.Reg* %6384, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %6385 to i64*
  %6386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6387 = getelementptr inbounds %struct.GPR, %struct.GPR* %6386, i32 0, i32 1
  %6388 = getelementptr inbounds %struct.Reg, %struct.Reg* %6387, i32 0, i32 0
  %RAX.i359 = bitcast %union.anon* %6388 to i64*
  %6389 = load i64, i64* %RAX.i359
  %6390 = add i64 %6389, 196
  %6391 = load i64, i64* %PC.i358
  %6392 = add i64 %6391, 7
  store i64 %6392, i64* %PC.i358
  %6393 = inttoptr i64 %6390 to i32*
  %6394 = load i32, i32* %6393
  %6395 = sub i32 %6394, 1
  %6396 = icmp ult i32 %6394, 1
  %6397 = zext i1 %6396 to i8
  %6398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6397, i8* %6398, align 1
  %6399 = and i32 %6395, 255
  %6400 = call i32 @llvm.ctpop.i32(i32 %6399)
  %6401 = trunc i32 %6400 to i8
  %6402 = and i8 %6401, 1
  %6403 = xor i8 %6402, 1
  %6404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6403, i8* %6404, align 1
  %6405 = xor i32 %6394, 1
  %6406 = xor i32 %6405, %6395
  %6407 = lshr i32 %6406, 4
  %6408 = trunc i32 %6407 to i8
  %6409 = and i8 %6408, 1
  %6410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6409, i8* %6410, align 1
  %6411 = icmp eq i32 %6395, 0
  %6412 = zext i1 %6411 to i8
  %6413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6412, i8* %6413, align 1
  %6414 = lshr i32 %6395, 31
  %6415 = trunc i32 %6414 to i8
  %6416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6415, i8* %6416, align 1
  %6417 = lshr i32 %6394, 31
  %6418 = xor i32 %6414, %6417
  %6419 = add i32 %6418, %6417
  %6420 = icmp eq i32 %6419, 2
  %6421 = zext i1 %6420 to i8
  %6422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6421, i8* %6422, align 1
  store %struct.Memory* %loadMem_42630a, %struct.Memory** %MEMORY
  %loadMem_426311 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6424 = getelementptr inbounds %struct.GPR, %struct.GPR* %6423, i32 0, i32 33
  %6425 = getelementptr inbounds %struct.Reg, %struct.Reg* %6424, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %6425 to i64*
  %6426 = load i64, i64* %PC.i357
  %6427 = add i64 %6426, 17
  %6428 = load i64, i64* %PC.i357
  %6429 = add i64 %6428, 6
  %6430 = load i64, i64* %PC.i357
  %6431 = add i64 %6430, 6
  store i64 %6431, i64* %PC.i357
  %6432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6433 = load i8, i8* %6432, align 1
  %6434 = icmp eq i8 %6433, 0
  %6435 = zext i1 %6434 to i8
  store i8 %6435, i8* %BRANCH_TAKEN, align 1
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6437 = select i1 %6434, i64 %6427, i64 %6429
  store i64 %6437, i64* %6436, align 8
  store %struct.Memory* %loadMem_426311, %struct.Memory** %MEMORY
  %loadBr_426311 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_426311 = icmp eq i8 %loadBr_426311, 1
  br i1 %cmpBr_426311, label %block_.L_426322, label %block_.L_426317

block_.L_426317:                                  ; preds = %block_426302, %block_.L_4262db
  %loadMem1_426317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6439 = getelementptr inbounds %struct.GPR, %struct.GPR* %6438, i32 0, i32 33
  %6440 = getelementptr inbounds %struct.Reg, %struct.Reg* %6439, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %6440 to i64*
  %6441 = load i64, i64* %PC.i356
  %6442 = add i64 %6441, 1705
  %6443 = load i64, i64* %PC.i356
  %6444 = add i64 %6443, 5
  %6445 = load i64, i64* %PC.i356
  %6446 = add i64 %6445, 5
  store i64 %6446, i64* %PC.i356
  %6447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6448 = load i64, i64* %6447, align 8
  %6449 = add i64 %6448, -8
  %6450 = inttoptr i64 %6449 to i64*
  store i64 %6444, i64* %6450
  store i64 %6449, i64* %6447, align 8
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6442, i64* %6451, align 8
  store %struct.Memory* %loadMem1_426317, %struct.Memory** %MEMORY
  %loadMem2_426317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_426317 = load i64, i64* %3
  %call2_426317 = call %struct.Memory* @sub_4269c0.pred_weight_table(%struct.State* %0, i64 %loadPC_426317, %struct.Memory* %loadMem2_426317)
  store %struct.Memory* %call2_426317, %struct.Memory** %MEMORY
  %loadMem_42631c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6453 = getelementptr inbounds %struct.GPR, %struct.GPR* %6452, i32 0, i32 33
  %6454 = getelementptr inbounds %struct.Reg, %struct.Reg* %6453, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %6454 to i64*
  %6455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6456 = getelementptr inbounds %struct.GPR, %struct.GPR* %6455, i32 0, i32 1
  %6457 = getelementptr inbounds %struct.Reg, %struct.Reg* %6456, i32 0, i32 0
  %RAX.i354 = bitcast %union.anon* %6457 to i64*
  %6458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6459 = getelementptr inbounds %struct.GPR, %struct.GPR* %6458, i32 0, i32 15
  %6460 = getelementptr inbounds %struct.Reg, %struct.Reg* %6459, i32 0, i32 0
  %RBP.i355 = bitcast %union.anon* %6460 to i64*
  %6461 = load i64, i64* %RAX.i354
  %6462 = load i64, i64* %RBP.i355
  %6463 = sub i64 %6462, 28
  %6464 = load i64, i64* %PC.i353
  %6465 = add i64 %6464, 3
  store i64 %6465, i64* %PC.i353
  %6466 = trunc i64 %6461 to i32
  %6467 = inttoptr i64 %6463 to i32*
  %6468 = load i32, i32* %6467
  %6469 = add i32 %6468, %6466
  %6470 = zext i32 %6469 to i64
  store i64 %6470, i64* %RAX.i354, align 8
  %6471 = icmp ult i32 %6469, %6466
  %6472 = icmp ult i32 %6469, %6468
  %6473 = or i1 %6471, %6472
  %6474 = zext i1 %6473 to i8
  %6475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6474, i8* %6475, align 1
  %6476 = and i32 %6469, 255
  %6477 = call i32 @llvm.ctpop.i32(i32 %6476)
  %6478 = trunc i32 %6477 to i8
  %6479 = and i8 %6478, 1
  %6480 = xor i8 %6479, 1
  %6481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6480, i8* %6481, align 1
  %6482 = xor i32 %6468, %6466
  %6483 = xor i32 %6482, %6469
  %6484 = lshr i32 %6483, 4
  %6485 = trunc i32 %6484 to i8
  %6486 = and i8 %6485, 1
  %6487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6486, i8* %6487, align 1
  %6488 = icmp eq i32 %6469, 0
  %6489 = zext i1 %6488 to i8
  %6490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6489, i8* %6490, align 1
  %6491 = lshr i32 %6469, 31
  %6492 = trunc i32 %6491 to i8
  %6493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6492, i8* %6493, align 1
  %6494 = lshr i32 %6466, 31
  %6495 = lshr i32 %6468, 31
  %6496 = xor i32 %6491, %6494
  %6497 = xor i32 %6491, %6495
  %6498 = add i32 %6496, %6497
  %6499 = icmp eq i32 %6498, 2
  %6500 = zext i1 %6499 to i8
  %6501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6500, i8* %6501, align 1
  store %struct.Memory* %loadMem_42631c, %struct.Memory** %MEMORY
  %loadMem_42631f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6503 = getelementptr inbounds %struct.GPR, %struct.GPR* %6502, i32 0, i32 33
  %6504 = getelementptr inbounds %struct.Reg, %struct.Reg* %6503, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %6504 to i64*
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6506 = getelementptr inbounds %struct.GPR, %struct.GPR* %6505, i32 0, i32 1
  %6507 = getelementptr inbounds %struct.Reg, %struct.Reg* %6506, i32 0, i32 0
  %EAX.i351 = bitcast %union.anon* %6507 to i32*
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6509 = getelementptr inbounds %struct.GPR, %struct.GPR* %6508, i32 0, i32 15
  %6510 = getelementptr inbounds %struct.Reg, %struct.Reg* %6509, i32 0, i32 0
  %RBP.i352 = bitcast %union.anon* %6510 to i64*
  %6511 = load i64, i64* %RBP.i352
  %6512 = sub i64 %6511, 28
  %6513 = load i32, i32* %EAX.i351
  %6514 = zext i32 %6513 to i64
  %6515 = load i64, i64* %PC.i350
  %6516 = add i64 %6515, 3
  store i64 %6516, i64* %PC.i350
  %6517 = inttoptr i64 %6512 to i32*
  store i32 %6513, i32* %6517
  store %struct.Memory* %loadMem_42631f, %struct.Memory** %MEMORY
  br label %block_.L_426322

block_.L_426322:                                  ; preds = %block_.L_426317, %block_426302, %block_.L_4262f0
  %loadMem_426322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6519 = getelementptr inbounds %struct.GPR, %struct.GPR* %6518, i32 0, i32 33
  %6520 = getelementptr inbounds %struct.Reg, %struct.Reg* %6519, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %6520 to i64*
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6522 = getelementptr inbounds %struct.GPR, %struct.GPR* %6521, i32 0, i32 1
  %6523 = getelementptr inbounds %struct.Reg, %struct.Reg* %6522, i32 0, i32 0
  %RAX.i349 = bitcast %union.anon* %6523 to i64*
  %6524 = load i64, i64* %PC.i348
  %6525 = add i64 %6524, 8
  store i64 %6525, i64* %PC.i348
  %6526 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6526, i64* %RAX.i349, align 8
  store %struct.Memory* %loadMem_426322, %struct.Memory** %MEMORY
  %loadMem_42632a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6528 = getelementptr inbounds %struct.GPR, %struct.GPR* %6527, i32 0, i32 33
  %6529 = getelementptr inbounds %struct.Reg, %struct.Reg* %6528, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %6529 to i64*
  %6530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6531 = getelementptr inbounds %struct.GPR, %struct.GPR* %6530, i32 0, i32 1
  %6532 = getelementptr inbounds %struct.Reg, %struct.Reg* %6531, i32 0, i32 0
  %RAX.i347 = bitcast %union.anon* %6532 to i64*
  %6533 = load i64, i64* %RAX.i347
  %6534 = add i64 %6533, 72496
  %6535 = load i64, i64* %PC.i346
  %6536 = add i64 %6535, 7
  store i64 %6536, i64* %PC.i346
  %6537 = inttoptr i64 %6534 to i32*
  %6538 = load i32, i32* %6537
  %6539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6539, align 1
  %6540 = and i32 %6538, 255
  %6541 = call i32 @llvm.ctpop.i32(i32 %6540)
  %6542 = trunc i32 %6541 to i8
  %6543 = and i8 %6542, 1
  %6544 = xor i8 %6543, 1
  %6545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6544, i8* %6545, align 1
  %6546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6546, align 1
  %6547 = icmp eq i32 %6538, 0
  %6548 = zext i1 %6547 to i8
  %6549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6548, i8* %6549, align 1
  %6550 = lshr i32 %6538, 31
  %6551 = trunc i32 %6550 to i8
  %6552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6551, i8* %6552, align 1
  %6553 = lshr i32 %6538, 31
  %6554 = xor i32 %6550, %6553
  %6555 = add i32 %6554, %6553
  %6556 = icmp eq i32 %6555, 2
  %6557 = zext i1 %6556 to i8
  %6558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6557, i8* %6558, align 1
  store %struct.Memory* %loadMem_42632a, %struct.Memory** %MEMORY
  %loadMem_426331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6560 = getelementptr inbounds %struct.GPR, %struct.GPR* %6559, i32 0, i32 33
  %6561 = getelementptr inbounds %struct.Reg, %struct.Reg* %6560, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %6561 to i64*
  %6562 = load i64, i64* %PC.i345
  %6563 = add i64 %6562, 17
  %6564 = load i64, i64* %PC.i345
  %6565 = add i64 %6564, 6
  %6566 = load i64, i64* %PC.i345
  %6567 = add i64 %6566, 6
  store i64 %6567, i64* %PC.i345
  %6568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6569 = load i8, i8* %6568, align 1
  store i8 %6569, i8* %BRANCH_TAKEN, align 1
  %6570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6571 = icmp ne i8 %6569, 0
  %6572 = select i1 %6571, i64 %6563, i64 %6565
  store i64 %6572, i64* %6570, align 8
  store %struct.Memory* %loadMem_426331, %struct.Memory** %MEMORY
  %loadBr_426331 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_426331 = icmp eq i8 %loadBr_426331, 1
  br i1 %cmpBr_426331, label %block_.L_426342, label %block_426337

block_426337:                                     ; preds = %block_.L_426322
  %loadMem1_426337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6574 = getelementptr inbounds %struct.GPR, %struct.GPR* %6573, i32 0, i32 33
  %6575 = getelementptr inbounds %struct.Reg, %struct.Reg* %6574, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %6575 to i64*
  %6576 = load i64, i64* %PC.i344
  %6577 = add i64 %6576, 3097
  %6578 = load i64, i64* %PC.i344
  %6579 = add i64 %6578, 5
  %6580 = load i64, i64* %PC.i344
  %6581 = add i64 %6580, 5
  store i64 %6581, i64* %PC.i344
  %6582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6583 = load i64, i64* %6582, align 8
  %6584 = add i64 %6583, -8
  %6585 = inttoptr i64 %6584 to i64*
  store i64 %6579, i64* %6585
  store i64 %6584, i64* %6582, align 8
  %6586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6577, i64* %6586, align 8
  store %struct.Memory* %loadMem1_426337, %struct.Memory** %MEMORY
  %loadMem2_426337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_426337 = load i64, i64* %3
  %call2_426337 = call %struct.Memory* @sub_426f50.dec_ref_pic_marking(%struct.State* %0, i64 %loadPC_426337, %struct.Memory* %loadMem2_426337)
  store %struct.Memory* %call2_426337, %struct.Memory** %MEMORY
  %loadMem_42633c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6588 = getelementptr inbounds %struct.GPR, %struct.GPR* %6587, i32 0, i32 33
  %6589 = getelementptr inbounds %struct.Reg, %struct.Reg* %6588, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %6589 to i64*
  %6590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6591 = getelementptr inbounds %struct.GPR, %struct.GPR* %6590, i32 0, i32 1
  %6592 = getelementptr inbounds %struct.Reg, %struct.Reg* %6591, i32 0, i32 0
  %RAX.i342 = bitcast %union.anon* %6592 to i64*
  %6593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6594 = getelementptr inbounds %struct.GPR, %struct.GPR* %6593, i32 0, i32 15
  %6595 = getelementptr inbounds %struct.Reg, %struct.Reg* %6594, i32 0, i32 0
  %RBP.i343 = bitcast %union.anon* %6595 to i64*
  %6596 = load i64, i64* %RAX.i342
  %6597 = load i64, i64* %RBP.i343
  %6598 = sub i64 %6597, 28
  %6599 = load i64, i64* %PC.i341
  %6600 = add i64 %6599, 3
  store i64 %6600, i64* %PC.i341
  %6601 = trunc i64 %6596 to i32
  %6602 = inttoptr i64 %6598 to i32*
  %6603 = load i32, i32* %6602
  %6604 = add i32 %6603, %6601
  %6605 = zext i32 %6604 to i64
  store i64 %6605, i64* %RAX.i342, align 8
  %6606 = icmp ult i32 %6604, %6601
  %6607 = icmp ult i32 %6604, %6603
  %6608 = or i1 %6606, %6607
  %6609 = zext i1 %6608 to i8
  %6610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6609, i8* %6610, align 1
  %6611 = and i32 %6604, 255
  %6612 = call i32 @llvm.ctpop.i32(i32 %6611)
  %6613 = trunc i32 %6612 to i8
  %6614 = and i8 %6613, 1
  %6615 = xor i8 %6614, 1
  %6616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6615, i8* %6616, align 1
  %6617 = xor i32 %6603, %6601
  %6618 = xor i32 %6617, %6604
  %6619 = lshr i32 %6618, 4
  %6620 = trunc i32 %6619 to i8
  %6621 = and i8 %6620, 1
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6621, i8* %6622, align 1
  %6623 = icmp eq i32 %6604, 0
  %6624 = zext i1 %6623 to i8
  %6625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6624, i8* %6625, align 1
  %6626 = lshr i32 %6604, 31
  %6627 = trunc i32 %6626 to i8
  %6628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6627, i8* %6628, align 1
  %6629 = lshr i32 %6601, 31
  %6630 = lshr i32 %6603, 31
  %6631 = xor i32 %6626, %6629
  %6632 = xor i32 %6626, %6630
  %6633 = add i32 %6631, %6632
  %6634 = icmp eq i32 %6633, 2
  %6635 = zext i1 %6634 to i8
  %6636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6635, i8* %6636, align 1
  store %struct.Memory* %loadMem_42633c, %struct.Memory** %MEMORY
  %loadMem_42633f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6638 = getelementptr inbounds %struct.GPR, %struct.GPR* %6637, i32 0, i32 33
  %6639 = getelementptr inbounds %struct.Reg, %struct.Reg* %6638, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %6639 to i64*
  %6640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6641 = getelementptr inbounds %struct.GPR, %struct.GPR* %6640, i32 0, i32 1
  %6642 = getelementptr inbounds %struct.Reg, %struct.Reg* %6641, i32 0, i32 0
  %EAX.i339 = bitcast %union.anon* %6642 to i32*
  %6643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6644 = getelementptr inbounds %struct.GPR, %struct.GPR* %6643, i32 0, i32 15
  %6645 = getelementptr inbounds %struct.Reg, %struct.Reg* %6644, i32 0, i32 0
  %RBP.i340 = bitcast %union.anon* %6645 to i64*
  %6646 = load i64, i64* %RBP.i340
  %6647 = sub i64 %6646, 28
  %6648 = load i32, i32* %EAX.i339
  %6649 = zext i32 %6648 to i64
  %6650 = load i64, i64* %PC.i338
  %6651 = add i64 %6650, 3
  store i64 %6651, i64* %PC.i338
  %6652 = inttoptr i64 %6647 to i32*
  store i32 %6648, i32* %6652
  store %struct.Memory* %loadMem_42633f, %struct.Memory** %MEMORY
  br label %block_.L_426342

block_.L_426342:                                  ; preds = %block_426337, %block_.L_426322
  %loadMem_426342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6654 = getelementptr inbounds %struct.GPR, %struct.GPR* %6653, i32 0, i32 33
  %6655 = getelementptr inbounds %struct.Reg, %struct.Reg* %6654, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %6655 to i64*
  %6656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6657 = getelementptr inbounds %struct.GPR, %struct.GPR* %6656, i32 0, i32 1
  %6658 = getelementptr inbounds %struct.Reg, %struct.Reg* %6657, i32 0, i32 0
  %RAX.i337 = bitcast %union.anon* %6658 to i64*
  %6659 = load i64, i64* %PC.i336
  %6660 = add i64 %6659, 8
  store i64 %6660, i64* %PC.i336
  %6661 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %6661, i64* %RAX.i337, align 8
  store %struct.Memory* %loadMem_426342, %struct.Memory** %MEMORY
  %loadMem_42634a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6663 = getelementptr inbounds %struct.GPR, %struct.GPR* %6662, i32 0, i32 33
  %6664 = getelementptr inbounds %struct.Reg, %struct.Reg* %6663, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %6664 to i64*
  %6665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6666 = getelementptr inbounds %struct.GPR, %struct.GPR* %6665, i32 0, i32 1
  %6667 = getelementptr inbounds %struct.Reg, %struct.Reg* %6666, i32 0, i32 0
  %RAX.i335 = bitcast %union.anon* %6667 to i64*
  %6668 = load i64, i64* %RAX.i335
  %6669 = add i64 %6668, 2356
  %6670 = load i64, i64* %PC.i334
  %6671 = add i64 %6670, 7
  store i64 %6671, i64* %PC.i334
  %6672 = inttoptr i64 %6669 to i32*
  %6673 = load i32, i32* %6672
  %6674 = sub i32 %6673, 1
  %6675 = icmp ult i32 %6673, 1
  %6676 = zext i1 %6675 to i8
  %6677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6676, i8* %6677, align 1
  %6678 = and i32 %6674, 255
  %6679 = call i32 @llvm.ctpop.i32(i32 %6678)
  %6680 = trunc i32 %6679 to i8
  %6681 = and i8 %6680, 1
  %6682 = xor i8 %6681, 1
  %6683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6682, i8* %6683, align 1
  %6684 = xor i32 %6673, 1
  %6685 = xor i32 %6684, %6674
  %6686 = lshr i32 %6685, 4
  %6687 = trunc i32 %6686 to i8
  %6688 = and i8 %6687, 1
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6688, i8* %6689, align 1
  %6690 = icmp eq i32 %6674, 0
  %6691 = zext i1 %6690 to i8
  %6692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6691, i8* %6692, align 1
  %6693 = lshr i32 %6674, 31
  %6694 = trunc i32 %6693 to i8
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6694, i8* %6695, align 1
  %6696 = lshr i32 %6673, 31
  %6697 = xor i32 %6693, %6696
  %6698 = add i32 %6697, %6696
  %6699 = icmp eq i32 %6698, 2
  %6700 = zext i1 %6699 to i8
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6700, i8* %6701, align 1
  store %struct.Memory* %loadMem_42634a, %struct.Memory** %MEMORY
  %loadMem_426351 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6703 = getelementptr inbounds %struct.GPR, %struct.GPR* %6702, i32 0, i32 33
  %6704 = getelementptr inbounds %struct.Reg, %struct.Reg* %6703, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %6704 to i64*
  %6705 = load i64, i64* %PC.i333
  %6706 = add i64 %6705, 63
  %6707 = load i64, i64* %PC.i333
  %6708 = add i64 %6707, 6
  %6709 = load i64, i64* %PC.i333
  %6710 = add i64 %6709, 6
  store i64 %6710, i64* %PC.i333
  %6711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6712 = load i8, i8* %6711, align 1
  %6713 = icmp eq i8 %6712, 0
  %6714 = zext i1 %6713 to i8
  store i8 %6714, i8* %BRANCH_TAKEN, align 1
  %6715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6716 = select i1 %6713, i64 %6706, i64 %6708
  store i64 %6716, i64* %6715, align 8
  store %struct.Memory* %loadMem_426351, %struct.Memory** %MEMORY
  %loadBr_426351 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_426351 = icmp eq i8 %loadBr_426351, 1
  br i1 %cmpBr_426351, label %block_.L_426390, label %block_426357

block_426357:                                     ; preds = %block_.L_426342
  %loadMem_426357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6718 = getelementptr inbounds %struct.GPR, %struct.GPR* %6717, i32 0, i32 33
  %6719 = getelementptr inbounds %struct.Reg, %struct.Reg* %6718, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %6719 to i64*
  %6720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6721 = getelementptr inbounds %struct.GPR, %struct.GPR* %6720, i32 0, i32 1
  %6722 = getelementptr inbounds %struct.Reg, %struct.Reg* %6721, i32 0, i32 0
  %RAX.i332 = bitcast %union.anon* %6722 to i64*
  %6723 = load i64, i64* %PC.i331
  %6724 = add i64 %6723, 8
  store i64 %6724, i64* %PC.i331
  %6725 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6725, i64* %RAX.i332, align 8
  store %struct.Memory* %loadMem_426357, %struct.Memory** %MEMORY
  %loadMem_42635f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6727 = getelementptr inbounds %struct.GPR, %struct.GPR* %6726, i32 0, i32 33
  %6728 = getelementptr inbounds %struct.Reg, %struct.Reg* %6727, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %6728 to i64*
  %6729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6730 = getelementptr inbounds %struct.GPR, %struct.GPR* %6729, i32 0, i32 1
  %6731 = getelementptr inbounds %struct.Reg, %struct.Reg* %6730, i32 0, i32 0
  %RAX.i330 = bitcast %union.anon* %6731 to i64*
  %6732 = load i64, i64* %RAX.i330
  %6733 = add i64 %6732, 24
  %6734 = load i64, i64* %PC.i329
  %6735 = add i64 %6734, 4
  store i64 %6735, i64* %PC.i329
  %6736 = inttoptr i64 %6733 to i32*
  %6737 = load i32, i32* %6736
  %6738 = sub i32 %6737, 2
  %6739 = icmp ult i32 %6737, 2
  %6740 = zext i1 %6739 to i8
  %6741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6740, i8* %6741, align 1
  %6742 = and i32 %6738, 255
  %6743 = call i32 @llvm.ctpop.i32(i32 %6742)
  %6744 = trunc i32 %6743 to i8
  %6745 = and i8 %6744, 1
  %6746 = xor i8 %6745, 1
  %6747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6746, i8* %6747, align 1
  %6748 = xor i32 %6737, 2
  %6749 = xor i32 %6748, %6738
  %6750 = lshr i32 %6749, 4
  %6751 = trunc i32 %6750 to i8
  %6752 = and i8 %6751, 1
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6752, i8* %6753, align 1
  %6754 = icmp eq i32 %6738, 0
  %6755 = zext i1 %6754 to i8
  %6756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6755, i8* %6756, align 1
  %6757 = lshr i32 %6738, 31
  %6758 = trunc i32 %6757 to i8
  %6759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6758, i8* %6759, align 1
  %6760 = lshr i32 %6737, 31
  %6761 = xor i32 %6757, %6760
  %6762 = add i32 %6761, %6760
  %6763 = icmp eq i32 %6762, 2
  %6764 = zext i1 %6763 to i8
  %6765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6764, i8* %6765, align 1
  store %struct.Memory* %loadMem_42635f, %struct.Memory** %MEMORY
  %loadMem_426363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6767 = getelementptr inbounds %struct.GPR, %struct.GPR* %6766, i32 0, i32 33
  %6768 = getelementptr inbounds %struct.Reg, %struct.Reg* %6767, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %6768 to i64*
  %6769 = load i64, i64* %PC.i328
  %6770 = add i64 %6769, 45
  %6771 = load i64, i64* %PC.i328
  %6772 = add i64 %6771, 6
  %6773 = load i64, i64* %PC.i328
  %6774 = add i64 %6773, 6
  store i64 %6774, i64* %PC.i328
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6776 = load i8, i8* %6775, align 1
  store i8 %6776, i8* %BRANCH_TAKEN, align 1
  %6777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6778 = icmp ne i8 %6776, 0
  %6779 = select i1 %6778, i64 %6770, i64 %6772
  store i64 %6779, i64* %6777, align 8
  store %struct.Memory* %loadMem_426363, %struct.Memory** %MEMORY
  %loadBr_426363 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_426363 = icmp eq i8 %loadBr_426363, 1
  br i1 %cmpBr_426363, label %block_.L_426390, label %block_426369

block_426369:                                     ; preds = %block_426357
  %loadMem_426369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6781 = getelementptr inbounds %struct.GPR, %struct.GPR* %6780, i32 0, i32 33
  %6782 = getelementptr inbounds %struct.Reg, %struct.Reg* %6781, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %6782 to i64*
  %6783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6784 = getelementptr inbounds %struct.GPR, %struct.GPR* %6783, i32 0, i32 11
  %6785 = getelementptr inbounds %struct.Reg, %struct.Reg* %6784, i32 0, i32 0
  %RDI.i327 = bitcast %union.anon* %6785 to i64*
  %6786 = load i64, i64* %PC.i326
  %6787 = add i64 %6786, 10
  store i64 %6787, i64* %PC.i326
  store i64 ptrtoint (%G__0x4bfbaf_type* @G__0x4bfbaf to i64), i64* %RDI.i327, align 8
  store %struct.Memory* %loadMem_426369, %struct.Memory** %MEMORY
  %loadMem_426373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6789 = getelementptr inbounds %struct.GPR, %struct.GPR* %6788, i32 0, i32 33
  %6790 = getelementptr inbounds %struct.Reg, %struct.Reg* %6789, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %6790 to i64*
  %6791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6792 = getelementptr inbounds %struct.GPR, %struct.GPR* %6791, i32 0, i32 1
  %6793 = getelementptr inbounds %struct.Reg, %struct.Reg* %6792, i32 0, i32 0
  %RAX.i325 = bitcast %union.anon* %6793 to i64*
  %6794 = load i64, i64* %PC.i324
  %6795 = add i64 %6794, 8
  store i64 %6795, i64* %PC.i324
  %6796 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6796, i64* %RAX.i325, align 8
  store %struct.Memory* %loadMem_426373, %struct.Memory** %MEMORY
  %loadMem_42637b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6798 = getelementptr inbounds %struct.GPR, %struct.GPR* %6797, i32 0, i32 33
  %6799 = getelementptr inbounds %struct.Reg, %struct.Reg* %6798, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %6799 to i64*
  %6800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6801 = getelementptr inbounds %struct.GPR, %struct.GPR* %6800, i32 0, i32 1
  %6802 = getelementptr inbounds %struct.Reg, %struct.Reg* %6801, i32 0, i32 0
  %RAX.i322 = bitcast %union.anon* %6802 to i64*
  %6803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6804 = getelementptr inbounds %struct.GPR, %struct.GPR* %6803, i32 0, i32 9
  %6805 = getelementptr inbounds %struct.Reg, %struct.Reg* %6804, i32 0, i32 0
  %RSI.i323 = bitcast %union.anon* %6805 to i64*
  %6806 = load i64, i64* %RAX.i322
  %6807 = add i64 %6806, 72520
  %6808 = load i64, i64* %PC.i321
  %6809 = add i64 %6808, 6
  store i64 %6809, i64* %PC.i321
  %6810 = inttoptr i64 %6807 to i32*
  %6811 = load i32, i32* %6810
  %6812 = zext i32 %6811 to i64
  store i64 %6812, i64* %RSI.i323, align 8
  store %struct.Memory* %loadMem_42637b, %struct.Memory** %MEMORY
  %loadMem_426381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6814 = getelementptr inbounds %struct.GPR, %struct.GPR* %6813, i32 0, i32 33
  %6815 = getelementptr inbounds %struct.Reg, %struct.Reg* %6814, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %6815 to i64*
  %6816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6817 = getelementptr inbounds %struct.GPR, %struct.GPR* %6816, i32 0, i32 7
  %6818 = getelementptr inbounds %struct.Reg, %struct.Reg* %6817, i32 0, i32 0
  %RDX.i319 = bitcast %union.anon* %6818 to i64*
  %6819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6820 = getelementptr inbounds %struct.GPR, %struct.GPR* %6819, i32 0, i32 15
  %6821 = getelementptr inbounds %struct.Reg, %struct.Reg* %6820, i32 0, i32 0
  %RBP.i320 = bitcast %union.anon* %6821 to i64*
  %6822 = load i64, i64* %RBP.i320
  %6823 = sub i64 %6822, 16
  %6824 = load i64, i64* %PC.i318
  %6825 = add i64 %6824, 4
  store i64 %6825, i64* %PC.i318
  %6826 = inttoptr i64 %6823 to i64*
  %6827 = load i64, i64* %6826
  store i64 %6827, i64* %RDX.i319, align 8
  store %struct.Memory* %loadMem_426381, %struct.Memory** %MEMORY
  %loadMem1_426385 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6829 = getelementptr inbounds %struct.GPR, %struct.GPR* %6828, i32 0, i32 33
  %6830 = getelementptr inbounds %struct.Reg, %struct.Reg* %6829, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %6830 to i64*
  %6831 = load i64, i64* %PC.i317
  %6832 = add i64 %6831, 549659
  %6833 = load i64, i64* %PC.i317
  %6834 = add i64 %6833, 5
  %6835 = load i64, i64* %PC.i317
  %6836 = add i64 %6835, 5
  store i64 %6836, i64* %PC.i317
  %6837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6838 = load i64, i64* %6837, align 8
  %6839 = add i64 %6838, -8
  %6840 = inttoptr i64 %6839 to i64*
  store i64 %6834, i64* %6840
  store i64 %6839, i64* %6837, align 8
  %6841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6832, i64* %6841, align 8
  store %struct.Memory* %loadMem1_426385, %struct.Memory** %MEMORY
  %loadMem2_426385 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_426385 = load i64, i64* %3
  %call2_426385 = call %struct.Memory* @sub_4ac6a0.ue_v(%struct.State* %0, i64 %loadPC_426385, %struct.Memory* %loadMem2_426385)
  store %struct.Memory* %call2_426385, %struct.Memory** %MEMORY
  %loadMem_42638a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6843 = getelementptr inbounds %struct.GPR, %struct.GPR* %6842, i32 0, i32 33
  %6844 = getelementptr inbounds %struct.Reg, %struct.Reg* %6843, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %6844 to i64*
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 1
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %RAX.i315 = bitcast %union.anon* %6847 to i64*
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6849 = getelementptr inbounds %struct.GPR, %struct.GPR* %6848, i32 0, i32 15
  %6850 = getelementptr inbounds %struct.Reg, %struct.Reg* %6849, i32 0, i32 0
  %RBP.i316 = bitcast %union.anon* %6850 to i64*
  %6851 = load i64, i64* %RAX.i315
  %6852 = load i64, i64* %RBP.i316
  %6853 = sub i64 %6852, 28
  %6854 = load i64, i64* %PC.i314
  %6855 = add i64 %6854, 3
  store i64 %6855, i64* %PC.i314
  %6856 = trunc i64 %6851 to i32
  %6857 = inttoptr i64 %6853 to i32*
  %6858 = load i32, i32* %6857
  %6859 = add i32 %6858, %6856
  %6860 = zext i32 %6859 to i64
  store i64 %6860, i64* %RAX.i315, align 8
  %6861 = icmp ult i32 %6859, %6856
  %6862 = icmp ult i32 %6859, %6858
  %6863 = or i1 %6861, %6862
  %6864 = zext i1 %6863 to i8
  %6865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6864, i8* %6865, align 1
  %6866 = and i32 %6859, 255
  %6867 = call i32 @llvm.ctpop.i32(i32 %6866)
  %6868 = trunc i32 %6867 to i8
  %6869 = and i8 %6868, 1
  %6870 = xor i8 %6869, 1
  %6871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6870, i8* %6871, align 1
  %6872 = xor i32 %6858, %6856
  %6873 = xor i32 %6872, %6859
  %6874 = lshr i32 %6873, 4
  %6875 = trunc i32 %6874 to i8
  %6876 = and i8 %6875, 1
  %6877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6876, i8* %6877, align 1
  %6878 = icmp eq i32 %6859, 0
  %6879 = zext i1 %6878 to i8
  %6880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6879, i8* %6880, align 1
  %6881 = lshr i32 %6859, 31
  %6882 = trunc i32 %6881 to i8
  %6883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6882, i8* %6883, align 1
  %6884 = lshr i32 %6856, 31
  %6885 = lshr i32 %6858, 31
  %6886 = xor i32 %6881, %6884
  %6887 = xor i32 %6881, %6885
  %6888 = add i32 %6886, %6887
  %6889 = icmp eq i32 %6888, 2
  %6890 = zext i1 %6889 to i8
  %6891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6890, i8* %6891, align 1
  store %struct.Memory* %loadMem_42638a, %struct.Memory** %MEMORY
  %loadMem_42638d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6893 = getelementptr inbounds %struct.GPR, %struct.GPR* %6892, i32 0, i32 33
  %6894 = getelementptr inbounds %struct.Reg, %struct.Reg* %6893, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %6894 to i64*
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6896 = getelementptr inbounds %struct.GPR, %struct.GPR* %6895, i32 0, i32 1
  %6897 = getelementptr inbounds %struct.Reg, %struct.Reg* %6896, i32 0, i32 0
  %EAX.i312 = bitcast %union.anon* %6897 to i32*
  %6898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6899 = getelementptr inbounds %struct.GPR, %struct.GPR* %6898, i32 0, i32 15
  %6900 = getelementptr inbounds %struct.Reg, %struct.Reg* %6899, i32 0, i32 0
  %RBP.i313 = bitcast %union.anon* %6900 to i64*
  %6901 = load i64, i64* %RBP.i313
  %6902 = sub i64 %6901, 28
  %6903 = load i32, i32* %EAX.i312
  %6904 = zext i32 %6903 to i64
  %6905 = load i64, i64* %PC.i311
  %6906 = add i64 %6905, 3
  store i64 %6906, i64* %PC.i311
  %6907 = inttoptr i64 %6902 to i32*
  store i32 %6903, i32* %6907
  store %struct.Memory* %loadMem_42638d, %struct.Memory** %MEMORY
  br label %block_.L_426390

block_.L_426390:                                  ; preds = %block_426369, %block_426357, %block_.L_426342
  %loadMem_426390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6909 = getelementptr inbounds %struct.GPR, %struct.GPR* %6908, i32 0, i32 33
  %6910 = getelementptr inbounds %struct.Reg, %struct.Reg* %6909, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %6910 to i64*
  %6911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6912 = getelementptr inbounds %struct.GPR, %struct.GPR* %6911, i32 0, i32 11
  %6913 = getelementptr inbounds %struct.Reg, %struct.Reg* %6912, i32 0, i32 0
  %RDI.i310 = bitcast %union.anon* %6913 to i64*
  %6914 = load i64, i64* %PC.i309
  %6915 = add i64 %6914, 10
  store i64 %6915, i64* %PC.i309
  store i64 ptrtoint (%G__0x4bfbc2_type* @G__0x4bfbc2 to i64), i64* %RDI.i310, align 8
  store %struct.Memory* %loadMem_426390, %struct.Memory** %MEMORY
  %loadMem_42639a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6917 = getelementptr inbounds %struct.GPR, %struct.GPR* %6916, i32 0, i32 33
  %6918 = getelementptr inbounds %struct.Reg, %struct.Reg* %6917, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %6918 to i64*
  %6919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6920 = getelementptr inbounds %struct.GPR, %struct.GPR* %6919, i32 0, i32 1
  %6921 = getelementptr inbounds %struct.Reg, %struct.Reg* %6920, i32 0, i32 0
  %RAX.i307 = bitcast %union.anon* %6921 to i64*
  %6922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6923 = getelementptr inbounds %struct.GPR, %struct.GPR* %6922, i32 0, i32 15
  %6924 = getelementptr inbounds %struct.Reg, %struct.Reg* %6923, i32 0, i32 0
  %RBP.i308 = bitcast %union.anon* %6924 to i64*
  %6925 = load i64, i64* %RBP.i308
  %6926 = sub i64 %6925, 24
  %6927 = load i64, i64* %PC.i306
  %6928 = add i64 %6927, 4
  store i64 %6928, i64* %PC.i306
  %6929 = inttoptr i64 %6926 to i64*
  %6930 = load i64, i64* %6929
  store i64 %6930, i64* %RAX.i307, align 8
  store %struct.Memory* %loadMem_42639a, %struct.Memory** %MEMORY
  %loadMem_42639e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6932 = getelementptr inbounds %struct.GPR, %struct.GPR* %6931, i32 0, i32 33
  %6933 = getelementptr inbounds %struct.Reg, %struct.Reg* %6932, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %6933 to i64*
  %6934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6935 = getelementptr inbounds %struct.GPR, %struct.GPR* %6934, i32 0, i32 1
  %6936 = getelementptr inbounds %struct.Reg, %struct.Reg* %6935, i32 0, i32 0
  %RAX.i304 = bitcast %union.anon* %6936 to i64*
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6938 = getelementptr inbounds %struct.GPR, %struct.GPR* %6937, i32 0, i32 5
  %6939 = getelementptr inbounds %struct.Reg, %struct.Reg* %6938, i32 0, i32 0
  %RCX.i305 = bitcast %union.anon* %6939 to i64*
  %6940 = load i64, i64* %RAX.i304
  %6941 = add i64 %6940, 4
  %6942 = load i64, i64* %PC.i303
  %6943 = add i64 %6942, 3
  store i64 %6943, i64* %PC.i303
  %6944 = inttoptr i64 %6941 to i32*
  %6945 = load i32, i32* %6944
  %6946 = zext i32 %6945 to i64
  store i64 %6946, i64* %RCX.i305, align 8
  store %struct.Memory* %loadMem_42639e, %struct.Memory** %MEMORY
  %loadMem_4263a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6948 = getelementptr inbounds %struct.GPR, %struct.GPR* %6947, i32 0, i32 33
  %6949 = getelementptr inbounds %struct.Reg, %struct.Reg* %6948, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %6949 to i64*
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6951 = getelementptr inbounds %struct.GPR, %struct.GPR* %6950, i32 0, i32 5
  %6952 = getelementptr inbounds %struct.Reg, %struct.Reg* %6951, i32 0, i32 0
  %RCX.i302 = bitcast %union.anon* %6952 to i64*
  %6953 = load i64, i64* %RCX.i302
  %6954 = load i64, i64* %PC.i301
  %6955 = add i64 %6954, 3
  store i64 %6955, i64* %PC.i301
  %6956 = trunc i64 %6953 to i32
  %6957 = sub i32 %6956, 26
  %6958 = zext i32 %6957 to i64
  store i64 %6958, i64* %RCX.i302, align 8
  %6959 = icmp ult i32 %6956, 26
  %6960 = zext i1 %6959 to i8
  %6961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6960, i8* %6961, align 1
  %6962 = and i32 %6957, 255
  %6963 = call i32 @llvm.ctpop.i32(i32 %6962)
  %6964 = trunc i32 %6963 to i8
  %6965 = and i8 %6964, 1
  %6966 = xor i8 %6965, 1
  %6967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6966, i8* %6967, align 1
  %6968 = xor i64 26, %6953
  %6969 = trunc i64 %6968 to i32
  %6970 = xor i32 %6969, %6957
  %6971 = lshr i32 %6970, 4
  %6972 = trunc i32 %6971 to i8
  %6973 = and i8 %6972, 1
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6973, i8* %6974, align 1
  %6975 = icmp eq i32 %6957, 0
  %6976 = zext i1 %6975 to i8
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6976, i8* %6977, align 1
  %6978 = lshr i32 %6957, 31
  %6979 = trunc i32 %6978 to i8
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6979, i8* %6980, align 1
  %6981 = lshr i32 %6956, 31
  %6982 = xor i32 %6978, %6981
  %6983 = add i32 %6982, %6981
  %6984 = icmp eq i32 %6983, 2
  %6985 = zext i1 %6984 to i8
  %6986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6985, i8* %6986, align 1
  store %struct.Memory* %loadMem_4263a1, %struct.Memory** %MEMORY
  %loadMem_4263a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6988 = getelementptr inbounds %struct.GPR, %struct.GPR* %6987, i32 0, i32 33
  %6989 = getelementptr inbounds %struct.Reg, %struct.Reg* %6988, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %6989 to i64*
  %6990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6991 = getelementptr inbounds %struct.GPR, %struct.GPR* %6990, i32 0, i32 1
  %6992 = getelementptr inbounds %struct.Reg, %struct.Reg* %6991, i32 0, i32 0
  %RAX.i300 = bitcast %union.anon* %6992 to i64*
  %6993 = load i64, i64* %PC.i299
  %6994 = add i64 %6993, 8
  store i64 %6994, i64* %PC.i299
  %6995 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %6995, i64* %RAX.i300, align 8
  store %struct.Memory* %loadMem_4263a4, %struct.Memory** %MEMORY
  %loadMem_4263ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6997 = getelementptr inbounds %struct.GPR, %struct.GPR* %6996, i32 0, i32 33
  %6998 = getelementptr inbounds %struct.Reg, %struct.Reg* %6997, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %6998 to i64*
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7000 = getelementptr inbounds %struct.GPR, %struct.GPR* %6999, i32 0, i32 1
  %7001 = getelementptr inbounds %struct.Reg, %struct.Reg* %7000, i32 0, i32 0
  %RAX.i297 = bitcast %union.anon* %7001 to i64*
  %7002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7003 = getelementptr inbounds %struct.GPR, %struct.GPR* %7002, i32 0, i32 5
  %7004 = getelementptr inbounds %struct.Reg, %struct.Reg* %7003, i32 0, i32 0
  %RCX.i298 = bitcast %union.anon* %7004 to i64*
  %7005 = load i64, i64* %RCX.i298
  %7006 = load i64, i64* %RAX.i297
  %7007 = add i64 %7006, 200
  %7008 = load i64, i64* %PC.i296
  %7009 = add i64 %7008, 6
  store i64 %7009, i64* %PC.i296
  %7010 = trunc i64 %7005 to i32
  %7011 = inttoptr i64 %7007 to i32*
  %7012 = load i32, i32* %7011
  %7013 = sub i32 %7010, %7012
  %7014 = zext i32 %7013 to i64
  store i64 %7014, i64* %RCX.i298, align 8
  %7015 = icmp ult i32 %7010, %7012
  %7016 = zext i1 %7015 to i8
  %7017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7016, i8* %7017, align 1
  %7018 = and i32 %7013, 255
  %7019 = call i32 @llvm.ctpop.i32(i32 %7018)
  %7020 = trunc i32 %7019 to i8
  %7021 = and i8 %7020, 1
  %7022 = xor i8 %7021, 1
  %7023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7022, i8* %7023, align 1
  %7024 = xor i32 %7012, %7010
  %7025 = xor i32 %7024, %7013
  %7026 = lshr i32 %7025, 4
  %7027 = trunc i32 %7026 to i8
  %7028 = and i8 %7027, 1
  %7029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7028, i8* %7029, align 1
  %7030 = icmp eq i32 %7013, 0
  %7031 = zext i1 %7030 to i8
  %7032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7031, i8* %7032, align 1
  %7033 = lshr i32 %7013, 31
  %7034 = trunc i32 %7033 to i8
  %7035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7034, i8* %7035, align 1
  %7036 = lshr i32 %7010, 31
  %7037 = lshr i32 %7012, 31
  %7038 = xor i32 %7037, %7036
  %7039 = xor i32 %7033, %7036
  %7040 = add i32 %7039, %7038
  %7041 = icmp eq i32 %7040, 2
  %7042 = zext i1 %7041 to i8
  %7043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7042, i8* %7043, align 1
  store %struct.Memory* %loadMem_4263ac, %struct.Memory** %MEMORY
  %loadMem_4263b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7045 = getelementptr inbounds %struct.GPR, %struct.GPR* %7044, i32 0, i32 33
  %7046 = getelementptr inbounds %struct.Reg, %struct.Reg* %7045, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %7046 to i64*
  %7047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7048 = getelementptr inbounds %struct.GPR, %struct.GPR* %7047, i32 0, i32 7
  %7049 = getelementptr inbounds %struct.Reg, %struct.Reg* %7048, i32 0, i32 0
  %RDX.i294 = bitcast %union.anon* %7049 to i64*
  %7050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7051 = getelementptr inbounds %struct.GPR, %struct.GPR* %7050, i32 0, i32 15
  %7052 = getelementptr inbounds %struct.Reg, %struct.Reg* %7051, i32 0, i32 0
  %RBP.i295 = bitcast %union.anon* %7052 to i64*
  %7053 = load i64, i64* %RBP.i295
  %7054 = sub i64 %7053, 16
  %7055 = load i64, i64* %PC.i293
  %7056 = add i64 %7055, 4
  store i64 %7056, i64* %PC.i293
  %7057 = inttoptr i64 %7054 to i64*
  %7058 = load i64, i64* %7057
  store i64 %7058, i64* %RDX.i294, align 8
  store %struct.Memory* %loadMem_4263b2, %struct.Memory** %MEMORY
  %loadMem_4263b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7060 = getelementptr inbounds %struct.GPR, %struct.GPR* %7059, i32 0, i32 33
  %7061 = getelementptr inbounds %struct.Reg, %struct.Reg* %7060, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %7061 to i64*
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7063 = getelementptr inbounds %struct.GPR, %struct.GPR* %7062, i32 0, i32 5
  %7064 = getelementptr inbounds %struct.Reg, %struct.Reg* %7063, i32 0, i32 0
  %ECX.i291 = bitcast %union.anon* %7064 to i32*
  %7065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7066 = getelementptr inbounds %struct.GPR, %struct.GPR* %7065, i32 0, i32 9
  %7067 = getelementptr inbounds %struct.Reg, %struct.Reg* %7066, i32 0, i32 0
  %RSI.i292 = bitcast %union.anon* %7067 to i64*
  %7068 = load i32, i32* %ECX.i291
  %7069 = zext i32 %7068 to i64
  %7070 = load i64, i64* %PC.i290
  %7071 = add i64 %7070, 2
  store i64 %7071, i64* %PC.i290
  %7072 = and i64 %7069, 4294967295
  store i64 %7072, i64* %RSI.i292, align 8
  store %struct.Memory* %loadMem_4263b6, %struct.Memory** %MEMORY
  %loadMem1_4263b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7074 = getelementptr inbounds %struct.GPR, %struct.GPR* %7073, i32 0, i32 33
  %7075 = getelementptr inbounds %struct.Reg, %struct.Reg* %7074, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %7075 to i64*
  %7076 = load i64, i64* %PC.i289
  %7077 = add i64 %7076, 550408
  %7078 = load i64, i64* %PC.i289
  %7079 = add i64 %7078, 5
  %7080 = load i64, i64* %PC.i289
  %7081 = add i64 %7080, 5
  store i64 %7081, i64* %PC.i289
  %7082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7083 = load i64, i64* %7082, align 8
  %7084 = add i64 %7083, -8
  %7085 = inttoptr i64 %7084 to i64*
  store i64 %7079, i64* %7085
  store i64 %7084, i64* %7082, align 8
  %7086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7077, i64* %7086, align 8
  store %struct.Memory* %loadMem1_4263b8, %struct.Memory** %MEMORY
  %loadMem2_4263b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4263b8 = load i64, i64* %3
  %call2_4263b8 = call %struct.Memory* @sub_4ac9c0.se_v(%struct.State* %0, i64 %loadPC_4263b8, %struct.Memory* %loadMem2_4263b8)
  store %struct.Memory* %call2_4263b8, %struct.Memory** %MEMORY
  %loadMem_4263bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7088 = getelementptr inbounds %struct.GPR, %struct.GPR* %7087, i32 0, i32 33
  %7089 = getelementptr inbounds %struct.Reg, %struct.Reg* %7088, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %7089 to i64*
  %7090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7091 = getelementptr inbounds %struct.GPR, %struct.GPR* %7090, i32 0, i32 1
  %7092 = getelementptr inbounds %struct.Reg, %struct.Reg* %7091, i32 0, i32 0
  %RAX.i287 = bitcast %union.anon* %7092 to i64*
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7094 = getelementptr inbounds %struct.GPR, %struct.GPR* %7093, i32 0, i32 15
  %7095 = getelementptr inbounds %struct.Reg, %struct.Reg* %7094, i32 0, i32 0
  %RBP.i288 = bitcast %union.anon* %7095 to i64*
  %7096 = load i64, i64* %RAX.i287
  %7097 = load i64, i64* %RBP.i288
  %7098 = sub i64 %7097, 28
  %7099 = load i64, i64* %PC.i286
  %7100 = add i64 %7099, 3
  store i64 %7100, i64* %PC.i286
  %7101 = trunc i64 %7096 to i32
  %7102 = inttoptr i64 %7098 to i32*
  %7103 = load i32, i32* %7102
  %7104 = add i32 %7103, %7101
  %7105 = zext i32 %7104 to i64
  store i64 %7105, i64* %RAX.i287, align 8
  %7106 = icmp ult i32 %7104, %7101
  %7107 = icmp ult i32 %7104, %7103
  %7108 = or i1 %7106, %7107
  %7109 = zext i1 %7108 to i8
  %7110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7109, i8* %7110, align 1
  %7111 = and i32 %7104, 255
  %7112 = call i32 @llvm.ctpop.i32(i32 %7111)
  %7113 = trunc i32 %7112 to i8
  %7114 = and i8 %7113, 1
  %7115 = xor i8 %7114, 1
  %7116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7115, i8* %7116, align 1
  %7117 = xor i32 %7103, %7101
  %7118 = xor i32 %7117, %7104
  %7119 = lshr i32 %7118, 4
  %7120 = trunc i32 %7119 to i8
  %7121 = and i8 %7120, 1
  %7122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7121, i8* %7122, align 1
  %7123 = icmp eq i32 %7104, 0
  %7124 = zext i1 %7123 to i8
  %7125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7124, i8* %7125, align 1
  %7126 = lshr i32 %7104, 31
  %7127 = trunc i32 %7126 to i8
  %7128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7127, i8* %7128, align 1
  %7129 = lshr i32 %7101, 31
  %7130 = lshr i32 %7103, 31
  %7131 = xor i32 %7126, %7129
  %7132 = xor i32 %7126, %7130
  %7133 = add i32 %7131, %7132
  %7134 = icmp eq i32 %7133, 2
  %7135 = zext i1 %7134 to i8
  %7136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7135, i8* %7136, align 1
  store %struct.Memory* %loadMem_4263bd, %struct.Memory** %MEMORY
  %loadMem_4263c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7138 = getelementptr inbounds %struct.GPR, %struct.GPR* %7137, i32 0, i32 33
  %7139 = getelementptr inbounds %struct.Reg, %struct.Reg* %7138, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %7139 to i64*
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7141 = getelementptr inbounds %struct.GPR, %struct.GPR* %7140, i32 0, i32 1
  %7142 = getelementptr inbounds %struct.Reg, %struct.Reg* %7141, i32 0, i32 0
  %EAX.i284 = bitcast %union.anon* %7142 to i32*
  %7143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7144 = getelementptr inbounds %struct.GPR, %struct.GPR* %7143, i32 0, i32 15
  %7145 = getelementptr inbounds %struct.Reg, %struct.Reg* %7144, i32 0, i32 0
  %RBP.i285 = bitcast %union.anon* %7145 to i64*
  %7146 = load i64, i64* %RBP.i285
  %7147 = sub i64 %7146, 28
  %7148 = load i32, i32* %EAX.i284
  %7149 = zext i32 %7148 to i64
  %7150 = load i64, i64* %PC.i283
  %7151 = add i64 %7150, 3
  store i64 %7151, i64* %PC.i283
  %7152 = inttoptr i64 %7147 to i32*
  store i32 %7148, i32* %7152
  store %struct.Memory* %loadMem_4263c0, %struct.Memory** %MEMORY
  %loadMem_4263c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7154 = getelementptr inbounds %struct.GPR, %struct.GPR* %7153, i32 0, i32 33
  %7155 = getelementptr inbounds %struct.Reg, %struct.Reg* %7154, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %7155 to i64*
  %7156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7157 = getelementptr inbounds %struct.GPR, %struct.GPR* %7156, i32 0, i32 7
  %7158 = getelementptr inbounds %struct.Reg, %struct.Reg* %7157, i32 0, i32 0
  %RDX.i282 = bitcast %union.anon* %7158 to i64*
  %7159 = load i64, i64* %PC.i281
  %7160 = add i64 %7159, 8
  store i64 %7160, i64* %PC.i281
  %7161 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7161, i64* %RDX.i282, align 8
  store %struct.Memory* %loadMem_4263c3, %struct.Memory** %MEMORY
  %loadMem_4263cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7163 = getelementptr inbounds %struct.GPR, %struct.GPR* %7162, i32 0, i32 33
  %7164 = getelementptr inbounds %struct.Reg, %struct.Reg* %7163, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %7164 to i64*
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7166 = getelementptr inbounds %struct.GPR, %struct.GPR* %7165, i32 0, i32 7
  %7167 = getelementptr inbounds %struct.Reg, %struct.Reg* %7166, i32 0, i32 0
  %RDX.i280 = bitcast %union.anon* %7167 to i64*
  %7168 = load i64, i64* %RDX.i280
  %7169 = add i64 %7168, 24
  %7170 = load i64, i64* %PC.i279
  %7171 = add i64 %7170, 4
  store i64 %7171, i64* %PC.i279
  %7172 = inttoptr i64 %7169 to i32*
  %7173 = load i32, i32* %7172
  %7174 = sub i32 %7173, 3
  %7175 = icmp ult i32 %7173, 3
  %7176 = zext i1 %7175 to i8
  %7177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7176, i8* %7177, align 1
  %7178 = and i32 %7174, 255
  %7179 = call i32 @llvm.ctpop.i32(i32 %7178)
  %7180 = trunc i32 %7179 to i8
  %7181 = and i8 %7180, 1
  %7182 = xor i8 %7181, 1
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7182, i8* %7183, align 1
  %7184 = xor i32 %7173, 3
  %7185 = xor i32 %7184, %7174
  %7186 = lshr i32 %7185, 4
  %7187 = trunc i32 %7186 to i8
  %7188 = and i8 %7187, 1
  %7189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7188, i8* %7189, align 1
  %7190 = icmp eq i32 %7174, 0
  %7191 = zext i1 %7190 to i8
  %7192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7191, i8* %7192, align 1
  %7193 = lshr i32 %7174, 31
  %7194 = trunc i32 %7193 to i8
  %7195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7194, i8* %7195, align 1
  %7196 = lshr i32 %7173, 31
  %7197 = xor i32 %7193, %7196
  %7198 = add i32 %7197, %7196
  %7199 = icmp eq i32 %7198, 2
  %7200 = zext i1 %7199 to i8
  %7201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7200, i8* %7201, align 1
  store %struct.Memory* %loadMem_4263cb, %struct.Memory** %MEMORY
  %loadMem_4263cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7203 = getelementptr inbounds %struct.GPR, %struct.GPR* %7202, i32 0, i32 33
  %7204 = getelementptr inbounds %struct.Reg, %struct.Reg* %7203, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %7204 to i64*
  %7205 = load i64, i64* %PC.i278
  %7206 = add i64 %7205, 92
  %7207 = load i64, i64* %PC.i278
  %7208 = add i64 %7207, 6
  %7209 = load i64, i64* %PC.i278
  %7210 = add i64 %7209, 6
  store i64 %7210, i64* %PC.i278
  %7211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7212 = load i8, i8* %7211, align 1
  %7213 = icmp eq i8 %7212, 0
  %7214 = zext i1 %7213 to i8
  store i8 %7214, i8* %BRANCH_TAKEN, align 1
  %7215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7216 = select i1 %7213, i64 %7206, i64 %7208
  store i64 %7216, i64* %7215, align 8
  store %struct.Memory* %loadMem_4263cf, %struct.Memory** %MEMORY
  %loadBr_4263cf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4263cf = icmp eq i8 %loadBr_4263cf, 1
  br i1 %cmpBr_4263cf, label %block_.L_42642b, label %block_4263d5

block_4263d5:                                     ; preds = %block_.L_426390
  %loadMem_4263d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7218 = getelementptr inbounds %struct.GPR, %struct.GPR* %7217, i32 0, i32 33
  %7219 = getelementptr inbounds %struct.Reg, %struct.Reg* %7218, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %7219 to i64*
  %7220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7221 = getelementptr inbounds %struct.GPR, %struct.GPR* %7220, i32 0, i32 1
  %7222 = getelementptr inbounds %struct.Reg, %struct.Reg* %7221, i32 0, i32 0
  %RAX.i277 = bitcast %union.anon* %7222 to i64*
  %7223 = load i64, i64* %PC.i276
  %7224 = add i64 %7223, 8
  store i64 %7224, i64* %PC.i276
  %7225 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7225, i64* %RAX.i277, align 8
  store %struct.Memory* %loadMem_4263d5, %struct.Memory** %MEMORY
  %loadMem_4263dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7227 = getelementptr inbounds %struct.GPR, %struct.GPR* %7226, i32 0, i32 33
  %7228 = getelementptr inbounds %struct.Reg, %struct.Reg* %7227, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %7228 to i64*
  %7229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7230 = getelementptr inbounds %struct.GPR, %struct.GPR* %7229, i32 0, i32 1
  %7231 = getelementptr inbounds %struct.Reg, %struct.Reg* %7230, i32 0, i32 0
  %RAX.i275 = bitcast %union.anon* %7231 to i64*
  %7232 = load i64, i64* %RAX.i275
  %7233 = add i64 %7232, 24
  %7234 = load i64, i64* %PC.i274
  %7235 = add i64 %7234, 4
  store i64 %7235, i64* %PC.i274
  %7236 = inttoptr i64 %7233 to i32*
  %7237 = load i32, i32* %7236
  %7238 = sub i32 %7237, 3
  %7239 = icmp ult i32 %7237, 3
  %7240 = zext i1 %7239 to i8
  %7241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7240, i8* %7241, align 1
  %7242 = and i32 %7238, 255
  %7243 = call i32 @llvm.ctpop.i32(i32 %7242)
  %7244 = trunc i32 %7243 to i8
  %7245 = and i8 %7244, 1
  %7246 = xor i8 %7245, 1
  %7247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7246, i8* %7247, align 1
  %7248 = xor i32 %7237, 3
  %7249 = xor i32 %7248, %7238
  %7250 = lshr i32 %7249, 4
  %7251 = trunc i32 %7250 to i8
  %7252 = and i8 %7251, 1
  %7253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7252, i8* %7253, align 1
  %7254 = icmp eq i32 %7238, 0
  %7255 = zext i1 %7254 to i8
  %7256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7255, i8* %7256, align 1
  %7257 = lshr i32 %7238, 31
  %7258 = trunc i32 %7257 to i8
  %7259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7258, i8* %7259, align 1
  %7260 = lshr i32 %7237, 31
  %7261 = xor i32 %7257, %7260
  %7262 = add i32 %7261, %7260
  %7263 = icmp eq i32 %7262, 2
  %7264 = zext i1 %7263 to i8
  %7265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7264, i8* %7265, align 1
  store %struct.Memory* %loadMem_4263dd, %struct.Memory** %MEMORY
  %loadMem_4263e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7267 = getelementptr inbounds %struct.GPR, %struct.GPR* %7266, i32 0, i32 33
  %7268 = getelementptr inbounds %struct.Reg, %struct.Reg* %7267, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %7268 to i64*
  %7269 = load i64, i64* %PC.i273
  %7270 = add i64 %7269, 33
  %7271 = load i64, i64* %PC.i273
  %7272 = add i64 %7271, 6
  %7273 = load i64, i64* %PC.i273
  %7274 = add i64 %7273, 6
  store i64 %7274, i64* %PC.i273
  %7275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7276 = load i8, i8* %7275, align 1
  %7277 = icmp eq i8 %7276, 0
  %7278 = zext i1 %7277 to i8
  store i8 %7278, i8* %BRANCH_TAKEN, align 1
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7280 = select i1 %7277, i64 %7270, i64 %7272
  store i64 %7280, i64* %7279, align 8
  store %struct.Memory* %loadMem_4263e1, %struct.Memory** %MEMORY
  %loadBr_4263e1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4263e1 = icmp eq i8 %loadBr_4263e1, 1
  br i1 %cmpBr_4263e1, label %block_.L_426402, label %block_4263e7

block_4263e7:                                     ; preds = %block_4263d5
  %loadMem_4263e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7282 = getelementptr inbounds %struct.GPR, %struct.GPR* %7281, i32 0, i32 33
  %7283 = getelementptr inbounds %struct.Reg, %struct.Reg* %7282, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %7283 to i64*
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7285 = getelementptr inbounds %struct.GPR, %struct.GPR* %7284, i32 0, i32 11
  %7286 = getelementptr inbounds %struct.Reg, %struct.Reg* %7285, i32 0, i32 0
  %RDI.i272 = bitcast %union.anon* %7286 to i64*
  %7287 = load i64, i64* %PC.i271
  %7288 = add i64 %7287, 10
  store i64 %7288, i64* %PC.i271
  store i64 ptrtoint (%G__0x4bfbd5_type* @G__0x4bfbd5 to i64), i64* %RDI.i272, align 8
  store %struct.Memory* %loadMem_4263e7, %struct.Memory** %MEMORY
  %loadMem_4263f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7290 = getelementptr inbounds %struct.GPR, %struct.GPR* %7289, i32 0, i32 33
  %7291 = getelementptr inbounds %struct.Reg, %struct.Reg* %7290, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %7291 to i64*
  %7292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7293 = getelementptr inbounds %struct.GPR, %struct.GPR* %7292, i32 0, i32 9
  %7294 = getelementptr inbounds %struct.Reg, %struct.Reg* %7293, i32 0, i32 0
  %ESI.i269 = bitcast %union.anon* %7294 to i32*
  %7295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7296 = getelementptr inbounds %struct.GPR, %struct.GPR* %7295, i32 0, i32 9
  %7297 = getelementptr inbounds %struct.Reg, %struct.Reg* %7296, i32 0, i32 0
  %RSI.i270 = bitcast %union.anon* %7297 to i64*
  %7298 = load i64, i64* %RSI.i270
  %7299 = load i32, i32* %ESI.i269
  %7300 = zext i32 %7299 to i64
  %7301 = load i64, i64* %PC.i268
  %7302 = add i64 %7301, 2
  store i64 %7302, i64* %PC.i268
  %7303 = xor i64 %7300, %7298
  %7304 = trunc i64 %7303 to i32
  %7305 = and i64 %7303, 4294967295
  store i64 %7305, i64* %RSI.i270, align 8
  %7306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7306, align 1
  %7307 = and i32 %7304, 255
  %7308 = call i32 @llvm.ctpop.i32(i32 %7307)
  %7309 = trunc i32 %7308 to i8
  %7310 = and i8 %7309, 1
  %7311 = xor i8 %7310, 1
  %7312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7311, i8* %7312, align 1
  %7313 = icmp eq i32 %7304, 0
  %7314 = zext i1 %7313 to i8
  %7315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7314, i8* %7315, align 1
  %7316 = lshr i32 %7304, 31
  %7317 = trunc i32 %7316 to i8
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7317, i8* %7318, align 1
  %7319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7319, align 1
  %7320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7320, align 1
  store %struct.Memory* %loadMem_4263f1, %struct.Memory** %MEMORY
  %loadMem_4263f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7322 = getelementptr inbounds %struct.GPR, %struct.GPR* %7321, i32 0, i32 33
  %7323 = getelementptr inbounds %struct.Reg, %struct.Reg* %7322, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %7323 to i64*
  %7324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7325 = getelementptr inbounds %struct.GPR, %struct.GPR* %7324, i32 0, i32 7
  %7326 = getelementptr inbounds %struct.Reg, %struct.Reg* %7325, i32 0, i32 0
  %RDX.i266 = bitcast %union.anon* %7326 to i64*
  %7327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7328 = getelementptr inbounds %struct.GPR, %struct.GPR* %7327, i32 0, i32 15
  %7329 = getelementptr inbounds %struct.Reg, %struct.Reg* %7328, i32 0, i32 0
  %RBP.i267 = bitcast %union.anon* %7329 to i64*
  %7330 = load i64, i64* %RBP.i267
  %7331 = sub i64 %7330, 16
  %7332 = load i64, i64* %PC.i265
  %7333 = add i64 %7332, 4
  store i64 %7333, i64* %PC.i265
  %7334 = inttoptr i64 %7331 to i64*
  %7335 = load i64, i64* %7334
  store i64 %7335, i64* %RDX.i266, align 8
  store %struct.Memory* %loadMem_4263f3, %struct.Memory** %MEMORY
  %loadMem1_4263f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7337 = getelementptr inbounds %struct.GPR, %struct.GPR* %7336, i32 0, i32 33
  %7338 = getelementptr inbounds %struct.Reg, %struct.Reg* %7337, i32 0, i32 0
  %PC.i264 = bitcast %union.anon* %7338 to i64*
  %7339 = load i64, i64* %PC.i264
  %7340 = add i64 %7339, 550665
  %7341 = load i64, i64* %PC.i264
  %7342 = add i64 %7341, 5
  %7343 = load i64, i64* %PC.i264
  %7344 = add i64 %7343, 5
  store i64 %7344, i64* %PC.i264
  %7345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7346 = load i64, i64* %7345, align 8
  %7347 = add i64 %7346, -8
  %7348 = inttoptr i64 %7347 to i64*
  store i64 %7342, i64* %7348
  store i64 %7347, i64* %7345, align 8
  %7349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7340, i64* %7349, align 8
  store %struct.Memory* %loadMem1_4263f7, %struct.Memory** %MEMORY
  %loadMem2_4263f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4263f7 = load i64, i64* %3
  %call2_4263f7 = call %struct.Memory* @sub_4acb00.u_1(%struct.State* %0, i64 %loadPC_4263f7, %struct.Memory* %loadMem2_4263f7)
  store %struct.Memory* %call2_4263f7, %struct.Memory** %MEMORY
  %loadMem_4263fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7351 = getelementptr inbounds %struct.GPR, %struct.GPR* %7350, i32 0, i32 33
  %7352 = getelementptr inbounds %struct.Reg, %struct.Reg* %7351, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %7352 to i64*
  %7353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7354 = getelementptr inbounds %struct.GPR, %struct.GPR* %7353, i32 0, i32 1
  %7355 = getelementptr inbounds %struct.Reg, %struct.Reg* %7354, i32 0, i32 0
  %RAX.i262 = bitcast %union.anon* %7355 to i64*
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7357 = getelementptr inbounds %struct.GPR, %struct.GPR* %7356, i32 0, i32 15
  %7358 = getelementptr inbounds %struct.Reg, %struct.Reg* %7357, i32 0, i32 0
  %RBP.i263 = bitcast %union.anon* %7358 to i64*
  %7359 = load i64, i64* %RAX.i262
  %7360 = load i64, i64* %RBP.i263
  %7361 = sub i64 %7360, 28
  %7362 = load i64, i64* %PC.i261
  %7363 = add i64 %7362, 3
  store i64 %7363, i64* %PC.i261
  %7364 = trunc i64 %7359 to i32
  %7365 = inttoptr i64 %7361 to i32*
  %7366 = load i32, i32* %7365
  %7367 = add i32 %7366, %7364
  %7368 = zext i32 %7367 to i64
  store i64 %7368, i64* %RAX.i262, align 8
  %7369 = icmp ult i32 %7367, %7364
  %7370 = icmp ult i32 %7367, %7366
  %7371 = or i1 %7369, %7370
  %7372 = zext i1 %7371 to i8
  %7373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7372, i8* %7373, align 1
  %7374 = and i32 %7367, 255
  %7375 = call i32 @llvm.ctpop.i32(i32 %7374)
  %7376 = trunc i32 %7375 to i8
  %7377 = and i8 %7376, 1
  %7378 = xor i8 %7377, 1
  %7379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7378, i8* %7379, align 1
  %7380 = xor i32 %7366, %7364
  %7381 = xor i32 %7380, %7367
  %7382 = lshr i32 %7381, 4
  %7383 = trunc i32 %7382 to i8
  %7384 = and i8 %7383, 1
  %7385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7384, i8* %7385, align 1
  %7386 = icmp eq i32 %7367, 0
  %7387 = zext i1 %7386 to i8
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7387, i8* %7388, align 1
  %7389 = lshr i32 %7367, 31
  %7390 = trunc i32 %7389 to i8
  %7391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7390, i8* %7391, align 1
  %7392 = lshr i32 %7364, 31
  %7393 = lshr i32 %7366, 31
  %7394 = xor i32 %7389, %7392
  %7395 = xor i32 %7389, %7393
  %7396 = add i32 %7394, %7395
  %7397 = icmp eq i32 %7396, 2
  %7398 = zext i1 %7397 to i8
  %7399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7398, i8* %7399, align 1
  store %struct.Memory* %loadMem_4263fc, %struct.Memory** %MEMORY
  %loadMem_4263ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7401 = getelementptr inbounds %struct.GPR, %struct.GPR* %7400, i32 0, i32 33
  %7402 = getelementptr inbounds %struct.Reg, %struct.Reg* %7401, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %7402 to i64*
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7404 = getelementptr inbounds %struct.GPR, %struct.GPR* %7403, i32 0, i32 1
  %7405 = getelementptr inbounds %struct.Reg, %struct.Reg* %7404, i32 0, i32 0
  %EAX.i259 = bitcast %union.anon* %7405 to i32*
  %7406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7407 = getelementptr inbounds %struct.GPR, %struct.GPR* %7406, i32 0, i32 15
  %7408 = getelementptr inbounds %struct.Reg, %struct.Reg* %7407, i32 0, i32 0
  %RBP.i260 = bitcast %union.anon* %7408 to i64*
  %7409 = load i64, i64* %RBP.i260
  %7410 = sub i64 %7409, 28
  %7411 = load i32, i32* %EAX.i259
  %7412 = zext i32 %7411 to i64
  %7413 = load i64, i64* %PC.i258
  %7414 = add i64 %7413, 3
  store i64 %7414, i64* %PC.i258
  %7415 = inttoptr i64 %7410 to i32*
  store i32 %7411, i32* %7415
  store %struct.Memory* %loadMem_4263ff, %struct.Memory** %MEMORY
  br label %block_.L_426402

block_.L_426402:                                  ; preds = %block_4263e7, %block_4263d5
  %loadMem_426402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7417 = getelementptr inbounds %struct.GPR, %struct.GPR* %7416, i32 0, i32 33
  %7418 = getelementptr inbounds %struct.Reg, %struct.Reg* %7417, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %7418 to i64*
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7420 = getelementptr inbounds %struct.GPR, %struct.GPR* %7419, i32 0, i32 11
  %7421 = getelementptr inbounds %struct.Reg, %struct.Reg* %7420, i32 0, i32 0
  %RDI.i257 = bitcast %union.anon* %7421 to i64*
  %7422 = load i64, i64* %PC.i256
  %7423 = add i64 %7422, 10
  store i64 %7423, i64* %PC.i256
  store i64 ptrtoint (%G__0x4bfbec_type* @G__0x4bfbec to i64), i64* %RDI.i257, align 8
  store %struct.Memory* %loadMem_426402, %struct.Memory** %MEMORY
  %loadMem_42640c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7425 = getelementptr inbounds %struct.GPR, %struct.GPR* %7424, i32 0, i32 33
  %7426 = getelementptr inbounds %struct.Reg, %struct.Reg* %7425, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %7426 to i64*
  %7427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7428 = getelementptr inbounds %struct.GPR, %struct.GPR* %7427, i32 0, i32 1
  %7429 = getelementptr inbounds %struct.Reg, %struct.Reg* %7428, i32 0, i32 0
  %RAX.i255 = bitcast %union.anon* %7429 to i64*
  %7430 = load i64, i64* %PC.i254
  %7431 = add i64 %7430, 8
  store i64 %7431, i64* %PC.i254
  %7432 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7432, i64* %RAX.i255, align 8
  store %struct.Memory* %loadMem_42640c, %struct.Memory** %MEMORY
  %loadMem_426414 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7434 = getelementptr inbounds %struct.GPR, %struct.GPR* %7433, i32 0, i32 33
  %7435 = getelementptr inbounds %struct.Reg, %struct.Reg* %7434, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %7435 to i64*
  %7436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7437 = getelementptr inbounds %struct.GPR, %struct.GPR* %7436, i32 0, i32 1
  %7438 = getelementptr inbounds %struct.Reg, %struct.Reg* %7437, i32 0, i32 0
  %RAX.i252 = bitcast %union.anon* %7438 to i64*
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7440 = getelementptr inbounds %struct.GPR, %struct.GPR* %7439, i32 0, i32 5
  %7441 = getelementptr inbounds %struct.Reg, %struct.Reg* %7440, i32 0, i32 0
  %RCX.i253 = bitcast %union.anon* %7441 to i64*
  %7442 = load i64, i64* %RAX.i252
  %7443 = add i64 %7442, 44
  %7444 = load i64, i64* %PC.i251
  %7445 = add i64 %7444, 3
  store i64 %7445, i64* %PC.i251
  %7446 = inttoptr i64 %7443 to i32*
  %7447 = load i32, i32* %7446
  %7448 = zext i32 %7447 to i64
  store i64 %7448, i64* %RCX.i253, align 8
  store %struct.Memory* %loadMem_426414, %struct.Memory** %MEMORY
  %loadMem_426417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7450 = getelementptr inbounds %struct.GPR, %struct.GPR* %7449, i32 0, i32 33
  %7451 = getelementptr inbounds %struct.Reg, %struct.Reg* %7450, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %7451 to i64*
  %7452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7453 = getelementptr inbounds %struct.GPR, %struct.GPR* %7452, i32 0, i32 5
  %7454 = getelementptr inbounds %struct.Reg, %struct.Reg* %7453, i32 0, i32 0
  %RCX.i250 = bitcast %union.anon* %7454 to i64*
  %7455 = load i64, i64* %RCX.i250
  %7456 = load i64, i64* %PC.i249
  %7457 = add i64 %7456, 3
  store i64 %7457, i64* %PC.i249
  %7458 = trunc i64 %7455 to i32
  %7459 = sub i32 %7458, 26
  %7460 = zext i32 %7459 to i64
  store i64 %7460, i64* %RCX.i250, align 8
  %7461 = icmp ult i32 %7458, 26
  %7462 = zext i1 %7461 to i8
  %7463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7462, i8* %7463, align 1
  %7464 = and i32 %7459, 255
  %7465 = call i32 @llvm.ctpop.i32(i32 %7464)
  %7466 = trunc i32 %7465 to i8
  %7467 = and i8 %7466, 1
  %7468 = xor i8 %7467, 1
  %7469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7468, i8* %7469, align 1
  %7470 = xor i64 26, %7455
  %7471 = trunc i64 %7470 to i32
  %7472 = xor i32 %7471, %7459
  %7473 = lshr i32 %7472, 4
  %7474 = trunc i32 %7473 to i8
  %7475 = and i8 %7474, 1
  %7476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7475, i8* %7476, align 1
  %7477 = icmp eq i32 %7459, 0
  %7478 = zext i1 %7477 to i8
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7478, i8* %7479, align 1
  %7480 = lshr i32 %7459, 31
  %7481 = trunc i32 %7480 to i8
  %7482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7481, i8* %7482, align 1
  %7483 = lshr i32 %7458, 31
  %7484 = xor i32 %7480, %7483
  %7485 = add i32 %7484, %7483
  %7486 = icmp eq i32 %7485, 2
  %7487 = zext i1 %7486 to i8
  %7488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7487, i8* %7488, align 1
  store %struct.Memory* %loadMem_426417, %struct.Memory** %MEMORY
  %loadMem_42641a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7490 = getelementptr inbounds %struct.GPR, %struct.GPR* %7489, i32 0, i32 33
  %7491 = getelementptr inbounds %struct.Reg, %struct.Reg* %7490, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %7491 to i64*
  %7492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7493 = getelementptr inbounds %struct.GPR, %struct.GPR* %7492, i32 0, i32 7
  %7494 = getelementptr inbounds %struct.Reg, %struct.Reg* %7493, i32 0, i32 0
  %RDX.i247 = bitcast %union.anon* %7494 to i64*
  %7495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7496 = getelementptr inbounds %struct.GPR, %struct.GPR* %7495, i32 0, i32 15
  %7497 = getelementptr inbounds %struct.Reg, %struct.Reg* %7496, i32 0, i32 0
  %RBP.i248 = bitcast %union.anon* %7497 to i64*
  %7498 = load i64, i64* %RBP.i248
  %7499 = sub i64 %7498, 16
  %7500 = load i64, i64* %PC.i246
  %7501 = add i64 %7500, 4
  store i64 %7501, i64* %PC.i246
  %7502 = inttoptr i64 %7499 to i64*
  %7503 = load i64, i64* %7502
  store i64 %7503, i64* %RDX.i247, align 8
  store %struct.Memory* %loadMem_42641a, %struct.Memory** %MEMORY
  %loadMem_42641e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7505 = getelementptr inbounds %struct.GPR, %struct.GPR* %7504, i32 0, i32 33
  %7506 = getelementptr inbounds %struct.Reg, %struct.Reg* %7505, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %7506 to i64*
  %7507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7508 = getelementptr inbounds %struct.GPR, %struct.GPR* %7507, i32 0, i32 5
  %7509 = getelementptr inbounds %struct.Reg, %struct.Reg* %7508, i32 0, i32 0
  %ECX.i244 = bitcast %union.anon* %7509 to i32*
  %7510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7511 = getelementptr inbounds %struct.GPR, %struct.GPR* %7510, i32 0, i32 9
  %7512 = getelementptr inbounds %struct.Reg, %struct.Reg* %7511, i32 0, i32 0
  %RSI.i245 = bitcast %union.anon* %7512 to i64*
  %7513 = load i32, i32* %ECX.i244
  %7514 = zext i32 %7513 to i64
  %7515 = load i64, i64* %PC.i243
  %7516 = add i64 %7515, 2
  store i64 %7516, i64* %PC.i243
  %7517 = and i64 %7514, 4294967295
  store i64 %7517, i64* %RSI.i245, align 8
  store %struct.Memory* %loadMem_42641e, %struct.Memory** %MEMORY
  %loadMem1_426420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7519 = getelementptr inbounds %struct.GPR, %struct.GPR* %7518, i32 0, i32 33
  %7520 = getelementptr inbounds %struct.Reg, %struct.Reg* %7519, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %7520 to i64*
  %7521 = load i64, i64* %PC.i242
  %7522 = add i64 %7521, 550304
  %7523 = load i64, i64* %PC.i242
  %7524 = add i64 %7523, 5
  %7525 = load i64, i64* %PC.i242
  %7526 = add i64 %7525, 5
  store i64 %7526, i64* %PC.i242
  %7527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7528 = load i64, i64* %7527, align 8
  %7529 = add i64 %7528, -8
  %7530 = inttoptr i64 %7529 to i64*
  store i64 %7524, i64* %7530
  store i64 %7529, i64* %7527, align 8
  %7531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7522, i64* %7531, align 8
  store %struct.Memory* %loadMem1_426420, %struct.Memory** %MEMORY
  %loadMem2_426420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_426420 = load i64, i64* %3
  %call2_426420 = call %struct.Memory* @sub_4ac9c0.se_v(%struct.State* %0, i64 %loadPC_426420, %struct.Memory* %loadMem2_426420)
  store %struct.Memory* %call2_426420, %struct.Memory** %MEMORY
  %loadMem_426425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7533 = getelementptr inbounds %struct.GPR, %struct.GPR* %7532, i32 0, i32 33
  %7534 = getelementptr inbounds %struct.Reg, %struct.Reg* %7533, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %7534 to i64*
  %7535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7536 = getelementptr inbounds %struct.GPR, %struct.GPR* %7535, i32 0, i32 1
  %7537 = getelementptr inbounds %struct.Reg, %struct.Reg* %7536, i32 0, i32 0
  %RAX.i240 = bitcast %union.anon* %7537 to i64*
  %7538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7539 = getelementptr inbounds %struct.GPR, %struct.GPR* %7538, i32 0, i32 15
  %7540 = getelementptr inbounds %struct.Reg, %struct.Reg* %7539, i32 0, i32 0
  %RBP.i241 = bitcast %union.anon* %7540 to i64*
  %7541 = load i64, i64* %RAX.i240
  %7542 = load i64, i64* %RBP.i241
  %7543 = sub i64 %7542, 28
  %7544 = load i64, i64* %PC.i239
  %7545 = add i64 %7544, 3
  store i64 %7545, i64* %PC.i239
  %7546 = trunc i64 %7541 to i32
  %7547 = inttoptr i64 %7543 to i32*
  %7548 = load i32, i32* %7547
  %7549 = add i32 %7548, %7546
  %7550 = zext i32 %7549 to i64
  store i64 %7550, i64* %RAX.i240, align 8
  %7551 = icmp ult i32 %7549, %7546
  %7552 = icmp ult i32 %7549, %7548
  %7553 = or i1 %7551, %7552
  %7554 = zext i1 %7553 to i8
  %7555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7554, i8* %7555, align 1
  %7556 = and i32 %7549, 255
  %7557 = call i32 @llvm.ctpop.i32(i32 %7556)
  %7558 = trunc i32 %7557 to i8
  %7559 = and i8 %7558, 1
  %7560 = xor i8 %7559, 1
  %7561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7560, i8* %7561, align 1
  %7562 = xor i32 %7548, %7546
  %7563 = xor i32 %7562, %7549
  %7564 = lshr i32 %7563, 4
  %7565 = trunc i32 %7564 to i8
  %7566 = and i8 %7565, 1
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7566, i8* %7567, align 1
  %7568 = icmp eq i32 %7549, 0
  %7569 = zext i1 %7568 to i8
  %7570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7569, i8* %7570, align 1
  %7571 = lshr i32 %7549, 31
  %7572 = trunc i32 %7571 to i8
  %7573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7572, i8* %7573, align 1
  %7574 = lshr i32 %7546, 31
  %7575 = lshr i32 %7548, 31
  %7576 = xor i32 %7571, %7574
  %7577 = xor i32 %7571, %7575
  %7578 = add i32 %7576, %7577
  %7579 = icmp eq i32 %7578, 2
  %7580 = zext i1 %7579 to i8
  %7581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7580, i8* %7581, align 1
  store %struct.Memory* %loadMem_426425, %struct.Memory** %MEMORY
  %loadMem_426428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7583 = getelementptr inbounds %struct.GPR, %struct.GPR* %7582, i32 0, i32 33
  %7584 = getelementptr inbounds %struct.Reg, %struct.Reg* %7583, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %7584 to i64*
  %7585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7586 = getelementptr inbounds %struct.GPR, %struct.GPR* %7585, i32 0, i32 1
  %7587 = getelementptr inbounds %struct.Reg, %struct.Reg* %7586, i32 0, i32 0
  %EAX.i237 = bitcast %union.anon* %7587 to i32*
  %7588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7589 = getelementptr inbounds %struct.GPR, %struct.GPR* %7588, i32 0, i32 15
  %7590 = getelementptr inbounds %struct.Reg, %struct.Reg* %7589, i32 0, i32 0
  %RBP.i238 = bitcast %union.anon* %7590 to i64*
  %7591 = load i64, i64* %RBP.i238
  %7592 = sub i64 %7591, 28
  %7593 = load i32, i32* %EAX.i237
  %7594 = zext i32 %7593 to i64
  %7595 = load i64, i64* %PC.i236
  %7596 = add i64 %7595, 3
  store i64 %7596, i64* %PC.i236
  %7597 = inttoptr i64 %7592 to i32*
  store i32 %7593, i32* %7597
  store %struct.Memory* %loadMem_426428, %struct.Memory** %MEMORY
  br label %block_.L_42642b

block_.L_42642b:                                  ; preds = %block_.L_426402, %block_.L_426390
  %loadMem_42642b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7599 = getelementptr inbounds %struct.GPR, %struct.GPR* %7598, i32 0, i32 33
  %7600 = getelementptr inbounds %struct.Reg, %struct.Reg* %7599, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %7600 to i64*
  %7601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7602 = getelementptr inbounds %struct.GPR, %struct.GPR* %7601, i32 0, i32 1
  %7603 = getelementptr inbounds %struct.Reg, %struct.Reg* %7602, i32 0, i32 0
  %RAX.i235 = bitcast %union.anon* %7603 to i64*
  %7604 = load i64, i64* %PC.i234
  %7605 = add i64 %7604, 8
  store i64 %7605, i64* %PC.i234
  %7606 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %7606, i64* %RAX.i235, align 8
  store %struct.Memory* %loadMem_42642b, %struct.Memory** %MEMORY
  %loadMem_426433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7608 = getelementptr inbounds %struct.GPR, %struct.GPR* %7607, i32 0, i32 33
  %7609 = getelementptr inbounds %struct.Reg, %struct.Reg* %7608, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %7609 to i64*
  %7610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7611 = getelementptr inbounds %struct.GPR, %struct.GPR* %7610, i32 0, i32 1
  %7612 = getelementptr inbounds %struct.Reg, %struct.Reg* %7611, i32 0, i32 0
  %RAX.i233 = bitcast %union.anon* %7612 to i64*
  %7613 = load i64, i64* %RAX.i233
  %7614 = add i64 %7613, 220
  %7615 = load i64, i64* %PC.i232
  %7616 = add i64 %7615, 7
  store i64 %7616, i64* %PC.i232
  %7617 = inttoptr i64 %7614 to i32*
  %7618 = load i32, i32* %7617
  %7619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7619, align 1
  %7620 = and i32 %7618, 255
  %7621 = call i32 @llvm.ctpop.i32(i32 %7620)
  %7622 = trunc i32 %7621 to i8
  %7623 = and i8 %7622, 1
  %7624 = xor i8 %7623, 1
  %7625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7624, i8* %7625, align 1
  %7626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7626, align 1
  %7627 = icmp eq i32 %7618, 0
  %7628 = zext i1 %7627 to i8
  %7629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7628, i8* %7629, align 1
  %7630 = lshr i32 %7618, 31
  %7631 = trunc i32 %7630 to i8
  %7632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7631, i8* %7632, align 1
  %7633 = lshr i32 %7618, 31
  %7634 = xor i32 %7630, %7633
  %7635 = add i32 %7634, %7633
  %7636 = icmp eq i32 %7635, 2
  %7637 = zext i1 %7636 to i8
  %7638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7637, i8* %7638, align 1
  store %struct.Memory* %loadMem_426433, %struct.Memory** %MEMORY
  %loadMem_42643a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7640 = getelementptr inbounds %struct.GPR, %struct.GPR* %7639, i32 0, i32 33
  %7641 = getelementptr inbounds %struct.Reg, %struct.Reg* %7640, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %7641 to i64*
  %7642 = load i64, i64* %PC.i231
  %7643 = add i64 %7642, 183
  %7644 = load i64, i64* %PC.i231
  %7645 = add i64 %7644, 6
  %7646 = load i64, i64* %PC.i231
  %7647 = add i64 %7646, 6
  store i64 %7647, i64* %PC.i231
  %7648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7649 = load i8, i8* %7648, align 1
  store i8 %7649, i8* %BRANCH_TAKEN, align 1
  %7650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7651 = icmp ne i8 %7649, 0
  %7652 = select i1 %7651, i64 %7643, i64 %7645
  store i64 %7652, i64* %7650, align 8
  store %struct.Memory* %loadMem_42643a, %struct.Memory** %MEMORY
  %loadBr_42643a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42643a = icmp eq i8 %loadBr_42643a, 1
  br i1 %cmpBr_42643a, label %block_.L_4264f1, label %block_426440

block_426440:                                     ; preds = %block_.L_42642b
  %loadMem_426440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7654 = getelementptr inbounds %struct.GPR, %struct.GPR* %7653, i32 0, i32 33
  %7655 = getelementptr inbounds %struct.Reg, %struct.Reg* %7654, i32 0, i32 0
  %PC.i229 = bitcast %union.anon* %7655 to i64*
  %7656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7657 = getelementptr inbounds %struct.GPR, %struct.GPR* %7656, i32 0, i32 11
  %7658 = getelementptr inbounds %struct.Reg, %struct.Reg* %7657, i32 0, i32 0
  %RDI.i230 = bitcast %union.anon* %7658 to i64*
  %7659 = load i64, i64* %PC.i229
  %7660 = add i64 %7659, 10
  store i64 %7660, i64* %PC.i229
  store i64 ptrtoint (%G__0x4bfbff_type* @G__0x4bfbff to i64), i64* %RDI.i230, align 8
  store %struct.Memory* %loadMem_426440, %struct.Memory** %MEMORY
  %loadMem_42644a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7662 = getelementptr inbounds %struct.GPR, %struct.GPR* %7661, i32 0, i32 33
  %7663 = getelementptr inbounds %struct.Reg, %struct.Reg* %7662, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %7663 to i64*
  %7664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7665 = getelementptr inbounds %struct.GPR, %struct.GPR* %7664, i32 0, i32 1
  %7666 = getelementptr inbounds %struct.Reg, %struct.Reg* %7665, i32 0, i32 0
  %RAX.i228 = bitcast %union.anon* %7666 to i64*
  %7667 = load i64, i64* %PC.i227
  %7668 = add i64 %7667, 8
  store i64 %7668, i64* %PC.i227
  %7669 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7669, i64* %RAX.i228, align 8
  store %struct.Memory* %loadMem_42644a, %struct.Memory** %MEMORY
  %loadMem_426452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7671 = getelementptr inbounds %struct.GPR, %struct.GPR* %7670, i32 0, i32 33
  %7672 = getelementptr inbounds %struct.Reg, %struct.Reg* %7671, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %7672 to i64*
  %7673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7674 = getelementptr inbounds %struct.GPR, %struct.GPR* %7673, i32 0, i32 1
  %7675 = getelementptr inbounds %struct.Reg, %struct.Reg* %7674, i32 0, i32 0
  %RAX.i225 = bitcast %union.anon* %7675 to i64*
  %7676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7677 = getelementptr inbounds %struct.GPR, %struct.GPR* %7676, i32 0, i32 9
  %7678 = getelementptr inbounds %struct.Reg, %struct.Reg* %7677, i32 0, i32 0
  %RSI.i226 = bitcast %union.anon* %7678 to i64*
  %7679 = load i64, i64* %RAX.i225
  %7680 = add i64 %7679, 71984
  %7681 = load i64, i64* %PC.i224
  %7682 = add i64 %7681, 6
  store i64 %7682, i64* %PC.i224
  %7683 = inttoptr i64 %7680 to i32*
  %7684 = load i32, i32* %7683
  %7685 = zext i32 %7684 to i64
  store i64 %7685, i64* %RSI.i226, align 8
  store %struct.Memory* %loadMem_426452, %struct.Memory** %MEMORY
  %loadMem_426458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7687 = getelementptr inbounds %struct.GPR, %struct.GPR* %7686, i32 0, i32 33
  %7688 = getelementptr inbounds %struct.Reg, %struct.Reg* %7687, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %7688 to i64*
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7690 = getelementptr inbounds %struct.GPR, %struct.GPR* %7689, i32 0, i32 7
  %7691 = getelementptr inbounds %struct.Reg, %struct.Reg* %7690, i32 0, i32 0
  %RDX.i222 = bitcast %union.anon* %7691 to i64*
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7693 = getelementptr inbounds %struct.GPR, %struct.GPR* %7692, i32 0, i32 15
  %7694 = getelementptr inbounds %struct.Reg, %struct.Reg* %7693, i32 0, i32 0
  %RBP.i223 = bitcast %union.anon* %7694 to i64*
  %7695 = load i64, i64* %RBP.i223
  %7696 = sub i64 %7695, 16
  %7697 = load i64, i64* %PC.i221
  %7698 = add i64 %7697, 4
  store i64 %7698, i64* %PC.i221
  %7699 = inttoptr i64 %7696 to i64*
  %7700 = load i64, i64* %7699
  store i64 %7700, i64* %RDX.i222, align 8
  store %struct.Memory* %loadMem_426458, %struct.Memory** %MEMORY
  %loadMem1_42645c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7702 = getelementptr inbounds %struct.GPR, %struct.GPR* %7701, i32 0, i32 33
  %7703 = getelementptr inbounds %struct.Reg, %struct.Reg* %7702, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %7703 to i64*
  %7704 = load i64, i64* %PC.i220
  %7705 = add i64 %7704, 549444
  %7706 = load i64, i64* %PC.i220
  %7707 = add i64 %7706, 5
  %7708 = load i64, i64* %PC.i220
  %7709 = add i64 %7708, 5
  store i64 %7709, i64* %PC.i220
  %7710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7711 = load i64, i64* %7710, align 8
  %7712 = add i64 %7711, -8
  %7713 = inttoptr i64 %7712 to i64*
  store i64 %7707, i64* %7713
  store i64 %7712, i64* %7710, align 8
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7705, i64* %7714, align 8
  store %struct.Memory* %loadMem1_42645c, %struct.Memory** %MEMORY
  %loadMem2_42645c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42645c = load i64, i64* %3
  %call2_42645c = call %struct.Memory* @sub_4ac6a0.ue_v(%struct.State* %0, i64 %loadPC_42645c, %struct.Memory* %loadMem2_42645c)
  store %struct.Memory* %call2_42645c, %struct.Memory** %MEMORY
  %loadMem_426461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7716 = getelementptr inbounds %struct.GPR, %struct.GPR* %7715, i32 0, i32 33
  %7717 = getelementptr inbounds %struct.Reg, %struct.Reg* %7716, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %7717 to i64*
  %7718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7719 = getelementptr inbounds %struct.GPR, %struct.GPR* %7718, i32 0, i32 1
  %7720 = getelementptr inbounds %struct.Reg, %struct.Reg* %7719, i32 0, i32 0
  %RAX.i218 = bitcast %union.anon* %7720 to i64*
  %7721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7722 = getelementptr inbounds %struct.GPR, %struct.GPR* %7721, i32 0, i32 15
  %7723 = getelementptr inbounds %struct.Reg, %struct.Reg* %7722, i32 0, i32 0
  %RBP.i219 = bitcast %union.anon* %7723 to i64*
  %7724 = load i64, i64* %RAX.i218
  %7725 = load i64, i64* %RBP.i219
  %7726 = sub i64 %7725, 28
  %7727 = load i64, i64* %PC.i217
  %7728 = add i64 %7727, 3
  store i64 %7728, i64* %PC.i217
  %7729 = trunc i64 %7724 to i32
  %7730 = inttoptr i64 %7726 to i32*
  %7731 = load i32, i32* %7730
  %7732 = add i32 %7731, %7729
  %7733 = zext i32 %7732 to i64
  store i64 %7733, i64* %RAX.i218, align 8
  %7734 = icmp ult i32 %7732, %7729
  %7735 = icmp ult i32 %7732, %7731
  %7736 = or i1 %7734, %7735
  %7737 = zext i1 %7736 to i8
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7737, i8* %7738, align 1
  %7739 = and i32 %7732, 255
  %7740 = call i32 @llvm.ctpop.i32(i32 %7739)
  %7741 = trunc i32 %7740 to i8
  %7742 = and i8 %7741, 1
  %7743 = xor i8 %7742, 1
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7743, i8* %7744, align 1
  %7745 = xor i32 %7731, %7729
  %7746 = xor i32 %7745, %7732
  %7747 = lshr i32 %7746, 4
  %7748 = trunc i32 %7747 to i8
  %7749 = and i8 %7748, 1
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7749, i8* %7750, align 1
  %7751 = icmp eq i32 %7732, 0
  %7752 = zext i1 %7751 to i8
  %7753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7752, i8* %7753, align 1
  %7754 = lshr i32 %7732, 31
  %7755 = trunc i32 %7754 to i8
  %7756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7755, i8* %7756, align 1
  %7757 = lshr i32 %7729, 31
  %7758 = lshr i32 %7731, 31
  %7759 = xor i32 %7754, %7757
  %7760 = xor i32 %7754, %7758
  %7761 = add i32 %7759, %7760
  %7762 = icmp eq i32 %7761, 2
  %7763 = zext i1 %7762 to i8
  %7764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7763, i8* %7764, align 1
  store %struct.Memory* %loadMem_426461, %struct.Memory** %MEMORY
  %loadMem_426464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7766 = getelementptr inbounds %struct.GPR, %struct.GPR* %7765, i32 0, i32 33
  %7767 = getelementptr inbounds %struct.Reg, %struct.Reg* %7766, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %7767 to i64*
  %7768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7769 = getelementptr inbounds %struct.GPR, %struct.GPR* %7768, i32 0, i32 1
  %7770 = getelementptr inbounds %struct.Reg, %struct.Reg* %7769, i32 0, i32 0
  %EAX.i215 = bitcast %union.anon* %7770 to i32*
  %7771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7772 = getelementptr inbounds %struct.GPR, %struct.GPR* %7771, i32 0, i32 15
  %7773 = getelementptr inbounds %struct.Reg, %struct.Reg* %7772, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %7773 to i64*
  %7774 = load i64, i64* %RBP.i216
  %7775 = sub i64 %7774, 28
  %7776 = load i32, i32* %EAX.i215
  %7777 = zext i32 %7776 to i64
  %7778 = load i64, i64* %PC.i214
  %7779 = add i64 %7778, 3
  store i64 %7779, i64* %PC.i214
  %7780 = inttoptr i64 %7775 to i32*
  store i32 %7776, i32* %7780
  store %struct.Memory* %loadMem_426464, %struct.Memory** %MEMORY
  %loadMem_426467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7782 = getelementptr inbounds %struct.GPR, %struct.GPR* %7781, i32 0, i32 33
  %7783 = getelementptr inbounds %struct.Reg, %struct.Reg* %7782, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %7783 to i64*
  %7784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7785 = getelementptr inbounds %struct.GPR, %struct.GPR* %7784, i32 0, i32 7
  %7786 = getelementptr inbounds %struct.Reg, %struct.Reg* %7785, i32 0, i32 0
  %RDX.i213 = bitcast %union.anon* %7786 to i64*
  %7787 = load i64, i64* %PC.i212
  %7788 = add i64 %7787, 8
  store i64 %7788, i64* %PC.i212
  %7789 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7789, i64* %RDX.i213, align 8
  store %struct.Memory* %loadMem_426467, %struct.Memory** %MEMORY
  %loadMem_42646f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7791 = getelementptr inbounds %struct.GPR, %struct.GPR* %7790, i32 0, i32 33
  %7792 = getelementptr inbounds %struct.Reg, %struct.Reg* %7791, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %7792 to i64*
  %7793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7794 = getelementptr inbounds %struct.GPR, %struct.GPR* %7793, i32 0, i32 7
  %7795 = getelementptr inbounds %struct.Reg, %struct.Reg* %7794, i32 0, i32 0
  %RDX.i211 = bitcast %union.anon* %7795 to i64*
  %7796 = load i64, i64* %RDX.i211
  %7797 = add i64 %7796, 71984
  %7798 = load i64, i64* %PC.i210
  %7799 = add i64 %7798, 7
  store i64 %7799, i64* %PC.i210
  %7800 = inttoptr i64 %7797 to i32*
  %7801 = load i32, i32* %7800
  %7802 = sub i32 %7801, 1
  %7803 = icmp ult i32 %7801, 1
  %7804 = zext i1 %7803 to i8
  %7805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7804, i8* %7805, align 1
  %7806 = and i32 %7802, 255
  %7807 = call i32 @llvm.ctpop.i32(i32 %7806)
  %7808 = trunc i32 %7807 to i8
  %7809 = and i8 %7808, 1
  %7810 = xor i8 %7809, 1
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7810, i8* %7811, align 1
  %7812 = xor i32 %7801, 1
  %7813 = xor i32 %7812, %7802
  %7814 = lshr i32 %7813, 4
  %7815 = trunc i32 %7814 to i8
  %7816 = and i8 %7815, 1
  %7817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7816, i8* %7817, align 1
  %7818 = icmp eq i32 %7802, 0
  %7819 = zext i1 %7818 to i8
  %7820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7819, i8* %7820, align 1
  %7821 = lshr i32 %7802, 31
  %7822 = trunc i32 %7821 to i8
  %7823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7822, i8* %7823, align 1
  %7824 = lshr i32 %7801, 31
  %7825 = xor i32 %7821, %7824
  %7826 = add i32 %7825, %7824
  %7827 = icmp eq i32 %7826, 2
  %7828 = zext i1 %7827 to i8
  %7829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7828, i8* %7829, align 1
  store %struct.Memory* %loadMem_42646f, %struct.Memory** %MEMORY
  %loadMem_426476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7831 = getelementptr inbounds %struct.GPR, %struct.GPR* %7830, i32 0, i32 33
  %7832 = getelementptr inbounds %struct.Reg, %struct.Reg* %7831, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %7832 to i64*
  %7833 = load i64, i64* %PC.i209
  %7834 = add i64 %7833, 118
  %7835 = load i64, i64* %PC.i209
  %7836 = add i64 %7835, 6
  %7837 = load i64, i64* %PC.i209
  %7838 = add i64 %7837, 6
  store i64 %7838, i64* %PC.i209
  %7839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7840 = load i8, i8* %7839, align 1
  store i8 %7840, i8* %BRANCH_TAKEN, align 1
  %7841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7842 = icmp ne i8 %7840, 0
  %7843 = select i1 %7842, i64 %7834, i64 %7836
  store i64 %7843, i64* %7841, align 8
  store %struct.Memory* %loadMem_426476, %struct.Memory** %MEMORY
  %loadBr_426476 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_426476 = icmp eq i8 %loadBr_426476, 1
  br i1 %cmpBr_426476, label %block_.L_4264ec, label %block_42647c

block_42647c:                                     ; preds = %block_426440
  %loadMem_42647c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7845 = getelementptr inbounds %struct.GPR, %struct.GPR* %7844, i32 0, i32 33
  %7846 = getelementptr inbounds %struct.Reg, %struct.Reg* %7845, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %7846 to i64*
  %7847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7848 = getelementptr inbounds %struct.GPR, %struct.GPR* %7847, i32 0, i32 11
  %7849 = getelementptr inbounds %struct.Reg, %struct.Reg* %7848, i32 0, i32 0
  %RDI.i208 = bitcast %union.anon* %7849 to i64*
  %7850 = load i64, i64* %PC.i207
  %7851 = add i64 %7850, 10
  store i64 %7851, i64* %PC.i207
  store i64 ptrtoint (%G__0x4bfc21_type* @G__0x4bfc21 to i64), i64* %RDI.i208, align 8
  store %struct.Memory* %loadMem_42647c, %struct.Memory** %MEMORY
  %loadMem_426486 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7853 = getelementptr inbounds %struct.GPR, %struct.GPR* %7852, i32 0, i32 33
  %7854 = getelementptr inbounds %struct.Reg, %struct.Reg* %7853, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %7854 to i64*
  %7855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7856 = getelementptr inbounds %struct.GPR, %struct.GPR* %7855, i32 0, i32 1
  %7857 = getelementptr inbounds %struct.Reg, %struct.Reg* %7856, i32 0, i32 0
  %RAX.i206 = bitcast %union.anon* %7857 to i64*
  %7858 = load i64, i64* %PC.i205
  %7859 = add i64 %7858, 5
  store i64 %7859, i64* %PC.i205
  store i64 2, i64* %RAX.i206, align 8
  store %struct.Memory* %loadMem_426486, %struct.Memory** %MEMORY
  %loadMem_42648b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7861 = getelementptr inbounds %struct.GPR, %struct.GPR* %7860, i32 0, i32 33
  %7862 = getelementptr inbounds %struct.Reg, %struct.Reg* %7861, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %7862 to i64*
  %7863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7864 = getelementptr inbounds %struct.GPR, %struct.GPR* %7863, i32 0, i32 5
  %7865 = getelementptr inbounds %struct.Reg, %struct.Reg* %7864, i32 0, i32 0
  %RCX.i204 = bitcast %union.anon* %7865 to i64*
  %7866 = load i64, i64* %PC.i203
  %7867 = add i64 %7866, 8
  store i64 %7867, i64* %PC.i203
  %7868 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7868, i64* %RCX.i204, align 8
  store %struct.Memory* %loadMem_42648b, %struct.Memory** %MEMORY
  %loadMem_426493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7870 = getelementptr inbounds %struct.GPR, %struct.GPR* %7869, i32 0, i32 33
  %7871 = getelementptr inbounds %struct.Reg, %struct.Reg* %7870, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %7871 to i64*
  %7872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7873 = getelementptr inbounds %struct.GPR, %struct.GPR* %7872, i32 0, i32 5
  %7874 = getelementptr inbounds %struct.Reg, %struct.Reg* %7873, i32 0, i32 0
  %RCX.i201 = bitcast %union.anon* %7874 to i64*
  %7875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7876 = getelementptr inbounds %struct.GPR, %struct.GPR* %7875, i32 0, i32 7
  %7877 = getelementptr inbounds %struct.Reg, %struct.Reg* %7876, i32 0, i32 0
  %RDX.i202 = bitcast %union.anon* %7877 to i64*
  %7878 = load i64, i64* %RCX.i201
  %7879 = add i64 %7878, 71988
  %7880 = load i64, i64* %PC.i200
  %7881 = add i64 %7880, 6
  store i64 %7881, i64* %PC.i200
  %7882 = inttoptr i64 %7879 to i32*
  %7883 = load i32, i32* %7882
  %7884 = zext i32 %7883 to i64
  store i64 %7884, i64* %RDX.i202, align 8
  store %struct.Memory* %loadMem_426493, %struct.Memory** %MEMORY
  %loadMem_426499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7886 = getelementptr inbounds %struct.GPR, %struct.GPR* %7885, i32 0, i32 33
  %7887 = getelementptr inbounds %struct.Reg, %struct.Reg* %7886, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %7887 to i64*
  %7888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7889 = getelementptr inbounds %struct.GPR, %struct.GPR* %7888, i32 0, i32 1
  %7890 = getelementptr inbounds %struct.Reg, %struct.Reg* %7889, i32 0, i32 0
  %EAX.i198 = bitcast %union.anon* %7890 to i32*
  %7891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7892 = getelementptr inbounds %struct.GPR, %struct.GPR* %7891, i32 0, i32 15
  %7893 = getelementptr inbounds %struct.Reg, %struct.Reg* %7892, i32 0, i32 0
  %RBP.i199 = bitcast %union.anon* %7893 to i64*
  %7894 = load i64, i64* %RBP.i199
  %7895 = sub i64 %7894, 64
  %7896 = load i32, i32* %EAX.i198
  %7897 = zext i32 %7896 to i64
  %7898 = load i64, i64* %PC.i197
  %7899 = add i64 %7898, 3
  store i64 %7899, i64* %PC.i197
  %7900 = inttoptr i64 %7895 to i32*
  store i32 %7896, i32* %7900
  store %struct.Memory* %loadMem_426499, %struct.Memory** %MEMORY
  %loadMem_42649c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7902 = getelementptr inbounds %struct.GPR, %struct.GPR* %7901, i32 0, i32 33
  %7903 = getelementptr inbounds %struct.Reg, %struct.Reg* %7902, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %7903 to i64*
  %7904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7905 = getelementptr inbounds %struct.GPR, %struct.GPR* %7904, i32 0, i32 7
  %7906 = getelementptr inbounds %struct.Reg, %struct.Reg* %7905, i32 0, i32 0
  %EDX.i195 = bitcast %union.anon* %7906 to i32*
  %7907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7908 = getelementptr inbounds %struct.GPR, %struct.GPR* %7907, i32 0, i32 1
  %7909 = getelementptr inbounds %struct.Reg, %struct.Reg* %7908, i32 0, i32 0
  %RAX.i196 = bitcast %union.anon* %7909 to i64*
  %7910 = load i32, i32* %EDX.i195
  %7911 = zext i32 %7910 to i64
  %7912 = load i64, i64* %PC.i194
  %7913 = add i64 %7912, 2
  store i64 %7913, i64* %PC.i194
  %7914 = and i64 %7911, 4294967295
  store i64 %7914, i64* %RAX.i196, align 8
  store %struct.Memory* %loadMem_42649c, %struct.Memory** %MEMORY
  %loadMem_42649e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7916 = getelementptr inbounds %struct.GPR, %struct.GPR* %7915, i32 0, i32 33
  %7917 = getelementptr inbounds %struct.Reg, %struct.Reg* %7916, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %7917 to i64*
  %7918 = load i64, i64* %PC.i193
  %7919 = add i64 %7918, 1
  store i64 %7919, i64* %PC.i193
  %7920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %7921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7922 = bitcast %union.anon* %7921 to i32*
  %7923 = load i32, i32* %7922, align 8
  %7924 = sext i32 %7923 to i64
  %7925 = lshr i64 %7924, 32
  store i64 %7925, i64* %7920, align 8
  store %struct.Memory* %loadMem_42649e, %struct.Memory** %MEMORY
  %loadMem_42649f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7927 = getelementptr inbounds %struct.GPR, %struct.GPR* %7926, i32 0, i32 33
  %7928 = getelementptr inbounds %struct.Reg, %struct.Reg* %7927, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %7928 to i64*
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7930 = getelementptr inbounds %struct.GPR, %struct.GPR* %7929, i32 0, i32 9
  %7931 = getelementptr inbounds %struct.Reg, %struct.Reg* %7930, i32 0, i32 0
  %RSI.i191 = bitcast %union.anon* %7931 to i64*
  %7932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7933 = getelementptr inbounds %struct.GPR, %struct.GPR* %7932, i32 0, i32 15
  %7934 = getelementptr inbounds %struct.Reg, %struct.Reg* %7933, i32 0, i32 0
  %RBP.i192 = bitcast %union.anon* %7934 to i64*
  %7935 = load i64, i64* %RBP.i192
  %7936 = sub i64 %7935, 64
  %7937 = load i64, i64* %PC.i190
  %7938 = add i64 %7937, 3
  store i64 %7938, i64* %PC.i190
  %7939 = inttoptr i64 %7936 to i32*
  %7940 = load i32, i32* %7939
  %7941 = zext i32 %7940 to i64
  store i64 %7941, i64* %RSI.i191, align 8
  store %struct.Memory* %loadMem_42649f, %struct.Memory** %MEMORY
  %loadMem_4264a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7943 = getelementptr inbounds %struct.GPR, %struct.GPR* %7942, i32 0, i32 33
  %7944 = getelementptr inbounds %struct.Reg, %struct.Reg* %7943, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %7944 to i64*
  %7945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7946 = getelementptr inbounds %struct.GPR, %struct.GPR* %7945, i32 0, i32 9
  %7947 = getelementptr inbounds %struct.Reg, %struct.Reg* %7946, i32 0, i32 0
  %ESI.i186 = bitcast %union.anon* %7947 to i32*
  %7948 = load i32, i32* %ESI.i186
  %7949 = zext i32 %7948 to i64
  %7950 = load i64, i64* %PC.i185
  %7951 = add i64 %7950, 2
  store i64 %7951, i64* %PC.i185
  %7952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7953 = bitcast %union.anon* %7952 to i32*
  %7954 = load i32, i32* %7953, align 8
  %7955 = zext i32 %7954 to i64
  %7956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %7957 = bitcast %union.anon* %7956 to i32*
  %7958 = load i32, i32* %7957, align 8
  %7959 = zext i32 %7958 to i64
  %7960 = shl i64 %7949, 32
  %7961 = ashr exact i64 %7960, 32
  %7962 = shl i64 %7959, 32
  %7963 = or i64 %7962, %7955
  %7964 = sdiv i64 %7963, %7961
  %7965 = shl i64 %7964, 32
  %7966 = ashr exact i64 %7965, 32
  %7967 = icmp eq i64 %7964, %7966
  br i1 %7967, label %7972, label %7968

; <label>:7968:                                   ; preds = %block_42647c
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7970 = load i64, i64* %7969, align 8
  %7971 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7970, %struct.Memory* %loadMem_4264a2)
  br label %routine_idivl__esi.exit187

; <label>:7972:                                   ; preds = %block_42647c
  %7973 = srem i64 %7963, %7961
  %7974 = getelementptr inbounds %union.anon, %union.anon* %7952, i64 0, i32 0
  %7975 = and i64 %7964, 4294967295
  store i64 %7975, i64* %7974, align 8
  %7976 = getelementptr inbounds %union.anon, %union.anon* %7956, i64 0, i32 0
  %7977 = and i64 %7973, 4294967295
  store i64 %7977, i64* %7976, align 8
  %7978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7978, align 1
  %7979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %7979, align 1
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7980, align 1
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7981, align 1
  %7982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7982, align 1
  %7983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7983, align 1
  br label %routine_idivl__esi.exit187

routine_idivl__esi.exit187:                       ; preds = %7968, %7972
  %7984 = phi %struct.Memory* [ %7971, %7968 ], [ %loadMem_4264a2, %7972 ]
  store %struct.Memory* %7984, %struct.Memory** %MEMORY
  %loadMem_4264a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7986 = getelementptr inbounds %struct.GPR, %struct.GPR* %7985, i32 0, i32 33
  %7987 = getelementptr inbounds %struct.Reg, %struct.Reg* %7986, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %7987 to i64*
  %7988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7989 = getelementptr inbounds %struct.GPR, %struct.GPR* %7988, i32 0, i32 5
  %7990 = getelementptr inbounds %struct.Reg, %struct.Reg* %7989, i32 0, i32 0
  %RCX.i183 = bitcast %union.anon* %7990 to i64*
  %7991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7992 = getelementptr inbounds %struct.GPR, %struct.GPR* %7991, i32 0, i32 15
  %7993 = getelementptr inbounds %struct.Reg, %struct.Reg* %7992, i32 0, i32 0
  %RBP.i184 = bitcast %union.anon* %7993 to i64*
  %7994 = load i64, i64* %RBP.i184
  %7995 = sub i64 %7994, 16
  %7996 = load i64, i64* %PC.i182
  %7997 = add i64 %7996, 4
  store i64 %7997, i64* %PC.i182
  %7998 = inttoptr i64 %7995 to i64*
  %7999 = load i64, i64* %7998
  store i64 %7999, i64* %RCX.i183, align 8
  store %struct.Memory* %loadMem_4264a4, %struct.Memory** %MEMORY
  %loadMem_4264a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8001 = getelementptr inbounds %struct.GPR, %struct.GPR* %8000, i32 0, i32 33
  %8002 = getelementptr inbounds %struct.Reg, %struct.Reg* %8001, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %8002 to i64*
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8004 = getelementptr inbounds %struct.GPR, %struct.GPR* %8003, i32 0, i32 1
  %8005 = getelementptr inbounds %struct.Reg, %struct.Reg* %8004, i32 0, i32 0
  %EAX.i180 = bitcast %union.anon* %8005 to i32*
  %8006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8007 = getelementptr inbounds %struct.GPR, %struct.GPR* %8006, i32 0, i32 9
  %8008 = getelementptr inbounds %struct.Reg, %struct.Reg* %8007, i32 0, i32 0
  %RSI.i181 = bitcast %union.anon* %8008 to i64*
  %8009 = load i32, i32* %EAX.i180
  %8010 = zext i32 %8009 to i64
  %8011 = load i64, i64* %PC.i179
  %8012 = add i64 %8011, 2
  store i64 %8012, i64* %PC.i179
  %8013 = and i64 %8010, 4294967295
  store i64 %8013, i64* %RSI.i181, align 8
  store %struct.Memory* %loadMem_4264a8, %struct.Memory** %MEMORY
  %loadMem_4264aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8015 = getelementptr inbounds %struct.GPR, %struct.GPR* %8014, i32 0, i32 33
  %8016 = getelementptr inbounds %struct.Reg, %struct.Reg* %8015, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %8016 to i64*
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8018 = getelementptr inbounds %struct.GPR, %struct.GPR* %8017, i32 0, i32 5
  %8019 = getelementptr inbounds %struct.Reg, %struct.Reg* %8018, i32 0, i32 0
  %RCX.i177 = bitcast %union.anon* %8019 to i64*
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8021 = getelementptr inbounds %struct.GPR, %struct.GPR* %8020, i32 0, i32 7
  %8022 = getelementptr inbounds %struct.Reg, %struct.Reg* %8021, i32 0, i32 0
  %RDX.i178 = bitcast %union.anon* %8022 to i64*
  %8023 = load i64, i64* %RCX.i177
  %8024 = load i64, i64* %PC.i176
  %8025 = add i64 %8024, 3
  store i64 %8025, i64* %PC.i176
  store i64 %8023, i64* %RDX.i178, align 8
  store %struct.Memory* %loadMem_4264aa, %struct.Memory** %MEMORY
  %loadMem1_4264ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %8026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8027 = getelementptr inbounds %struct.GPR, %struct.GPR* %8026, i32 0, i32 33
  %8028 = getelementptr inbounds %struct.Reg, %struct.Reg* %8027, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %8028 to i64*
  %8029 = load i64, i64* %PC.i175
  %8030 = add i64 %8029, 550163
  %8031 = load i64, i64* %PC.i175
  %8032 = add i64 %8031, 5
  %8033 = load i64, i64* %PC.i175
  %8034 = add i64 %8033, 5
  store i64 %8034, i64* %PC.i175
  %8035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8036 = load i64, i64* %8035, align 8
  %8037 = add i64 %8036, -8
  %8038 = inttoptr i64 %8037 to i64*
  store i64 %8032, i64* %8038
  store i64 %8037, i64* %8035, align 8
  %8039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8030, i64* %8039, align 8
  store %struct.Memory* %loadMem1_4264ad, %struct.Memory** %MEMORY
  %loadMem2_4264ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4264ad = load i64, i64* %3
  %call2_4264ad = call %struct.Memory* @sub_4ac9c0.se_v(%struct.State* %0, i64 %loadPC_4264ad, %struct.Memory* %loadMem2_4264ad)
  store %struct.Memory* %call2_4264ad, %struct.Memory** %MEMORY
  %loadMem_4264b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8041 = getelementptr inbounds %struct.GPR, %struct.GPR* %8040, i32 0, i32 33
  %8042 = getelementptr inbounds %struct.Reg, %struct.Reg* %8041, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %8042 to i64*
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8044 = getelementptr inbounds %struct.GPR, %struct.GPR* %8043, i32 0, i32 11
  %8045 = getelementptr inbounds %struct.Reg, %struct.Reg* %8044, i32 0, i32 0
  %RDI.i174 = bitcast %union.anon* %8045 to i64*
  %8046 = load i64, i64* %PC.i173
  %8047 = add i64 %8046, 10
  store i64 %8047, i64* %PC.i173
  store i64 ptrtoint (%G__0x4bfc40_type* @G__0x4bfc40 to i64), i64* %RDI.i174, align 8
  store %struct.Memory* %loadMem_4264b2, %struct.Memory** %MEMORY
  %loadMem_4264bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8049 = getelementptr inbounds %struct.GPR, %struct.GPR* %8048, i32 0, i32 33
  %8050 = getelementptr inbounds %struct.Reg, %struct.Reg* %8049, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %8050 to i64*
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8052 = getelementptr inbounds %struct.GPR, %struct.GPR* %8051, i32 0, i32 9
  %8053 = getelementptr inbounds %struct.Reg, %struct.Reg* %8052, i32 0, i32 0
  %RSI.i172 = bitcast %union.anon* %8053 to i64*
  %8054 = load i64, i64* %PC.i171
  %8055 = add i64 %8054, 5
  store i64 %8055, i64* %PC.i171
  store i64 2, i64* %RSI.i172, align 8
  store %struct.Memory* %loadMem_4264bc, %struct.Memory** %MEMORY
  %loadMem_4264c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8057 = getelementptr inbounds %struct.GPR, %struct.GPR* %8056, i32 0, i32 33
  %8058 = getelementptr inbounds %struct.Reg, %struct.Reg* %8057, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %8058 to i64*
  %8059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8060 = getelementptr inbounds %struct.GPR, %struct.GPR* %8059, i32 0, i32 1
  %8061 = getelementptr inbounds %struct.Reg, %struct.Reg* %8060, i32 0, i32 0
  %RAX.i169 = bitcast %union.anon* %8061 to i64*
  %8062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8063 = getelementptr inbounds %struct.GPR, %struct.GPR* %8062, i32 0, i32 15
  %8064 = getelementptr inbounds %struct.Reg, %struct.Reg* %8063, i32 0, i32 0
  %RBP.i170 = bitcast %union.anon* %8064 to i64*
  %8065 = load i64, i64* %RAX.i169
  %8066 = load i64, i64* %RBP.i170
  %8067 = sub i64 %8066, 28
  %8068 = load i64, i64* %PC.i168
  %8069 = add i64 %8068, 3
  store i64 %8069, i64* %PC.i168
  %8070 = trunc i64 %8065 to i32
  %8071 = inttoptr i64 %8067 to i32*
  %8072 = load i32, i32* %8071
  %8073 = add i32 %8072, %8070
  %8074 = zext i32 %8073 to i64
  store i64 %8074, i64* %RAX.i169, align 8
  %8075 = icmp ult i32 %8073, %8070
  %8076 = icmp ult i32 %8073, %8072
  %8077 = or i1 %8075, %8076
  %8078 = zext i1 %8077 to i8
  %8079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8078, i8* %8079, align 1
  %8080 = and i32 %8073, 255
  %8081 = call i32 @llvm.ctpop.i32(i32 %8080)
  %8082 = trunc i32 %8081 to i8
  %8083 = and i8 %8082, 1
  %8084 = xor i8 %8083, 1
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8084, i8* %8085, align 1
  %8086 = xor i32 %8072, %8070
  %8087 = xor i32 %8086, %8073
  %8088 = lshr i32 %8087, 4
  %8089 = trunc i32 %8088 to i8
  %8090 = and i8 %8089, 1
  %8091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8090, i8* %8091, align 1
  %8092 = icmp eq i32 %8073, 0
  %8093 = zext i1 %8092 to i8
  %8094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8093, i8* %8094, align 1
  %8095 = lshr i32 %8073, 31
  %8096 = trunc i32 %8095 to i8
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8096, i8* %8097, align 1
  %8098 = lshr i32 %8070, 31
  %8099 = lshr i32 %8072, 31
  %8100 = xor i32 %8095, %8098
  %8101 = xor i32 %8095, %8099
  %8102 = add i32 %8100, %8101
  %8103 = icmp eq i32 %8102, 2
  %8104 = zext i1 %8103 to i8
  %8105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8104, i8* %8105, align 1
  store %struct.Memory* %loadMem_4264c1, %struct.Memory** %MEMORY
  %loadMem_4264c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8107 = getelementptr inbounds %struct.GPR, %struct.GPR* %8106, i32 0, i32 33
  %8108 = getelementptr inbounds %struct.Reg, %struct.Reg* %8107, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %8108 to i64*
  %8109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8110 = getelementptr inbounds %struct.GPR, %struct.GPR* %8109, i32 0, i32 1
  %8111 = getelementptr inbounds %struct.Reg, %struct.Reg* %8110, i32 0, i32 0
  %EAX.i166 = bitcast %union.anon* %8111 to i32*
  %8112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8113 = getelementptr inbounds %struct.GPR, %struct.GPR* %8112, i32 0, i32 15
  %8114 = getelementptr inbounds %struct.Reg, %struct.Reg* %8113, i32 0, i32 0
  %RBP.i167 = bitcast %union.anon* %8114 to i64*
  %8115 = load i64, i64* %RBP.i167
  %8116 = sub i64 %8115, 28
  %8117 = load i32, i32* %EAX.i166
  %8118 = zext i32 %8117 to i64
  %8119 = load i64, i64* %PC.i165
  %8120 = add i64 %8119, 3
  store i64 %8120, i64* %PC.i165
  %8121 = inttoptr i64 %8116 to i32*
  store i32 %8117, i32* %8121
  store %struct.Memory* %loadMem_4264c4, %struct.Memory** %MEMORY
  %loadMem_4264c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8123 = getelementptr inbounds %struct.GPR, %struct.GPR* %8122, i32 0, i32 33
  %8124 = getelementptr inbounds %struct.Reg, %struct.Reg* %8123, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %8124 to i64*
  %8125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8126 = getelementptr inbounds %struct.GPR, %struct.GPR* %8125, i32 0, i32 5
  %8127 = getelementptr inbounds %struct.Reg, %struct.Reg* %8126, i32 0, i32 0
  %RCX.i164 = bitcast %union.anon* %8127 to i64*
  %8128 = load i64, i64* %PC.i163
  %8129 = add i64 %8128, 8
  store i64 %8129, i64* %PC.i163
  %8130 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8130, i64* %RCX.i164, align 8
  store %struct.Memory* %loadMem_4264c7, %struct.Memory** %MEMORY
  %loadMem_4264cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8132 = getelementptr inbounds %struct.GPR, %struct.GPR* %8131, i32 0, i32 33
  %8133 = getelementptr inbounds %struct.Reg, %struct.Reg* %8132, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %8133 to i64*
  %8134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8135 = getelementptr inbounds %struct.GPR, %struct.GPR* %8134, i32 0, i32 1
  %8136 = getelementptr inbounds %struct.Reg, %struct.Reg* %8135, i32 0, i32 0
  %RAX.i161 = bitcast %union.anon* %8136 to i64*
  %8137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8138 = getelementptr inbounds %struct.GPR, %struct.GPR* %8137, i32 0, i32 5
  %8139 = getelementptr inbounds %struct.Reg, %struct.Reg* %8138, i32 0, i32 0
  %RCX.i162 = bitcast %union.anon* %8139 to i64*
  %8140 = load i64, i64* %RCX.i162
  %8141 = add i64 %8140, 71992
  %8142 = load i64, i64* %PC.i160
  %8143 = add i64 %8142, 6
  store i64 %8143, i64* %PC.i160
  %8144 = inttoptr i64 %8141 to i32*
  %8145 = load i32, i32* %8144
  %8146 = zext i32 %8145 to i64
  store i64 %8146, i64* %RAX.i161, align 8
  store %struct.Memory* %loadMem_4264cf, %struct.Memory** %MEMORY
  %loadMem_4264d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8148 = getelementptr inbounds %struct.GPR, %struct.GPR* %8147, i32 0, i32 33
  %8149 = getelementptr inbounds %struct.Reg, %struct.Reg* %8148, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %8149 to i64*
  %8150 = load i64, i64* %PC.i159
  %8151 = add i64 %8150, 1
  store i64 %8151, i64* %PC.i159
  %8152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8154 = bitcast %union.anon* %8153 to i32*
  %8155 = load i32, i32* %8154, align 8
  %8156 = sext i32 %8155 to i64
  %8157 = lshr i64 %8156, 32
  store i64 %8157, i64* %8152, align 8
  store %struct.Memory* %loadMem_4264d5, %struct.Memory** %MEMORY
  %loadMem_4264d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8159 = getelementptr inbounds %struct.GPR, %struct.GPR* %8158, i32 0, i32 33
  %8160 = getelementptr inbounds %struct.Reg, %struct.Reg* %8159, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %8160 to i64*
  %8161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8162 = getelementptr inbounds %struct.GPR, %struct.GPR* %8161, i32 0, i32 9
  %8163 = getelementptr inbounds %struct.Reg, %struct.Reg* %8162, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %8163 to i32*
  %8164 = load i32, i32* %ESI.i
  %8165 = zext i32 %8164 to i64
  %8166 = load i64, i64* %PC.i156
  %8167 = add i64 %8166, 2
  store i64 %8167, i64* %PC.i156
  %8168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8169 = bitcast %union.anon* %8168 to i32*
  %8170 = load i32, i32* %8169, align 8
  %8171 = zext i32 %8170 to i64
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8173 = bitcast %union.anon* %8172 to i32*
  %8174 = load i32, i32* %8173, align 8
  %8175 = zext i32 %8174 to i64
  %8176 = shl i64 %8165, 32
  %8177 = ashr exact i64 %8176, 32
  %8178 = shl i64 %8175, 32
  %8179 = or i64 %8178, %8171
  %8180 = sdiv i64 %8179, %8177
  %8181 = shl i64 %8180, 32
  %8182 = ashr exact i64 %8181, 32
  %8183 = icmp eq i64 %8180, %8182
  br i1 %8183, label %8188, label %8184

; <label>:8184:                                   ; preds = %routine_idivl__esi.exit187
  %8185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8186 = load i64, i64* %8185, align 8
  %8187 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8186, %struct.Memory* %loadMem_4264d6)
  br label %routine_idivl__esi.exit

; <label>:8188:                                   ; preds = %routine_idivl__esi.exit187
  %8189 = srem i64 %8179, %8177
  %8190 = getelementptr inbounds %union.anon, %union.anon* %8168, i64 0, i32 0
  %8191 = and i64 %8180, 4294967295
  store i64 %8191, i64* %8190, align 8
  %8192 = getelementptr inbounds %union.anon, %union.anon* %8172, i64 0, i32 0
  %8193 = and i64 %8189, 4294967295
  store i64 %8193, i64* %8192, align 8
  %8194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8194, align 1
  %8195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8195, align 1
  %8196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8196, align 1
  %8197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8197, align 1
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8198, align 1
  %8199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8199, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %8184, %8188
  %8200 = phi %struct.Memory* [ %8187, %8184 ], [ %loadMem_4264d6, %8188 ]
  store %struct.Memory* %8200, %struct.Memory** %MEMORY
  %loadMem_4264d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8202 = getelementptr inbounds %struct.GPR, %struct.GPR* %8201, i32 0, i32 33
  %8203 = getelementptr inbounds %struct.Reg, %struct.Reg* %8202, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %8203 to i64*
  %8204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8205 = getelementptr inbounds %struct.GPR, %struct.GPR* %8204, i32 0, i32 5
  %8206 = getelementptr inbounds %struct.Reg, %struct.Reg* %8205, i32 0, i32 0
  %RCX.i154 = bitcast %union.anon* %8206 to i64*
  %8207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8208 = getelementptr inbounds %struct.GPR, %struct.GPR* %8207, i32 0, i32 15
  %8209 = getelementptr inbounds %struct.Reg, %struct.Reg* %8208, i32 0, i32 0
  %RBP.i155 = bitcast %union.anon* %8209 to i64*
  %8210 = load i64, i64* %RBP.i155
  %8211 = sub i64 %8210, 16
  %8212 = load i64, i64* %PC.i153
  %8213 = add i64 %8212, 4
  store i64 %8213, i64* %PC.i153
  %8214 = inttoptr i64 %8211 to i64*
  %8215 = load i64, i64* %8214
  store i64 %8215, i64* %RCX.i154, align 8
  store %struct.Memory* %loadMem_4264d8, %struct.Memory** %MEMORY
  %loadMem_4264dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8217 = getelementptr inbounds %struct.GPR, %struct.GPR* %8216, i32 0, i32 33
  %8218 = getelementptr inbounds %struct.Reg, %struct.Reg* %8217, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %8218 to i64*
  %8219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8220 = getelementptr inbounds %struct.GPR, %struct.GPR* %8219, i32 0, i32 1
  %8221 = getelementptr inbounds %struct.Reg, %struct.Reg* %8220, i32 0, i32 0
  %EAX.i151 = bitcast %union.anon* %8221 to i32*
  %8222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8223 = getelementptr inbounds %struct.GPR, %struct.GPR* %8222, i32 0, i32 9
  %8224 = getelementptr inbounds %struct.Reg, %struct.Reg* %8223, i32 0, i32 0
  %RSI.i152 = bitcast %union.anon* %8224 to i64*
  %8225 = load i32, i32* %EAX.i151
  %8226 = zext i32 %8225 to i64
  %8227 = load i64, i64* %PC.i150
  %8228 = add i64 %8227, 2
  store i64 %8228, i64* %PC.i150
  %8229 = and i64 %8226, 4294967295
  store i64 %8229, i64* %RSI.i152, align 8
  store %struct.Memory* %loadMem_4264dc, %struct.Memory** %MEMORY
  %loadMem_4264de = load %struct.Memory*, %struct.Memory** %MEMORY
  %8230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8231 = getelementptr inbounds %struct.GPR, %struct.GPR* %8230, i32 0, i32 33
  %8232 = getelementptr inbounds %struct.Reg, %struct.Reg* %8231, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %8232 to i64*
  %8233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8234 = getelementptr inbounds %struct.GPR, %struct.GPR* %8233, i32 0, i32 5
  %8235 = getelementptr inbounds %struct.Reg, %struct.Reg* %8234, i32 0, i32 0
  %RCX.i148 = bitcast %union.anon* %8235 to i64*
  %8236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8237 = getelementptr inbounds %struct.GPR, %struct.GPR* %8236, i32 0, i32 7
  %8238 = getelementptr inbounds %struct.Reg, %struct.Reg* %8237, i32 0, i32 0
  %RDX.i149 = bitcast %union.anon* %8238 to i64*
  %8239 = load i64, i64* %RCX.i148
  %8240 = load i64, i64* %PC.i147
  %8241 = add i64 %8240, 3
  store i64 %8241, i64* %PC.i147
  store i64 %8239, i64* %RDX.i149, align 8
  store %struct.Memory* %loadMem_4264de, %struct.Memory** %MEMORY
  %loadMem1_4264e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8243 = getelementptr inbounds %struct.GPR, %struct.GPR* %8242, i32 0, i32 33
  %8244 = getelementptr inbounds %struct.Reg, %struct.Reg* %8243, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %8244 to i64*
  %8245 = load i64, i64* %PC.i146
  %8246 = add i64 %8245, 550111
  %8247 = load i64, i64* %PC.i146
  %8248 = add i64 %8247, 5
  %8249 = load i64, i64* %PC.i146
  %8250 = add i64 %8249, 5
  store i64 %8250, i64* %PC.i146
  %8251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8252 = load i64, i64* %8251, align 8
  %8253 = add i64 %8252, -8
  %8254 = inttoptr i64 %8253 to i64*
  store i64 %8248, i64* %8254
  store i64 %8253, i64* %8251, align 8
  %8255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8246, i64* %8255, align 8
  store %struct.Memory* %loadMem1_4264e1, %struct.Memory** %MEMORY
  %loadMem2_4264e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4264e1 = load i64, i64* %3
  %call2_4264e1 = call %struct.Memory* @sub_4ac9c0.se_v(%struct.State* %0, i64 %loadPC_4264e1, %struct.Memory* %loadMem2_4264e1)
  store %struct.Memory* %call2_4264e1, %struct.Memory** %MEMORY
  %loadMem_4264e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8257 = getelementptr inbounds %struct.GPR, %struct.GPR* %8256, i32 0, i32 33
  %8258 = getelementptr inbounds %struct.Reg, %struct.Reg* %8257, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %8258 to i64*
  %8259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8260 = getelementptr inbounds %struct.GPR, %struct.GPR* %8259, i32 0, i32 1
  %8261 = getelementptr inbounds %struct.Reg, %struct.Reg* %8260, i32 0, i32 0
  %RAX.i144 = bitcast %union.anon* %8261 to i64*
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8263 = getelementptr inbounds %struct.GPR, %struct.GPR* %8262, i32 0, i32 15
  %8264 = getelementptr inbounds %struct.Reg, %struct.Reg* %8263, i32 0, i32 0
  %RBP.i145 = bitcast %union.anon* %8264 to i64*
  %8265 = load i64, i64* %RAX.i144
  %8266 = load i64, i64* %RBP.i145
  %8267 = sub i64 %8266, 28
  %8268 = load i64, i64* %PC.i143
  %8269 = add i64 %8268, 3
  store i64 %8269, i64* %PC.i143
  %8270 = trunc i64 %8265 to i32
  %8271 = inttoptr i64 %8267 to i32*
  %8272 = load i32, i32* %8271
  %8273 = add i32 %8272, %8270
  %8274 = zext i32 %8273 to i64
  store i64 %8274, i64* %RAX.i144, align 8
  %8275 = icmp ult i32 %8273, %8270
  %8276 = icmp ult i32 %8273, %8272
  %8277 = or i1 %8275, %8276
  %8278 = zext i1 %8277 to i8
  %8279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8278, i8* %8279, align 1
  %8280 = and i32 %8273, 255
  %8281 = call i32 @llvm.ctpop.i32(i32 %8280)
  %8282 = trunc i32 %8281 to i8
  %8283 = and i8 %8282, 1
  %8284 = xor i8 %8283, 1
  %8285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8284, i8* %8285, align 1
  %8286 = xor i32 %8272, %8270
  %8287 = xor i32 %8286, %8273
  %8288 = lshr i32 %8287, 4
  %8289 = trunc i32 %8288 to i8
  %8290 = and i8 %8289, 1
  %8291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8290, i8* %8291, align 1
  %8292 = icmp eq i32 %8273, 0
  %8293 = zext i1 %8292 to i8
  %8294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8293, i8* %8294, align 1
  %8295 = lshr i32 %8273, 31
  %8296 = trunc i32 %8295 to i8
  %8297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8296, i8* %8297, align 1
  %8298 = lshr i32 %8270, 31
  %8299 = lshr i32 %8272, 31
  %8300 = xor i32 %8295, %8298
  %8301 = xor i32 %8295, %8299
  %8302 = add i32 %8300, %8301
  %8303 = icmp eq i32 %8302, 2
  %8304 = zext i1 %8303 to i8
  %8305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8304, i8* %8305, align 1
  store %struct.Memory* %loadMem_4264e6, %struct.Memory** %MEMORY
  %loadMem_4264e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8307 = getelementptr inbounds %struct.GPR, %struct.GPR* %8306, i32 0, i32 33
  %8308 = getelementptr inbounds %struct.Reg, %struct.Reg* %8307, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %8308 to i64*
  %8309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8310 = getelementptr inbounds %struct.GPR, %struct.GPR* %8309, i32 0, i32 1
  %8311 = getelementptr inbounds %struct.Reg, %struct.Reg* %8310, i32 0, i32 0
  %EAX.i141 = bitcast %union.anon* %8311 to i32*
  %8312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8313 = getelementptr inbounds %struct.GPR, %struct.GPR* %8312, i32 0, i32 15
  %8314 = getelementptr inbounds %struct.Reg, %struct.Reg* %8313, i32 0, i32 0
  %RBP.i142 = bitcast %union.anon* %8314 to i64*
  %8315 = load i64, i64* %RBP.i142
  %8316 = sub i64 %8315, 28
  %8317 = load i32, i32* %EAX.i141
  %8318 = zext i32 %8317 to i64
  %8319 = load i64, i64* %PC.i140
  %8320 = add i64 %8319, 3
  store i64 %8320, i64* %PC.i140
  %8321 = inttoptr i64 %8316 to i32*
  store i32 %8317, i32* %8321
  store %struct.Memory* %loadMem_4264e9, %struct.Memory** %MEMORY
  br label %block_.L_4264ec

block_.L_4264ec:                                  ; preds = %routine_idivl__esi.exit, %block_426440
  %loadMem_4264ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %8322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8323 = getelementptr inbounds %struct.GPR, %struct.GPR* %8322, i32 0, i32 33
  %8324 = getelementptr inbounds %struct.Reg, %struct.Reg* %8323, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %8324 to i64*
  %8325 = load i64, i64* %PC.i139
  %8326 = add i64 %8325, 5
  %8327 = load i64, i64* %PC.i139
  %8328 = add i64 %8327, 5
  store i64 %8328, i64* %PC.i139
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8326, i64* %8329, align 8
  store %struct.Memory* %loadMem_4264ec, %struct.Memory** %MEMORY
  br label %block_.L_4264f1

block_.L_4264f1:                                  ; preds = %block_.L_4264ec, %block_.L_42642b
  %loadMem_4264f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8331 = getelementptr inbounds %struct.GPR, %struct.GPR* %8330, i32 0, i32 33
  %8332 = getelementptr inbounds %struct.Reg, %struct.Reg* %8331, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %8332 to i64*
  %8333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8334 = getelementptr inbounds %struct.GPR, %struct.GPR* %8333, i32 0, i32 1
  %8335 = getelementptr inbounds %struct.Reg, %struct.Reg* %8334, i32 0, i32 0
  %RAX.i138 = bitcast %union.anon* %8335 to i64*
  %8336 = load i64, i64* %PC.i137
  %8337 = add i64 %8336, 8
  store i64 %8337, i64* %PC.i137
  %8338 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %8338, i64* %RAX.i138, align 8
  store %struct.Memory* %loadMem_4264f1, %struct.Memory** %MEMORY
  %loadMem_4264f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8340 = getelementptr inbounds %struct.GPR, %struct.GPR* %8339, i32 0, i32 33
  %8341 = getelementptr inbounds %struct.Reg, %struct.Reg* %8340, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %8341 to i64*
  %8342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8343 = getelementptr inbounds %struct.GPR, %struct.GPR* %8342, i32 0, i32 1
  %8344 = getelementptr inbounds %struct.Reg, %struct.Reg* %8343, i32 0, i32 0
  %RAX.i136 = bitcast %union.anon* %8344 to i64*
  %8345 = load i64, i64* %RAX.i136
  %8346 = add i64 %8345, 60
  %8347 = load i64, i64* %PC.i135
  %8348 = add i64 %8347, 4
  store i64 %8348, i64* %PC.i135
  %8349 = inttoptr i64 %8346 to i32*
  %8350 = load i32, i32* %8349
  %8351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8351, align 1
  %8352 = and i32 %8350, 255
  %8353 = call i32 @llvm.ctpop.i32(i32 %8352)
  %8354 = trunc i32 %8353 to i8
  %8355 = and i8 %8354, 1
  %8356 = xor i8 %8355, 1
  %8357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8356, i8* %8357, align 1
  %8358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8358, align 1
  %8359 = icmp eq i32 %8350, 0
  %8360 = zext i1 %8359 to i8
  %8361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8360, i8* %8361, align 1
  %8362 = lshr i32 %8350, 31
  %8363 = trunc i32 %8362 to i8
  %8364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8363, i8* %8364, align 1
  %8365 = lshr i32 %8350, 31
  %8366 = xor i32 %8362, %8365
  %8367 = add i32 %8366, %8365
  %8368 = icmp eq i32 %8367, 2
  %8369 = zext i1 %8368 to i8
  %8370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8369, i8* %8370, align 1
  store %struct.Memory* %loadMem_4264f9, %struct.Memory** %MEMORY
  %loadMem_4264fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8372 = getelementptr inbounds %struct.GPR, %struct.GPR* %8371, i32 0, i32 33
  %8373 = getelementptr inbounds %struct.Reg, %struct.Reg* %8372, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %8373 to i64*
  %8374 = load i64, i64* %PC.i134
  %8375 = add i64 %8374, 219
  %8376 = load i64, i64* %PC.i134
  %8377 = add i64 %8376, 6
  %8378 = load i64, i64* %PC.i134
  %8379 = add i64 %8378, 6
  store i64 %8379, i64* %PC.i134
  %8380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8381 = load i8, i8* %8380, align 1
  %8382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8383 = load i8, i8* %8382, align 1
  %8384 = or i8 %8383, %8381
  %8385 = icmp ne i8 %8384, 0
  %8386 = zext i1 %8385 to i8
  store i8 %8386, i8* %BRANCH_TAKEN, align 1
  %8387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8388 = select i1 %8385, i64 %8375, i64 %8377
  store i64 %8388, i64* %8387, align 8
  store %struct.Memory* %loadMem_4264fd, %struct.Memory** %MEMORY
  %loadBr_4264fd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4264fd = icmp eq i8 %loadBr_4264fd, 1
  br i1 %cmpBr_4264fd, label %block_.L_4265d8, label %block_426503

block_426503:                                     ; preds = %block_.L_4264f1
  %loadMem_426503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8390 = getelementptr inbounds %struct.GPR, %struct.GPR* %8389, i32 0, i32 33
  %8391 = getelementptr inbounds %struct.Reg, %struct.Reg* %8390, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %8391 to i64*
  %8392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8393 = getelementptr inbounds %struct.GPR, %struct.GPR* %8392, i32 0, i32 1
  %8394 = getelementptr inbounds %struct.Reg, %struct.Reg* %8393, i32 0, i32 0
  %RAX.i133 = bitcast %union.anon* %8394 to i64*
  %8395 = load i64, i64* %PC.i132
  %8396 = add i64 %8395, 8
  store i64 %8396, i64* %PC.i132
  %8397 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %8397, i64* %RAX.i133, align 8
  store %struct.Memory* %loadMem_426503, %struct.Memory** %MEMORY
  %loadMem_42650b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8399 = getelementptr inbounds %struct.GPR, %struct.GPR* %8398, i32 0, i32 33
  %8400 = getelementptr inbounds %struct.Reg, %struct.Reg* %8399, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %8400 to i64*
  %8401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8402 = getelementptr inbounds %struct.GPR, %struct.GPR* %8401, i32 0, i32 1
  %8403 = getelementptr inbounds %struct.Reg, %struct.Reg* %8402, i32 0, i32 0
  %RAX.i131 = bitcast %union.anon* %8403 to i64*
  %8404 = load i64, i64* %RAX.i131
  %8405 = add i64 %8404, 64
  %8406 = load i64, i64* %PC.i130
  %8407 = add i64 %8406, 4
  store i64 %8407, i64* %PC.i130
  %8408 = inttoptr i64 %8405 to i32*
  %8409 = load i32, i32* %8408
  %8410 = sub i32 %8409, 3
  %8411 = icmp ult i32 %8409, 3
  %8412 = zext i1 %8411 to i8
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8412, i8* %8413, align 1
  %8414 = and i32 %8410, 255
  %8415 = call i32 @llvm.ctpop.i32(i32 %8414)
  %8416 = trunc i32 %8415 to i8
  %8417 = and i8 %8416, 1
  %8418 = xor i8 %8417, 1
  %8419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8418, i8* %8419, align 1
  %8420 = xor i32 %8409, 3
  %8421 = xor i32 %8420, %8410
  %8422 = lshr i32 %8421, 4
  %8423 = trunc i32 %8422 to i8
  %8424 = and i8 %8423, 1
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8424, i8* %8425, align 1
  %8426 = icmp eq i32 %8410, 0
  %8427 = zext i1 %8426 to i8
  %8428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8427, i8* %8428, align 1
  %8429 = lshr i32 %8410, 31
  %8430 = trunc i32 %8429 to i8
  %8431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8430, i8* %8431, align 1
  %8432 = lshr i32 %8409, 31
  %8433 = xor i32 %8429, %8432
  %8434 = add i32 %8433, %8432
  %8435 = icmp eq i32 %8434, 2
  %8436 = zext i1 %8435 to i8
  %8437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8436, i8* %8437, align 1
  store %struct.Memory* %loadMem_42650b, %struct.Memory** %MEMORY
  %loadMem_42650f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8439 = getelementptr inbounds %struct.GPR, %struct.GPR* %8438, i32 0, i32 33
  %8440 = getelementptr inbounds %struct.Reg, %struct.Reg* %8439, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %8440 to i64*
  %8441 = load i64, i64* %PC.i129
  %8442 = add i64 %8441, 201
  %8443 = load i64, i64* %PC.i129
  %8444 = add i64 %8443, 6
  %8445 = load i64, i64* %PC.i129
  %8446 = add i64 %8445, 6
  store i64 %8446, i64* %PC.i129
  %8447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8448 = load i8, i8* %8447, align 1
  store i8 %8448, i8* %BRANCH_TAKEN, align 1
  %8449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8450 = icmp ne i8 %8448, 0
  %8451 = select i1 %8450, i64 %8442, i64 %8444
  store i64 %8451, i64* %8449, align 8
  store %struct.Memory* %loadMem_42650f, %struct.Memory** %MEMORY
  %loadBr_42650f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42650f = icmp eq i8 %loadBr_42650f, 1
  br i1 %cmpBr_42650f, label %block_.L_4265d8, label %block_426515

block_426515:                                     ; preds = %block_426503
  %loadMem_426515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8453 = getelementptr inbounds %struct.GPR, %struct.GPR* %8452, i32 0, i32 33
  %8454 = getelementptr inbounds %struct.Reg, %struct.Reg* %8453, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %8454 to i64*
  %8455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8456 = getelementptr inbounds %struct.GPR, %struct.GPR* %8455, i32 0, i32 1
  %8457 = getelementptr inbounds %struct.Reg, %struct.Reg* %8456, i32 0, i32 0
  %RAX.i128 = bitcast %union.anon* %8457 to i64*
  %8458 = load i64, i64* %PC.i127
  %8459 = add i64 %8458, 8
  store i64 %8459, i64* %PC.i127
  %8460 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %8460, i64* %RAX.i128, align 8
  store %struct.Memory* %loadMem_426515, %struct.Memory** %MEMORY
  %loadMem_42651d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8462 = getelementptr inbounds %struct.GPR, %struct.GPR* %8461, i32 0, i32 33
  %8463 = getelementptr inbounds %struct.Reg, %struct.Reg* %8462, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %8463 to i64*
  %8464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8465 = getelementptr inbounds %struct.GPR, %struct.GPR* %8464, i32 0, i32 1
  %8466 = getelementptr inbounds %struct.Reg, %struct.Reg* %8465, i32 0, i32 0
  %RAX.i126 = bitcast %union.anon* %8466 to i64*
  %8467 = load i64, i64* %RAX.i126
  %8468 = add i64 %8467, 64
  %8469 = load i64, i64* %PC.i125
  %8470 = add i64 %8469, 4
  store i64 %8470, i64* %PC.i125
  %8471 = inttoptr i64 %8468 to i32*
  %8472 = load i32, i32* %8471
  %8473 = sub i32 %8472, 5
  %8474 = icmp ult i32 %8472, 5
  %8475 = zext i1 %8474 to i8
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8475, i8* %8476, align 1
  %8477 = and i32 %8473, 255
  %8478 = call i32 @llvm.ctpop.i32(i32 %8477)
  %8479 = trunc i32 %8478 to i8
  %8480 = and i8 %8479, 1
  %8481 = xor i8 %8480, 1
  %8482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8481, i8* %8482, align 1
  %8483 = xor i32 %8472, 5
  %8484 = xor i32 %8483, %8473
  %8485 = lshr i32 %8484, 4
  %8486 = trunc i32 %8485 to i8
  %8487 = and i8 %8486, 1
  %8488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8487, i8* %8488, align 1
  %8489 = icmp eq i32 %8473, 0
  %8490 = zext i1 %8489 to i8
  %8491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8490, i8* %8491, align 1
  %8492 = lshr i32 %8473, 31
  %8493 = trunc i32 %8492 to i8
  %8494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8493, i8* %8494, align 1
  %8495 = lshr i32 %8472, 31
  %8496 = xor i32 %8492, %8495
  %8497 = add i32 %8496, %8495
  %8498 = icmp eq i32 %8497, 2
  %8499 = zext i1 %8498 to i8
  %8500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8499, i8* %8500, align 1
  store %struct.Memory* %loadMem_42651d, %struct.Memory** %MEMORY
  %loadMem_426521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8502 = getelementptr inbounds %struct.GPR, %struct.GPR* %8501, i32 0, i32 33
  %8503 = getelementptr inbounds %struct.Reg, %struct.Reg* %8502, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %8503 to i64*
  %8504 = load i64, i64* %PC.i124
  %8505 = add i64 %8504, 183
  %8506 = load i64, i64* %PC.i124
  %8507 = add i64 %8506, 6
  %8508 = load i64, i64* %PC.i124
  %8509 = add i64 %8508, 6
  store i64 %8509, i64* %PC.i124
  %8510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8511 = load i8, i8* %8510, align 1
  %8512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8513 = load i8, i8* %8512, align 1
  %8514 = or i8 %8513, %8511
  %8515 = icmp eq i8 %8514, 0
  %8516 = zext i1 %8515 to i8
  store i8 %8516, i8* %BRANCH_TAKEN, align 1
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8518 = select i1 %8515, i64 %8505, i64 %8507
  store i64 %8518, i64* %8517, align 8
  store %struct.Memory* %loadMem_426521, %struct.Memory** %MEMORY
  %loadBr_426521 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_426521 = icmp eq i8 %loadBr_426521, 1
  br i1 %cmpBr_426521, label %block_.L_4265d8, label %block_426527

block_426527:                                     ; preds = %block_426515
  %loadMem_426527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8520 = getelementptr inbounds %struct.GPR, %struct.GPR* %8519, i32 0, i32 33
  %8521 = getelementptr inbounds %struct.Reg, %struct.Reg* %8520, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %8521 to i64*
  %8522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8523 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8522, i64 0, i64 0
  %YMM0.i123 = bitcast %union.VectorReg* %8523 to %"class.std::bitset"*
  %8524 = bitcast %"class.std::bitset"* %YMM0.i123 to i8*
  %8525 = load i64, i64* %PC.i122
  %8526 = add i64 %8525, ptrtoint (%G_0x97305__rip__type* @G_0x97305__rip_ to i64)
  %8527 = load i64, i64* %PC.i122
  %8528 = add i64 %8527, 8
  store i64 %8528, i64* %PC.i122
  %8529 = inttoptr i64 %8526 to float*
  %8530 = load float, float* %8529
  %8531 = bitcast i8* %8524 to float*
  store float %8530, float* %8531, align 1
  %8532 = getelementptr inbounds i8, i8* %8524, i64 4
  %8533 = bitcast i8* %8532 to float*
  store float 0.000000e+00, float* %8533, align 1
  %8534 = getelementptr inbounds i8, i8* %8524, i64 8
  %8535 = bitcast i8* %8534 to float*
  store float 0.000000e+00, float* %8535, align 1
  %8536 = getelementptr inbounds i8, i8* %8524, i64 12
  %8537 = bitcast i8* %8536 to float*
  store float 0.000000e+00, float* %8537, align 1
  store %struct.Memory* %loadMem_426527, %struct.Memory** %MEMORY
  %loadMem_42652f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8539 = getelementptr inbounds %struct.GPR, %struct.GPR* %8538, i32 0, i32 33
  %8540 = getelementptr inbounds %struct.Reg, %struct.Reg* %8539, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %8540 to i64*
  %8541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8542 = getelementptr inbounds %struct.GPR, %struct.GPR* %8541, i32 0, i32 1
  %8543 = getelementptr inbounds %struct.Reg, %struct.Reg* %8542, i32 0, i32 0
  %RAX.i121 = bitcast %union.anon* %8543 to i64*
  %8544 = load i64, i64* %PC.i120
  %8545 = add i64 %8544, ptrtoint (%G_0x2a53ca__rip__type* @G_0x2a53ca__rip_ to i64)
  %8546 = load i64, i64* %PC.i120
  %8547 = add i64 %8546, 7
  store i64 %8547, i64* %PC.i120
  %8548 = inttoptr i64 %8545 to i64*
  %8549 = load i64, i64* %8548
  store i64 %8549, i64* %RAX.i121, align 8
  store %struct.Memory* %loadMem_42652f, %struct.Memory** %MEMORY
  %loadMem_426536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8551 = getelementptr inbounds %struct.GPR, %struct.GPR* %8550, i32 0, i32 33
  %8552 = getelementptr inbounds %struct.Reg, %struct.Reg* %8551, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %8552 to i64*
  %8553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8554 = getelementptr inbounds %struct.GPR, %struct.GPR* %8553, i32 0, i32 1
  %8555 = getelementptr inbounds %struct.Reg, %struct.Reg* %8554, i32 0, i32 0
  %RAX.i118 = bitcast %union.anon* %8555 to i64*
  %8556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8557 = getelementptr inbounds %struct.GPR, %struct.GPR* %8556, i32 0, i32 5
  %8558 = getelementptr inbounds %struct.Reg, %struct.Reg* %8557, i32 0, i32 0
  %RCX.i119 = bitcast %union.anon* %8558 to i64*
  %8559 = load i64, i64* %RAX.i118
  %8560 = add i64 %8559, 72468
  %8561 = load i64, i64* %PC.i117
  %8562 = add i64 %8561, 6
  store i64 %8562, i64* %PC.i117
  %8563 = inttoptr i64 %8560 to i32*
  %8564 = load i32, i32* %8563
  %8565 = zext i32 %8564 to i64
  store i64 %8565, i64* %RCX.i119, align 8
  store %struct.Memory* %loadMem_426536, %struct.Memory** %MEMORY
  %loadMem_42653c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8567 = getelementptr inbounds %struct.GPR, %struct.GPR* %8566, i32 0, i32 33
  %8568 = getelementptr inbounds %struct.Reg, %struct.Reg* %8567, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %8568 to i64*
  %8569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8570 = getelementptr inbounds %struct.GPR, %struct.GPR* %8569, i32 0, i32 1
  %8571 = getelementptr inbounds %struct.Reg, %struct.Reg* %8570, i32 0, i32 0
  %RAX.i115 = bitcast %union.anon* %8571 to i64*
  %8572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8573 = getelementptr inbounds %struct.GPR, %struct.GPR* %8572, i32 0, i32 7
  %8574 = getelementptr inbounds %struct.Reg, %struct.Reg* %8573, i32 0, i32 0
  %RDX.i116 = bitcast %union.anon* %8574 to i64*
  %8575 = load i64, i64* %RAX.i115
  %8576 = add i64 %8575, 72472
  %8577 = load i64, i64* %PC.i114
  %8578 = add i64 %8577, 6
  store i64 %8578, i64* %PC.i114
  %8579 = inttoptr i64 %8576 to i32*
  %8580 = load i32, i32* %8579
  %8581 = zext i32 %8580 to i64
  store i64 %8581, i64* %RDX.i116, align 8
  store %struct.Memory* %loadMem_42653c, %struct.Memory** %MEMORY
  %loadMem_426542 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8583 = getelementptr inbounds %struct.GPR, %struct.GPR* %8582, i32 0, i32 33
  %8584 = getelementptr inbounds %struct.Reg, %struct.Reg* %8583, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %8584 to i64*
  %8585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8586 = getelementptr inbounds %struct.GPR, %struct.GPR* %8585, i32 0, i32 5
  %8587 = getelementptr inbounds %struct.Reg, %struct.Reg* %8586, i32 0, i32 0
  %ECX.i112 = bitcast %union.anon* %8587 to i32*
  %8588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8589 = getelementptr inbounds %struct.GPR, %struct.GPR* %8588, i32 0, i32 7
  %8590 = getelementptr inbounds %struct.Reg, %struct.Reg* %8589, i32 0, i32 0
  %RDX.i113 = bitcast %union.anon* %8590 to i64*
  %8591 = load i64, i64* %RDX.i113
  %8592 = load i32, i32* %ECX.i112
  %8593 = zext i32 %8592 to i64
  %8594 = load i64, i64* %PC.i111
  %8595 = add i64 %8594, 3
  store i64 %8595, i64* %PC.i111
  %8596 = shl i64 %8591, 32
  %8597 = ashr exact i64 %8596, 32
  %8598 = shl i64 %8593, 32
  %8599 = ashr exact i64 %8598, 32
  %8600 = mul i64 %8599, %8597
  %8601 = trunc i64 %8600 to i32
  %8602 = and i64 %8600, 4294967295
  store i64 %8602, i64* %RDX.i113, align 8
  %8603 = shl i64 %8600, 32
  %8604 = ashr exact i64 %8603, 32
  %8605 = icmp ne i64 %8604, %8600
  %8606 = zext i1 %8605 to i8
  %8607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8606, i8* %8607, align 1
  %8608 = and i32 %8601, 255
  %8609 = call i32 @llvm.ctpop.i32(i32 %8608)
  %8610 = trunc i32 %8609 to i8
  %8611 = and i8 %8610, 1
  %8612 = xor i8 %8611, 1
  %8613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8612, i8* %8613, align 1
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8614, align 1
  %8615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8615, align 1
  %8616 = lshr i32 %8601, 31
  %8617 = trunc i32 %8616 to i8
  %8618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8617, i8* %8618, align 1
  %8619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8606, i8* %8619, align 1
  store %struct.Memory* %loadMem_426542, %struct.Memory** %MEMORY
  %loadMem_426545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8621 = getelementptr inbounds %struct.GPR, %struct.GPR* %8620, i32 0, i32 33
  %8622 = getelementptr inbounds %struct.Reg, %struct.Reg* %8621, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %8622 to i64*
  %8623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8624 = getelementptr inbounds %struct.GPR, %struct.GPR* %8623, i32 0, i32 7
  %8625 = getelementptr inbounds %struct.Reg, %struct.Reg* %8624, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %8625 to i32*
  %8626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8627 = getelementptr inbounds %struct.GPR, %struct.GPR* %8626, i32 0, i32 1
  %8628 = getelementptr inbounds %struct.Reg, %struct.Reg* %8627, i32 0, i32 0
  %RAX.i110 = bitcast %union.anon* %8628 to i64*
  %8629 = load i32, i32* %EDX.i
  %8630 = zext i32 %8629 to i64
  %8631 = load i64, i64* %PC.i109
  %8632 = add i64 %8631, 2
  store i64 %8632, i64* %PC.i109
  %8633 = and i64 %8630, 4294967295
  store i64 %8633, i64* %RAX.i110, align 8
  store %struct.Memory* %loadMem_426545, %struct.Memory** %MEMORY
  %loadMem_426547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8635 = getelementptr inbounds %struct.GPR, %struct.GPR* %8634, i32 0, i32 33
  %8636 = getelementptr inbounds %struct.Reg, %struct.Reg* %8635, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %8636 to i64*
  %8637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8638 = getelementptr inbounds %struct.GPR, %struct.GPR* %8637, i32 0, i32 1
  %8639 = getelementptr inbounds %struct.Reg, %struct.Reg* %8638, i32 0, i32 0
  %RAX.i107 = bitcast %union.anon* %8639 to i64*
  %8640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8641 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8640, i64 0, i64 1
  %YMM1.i108 = bitcast %union.VectorReg* %8641 to %"class.std::bitset"*
  %8642 = bitcast %"class.std::bitset"* %YMM1.i108 to i8*
  %8643 = load i64, i64* %RAX.i107
  %8644 = load i64, i64* %PC.i106
  %8645 = add i64 %8644, 5
  store i64 %8645, i64* %PC.i106
  %8646 = bitcast i8* %8642 to <2 x i32>*
  %8647 = load <2 x i32>, <2 x i32>* %8646, align 1
  %8648 = getelementptr inbounds i8, i8* %8642, i64 8
  %8649 = bitcast i8* %8648 to <2 x i32>*
  %8650 = load <2 x i32>, <2 x i32>* %8649, align 1
  %8651 = sitofp i64 %8643 to float
  %8652 = bitcast i8* %8642 to float*
  store float %8651, float* %8652, align 1
  %8653 = extractelement <2 x i32> %8647, i32 1
  %8654 = getelementptr inbounds i8, i8* %8642, i64 4
  %8655 = bitcast i8* %8654 to i32*
  store i32 %8653, i32* %8655, align 1
  %8656 = extractelement <2 x i32> %8650, i32 0
  %8657 = bitcast i8* %8648 to i32*
  store i32 %8656, i32* %8657, align 1
  %8658 = extractelement <2 x i32> %8650, i32 1
  %8659 = getelementptr inbounds i8, i8* %8642, i64 12
  %8660 = bitcast i8* %8659 to i32*
  store i32 %8658, i32* %8660, align 1
  store %struct.Memory* %loadMem_426547, %struct.Memory** %MEMORY
  %loadMem_42654c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8662 = getelementptr inbounds %struct.GPR, %struct.GPR* %8661, i32 0, i32 33
  %8663 = getelementptr inbounds %struct.Reg, %struct.Reg* %8662, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %8663 to i64*
  %8664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8665 = getelementptr inbounds %struct.GPR, %struct.GPR* %8664, i32 0, i32 1
  %8666 = getelementptr inbounds %struct.Reg, %struct.Reg* %8665, i32 0, i32 0
  %RAX.i105 = bitcast %union.anon* %8666 to i64*
  %8667 = load i64, i64* %PC.i104
  %8668 = add i64 %8667, ptrtoint (%G_0x2ae13d__rip__type* @G_0x2ae13d__rip_ to i64)
  %8669 = load i64, i64* %PC.i104
  %8670 = add i64 %8669, 7
  store i64 %8670, i64* %PC.i104
  %8671 = inttoptr i64 %8668 to i64*
  %8672 = load i64, i64* %8671
  store i64 %8672, i64* %RAX.i105, align 8
  store %struct.Memory* %loadMem_42654c, %struct.Memory** %MEMORY
  %loadMem_426553 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8674 = getelementptr inbounds %struct.GPR, %struct.GPR* %8673, i32 0, i32 33
  %8675 = getelementptr inbounds %struct.Reg, %struct.Reg* %8674, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %8675 to i64*
  %8676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8677 = getelementptr inbounds %struct.GPR, %struct.GPR* %8676, i32 0, i32 1
  %8678 = getelementptr inbounds %struct.Reg, %struct.Reg* %8677, i32 0, i32 0
  %RAX.i102 = bitcast %union.anon* %8678 to i64*
  %8679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8680 = getelementptr inbounds %struct.GPR, %struct.GPR* %8679, i32 0, i32 5
  %8681 = getelementptr inbounds %struct.Reg, %struct.Reg* %8680, i32 0, i32 0
  %RCX.i103 = bitcast %union.anon* %8681 to i64*
  %8682 = load i64, i64* %RAX.i102
  %8683 = add i64 %8682, 168
  %8684 = load i64, i64* %PC.i101
  %8685 = add i64 %8684, 6
  store i64 %8685, i64* %PC.i101
  %8686 = inttoptr i64 %8683 to i32*
  %8687 = load i32, i32* %8686
  %8688 = zext i32 %8687 to i64
  store i64 %8688, i64* %RCX.i103, align 8
  store %struct.Memory* %loadMem_426553, %struct.Memory** %MEMORY
  %loadMem_426559 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8690 = getelementptr inbounds %struct.GPR, %struct.GPR* %8689, i32 0, i32 33
  %8691 = getelementptr inbounds %struct.Reg, %struct.Reg* %8690, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %8691 to i64*
  %8692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8693 = getelementptr inbounds %struct.GPR, %struct.GPR* %8692, i32 0, i32 5
  %8694 = getelementptr inbounds %struct.Reg, %struct.Reg* %8693, i32 0, i32 0
  %RCX.i100 = bitcast %union.anon* %8694 to i64*
  %8695 = load i64, i64* %RCX.i100
  %8696 = load i64, i64* %PC.i99
  %8697 = add i64 %8696, 2
  store i64 %8697, i64* %PC.i99
  %8698 = trunc i64 %8695 to i32
  %8699 = add i32 %8698, 1
  %8700 = zext i32 %8699 to i64
  store i64 %8700, i64* %RCX.i100, align 8
  %8701 = and i32 %8699, 255
  %8702 = call i32 @llvm.ctpop.i32(i32 %8701)
  %8703 = trunc i32 %8702 to i8
  %8704 = and i8 %8703, 1
  %8705 = xor i8 %8704, 1
  %8706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8705, i8* %8706, align 1
  %8707 = xor i32 %8699, %8698
  %8708 = lshr i32 %8707, 4
  %8709 = trunc i32 %8708 to i8
  %8710 = and i8 %8709, 1
  %8711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8710, i8* %8711, align 1
  %8712 = icmp eq i32 %8699, 0
  %8713 = zext i1 %8712 to i8
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8713, i8* %8714, align 1
  %8715 = lshr i32 %8699, 31
  %8716 = trunc i32 %8715 to i8
  %8717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8716, i8* %8717, align 1
  %8718 = lshr i32 %8698, 31
  %8719 = xor i32 %8715, %8718
  %8720 = add i32 %8719, %8715
  %8721 = icmp eq i32 %8720, 2
  %8722 = zext i1 %8721 to i8
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8722, i8* %8723, align 1
  store %struct.Memory* %loadMem_426559, %struct.Memory** %MEMORY
  %loadMem_42655b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8725 = getelementptr inbounds %struct.GPR, %struct.GPR* %8724, i32 0, i32 33
  %8726 = getelementptr inbounds %struct.Reg, %struct.Reg* %8725, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %8726 to i64*
  %8727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8728 = getelementptr inbounds %struct.GPR, %struct.GPR* %8727, i32 0, i32 5
  %8729 = getelementptr inbounds %struct.Reg, %struct.Reg* %8728, i32 0, i32 0
  %ECX.i97 = bitcast %union.anon* %8729 to i32*
  %8730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8731 = getelementptr inbounds %struct.GPR, %struct.GPR* %8730, i32 0, i32 1
  %8732 = getelementptr inbounds %struct.Reg, %struct.Reg* %8731, i32 0, i32 0
  %RAX.i98 = bitcast %union.anon* %8732 to i64*
  %8733 = load i32, i32* %ECX.i97
  %8734 = zext i32 %8733 to i64
  %8735 = load i64, i64* %PC.i96
  %8736 = add i64 %8735, 2
  store i64 %8736, i64* %PC.i96
  %8737 = and i64 %8734, 4294967295
  store i64 %8737, i64* %RAX.i98, align 8
  store %struct.Memory* %loadMem_42655b, %struct.Memory** %MEMORY
  %loadMem_42655d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8739 = getelementptr inbounds %struct.GPR, %struct.GPR* %8738, i32 0, i32 33
  %8740 = getelementptr inbounds %struct.Reg, %struct.Reg* %8739, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %8740 to i64*
  %8741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8742 = getelementptr inbounds %struct.GPR, %struct.GPR* %8741, i32 0, i32 1
  %8743 = getelementptr inbounds %struct.Reg, %struct.Reg* %8742, i32 0, i32 0
  %RAX.i95 = bitcast %union.anon* %8743 to i64*
  %8744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8745 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8744, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %8745 to %"class.std::bitset"*
  %8746 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %8747 = load i64, i64* %RAX.i95
  %8748 = load i64, i64* %PC.i94
  %8749 = add i64 %8748, 5
  store i64 %8749, i64* %PC.i94
  %8750 = bitcast i8* %8746 to <2 x i32>*
  %8751 = load <2 x i32>, <2 x i32>* %8750, align 1
  %8752 = getelementptr inbounds i8, i8* %8746, i64 8
  %8753 = bitcast i8* %8752 to <2 x i32>*
  %8754 = load <2 x i32>, <2 x i32>* %8753, align 1
  %8755 = sitofp i64 %8747 to float
  %8756 = bitcast i8* %8746 to float*
  store float %8755, float* %8756, align 1
  %8757 = extractelement <2 x i32> %8751, i32 1
  %8758 = getelementptr inbounds i8, i8* %8746, i64 4
  %8759 = bitcast i8* %8758 to i32*
  store i32 %8757, i32* %8759, align 1
  %8760 = extractelement <2 x i32> %8754, i32 0
  %8761 = bitcast i8* %8752 to i32*
  store i32 %8760, i32* %8761, align 1
  %8762 = extractelement <2 x i32> %8754, i32 1
  %8763 = getelementptr inbounds i8, i8* %8746, i64 12
  %8764 = bitcast i8* %8763 to i32*
  store i32 %8762, i32* %8764, align 1
  store %struct.Memory* %loadMem_42655d, %struct.Memory** %MEMORY
  %loadMem_426562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8766 = getelementptr inbounds %struct.GPR, %struct.GPR* %8765, i32 0, i32 33
  %8767 = getelementptr inbounds %struct.Reg, %struct.Reg* %8766, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %8767 to i64*
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8769 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8768, i64 0, i64 1
  %YMM1.i93 = bitcast %union.VectorReg* %8769 to %"class.std::bitset"*
  %8770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8771 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8770, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %8771 to %union.vec128_t*
  %8772 = bitcast %"class.std::bitset"* %YMM1.i93 to i8*
  %8773 = bitcast %"class.std::bitset"* %YMM1.i93 to i8*
  %8774 = bitcast %union.vec128_t* %XMM2.i to i8*
  %8775 = load i64, i64* %PC.i92
  %8776 = add i64 %8775, 4
  store i64 %8776, i64* %PC.i92
  %8777 = bitcast i8* %8773 to <2 x float>*
  %8778 = load <2 x float>, <2 x float>* %8777, align 1
  %8779 = getelementptr inbounds i8, i8* %8773, i64 8
  %8780 = bitcast i8* %8779 to <2 x i32>*
  %8781 = load <2 x i32>, <2 x i32>* %8780, align 1
  %8782 = bitcast i8* %8774 to <2 x float>*
  %8783 = load <2 x float>, <2 x float>* %8782, align 1
  %8784 = extractelement <2 x float> %8778, i32 0
  %8785 = extractelement <2 x float> %8783, i32 0
  %8786 = fdiv float %8784, %8785
  %8787 = bitcast i8* %8772 to float*
  store float %8786, float* %8787, align 1
  %8788 = bitcast <2 x float> %8778 to <2 x i32>
  %8789 = extractelement <2 x i32> %8788, i32 1
  %8790 = getelementptr inbounds i8, i8* %8772, i64 4
  %8791 = bitcast i8* %8790 to i32*
  store i32 %8789, i32* %8791, align 1
  %8792 = extractelement <2 x i32> %8781, i32 0
  %8793 = getelementptr inbounds i8, i8* %8772, i64 8
  %8794 = bitcast i8* %8793 to i32*
  store i32 %8792, i32* %8794, align 1
  %8795 = extractelement <2 x i32> %8781, i32 1
  %8796 = getelementptr inbounds i8, i8* %8772, i64 12
  %8797 = bitcast i8* %8796 to i32*
  store i32 %8795, i32* %8797, align 1
  store %struct.Memory* %loadMem_426562, %struct.Memory** %MEMORY
  %loadMem_426566 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8799 = getelementptr inbounds %struct.GPR, %struct.GPR* %8798, i32 0, i32 33
  %8800 = getelementptr inbounds %struct.Reg, %struct.Reg* %8799, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %8800 to i64*
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8802 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8801, i64 0, i64 1
  %YMM1.i90 = bitcast %union.VectorReg* %8802 to %"class.std::bitset"*
  %8803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8804 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8803, i64 0, i64 0
  %XMM0.i91 = bitcast %union.VectorReg* %8804 to %union.vec128_t*
  %8805 = bitcast %"class.std::bitset"* %YMM1.i90 to i8*
  %8806 = bitcast %"class.std::bitset"* %YMM1.i90 to i8*
  %8807 = bitcast %union.vec128_t* %XMM0.i91 to i8*
  %8808 = load i64, i64* %PC.i89
  %8809 = add i64 %8808, 4
  store i64 %8809, i64* %PC.i89
  %8810 = bitcast i8* %8806 to <2 x float>*
  %8811 = load <2 x float>, <2 x float>* %8810, align 1
  %8812 = getelementptr inbounds i8, i8* %8806, i64 8
  %8813 = bitcast i8* %8812 to <2 x i32>*
  %8814 = load <2 x i32>, <2 x i32>* %8813, align 1
  %8815 = bitcast i8* %8807 to <2 x float>*
  %8816 = load <2 x float>, <2 x float>* %8815, align 1
  %8817 = extractelement <2 x float> %8811, i32 0
  %8818 = extractelement <2 x float> %8816, i32 0
  %8819 = fadd float %8817, %8818
  %8820 = bitcast i8* %8805 to float*
  store float %8819, float* %8820, align 1
  %8821 = bitcast <2 x float> %8811 to <2 x i32>
  %8822 = extractelement <2 x i32> %8821, i32 1
  %8823 = getelementptr inbounds i8, i8* %8805, i64 4
  %8824 = bitcast i8* %8823 to i32*
  store i32 %8822, i32* %8824, align 1
  %8825 = extractelement <2 x i32> %8814, i32 0
  %8826 = getelementptr inbounds i8, i8* %8805, i64 8
  %8827 = bitcast i8* %8826 to i32*
  store i32 %8825, i32* %8827, align 1
  %8828 = extractelement <2 x i32> %8814, i32 1
  %8829 = getelementptr inbounds i8, i8* %8805, i64 12
  %8830 = bitcast i8* %8829 to i32*
  store i32 %8828, i32* %8830, align 1
  store %struct.Memory* %loadMem_426566, %struct.Memory** %MEMORY
  %loadMem_42656a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8832 = getelementptr inbounds %struct.GPR, %struct.GPR* %8831, i32 0, i32 33
  %8833 = getelementptr inbounds %struct.Reg, %struct.Reg* %8832, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %8833 to i64*
  %8834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8835 = getelementptr inbounds %struct.GPR, %struct.GPR* %8834, i32 0, i32 15
  %8836 = getelementptr inbounds %struct.Reg, %struct.Reg* %8835, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %8836 to i64*
  %8837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8838 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8837, i64 0, i64 1
  %XMM1.i88 = bitcast %union.VectorReg* %8838 to %union.vec128_t*
  %8839 = load i64, i64* %RBP.i87
  %8840 = sub i64 %8839, 44
  %8841 = bitcast %union.vec128_t* %XMM1.i88 to i8*
  %8842 = load i64, i64* %PC.i86
  %8843 = add i64 %8842, 5
  store i64 %8843, i64* %PC.i86
  %8844 = bitcast i8* %8841 to <2 x float>*
  %8845 = load <2 x float>, <2 x float>* %8844, align 1
  %8846 = extractelement <2 x float> %8845, i32 0
  %8847 = inttoptr i64 %8840 to float*
  store float %8846, float* %8847
  store %struct.Memory* %loadMem_42656a, %struct.Memory** %MEMORY
  %loadMem_42656f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8849 = getelementptr inbounds %struct.GPR, %struct.GPR* %8848, i32 0, i32 33
  %8850 = getelementptr inbounds %struct.Reg, %struct.Reg* %8849, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %8850 to i64*
  %8851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8852 = getelementptr inbounds %struct.GPR, %struct.GPR* %8851, i32 0, i32 15
  %8853 = getelementptr inbounds %struct.Reg, %struct.Reg* %8852, i32 0, i32 0
  %RBP.i84 = bitcast %union.anon* %8853 to i64*
  %8854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8855 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8854, i64 0, i64 0
  %YMM0.i85 = bitcast %union.VectorReg* %8855 to %"class.std::bitset"*
  %8856 = bitcast %"class.std::bitset"* %YMM0.i85 to i8*
  %8857 = load i64, i64* %RBP.i84
  %8858 = sub i64 %8857, 44
  %8859 = load i64, i64* %PC.i83
  %8860 = add i64 %8859, 5
  store i64 %8860, i64* %PC.i83
  %8861 = inttoptr i64 %8858 to float*
  %8862 = load float, float* %8861
  %8863 = fpext float %8862 to double
  %8864 = bitcast i8* %8856 to double*
  store double %8863, double* %8864, align 1
  store %struct.Memory* %loadMem_42656f, %struct.Memory** %MEMORY
  %loadMem1_426574 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8866 = getelementptr inbounds %struct.GPR, %struct.GPR* %8865, i32 0, i32 33
  %8867 = getelementptr inbounds %struct.Reg, %struct.Reg* %8866, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %8867 to i64*
  %8868 = load i64, i64* %PC.i82
  %8869 = add i64 %8868, -152804
  %8870 = load i64, i64* %PC.i82
  %8871 = add i64 %8870, 5
  %8872 = load i64, i64* %PC.i82
  %8873 = add i64 %8872, 5
  store i64 %8873, i64* %PC.i82
  %8874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8875 = load i64, i64* %8874, align 8
  %8876 = add i64 %8875, -8
  %8877 = inttoptr i64 %8876 to i64*
  store i64 %8871, i64* %8877
  store i64 %8876, i64* %8874, align 8
  %8878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8869, i64* %8878, align 8
  store %struct.Memory* %loadMem1_426574, %struct.Memory** %MEMORY
  %loadMem2_426574 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_426574 = load i64, i64* %3
  %8879 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %loadMem2_426574)
  store %struct.Memory* %8879, %struct.Memory** %MEMORY
  %loadMem_426579 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8881 = getelementptr inbounds %struct.GPR, %struct.GPR* %8880, i32 0, i32 33
  %8882 = getelementptr inbounds %struct.Reg, %struct.Reg* %8881, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %8882 to i64*
  %8883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8884 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8883, i64 0, i64 1
  %YMM1.i79 = bitcast %union.VectorReg* %8884 to %"class.std::bitset"*
  %8885 = bitcast %"class.std::bitset"* %YMM1.i79 to i8*
  %8886 = load i64, i64* %PC.i78
  %8887 = add i64 %8886, ptrtoint (%G_0x8b2c7__rip__type* @G_0x8b2c7__rip_ to i64)
  %8888 = load i64, i64* %PC.i78
  %8889 = add i64 %8888, 8
  store i64 %8889, i64* %PC.i78
  %8890 = inttoptr i64 %8887 to double*
  %8891 = load double, double* %8890
  %8892 = bitcast i8* %8885 to double*
  store double %8891, double* %8892, align 1
  %8893 = getelementptr inbounds i8, i8* %8885, i64 8
  %8894 = bitcast i8* %8893 to double*
  store double 0.000000e+00, double* %8894, align 1
  store %struct.Memory* %loadMem_426579, %struct.Memory** %MEMORY
  %loadMem_426581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8896 = getelementptr inbounds %struct.GPR, %struct.GPR* %8895, i32 0, i32 33
  %8897 = getelementptr inbounds %struct.Reg, %struct.Reg* %8896, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %8897 to i64*
  %8898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8899 = getelementptr inbounds %struct.GPR, %struct.GPR* %8898, i32 0, i32 15
  %8900 = getelementptr inbounds %struct.Reg, %struct.Reg* %8899, i32 0, i32 0
  %RBP.i76 = bitcast %union.anon* %8900 to i64*
  %8901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8902 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8901, i64 0, i64 0
  %XMM0.i77 = bitcast %union.VectorReg* %8902 to %union.vec128_t*
  %8903 = load i64, i64* %RBP.i76
  %8904 = sub i64 %8903, 72
  %8905 = bitcast %union.vec128_t* %XMM0.i77 to i8*
  %8906 = load i64, i64* %PC.i75
  %8907 = add i64 %8906, 5
  store i64 %8907, i64* %PC.i75
  %8908 = bitcast i8* %8905 to double*
  %8909 = load double, double* %8908, align 1
  %8910 = inttoptr i64 %8904 to double*
  store double %8909, double* %8910
  store %struct.Memory* %loadMem_426581, %struct.Memory** %MEMORY
  %loadMem_426586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8912 = getelementptr inbounds %struct.GPR, %struct.GPR* %8911, i32 0, i32 33
  %8913 = getelementptr inbounds %struct.Reg, %struct.Reg* %8912, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %8913 to i64*
  %8914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8915 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8914, i64 0, i64 0
  %YMM0.i73 = bitcast %union.VectorReg* %8915 to %"class.std::bitset"*
  %8916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8917 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8916, i64 0, i64 1
  %XMM1.i74 = bitcast %union.VectorReg* %8917 to %union.vec128_t*
  %8918 = bitcast %"class.std::bitset"* %YMM0.i73 to i8*
  %8919 = bitcast %union.vec128_t* %XMM1.i74 to i8*
  %8920 = load i64, i64* %PC.i72
  %8921 = add i64 %8920, 3
  store i64 %8921, i64* %PC.i72
  %8922 = bitcast i8* %8919 to <2 x i32>*
  %8923 = load <2 x i32>, <2 x i32>* %8922, align 1
  %8924 = getelementptr inbounds i8, i8* %8919, i64 8
  %8925 = bitcast i8* %8924 to <2 x i32>*
  %8926 = load <2 x i32>, <2 x i32>* %8925, align 1
  %8927 = extractelement <2 x i32> %8923, i32 0
  %8928 = bitcast i8* %8918 to i32*
  store i32 %8927, i32* %8928, align 1
  %8929 = extractelement <2 x i32> %8923, i32 1
  %8930 = getelementptr inbounds i8, i8* %8918, i64 4
  %8931 = bitcast i8* %8930 to i32*
  store i32 %8929, i32* %8931, align 1
  %8932 = extractelement <2 x i32> %8926, i32 0
  %8933 = getelementptr inbounds i8, i8* %8918, i64 8
  %8934 = bitcast i8* %8933 to i32*
  store i32 %8932, i32* %8934, align 1
  %8935 = extractelement <2 x i32> %8926, i32 1
  %8936 = getelementptr inbounds i8, i8* %8918, i64 12
  %8937 = bitcast i8* %8936 to i32*
  store i32 %8935, i32* %8937, align 1
  store %struct.Memory* %loadMem_426586, %struct.Memory** %MEMORY
  %loadMem1_426589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8939 = getelementptr inbounds %struct.GPR, %struct.GPR* %8938, i32 0, i32 33
  %8940 = getelementptr inbounds %struct.Reg, %struct.Reg* %8939, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %8940 to i64*
  %8941 = load i64, i64* %PC.i71
  %8942 = add i64 %8941, -152825
  %8943 = load i64, i64* %PC.i71
  %8944 = add i64 %8943, 5
  %8945 = load i64, i64* %PC.i71
  %8946 = add i64 %8945, 5
  store i64 %8946, i64* %PC.i71
  %8947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8948 = load i64, i64* %8947, align 8
  %8949 = add i64 %8948, -8
  %8950 = inttoptr i64 %8949 to i64*
  store i64 %8944, i64* %8950
  store i64 %8949, i64* %8947, align 8
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8942, i64* %8951, align 8
  store %struct.Memory* %loadMem1_426589, %struct.Memory** %MEMORY
  %loadMem2_426589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_426589 = load i64, i64* %3
  %8952 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %loadMem2_426589)
  store %struct.Memory* %8952, %struct.Memory** %MEMORY
  %loadMem_42658e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8954 = getelementptr inbounds %struct.GPR, %struct.GPR* %8953, i32 0, i32 33
  %8955 = getelementptr inbounds %struct.Reg, %struct.Reg* %8954, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %8955 to i64*
  %8956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8957 = getelementptr inbounds %struct.GPR, %struct.GPR* %8956, i32 0, i32 9
  %8958 = getelementptr inbounds %struct.Reg, %struct.Reg* %8957, i32 0, i32 0
  %RSI.i67 = bitcast %union.anon* %8958 to i64*
  %8959 = load i64, i64* %PC.i66
  %8960 = add i64 %8959, 10
  store i64 %8960, i64* %PC.i66
  store i64 ptrtoint (%G__0x4bfc5b_type* @G__0x4bfc5b to i64), i64* %RSI.i67, align 8
  store %struct.Memory* %loadMem_42658e, %struct.Memory** %MEMORY
  %loadMem_426598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8962 = getelementptr inbounds %struct.GPR, %struct.GPR* %8961, i32 0, i32 33
  %8963 = getelementptr inbounds %struct.Reg, %struct.Reg* %8962, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %8963 to i64*
  %8964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8965 = getelementptr inbounds %struct.GPR, %struct.GPR* %8964, i32 0, i32 15
  %8966 = getelementptr inbounds %struct.Reg, %struct.Reg* %8965, i32 0, i32 0
  %RBP.i64 = bitcast %union.anon* %8966 to i64*
  %8967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8968 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8967, i64 0, i64 1
  %YMM1.i65 = bitcast %union.VectorReg* %8968 to %"class.std::bitset"*
  %8969 = bitcast %"class.std::bitset"* %YMM1.i65 to i8*
  %8970 = load i64, i64* %RBP.i64
  %8971 = sub i64 %8970, 72
  %8972 = load i64, i64* %PC.i63
  %8973 = add i64 %8972, 5
  store i64 %8973, i64* %PC.i63
  %8974 = inttoptr i64 %8971 to double*
  %8975 = load double, double* %8974
  %8976 = bitcast i8* %8969 to double*
  store double %8975, double* %8976, align 1
  %8977 = getelementptr inbounds i8, i8* %8969, i64 8
  %8978 = bitcast i8* %8977 to double*
  store double 0.000000e+00, double* %8978, align 1
  store %struct.Memory* %loadMem_426598, %struct.Memory** %MEMORY
  %loadMem_42659d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8980 = getelementptr inbounds %struct.GPR, %struct.GPR* %8979, i32 0, i32 33
  %8981 = getelementptr inbounds %struct.Reg, %struct.Reg* %8980, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %8981 to i64*
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8983 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8982, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %8983 to %"class.std::bitset"*
  %8984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8985 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8984, i64 0, i64 0
  %XMM0.i62 = bitcast %union.VectorReg* %8985 to %union.vec128_t*
  %8986 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %8987 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %8988 = bitcast %union.vec128_t* %XMM0.i62 to i8*
  %8989 = load i64, i64* %PC.i61
  %8990 = add i64 %8989, 4
  store i64 %8990, i64* %PC.i61
  %8991 = bitcast i8* %8987 to double*
  %8992 = load double, double* %8991, align 1
  %8993 = getelementptr inbounds i8, i8* %8987, i64 8
  %8994 = bitcast i8* %8993 to i64*
  %8995 = load i64, i64* %8994, align 1
  %8996 = bitcast i8* %8988 to double*
  %8997 = load double, double* %8996, align 1
  %8998 = fdiv double %8992, %8997
  %8999 = bitcast i8* %8986 to double*
  store double %8998, double* %8999, align 1
  %9000 = getelementptr inbounds i8, i8* %8986, i64 8
  %9001 = bitcast i8* %9000 to i64*
  store i64 %8995, i64* %9001, align 1
  store %struct.Memory* %loadMem_42659d, %struct.Memory** %MEMORY
  %loadMem_4265a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9003 = getelementptr inbounds %struct.GPR, %struct.GPR* %9002, i32 0, i32 33
  %9004 = getelementptr inbounds %struct.Reg, %struct.Reg* %9003, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %9004 to i64*
  %9005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9006 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9005, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %9006 to %"class.std::bitset"*
  %9007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9008 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9007, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %9008 to %union.vec128_t*
  %9009 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %9010 = bitcast %union.vec128_t* %XMM1.i to i8*
  %9011 = load i64, i64* %PC.i60
  %9012 = add i64 %9011, 3
  store i64 %9012, i64* %PC.i60
  %9013 = bitcast i8* %9010 to <2 x i32>*
  %9014 = load <2 x i32>, <2 x i32>* %9013, align 1
  %9015 = getelementptr inbounds i8, i8* %9010, i64 8
  %9016 = bitcast i8* %9015 to <2 x i32>*
  %9017 = load <2 x i32>, <2 x i32>* %9016, align 1
  %9018 = extractelement <2 x i32> %9014, i32 0
  %9019 = bitcast i8* %9009 to i32*
  store i32 %9018, i32* %9019, align 1
  %9020 = extractelement <2 x i32> %9014, i32 1
  %9021 = getelementptr inbounds i8, i8* %9009, i64 4
  %9022 = bitcast i8* %9021 to i32*
  store i32 %9020, i32* %9022, align 1
  %9023 = extractelement <2 x i32> %9017, i32 0
  %9024 = getelementptr inbounds i8, i8* %9009, i64 8
  %9025 = bitcast i8* %9024 to i32*
  store i32 %9023, i32* %9025, align 1
  %9026 = extractelement <2 x i32> %9017, i32 1
  %9027 = getelementptr inbounds i8, i8* %9009, i64 12
  %9028 = bitcast i8* %9027 to i32*
  store i32 %9026, i32* %9028, align 1
  store %struct.Memory* %loadMem_4265a1, %struct.Memory** %MEMORY
  %loadMem_4265a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9030 = getelementptr inbounds %struct.GPR, %struct.GPR* %9029, i32 0, i32 33
  %9031 = getelementptr inbounds %struct.Reg, %struct.Reg* %9030, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %9031 to i64*
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9033 = getelementptr inbounds %struct.GPR, %struct.GPR* %9032, i32 0, i32 9
  %9034 = getelementptr inbounds %struct.Reg, %struct.Reg* %9033, i32 0, i32 0
  %RSI.i58 = bitcast %union.anon* %9034 to i64*
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9036 = getelementptr inbounds %struct.GPR, %struct.GPR* %9035, i32 0, i32 15
  %9037 = getelementptr inbounds %struct.Reg, %struct.Reg* %9036, i32 0, i32 0
  %RBP.i59 = bitcast %union.anon* %9037 to i64*
  %9038 = load i64, i64* %RBP.i59
  %9039 = sub i64 %9038, 80
  %9040 = load i64, i64* %RSI.i58
  %9041 = load i64, i64* %PC.i57
  %9042 = add i64 %9041, 4
  store i64 %9042, i64* %PC.i57
  %9043 = inttoptr i64 %9039 to i64*
  store i64 %9040, i64* %9043
  store %struct.Memory* %loadMem_4265a4, %struct.Memory** %MEMORY
  %loadMem1_4265a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9045 = getelementptr inbounds %struct.GPR, %struct.GPR* %9044, i32 0, i32 33
  %9046 = getelementptr inbounds %struct.Reg, %struct.Reg* %9045, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %9046 to i64*
  %9047 = load i64, i64* %PC.i56
  %9048 = add i64 %9047, -152488
  %9049 = load i64, i64* %PC.i56
  %9050 = add i64 %9049, 5
  %9051 = load i64, i64* %PC.i56
  %9052 = add i64 %9051, 5
  store i64 %9052, i64* %PC.i56
  %9053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9054 = load i64, i64* %9053, align 8
  %9055 = add i64 %9054, -8
  %9056 = inttoptr i64 %9055 to i64*
  store i64 %9050, i64* %9056
  store i64 %9055, i64* %9053, align 8
  %9057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9048, i64* %9057, align 8
  store %struct.Memory* %loadMem1_4265a8, %struct.Memory** %MEMORY
  %loadMem2_4265a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4265a8 = load i64, i64* %3
  %call2_4265a8 = call %struct.Memory* @sub_401200.ceil_plt(%struct.State* %0, i64 %loadPC_4265a8, %struct.Memory* %loadMem2_4265a8)
  store %struct.Memory* %call2_4265a8, %struct.Memory** %MEMORY
  %loadMem_4265ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %9058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9059 = getelementptr inbounds %struct.GPR, %struct.GPR* %9058, i32 0, i32 33
  %9060 = getelementptr inbounds %struct.Reg, %struct.Reg* %9059, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %9060 to i64*
  %9061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9062 = getelementptr inbounds %struct.GPR, %struct.GPR* %9061, i32 0, i32 5
  %9063 = getelementptr inbounds %struct.Reg, %struct.Reg* %9062, i32 0, i32 0
  %RCX.i55 = bitcast %union.anon* %9063 to i64*
  %9064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9065 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9064, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %9065 to %union.vec128_t*
  %9066 = bitcast %union.vec128_t* %XMM0.i to i8*
  %9067 = load i64, i64* %PC.i54
  %9068 = add i64 %9067, 4
  store i64 %9068, i64* %PC.i54
  %9069 = bitcast i8* %9066 to double*
  %9070 = load double, double* %9069, align 1
  %9071 = call double @llvm.trunc.f64(double %9070)
  %9072 = call double @llvm.fabs.f64(double %9071)
  %9073 = fcmp ogt double %9072, 0x41DFFFFFFFC00000
  %9074 = fptosi double %9071 to i32
  %9075 = zext i32 %9074 to i64
  %9076 = select i1 %9073, i64 2147483648, i64 %9075
  store i64 %9076, i64* %RCX.i55, align 8
  store %struct.Memory* %loadMem_4265ad, %struct.Memory** %MEMORY
  %loadMem_4265b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9078 = getelementptr inbounds %struct.GPR, %struct.GPR* %9077, i32 0, i32 33
  %9079 = getelementptr inbounds %struct.Reg, %struct.Reg* %9078, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %9079 to i64*
  %9080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9081 = getelementptr inbounds %struct.GPR, %struct.GPR* %9080, i32 0, i32 5
  %9082 = getelementptr inbounds %struct.Reg, %struct.Reg* %9081, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %9082 to i32*
  %9083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9084 = getelementptr inbounds %struct.GPR, %struct.GPR* %9083, i32 0, i32 15
  %9085 = getelementptr inbounds %struct.Reg, %struct.Reg* %9084, i32 0, i32 0
  %RBP.i53 = bitcast %union.anon* %9085 to i64*
  %9086 = load i64, i64* %RBP.i53
  %9087 = sub i64 %9086, 40
  %9088 = load i32, i32* %ECX.i
  %9089 = zext i32 %9088 to i64
  %9090 = load i64, i64* %PC.i52
  %9091 = add i64 %9090, 3
  store i64 %9091, i64* %PC.i52
  %9092 = inttoptr i64 %9087 to i32*
  store i32 %9088, i32* %9092
  store %struct.Memory* %loadMem_4265b1, %struct.Memory** %MEMORY
  %loadMem_4265b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9094 = getelementptr inbounds %struct.GPR, %struct.GPR* %9093, i32 0, i32 33
  %9095 = getelementptr inbounds %struct.Reg, %struct.Reg* %9094, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %9095 to i64*
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9097 = getelementptr inbounds %struct.GPR, %struct.GPR* %9096, i32 0, i32 11
  %9098 = getelementptr inbounds %struct.Reg, %struct.Reg* %9097, i32 0, i32 0
  %RDI.i50 = bitcast %union.anon* %9098 to i64*
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9100 = getelementptr inbounds %struct.GPR, %struct.GPR* %9099, i32 0, i32 15
  %9101 = getelementptr inbounds %struct.Reg, %struct.Reg* %9100, i32 0, i32 0
  %RBP.i51 = bitcast %union.anon* %9101 to i64*
  %9102 = load i64, i64* %RBP.i51
  %9103 = sub i64 %9102, 40
  %9104 = load i64, i64* %PC.i49
  %9105 = add i64 %9104, 3
  store i64 %9105, i64* %PC.i49
  %9106 = inttoptr i64 %9103 to i32*
  %9107 = load i32, i32* %9106
  %9108 = zext i32 %9107 to i64
  store i64 %9108, i64* %RDI.i50, align 8
  store %struct.Memory* %loadMem_4265b4, %struct.Memory** %MEMORY
  %loadMem_4265b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9110 = getelementptr inbounds %struct.GPR, %struct.GPR* %9109, i32 0, i32 33
  %9111 = getelementptr inbounds %struct.Reg, %struct.Reg* %9110, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %9111 to i64*
  %9112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9113 = getelementptr inbounds %struct.GPR, %struct.GPR* %9112, i32 0, i32 1
  %9114 = getelementptr inbounds %struct.Reg, %struct.Reg* %9113, i32 0, i32 0
  %RAX.i48 = bitcast %union.anon* %9114 to i64*
  %9115 = load i64, i64* %PC.i47
  %9116 = add i64 %9115, 8
  store i64 %9116, i64* %PC.i47
  %9117 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9117, i64* %RAX.i48, align 8
  store %struct.Memory* %loadMem_4265b7, %struct.Memory** %MEMORY
  %loadMem_4265bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9119 = getelementptr inbounds %struct.GPR, %struct.GPR* %9118, i32 0, i32 33
  %9120 = getelementptr inbounds %struct.Reg, %struct.Reg* %9119, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %9120 to i64*
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9122 = getelementptr inbounds %struct.GPR, %struct.GPR* %9121, i32 0, i32 1
  %9123 = getelementptr inbounds %struct.Reg, %struct.Reg* %9122, i32 0, i32 0
  %RAX.i45 = bitcast %union.anon* %9123 to i64*
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9125 = getelementptr inbounds %struct.GPR, %struct.GPR* %9124, i32 0, i32 7
  %9126 = getelementptr inbounds %struct.Reg, %struct.Reg* %9125, i32 0, i32 0
  %RDX.i46 = bitcast %union.anon* %9126 to i64*
  %9127 = load i64, i64* %RAX.i45
  %9128 = add i64 %9127, 72652
  %9129 = load i64, i64* %PC.i44
  %9130 = add i64 %9129, 6
  store i64 %9130, i64* %PC.i44
  %9131 = inttoptr i64 %9128 to i32*
  %9132 = load i32, i32* %9131
  %9133 = zext i32 %9132 to i64
  store i64 %9133, i64* %RDX.i46, align 8
  store %struct.Memory* %loadMem_4265bf, %struct.Memory** %MEMORY
  %loadMem_4265c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9135 = getelementptr inbounds %struct.GPR, %struct.GPR* %9134, i32 0, i32 33
  %9136 = getelementptr inbounds %struct.Reg, %struct.Reg* %9135, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %9136 to i64*
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9138 = getelementptr inbounds %struct.GPR, %struct.GPR* %9137, i32 0, i32 5
  %9139 = getelementptr inbounds %struct.Reg, %struct.Reg* %9138, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %9139 to i64*
  %9140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9141 = getelementptr inbounds %struct.GPR, %struct.GPR* %9140, i32 0, i32 15
  %9142 = getelementptr inbounds %struct.Reg, %struct.Reg* %9141, i32 0, i32 0
  %RBP.i43 = bitcast %union.anon* %9142 to i64*
  %9143 = load i64, i64* %RBP.i43
  %9144 = sub i64 %9143, 16
  %9145 = load i64, i64* %PC.i42
  %9146 = add i64 %9145, 4
  store i64 %9146, i64* %PC.i42
  %9147 = inttoptr i64 %9144 to i64*
  %9148 = load i64, i64* %9147
  store i64 %9148, i64* %RCX.i, align 8
  store %struct.Memory* %loadMem_4265c5, %struct.Memory** %MEMORY
  %loadMem_4265c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9150 = getelementptr inbounds %struct.GPR, %struct.GPR* %9149, i32 0, i32 33
  %9151 = getelementptr inbounds %struct.Reg, %struct.Reg* %9150, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %9151 to i64*
  %9152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9153 = getelementptr inbounds %struct.GPR, %struct.GPR* %9152, i32 0, i32 9
  %9154 = getelementptr inbounds %struct.Reg, %struct.Reg* %9153, i32 0, i32 0
  %RSI.i40 = bitcast %union.anon* %9154 to i64*
  %9155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9156 = getelementptr inbounds %struct.GPR, %struct.GPR* %9155, i32 0, i32 15
  %9157 = getelementptr inbounds %struct.Reg, %struct.Reg* %9156, i32 0, i32 0
  %RBP.i41 = bitcast %union.anon* %9157 to i64*
  %9158 = load i64, i64* %RBP.i41
  %9159 = sub i64 %9158, 80
  %9160 = load i64, i64* %PC.i39
  %9161 = add i64 %9160, 4
  store i64 %9161, i64* %PC.i39
  %9162 = inttoptr i64 %9159 to i64*
  %9163 = load i64, i64* %9162
  store i64 %9163, i64* %RSI.i40, align 8
  store %struct.Memory* %loadMem_4265c9, %struct.Memory** %MEMORY
  %loadMem1_4265cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9165 = getelementptr inbounds %struct.GPR, %struct.GPR* %9164, i32 0, i32 33
  %9166 = getelementptr inbounds %struct.Reg, %struct.Reg* %9165, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %9166 to i64*
  %9167 = load i64, i64* %PC.i38
  %9168 = add i64 %9167, 550387
  %9169 = load i64, i64* %PC.i38
  %9170 = add i64 %9169, 5
  %9171 = load i64, i64* %PC.i38
  %9172 = add i64 %9171, 5
  store i64 %9172, i64* %PC.i38
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9174 = load i64, i64* %9173, align 8
  %9175 = add i64 %9174, -8
  %9176 = inttoptr i64 %9175 to i64*
  store i64 %9170, i64* %9176
  store i64 %9175, i64* %9173, align 8
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9168, i64* %9177, align 8
  store %struct.Memory* %loadMem1_4265cd, %struct.Memory** %MEMORY
  %loadMem2_4265cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4265cd = load i64, i64* %3
  %call2_4265cd = call %struct.Memory* @sub_4acbc0.u_v(%struct.State* %0, i64 %loadPC_4265cd, %struct.Memory* %loadMem2_4265cd)
  store %struct.Memory* %call2_4265cd, %struct.Memory** %MEMORY
  %loadMem_4265d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9179 = getelementptr inbounds %struct.GPR, %struct.GPR* %9178, i32 0, i32 33
  %9180 = getelementptr inbounds %struct.Reg, %struct.Reg* %9179, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %9180 to i64*
  %9181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9182 = getelementptr inbounds %struct.GPR, %struct.GPR* %9181, i32 0, i32 1
  %9183 = getelementptr inbounds %struct.Reg, %struct.Reg* %9182, i32 0, i32 0
  %RAX.i36 = bitcast %union.anon* %9183 to i64*
  %9184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9185 = getelementptr inbounds %struct.GPR, %struct.GPR* %9184, i32 0, i32 15
  %9186 = getelementptr inbounds %struct.Reg, %struct.Reg* %9185, i32 0, i32 0
  %RBP.i37 = bitcast %union.anon* %9186 to i64*
  %9187 = load i64, i64* %RAX.i36
  %9188 = load i64, i64* %RBP.i37
  %9189 = sub i64 %9188, 28
  %9190 = load i64, i64* %PC.i35
  %9191 = add i64 %9190, 3
  store i64 %9191, i64* %PC.i35
  %9192 = trunc i64 %9187 to i32
  %9193 = inttoptr i64 %9189 to i32*
  %9194 = load i32, i32* %9193
  %9195 = add i32 %9194, %9192
  %9196 = zext i32 %9195 to i64
  store i64 %9196, i64* %RAX.i36, align 8
  %9197 = icmp ult i32 %9195, %9192
  %9198 = icmp ult i32 %9195, %9194
  %9199 = or i1 %9197, %9198
  %9200 = zext i1 %9199 to i8
  %9201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9200, i8* %9201, align 1
  %9202 = and i32 %9195, 255
  %9203 = call i32 @llvm.ctpop.i32(i32 %9202)
  %9204 = trunc i32 %9203 to i8
  %9205 = and i8 %9204, 1
  %9206 = xor i8 %9205, 1
  %9207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9206, i8* %9207, align 1
  %9208 = xor i32 %9194, %9192
  %9209 = xor i32 %9208, %9195
  %9210 = lshr i32 %9209, 4
  %9211 = trunc i32 %9210 to i8
  %9212 = and i8 %9211, 1
  %9213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9212, i8* %9213, align 1
  %9214 = icmp eq i32 %9195, 0
  %9215 = zext i1 %9214 to i8
  %9216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9215, i8* %9216, align 1
  %9217 = lshr i32 %9195, 31
  %9218 = trunc i32 %9217 to i8
  %9219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9218, i8* %9219, align 1
  %9220 = lshr i32 %9192, 31
  %9221 = lshr i32 %9194, 31
  %9222 = xor i32 %9217, %9220
  %9223 = xor i32 %9217, %9221
  %9224 = add i32 %9222, %9223
  %9225 = icmp eq i32 %9224, 2
  %9226 = zext i1 %9225 to i8
  %9227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9226, i8* %9227, align 1
  store %struct.Memory* %loadMem_4265d2, %struct.Memory** %MEMORY
  %loadMem_4265d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9229 = getelementptr inbounds %struct.GPR, %struct.GPR* %9228, i32 0, i32 33
  %9230 = getelementptr inbounds %struct.Reg, %struct.Reg* %9229, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %9230 to i64*
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9232 = getelementptr inbounds %struct.GPR, %struct.GPR* %9231, i32 0, i32 1
  %9233 = getelementptr inbounds %struct.Reg, %struct.Reg* %9232, i32 0, i32 0
  %EAX.i33 = bitcast %union.anon* %9233 to i32*
  %9234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9235 = getelementptr inbounds %struct.GPR, %struct.GPR* %9234, i32 0, i32 15
  %9236 = getelementptr inbounds %struct.Reg, %struct.Reg* %9235, i32 0, i32 0
  %RBP.i34 = bitcast %union.anon* %9236 to i64*
  %9237 = load i64, i64* %RBP.i34
  %9238 = sub i64 %9237, 28
  %9239 = load i32, i32* %EAX.i33
  %9240 = zext i32 %9239 to i64
  %9241 = load i64, i64* %PC.i32
  %9242 = add i64 %9241, 3
  store i64 %9242, i64* %PC.i32
  %9243 = inttoptr i64 %9238 to i32*
  store i32 %9239, i32* %9243
  store %struct.Memory* %loadMem_4265d5, %struct.Memory** %MEMORY
  br label %block_.L_4265d8

block_.L_4265d8:                                  ; preds = %block_426527, %block_426515, %block_426503, %block_.L_4264f1
  %loadMem_4265d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9245 = getelementptr inbounds %struct.GPR, %struct.GPR* %9244, i32 0, i32 33
  %9246 = getelementptr inbounds %struct.Reg, %struct.Reg* %9245, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %9246 to i64*
  %9247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9248 = getelementptr inbounds %struct.GPR, %struct.GPR* %9247, i32 0, i32 1
  %9249 = getelementptr inbounds %struct.Reg, %struct.Reg* %9248, i32 0, i32 0
  %RAX.i31 = bitcast %union.anon* %9249 to i64*
  %9250 = load i64, i64* %PC.i30
  %9251 = add i64 %9250, 8
  store i64 %9251, i64* %PC.i30
  %9252 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %9252, i64* %RAX.i31, align 8
  store %struct.Memory* %loadMem_4265d8, %struct.Memory** %MEMORY
  %loadMem_4265e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9254 = getelementptr inbounds %struct.GPR, %struct.GPR* %9253, i32 0, i32 33
  %9255 = getelementptr inbounds %struct.Reg, %struct.Reg* %9254, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %9255 to i64*
  %9256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9257 = getelementptr inbounds %struct.GPR, %struct.GPR* %9256, i32 0, i32 1
  %9258 = getelementptr inbounds %struct.Reg, %struct.Reg* %9257, i32 0, i32 0
  %RAX.i29 = bitcast %union.anon* %9258 to i64*
  %9259 = load i64, i64* %RAX.i29
  %9260 = add i64 %9259, 2364
  %9261 = load i64, i64* %PC.i28
  %9262 = add i64 %9261, 7
  store i64 %9262, i64* %PC.i28
  %9263 = inttoptr i64 %9260 to i32*
  %9264 = load i32, i32* %9263
  %9265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9265, align 1
  %9266 = and i32 %9264, 255
  %9267 = call i32 @llvm.ctpop.i32(i32 %9266)
  %9268 = trunc i32 %9267 to i8
  %9269 = and i8 %9268, 1
  %9270 = xor i8 %9269, 1
  %9271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9270, i8* %9271, align 1
  %9272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9272, align 1
  %9273 = icmp eq i32 %9264, 0
  %9274 = zext i1 %9273 to i8
  %9275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9274, i8* %9275, align 1
  %9276 = lshr i32 %9264, 31
  %9277 = trunc i32 %9276 to i8
  %9278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9277, i8* %9278, align 1
  %9279 = lshr i32 %9264, 31
  %9280 = xor i32 %9276, %9279
  %9281 = add i32 %9280, %9279
  %9282 = icmp eq i32 %9281, 2
  %9283 = zext i1 %9282 to i8
  %9284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9283, i8* %9284, align 1
  store %struct.Memory* %loadMem_4265e0, %struct.Memory** %MEMORY
  %loadMem_4265e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9286 = getelementptr inbounds %struct.GPR, %struct.GPR* %9285, i32 0, i32 33
  %9287 = getelementptr inbounds %struct.Reg, %struct.Reg* %9286, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %9287 to i64*
  %9288 = load i64, i64* %PC.i27
  %9289 = add i64 %9288, 67
  %9290 = load i64, i64* %PC.i27
  %9291 = add i64 %9290, 6
  %9292 = load i64, i64* %PC.i27
  %9293 = add i64 %9292, 6
  store i64 %9293, i64* %PC.i27
  %9294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9295 = load i8, i8* %9294, align 1
  store i8 %9295, i8* %BRANCH_TAKEN, align 1
  %9296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9297 = icmp ne i8 %9295, 0
  %9298 = select i1 %9297, i64 %9289, i64 %9291
  store i64 %9298, i64* %9296, align 8
  store %struct.Memory* %loadMem_4265e7, %struct.Memory** %MEMORY
  %loadBr_4265e7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4265e7 = icmp eq i8 %loadBr_4265e7, 1
  br i1 %cmpBr_4265e7, label %block_.L_42662a, label %block_4265ed

block_4265ed:                                     ; preds = %block_.L_4265d8
  %loadMem_4265ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9300 = getelementptr inbounds %struct.GPR, %struct.GPR* %9299, i32 0, i32 33
  %9301 = getelementptr inbounds %struct.Reg, %struct.Reg* %9300, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %9301 to i64*
  %9302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9303 = getelementptr inbounds %struct.GPR, %struct.GPR* %9302, i32 0, i32 1
  %9304 = getelementptr inbounds %struct.Reg, %struct.Reg* %9303, i32 0, i32 0
  %RAX.i26 = bitcast %union.anon* %9304 to i64*
  %9305 = load i64, i64* %PC.i25
  %9306 = add i64 %9305, 8
  store i64 %9306, i64* %PC.i25
  %9307 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9307, i64* %RAX.i26, align 8
  store %struct.Memory* %loadMem_4265ed, %struct.Memory** %MEMORY
  %loadMem_4265f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9309 = getelementptr inbounds %struct.GPR, %struct.GPR* %9308, i32 0, i32 33
  %9310 = getelementptr inbounds %struct.Reg, %struct.Reg* %9309, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %9310 to i64*
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9312 = getelementptr inbounds %struct.GPR, %struct.GPR* %9311, i32 0, i32 1
  %9313 = getelementptr inbounds %struct.Reg, %struct.Reg* %9312, i32 0, i32 0
  %RAX.i24 = bitcast %union.anon* %9313 to i64*
  %9314 = load i64, i64* %RAX.i24
  %9315 = add i64 %9314, 14152
  %9316 = load i64, i64* %PC.i23
  %9317 = add i64 %9316, 7
  store i64 %9317, i64* %PC.i23
  %9318 = inttoptr i64 %9315 to i64*
  %9319 = load i64, i64* %9318
  store i64 %9319, i64* %RAX.i24, align 8
  store %struct.Memory* %loadMem_4265f5, %struct.Memory** %MEMORY
  %loadMem_4265fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9321 = getelementptr inbounds %struct.GPR, %struct.GPR* %9320, i32 0, i32 33
  %9322 = getelementptr inbounds %struct.Reg, %struct.Reg* %9321, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %9322 to i64*
  %9323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9324 = getelementptr inbounds %struct.GPR, %struct.GPR* %9323, i32 0, i32 1
  %9325 = getelementptr inbounds %struct.Reg, %struct.Reg* %9324, i32 0, i32 0
  %RAX.i22 = bitcast %union.anon* %9325 to i64*
  %9326 = load i64, i64* %RAX.i22
  %9327 = add i64 %9326, 4
  %9328 = load i64, i64* %PC.i21
  %9329 = add i64 %9328, 4
  store i64 %9329, i64* %PC.i21
  %9330 = inttoptr i64 %9327 to i32*
  %9331 = load i32, i32* %9330
  %9332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9332, align 1
  %9333 = and i32 %9331, 255
  %9334 = call i32 @llvm.ctpop.i32(i32 %9333)
  %9335 = trunc i32 %9334 to i8
  %9336 = and i8 %9335, 1
  %9337 = xor i8 %9336, 1
  %9338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9337, i8* %9338, align 1
  %9339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9339, align 1
  %9340 = icmp eq i32 %9331, 0
  %9341 = zext i1 %9340 to i8
  %9342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9341, i8* %9342, align 1
  %9343 = lshr i32 %9331, 31
  %9344 = trunc i32 %9343 to i8
  %9345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9344, i8* %9345, align 1
  %9346 = lshr i32 %9331, 31
  %9347 = xor i32 %9343, %9346
  %9348 = add i32 %9347, %9346
  %9349 = icmp eq i32 %9348, 2
  %9350 = zext i1 %9349 to i8
  %9351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9350, i8* %9351, align 1
  store %struct.Memory* %loadMem_4265fc, %struct.Memory** %MEMORY
  %loadMem_426600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9353 = getelementptr inbounds %struct.GPR, %struct.GPR* %9352, i32 0, i32 33
  %9354 = getelementptr inbounds %struct.Reg, %struct.Reg* %9353, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %9354 to i64*
  %9355 = load i64, i64* %PC.i20
  %9356 = add i64 %9355, 42
  %9357 = load i64, i64* %PC.i20
  %9358 = add i64 %9357, 6
  %9359 = load i64, i64* %PC.i20
  %9360 = add i64 %9359, 6
  store i64 %9360, i64* %PC.i20
  %9361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9362 = load i8, i8* %9361, align 1
  %9363 = icmp eq i8 %9362, 0
  %9364 = zext i1 %9363 to i8
  store i8 %9364, i8* %BRANCH_TAKEN, align 1
  %9365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9366 = select i1 %9363, i64 %9356, i64 %9358
  store i64 %9366, i64* %9365, align 8
  store %struct.Memory* %loadMem_426600, %struct.Memory** %MEMORY
  %loadBr_426600 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_426600 = icmp eq i8 %loadBr_426600, 1
  br i1 %cmpBr_426600, label %block_.L_42662a, label %block_426606

block_426606:                                     ; preds = %block_4265ed
  %loadMem_426606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9368 = getelementptr inbounds %struct.GPR, %struct.GPR* %9367, i32 0, i32 33
  %9369 = getelementptr inbounds %struct.Reg, %struct.Reg* %9368, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %9369 to i64*
  %9370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9371 = getelementptr inbounds %struct.GPR, %struct.GPR* %9370, i32 0, i32 11
  %9372 = getelementptr inbounds %struct.Reg, %struct.Reg* %9371, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %9372 to i64*
  %9373 = load i64, i64* %PC.i19
  %9374 = add i64 %9373, 10
  store i64 %9374, i64* %PC.i19
  store i64 ptrtoint (%G__0x4bfc78_type* @G__0x4bfc78 to i64), i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_426606, %struct.Memory** %MEMORY
  %loadMem_426610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9376 = getelementptr inbounds %struct.GPR, %struct.GPR* %9375, i32 0, i32 33
  %9377 = getelementptr inbounds %struct.Reg, %struct.Reg* %9376, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %9377 to i64*
  %9378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9379 = getelementptr inbounds %struct.GPR, %struct.GPR* %9378, i32 0, i32 1
  %9380 = getelementptr inbounds %struct.Reg, %struct.Reg* %9379, i32 0, i32 0
  %RAX.i18 = bitcast %union.anon* %9380 to i64*
  %9381 = load i64, i64* %PC.i17
  %9382 = add i64 %9381, 8
  store i64 %9382, i64* %PC.i17
  %9383 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9383, i64* %RAX.i18, align 8
  store %struct.Memory* %loadMem_426610, %struct.Memory** %MEMORY
  %loadMem_426618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9385 = getelementptr inbounds %struct.GPR, %struct.GPR* %9384, i32 0, i32 33
  %9386 = getelementptr inbounds %struct.Reg, %struct.Reg* %9385, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %9386 to i64*
  %9387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9388 = getelementptr inbounds %struct.GPR, %struct.GPR* %9387, i32 0, i32 1
  %9389 = getelementptr inbounds %struct.Reg, %struct.Reg* %9388, i32 0, i32 0
  %RAX.i16 = bitcast %union.anon* %9389 to i64*
  %9390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9391 = getelementptr inbounds %struct.GPR, %struct.GPR* %9390, i32 0, i32 9
  %9392 = getelementptr inbounds %struct.Reg, %struct.Reg* %9391, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %9392 to i64*
  %9393 = load i64, i64* %RAX.i16
  %9394 = add i64 %9393, 20
  %9395 = load i64, i64* %PC.i15
  %9396 = add i64 %9395, 3
  store i64 %9396, i64* %PC.i15
  %9397 = inttoptr i64 %9394 to i32*
  %9398 = load i32, i32* %9397
  %9399 = zext i32 %9398 to i64
  store i64 %9399, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_426618, %struct.Memory** %MEMORY
  %loadMem_42661b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9401 = getelementptr inbounds %struct.GPR, %struct.GPR* %9400, i32 0, i32 33
  %9402 = getelementptr inbounds %struct.Reg, %struct.Reg* %9401, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %9402 to i64*
  %9403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9404 = getelementptr inbounds %struct.GPR, %struct.GPR* %9403, i32 0, i32 7
  %9405 = getelementptr inbounds %struct.Reg, %struct.Reg* %9404, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %9405 to i64*
  %9406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9407 = getelementptr inbounds %struct.GPR, %struct.GPR* %9406, i32 0, i32 15
  %9408 = getelementptr inbounds %struct.Reg, %struct.Reg* %9407, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %9408 to i64*
  %9409 = load i64, i64* %RBP.i14
  %9410 = sub i64 %9409, 16
  %9411 = load i64, i64* %PC.i13
  %9412 = add i64 %9411, 4
  store i64 %9412, i64* %PC.i13
  %9413 = inttoptr i64 %9410 to i64*
  %9414 = load i64, i64* %9413
  store i64 %9414, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_42661b, %struct.Memory** %MEMORY
  %loadMem1_42661f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9416 = getelementptr inbounds %struct.GPR, %struct.GPR* %9415, i32 0, i32 33
  %9417 = getelementptr inbounds %struct.Reg, %struct.Reg* %9416, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %9417 to i64*
  %9418 = load i64, i64* %PC.i12
  %9419 = add i64 %9418, 548993
  %9420 = load i64, i64* %PC.i12
  %9421 = add i64 %9420, 5
  %9422 = load i64, i64* %PC.i12
  %9423 = add i64 %9422, 5
  store i64 %9423, i64* %PC.i12
  %9424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9425 = load i64, i64* %9424, align 8
  %9426 = add i64 %9425, -8
  %9427 = inttoptr i64 %9426 to i64*
  store i64 %9421, i64* %9427
  store i64 %9426, i64* %9424, align 8
  %9428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9419, i64* %9428, align 8
  store %struct.Memory* %loadMem1_42661f, %struct.Memory** %MEMORY
  %loadMem2_42661f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42661f = load i64, i64* %3
  %call2_42661f = call %struct.Memory* @sub_4ac6a0.ue_v(%struct.State* %0, i64 %loadPC_42661f, %struct.Memory* %loadMem2_42661f)
  store %struct.Memory* %call2_42661f, %struct.Memory** %MEMORY
  %loadMem_426624 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9430 = getelementptr inbounds %struct.GPR, %struct.GPR* %9429, i32 0, i32 33
  %9431 = getelementptr inbounds %struct.Reg, %struct.Reg* %9430, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %9431 to i64*
  %9432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9433 = getelementptr inbounds %struct.GPR, %struct.GPR* %9432, i32 0, i32 1
  %9434 = getelementptr inbounds %struct.Reg, %struct.Reg* %9433, i32 0, i32 0
  %RAX.i10 = bitcast %union.anon* %9434 to i64*
  %9435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9436 = getelementptr inbounds %struct.GPR, %struct.GPR* %9435, i32 0, i32 15
  %9437 = getelementptr inbounds %struct.Reg, %struct.Reg* %9436, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %9437 to i64*
  %9438 = load i64, i64* %RAX.i10
  %9439 = load i64, i64* %RBP.i11
  %9440 = sub i64 %9439, 28
  %9441 = load i64, i64* %PC.i9
  %9442 = add i64 %9441, 3
  store i64 %9442, i64* %PC.i9
  %9443 = trunc i64 %9438 to i32
  %9444 = inttoptr i64 %9440 to i32*
  %9445 = load i32, i32* %9444
  %9446 = add i32 %9445, %9443
  %9447 = zext i32 %9446 to i64
  store i64 %9447, i64* %RAX.i10, align 8
  %9448 = icmp ult i32 %9446, %9443
  %9449 = icmp ult i32 %9446, %9445
  %9450 = or i1 %9448, %9449
  %9451 = zext i1 %9450 to i8
  %9452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9451, i8* %9452, align 1
  %9453 = and i32 %9446, 255
  %9454 = call i32 @llvm.ctpop.i32(i32 %9453)
  %9455 = trunc i32 %9454 to i8
  %9456 = and i8 %9455, 1
  %9457 = xor i8 %9456, 1
  %9458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9457, i8* %9458, align 1
  %9459 = xor i32 %9445, %9443
  %9460 = xor i32 %9459, %9446
  %9461 = lshr i32 %9460, 4
  %9462 = trunc i32 %9461 to i8
  %9463 = and i8 %9462, 1
  %9464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9463, i8* %9464, align 1
  %9465 = icmp eq i32 %9446, 0
  %9466 = zext i1 %9465 to i8
  %9467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9466, i8* %9467, align 1
  %9468 = lshr i32 %9446, 31
  %9469 = trunc i32 %9468 to i8
  %9470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9469, i8* %9470, align 1
  %9471 = lshr i32 %9443, 31
  %9472 = lshr i32 %9445, 31
  %9473 = xor i32 %9468, %9471
  %9474 = xor i32 %9468, %9472
  %9475 = add i32 %9473, %9474
  %9476 = icmp eq i32 %9475, 2
  %9477 = zext i1 %9476 to i8
  %9478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9477, i8* %9478, align 1
  store %struct.Memory* %loadMem_426624, %struct.Memory** %MEMORY
  %loadMem_426627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9480 = getelementptr inbounds %struct.GPR, %struct.GPR* %9479, i32 0, i32 33
  %9481 = getelementptr inbounds %struct.Reg, %struct.Reg* %9480, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %9481 to i64*
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9483 = getelementptr inbounds %struct.GPR, %struct.GPR* %9482, i32 0, i32 1
  %9484 = getelementptr inbounds %struct.Reg, %struct.Reg* %9483, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %9484 to i32*
  %9485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9486 = getelementptr inbounds %struct.GPR, %struct.GPR* %9485, i32 0, i32 15
  %9487 = getelementptr inbounds %struct.Reg, %struct.Reg* %9486, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %9487 to i64*
  %9488 = load i64, i64* %RBP.i8
  %9489 = sub i64 %9488, 28
  %9490 = load i32, i32* %EAX.i
  %9491 = zext i32 %9490 to i64
  %9492 = load i64, i64* %PC.i7
  %9493 = add i64 %9492, 3
  store i64 %9493, i64* %PC.i7
  %9494 = inttoptr i64 %9489 to i32*
  store i32 %9490, i32* %9494
  store %struct.Memory* %loadMem_426627, %struct.Memory** %MEMORY
  br label %block_.L_42662a

block_.L_42662a:                                  ; preds = %block_426606, %block_4265ed, %block_.L_4265d8
  %loadMem_42662a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9496 = getelementptr inbounds %struct.GPR, %struct.GPR* %9495, i32 0, i32 33
  %9497 = getelementptr inbounds %struct.Reg, %struct.Reg* %9496, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %9497 to i64*
  %9498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9499 = getelementptr inbounds %struct.GPR, %struct.GPR* %9498, i32 0, i32 1
  %9500 = getelementptr inbounds %struct.Reg, %struct.Reg* %9499, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %9500 to i64*
  %9501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9502 = getelementptr inbounds %struct.GPR, %struct.GPR* %9501, i32 0, i32 15
  %9503 = getelementptr inbounds %struct.Reg, %struct.Reg* %9502, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %9503 to i64*
  %9504 = load i64, i64* %RBP.i6
  %9505 = sub i64 %9504, 28
  %9506 = load i64, i64* %PC.i5
  %9507 = add i64 %9506, 3
  store i64 %9507, i64* %PC.i5
  %9508 = inttoptr i64 %9505 to i32*
  %9509 = load i32, i32* %9508
  %9510 = zext i32 %9509 to i64
  store i64 %9510, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_42662a, %struct.Memory** %MEMORY
  %loadMem_42662d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9512 = getelementptr inbounds %struct.GPR, %struct.GPR* %9511, i32 0, i32 33
  %9513 = getelementptr inbounds %struct.Reg, %struct.Reg* %9512, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %9513 to i64*
  %9514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9515 = getelementptr inbounds %struct.GPR, %struct.GPR* %9514, i32 0, i32 13
  %9516 = getelementptr inbounds %struct.Reg, %struct.Reg* %9515, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %9516 to i64*
  %9517 = load i64, i64* %RSP.i
  %9518 = load i64, i64* %PC.i4
  %9519 = add i64 %9518, 4
  store i64 %9519, i64* %PC.i4
  %9520 = add i64 80, %9517
  store i64 %9520, i64* %RSP.i, align 8
  %9521 = icmp ult i64 %9520, %9517
  %9522 = icmp ult i64 %9520, 80
  %9523 = or i1 %9521, %9522
  %9524 = zext i1 %9523 to i8
  %9525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9524, i8* %9525, align 1
  %9526 = trunc i64 %9520 to i32
  %9527 = and i32 %9526, 255
  %9528 = call i32 @llvm.ctpop.i32(i32 %9527)
  %9529 = trunc i32 %9528 to i8
  %9530 = and i8 %9529, 1
  %9531 = xor i8 %9530, 1
  %9532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9531, i8* %9532, align 1
  %9533 = xor i64 80, %9517
  %9534 = xor i64 %9533, %9520
  %9535 = lshr i64 %9534, 4
  %9536 = trunc i64 %9535 to i8
  %9537 = and i8 %9536, 1
  %9538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9537, i8* %9538, align 1
  %9539 = icmp eq i64 %9520, 0
  %9540 = zext i1 %9539 to i8
  %9541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9540, i8* %9541, align 1
  %9542 = lshr i64 %9520, 63
  %9543 = trunc i64 %9542 to i8
  %9544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9543, i8* %9544, align 1
  %9545 = lshr i64 %9517, 63
  %9546 = xor i64 %9542, %9545
  %9547 = add i64 %9546, %9542
  %9548 = icmp eq i64 %9547, 2
  %9549 = zext i1 %9548 to i8
  %9550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9549, i8* %9550, align 1
  store %struct.Memory* %loadMem_42662d, %struct.Memory** %MEMORY
  %loadMem_426631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9552 = getelementptr inbounds %struct.GPR, %struct.GPR* %9551, i32 0, i32 33
  %9553 = getelementptr inbounds %struct.Reg, %struct.Reg* %9552, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %9553 to i64*
  %9554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9555 = getelementptr inbounds %struct.GPR, %struct.GPR* %9554, i32 0, i32 15
  %9556 = getelementptr inbounds %struct.Reg, %struct.Reg* %9555, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %9556 to i64*
  %9557 = load i64, i64* %PC.i2
  %9558 = add i64 %9557, 1
  store i64 %9558, i64* %PC.i2
  %9559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9560 = load i64, i64* %9559, align 8
  %9561 = add i64 %9560, 8
  %9562 = inttoptr i64 %9560 to i64*
  %9563 = load i64, i64* %9562
  store i64 %9563, i64* %RBP.i3, align 8
  store i64 %9561, i64* %9559, align 8
  store %struct.Memory* %loadMem_426631, %struct.Memory** %MEMORY
  %loadMem_426632 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9565 = getelementptr inbounds %struct.GPR, %struct.GPR* %9564, i32 0, i32 33
  %9566 = getelementptr inbounds %struct.Reg, %struct.Reg* %9565, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %9566 to i64*
  %9567 = load i64, i64* %PC.i1
  %9568 = add i64 %9567, 1
  store i64 %9568, i64* %PC.i1
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9571 = load i64, i64* %9570, align 8
  %9572 = inttoptr i64 %9571 to i64*
  %9573 = load i64, i64* %9572
  store i64 %9573, i64* %9569, align 8
  %9574 = add i64 %9571, 8
  store i64 %9574, i64* %9570, align 8
  store %struct.Memory* %loadMem_426632, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_426632
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x50___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 80
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 80
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 80, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x93c__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2364
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x725600___rax_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 8
  %11 = add i64 %10, 7493120
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3750__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14160
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x18__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x78___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 120, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11ad0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_425cee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfa23___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfa23_type* @G__0x4bfa23 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.ue_v(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_425d0f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.get_picture_type(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfa39___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfa39_type* @G__0x4bfa39 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfa48___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfa48_type* @G__0x4bfa48 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4690___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfa61___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfa61_type* @G__0x4bfa61 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x722c98___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x722c98_type* @G_0x722c98 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 4, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 4
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 4, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b10__rdx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 72464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.u_v(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722cb0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x722cb0_type* @G_0x722cb0 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x47c__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 1148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_425e36(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 1, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x1c__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x31__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 49
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_425dc4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x1c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sete__cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x31__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 49
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x31__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 49
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfa6f___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfa6f_type* @G__0x4bfa6f to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_testb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RCX, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.u_1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_425e31(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfa82___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfa82_type* @G__0x4bfa82 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x1c__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovel__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp ne i8 %17, 0
  %19 = load i64, i64* %RAX, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_425e36(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3748__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14152
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_425e87(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfa98___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfa98_type* @G__0x4bfa98 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__edx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11ad4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72404
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_42600d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722cb0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x722cb0_type* @G_0x722cb0 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x47c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_425eea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294967295, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b00__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6d32c8___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6d32c8_type* @G_0x6d32c8 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x4___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 4, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 4
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 4, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RAX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__0xffffffff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = xor i64 -1, %9
  %13 = trunc i64 %12 to i32
  %14 = and i64 %12, 4294967295
  store i64 %14, i64* %RAX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %13, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = and i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RDX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x11aec__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 72428
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_425f8f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_425f06(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x1c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_425f3f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_425f8a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_425f85(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b04__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72452
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfaa7___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfaa7_type* @G__0x4bfaa7 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6d32c8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6d32c8_type* @G_0x6d32c8 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11aec__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72428
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11b2c__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 72492
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_426008(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_426008(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfabd___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfabd_type* @G__0x4bfabd to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11af0__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.se_v(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42600d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x11ad4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72404
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4260a9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11ad8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72408
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfadc___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfadc_type* @G__0x4bfadc to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11af4__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11b2c__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 72492
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4260a4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4260a4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfaf7___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfaf7_type* @G__0x4bfaf7 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11af8__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4260a9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xc84__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 3204
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4260e5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfb12___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfb12_type* @G__0x4bfb12 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11acc__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_42611e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfb28___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfb28_type* @G__0x4bfb28 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x1193c__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 71996
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_426154(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__0x18__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4262ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_426178(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4261ab(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11940__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72000
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb8__rdx____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edi___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RAX, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_426212(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11940__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72000
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4690___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb8__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ESI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x39__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 57
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_426200(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11944__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72004
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4690___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xbc__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setne__sil(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %SIL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__sil__MINUS0x39__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 57
  %15 = load i8, i8* %SIL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x39__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 57
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfb48___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfb48_type* @G__0x4bfb48 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4262a7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfb6d___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfb6d_type* @G__0x4bfb6d to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11940__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72000
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x18__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4262a2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfb8e___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfb8e_type* @G__0x4bfb8e to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4262a7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4262ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.ref_pic_list_reordering(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x18__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4262db(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4262f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xc0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 192
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_426317(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_426322(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0xc4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 196
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.pred_weight_table(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11b30__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72496
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_426342(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.dec_ref_pic_marking(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x934__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2356
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_426390(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x18__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_426390(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfbaf___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfbaf_type* @G__0x4bfbaf to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b48__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72520
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfbc2___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfbc2_type* @G__0x4bfbc2 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1a___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 26
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 26
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 26, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0xc8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 200
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__0x18__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_42642b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_426402(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfbd5___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfbd5_type* @G__0x4bfbd5 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__esi___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RSI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfbec___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfbec_type* @G__0x4bfbec to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x2c__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xdc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 220
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4264f1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfbff___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfbff_type* @G__0x4bfbff to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11930__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 71984
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x11930__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 71984
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4264ec(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfc21___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfc21_type* @G__0x4bfc21 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11934__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 71988
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfc40___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfc40_type* @G__0x4bfc40 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11938__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 71992
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4264f1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x3c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_4265d8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__0x40__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jb_.L_4265d8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__0x40__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 5
  %16 = icmp ult i32 %14, 5
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 5
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ja_.L_4265d8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp eq i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x97305__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x97305__rip__type* @G_0x97305__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to float*
  %14 = load float, float* %13
  %15 = bitcast i8* %8 to float*
  store float %14, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 4
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  %18 = getelementptr inbounds i8, i8* %8, i64 8
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 12
  %21 = bitcast i8* %20 to float*
  store float 0.000000e+00, float* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x2a53ca__rip____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x2a53ca__rip__type* @G_0x2a53ca__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b14__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72468
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b18__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72472
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__ecx___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = shl i64 %12, 32
  %18 = ashr exact i64 %17, 32
  %19 = shl i64 %14, 32
  %20 = ashr exact i64 %19, 32
  %21 = mul i64 %20, %18
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RDX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2ssq__rax___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 5
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x i32>*
  %16 = load <2 x i32>, <2 x i32>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = sitofp i64 %12 to float
  %21 = bitcast i8* %11 to float*
  store float %20, float* %21, align 1
  %22 = extractelement <2 x i32> %16, i32 1
  %23 = getelementptr inbounds i8, i8* %11, i64 4
  %24 = bitcast i8* %23 to i32*
  store i32 %22, i32* %24, align 1
  %25 = extractelement <2 x i32> %19, i32 0
  %26 = bitcast i8* %17 to i32*
  store i32 %25, i32* %26, align 1
  %27 = extractelement <2 x i32> %19, i32 1
  %28 = getelementptr inbounds i8, i8* %11, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x2ae13d__rip____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x2ae13d__rip__type* @G_0x2ae13d__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xa8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_incl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i32 %13, %12
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %13, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %13, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %12, 31
  %33 = xor i32 %29, %32
  %34 = add i32 %33, %29
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2ssq__rax___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 5
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x i32>*
  %16 = load <2 x i32>, <2 x i32>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = sitofp i64 %12 to float
  %21 = bitcast i8* %11 to float*
  store float %20, float* %21, align 1
  %22 = extractelement <2 x i32> %16, i32 1
  %23 = getelementptr inbounds i8, i8* %11, i64 4
  %24 = bitcast i8* %23 to i32*
  store i32 %22, i32* %24, align 1
  %25 = extractelement <2 x i32> %19, i32 0
  %26 = bitcast i8* %17 to i32*
  store i32 %25, i32* %26, align 1
  %27 = extractelement <2 x i32> %19, i32 1
  %28 = getelementptr inbounds i8, i8* %11, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divss__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fdiv float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addss__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fadd float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 44
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x2c__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.log_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x8b2c7__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x8b2c7__rip__type* @G_0x8b2c7__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 72
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfc5b___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfc5b_type* @G__0x4bfc5b to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x48__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.ceil_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to double*
  %15 = load double, double* %14, align 1
  %16 = call double @llvm.trunc.f64(double %15)
  %17 = call double @llvm.fabs.f64(double %16)
  %18 = fcmp ogt double %17, 0x41DFFFFFFFC00000
  %19 = fptosi double %16 to i32
  %20 = zext i32 %19 to i64
  %21 = select i1 %18, i64 2147483648, i64 %20
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bcc__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72652
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x93c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2364
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_42662a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_42662a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4bfc78___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4bfc78_type* @G__0x4bfc78 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x14__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x50___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 80, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 80
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 80, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
