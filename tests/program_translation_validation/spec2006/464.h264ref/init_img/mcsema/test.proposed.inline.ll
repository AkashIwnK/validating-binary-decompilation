; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6d4690_type = type <{ [8 x i8] }>
%G_0x722cb0_type = type <{ [8 x i8] }>
%G__0x4c16f1_type = type <{ [8 x i8] }>
%G__0x4c1705_type = type <{ [8 x i8] }>
%G__0x4c171c_type = type <{ [8 x i8] }>
%G__0x6cd878_type = type <{ [8 x i8] }>
%G__0x6d2198_type = type <{ [8 x i8] }>
%G__0x710a60_type = type <{ [8 x i8] }>
%G__0x721e00_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb8f8 = global %G_0x6cb8f8_type zeroinitializer
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6d4690 = global %G_0x6d4690_type zeroinitializer
@G_0x722cb0 = global %G_0x722cb0_type zeroinitializer
@G__0x4c16f1 = global %G__0x4c16f1_type zeroinitializer
@G__0x4c1705 = global %G__0x4c1705_type zeroinitializer
@G__0x4c171c = global %G__0x4c171c_type zeroinitializer
@G__0x6cd878 = global %G__0x6cd878_type zeroinitializer
@G__0x6d2198 = global %G__0x6d2198_type zeroinitializer
@G__0x710a60 = global %G__0x710a60_type zeroinitializer
@G__0x721e00 = global %G__0x721e00_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_438580.get_mem_ACcoeff(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_438730.get_mem_DCcoeff(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4593f0.no_mem_exit(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_459800.get_mem2Dint(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_459a80.get_mem3Dint(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_438850.CAVLC_init(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_431960.RandomIntraInit(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_49ee80.InitSEIMessages(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @init_img(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_433520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_433520, %struct.Memory** %MEMORY
  %loadMem_433521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i65 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i66 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i65
  %27 = load i64, i64* %PC.i64
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i64
  store i64 %26, i64* %RBP.i66, align 8
  store %struct.Memory* %loadMem_433521, %struct.Memory** %MEMORY
  %loadMem_433524 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 31
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %R15.i83 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %R15.i83
  %36 = load i64, i64* %PC.i82
  %37 = add i64 %36, 2
  store i64 %37, i64* %PC.i82
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, -8
  %41 = inttoptr i64 %40 to i64*
  store i64 %35, i64* %41
  store i64 %40, i64* %38, align 8
  store %struct.Memory* %loadMem_433524, %struct.Memory** %MEMORY
  %loadMem_433526 = load %struct.Memory*, %struct.Memory** %MEMORY
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 33
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 29
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %R14.i163 = bitcast %union.anon* %47 to i64*
  %48 = load i64, i64* %R14.i163
  %49 = load i64, i64* %PC.i162
  %50 = add i64 %49, 2
  store i64 %50, i64* %PC.i162
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, -8
  %54 = inttoptr i64 %53 to i64*
  store i64 %48, i64* %54
  store i64 %53, i64* %51, align 8
  store %struct.Memory* %loadMem_433526, %struct.Memory** %MEMORY
  %loadMem_433528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 33
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %57 to i64*
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %59 = getelementptr inbounds %struct.GPR, %struct.GPR* %58, i32 0, i32 3
  %60 = getelementptr inbounds %struct.Reg, %struct.Reg* %59, i32 0, i32 0
  %RBX.i194 = bitcast %union.anon* %60 to i64*
  %61 = load i64, i64* %RBX.i194
  %62 = load i64, i64* %PC.i193
  %63 = add i64 %62, 1
  store i64 %63, i64* %PC.i193
  %64 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, -8
  %67 = inttoptr i64 %66 to i64*
  store i64 %61, i64* %67
  store i64 %66, i64* %64, align 8
  store %struct.Memory* %loadMem_433528, %struct.Memory** %MEMORY
  %loadMem_433529 = load %struct.Memory*, %struct.Memory** %MEMORY
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %69 = getelementptr inbounds %struct.GPR, %struct.GPR* %68, i32 0, i32 33
  %70 = getelementptr inbounds %struct.Reg, %struct.Reg* %69, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %70 to i64*
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 13
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %RSP.i262 = bitcast %union.anon* %73 to i64*
  %74 = load i64, i64* %RSP.i262
  %75 = load i64, i64* %PC.i261
  %76 = add i64 %75, 7
  store i64 %76, i64* %PC.i261
  %77 = sub i64 %74, 296
  store i64 %77, i64* %RSP.i262, align 8
  %78 = icmp ult i64 %74, 296
  %79 = zext i1 %78 to i8
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %79, i8* %80, align 1
  %81 = trunc i64 %77 to i32
  %82 = and i32 %81, 255
  %83 = call i32 @llvm.ctpop.i32(i32 %82)
  %84 = trunc i32 %83 to i8
  %85 = and i8 %84, 1
  %86 = xor i8 %85, 1
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %86, i8* %87, align 1
  %88 = xor i64 296, %74
  %89 = xor i64 %88, %77
  %90 = lshr i64 %89, 4
  %91 = trunc i64 %90 to i8
  %92 = and i8 %91, 1
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %92, i8* %93, align 1
  %94 = icmp eq i64 %77, 0
  %95 = zext i1 %94 to i8
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %95, i8* %96, align 1
  %97 = lshr i64 %77, 63
  %98 = trunc i64 %97 to i8
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %98, i8* %99, align 1
  %100 = lshr i64 %74, 63
  %101 = xor i64 %97, %100
  %102 = add i64 %101, %100
  %103 = icmp eq i64 %102, 2
  %104 = zext i1 %103 to i8
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %104, i8* %105, align 1
  store %struct.Memory* %loadMem_433529, %struct.Memory** %MEMORY
  %loadMem_433530 = load %struct.Memory*, %struct.Memory** %MEMORY
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %107 = getelementptr inbounds %struct.GPR, %struct.GPR* %106, i32 0, i32 33
  %108 = getelementptr inbounds %struct.Reg, %struct.Reg* %107, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %108 to i64*
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %110 = getelementptr inbounds %struct.GPR, %struct.GPR* %109, i32 0, i32 1
  %111 = getelementptr inbounds %struct.Reg, %struct.Reg* %110, i32 0, i32 0
  %RAX.i278 = bitcast %union.anon* %111 to i64*
  %112 = load i64, i64* %PC.i277
  %113 = add i64 %112, 8
  store i64 %113, i64* %PC.i277
  %114 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %114, i64* %RAX.i278, align 8
  store %struct.Memory* %loadMem_433530, %struct.Memory** %MEMORY
  %loadMem_433538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %116 = getelementptr inbounds %struct.GPR, %struct.GPR* %115, i32 0, i32 33
  %117 = getelementptr inbounds %struct.Reg, %struct.Reg* %116, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %117 to i64*
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %119 = getelementptr inbounds %struct.GPR, %struct.GPR* %118, i32 0, i32 1
  %120 = getelementptr inbounds %struct.Reg, %struct.Reg* %119, i32 0, i32 0
  %RAX.i308 = bitcast %union.anon* %120 to i64*
  %121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %122 = getelementptr inbounds %struct.GPR, %struct.GPR* %121, i32 0, i32 5
  %123 = getelementptr inbounds %struct.Reg, %struct.Reg* %122, i32 0, i32 0
  %RCX.i309 = bitcast %union.anon* %123 to i64*
  %124 = load i64, i64* %RAX.i308
  %125 = add i64 %124, 72
  %126 = load i64, i64* %PC.i307
  %127 = add i64 %126, 3
  store i64 %127, i64* %PC.i307
  %128 = inttoptr i64 %125 to i32*
  %129 = load i32, i32* %128
  %130 = zext i32 %129 to i64
  store i64 %130, i64* %RCX.i309, align 8
  store %struct.Memory* %loadMem_433538, %struct.Memory** %MEMORY
  %loadMem_43353b = load %struct.Memory*, %struct.Memory** %MEMORY
  %131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %132 = getelementptr inbounds %struct.GPR, %struct.GPR* %131, i32 0, i32 33
  %133 = getelementptr inbounds %struct.Reg, %struct.Reg* %132, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %133 to i64*
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 1
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %RAX.i326 = bitcast %union.anon* %136 to i64*
  %137 = load i64, i64* %PC.i325
  %138 = add i64 %137, 8
  store i64 %138, i64* %PC.i325
  %139 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %139, i64* %RAX.i326, align 8
  store %struct.Memory* %loadMem_43353b, %struct.Memory** %MEMORY
  %loadMem_433543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %141 = getelementptr inbounds %struct.GPR, %struct.GPR* %140, i32 0, i32 33
  %142 = getelementptr inbounds %struct.Reg, %struct.Reg* %141, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %142 to i64*
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %144 = getelementptr inbounds %struct.GPR, %struct.GPR* %143, i32 0, i32 5
  %145 = getelementptr inbounds %struct.Reg, %struct.Reg* %144, i32 0, i32 0
  %ECX.i359 = bitcast %union.anon* %145 to i32*
  %146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %147 = getelementptr inbounds %struct.GPR, %struct.GPR* %146, i32 0, i32 1
  %148 = getelementptr inbounds %struct.Reg, %struct.Reg* %147, i32 0, i32 0
  %RAX.i360 = bitcast %union.anon* %148 to i64*
  %149 = load i64, i64* %RAX.i360
  %150 = add i64 %149, 72700
  %151 = load i32, i32* %ECX.i359
  %152 = zext i32 %151 to i64
  %153 = load i64, i64* %PC.i358
  %154 = add i64 %153, 6
  store i64 %154, i64* %PC.i358
  %155 = inttoptr i64 %150 to i32*
  store i32 %151, i32* %155
  store %struct.Memory* %loadMem_433543, %struct.Memory** %MEMORY
  %loadMem_433549 = load %struct.Memory*, %struct.Memory** %MEMORY
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 33
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %158 to i64*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 1
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %RAX.i377 = bitcast %union.anon* %161 to i64*
  %162 = load i64, i64* %PC.i376
  %163 = add i64 %162, 8
  store i64 %163, i64* %PC.i376
  %164 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %164, i64* %RAX.i377, align 8
  store %struct.Memory* %loadMem_433549, %struct.Memory** %MEMORY
  %loadMem_433551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 33
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %167 to i64*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 1
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %RAX.i418 = bitcast %union.anon* %170 to i64*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 5
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %RCX.i419 = bitcast %union.anon* %173 to i64*
  %174 = load i64, i64* %RAX.i418
  %175 = add i64 %174, 3296
  %176 = load i64, i64* %PC.i417
  %177 = add i64 %176, 6
  store i64 %177, i64* %PC.i417
  %178 = inttoptr i64 %175 to i32*
  %179 = load i32, i32* %178
  %180 = zext i32 %179 to i64
  store i64 %180, i64* %RCX.i419, align 8
  store %struct.Memory* %loadMem_433551, %struct.Memory** %MEMORY
  %loadMem_433557 = load %struct.Memory*, %struct.Memory** %MEMORY
  %181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %182 = getelementptr inbounds %struct.GPR, %struct.GPR* %181, i32 0, i32 33
  %183 = getelementptr inbounds %struct.Reg, %struct.Reg* %182, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %183 to i64*
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %185 = getelementptr inbounds %struct.GPR, %struct.GPR* %184, i32 0, i32 1
  %186 = getelementptr inbounds %struct.Reg, %struct.Reg* %185, i32 0, i32 0
  %RAX.i436 = bitcast %union.anon* %186 to i64*
  %187 = load i64, i64* %PC.i435
  %188 = add i64 %187, 8
  store i64 %188, i64* %PC.i435
  %189 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %189, i64* %RAX.i436, align 8
  store %struct.Memory* %loadMem_433557, %struct.Memory** %MEMORY
  %loadMem_43355f = load %struct.Memory*, %struct.Memory** %MEMORY
  %190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %191 = getelementptr inbounds %struct.GPR, %struct.GPR* %190, i32 0, i32 33
  %192 = getelementptr inbounds %struct.Reg, %struct.Reg* %191, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %192 to i64*
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %194 = getelementptr inbounds %struct.GPR, %struct.GPR* %193, i32 0, i32 5
  %195 = getelementptr inbounds %struct.Reg, %struct.Reg* %194, i32 0, i32 0
  %ECX.i475 = bitcast %union.anon* %195 to i32*
  %196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %197 = getelementptr inbounds %struct.GPR, %struct.GPR* %196, i32 0, i32 1
  %198 = getelementptr inbounds %struct.Reg, %struct.Reg* %197, i32 0, i32 0
  %RAX.i476 = bitcast %union.anon* %198 to i64*
  %199 = load i64, i64* %RAX.i476
  %200 = add i64 %199, 72660
  %201 = load i32, i32* %ECX.i475
  %202 = zext i32 %201 to i64
  %203 = load i64, i64* %PC.i474
  %204 = add i64 %203, 6
  store i64 %204, i64* %PC.i474
  %205 = inttoptr i64 %200 to i32*
  store i32 %201, i32* %205
  store %struct.Memory* %loadMem_43355f, %struct.Memory** %MEMORY
  %loadMem_433565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %207 = getelementptr inbounds %struct.GPR, %struct.GPR* %206, i32 0, i32 33
  %208 = getelementptr inbounds %struct.Reg, %struct.Reg* %207, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %208 to i64*
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %210 = getelementptr inbounds %struct.GPR, %struct.GPR* %209, i32 0, i32 1
  %211 = getelementptr inbounds %struct.Reg, %struct.Reg* %210, i32 0, i32 0
  %RAX.i493 = bitcast %union.anon* %211 to i64*
  %212 = load i64, i64* %PC.i492
  %213 = add i64 %212, 8
  store i64 %213, i64* %PC.i492
  %214 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %214, i64* %RAX.i493, align 8
  store %struct.Memory* %loadMem_433565, %struct.Memory** %MEMORY
  %loadMem_43356d = load %struct.Memory*, %struct.Memory** %MEMORY
  %215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %216 = getelementptr inbounds %struct.GPR, %struct.GPR* %215, i32 0, i32 33
  %217 = getelementptr inbounds %struct.Reg, %struct.Reg* %216, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %217 to i64*
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %219 = getelementptr inbounds %struct.GPR, %struct.GPR* %218, i32 0, i32 1
  %220 = getelementptr inbounds %struct.Reg, %struct.Reg* %219, i32 0, i32 0
  %RAX.i532 = bitcast %union.anon* %220 to i64*
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 5
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %RCX.i533 = bitcast %union.anon* %223 to i64*
  %224 = load i64, i64* %RAX.i532
  %225 = add i64 %224, 72660
  %226 = load i64, i64* %PC.i531
  %227 = add i64 %226, 6
  store i64 %227, i64* %PC.i531
  %228 = inttoptr i64 %225 to i32*
  %229 = load i32, i32* %228
  %230 = zext i32 %229 to i64
  store i64 %230, i64* %RCX.i533, align 8
  store %struct.Memory* %loadMem_43356d, %struct.Memory** %MEMORY
  %loadMem_433573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 33
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 1
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %RAX.i550 = bitcast %union.anon* %236 to i64*
  %237 = load i64, i64* %PC.i549
  %238 = add i64 %237, 8
  store i64 %238, i64* %PC.i549
  %239 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %239, i64* %RAX.i550, align 8
  store %struct.Memory* %loadMem_433573, %struct.Memory** %MEMORY
  %loadMem_43357b = load %struct.Memory*, %struct.Memory** %MEMORY
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %241 = getelementptr inbounds %struct.GPR, %struct.GPR* %240, i32 0, i32 33
  %242 = getelementptr inbounds %struct.Reg, %struct.Reg* %241, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %242 to i64*
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %244 = getelementptr inbounds %struct.GPR, %struct.GPR* %243, i32 0, i32 5
  %245 = getelementptr inbounds %struct.Reg, %struct.Reg* %244, i32 0, i32 0
  %ECX.i585 = bitcast %union.anon* %245 to i32*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %247 = getelementptr inbounds %struct.GPR, %struct.GPR* %246, i32 0, i32 1
  %248 = getelementptr inbounds %struct.Reg, %struct.Reg* %247, i32 0, i32 0
  %RAX.i586 = bitcast %union.anon* %248 to i64*
  %249 = load i32, i32* %ECX.i585
  %250 = zext i32 %249 to i64
  %251 = load i64, i64* %RAX.i586
  %252 = add i64 %251, 72664
  %253 = load i64, i64* %PC.i584
  %254 = add i64 %253, 6
  store i64 %254, i64* %PC.i584
  %255 = inttoptr i64 %252 to i32*
  %256 = load i32, i32* %255
  %257 = sub i32 %249, %256
  %258 = icmp ult i32 %249, %256
  %259 = zext i1 %258 to i8
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %259, i8* %260, align 1
  %261 = and i32 %257, 255
  %262 = call i32 @llvm.ctpop.i32(i32 %261)
  %263 = trunc i32 %262 to i8
  %264 = and i8 %263, 1
  %265 = xor i8 %264, 1
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %265, i8* %266, align 1
  %267 = xor i32 %256, %249
  %268 = xor i32 %267, %257
  %269 = lshr i32 %268, 4
  %270 = trunc i32 %269 to i8
  %271 = and i8 %270, 1
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %271, i8* %272, align 1
  %273 = icmp eq i32 %257, 0
  %274 = zext i1 %273 to i8
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %274, i8* %275, align 1
  %276 = lshr i32 %257, 31
  %277 = trunc i32 %276 to i8
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %277, i8* %278, align 1
  %279 = lshr i32 %249, 31
  %280 = lshr i32 %256, 31
  %281 = xor i32 %280, %279
  %282 = xor i32 %276, %279
  %283 = add i32 %282, %281
  %284 = icmp eq i32 %283, 2
  %285 = zext i1 %284 to i8
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %285, i8* %286, align 1
  store %struct.Memory* %loadMem_43357b, %struct.Memory** %MEMORY
  %loadMem_433581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %288 = getelementptr inbounds %struct.GPR, %struct.GPR* %287, i32 0, i32 33
  %289 = getelementptr inbounds %struct.Reg, %struct.Reg* %288, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %289 to i64*
  %290 = load i64, i64* %PC.i617
  %291 = add i64 %290, 27
  %292 = load i64, i64* %PC.i617
  %293 = add i64 %292, 6
  %294 = load i64, i64* %PC.i617
  %295 = add i64 %294, 6
  store i64 %295, i64* %PC.i617
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %297 = load i8, i8* %296, align 1
  %298 = icmp eq i8 %297, 0
  %299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %300 = load i8, i8* %299, align 1
  %301 = icmp ne i8 %300, 0
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %303 = load i8, i8* %302, align 1
  %304 = icmp ne i8 %303, 0
  %305 = xor i1 %301, %304
  %306 = xor i1 %305, true
  %307 = and i1 %298, %306
  %308 = zext i1 %307 to i8
  store i8 %308, i8* %BRANCH_TAKEN, align 1
  %309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %310 = select i1 %307, i64 %291, i64 %293
  store i64 %310, i64* %309, align 8
  store %struct.Memory* %loadMem_433581, %struct.Memory** %MEMORY
  %loadBr_433581 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_433581 = icmp eq i8 %loadBr_433581, 1
  br i1 %cmpBr_433581, label %block_.L_43359c, label %block_433587

block_433587:                                     ; preds = %entry
  %loadMem_433587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %312 = getelementptr inbounds %struct.GPR, %struct.GPR* %311, i32 0, i32 33
  %313 = getelementptr inbounds %struct.Reg, %struct.Reg* %312, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %313 to i64*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %315 = getelementptr inbounds %struct.GPR, %struct.GPR* %314, i32 0, i32 1
  %316 = getelementptr inbounds %struct.Reg, %struct.Reg* %315, i32 0, i32 0
  %RAX.i688 = bitcast %union.anon* %316 to i64*
  %317 = load i64, i64* %PC.i687
  %318 = add i64 %317, 8
  store i64 %318, i64* %PC.i687
  %319 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %319, i64* %RAX.i688, align 8
  store %struct.Memory* %loadMem_433587, %struct.Memory** %MEMORY
  %loadMem_43358f = load %struct.Memory*, %struct.Memory** %MEMORY
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %321 = getelementptr inbounds %struct.GPR, %struct.GPR* %320, i32 0, i32 33
  %322 = getelementptr inbounds %struct.Reg, %struct.Reg* %321, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %322 to i64*
  %323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %324 = getelementptr inbounds %struct.GPR, %struct.GPR* %323, i32 0, i32 1
  %325 = getelementptr inbounds %struct.Reg, %struct.Reg* %324, i32 0, i32 0
  %RAX.i709 = bitcast %union.anon* %325 to i64*
  %326 = load i64, i64* %RAX.i709
  %327 = add i64 %326, 72700
  %328 = load i64, i64* %PC.i708
  %329 = add i64 %328, 7
  store i64 %329, i64* %PC.i708
  %330 = inttoptr i64 %327 to i32*
  %331 = load i32, i32* %330
  %332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %332, align 1
  %333 = and i32 %331, 255
  %334 = call i32 @llvm.ctpop.i32(i32 %333)
  %335 = trunc i32 %334 to i8
  %336 = and i8 %335, 1
  %337 = xor i8 %336, 1
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %337, i8* %338, align 1
  %339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %339, align 1
  %340 = icmp eq i32 %331, 0
  %341 = zext i1 %340 to i8
  %342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %341, i8* %342, align 1
  %343 = lshr i32 %331, 31
  %344 = trunc i32 %343 to i8
  %345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %344, i8* %345, align 1
  %346 = lshr i32 %331, 31
  %347 = xor i32 %343, %346
  %348 = add i32 %347, %346
  %349 = icmp eq i32 %348, 2
  %350 = zext i1 %349 to i8
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %350, i8* %351, align 1
  store %struct.Memory* %loadMem_43358f, %struct.Memory** %MEMORY
  %loadMem_433596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %353 = getelementptr inbounds %struct.GPR, %struct.GPR* %352, i32 0, i32 33
  %354 = getelementptr inbounds %struct.Reg, %struct.Reg* %353, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %354 to i64*
  %355 = load i64, i64* %PC.i765
  %356 = add i64 %355, 53
  %357 = load i64, i64* %PC.i765
  %358 = add i64 %357, 6
  %359 = load i64, i64* %PC.i765
  %360 = add i64 %359, 6
  store i64 %360, i64* %PC.i765
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %362 = load i8, i8* %361, align 1
  %363 = icmp eq i8 %362, 0
  %364 = zext i1 %363 to i8
  store i8 %364, i8* %BRANCH_TAKEN, align 1
  %365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %366 = select i1 %363, i64 %356, i64 %358
  store i64 %366, i64* %365, align 8
  store %struct.Memory* %loadMem_433596, %struct.Memory** %MEMORY
  %loadBr_433596 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_433596 = icmp eq i8 %loadBr_433596, 1
  br i1 %cmpBr_433596, label %block_.L_4335cb, label %block_.L_43359c

block_.L_43359c:                                  ; preds = %block_433587, %entry
  %loadMem_43359c = load %struct.Memory*, %struct.Memory** %MEMORY
  %367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %368 = getelementptr inbounds %struct.GPR, %struct.GPR* %367, i32 0, i32 33
  %369 = getelementptr inbounds %struct.Reg, %struct.Reg* %368, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %369 to i64*
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %371 = getelementptr inbounds %struct.GPR, %struct.GPR* %370, i32 0, i32 1
  %372 = getelementptr inbounds %struct.Reg, %struct.Reg* %371, i32 0, i32 0
  %RAX.i781 = bitcast %union.anon* %372 to i64*
  %373 = load i64, i64* %PC.i780
  %374 = add i64 %373, 5
  store i64 %374, i64* %PC.i780
  store i64 8, i64* %RAX.i781, align 8
  store %struct.Memory* %loadMem_43359c, %struct.Memory** %MEMORY
  %loadMem_4335a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %376 = getelementptr inbounds %struct.GPR, %struct.GPR* %375, i32 0, i32 33
  %377 = getelementptr inbounds %struct.Reg, %struct.Reg* %376, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %377 to i64*
  %378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %379 = getelementptr inbounds %struct.GPR, %struct.GPR* %378, i32 0, i32 5
  %380 = getelementptr inbounds %struct.Reg, %struct.Reg* %379, i32 0, i32 0
  %RCX.i805 = bitcast %union.anon* %380 to i64*
  %381 = load i64, i64* %PC.i804
  %382 = add i64 %381, 5
  store i64 %382, i64* %PC.i804
  store i64 16, i64* %RCX.i805, align 8
  store %struct.Memory* %loadMem_4335a1, %struct.Memory** %MEMORY
  %loadMem_4335a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %384 = getelementptr inbounds %struct.GPR, %struct.GPR* %383, i32 0, i32 33
  %385 = getelementptr inbounds %struct.Reg, %struct.Reg* %384, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %385 to i64*
  %386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %387 = getelementptr inbounds %struct.GPR, %struct.GPR* %386, i32 0, i32 7
  %388 = getelementptr inbounds %struct.Reg, %struct.Reg* %387, i32 0, i32 0
  %RDX.i821 = bitcast %union.anon* %388 to i64*
  %389 = load i64, i64* %PC.i820
  %390 = add i64 %389, 8
  store i64 %390, i64* %PC.i820
  %391 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %391, i64* %RDX.i821, align 8
  store %struct.Memory* %loadMem_4335a6, %struct.Memory** %MEMORY
  %loadMem_4335ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %393 = getelementptr inbounds %struct.GPR, %struct.GPR* %392, i32 0, i32 33
  %394 = getelementptr inbounds %struct.Reg, %struct.Reg* %393, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %394 to i64*
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %396 = getelementptr inbounds %struct.GPR, %struct.GPR* %395, i32 0, i32 7
  %397 = getelementptr inbounds %struct.Reg, %struct.Reg* %396, i32 0, i32 0
  %RDX.i845 = bitcast %union.anon* %397 to i64*
  %398 = load i64, i64* %RDX.i845
  %399 = add i64 %398, 72660
  %400 = load i64, i64* %PC.i844
  %401 = add i64 %400, 7
  store i64 %401, i64* %PC.i844
  %402 = inttoptr i64 %399 to i32*
  %403 = load i32, i32* %402
  %404 = sub i32 %403, 8
  %405 = icmp ult i32 %403, 8
  %406 = zext i1 %405 to i8
  %407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %406, i8* %407, align 1
  %408 = and i32 %404, 255
  %409 = call i32 @llvm.ctpop.i32(i32 %408)
  %410 = trunc i32 %409 to i8
  %411 = and i8 %410, 1
  %412 = xor i8 %411, 1
  %413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %412, i8* %413, align 1
  %414 = xor i32 %403, 8
  %415 = xor i32 %414, %404
  %416 = lshr i32 %415, 4
  %417 = trunc i32 %416 to i8
  %418 = and i8 %417, 1
  %419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %418, i8* %419, align 1
  %420 = icmp eq i32 %404, 0
  %421 = zext i1 %420 to i8
  %422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %421, i8* %422, align 1
  %423 = lshr i32 %404, 31
  %424 = trunc i32 %423 to i8
  %425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %424, i8* %425, align 1
  %426 = lshr i32 %403, 31
  %427 = xor i32 %423, %426
  %428 = add i32 %427, %426
  %429 = icmp eq i32 %428, 2
  %430 = zext i1 %429 to i8
  %431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %430, i8* %431, align 1
  store %struct.Memory* %loadMem_4335ae, %struct.Memory** %MEMORY
  %loadMem_4335b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %433 = getelementptr inbounds %struct.GPR, %struct.GPR* %432, i32 0, i32 33
  %434 = getelementptr inbounds %struct.Reg, %struct.Reg* %433, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %434 to i64*
  %435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %436 = getelementptr inbounds %struct.GPR, %struct.GPR* %435, i32 0, i32 5
  %437 = getelementptr inbounds %struct.Reg, %struct.Reg* %436, i32 0, i32 0
  %ECX.i862 = bitcast %union.anon* %437 to i32*
  %438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %439 = getelementptr inbounds %struct.GPR, %struct.GPR* %438, i32 0, i32 1
  %440 = getelementptr inbounds %struct.Reg, %struct.Reg* %439, i32 0, i32 0
  %RAX.i863 = bitcast %union.anon* %440 to i64*
  %441 = load i32, i32* %ECX.i862
  %442 = zext i32 %441 to i64
  %443 = load i64, i64* %PC.i861
  %444 = add i64 %443, 3
  store i64 %444, i64* %PC.i861
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %446 = load i8, i8* %445, align 1
  %447 = icmp eq i8 %446, 0
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %449 = load i8, i8* %448, align 1
  %450 = icmp ne i8 %449, 0
  %451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %452 = load i8, i8* %451, align 1
  %453 = icmp ne i8 %452, 0
  %454 = xor i1 %450, %453
  %455 = xor i1 %454, true
  %456 = and i1 %447, %455
  %457 = load i64, i64* %RAX.i863, align 8
  %458 = select i1 %456, i64 %442, i64 %457
  %459 = and i64 %458, 4294967295
  store i64 %459, i64* %RAX.i863, align 8
  store %struct.Memory* %loadMem_4335b5, %struct.Memory** %MEMORY
  %loadMem_4335b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %461 = getelementptr inbounds %struct.GPR, %struct.GPR* %460, i32 0, i32 33
  %462 = getelementptr inbounds %struct.Reg, %struct.Reg* %461, i32 0, i32 0
  %PC.i890 = bitcast %union.anon* %462 to i64*
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %464 = getelementptr inbounds %struct.GPR, %struct.GPR* %463, i32 0, i32 7
  %465 = getelementptr inbounds %struct.Reg, %struct.Reg* %464, i32 0, i32 0
  %RDX.i891 = bitcast %union.anon* %465 to i64*
  %466 = load i64, i64* %PC.i890
  %467 = add i64 %466, 8
  store i64 %467, i64* %PC.i890
  %468 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %468, i64* %RDX.i891, align 8
  store %struct.Memory* %loadMem_4335b8, %struct.Memory** %MEMORY
  %loadMem_4335c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %470 = getelementptr inbounds %struct.GPR, %struct.GPR* %469, i32 0, i32 33
  %471 = getelementptr inbounds %struct.Reg, %struct.Reg* %470, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %471 to i64*
  %472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %473 = getelementptr inbounds %struct.GPR, %struct.GPR* %472, i32 0, i32 1
  %474 = getelementptr inbounds %struct.Reg, %struct.Reg* %473, i32 0, i32 0
  %EAX.i909 = bitcast %union.anon* %474 to i32*
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %476 = getelementptr inbounds %struct.GPR, %struct.GPR* %475, i32 0, i32 7
  %477 = getelementptr inbounds %struct.Reg, %struct.Reg* %476, i32 0, i32 0
  %RDX.i910 = bitcast %union.anon* %477 to i64*
  %478 = load i64, i64* %RDX.i910
  %479 = add i64 %478, 72656
  %480 = load i32, i32* %EAX.i909
  %481 = zext i32 %480 to i64
  %482 = load i64, i64* %PC.i908
  %483 = add i64 %482, 6
  store i64 %483, i64* %PC.i908
  %484 = inttoptr i64 %479 to i32*
  store i32 %480, i32* %484
  store %struct.Memory* %loadMem_4335c0, %struct.Memory** %MEMORY
  %loadMem_4335c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %486 = getelementptr inbounds %struct.GPR, %struct.GPR* %485, i32 0, i32 33
  %487 = getelementptr inbounds %struct.Reg, %struct.Reg* %486, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %487 to i64*
  %488 = load i64, i64* %PC.i1014
  %489 = add i64 %488, 47
  %490 = load i64, i64* %PC.i1014
  %491 = add i64 %490, 5
  store i64 %491, i64* %PC.i1014
  %492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %489, i64* %492, align 8
  store %struct.Memory* %loadMem_4335c6, %struct.Memory** %MEMORY
  br label %block_.L_4335f5

block_.L_4335cb:                                  ; preds = %block_433587
  %loadMem_4335cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %494 = getelementptr inbounds %struct.GPR, %struct.GPR* %493, i32 0, i32 33
  %495 = getelementptr inbounds %struct.Reg, %struct.Reg* %494, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %495 to i64*
  %496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %497 = getelementptr inbounds %struct.GPR, %struct.GPR* %496, i32 0, i32 1
  %498 = getelementptr inbounds %struct.Reg, %struct.Reg* %497, i32 0, i32 0
  %RAX.i1055 = bitcast %union.anon* %498 to i64*
  %499 = load i64, i64* %PC.i1054
  %500 = add i64 %499, 5
  store i64 %500, i64* %PC.i1054
  store i64 8, i64* %RAX.i1055, align 8
  store %struct.Memory* %loadMem_4335cb, %struct.Memory** %MEMORY
  %loadMem_4335d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %502 = getelementptr inbounds %struct.GPR, %struct.GPR* %501, i32 0, i32 33
  %503 = getelementptr inbounds %struct.Reg, %struct.Reg* %502, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %503 to i64*
  %504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %505 = getelementptr inbounds %struct.GPR, %struct.GPR* %504, i32 0, i32 5
  %506 = getelementptr inbounds %struct.Reg, %struct.Reg* %505, i32 0, i32 0
  %RCX.i1083 = bitcast %union.anon* %506 to i64*
  %507 = load i64, i64* %PC.i1082
  %508 = add i64 %507, 5
  store i64 %508, i64* %PC.i1082
  store i64 16, i64* %RCX.i1083, align 8
  store %struct.Memory* %loadMem_4335d0, %struct.Memory** %MEMORY
  %loadMem_4335d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %510 = getelementptr inbounds %struct.GPR, %struct.GPR* %509, i32 0, i32 33
  %511 = getelementptr inbounds %struct.Reg, %struct.Reg* %510, i32 0, i32 0
  %PC.i1780 = bitcast %union.anon* %511 to i64*
  %512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %513 = getelementptr inbounds %struct.GPR, %struct.GPR* %512, i32 0, i32 7
  %514 = getelementptr inbounds %struct.Reg, %struct.Reg* %513, i32 0, i32 0
  %RDX.i1781 = bitcast %union.anon* %514 to i64*
  %515 = load i64, i64* %PC.i1780
  %516 = add i64 %515, 8
  store i64 %516, i64* %PC.i1780
  %517 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %517, i64* %RDX.i1781, align 8
  store %struct.Memory* %loadMem_4335d5, %struct.Memory** %MEMORY
  %loadMem_4335dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %519 = getelementptr inbounds %struct.GPR, %struct.GPR* %518, i32 0, i32 33
  %520 = getelementptr inbounds %struct.Reg, %struct.Reg* %519, i32 0, i32 0
  %PC.i1778 = bitcast %union.anon* %520 to i64*
  %521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %522 = getelementptr inbounds %struct.GPR, %struct.GPR* %521, i32 0, i32 7
  %523 = getelementptr inbounds %struct.Reg, %struct.Reg* %522, i32 0, i32 0
  %RDX.i1779 = bitcast %union.anon* %523 to i64*
  %524 = load i64, i64* %RDX.i1779
  %525 = add i64 %524, 72664
  %526 = load i64, i64* %PC.i1778
  %527 = add i64 %526, 7
  store i64 %527, i64* %PC.i1778
  %528 = inttoptr i64 %525 to i32*
  %529 = load i32, i32* %528
  %530 = sub i32 %529, 8
  %531 = icmp ult i32 %529, 8
  %532 = zext i1 %531 to i8
  %533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %532, i8* %533, align 1
  %534 = and i32 %530, 255
  %535 = call i32 @llvm.ctpop.i32(i32 %534)
  %536 = trunc i32 %535 to i8
  %537 = and i8 %536, 1
  %538 = xor i8 %537, 1
  %539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %538, i8* %539, align 1
  %540 = xor i32 %529, 8
  %541 = xor i32 %540, %530
  %542 = lshr i32 %541, 4
  %543 = trunc i32 %542 to i8
  %544 = and i8 %543, 1
  %545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %544, i8* %545, align 1
  %546 = icmp eq i32 %530, 0
  %547 = zext i1 %546 to i8
  %548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %547, i8* %548, align 1
  %549 = lshr i32 %530, 31
  %550 = trunc i32 %549 to i8
  %551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %550, i8* %551, align 1
  %552 = lshr i32 %529, 31
  %553 = xor i32 %549, %552
  %554 = add i32 %553, %552
  %555 = icmp eq i32 %554, 2
  %556 = zext i1 %555 to i8
  %557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %556, i8* %557, align 1
  store %struct.Memory* %loadMem_4335dd, %struct.Memory** %MEMORY
  %loadMem_4335e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %559 = getelementptr inbounds %struct.GPR, %struct.GPR* %558, i32 0, i32 33
  %560 = getelementptr inbounds %struct.Reg, %struct.Reg* %559, i32 0, i32 0
  %PC.i1775 = bitcast %union.anon* %560 to i64*
  %561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %562 = getelementptr inbounds %struct.GPR, %struct.GPR* %561, i32 0, i32 5
  %563 = getelementptr inbounds %struct.Reg, %struct.Reg* %562, i32 0, i32 0
  %ECX.i1776 = bitcast %union.anon* %563 to i32*
  %564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %565 = getelementptr inbounds %struct.GPR, %struct.GPR* %564, i32 0, i32 1
  %566 = getelementptr inbounds %struct.Reg, %struct.Reg* %565, i32 0, i32 0
  %RAX.i1777 = bitcast %union.anon* %566 to i64*
  %567 = load i32, i32* %ECX.i1776
  %568 = zext i32 %567 to i64
  %569 = load i64, i64* %PC.i1775
  %570 = add i64 %569, 3
  store i64 %570, i64* %PC.i1775
  %571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %572 = load i8, i8* %571, align 1
  %573 = icmp eq i8 %572, 0
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %575 = load i8, i8* %574, align 1
  %576 = icmp ne i8 %575, 0
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %578 = load i8, i8* %577, align 1
  %579 = icmp ne i8 %578, 0
  %580 = xor i1 %576, %579
  %581 = xor i1 %580, true
  %582 = and i1 %573, %581
  %583 = load i64, i64* %RAX.i1777, align 8
  %584 = select i1 %582, i64 %568, i64 %583
  %585 = and i64 %584, 4294967295
  store i64 %585, i64* %RAX.i1777, align 8
  store %struct.Memory* %loadMem_4335e4, %struct.Memory** %MEMORY
  %loadMem_4335e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %587 = getelementptr inbounds %struct.GPR, %struct.GPR* %586, i32 0, i32 33
  %588 = getelementptr inbounds %struct.Reg, %struct.Reg* %587, i32 0, i32 0
  %PC.i1773 = bitcast %union.anon* %588 to i64*
  %589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %590 = getelementptr inbounds %struct.GPR, %struct.GPR* %589, i32 0, i32 7
  %591 = getelementptr inbounds %struct.Reg, %struct.Reg* %590, i32 0, i32 0
  %RDX.i1774 = bitcast %union.anon* %591 to i64*
  %592 = load i64, i64* %PC.i1773
  %593 = add i64 %592, 8
  store i64 %593, i64* %PC.i1773
  %594 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %594, i64* %RDX.i1774, align 8
  store %struct.Memory* %loadMem_4335e7, %struct.Memory** %MEMORY
  %loadMem_4335ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %596 = getelementptr inbounds %struct.GPR, %struct.GPR* %595, i32 0, i32 33
  %597 = getelementptr inbounds %struct.Reg, %struct.Reg* %596, i32 0, i32 0
  %PC.i1770 = bitcast %union.anon* %597 to i64*
  %598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %599 = getelementptr inbounds %struct.GPR, %struct.GPR* %598, i32 0, i32 1
  %600 = getelementptr inbounds %struct.Reg, %struct.Reg* %599, i32 0, i32 0
  %EAX.i1771 = bitcast %union.anon* %600 to i32*
  %601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %602 = getelementptr inbounds %struct.GPR, %struct.GPR* %601, i32 0, i32 7
  %603 = getelementptr inbounds %struct.Reg, %struct.Reg* %602, i32 0, i32 0
  %RDX.i1772 = bitcast %union.anon* %603 to i64*
  %604 = load i64, i64* %RDX.i1772
  %605 = add i64 %604, 72656
  %606 = load i32, i32* %EAX.i1771
  %607 = zext i32 %606 to i64
  %608 = load i64, i64* %PC.i1770
  %609 = add i64 %608, 6
  store i64 %609, i64* %PC.i1770
  %610 = inttoptr i64 %605 to i32*
  store i32 %606, i32* %610
  store %struct.Memory* %loadMem_4335ef, %struct.Memory** %MEMORY
  br label %block_.L_4335f5

block_.L_4335f5:                                  ; preds = %block_.L_4335cb, %block_.L_43359c
  %loadMem_4335f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %612 = getelementptr inbounds %struct.GPR, %struct.GPR* %611, i32 0, i32 33
  %613 = getelementptr inbounds %struct.Reg, %struct.Reg* %612, i32 0, i32 0
  %PC.i1768 = bitcast %union.anon* %613 to i64*
  %614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %615 = getelementptr inbounds %struct.GPR, %struct.GPR* %614, i32 0, i32 1
  %616 = getelementptr inbounds %struct.Reg, %struct.Reg* %615, i32 0, i32 0
  %RAX.i1769 = bitcast %union.anon* %616 to i64*
  %617 = load i64, i64* %PC.i1768
  %618 = add i64 %617, 5
  store i64 %618, i64* %PC.i1768
  store i64 1, i64* %RAX.i1769, align 8
  store %struct.Memory* %loadMem_4335f5, %struct.Memory** %MEMORY
  %loadMem_4335fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %620 = getelementptr inbounds %struct.GPR, %struct.GPR* %619, i32 0, i32 33
  %621 = getelementptr inbounds %struct.Reg, %struct.Reg* %620, i32 0, i32 0
  %PC.i1766 = bitcast %union.anon* %621 to i64*
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %623 = getelementptr inbounds %struct.GPR, %struct.GPR* %622, i32 0, i32 5
  %624 = getelementptr inbounds %struct.Reg, %struct.Reg* %623, i32 0, i32 0
  %RCX.i1767 = bitcast %union.anon* %624 to i64*
  %625 = load i64, i64* %PC.i1766
  %626 = add i64 %625, 8
  store i64 %626, i64* %PC.i1766
  %627 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %627, i64* %RCX.i1767, align 8
  store %struct.Memory* %loadMem_4335fa, %struct.Memory** %MEMORY
  %loadMem_433602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %629 = getelementptr inbounds %struct.GPR, %struct.GPR* %628, i32 0, i32 33
  %630 = getelementptr inbounds %struct.Reg, %struct.Reg* %629, i32 0, i32 0
  %PC.i1763 = bitcast %union.anon* %630 to i64*
  %631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %632 = getelementptr inbounds %struct.GPR, %struct.GPR* %631, i32 0, i32 5
  %633 = getelementptr inbounds %struct.Reg, %struct.Reg* %632, i32 0, i32 0
  %RCX.i1764 = bitcast %union.anon* %633 to i64*
  %634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %635 = getelementptr inbounds %struct.GPR, %struct.GPR* %634, i32 0, i32 7
  %636 = getelementptr inbounds %struct.Reg, %struct.Reg* %635, i32 0, i32 0
  %RDX.i1765 = bitcast %union.anon* %636 to i64*
  %637 = load i64, i64* %RCX.i1764
  %638 = add i64 %637, 72660
  %639 = load i64, i64* %PC.i1763
  %640 = add i64 %639, 6
  store i64 %640, i64* %PC.i1763
  %641 = inttoptr i64 %638 to i32*
  %642 = load i32, i32* %641
  %643 = zext i32 %642 to i64
  store i64 %643, i64* %RDX.i1765, align 8
  store %struct.Memory* %loadMem_433602, %struct.Memory** %MEMORY
  %loadMem_433608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %645 = getelementptr inbounds %struct.GPR, %struct.GPR* %644, i32 0, i32 33
  %646 = getelementptr inbounds %struct.Reg, %struct.Reg* %645, i32 0, i32 0
  %PC.i1761 = bitcast %union.anon* %646 to i64*
  %647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %648 = getelementptr inbounds %struct.GPR, %struct.GPR* %647, i32 0, i32 7
  %649 = getelementptr inbounds %struct.Reg, %struct.Reg* %648, i32 0, i32 0
  %RDX.i1762 = bitcast %union.anon* %649 to i64*
  %650 = load i64, i64* %RDX.i1762
  %651 = load i64, i64* %PC.i1761
  %652 = add i64 %651, 3
  store i64 %652, i64* %PC.i1761
  %653 = trunc i64 %650 to i32
  %654 = sub i32 %653, 8
  %655 = zext i32 %654 to i64
  store i64 %655, i64* %RDX.i1762, align 8
  %656 = icmp ult i32 %653, 8
  %657 = zext i1 %656 to i8
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %657, i8* %658, align 1
  %659 = and i32 %654, 255
  %660 = call i32 @llvm.ctpop.i32(i32 %659)
  %661 = trunc i32 %660 to i8
  %662 = and i8 %661, 1
  %663 = xor i8 %662, 1
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %663, i8* %664, align 1
  %665 = xor i64 8, %650
  %666 = trunc i64 %665 to i32
  %667 = xor i32 %666, %654
  %668 = lshr i32 %667, 4
  %669 = trunc i32 %668 to i8
  %670 = and i8 %669, 1
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %670, i8* %671, align 1
  %672 = icmp eq i32 %654, 0
  %673 = zext i1 %672 to i8
  %674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %673, i8* %674, align 1
  %675 = lshr i32 %654, 31
  %676 = trunc i32 %675 to i8
  %677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %676, i8* %677, align 1
  %678 = lshr i32 %653, 31
  %679 = xor i32 %675, %678
  %680 = add i32 %679, %678
  %681 = icmp eq i32 %680, 2
  %682 = zext i1 %681 to i8
  %683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %682, i8* %683, align 1
  store %struct.Memory* %loadMem_433608, %struct.Memory** %MEMORY
  %loadMem_43360b = load %struct.Memory*, %struct.Memory** %MEMORY
  %684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %685 = getelementptr inbounds %struct.GPR, %struct.GPR* %684, i32 0, i32 33
  %686 = getelementptr inbounds %struct.Reg, %struct.Reg* %685, i32 0, i32 0
  %PC.i1758 = bitcast %union.anon* %686 to i64*
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %688 = getelementptr inbounds %struct.GPR, %struct.GPR* %687, i32 0, i32 7
  %689 = getelementptr inbounds %struct.Reg, %struct.Reg* %688, i32 0, i32 0
  %EDX.i1759 = bitcast %union.anon* %689 to i32*
  %690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %691 = getelementptr inbounds %struct.GPR, %struct.GPR* %690, i32 0, i32 7
  %692 = getelementptr inbounds %struct.Reg, %struct.Reg* %691, i32 0, i32 0
  %RDX.i1760 = bitcast %union.anon* %692 to i64*
  %693 = load i32, i32* %EDX.i1759
  %694 = zext i32 %693 to i64
  %695 = load i64, i64* %PC.i1758
  %696 = add i64 %695, 3
  store i64 %696, i64* %PC.i1758
  %697 = shl i64 %694, 32
  %698 = ashr exact i64 %697, 32
  %699 = mul i64 6, %698
  %700 = trunc i64 %699 to i32
  %701 = and i64 %699, 4294967295
  store i64 %701, i64* %RDX.i1760, align 8
  %702 = shl i64 %699, 32
  %703 = ashr exact i64 %702, 32
  %704 = icmp ne i64 %703, %699
  %705 = zext i1 %704 to i8
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %705, i8* %706, align 1
  %707 = and i32 %700, 255
  %708 = call i32 @llvm.ctpop.i32(i32 %707)
  %709 = trunc i32 %708 to i8
  %710 = and i8 %709, 1
  %711 = xor i8 %710, 1
  %712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %711, i8* %712, align 1
  %713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %713, align 1
  %714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %714, align 1
  %715 = lshr i32 %700, 31
  %716 = trunc i32 %715 to i8
  %717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %716, i8* %717, align 1
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %705, i8* %718, align 1
  store %struct.Memory* %loadMem_43360b, %struct.Memory** %MEMORY
  %loadMem_43360e = load %struct.Memory*, %struct.Memory** %MEMORY
  %719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %720 = getelementptr inbounds %struct.GPR, %struct.GPR* %719, i32 0, i32 33
  %721 = getelementptr inbounds %struct.Reg, %struct.Reg* %720, i32 0, i32 0
  %PC.i1756 = bitcast %union.anon* %721 to i64*
  %722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %723 = getelementptr inbounds %struct.GPR, %struct.GPR* %722, i32 0, i32 5
  %724 = getelementptr inbounds %struct.Reg, %struct.Reg* %723, i32 0, i32 0
  %RCX.i1757 = bitcast %union.anon* %724 to i64*
  %725 = load i64, i64* %PC.i1756
  %726 = add i64 %725, 8
  store i64 %726, i64* %PC.i1756
  %727 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %727, i64* %RCX.i1757, align 8
  store %struct.Memory* %loadMem_43360e, %struct.Memory** %MEMORY
  %loadMem_433616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %729 = getelementptr inbounds %struct.GPR, %struct.GPR* %728, i32 0, i32 33
  %730 = getelementptr inbounds %struct.Reg, %struct.Reg* %729, i32 0, i32 0
  %PC.i1753 = bitcast %union.anon* %730 to i64*
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %732 = getelementptr inbounds %struct.GPR, %struct.GPR* %731, i32 0, i32 7
  %733 = getelementptr inbounds %struct.Reg, %struct.Reg* %732, i32 0, i32 0
  %EDX.i1754 = bitcast %union.anon* %733 to i32*
  %734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %735 = getelementptr inbounds %struct.GPR, %struct.GPR* %734, i32 0, i32 5
  %736 = getelementptr inbounds %struct.Reg, %struct.Reg* %735, i32 0, i32 0
  %RCX.i1755 = bitcast %union.anon* %736 to i64*
  %737 = load i64, i64* %RCX.i1755
  %738 = add i64 %737, 72668
  %739 = load i32, i32* %EDX.i1754
  %740 = zext i32 %739 to i64
  %741 = load i64, i64* %PC.i1753
  %742 = add i64 %741, 6
  store i64 %742, i64* %PC.i1753
  %743 = inttoptr i64 %738 to i32*
  store i32 %739, i32* %743
  store %struct.Memory* %loadMem_433616, %struct.Memory** %MEMORY
  %loadMem_43361c = load %struct.Memory*, %struct.Memory** %MEMORY
  %744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %745 = getelementptr inbounds %struct.GPR, %struct.GPR* %744, i32 0, i32 33
  %746 = getelementptr inbounds %struct.Reg, %struct.Reg* %745, i32 0, i32 0
  %PC.i1751 = bitcast %union.anon* %746 to i64*
  %747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %748 = getelementptr inbounds %struct.GPR, %struct.GPR* %747, i32 0, i32 5
  %749 = getelementptr inbounds %struct.Reg, %struct.Reg* %748, i32 0, i32 0
  %RCX.i1752 = bitcast %union.anon* %749 to i64*
  %750 = load i64, i64* %PC.i1751
  %751 = add i64 %750, 8
  store i64 %751, i64* %PC.i1751
  %752 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %752, i64* %RCX.i1752, align 8
  store %struct.Memory* %loadMem_43361c, %struct.Memory** %MEMORY
  %loadMem_433624 = load %struct.Memory*, %struct.Memory** %MEMORY
  %753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %754 = getelementptr inbounds %struct.GPR, %struct.GPR* %753, i32 0, i32 33
  %755 = getelementptr inbounds %struct.Reg, %struct.Reg* %754, i32 0, i32 0
  %PC.i1748 = bitcast %union.anon* %755 to i64*
  %756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %757 = getelementptr inbounds %struct.GPR, %struct.GPR* %756, i32 0, i32 5
  %758 = getelementptr inbounds %struct.Reg, %struct.Reg* %757, i32 0, i32 0
  %RCX.i1749 = bitcast %union.anon* %758 to i64*
  %759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %760 = getelementptr inbounds %struct.GPR, %struct.GPR* %759, i32 0, i32 7
  %761 = getelementptr inbounds %struct.Reg, %struct.Reg* %760, i32 0, i32 0
  %RDX.i1750 = bitcast %union.anon* %761 to i64*
  %762 = load i64, i64* %RCX.i1749
  %763 = add i64 %762, 72660
  %764 = load i64, i64* %PC.i1748
  %765 = add i64 %764, 6
  store i64 %765, i64* %PC.i1748
  %766 = inttoptr i64 %763 to i32*
  %767 = load i32, i32* %766
  %768 = zext i32 %767 to i64
  store i64 %768, i64* %RDX.i1750, align 8
  store %struct.Memory* %loadMem_433624, %struct.Memory** %MEMORY
  %loadMem_43362a = load %struct.Memory*, %struct.Memory** %MEMORY
  %769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %770 = getelementptr inbounds %struct.GPR, %struct.GPR* %769, i32 0, i32 33
  %771 = getelementptr inbounds %struct.Reg, %struct.Reg* %770, i32 0, i32 0
  %PC.i1746 = bitcast %union.anon* %771 to i64*
  %772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %773 = getelementptr inbounds %struct.GPR, %struct.GPR* %772, i32 0, i32 7
  %774 = getelementptr inbounds %struct.Reg, %struct.Reg* %773, i32 0, i32 0
  %RDX.i1747 = bitcast %union.anon* %774 to i64*
  %775 = load i64, i64* %RDX.i1747
  %776 = load i64, i64* %PC.i1746
  %777 = add i64 %776, 3
  store i64 %777, i64* %PC.i1746
  %778 = trunc i64 %775 to i32
  %779 = sub i32 %778, 8
  %780 = zext i32 %779 to i64
  store i64 %780, i64* %RDX.i1747, align 8
  %781 = icmp ult i32 %778, 8
  %782 = zext i1 %781 to i8
  %783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %782, i8* %783, align 1
  %784 = and i32 %779, 255
  %785 = call i32 @llvm.ctpop.i32(i32 %784)
  %786 = trunc i32 %785 to i8
  %787 = and i8 %786, 1
  %788 = xor i8 %787, 1
  %789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %788, i8* %789, align 1
  %790 = xor i64 8, %775
  %791 = trunc i64 %790 to i32
  %792 = xor i32 %791, %779
  %793 = lshr i32 %792, 4
  %794 = trunc i32 %793 to i8
  %795 = and i8 %794, 1
  %796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %795, i8* %796, align 1
  %797 = icmp eq i32 %779, 0
  %798 = zext i1 %797 to i8
  %799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %798, i8* %799, align 1
  %800 = lshr i32 %779, 31
  %801 = trunc i32 %800 to i8
  %802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %801, i8* %802, align 1
  %803 = lshr i32 %778, 31
  %804 = xor i32 %800, %803
  %805 = add i32 %804, %803
  %806 = icmp eq i32 %805, 2
  %807 = zext i1 %806 to i8
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %807, i8* %808, align 1
  store %struct.Memory* %loadMem_43362a, %struct.Memory** %MEMORY
  %loadMem_43362d = load %struct.Memory*, %struct.Memory** %MEMORY
  %809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %810 = getelementptr inbounds %struct.GPR, %struct.GPR* %809, i32 0, i32 33
  %811 = getelementptr inbounds %struct.Reg, %struct.Reg* %810, i32 0, i32 0
  %PC.i1744 = bitcast %union.anon* %811 to i64*
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 7
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %RDX.i1745 = bitcast %union.anon* %814 to i64*
  %815 = load i64, i64* %RDX.i1745
  %816 = load i64, i64* %PC.i1744
  %817 = add i64 %816, 2
  store i64 %817, i64* %PC.i1744
  %818 = trunc i64 %815 to i32
  %819 = shl i32 %818, 1
  %820 = icmp slt i32 %818, 0
  %821 = icmp slt i32 %819, 0
  %822 = xor i1 %820, %821
  %823 = zext i32 %819 to i64
  store i64 %823, i64* %RDX.i1745, align 8
  %824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %825 = zext i1 %820 to i8
  store i8 %825, i8* %824, align 1
  %826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %827 = and i32 %819, 254
  %828 = call i32 @llvm.ctpop.i32(i32 %827)
  %829 = trunc i32 %828 to i8
  %830 = and i8 %829, 1
  %831 = xor i8 %830, 1
  store i8 %831, i8* %826, align 1
  %832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %832, align 1
  %833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %834 = icmp eq i32 %819, 0
  %835 = zext i1 %834 to i8
  store i8 %835, i8* %833, align 1
  %836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %837 = lshr i32 %819, 31
  %838 = trunc i32 %837 to i8
  store i8 %838, i8* %836, align 1
  %839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %840 = zext i1 %822 to i8
  store i8 %840, i8* %839, align 1
  store %struct.Memory* %loadMem_43362d, %struct.Memory** %MEMORY
  %loadMem_433630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %842 = getelementptr inbounds %struct.GPR, %struct.GPR* %841, i32 0, i32 33
  %843 = getelementptr inbounds %struct.Reg, %struct.Reg* %842, i32 0, i32 0
  %PC.i1742 = bitcast %union.anon* %843 to i64*
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %845 = getelementptr inbounds %struct.GPR, %struct.GPR* %844, i32 0, i32 5
  %846 = getelementptr inbounds %struct.Reg, %struct.Reg* %845, i32 0, i32 0
  %RCX.i1743 = bitcast %union.anon* %846 to i64*
  %847 = load i64, i64* %PC.i1742
  %848 = add i64 %847, 8
  store i64 %848, i64* %PC.i1742
  %849 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %849, i64* %RCX.i1743, align 8
  store %struct.Memory* %loadMem_433630, %struct.Memory** %MEMORY
  %loadMem_433638 = load %struct.Memory*, %struct.Memory** %MEMORY
  %850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %851 = getelementptr inbounds %struct.GPR, %struct.GPR* %850, i32 0, i32 33
  %852 = getelementptr inbounds %struct.Reg, %struct.Reg* %851, i32 0, i32 0
  %PC.i1739 = bitcast %union.anon* %852 to i64*
  %853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %854 = getelementptr inbounds %struct.GPR, %struct.GPR* %853, i32 0, i32 7
  %855 = getelementptr inbounds %struct.Reg, %struct.Reg* %854, i32 0, i32 0
  %EDX.i1740 = bitcast %union.anon* %855 to i32*
  %856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %857 = getelementptr inbounds %struct.GPR, %struct.GPR* %856, i32 0, i32 5
  %858 = getelementptr inbounds %struct.Reg, %struct.Reg* %857, i32 0, i32 0
  %RCX.i1741 = bitcast %union.anon* %858 to i64*
  %859 = load i64, i64* %RCX.i1741
  %860 = add i64 %859, 72676
  %861 = load i32, i32* %EDX.i1740
  %862 = zext i32 %861 to i64
  %863 = load i64, i64* %PC.i1739
  %864 = add i64 %863, 6
  store i64 %864, i64* %PC.i1739
  %865 = inttoptr i64 %860 to i32*
  store i32 %861, i32* %865
  store %struct.Memory* %loadMem_433638, %struct.Memory** %MEMORY
  %loadMem_43363e = load %struct.Memory*, %struct.Memory** %MEMORY
  %866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %867 = getelementptr inbounds %struct.GPR, %struct.GPR* %866, i32 0, i32 33
  %868 = getelementptr inbounds %struct.Reg, %struct.Reg* %867, i32 0, i32 0
  %PC.i1737 = bitcast %union.anon* %868 to i64*
  %869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %870 = getelementptr inbounds %struct.GPR, %struct.GPR* %869, i32 0, i32 5
  %871 = getelementptr inbounds %struct.Reg, %struct.Reg* %870, i32 0, i32 0
  %RCX.i1738 = bitcast %union.anon* %871 to i64*
  %872 = load i64, i64* %PC.i1737
  %873 = add i64 %872, 8
  store i64 %873, i64* %PC.i1737
  %874 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %874, i64* %RCX.i1738, align 8
  store %struct.Memory* %loadMem_43363e, %struct.Memory** %MEMORY
  %loadMem_433646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %876 = getelementptr inbounds %struct.GPR, %struct.GPR* %875, i32 0, i32 33
  %877 = getelementptr inbounds %struct.Reg, %struct.Reg* %876, i32 0, i32 0
  %PC.i1734 = bitcast %union.anon* %877 to i64*
  %878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %879 = getelementptr inbounds %struct.GPR, %struct.GPR* %878, i32 0, i32 5
  %880 = getelementptr inbounds %struct.Reg, %struct.Reg* %879, i32 0, i32 0
  %RCX.i1735 = bitcast %union.anon* %880 to i64*
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %882 = getelementptr inbounds %struct.GPR, %struct.GPR* %881, i32 0, i32 7
  %883 = getelementptr inbounds %struct.Reg, %struct.Reg* %882, i32 0, i32 0
  %RDX.i1736 = bitcast %union.anon* %883 to i64*
  %884 = load i64, i64* %RCX.i1735
  %885 = add i64 %884, 72660
  %886 = load i64, i64* %PC.i1734
  %887 = add i64 %886, 6
  store i64 %887, i64* %PC.i1734
  %888 = inttoptr i64 %885 to i32*
  %889 = load i32, i32* %888
  %890 = zext i32 %889 to i64
  store i64 %890, i64* %RDX.i1736, align 8
  store %struct.Memory* %loadMem_433646, %struct.Memory** %MEMORY
  %loadMem_43364c = load %struct.Memory*, %struct.Memory** %MEMORY
  %891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %892 = getelementptr inbounds %struct.GPR, %struct.GPR* %891, i32 0, i32 33
  %893 = getelementptr inbounds %struct.Reg, %struct.Reg* %892, i32 0, i32 0
  %PC.i1732 = bitcast %union.anon* %893 to i64*
  %894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %895 = getelementptr inbounds %struct.GPR, %struct.GPR* %894, i32 0, i32 7
  %896 = getelementptr inbounds %struct.Reg, %struct.Reg* %895, i32 0, i32 0
  %RDX.i1733 = bitcast %union.anon* %896 to i64*
  %897 = load i64, i64* %RDX.i1733
  %898 = load i64, i64* %PC.i1732
  %899 = add i64 %898, 3
  store i64 %899, i64* %PC.i1732
  %900 = trunc i64 %897 to i32
  %901 = sub i32 %900, 1
  %902 = zext i32 %901 to i64
  store i64 %902, i64* %RDX.i1733, align 8
  %903 = icmp ult i32 %900, 1
  %904 = zext i1 %903 to i8
  %905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %904, i8* %905, align 1
  %906 = and i32 %901, 255
  %907 = call i32 @llvm.ctpop.i32(i32 %906)
  %908 = trunc i32 %907 to i8
  %909 = and i8 %908, 1
  %910 = xor i8 %909, 1
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %910, i8* %911, align 1
  %912 = xor i64 1, %897
  %913 = trunc i64 %912 to i32
  %914 = xor i32 %913, %901
  %915 = lshr i32 %914, 4
  %916 = trunc i32 %915 to i8
  %917 = and i8 %916, 1
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %917, i8* %918, align 1
  %919 = icmp eq i32 %901, 0
  %920 = zext i1 %919 to i8
  %921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %920, i8* %921, align 1
  %922 = lshr i32 %901, 31
  %923 = trunc i32 %922 to i8
  %924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %923, i8* %924, align 1
  %925 = lshr i32 %900, 31
  %926 = xor i32 %922, %925
  %927 = add i32 %926, %925
  %928 = icmp eq i32 %927, 2
  %929 = zext i1 %928 to i8
  %930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %929, i8* %930, align 1
  store %struct.Memory* %loadMem_43364c, %struct.Memory** %MEMORY
  %loadMem_43364f = load %struct.Memory*, %struct.Memory** %MEMORY
  %931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %932 = getelementptr inbounds %struct.GPR, %struct.GPR* %931, i32 0, i32 33
  %933 = getelementptr inbounds %struct.Reg, %struct.Reg* %932, i32 0, i32 0
  %PC.i1729 = bitcast %union.anon* %933 to i64*
  %934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %935 = getelementptr inbounds %struct.GPR, %struct.GPR* %934, i32 0, i32 7
  %936 = getelementptr inbounds %struct.Reg, %struct.Reg* %935, i32 0, i32 0
  %EDX.i1730 = bitcast %union.anon* %936 to i32*
  %937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %938 = getelementptr inbounds %struct.GPR, %struct.GPR* %937, i32 0, i32 5
  %939 = getelementptr inbounds %struct.Reg, %struct.Reg* %938, i32 0, i32 0
  %RCX.i1731 = bitcast %union.anon* %939 to i64*
  %940 = load i32, i32* %EDX.i1730
  %941 = zext i32 %940 to i64
  %942 = load i64, i64* %PC.i1729
  %943 = add i64 %942, 2
  store i64 %943, i64* %PC.i1729
  %944 = and i64 %941, 4294967295
  store i64 %944, i64* %RCX.i1731, align 8
  store %struct.Memory* %loadMem_43364f, %struct.Memory** %MEMORY
  %loadMem_433651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %946 = getelementptr inbounds %struct.GPR, %struct.GPR* %945, i32 0, i32 33
  %947 = getelementptr inbounds %struct.Reg, %struct.Reg* %946, i32 0, i32 0
  %PC.i1726 = bitcast %union.anon* %947 to i64*
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %949 = getelementptr inbounds %struct.GPR, %struct.GPR* %948, i32 0, i32 1
  %950 = getelementptr inbounds %struct.Reg, %struct.Reg* %949, i32 0, i32 0
  %EAX.i1727 = bitcast %union.anon* %950 to i32*
  %951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %952 = getelementptr inbounds %struct.GPR, %struct.GPR* %951, i32 0, i32 7
  %953 = getelementptr inbounds %struct.Reg, %struct.Reg* %952, i32 0, i32 0
  %RDX.i1728 = bitcast %union.anon* %953 to i64*
  %954 = load i32, i32* %EAX.i1727
  %955 = zext i32 %954 to i64
  %956 = load i64, i64* %PC.i1726
  %957 = add i64 %956, 2
  store i64 %957, i64* %PC.i1726
  %958 = and i64 %955, 4294967295
  store i64 %958, i64* %RDX.i1728, align 8
  store %struct.Memory* %loadMem_433651, %struct.Memory** %MEMORY
  %loadMem_433653 = load %struct.Memory*, %struct.Memory** %MEMORY
  %959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %960 = getelementptr inbounds %struct.GPR, %struct.GPR* %959, i32 0, i32 33
  %961 = getelementptr inbounds %struct.Reg, %struct.Reg* %960, i32 0, i32 0
  %PC.i1723 = bitcast %union.anon* %961 to i64*
  %962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %963 = getelementptr inbounds %struct.GPR, %struct.GPR* %962, i32 0, i32 5
  %964 = getelementptr inbounds %struct.Reg, %struct.Reg* %963, i32 0, i32 0
  %965 = bitcast %union.anon* %964 to %struct.anon.2*
  %CL.i1724 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %965, i32 0, i32 0
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %967 = getelementptr inbounds %struct.GPR, %struct.GPR* %966, i32 0, i32 7
  %968 = getelementptr inbounds %struct.Reg, %struct.Reg* %967, i32 0, i32 0
  %RDX.i1725 = bitcast %union.anon* %968 to i64*
  %969 = load i64, i64* %RDX.i1725
  %970 = load i8, i8* %CL.i1724
  %971 = zext i8 %970 to i64
  %972 = load i64, i64* %PC.i1723
  %973 = add i64 %972, 2
  store i64 %973, i64* %PC.i1723
  %974 = trunc i64 %971 to i5
  switch i5 %974, label %981 [
    i5 0, label %routine_shll__cl___edx.exit
    i5 1, label %975
  ]

; <label>:975:                                    ; preds = %block_.L_4335f5
  %976 = trunc i64 %969 to i32
  %977 = shl i32 %976, 1
  %978 = icmp slt i32 %976, 0
  %979 = icmp slt i32 %977, 0
  %980 = xor i1 %978, %979
  br label %990

; <label>:981:                                    ; preds = %block_.L_4335f5
  %982 = and i64 %971, 31
  %983 = add i64 %982, 4294967295
  %984 = and i64 %969, 4294967295
  %985 = and i64 %983, 4294967295
  %986 = shl i64 %984, %985
  %987 = trunc i64 %986 to i32
  %988 = icmp slt i32 %987, 0
  %989 = shl i32 %987, 1
  br label %990

; <label>:990:                                    ; preds = %981, %975
  %991 = phi i1 [ %978, %975 ], [ %988, %981 ]
  %992 = phi i1 [ %980, %975 ], [ false, %981 ]
  %993 = phi i32 [ %977, %975 ], [ %989, %981 ]
  %994 = zext i32 %993 to i64
  store i64 %994, i64* %RDX.i1725, align 8
  %995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %996 = zext i1 %991 to i8
  store i8 %996, i8* %995, align 1
  %997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %998 = and i32 %993, 254
  %999 = call i32 @llvm.ctpop.i32(i32 %998)
  %1000 = trunc i32 %999 to i8
  %1001 = and i8 %1000, 1
  %1002 = xor i8 %1001, 1
  store i8 %1002, i8* %997, align 1
  %1003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1003, align 1
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1005 = icmp eq i32 %993, 0
  %1006 = zext i1 %1005 to i8
  store i8 %1006, i8* %1004, align 1
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1008 = lshr i32 %993, 31
  %1009 = trunc i32 %1008 to i8
  store i8 %1009, i8* %1007, align 1
  %1010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1011 = zext i1 %992 to i8
  store i8 %1011, i8* %1010, align 1
  br label %routine_shll__cl___edx.exit

routine_shll__cl___edx.exit:                      ; preds = %block_.L_4335f5, %990
  store %struct.Memory* %loadMem_433653, %struct.Memory** %MEMORY
  %loadMem_433655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1013 = getelementptr inbounds %struct.GPR, %struct.GPR* %1012, i32 0, i32 33
  %1014 = getelementptr inbounds %struct.Reg, %struct.Reg* %1013, i32 0, i32 0
  %PC.i1721 = bitcast %union.anon* %1014 to i64*
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1016 = getelementptr inbounds %struct.GPR, %struct.GPR* %1015, i32 0, i32 9
  %1017 = getelementptr inbounds %struct.Reg, %struct.Reg* %1016, i32 0, i32 0
  %RSI.i1722 = bitcast %union.anon* %1017 to i64*
  %1018 = load i64, i64* %PC.i1721
  %1019 = add i64 %1018, 8
  store i64 %1019, i64* %PC.i1721
  %1020 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1020, i64* %RSI.i1722, align 8
  store %struct.Memory* %loadMem_433655, %struct.Memory** %MEMORY
  %loadMem_43365d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1022 = getelementptr inbounds %struct.GPR, %struct.GPR* %1021, i32 0, i32 33
  %1023 = getelementptr inbounds %struct.Reg, %struct.Reg* %1022, i32 0, i32 0
  %PC.i1718 = bitcast %union.anon* %1023 to i64*
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1025 = getelementptr inbounds %struct.GPR, %struct.GPR* %1024, i32 0, i32 7
  %1026 = getelementptr inbounds %struct.Reg, %struct.Reg* %1025, i32 0, i32 0
  %EDX.i1719 = bitcast %union.anon* %1026 to i32*
  %1027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1028 = getelementptr inbounds %struct.GPR, %struct.GPR* %1027, i32 0, i32 9
  %1029 = getelementptr inbounds %struct.Reg, %struct.Reg* %1028, i32 0, i32 0
  %RSI.i1720 = bitcast %union.anon* %1029 to i64*
  %1030 = load i64, i64* %RSI.i1720
  %1031 = add i64 %1030, 72680
  %1032 = load i32, i32* %EDX.i1719
  %1033 = zext i32 %1032 to i64
  %1034 = load i64, i64* %PC.i1718
  %1035 = add i64 %1034, 6
  store i64 %1035, i64* %PC.i1718
  %1036 = inttoptr i64 %1031 to i32*
  store i32 %1032, i32* %1036
  store %struct.Memory* %loadMem_43365d, %struct.Memory** %MEMORY
  %loadMem_433663 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1038 = getelementptr inbounds %struct.GPR, %struct.GPR* %1037, i32 0, i32 33
  %1039 = getelementptr inbounds %struct.Reg, %struct.Reg* %1038, i32 0, i32 0
  %PC.i1716 = bitcast %union.anon* %1039 to i64*
  %1040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1041 = getelementptr inbounds %struct.GPR, %struct.GPR* %1040, i32 0, i32 9
  %1042 = getelementptr inbounds %struct.Reg, %struct.Reg* %1041, i32 0, i32 0
  %RSI.i1717 = bitcast %union.anon* %1042 to i64*
  %1043 = load i64, i64* %PC.i1716
  %1044 = add i64 %1043, 8
  store i64 %1044, i64* %PC.i1716
  %1045 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1045, i64* %RSI.i1717, align 8
  store %struct.Memory* %loadMem_433663, %struct.Memory** %MEMORY
  %loadMem_43366b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1047 = getelementptr inbounds %struct.GPR, %struct.GPR* %1046, i32 0, i32 33
  %1048 = getelementptr inbounds %struct.Reg, %struct.Reg* %1047, i32 0, i32 0
  %PC.i1713 = bitcast %union.anon* %1048 to i64*
  %1049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1050 = getelementptr inbounds %struct.GPR, %struct.GPR* %1049, i32 0, i32 5
  %1051 = getelementptr inbounds %struct.Reg, %struct.Reg* %1050, i32 0, i32 0
  %RCX.i1714 = bitcast %union.anon* %1051 to i64*
  %1052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1053 = getelementptr inbounds %struct.GPR, %struct.GPR* %1052, i32 0, i32 9
  %1054 = getelementptr inbounds %struct.Reg, %struct.Reg* %1053, i32 0, i32 0
  %RSI.i1715 = bitcast %union.anon* %1054 to i64*
  %1055 = load i64, i64* %RSI.i1715
  %1056 = add i64 %1055, 72660
  %1057 = load i64, i64* %PC.i1713
  %1058 = add i64 %1057, 6
  store i64 %1058, i64* %PC.i1713
  %1059 = inttoptr i64 %1056 to i32*
  %1060 = load i32, i32* %1059
  %1061 = zext i32 %1060 to i64
  store i64 %1061, i64* %RCX.i1714, align 8
  store %struct.Memory* %loadMem_43366b, %struct.Memory** %MEMORY
  %loadMem_433671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1063 = getelementptr inbounds %struct.GPR, %struct.GPR* %1062, i32 0, i32 33
  %1064 = getelementptr inbounds %struct.Reg, %struct.Reg* %1063, i32 0, i32 0
  %PC.i1710 = bitcast %union.anon* %1064 to i64*
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1066 = getelementptr inbounds %struct.GPR, %struct.GPR* %1065, i32 0, i32 5
  %1067 = getelementptr inbounds %struct.Reg, %struct.Reg* %1066, i32 0, i32 0
  %1068 = bitcast %union.anon* %1067 to %struct.anon.2*
  %CL.i1711 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1068, i32 0, i32 0
  %1069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1070 = getelementptr inbounds %struct.GPR, %struct.GPR* %1069, i32 0, i32 1
  %1071 = getelementptr inbounds %struct.Reg, %struct.Reg* %1070, i32 0, i32 0
  %RAX.i1712 = bitcast %union.anon* %1071 to i64*
  %1072 = load i64, i64* %RAX.i1712
  %1073 = load i8, i8* %CL.i1711
  %1074 = zext i8 %1073 to i64
  %1075 = load i64, i64* %PC.i1710
  %1076 = add i64 %1075, 2
  store i64 %1076, i64* %PC.i1710
  %1077 = trunc i64 %1074 to i5
  switch i5 %1077, label %1084 [
    i5 0, label %routine_shll__cl___eax.exit
    i5 1, label %1078
  ]

; <label>:1078:                                   ; preds = %routine_shll__cl___edx.exit
  %1079 = trunc i64 %1072 to i32
  %1080 = shl i32 %1079, 1
  %1081 = icmp slt i32 %1079, 0
  %1082 = icmp slt i32 %1080, 0
  %1083 = xor i1 %1081, %1082
  br label %1093

; <label>:1084:                                   ; preds = %routine_shll__cl___edx.exit
  %1085 = and i64 %1074, 31
  %1086 = add i64 %1085, 4294967295
  %1087 = and i64 %1072, 4294967295
  %1088 = and i64 %1086, 4294967295
  %1089 = shl i64 %1087, %1088
  %1090 = trunc i64 %1089 to i32
  %1091 = icmp slt i32 %1090, 0
  %1092 = shl i32 %1090, 1
  br label %1093

; <label>:1093:                                   ; preds = %1084, %1078
  %1094 = phi i1 [ %1081, %1078 ], [ %1091, %1084 ]
  %1095 = phi i1 [ %1083, %1078 ], [ false, %1084 ]
  %1096 = phi i32 [ %1080, %1078 ], [ %1092, %1084 ]
  %1097 = zext i32 %1096 to i64
  store i64 %1097, i64* %RAX.i1712, align 8
  %1098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1099 = zext i1 %1094 to i8
  store i8 %1099, i8* %1098, align 1
  %1100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1101 = and i32 %1096, 254
  %1102 = call i32 @llvm.ctpop.i32(i32 %1101)
  %1103 = trunc i32 %1102 to i8
  %1104 = and i8 %1103, 1
  %1105 = xor i8 %1104, 1
  store i8 %1105, i8* %1100, align 1
  %1106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1106, align 1
  %1107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1108 = icmp eq i32 %1096, 0
  %1109 = zext i1 %1108 to i8
  store i8 %1109, i8* %1107, align 1
  %1110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1111 = lshr i32 %1096, 31
  %1112 = trunc i32 %1111 to i8
  store i8 %1112, i8* %1110, align 1
  %1113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1114 = zext i1 %1095 to i8
  store i8 %1114, i8* %1113, align 1
  br label %routine_shll__cl___eax.exit

routine_shll__cl___eax.exit:                      ; preds = %routine_shll__cl___edx.exit, %1093
  store %struct.Memory* %loadMem_433671, %struct.Memory** %MEMORY
  %loadMem_433673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1116 = getelementptr inbounds %struct.GPR, %struct.GPR* %1115, i32 0, i32 33
  %1117 = getelementptr inbounds %struct.Reg, %struct.Reg* %1116, i32 0, i32 0
  %PC.i1708 = bitcast %union.anon* %1117 to i64*
  %1118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1119 = getelementptr inbounds %struct.GPR, %struct.GPR* %1118, i32 0, i32 1
  %1120 = getelementptr inbounds %struct.Reg, %struct.Reg* %1119, i32 0, i32 0
  %RAX.i1709 = bitcast %union.anon* %1120 to i64*
  %1121 = load i64, i64* %RAX.i1709
  %1122 = load i64, i64* %PC.i1708
  %1123 = add i64 %1122, 3
  store i64 %1123, i64* %PC.i1708
  %1124 = trunc i64 %1121 to i32
  %1125 = sub i32 %1124, 1
  %1126 = zext i32 %1125 to i64
  store i64 %1126, i64* %RAX.i1709, align 8
  %1127 = icmp ult i32 %1124, 1
  %1128 = zext i1 %1127 to i8
  %1129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1128, i8* %1129, align 1
  %1130 = and i32 %1125, 255
  %1131 = call i32 @llvm.ctpop.i32(i32 %1130)
  %1132 = trunc i32 %1131 to i8
  %1133 = and i8 %1132, 1
  %1134 = xor i8 %1133, 1
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1134, i8* %1135, align 1
  %1136 = xor i64 1, %1121
  %1137 = trunc i64 %1136 to i32
  %1138 = xor i32 %1137, %1125
  %1139 = lshr i32 %1138, 4
  %1140 = trunc i32 %1139 to i8
  %1141 = and i8 %1140, 1
  %1142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1141, i8* %1142, align 1
  %1143 = icmp eq i32 %1125, 0
  %1144 = zext i1 %1143 to i8
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1144, i8* %1145, align 1
  %1146 = lshr i32 %1125, 31
  %1147 = trunc i32 %1146 to i8
  %1148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1147, i8* %1148, align 1
  %1149 = lshr i32 %1124, 31
  %1150 = xor i32 %1146, %1149
  %1151 = add i32 %1150, %1149
  %1152 = icmp eq i32 %1151, 2
  %1153 = zext i1 %1152 to i8
  %1154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1153, i8* %1154, align 1
  store %struct.Memory* %loadMem_433673, %struct.Memory** %MEMORY
  %loadMem_433676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1156 = getelementptr inbounds %struct.GPR, %struct.GPR* %1155, i32 0, i32 33
  %1157 = getelementptr inbounds %struct.Reg, %struct.Reg* %1156, i32 0, i32 0
  %PC.i1706 = bitcast %union.anon* %1157 to i64*
  %1158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1159 = getelementptr inbounds %struct.GPR, %struct.GPR* %1158, i32 0, i32 9
  %1160 = getelementptr inbounds %struct.Reg, %struct.Reg* %1159, i32 0, i32 0
  %RSI.i1707 = bitcast %union.anon* %1160 to i64*
  %1161 = load i64, i64* %PC.i1706
  %1162 = add i64 %1161, 8
  store i64 %1162, i64* %PC.i1706
  %1163 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1163, i64* %RSI.i1707, align 8
  store %struct.Memory* %loadMem_433676, %struct.Memory** %MEMORY
  %loadMem_43367e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1165 = getelementptr inbounds %struct.GPR, %struct.GPR* %1164, i32 0, i32 33
  %1166 = getelementptr inbounds %struct.Reg, %struct.Reg* %1165, i32 0, i32 0
  %PC.i1703 = bitcast %union.anon* %1166 to i64*
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1168 = getelementptr inbounds %struct.GPR, %struct.GPR* %1167, i32 0, i32 1
  %1169 = getelementptr inbounds %struct.Reg, %struct.Reg* %1168, i32 0, i32 0
  %EAX.i1704 = bitcast %union.anon* %1169 to i32*
  %1170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1171 = getelementptr inbounds %struct.GPR, %struct.GPR* %1170, i32 0, i32 9
  %1172 = getelementptr inbounds %struct.Reg, %struct.Reg* %1171, i32 0, i32 0
  %RSI.i1705 = bitcast %union.anon* %1172 to i64*
  %1173 = load i64, i64* %RSI.i1705
  %1174 = add i64 %1173, 72684
  %1175 = load i32, i32* %EAX.i1704
  %1176 = zext i32 %1175 to i64
  %1177 = load i64, i64* %PC.i1703
  %1178 = add i64 %1177, 6
  store i64 %1178, i64* %PC.i1703
  %1179 = inttoptr i64 %1174 to i32*
  store i32 %1175, i32* %1179
  store %struct.Memory* %loadMem_43367e, %struct.Memory** %MEMORY
  %loadMem_433684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1181 = getelementptr inbounds %struct.GPR, %struct.GPR* %1180, i32 0, i32 33
  %1182 = getelementptr inbounds %struct.Reg, %struct.Reg* %1181, i32 0, i32 0
  %PC.i1701 = bitcast %union.anon* %1182 to i64*
  %1183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1184 = getelementptr inbounds %struct.GPR, %struct.GPR* %1183, i32 0, i32 9
  %1185 = getelementptr inbounds %struct.Reg, %struct.Reg* %1184, i32 0, i32 0
  %RSI.i1702 = bitcast %union.anon* %1185 to i64*
  %1186 = load i64, i64* %PC.i1701
  %1187 = add i64 %1186, 8
  store i64 %1187, i64* %PC.i1701
  %1188 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1188, i64* %RSI.i1702, align 8
  store %struct.Memory* %loadMem_433684, %struct.Memory** %MEMORY
  %loadMem_43368c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1190 = getelementptr inbounds %struct.GPR, %struct.GPR* %1189, i32 0, i32 33
  %1191 = getelementptr inbounds %struct.Reg, %struct.Reg* %1190, i32 0, i32 0
  %PC.i1699 = bitcast %union.anon* %1191 to i64*
  %1192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1193 = getelementptr inbounds %struct.GPR, %struct.GPR* %1192, i32 0, i32 9
  %1194 = getelementptr inbounds %struct.Reg, %struct.Reg* %1193, i32 0, i32 0
  %RSI.i1700 = bitcast %union.anon* %1194 to i64*
  %1195 = load i64, i64* %RSI.i1700
  %1196 = add i64 %1195, 72700
  %1197 = load i64, i64* %PC.i1699
  %1198 = add i64 %1197, 7
  store i64 %1198, i64* %PC.i1699
  %1199 = inttoptr i64 %1196 to i32*
  %1200 = load i32, i32* %1199
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1201, align 1
  %1202 = and i32 %1200, 255
  %1203 = call i32 @llvm.ctpop.i32(i32 %1202)
  %1204 = trunc i32 %1203 to i8
  %1205 = and i8 %1204, 1
  %1206 = xor i8 %1205, 1
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1206, i8* %1207, align 1
  %1208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1208, align 1
  %1209 = icmp eq i32 %1200, 0
  %1210 = zext i1 %1209 to i8
  %1211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1210, i8* %1211, align 1
  %1212 = lshr i32 %1200, 31
  %1213 = trunc i32 %1212 to i8
  %1214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1213, i8* %1214, align 1
  %1215 = lshr i32 %1200, 31
  %1216 = xor i32 %1212, %1215
  %1217 = add i32 %1216, %1215
  %1218 = icmp eq i32 %1217, 2
  %1219 = zext i1 %1218 to i8
  %1220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1219, i8* %1220, align 1
  store %struct.Memory* %loadMem_43368c, %struct.Memory** %MEMORY
  %loadMem_433693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1222 = getelementptr inbounds %struct.GPR, %struct.GPR* %1221, i32 0, i32 33
  %1223 = getelementptr inbounds %struct.Reg, %struct.Reg* %1222, i32 0, i32 0
  %PC.i1698 = bitcast %union.anon* %1223 to i64*
  %1224 = load i64, i64* %PC.i1698
  %1225 = add i64 %1224, 444
  %1226 = load i64, i64* %PC.i1698
  %1227 = add i64 %1226, 6
  %1228 = load i64, i64* %PC.i1698
  %1229 = add i64 %1228, 6
  store i64 %1229, i64* %PC.i1698
  %1230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1231 = load i8, i8* %1230, align 1
  store i8 %1231, i8* %BRANCH_TAKEN, align 1
  %1232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1233 = icmp ne i8 %1231, 0
  %1234 = select i1 %1233, i64 %1225, i64 %1227
  store i64 %1234, i64* %1232, align 8
  store %struct.Memory* %loadMem_433693, %struct.Memory** %MEMORY
  %loadBr_433693 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_433693 = icmp eq i8 %loadBr_433693, 1
  br i1 %cmpBr_433693, label %block_.L_43384f, label %block_433699

block_433699:                                     ; preds = %routine_shll__cl___eax.exit
  %loadMem_433699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1236 = getelementptr inbounds %struct.GPR, %struct.GPR* %1235, i32 0, i32 33
  %1237 = getelementptr inbounds %struct.Reg, %struct.Reg* %1236, i32 0, i32 0
  %PC.i1696 = bitcast %union.anon* %1237 to i64*
  %1238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1239 = getelementptr inbounds %struct.GPR, %struct.GPR* %1238, i32 0, i32 1
  %1240 = getelementptr inbounds %struct.Reg, %struct.Reg* %1239, i32 0, i32 0
  %1241 = bitcast %union.anon* %1240 to %struct.anon.2*
  %AL.i1697 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1241, i32 0, i32 0
  %1242 = load i64, i64* %PC.i1696
  %1243 = add i64 %1242, 2
  store i64 %1243, i64* %PC.i1696
  store i8 1, i8* %AL.i1697, align 1
  store %struct.Memory* %loadMem_433699, %struct.Memory** %MEMORY
  %loadMem_43369b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1245 = getelementptr inbounds %struct.GPR, %struct.GPR* %1244, i32 0, i32 33
  %1246 = getelementptr inbounds %struct.Reg, %struct.Reg* %1245, i32 0, i32 0
  %PC.i1694 = bitcast %union.anon* %1246 to i64*
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1248 = getelementptr inbounds %struct.GPR, %struct.GPR* %1247, i32 0, i32 5
  %1249 = getelementptr inbounds %struct.Reg, %struct.Reg* %1248, i32 0, i32 0
  %RCX.i1695 = bitcast %union.anon* %1249 to i64*
  %1250 = load i64, i64* %PC.i1694
  %1251 = add i64 %1250, 5
  store i64 %1251, i64* %PC.i1694
  store i64 1, i64* %RCX.i1695, align 8
  store %struct.Memory* %loadMem_43369b, %struct.Memory** %MEMORY
  %loadMem_4336a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1253 = getelementptr inbounds %struct.GPR, %struct.GPR* %1252, i32 0, i32 33
  %1254 = getelementptr inbounds %struct.Reg, %struct.Reg* %1253, i32 0, i32 0
  %PC.i1692 = bitcast %union.anon* %1254 to i64*
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1256 = getelementptr inbounds %struct.GPR, %struct.GPR* %1255, i32 0, i32 7
  %1257 = getelementptr inbounds %struct.Reg, %struct.Reg* %1256, i32 0, i32 0
  %RDX.i1693 = bitcast %union.anon* %1257 to i64*
  %1258 = load i64, i64* %PC.i1692
  %1259 = add i64 %1258, 8
  store i64 %1259, i64* %PC.i1692
  %1260 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %1260, i64* %RDX.i1693, align 8
  store %struct.Memory* %loadMem_4336a0, %struct.Memory** %MEMORY
  %loadMem_4336a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1262 = getelementptr inbounds %struct.GPR, %struct.GPR* %1261, i32 0, i32 33
  %1263 = getelementptr inbounds %struct.Reg, %struct.Reg* %1262, i32 0, i32 0
  %PC.i1689 = bitcast %union.anon* %1263 to i64*
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1265 = getelementptr inbounds %struct.GPR, %struct.GPR* %1264, i32 0, i32 7
  %1266 = getelementptr inbounds %struct.Reg, %struct.Reg* %1265, i32 0, i32 0
  %RDX.i1690 = bitcast %union.anon* %1266 to i64*
  %1267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1268 = getelementptr inbounds %struct.GPR, %struct.GPR* %1267, i32 0, i32 9
  %1269 = getelementptr inbounds %struct.Reg, %struct.Reg* %1268, i32 0, i32 0
  %RSI.i1691 = bitcast %union.anon* %1269 to i64*
  %1270 = load i64, i64* %RDX.i1690
  %1271 = add i64 %1270, 3300
  %1272 = load i64, i64* %PC.i1689
  %1273 = add i64 %1272, 6
  store i64 %1273, i64* %PC.i1689
  %1274 = inttoptr i64 %1271 to i32*
  %1275 = load i32, i32* %1274
  %1276 = zext i32 %1275 to i64
  store i64 %1276, i64* %RSI.i1691, align 8
  store %struct.Memory* %loadMem_4336a8, %struct.Memory** %MEMORY
  %loadMem_4336ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1278 = getelementptr inbounds %struct.GPR, %struct.GPR* %1277, i32 0, i32 33
  %1279 = getelementptr inbounds %struct.Reg, %struct.Reg* %1278, i32 0, i32 0
  %PC.i1687 = bitcast %union.anon* %1279 to i64*
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1281 = getelementptr inbounds %struct.GPR, %struct.GPR* %1280, i32 0, i32 7
  %1282 = getelementptr inbounds %struct.Reg, %struct.Reg* %1281, i32 0, i32 0
  %RDX.i1688 = bitcast %union.anon* %1282 to i64*
  %1283 = load i64, i64* %PC.i1687
  %1284 = add i64 %1283, 8
  store i64 %1284, i64* %PC.i1687
  %1285 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1285, i64* %RDX.i1688, align 8
  store %struct.Memory* %loadMem_4336ae, %struct.Memory** %MEMORY
  %loadMem_4336b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1287 = getelementptr inbounds %struct.GPR, %struct.GPR* %1286, i32 0, i32 33
  %1288 = getelementptr inbounds %struct.Reg, %struct.Reg* %1287, i32 0, i32 0
  %PC.i1684 = bitcast %union.anon* %1288 to i64*
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1290 = getelementptr inbounds %struct.GPR, %struct.GPR* %1289, i32 0, i32 9
  %1291 = getelementptr inbounds %struct.Reg, %struct.Reg* %1290, i32 0, i32 0
  %ESI.i1685 = bitcast %union.anon* %1291 to i32*
  %1292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1293 = getelementptr inbounds %struct.GPR, %struct.GPR* %1292, i32 0, i32 7
  %1294 = getelementptr inbounds %struct.Reg, %struct.Reg* %1293, i32 0, i32 0
  %RDX.i1686 = bitcast %union.anon* %1294 to i64*
  %1295 = load i64, i64* %RDX.i1686
  %1296 = add i64 %1295, 72664
  %1297 = load i32, i32* %ESI.i1685
  %1298 = zext i32 %1297 to i64
  %1299 = load i64, i64* %PC.i1684
  %1300 = add i64 %1299, 6
  store i64 %1300, i64* %PC.i1684
  %1301 = inttoptr i64 %1296 to i32*
  store i32 %1297, i32* %1301
  store %struct.Memory* %loadMem_4336b6, %struct.Memory** %MEMORY
  %loadMem_4336bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1303 = getelementptr inbounds %struct.GPR, %struct.GPR* %1302, i32 0, i32 33
  %1304 = getelementptr inbounds %struct.Reg, %struct.Reg* %1303, i32 0, i32 0
  %PC.i1682 = bitcast %union.anon* %1304 to i64*
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1306 = getelementptr inbounds %struct.GPR, %struct.GPR* %1305, i32 0, i32 7
  %1307 = getelementptr inbounds %struct.Reg, %struct.Reg* %1306, i32 0, i32 0
  %RDX.i1683 = bitcast %union.anon* %1307 to i64*
  %1308 = load i64, i64* %PC.i1682
  %1309 = add i64 %1308, 8
  store i64 %1309, i64* %PC.i1682
  %1310 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1310, i64* %RDX.i1683, align 8
  store %struct.Memory* %loadMem_4336bc, %struct.Memory** %MEMORY
  %loadMem_4336c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1312 = getelementptr inbounds %struct.GPR, %struct.GPR* %1311, i32 0, i32 33
  %1313 = getelementptr inbounds %struct.Reg, %struct.Reg* %1312, i32 0, i32 0
  %PC.i1679 = bitcast %union.anon* %1313 to i64*
  %1314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1315 = getelementptr inbounds %struct.GPR, %struct.GPR* %1314, i32 0, i32 7
  %1316 = getelementptr inbounds %struct.Reg, %struct.Reg* %1315, i32 0, i32 0
  %RDX.i1680 = bitcast %union.anon* %1316 to i64*
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1318 = getelementptr inbounds %struct.GPR, %struct.GPR* %1317, i32 0, i32 9
  %1319 = getelementptr inbounds %struct.Reg, %struct.Reg* %1318, i32 0, i32 0
  %RSI.i1681 = bitcast %union.anon* %1319 to i64*
  %1320 = load i64, i64* %RDX.i1680
  %1321 = add i64 %1320, 72664
  %1322 = load i64, i64* %PC.i1679
  %1323 = add i64 %1322, 6
  store i64 %1323, i64* %PC.i1679
  %1324 = inttoptr i64 %1321 to i32*
  %1325 = load i32, i32* %1324
  %1326 = zext i32 %1325 to i64
  store i64 %1326, i64* %RSI.i1681, align 8
  store %struct.Memory* %loadMem_4336c4, %struct.Memory** %MEMORY
  %loadMem_4336ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %1327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1328 = getelementptr inbounds %struct.GPR, %struct.GPR* %1327, i32 0, i32 33
  %1329 = getelementptr inbounds %struct.Reg, %struct.Reg* %1328, i32 0, i32 0
  %PC.i1676 = bitcast %union.anon* %1329 to i64*
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1331 = getelementptr inbounds %struct.GPR, %struct.GPR* %1330, i32 0, i32 5
  %1332 = getelementptr inbounds %struct.Reg, %struct.Reg* %1331, i32 0, i32 0
  %ECX.i1677 = bitcast %union.anon* %1332 to i32*
  %1333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1334 = getelementptr inbounds %struct.GPR, %struct.GPR* %1333, i32 0, i32 15
  %1335 = getelementptr inbounds %struct.Reg, %struct.Reg* %1334, i32 0, i32 0
  %RBP.i1678 = bitcast %union.anon* %1335 to i64*
  %1336 = load i64, i64* %RBP.i1678
  %1337 = sub i64 %1336, 40
  %1338 = load i32, i32* %ECX.i1677
  %1339 = zext i32 %1338 to i64
  %1340 = load i64, i64* %PC.i1676
  %1341 = add i64 %1340, 3
  store i64 %1341, i64* %PC.i1676
  %1342 = inttoptr i64 %1337 to i32*
  store i32 %1338, i32* %1342
  store %struct.Memory* %loadMem_4336ca, %struct.Memory** %MEMORY
  %loadMem_4336cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1344 = getelementptr inbounds %struct.GPR, %struct.GPR* %1343, i32 0, i32 33
  %1345 = getelementptr inbounds %struct.Reg, %struct.Reg* %1344, i32 0, i32 0
  %PC.i1673 = bitcast %union.anon* %1345 to i64*
  %1346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1347 = getelementptr inbounds %struct.GPR, %struct.GPR* %1346, i32 0, i32 9
  %1348 = getelementptr inbounds %struct.Reg, %struct.Reg* %1347, i32 0, i32 0
  %ESI.i1674 = bitcast %union.anon* %1348 to i32*
  %1349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1350 = getelementptr inbounds %struct.GPR, %struct.GPR* %1349, i32 0, i32 5
  %1351 = getelementptr inbounds %struct.Reg, %struct.Reg* %1350, i32 0, i32 0
  %RCX.i1675 = bitcast %union.anon* %1351 to i64*
  %1352 = load i32, i32* %ESI.i1674
  %1353 = zext i32 %1352 to i64
  %1354 = load i64, i64* %PC.i1673
  %1355 = add i64 %1354, 2
  store i64 %1355, i64* %PC.i1673
  %1356 = and i64 %1353, 4294967295
  store i64 %1356, i64* %RCX.i1675, align 8
  store %struct.Memory* %loadMem_4336cd, %struct.Memory** %MEMORY
  %loadMem_4336cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1358 = getelementptr inbounds %struct.GPR, %struct.GPR* %1357, i32 0, i32 33
  %1359 = getelementptr inbounds %struct.Reg, %struct.Reg* %1358, i32 0, i32 0
  %PC.i1670 = bitcast %union.anon* %1359 to i64*
  %1360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1361 = getelementptr inbounds %struct.GPR, %struct.GPR* %1360, i32 0, i32 9
  %1362 = getelementptr inbounds %struct.Reg, %struct.Reg* %1361, i32 0, i32 0
  %RSI.i1671 = bitcast %union.anon* %1362 to i64*
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1364 = getelementptr inbounds %struct.GPR, %struct.GPR* %1363, i32 0, i32 15
  %1365 = getelementptr inbounds %struct.Reg, %struct.Reg* %1364, i32 0, i32 0
  %RBP.i1672 = bitcast %union.anon* %1365 to i64*
  %1366 = load i64, i64* %RBP.i1672
  %1367 = sub i64 %1366, 40
  %1368 = load i64, i64* %PC.i1670
  %1369 = add i64 %1368, 3
  store i64 %1369, i64* %PC.i1670
  %1370 = inttoptr i64 %1367 to i32*
  %1371 = load i32, i32* %1370
  %1372 = zext i32 %1371 to i64
  store i64 %1372, i64* %RSI.i1671, align 8
  store %struct.Memory* %loadMem_4336cf, %struct.Memory** %MEMORY
  %loadMem_4336d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1374 = getelementptr inbounds %struct.GPR, %struct.GPR* %1373, i32 0, i32 33
  %1375 = getelementptr inbounds %struct.Reg, %struct.Reg* %1374, i32 0, i32 0
  %PC.i1666 = bitcast %union.anon* %1375 to i64*
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1377 = getelementptr inbounds %struct.GPR, %struct.GPR* %1376, i32 0, i32 5
  %1378 = getelementptr inbounds %struct.Reg, %struct.Reg* %1377, i32 0, i32 0
  %1379 = bitcast %union.anon* %1378 to %struct.anon.2*
  %CL.i1667 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1379, i32 0, i32 0
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1381 = getelementptr inbounds %struct.GPR, %struct.GPR* %1380, i32 0, i32 9
  %1382 = getelementptr inbounds %struct.Reg, %struct.Reg* %1381, i32 0, i32 0
  %RSI.i1668 = bitcast %union.anon* %1382 to i64*
  %1383 = load i64, i64* %RSI.i1668
  %1384 = load i8, i8* %CL.i1667
  %1385 = zext i8 %1384 to i64
  %1386 = load i64, i64* %PC.i1666
  %1387 = add i64 %1386, 2
  store i64 %1387, i64* %PC.i1666
  %1388 = trunc i64 %1385 to i5
  switch i5 %1388, label %1395 [
    i5 0, label %routine_shll__cl___esi.exit1669
    i5 1, label %1389
  ]

; <label>:1389:                                   ; preds = %block_433699
  %1390 = trunc i64 %1383 to i32
  %1391 = shl i32 %1390, 1
  %1392 = icmp slt i32 %1390, 0
  %1393 = icmp slt i32 %1391, 0
  %1394 = xor i1 %1392, %1393
  br label %1404

; <label>:1395:                                   ; preds = %block_433699
  %1396 = and i64 %1385, 31
  %1397 = add i64 %1396, 4294967295
  %1398 = and i64 %1383, 4294967295
  %1399 = and i64 %1397, 4294967295
  %1400 = shl i64 %1398, %1399
  %1401 = trunc i64 %1400 to i32
  %1402 = icmp slt i32 %1401, 0
  %1403 = shl i32 %1401, 1
  br label %1404

; <label>:1404:                                   ; preds = %1395, %1389
  %1405 = phi i1 [ %1392, %1389 ], [ %1402, %1395 ]
  %1406 = phi i1 [ %1394, %1389 ], [ false, %1395 ]
  %1407 = phi i32 [ %1391, %1389 ], [ %1403, %1395 ]
  %1408 = zext i32 %1407 to i64
  store i64 %1408, i64* %RSI.i1668, align 8
  %1409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1410 = zext i1 %1405 to i8
  store i8 %1410, i8* %1409, align 1
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1412 = and i32 %1407, 254
  %1413 = call i32 @llvm.ctpop.i32(i32 %1412)
  %1414 = trunc i32 %1413 to i8
  %1415 = and i8 %1414, 1
  %1416 = xor i8 %1415, 1
  store i8 %1416, i8* %1411, align 1
  %1417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1417, align 1
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1419 = icmp eq i32 %1407, 0
  %1420 = zext i1 %1419 to i8
  store i8 %1420, i8* %1418, align 1
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1422 = lshr i32 %1407, 31
  %1423 = trunc i32 %1422 to i8
  store i8 %1423, i8* %1421, align 1
  %1424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1425 = zext i1 %1406 to i8
  store i8 %1425, i8* %1424, align 1
  br label %routine_shll__cl___esi.exit1669

routine_shll__cl___esi.exit1669:                  ; preds = %block_433699, %1404
  store %struct.Memory* %loadMem_4336d2, %struct.Memory** %MEMORY
  %loadMem_4336d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1427 = getelementptr inbounds %struct.GPR, %struct.GPR* %1426, i32 0, i32 33
  %1428 = getelementptr inbounds %struct.Reg, %struct.Reg* %1427, i32 0, i32 0
  %PC.i1664 = bitcast %union.anon* %1428 to i64*
  %1429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1430 = getelementptr inbounds %struct.GPR, %struct.GPR* %1429, i32 0, i32 9
  %1431 = getelementptr inbounds %struct.Reg, %struct.Reg* %1430, i32 0, i32 0
  %RSI.i1665 = bitcast %union.anon* %1431 to i64*
  %1432 = load i64, i64* %RSI.i1665
  %1433 = load i64, i64* %PC.i1664
  %1434 = add i64 %1433, 3
  store i64 %1434, i64* %PC.i1664
  %1435 = trunc i64 %1432 to i32
  %1436 = sub i32 %1435, 1
  %1437 = zext i32 %1436 to i64
  store i64 %1437, i64* %RSI.i1665, align 8
  %1438 = icmp ult i32 %1435, 1
  %1439 = zext i1 %1438 to i8
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1439, i8* %1440, align 1
  %1441 = and i32 %1436, 255
  %1442 = call i32 @llvm.ctpop.i32(i32 %1441)
  %1443 = trunc i32 %1442 to i8
  %1444 = and i8 %1443, 1
  %1445 = xor i8 %1444, 1
  %1446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1445, i8* %1446, align 1
  %1447 = xor i64 1, %1432
  %1448 = trunc i64 %1447 to i32
  %1449 = xor i32 %1448, %1436
  %1450 = lshr i32 %1449, 4
  %1451 = trunc i32 %1450 to i8
  %1452 = and i8 %1451, 1
  %1453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1452, i8* %1453, align 1
  %1454 = icmp eq i32 %1436, 0
  %1455 = zext i1 %1454 to i8
  %1456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1455, i8* %1456, align 1
  %1457 = lshr i32 %1436, 31
  %1458 = trunc i32 %1457 to i8
  %1459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1458, i8* %1459, align 1
  %1460 = lshr i32 %1435, 31
  %1461 = xor i32 %1457, %1460
  %1462 = add i32 %1461, %1460
  %1463 = icmp eq i32 %1462, 2
  %1464 = zext i1 %1463 to i8
  %1465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1464, i8* %1465, align 1
  store %struct.Memory* %loadMem_4336d4, %struct.Memory** %MEMORY
  %loadMem_4336d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1467 = getelementptr inbounds %struct.GPR, %struct.GPR* %1466, i32 0, i32 33
  %1468 = getelementptr inbounds %struct.Reg, %struct.Reg* %1467, i32 0, i32 0
  %PC.i1662 = bitcast %union.anon* %1468 to i64*
  %1469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1470 = getelementptr inbounds %struct.GPR, %struct.GPR* %1469, i32 0, i32 7
  %1471 = getelementptr inbounds %struct.Reg, %struct.Reg* %1470, i32 0, i32 0
  %RDX.i1663 = bitcast %union.anon* %1471 to i64*
  %1472 = load i64, i64* %PC.i1662
  %1473 = add i64 %1472, 8
  store i64 %1473, i64* %PC.i1662
  %1474 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1474, i64* %RDX.i1663, align 8
  store %struct.Memory* %loadMem_4336d7, %struct.Memory** %MEMORY
  %loadMem_4336df = load %struct.Memory*, %struct.Memory** %MEMORY
  %1475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1476 = getelementptr inbounds %struct.GPR, %struct.GPR* %1475, i32 0, i32 33
  %1477 = getelementptr inbounds %struct.Reg, %struct.Reg* %1476, i32 0, i32 0
  %PC.i1659 = bitcast %union.anon* %1477 to i64*
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1479 = getelementptr inbounds %struct.GPR, %struct.GPR* %1478, i32 0, i32 9
  %1480 = getelementptr inbounds %struct.Reg, %struct.Reg* %1479, i32 0, i32 0
  %ESI.i1660 = bitcast %union.anon* %1480 to i32*
  %1481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1482 = getelementptr inbounds %struct.GPR, %struct.GPR* %1481, i32 0, i32 7
  %1483 = getelementptr inbounds %struct.Reg, %struct.Reg* %1482, i32 0, i32 0
  %RDX.i1661 = bitcast %union.anon* %1483 to i64*
  %1484 = load i64, i64* %RDX.i1661
  %1485 = add i64 %1484, 72688
  %1486 = load i32, i32* %ESI.i1660
  %1487 = zext i32 %1486 to i64
  %1488 = load i64, i64* %PC.i1659
  %1489 = add i64 %1488, 6
  store i64 %1489, i64* %PC.i1659
  %1490 = inttoptr i64 %1485 to i32*
  store i32 %1486, i32* %1490
  store %struct.Memory* %loadMem_4336df, %struct.Memory** %MEMORY
  %loadMem_4336e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1492 = getelementptr inbounds %struct.GPR, %struct.GPR* %1491, i32 0, i32 33
  %1493 = getelementptr inbounds %struct.Reg, %struct.Reg* %1492, i32 0, i32 0
  %PC.i1657 = bitcast %union.anon* %1493 to i64*
  %1494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1495 = getelementptr inbounds %struct.GPR, %struct.GPR* %1494, i32 0, i32 7
  %1496 = getelementptr inbounds %struct.Reg, %struct.Reg* %1495, i32 0, i32 0
  %RDX.i1658 = bitcast %union.anon* %1496 to i64*
  %1497 = load i64, i64* %PC.i1657
  %1498 = add i64 %1497, 8
  store i64 %1498, i64* %PC.i1657
  %1499 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1499, i64* %RDX.i1658, align 8
  store %struct.Memory* %loadMem_4336e5, %struct.Memory** %MEMORY
  %loadMem_4336ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %1500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1501 = getelementptr inbounds %struct.GPR, %struct.GPR* %1500, i32 0, i32 33
  %1502 = getelementptr inbounds %struct.Reg, %struct.Reg* %1501, i32 0, i32 0
  %PC.i1654 = bitcast %union.anon* %1502 to i64*
  %1503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1504 = getelementptr inbounds %struct.GPR, %struct.GPR* %1503, i32 0, i32 5
  %1505 = getelementptr inbounds %struct.Reg, %struct.Reg* %1504, i32 0, i32 0
  %RCX.i1655 = bitcast %union.anon* %1505 to i64*
  %1506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1507 = getelementptr inbounds %struct.GPR, %struct.GPR* %1506, i32 0, i32 7
  %1508 = getelementptr inbounds %struct.Reg, %struct.Reg* %1507, i32 0, i32 0
  %RDX.i1656 = bitcast %union.anon* %1508 to i64*
  %1509 = load i64, i64* %RDX.i1656
  %1510 = add i64 %1509, 72700
  %1511 = load i64, i64* %PC.i1654
  %1512 = add i64 %1511, 6
  store i64 %1512, i64* %PC.i1654
  %1513 = inttoptr i64 %1510 to i32*
  %1514 = load i32, i32* %1513
  %1515 = zext i32 %1514 to i64
  store i64 %1515, i64* %RCX.i1655, align 8
  store %struct.Memory* %loadMem_4336ed, %struct.Memory** %MEMORY
  %loadMem_4336f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1517 = getelementptr inbounds %struct.GPR, %struct.GPR* %1516, i32 0, i32 33
  %1518 = getelementptr inbounds %struct.Reg, %struct.Reg* %1517, i32 0, i32 0
  %PC.i1651 = bitcast %union.anon* %1518 to i64*
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1520 = getelementptr inbounds %struct.GPR, %struct.GPR* %1519, i32 0, i32 9
  %1521 = getelementptr inbounds %struct.Reg, %struct.Reg* %1520, i32 0, i32 0
  %RSI.i1652 = bitcast %union.anon* %1521 to i64*
  %1522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1523 = getelementptr inbounds %struct.GPR, %struct.GPR* %1522, i32 0, i32 15
  %1524 = getelementptr inbounds %struct.Reg, %struct.Reg* %1523, i32 0, i32 0
  %RBP.i1653 = bitcast %union.anon* %1524 to i64*
  %1525 = load i64, i64* %RBP.i1653
  %1526 = sub i64 %1525, 40
  %1527 = load i64, i64* %PC.i1651
  %1528 = add i64 %1527, 3
  store i64 %1528, i64* %PC.i1651
  %1529 = inttoptr i64 %1526 to i32*
  %1530 = load i32, i32* %1529
  %1531 = zext i32 %1530 to i64
  store i64 %1531, i64* %RSI.i1652, align 8
  store %struct.Memory* %loadMem_4336f3, %struct.Memory** %MEMORY
  %loadMem_4336f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1533 = getelementptr inbounds %struct.GPR, %struct.GPR* %1532, i32 0, i32 33
  %1534 = getelementptr inbounds %struct.Reg, %struct.Reg* %1533, i32 0, i32 0
  %PC.i1648 = bitcast %union.anon* %1534 to i64*
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1536 = getelementptr inbounds %struct.GPR, %struct.GPR* %1535, i32 0, i32 5
  %1537 = getelementptr inbounds %struct.Reg, %struct.Reg* %1536, i32 0, i32 0
  %1538 = bitcast %union.anon* %1537 to %struct.anon.2*
  %CL.i1649 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1538, i32 0, i32 0
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1540 = getelementptr inbounds %struct.GPR, %struct.GPR* %1539, i32 0, i32 9
  %1541 = getelementptr inbounds %struct.Reg, %struct.Reg* %1540, i32 0, i32 0
  %RSI.i1650 = bitcast %union.anon* %1541 to i64*
  %1542 = load i64, i64* %RSI.i1650
  %1543 = load i8, i8* %CL.i1649
  %1544 = zext i8 %1543 to i64
  %1545 = load i64, i64* %PC.i1648
  %1546 = add i64 %1545, 2
  store i64 %1546, i64* %PC.i1648
  %1547 = trunc i64 %1544 to i5
  switch i5 %1547, label %1554 [
    i5 0, label %routine_shll__cl___esi.exit
    i5 1, label %1548
  ]

; <label>:1548:                                   ; preds = %routine_shll__cl___esi.exit1669
  %1549 = trunc i64 %1542 to i32
  %1550 = shl i32 %1549, 1
  %1551 = icmp slt i32 %1549, 0
  %1552 = icmp slt i32 %1550, 0
  %1553 = xor i1 %1551, %1552
  br label %1563

; <label>:1554:                                   ; preds = %routine_shll__cl___esi.exit1669
  %1555 = and i64 %1544, 31
  %1556 = add i64 %1555, 4294967295
  %1557 = and i64 %1542, 4294967295
  %1558 = and i64 %1556, 4294967295
  %1559 = shl i64 %1557, %1558
  %1560 = trunc i64 %1559 to i32
  %1561 = icmp slt i32 %1560, 0
  %1562 = shl i32 %1560, 1
  br label %1563

; <label>:1563:                                   ; preds = %1554, %1548
  %1564 = phi i1 [ %1551, %1548 ], [ %1561, %1554 ]
  %1565 = phi i1 [ %1553, %1548 ], [ false, %1554 ]
  %1566 = phi i32 [ %1550, %1548 ], [ %1562, %1554 ]
  %1567 = zext i32 %1566 to i64
  store i64 %1567, i64* %RSI.i1650, align 8
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1569 = zext i1 %1564 to i8
  store i8 %1569, i8* %1568, align 1
  %1570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1571 = and i32 %1566, 254
  %1572 = call i32 @llvm.ctpop.i32(i32 %1571)
  %1573 = trunc i32 %1572 to i8
  %1574 = and i8 %1573, 1
  %1575 = xor i8 %1574, 1
  store i8 %1575, i8* %1570, align 1
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1576, align 1
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1578 = icmp eq i32 %1566, 0
  %1579 = zext i1 %1578 to i8
  store i8 %1579, i8* %1577, align 1
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1581 = lshr i32 %1566, 31
  %1582 = trunc i32 %1581 to i8
  store i8 %1582, i8* %1580, align 1
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1584 = zext i1 %1565 to i8
  store i8 %1584, i8* %1583, align 1
  br label %routine_shll__cl___esi.exit

routine_shll__cl___esi.exit:                      ; preds = %routine_shll__cl___esi.exit1669, %1563
  store %struct.Memory* %loadMem_4336f6, %struct.Memory** %MEMORY
  %loadMem_4336f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1586 = getelementptr inbounds %struct.GPR, %struct.GPR* %1585, i32 0, i32 33
  %1587 = getelementptr inbounds %struct.Reg, %struct.Reg* %1586, i32 0, i32 0
  %PC.i1646 = bitcast %union.anon* %1587 to i64*
  %1588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1589 = getelementptr inbounds %struct.GPR, %struct.GPR* %1588, i32 0, i32 9
  %1590 = getelementptr inbounds %struct.Reg, %struct.Reg* %1589, i32 0, i32 0
  %RSI.i1647 = bitcast %union.anon* %1590 to i64*
  %1591 = load i64, i64* %RSI.i1647
  %1592 = load i64, i64* %PC.i1646
  %1593 = add i64 %1592, 3
  store i64 %1593, i64* %PC.i1646
  %1594 = and i64 -2, %1591
  %1595 = trunc i64 %1594 to i32
  %1596 = and i64 %1594, 4294967295
  store i64 %1596, i64* %RSI.i1647, align 8
  %1597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1597, align 1
  %1598 = and i32 %1595, 255
  %1599 = call i32 @llvm.ctpop.i32(i32 %1598)
  %1600 = trunc i32 %1599 to i8
  %1601 = and i8 %1600, 1
  %1602 = xor i8 %1601, 1
  %1603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1602, i8* %1603, align 1
  %1604 = icmp eq i32 %1595, 0
  %1605 = zext i1 %1604 to i8
  %1606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1605, i8* %1606, align 1
  %1607 = lshr i32 %1595, 31
  %1608 = trunc i32 %1607 to i8
  %1609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1608, i8* %1609, align 1
  %1610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1610, align 1
  %1611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1611, align 1
  store %struct.Memory* %loadMem_4336f8, %struct.Memory** %MEMORY
  %loadMem_4336fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1613 = getelementptr inbounds %struct.GPR, %struct.GPR* %1612, i32 0, i32 33
  %1614 = getelementptr inbounds %struct.Reg, %struct.Reg* %1613, i32 0, i32 0
  %PC.i1644 = bitcast %union.anon* %1614 to i64*
  %1615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1616 = getelementptr inbounds %struct.GPR, %struct.GPR* %1615, i32 0, i32 7
  %1617 = getelementptr inbounds %struct.Reg, %struct.Reg* %1616, i32 0, i32 0
  %RDX.i1645 = bitcast %union.anon* %1617 to i64*
  %1618 = load i64, i64* %PC.i1644
  %1619 = add i64 %1618, 8
  store i64 %1619, i64* %PC.i1644
  %1620 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1620, i64* %RDX.i1645, align 8
  store %struct.Memory* %loadMem_4336fb, %struct.Memory** %MEMORY
  %loadMem_433703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1622 = getelementptr inbounds %struct.GPR, %struct.GPR* %1621, i32 0, i32 33
  %1623 = getelementptr inbounds %struct.Reg, %struct.Reg* %1622, i32 0, i32 0
  %PC.i1641 = bitcast %union.anon* %1623 to i64*
  %1624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1625 = getelementptr inbounds %struct.GPR, %struct.GPR* %1624, i32 0, i32 9
  %1626 = getelementptr inbounds %struct.Reg, %struct.Reg* %1625, i32 0, i32 0
  %ESI.i1642 = bitcast %union.anon* %1626 to i32*
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1628 = getelementptr inbounds %struct.GPR, %struct.GPR* %1627, i32 0, i32 7
  %1629 = getelementptr inbounds %struct.Reg, %struct.Reg* %1628, i32 0, i32 0
  %RDX.i1643 = bitcast %union.anon* %1629 to i64*
  %1630 = load i64, i64* %RDX.i1643
  %1631 = add i64 %1630, 72692
  %1632 = load i32, i32* %ESI.i1642
  %1633 = zext i32 %1632 to i64
  %1634 = load i64, i64* %PC.i1641
  %1635 = add i64 %1634, 6
  store i64 %1635, i64* %PC.i1641
  %1636 = inttoptr i64 %1631 to i32*
  store i32 %1632, i32* %1636
  store %struct.Memory* %loadMem_433703, %struct.Memory** %MEMORY
  %loadMem_433709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1638 = getelementptr inbounds %struct.GPR, %struct.GPR* %1637, i32 0, i32 33
  %1639 = getelementptr inbounds %struct.Reg, %struct.Reg* %1638, i32 0, i32 0
  %PC.i1639 = bitcast %union.anon* %1639 to i64*
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1641 = getelementptr inbounds %struct.GPR, %struct.GPR* %1640, i32 0, i32 7
  %1642 = getelementptr inbounds %struct.Reg, %struct.Reg* %1641, i32 0, i32 0
  %RDX.i1640 = bitcast %union.anon* %1642 to i64*
  %1643 = load i64, i64* %PC.i1639
  %1644 = add i64 %1643, 8
  store i64 %1644, i64* %PC.i1639
  %1645 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1645, i64* %RDX.i1640, align 8
  store %struct.Memory* %loadMem_433709, %struct.Memory** %MEMORY
  %loadMem_433711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1647 = getelementptr inbounds %struct.GPR, %struct.GPR* %1646, i32 0, i32 33
  %1648 = getelementptr inbounds %struct.Reg, %struct.Reg* %1647, i32 0, i32 0
  %PC.i1636 = bitcast %union.anon* %1648 to i64*
  %1649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1650 = getelementptr inbounds %struct.GPR, %struct.GPR* %1649, i32 0, i32 7
  %1651 = getelementptr inbounds %struct.Reg, %struct.Reg* %1650, i32 0, i32 0
  %RDX.i1637 = bitcast %union.anon* %1651 to i64*
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1653 = getelementptr inbounds %struct.GPR, %struct.GPR* %1652, i32 0, i32 9
  %1654 = getelementptr inbounds %struct.Reg, %struct.Reg* %1653, i32 0, i32 0
  %RSI.i1638 = bitcast %union.anon* %1654 to i64*
  %1655 = load i64, i64* %RDX.i1637
  %1656 = add i64 %1655, 72692
  %1657 = load i64, i64* %PC.i1636
  %1658 = add i64 %1657, 6
  store i64 %1658, i64* %PC.i1636
  %1659 = inttoptr i64 %1656 to i32*
  %1660 = load i32, i32* %1659
  %1661 = zext i32 %1660 to i64
  store i64 %1661, i64* %RSI.i1638, align 8
  store %struct.Memory* %loadMem_433711, %struct.Memory** %MEMORY
  %loadMem_433717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1663 = getelementptr inbounds %struct.GPR, %struct.GPR* %1662, i32 0, i32 33
  %1664 = getelementptr inbounds %struct.Reg, %struct.Reg* %1663, i32 0, i32 0
  %PC.i1634 = bitcast %union.anon* %1664 to i64*
  %1665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1666 = getelementptr inbounds %struct.GPR, %struct.GPR* %1665, i32 0, i32 9
  %1667 = getelementptr inbounds %struct.Reg, %struct.Reg* %1666, i32 0, i32 0
  %RSI.i1635 = bitcast %union.anon* %1667 to i64*
  %1668 = load i64, i64* %RSI.i1635
  %1669 = load i64, i64* %PC.i1634
  %1670 = add i64 %1669, 2
  store i64 %1670, i64* %PC.i1634
  %1671 = trunc i64 %1668 to i32
  %1672 = shl i32 %1671, 1
  %1673 = icmp slt i32 %1671, 0
  %1674 = icmp slt i32 %1672, 0
  %1675 = xor i1 %1673, %1674
  %1676 = zext i32 %1672 to i64
  store i64 %1676, i64* %RSI.i1635, align 8
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1678 = zext i1 %1673 to i8
  store i8 %1678, i8* %1677, align 1
  %1679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1680 = and i32 %1672, 254
  %1681 = call i32 @llvm.ctpop.i32(i32 %1680)
  %1682 = trunc i32 %1681 to i8
  %1683 = and i8 %1682, 1
  %1684 = xor i8 %1683, 1
  store i8 %1684, i8* %1679, align 1
  %1685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1685, align 1
  %1686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1687 = icmp eq i32 %1672, 0
  %1688 = zext i1 %1687 to i8
  store i8 %1688, i8* %1686, align 1
  %1689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1690 = lshr i32 %1672, 31
  %1691 = trunc i32 %1690 to i8
  store i8 %1691, i8* %1689, align 1
  %1692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1693 = zext i1 %1675 to i8
  store i8 %1693, i8* %1692, align 1
  store %struct.Memory* %loadMem_433717, %struct.Memory** %MEMORY
  %loadMem_43371a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1695 = getelementptr inbounds %struct.GPR, %struct.GPR* %1694, i32 0, i32 33
  %1696 = getelementptr inbounds %struct.Reg, %struct.Reg* %1695, i32 0, i32 0
  %PC.i1632 = bitcast %union.anon* %1696 to i64*
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1698 = getelementptr inbounds %struct.GPR, %struct.GPR* %1697, i32 0, i32 7
  %1699 = getelementptr inbounds %struct.Reg, %struct.Reg* %1698, i32 0, i32 0
  %RDX.i1633 = bitcast %union.anon* %1699 to i64*
  %1700 = load i64, i64* %PC.i1632
  %1701 = add i64 %1700, 8
  store i64 %1701, i64* %PC.i1632
  %1702 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1702, i64* %RDX.i1633, align 8
  store %struct.Memory* %loadMem_43371a, %struct.Memory** %MEMORY
  %loadMem_433722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1704 = getelementptr inbounds %struct.GPR, %struct.GPR* %1703, i32 0, i32 33
  %1705 = getelementptr inbounds %struct.Reg, %struct.Reg* %1704, i32 0, i32 0
  %PC.i1629 = bitcast %union.anon* %1705 to i64*
  %1706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1707 = getelementptr inbounds %struct.GPR, %struct.GPR* %1706, i32 0, i32 9
  %1708 = getelementptr inbounds %struct.Reg, %struct.Reg* %1707, i32 0, i32 0
  %ESI.i1630 = bitcast %union.anon* %1708 to i32*
  %1709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1710 = getelementptr inbounds %struct.GPR, %struct.GPR* %1709, i32 0, i32 7
  %1711 = getelementptr inbounds %struct.Reg, %struct.Reg* %1710, i32 0, i32 0
  %RDX.i1631 = bitcast %union.anon* %1711 to i64*
  %1712 = load i64, i64* %RDX.i1631
  %1713 = add i64 %1712, 72696
  %1714 = load i32, i32* %ESI.i1630
  %1715 = zext i32 %1714 to i64
  %1716 = load i64, i64* %PC.i1629
  %1717 = add i64 %1716, 6
  store i64 %1717, i64* %PC.i1629
  %1718 = inttoptr i64 %1713 to i32*
  store i32 %1714, i32* %1718
  store %struct.Memory* %loadMem_433722, %struct.Memory** %MEMORY
  %loadMem_433728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1720 = getelementptr inbounds %struct.GPR, %struct.GPR* %1719, i32 0, i32 33
  %1721 = getelementptr inbounds %struct.Reg, %struct.Reg* %1720, i32 0, i32 0
  %PC.i1627 = bitcast %union.anon* %1721 to i64*
  %1722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1723 = getelementptr inbounds %struct.GPR, %struct.GPR* %1722, i32 0, i32 7
  %1724 = getelementptr inbounds %struct.Reg, %struct.Reg* %1723, i32 0, i32 0
  %RDX.i1628 = bitcast %union.anon* %1724 to i64*
  %1725 = load i64, i64* %PC.i1627
  %1726 = add i64 %1725, 8
  store i64 %1726, i64* %PC.i1627
  %1727 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1727, i64* %RDX.i1628, align 8
  store %struct.Memory* %loadMem_433728, %struct.Memory** %MEMORY
  %loadMem_433730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1729 = getelementptr inbounds %struct.GPR, %struct.GPR* %1728, i32 0, i32 33
  %1730 = getelementptr inbounds %struct.Reg, %struct.Reg* %1729, i32 0, i32 0
  %PC.i1625 = bitcast %union.anon* %1730 to i64*
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1732 = getelementptr inbounds %struct.GPR, %struct.GPR* %1731, i32 0, i32 7
  %1733 = getelementptr inbounds %struct.Reg, %struct.Reg* %1732, i32 0, i32 0
  %RDX.i1626 = bitcast %union.anon* %1733 to i64*
  %1734 = load i64, i64* %RDX.i1626
  %1735 = add i64 %1734, 72700
  %1736 = load i64, i64* %PC.i1625
  %1737 = add i64 %1736, 7
  store i64 %1737, i64* %PC.i1625
  %1738 = inttoptr i64 %1735 to i32*
  %1739 = load i32, i32* %1738
  %1740 = sub i32 %1739, 1
  %1741 = icmp ult i32 %1739, 1
  %1742 = zext i1 %1741 to i8
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1742, i8* %1743, align 1
  %1744 = and i32 %1740, 255
  %1745 = call i32 @llvm.ctpop.i32(i32 %1744)
  %1746 = trunc i32 %1745 to i8
  %1747 = and i8 %1746, 1
  %1748 = xor i8 %1747, 1
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1748, i8* %1749, align 1
  %1750 = xor i32 %1739, 1
  %1751 = xor i32 %1750, %1740
  %1752 = lshr i32 %1751, 4
  %1753 = trunc i32 %1752 to i8
  %1754 = and i8 %1753, 1
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1754, i8* %1755, align 1
  %1756 = icmp eq i32 %1740, 0
  %1757 = zext i1 %1756 to i8
  %1758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1757, i8* %1758, align 1
  %1759 = lshr i32 %1740, 31
  %1760 = trunc i32 %1759 to i8
  %1761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1760, i8* %1761, align 1
  %1762 = lshr i32 %1739, 31
  %1763 = xor i32 %1759, %1762
  %1764 = add i32 %1763, %1762
  %1765 = icmp eq i32 %1764, 2
  %1766 = zext i1 %1765 to i8
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1766, i8* %1767, align 1
  store %struct.Memory* %loadMem_433730, %struct.Memory** %MEMORY
  %loadMem_433737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1769 = getelementptr inbounds %struct.GPR, %struct.GPR* %1768, i32 0, i32 33
  %1770 = getelementptr inbounds %struct.Reg, %struct.Reg* %1769, i32 0, i32 0
  %PC.i1622 = bitcast %union.anon* %1770 to i64*
  %1771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1772 = getelementptr inbounds %struct.GPR, %struct.GPR* %1771, i32 0, i32 1
  %1773 = getelementptr inbounds %struct.Reg, %struct.Reg* %1772, i32 0, i32 0
  %1774 = bitcast %union.anon* %1773 to %struct.anon.2*
  %AL.i1623 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1774, i32 0, i32 0
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1776 = getelementptr inbounds %struct.GPR, %struct.GPR* %1775, i32 0, i32 15
  %1777 = getelementptr inbounds %struct.Reg, %struct.Reg* %1776, i32 0, i32 0
  %RBP.i1624 = bitcast %union.anon* %1777 to i64*
  %1778 = load i64, i64* %RBP.i1624
  %1779 = sub i64 %1778, 41
  %1780 = load i8, i8* %AL.i1623
  %1781 = zext i8 %1780 to i64
  %1782 = load i64, i64* %PC.i1622
  %1783 = add i64 %1782, 3
  store i64 %1783, i64* %PC.i1622
  %1784 = inttoptr i64 %1779 to i8*
  store i8 %1780, i8* %1784
  store %struct.Memory* %loadMem_433737, %struct.Memory** %MEMORY
  %loadMem_43373a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1786 = getelementptr inbounds %struct.GPR, %struct.GPR* %1785, i32 0, i32 33
  %1787 = getelementptr inbounds %struct.Reg, %struct.Reg* %1786, i32 0, i32 0
  %PC.i1621 = bitcast %union.anon* %1787 to i64*
  %1788 = load i64, i64* %PC.i1621
  %1789 = add i64 %1788, 27
  %1790 = load i64, i64* %PC.i1621
  %1791 = add i64 %1790, 6
  %1792 = load i64, i64* %PC.i1621
  %1793 = add i64 %1792, 6
  store i64 %1793, i64* %PC.i1621
  %1794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1795 = load i8, i8* %1794, align 1
  store i8 %1795, i8* %BRANCH_TAKEN, align 1
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1797 = icmp ne i8 %1795, 0
  %1798 = select i1 %1797, i64 %1789, i64 %1791
  store i64 %1798, i64* %1796, align 8
  store %struct.Memory* %loadMem_43373a, %struct.Memory** %MEMORY
  %loadBr_43373a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43373a = icmp eq i8 %loadBr_43373a, 1
  br i1 %cmpBr_43373a, label %block_.L_433755, label %block_433740

block_433740:                                     ; preds = %routine_shll__cl___esi.exit
  %loadMem_433740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1800 = getelementptr inbounds %struct.GPR, %struct.GPR* %1799, i32 0, i32 33
  %1801 = getelementptr inbounds %struct.Reg, %struct.Reg* %1800, i32 0, i32 0
  %PC.i1619 = bitcast %union.anon* %1801 to i64*
  %1802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1803 = getelementptr inbounds %struct.GPR, %struct.GPR* %1802, i32 0, i32 1
  %1804 = getelementptr inbounds %struct.Reg, %struct.Reg* %1803, i32 0, i32 0
  %RAX.i1620 = bitcast %union.anon* %1804 to i64*
  %1805 = load i64, i64* %PC.i1619
  %1806 = add i64 %1805, 8
  store i64 %1806, i64* %PC.i1619
  %1807 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1807, i64* %RAX.i1620, align 8
  store %struct.Memory* %loadMem_433740, %struct.Memory** %MEMORY
  %loadMem_433748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1809 = getelementptr inbounds %struct.GPR, %struct.GPR* %1808, i32 0, i32 33
  %1810 = getelementptr inbounds %struct.Reg, %struct.Reg* %1809, i32 0, i32 0
  %PC.i1617 = bitcast %union.anon* %1810 to i64*
  %1811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1812 = getelementptr inbounds %struct.GPR, %struct.GPR* %1811, i32 0, i32 1
  %1813 = getelementptr inbounds %struct.Reg, %struct.Reg* %1812, i32 0, i32 0
  %RAX.i1618 = bitcast %union.anon* %1813 to i64*
  %1814 = load i64, i64* %RAX.i1618
  %1815 = add i64 %1814, 72700
  %1816 = load i64, i64* %PC.i1617
  %1817 = add i64 %1816, 7
  store i64 %1817, i64* %PC.i1617
  %1818 = inttoptr i64 %1815 to i32*
  %1819 = load i32, i32* %1818
  %1820 = sub i32 %1819, 2
  %1821 = icmp ult i32 %1819, 2
  %1822 = zext i1 %1821 to i8
  %1823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1822, i8* %1823, align 1
  %1824 = and i32 %1820, 255
  %1825 = call i32 @llvm.ctpop.i32(i32 %1824)
  %1826 = trunc i32 %1825 to i8
  %1827 = and i8 %1826, 1
  %1828 = xor i8 %1827, 1
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1828, i8* %1829, align 1
  %1830 = xor i32 %1819, 2
  %1831 = xor i32 %1830, %1820
  %1832 = lshr i32 %1831, 4
  %1833 = trunc i32 %1832 to i8
  %1834 = and i8 %1833, 1
  %1835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1834, i8* %1835, align 1
  %1836 = icmp eq i32 %1820, 0
  %1837 = zext i1 %1836 to i8
  %1838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1837, i8* %1838, align 1
  %1839 = lshr i32 %1820, 31
  %1840 = trunc i32 %1839 to i8
  %1841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1840, i8* %1841, align 1
  %1842 = lshr i32 %1819, 31
  %1843 = xor i32 %1839, %1842
  %1844 = add i32 %1843, %1842
  %1845 = icmp eq i32 %1844, 2
  %1846 = zext i1 %1845 to i8
  %1847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1846, i8* %1847, align 1
  store %struct.Memory* %loadMem_433748, %struct.Memory** %MEMORY
  %loadMem_43374f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1849 = getelementptr inbounds %struct.GPR, %struct.GPR* %1848, i32 0, i32 33
  %1850 = getelementptr inbounds %struct.Reg, %struct.Reg* %1849, i32 0, i32 0
  %PC.i1615 = bitcast %union.anon* %1850 to i64*
  %1851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1852 = getelementptr inbounds %struct.GPR, %struct.GPR* %1851, i32 0, i32 5
  %1853 = getelementptr inbounds %struct.Reg, %struct.Reg* %1852, i32 0, i32 0
  %1854 = bitcast %union.anon* %1853 to %struct.anon.2*
  %CL.i1616 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1854, i32 0, i32 0
  %1855 = load i64, i64* %PC.i1615
  %1856 = add i64 %1855, 3
  store i64 %1856, i64* %PC.i1615
  %1857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1858 = load i8, i8* %1857, align 1
  store i8 %1858, i8* %CL.i1616, align 1
  store %struct.Memory* %loadMem_43374f, %struct.Memory** %MEMORY
  %loadMem_433752 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1860 = getelementptr inbounds %struct.GPR, %struct.GPR* %1859, i32 0, i32 33
  %1861 = getelementptr inbounds %struct.Reg, %struct.Reg* %1860, i32 0, i32 0
  %PC.i1612 = bitcast %union.anon* %1861 to i64*
  %1862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1863 = getelementptr inbounds %struct.GPR, %struct.GPR* %1862, i32 0, i32 5
  %1864 = getelementptr inbounds %struct.Reg, %struct.Reg* %1863, i32 0, i32 0
  %1865 = bitcast %union.anon* %1864 to %struct.anon.2*
  %CL.i1613 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1865, i32 0, i32 0
  %1866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1867 = getelementptr inbounds %struct.GPR, %struct.GPR* %1866, i32 0, i32 15
  %1868 = getelementptr inbounds %struct.Reg, %struct.Reg* %1867, i32 0, i32 0
  %RBP.i1614 = bitcast %union.anon* %1868 to i64*
  %1869 = load i64, i64* %RBP.i1614
  %1870 = sub i64 %1869, 41
  %1871 = load i8, i8* %CL.i1613
  %1872 = zext i8 %1871 to i64
  %1873 = load i64, i64* %PC.i1612
  %1874 = add i64 %1873, 3
  store i64 %1874, i64* %PC.i1612
  %1875 = inttoptr i64 %1870 to i8*
  store i8 %1871, i8* %1875
  store %struct.Memory* %loadMem_433752, %struct.Memory** %MEMORY
  br label %block_.L_433755

block_.L_433755:                                  ; preds = %block_433740, %routine_shll__cl___esi.exit
  %loadMem_433755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1877 = getelementptr inbounds %struct.GPR, %struct.GPR* %1876, i32 0, i32 33
  %1878 = getelementptr inbounds %struct.Reg, %struct.Reg* %1877, i32 0, i32 0
  %PC.i1609 = bitcast %union.anon* %1878 to i64*
  %1879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1880 = getelementptr inbounds %struct.GPR, %struct.GPR* %1879, i32 0, i32 1
  %1881 = getelementptr inbounds %struct.Reg, %struct.Reg* %1880, i32 0, i32 0
  %1882 = bitcast %union.anon* %1881 to %struct.anon.2*
  %AL.i1610 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1882, i32 0, i32 0
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1884 = getelementptr inbounds %struct.GPR, %struct.GPR* %1883, i32 0, i32 15
  %1885 = getelementptr inbounds %struct.Reg, %struct.Reg* %1884, i32 0, i32 0
  %RBP.i1611 = bitcast %union.anon* %1885 to i64*
  %1886 = load i64, i64* %RBP.i1611
  %1887 = sub i64 %1886, 41
  %1888 = load i64, i64* %PC.i1609
  %1889 = add i64 %1888, 3
  store i64 %1889, i64* %PC.i1609
  %1890 = inttoptr i64 %1887 to i8*
  %1891 = load i8, i8* %1890
  store i8 %1891, i8* %AL.i1610, align 1
  store %struct.Memory* %loadMem_433755, %struct.Memory** %MEMORY
  %loadMem_433758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1893 = getelementptr inbounds %struct.GPR, %struct.GPR* %1892, i32 0, i32 33
  %1894 = getelementptr inbounds %struct.Reg, %struct.Reg* %1893, i32 0, i32 0
  %PC.i1607 = bitcast %union.anon* %1894 to i64*
  %1895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1896 = getelementptr inbounds %struct.GPR, %struct.GPR* %1895, i32 0, i32 5
  %1897 = getelementptr inbounds %struct.Reg, %struct.Reg* %1896, i32 0, i32 0
  %1898 = bitcast %union.anon* %1897 to %struct.anon.2*
  %CL.i1608 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1898, i32 0, i32 0
  %1899 = load i64, i64* %PC.i1607
  %1900 = add i64 %1899, 2
  store i64 %1900, i64* %PC.i1607
  store i8 1, i8* %CL.i1608, align 1
  store %struct.Memory* %loadMem_433758, %struct.Memory** %MEMORY
  %loadMem_43375a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1902 = getelementptr inbounds %struct.GPR, %struct.GPR* %1901, i32 0, i32 33
  %1903 = getelementptr inbounds %struct.Reg, %struct.Reg* %1902, i32 0, i32 0
  %PC.i1605 = bitcast %union.anon* %1903 to i64*
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1905 = getelementptr inbounds %struct.GPR, %struct.GPR* %1904, i32 0, i32 7
  %1906 = getelementptr inbounds %struct.Reg, %struct.Reg* %1905, i32 0, i32 0
  %RDX.i1606 = bitcast %union.anon* %1906 to i64*
  %1907 = load i64, i64* %PC.i1605
  %1908 = add i64 %1907, 5
  store i64 %1908, i64* %PC.i1605
  store i64 16, i64* %RDX.i1606, align 8
  store %struct.Memory* %loadMem_43375a, %struct.Memory** %MEMORY
  %loadMem_43375f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1910 = getelementptr inbounds %struct.GPR, %struct.GPR* %1909, i32 0, i32 33
  %1911 = getelementptr inbounds %struct.Reg, %struct.Reg* %1910, i32 0, i32 0
  %PC.i1603 = bitcast %union.anon* %1911 to i64*
  %1912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1913 = getelementptr inbounds %struct.GPR, %struct.GPR* %1912, i32 0, i32 9
  %1914 = getelementptr inbounds %struct.Reg, %struct.Reg* %1913, i32 0, i32 0
  %RSI.i1604 = bitcast %union.anon* %1914 to i64*
  %1915 = load i64, i64* %PC.i1603
  %1916 = add i64 %1915, 5
  store i64 %1916, i64* %PC.i1603
  store i64 8, i64* %RSI.i1604, align 8
  store %struct.Memory* %loadMem_43375f, %struct.Memory** %MEMORY
  %loadMem_433764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1918 = getelementptr inbounds %struct.GPR, %struct.GPR* %1917, i32 0, i32 33
  %1919 = getelementptr inbounds %struct.Reg, %struct.Reg* %1918, i32 0, i32 0
  %PC.i1601 = bitcast %union.anon* %1919 to i64*
  %1920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1921 = getelementptr inbounds %struct.GPR, %struct.GPR* %1920, i32 0, i32 1
  %1922 = getelementptr inbounds %struct.Reg, %struct.Reg* %1921, i32 0, i32 0
  %1923 = bitcast %union.anon* %1922 to %struct.anon.2*
  %AL.i1602 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1923, i32 0, i32 0
  %1924 = load i8, i8* %AL.i1602
  %1925 = zext i8 %1924 to i64
  %1926 = load i64, i64* %PC.i1601
  %1927 = add i64 %1926, 2
  store i64 %1927, i64* %PC.i1601
  %1928 = and i64 1, %1925
  %1929 = trunc i64 %1928 to i8
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1930, align 1
  %1931 = trunc i64 %1928 to i32
  %1932 = and i32 %1931, 255
  %1933 = call i32 @llvm.ctpop.i32(i32 %1932)
  %1934 = trunc i32 %1933 to i8
  %1935 = and i8 %1934, 1
  %1936 = xor i8 %1935, 1
  %1937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1936, i8* %1937, align 1
  %1938 = icmp eq i8 %1929, 0
  %1939 = zext i1 %1938 to i8
  %1940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1939, i8* %1940, align 1
  %1941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1941, align 1
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1942, align 1
  %1943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1943, align 1
  store %struct.Memory* %loadMem_433764, %struct.Memory** %MEMORY
  %loadMem_433766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1945 = getelementptr inbounds %struct.GPR, %struct.GPR* %1944, i32 0, i32 33
  %1946 = getelementptr inbounds %struct.Reg, %struct.Reg* %1945, i32 0, i32 0
  %PC.i1598 = bitcast %union.anon* %1946 to i64*
  %1947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1948 = getelementptr inbounds %struct.GPR, %struct.GPR* %1947, i32 0, i32 9
  %1949 = getelementptr inbounds %struct.Reg, %struct.Reg* %1948, i32 0, i32 0
  %ESI.i1599 = bitcast %union.anon* %1949 to i32*
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1951 = getelementptr inbounds %struct.GPR, %struct.GPR* %1950, i32 0, i32 7
  %1952 = getelementptr inbounds %struct.Reg, %struct.Reg* %1951, i32 0, i32 0
  %RDX.i1600 = bitcast %union.anon* %1952 to i64*
  %1953 = load i32, i32* %ESI.i1599
  %1954 = zext i32 %1953 to i64
  %1955 = load i64, i64* %PC.i1598
  %1956 = add i64 %1955, 3
  store i64 %1956, i64* %PC.i1598
  %1957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1958 = load i8, i8* %1957, align 1
  %1959 = icmp eq i8 %1958, 0
  %1960 = load i64, i64* %RDX.i1600, align 8
  %1961 = select i1 %1959, i64 %1954, i64 %1960
  %1962 = and i64 %1961, 4294967295
  store i64 %1962, i64* %RDX.i1600, align 8
  store %struct.Memory* %loadMem_433766, %struct.Memory** %MEMORY
  %loadMem_433769 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1964 = getelementptr inbounds %struct.GPR, %struct.GPR* %1963, i32 0, i32 33
  %1965 = getelementptr inbounds %struct.Reg, %struct.Reg* %1964, i32 0, i32 0
  %PC.i1596 = bitcast %union.anon* %1965 to i64*
  %1966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1967 = getelementptr inbounds %struct.GPR, %struct.GPR* %1966, i32 0, i32 11
  %1968 = getelementptr inbounds %struct.Reg, %struct.Reg* %1967, i32 0, i32 0
  %RDI.i1597 = bitcast %union.anon* %1968 to i64*
  %1969 = load i64, i64* %PC.i1596
  %1970 = add i64 %1969, 8
  store i64 %1970, i64* %PC.i1596
  %1971 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1971, i64* %RDI.i1597, align 8
  store %struct.Memory* %loadMem_433769, %struct.Memory** %MEMORY
  %loadMem_433771 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1973 = getelementptr inbounds %struct.GPR, %struct.GPR* %1972, i32 0, i32 33
  %1974 = getelementptr inbounds %struct.Reg, %struct.Reg* %1973, i32 0, i32 0
  %PC.i1593 = bitcast %union.anon* %1974 to i64*
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1976 = getelementptr inbounds %struct.GPR, %struct.GPR* %1975, i32 0, i32 7
  %1977 = getelementptr inbounds %struct.Reg, %struct.Reg* %1976, i32 0, i32 0
  %EDX.i1594 = bitcast %union.anon* %1977 to i32*
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1979 = getelementptr inbounds %struct.GPR, %struct.GPR* %1978, i32 0, i32 11
  %1980 = getelementptr inbounds %struct.Reg, %struct.Reg* %1979, i32 0, i32 0
  %RDI.i1595 = bitcast %union.anon* %1980 to i64*
  %1981 = load i64, i64* %RDI.i1595
  %1982 = add i64 %1981, 72708
  %1983 = load i32, i32* %EDX.i1594
  %1984 = zext i32 %1983 to i64
  %1985 = load i64, i64* %PC.i1593
  %1986 = add i64 %1985, 6
  store i64 %1986, i64* %PC.i1593
  %1987 = inttoptr i64 %1982 to i32*
  store i32 %1983, i32* %1987
  store %struct.Memory* %loadMem_433771, %struct.Memory** %MEMORY
  %loadMem_433777 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1989 = getelementptr inbounds %struct.GPR, %struct.GPR* %1988, i32 0, i32 33
  %1990 = getelementptr inbounds %struct.Reg, %struct.Reg* %1989, i32 0, i32 0
  %PC.i1591 = bitcast %union.anon* %1990 to i64*
  %1991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1992 = getelementptr inbounds %struct.GPR, %struct.GPR* %1991, i32 0, i32 11
  %1993 = getelementptr inbounds %struct.Reg, %struct.Reg* %1992, i32 0, i32 0
  %RDI.i1592 = bitcast %union.anon* %1993 to i64*
  %1994 = load i64, i64* %PC.i1591
  %1995 = add i64 %1994, 8
  store i64 %1995, i64* %PC.i1591
  %1996 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1996, i64* %RDI.i1592, align 8
  store %struct.Memory* %loadMem_433777, %struct.Memory** %MEMORY
  %loadMem_43377f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1998 = getelementptr inbounds %struct.GPR, %struct.GPR* %1997, i32 0, i32 33
  %1999 = getelementptr inbounds %struct.Reg, %struct.Reg* %1998, i32 0, i32 0
  %PC.i1589 = bitcast %union.anon* %1999 to i64*
  %2000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2001 = getelementptr inbounds %struct.GPR, %struct.GPR* %2000, i32 0, i32 11
  %2002 = getelementptr inbounds %struct.Reg, %struct.Reg* %2001, i32 0, i32 0
  %RDI.i1590 = bitcast %union.anon* %2002 to i64*
  %2003 = load i64, i64* %RDI.i1590
  %2004 = add i64 %2003, 72700
  %2005 = load i64, i64* %PC.i1589
  %2006 = add i64 %2005, 7
  store i64 %2006, i64* %PC.i1589
  %2007 = inttoptr i64 %2004 to i32*
  %2008 = load i32, i32* %2007
  %2009 = sub i32 %2008, 3
  %2010 = icmp ult i32 %2008, 3
  %2011 = zext i1 %2010 to i8
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2011, i8* %2012, align 1
  %2013 = and i32 %2009, 255
  %2014 = call i32 @llvm.ctpop.i32(i32 %2013)
  %2015 = trunc i32 %2014 to i8
  %2016 = and i8 %2015, 1
  %2017 = xor i8 %2016, 1
  %2018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2017, i8* %2018, align 1
  %2019 = xor i32 %2008, 3
  %2020 = xor i32 %2019, %2009
  %2021 = lshr i32 %2020, 4
  %2022 = trunc i32 %2021 to i8
  %2023 = and i8 %2022, 1
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2023, i8* %2024, align 1
  %2025 = icmp eq i32 %2009, 0
  %2026 = zext i1 %2025 to i8
  %2027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2026, i8* %2027, align 1
  %2028 = lshr i32 %2009, 31
  %2029 = trunc i32 %2028 to i8
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2029, i8* %2030, align 1
  %2031 = lshr i32 %2008, 31
  %2032 = xor i32 %2028, %2031
  %2033 = add i32 %2032, %2031
  %2034 = icmp eq i32 %2033, 2
  %2035 = zext i1 %2034 to i8
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2035, i8* %2036, align 1
  store %struct.Memory* %loadMem_43377f, %struct.Memory** %MEMORY
  %loadMem_433786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2038 = getelementptr inbounds %struct.GPR, %struct.GPR* %2037, i32 0, i32 33
  %2039 = getelementptr inbounds %struct.Reg, %struct.Reg* %2038, i32 0, i32 0
  %PC.i1586 = bitcast %union.anon* %2039 to i64*
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2041 = getelementptr inbounds %struct.GPR, %struct.GPR* %2040, i32 0, i32 5
  %2042 = getelementptr inbounds %struct.Reg, %struct.Reg* %2041, i32 0, i32 0
  %2043 = bitcast %union.anon* %2042 to %struct.anon.2*
  %CL.i1587 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2043, i32 0, i32 0
  %2044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2045 = getelementptr inbounds %struct.GPR, %struct.GPR* %2044, i32 0, i32 15
  %2046 = getelementptr inbounds %struct.Reg, %struct.Reg* %2045, i32 0, i32 0
  %RBP.i1588 = bitcast %union.anon* %2046 to i64*
  %2047 = load i64, i64* %RBP.i1588
  %2048 = sub i64 %2047, 42
  %2049 = load i8, i8* %CL.i1587
  %2050 = zext i8 %2049 to i64
  %2051 = load i64, i64* %PC.i1586
  %2052 = add i64 %2051, 3
  store i64 %2052, i64* %PC.i1586
  %2053 = inttoptr i64 %2048 to i8*
  store i8 %2049, i8* %2053
  store %struct.Memory* %loadMem_433786, %struct.Memory** %MEMORY
  %loadMem_433789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2055 = getelementptr inbounds %struct.GPR, %struct.GPR* %2054, i32 0, i32 33
  %2056 = getelementptr inbounds %struct.Reg, %struct.Reg* %2055, i32 0, i32 0
  %PC.i1585 = bitcast %union.anon* %2056 to i64*
  %2057 = load i64, i64* %PC.i1585
  %2058 = add i64 %2057, 27
  %2059 = load i64, i64* %PC.i1585
  %2060 = add i64 %2059, 6
  %2061 = load i64, i64* %PC.i1585
  %2062 = add i64 %2061, 6
  store i64 %2062, i64* %PC.i1585
  %2063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2064 = load i8, i8* %2063, align 1
  store i8 %2064, i8* %BRANCH_TAKEN, align 1
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2066 = icmp ne i8 %2064, 0
  %2067 = select i1 %2066, i64 %2058, i64 %2060
  store i64 %2067, i64* %2065, align 8
  store %struct.Memory* %loadMem_433789, %struct.Memory** %MEMORY
  %loadBr_433789 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_433789 = icmp eq i8 %loadBr_433789, 1
  br i1 %cmpBr_433789, label %block_.L_4337a4, label %block_43378f

block_43378f:                                     ; preds = %block_.L_433755
  %loadMem_43378f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2069 = getelementptr inbounds %struct.GPR, %struct.GPR* %2068, i32 0, i32 33
  %2070 = getelementptr inbounds %struct.Reg, %struct.Reg* %2069, i32 0, i32 0
  %PC.i1583 = bitcast %union.anon* %2070 to i64*
  %2071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2072 = getelementptr inbounds %struct.GPR, %struct.GPR* %2071, i32 0, i32 1
  %2073 = getelementptr inbounds %struct.Reg, %struct.Reg* %2072, i32 0, i32 0
  %RAX.i1584 = bitcast %union.anon* %2073 to i64*
  %2074 = load i64, i64* %PC.i1583
  %2075 = add i64 %2074, 8
  store i64 %2075, i64* %PC.i1583
  %2076 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2076, i64* %RAX.i1584, align 8
  store %struct.Memory* %loadMem_43378f, %struct.Memory** %MEMORY
  %loadMem_433797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2078 = getelementptr inbounds %struct.GPR, %struct.GPR* %2077, i32 0, i32 33
  %2079 = getelementptr inbounds %struct.Reg, %struct.Reg* %2078, i32 0, i32 0
  %PC.i1581 = bitcast %union.anon* %2079 to i64*
  %2080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2081 = getelementptr inbounds %struct.GPR, %struct.GPR* %2080, i32 0, i32 1
  %2082 = getelementptr inbounds %struct.Reg, %struct.Reg* %2081, i32 0, i32 0
  %RAX.i1582 = bitcast %union.anon* %2082 to i64*
  %2083 = load i64, i64* %RAX.i1582
  %2084 = add i64 %2083, 72700
  %2085 = load i64, i64* %PC.i1581
  %2086 = add i64 %2085, 7
  store i64 %2086, i64* %PC.i1581
  %2087 = inttoptr i64 %2084 to i32*
  %2088 = load i32, i32* %2087
  %2089 = sub i32 %2088, 2
  %2090 = icmp ult i32 %2088, 2
  %2091 = zext i1 %2090 to i8
  %2092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2091, i8* %2092, align 1
  %2093 = and i32 %2089, 255
  %2094 = call i32 @llvm.ctpop.i32(i32 %2093)
  %2095 = trunc i32 %2094 to i8
  %2096 = and i8 %2095, 1
  %2097 = xor i8 %2096, 1
  %2098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2097, i8* %2098, align 1
  %2099 = xor i32 %2088, 2
  %2100 = xor i32 %2099, %2089
  %2101 = lshr i32 %2100, 4
  %2102 = trunc i32 %2101 to i8
  %2103 = and i8 %2102, 1
  %2104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2103, i8* %2104, align 1
  %2105 = icmp eq i32 %2089, 0
  %2106 = zext i1 %2105 to i8
  %2107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2106, i8* %2107, align 1
  %2108 = lshr i32 %2089, 31
  %2109 = trunc i32 %2108 to i8
  %2110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2109, i8* %2110, align 1
  %2111 = lshr i32 %2088, 31
  %2112 = xor i32 %2108, %2111
  %2113 = add i32 %2112, %2111
  %2114 = icmp eq i32 %2113, 2
  %2115 = zext i1 %2114 to i8
  %2116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2115, i8* %2116, align 1
  store %struct.Memory* %loadMem_433797, %struct.Memory** %MEMORY
  %loadMem_43379e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2118 = getelementptr inbounds %struct.GPR, %struct.GPR* %2117, i32 0, i32 33
  %2119 = getelementptr inbounds %struct.Reg, %struct.Reg* %2118, i32 0, i32 0
  %PC.i1579 = bitcast %union.anon* %2119 to i64*
  %2120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2121 = getelementptr inbounds %struct.GPR, %struct.GPR* %2120, i32 0, i32 5
  %2122 = getelementptr inbounds %struct.Reg, %struct.Reg* %2121, i32 0, i32 0
  %2123 = bitcast %union.anon* %2122 to %struct.anon.2*
  %CL.i1580 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2123, i32 0, i32 0
  %2124 = load i64, i64* %PC.i1579
  %2125 = add i64 %2124, 3
  store i64 %2125, i64* %PC.i1579
  %2126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2127 = load i8, i8* %2126, align 1
  store i8 %2127, i8* %CL.i1580, align 1
  store %struct.Memory* %loadMem_43379e, %struct.Memory** %MEMORY
  %loadMem_4337a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2129 = getelementptr inbounds %struct.GPR, %struct.GPR* %2128, i32 0, i32 33
  %2130 = getelementptr inbounds %struct.Reg, %struct.Reg* %2129, i32 0, i32 0
  %PC.i1577 = bitcast %union.anon* %2130 to i64*
  %2131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2132 = getelementptr inbounds %struct.GPR, %struct.GPR* %2131, i32 0, i32 5
  %2133 = getelementptr inbounds %struct.Reg, %struct.Reg* %2132, i32 0, i32 0
  %2134 = bitcast %union.anon* %2133 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2134, i32 0, i32 0
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2136 = getelementptr inbounds %struct.GPR, %struct.GPR* %2135, i32 0, i32 15
  %2137 = getelementptr inbounds %struct.Reg, %struct.Reg* %2136, i32 0, i32 0
  %RBP.i1578 = bitcast %union.anon* %2137 to i64*
  %2138 = load i64, i64* %RBP.i1578
  %2139 = sub i64 %2138, 42
  %2140 = load i8, i8* %CL.i
  %2141 = zext i8 %2140 to i64
  %2142 = load i64, i64* %PC.i1577
  %2143 = add i64 %2142, 3
  store i64 %2143, i64* %PC.i1577
  %2144 = inttoptr i64 %2139 to i8*
  store i8 %2140, i8* %2144
  store %struct.Memory* %loadMem_4337a1, %struct.Memory** %MEMORY
  br label %block_.L_4337a4

block_.L_4337a4:                                  ; preds = %block_43378f, %block_.L_433755
  %loadMem_4337a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2146 = getelementptr inbounds %struct.GPR, %struct.GPR* %2145, i32 0, i32 33
  %2147 = getelementptr inbounds %struct.Reg, %struct.Reg* %2146, i32 0, i32 0
  %PC.i1574 = bitcast %union.anon* %2147 to i64*
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2149 = getelementptr inbounds %struct.GPR, %struct.GPR* %2148, i32 0, i32 1
  %2150 = getelementptr inbounds %struct.Reg, %struct.Reg* %2149, i32 0, i32 0
  %2151 = bitcast %union.anon* %2150 to %struct.anon.2*
  %AL.i1575 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2151, i32 0, i32 0
  %2152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2153 = getelementptr inbounds %struct.GPR, %struct.GPR* %2152, i32 0, i32 15
  %2154 = getelementptr inbounds %struct.Reg, %struct.Reg* %2153, i32 0, i32 0
  %RBP.i1576 = bitcast %union.anon* %2154 to i64*
  %2155 = load i64, i64* %RBP.i1576
  %2156 = sub i64 %2155, 42
  %2157 = load i64, i64* %PC.i1574
  %2158 = add i64 %2157, 3
  store i64 %2158, i64* %PC.i1574
  %2159 = inttoptr i64 %2156 to i8*
  %2160 = load i8, i8* %2159
  store i8 %2160, i8* %AL.i1575, align 1
  store %struct.Memory* %loadMem_4337a4, %struct.Memory** %MEMORY
  %loadMem_4337a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2162 = getelementptr inbounds %struct.GPR, %struct.GPR* %2161, i32 0, i32 33
  %2163 = getelementptr inbounds %struct.Reg, %struct.Reg* %2162, i32 0, i32 0
  %PC.i1572 = bitcast %union.anon* %2163 to i64*
  %2164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2165 = getelementptr inbounds %struct.GPR, %struct.GPR* %2164, i32 0, i32 5
  %2166 = getelementptr inbounds %struct.Reg, %struct.Reg* %2165, i32 0, i32 0
  %RCX.i1573 = bitcast %union.anon* %2166 to i64*
  %2167 = load i64, i64* %PC.i1572
  %2168 = add i64 %2167, 5
  store i64 %2168, i64* %PC.i1572
  store i64 8, i64* %RCX.i1573, align 8
  store %struct.Memory* %loadMem_4337a7, %struct.Memory** %MEMORY
  %loadMem_4337ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2170 = getelementptr inbounds %struct.GPR, %struct.GPR* %2169, i32 0, i32 33
  %2171 = getelementptr inbounds %struct.Reg, %struct.Reg* %2170, i32 0, i32 0
  %PC.i1570 = bitcast %union.anon* %2171 to i64*
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2173 = getelementptr inbounds %struct.GPR, %struct.GPR* %2172, i32 0, i32 7
  %2174 = getelementptr inbounds %struct.Reg, %struct.Reg* %2173, i32 0, i32 0
  %RDX.i1571 = bitcast %union.anon* %2174 to i64*
  %2175 = load i64, i64* %PC.i1570
  %2176 = add i64 %2175, 5
  store i64 %2176, i64* %PC.i1570
  store i64 16, i64* %RDX.i1571, align 8
  store %struct.Memory* %loadMem_4337ac, %struct.Memory** %MEMORY
  %loadMem_4337b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2178 = getelementptr inbounds %struct.GPR, %struct.GPR* %2177, i32 0, i32 33
  %2179 = getelementptr inbounds %struct.Reg, %struct.Reg* %2178, i32 0, i32 0
  %PC.i1568 = bitcast %union.anon* %2179 to i64*
  %2180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2181 = getelementptr inbounds %struct.GPR, %struct.GPR* %2180, i32 0, i32 1
  %2182 = getelementptr inbounds %struct.Reg, %struct.Reg* %2181, i32 0, i32 0
  %2183 = bitcast %union.anon* %2182 to %struct.anon.2*
  %AL.i1569 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2183, i32 0, i32 0
  %2184 = load i8, i8* %AL.i1569
  %2185 = zext i8 %2184 to i64
  %2186 = load i64, i64* %PC.i1568
  %2187 = add i64 %2186, 2
  store i64 %2187, i64* %PC.i1568
  %2188 = and i64 1, %2185
  %2189 = trunc i64 %2188 to i8
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2190, align 1
  %2191 = trunc i64 %2188 to i32
  %2192 = and i32 %2191, 255
  %2193 = call i32 @llvm.ctpop.i32(i32 %2192)
  %2194 = trunc i32 %2193 to i8
  %2195 = and i8 %2194, 1
  %2196 = xor i8 %2195, 1
  %2197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2196, i8* %2197, align 1
  %2198 = icmp eq i8 %2189, 0
  %2199 = zext i1 %2198 to i8
  %2200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2199, i8* %2200, align 1
  %2201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2201, align 1
  %2202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2202, align 1
  %2203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2203, align 1
  store %struct.Memory* %loadMem_4337b1, %struct.Memory** %MEMORY
  %loadMem_4337b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2205 = getelementptr inbounds %struct.GPR, %struct.GPR* %2204, i32 0, i32 33
  %2206 = getelementptr inbounds %struct.Reg, %struct.Reg* %2205, i32 0, i32 0
  %PC.i1565 = bitcast %union.anon* %2206 to i64*
  %2207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2208 = getelementptr inbounds %struct.GPR, %struct.GPR* %2207, i32 0, i32 7
  %2209 = getelementptr inbounds %struct.Reg, %struct.Reg* %2208, i32 0, i32 0
  %EDX.i1566 = bitcast %union.anon* %2209 to i32*
  %2210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2211 = getelementptr inbounds %struct.GPR, %struct.GPR* %2210, i32 0, i32 5
  %2212 = getelementptr inbounds %struct.Reg, %struct.Reg* %2211, i32 0, i32 0
  %RCX.i1567 = bitcast %union.anon* %2212 to i64*
  %2213 = load i32, i32* %EDX.i1566
  %2214 = zext i32 %2213 to i64
  %2215 = load i64, i64* %PC.i1565
  %2216 = add i64 %2215, 3
  store i64 %2216, i64* %PC.i1565
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2218 = load i8, i8* %2217, align 1
  %2219 = icmp eq i8 %2218, 0
  %2220 = load i64, i64* %RCX.i1567, align 8
  %2221 = select i1 %2219, i64 %2214, i64 %2220
  %2222 = and i64 %2221, 4294967295
  store i64 %2222, i64* %RCX.i1567, align 8
  store %struct.Memory* %loadMem_4337b3, %struct.Memory** %MEMORY
  %loadMem_4337b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2224 = getelementptr inbounds %struct.GPR, %struct.GPR* %2223, i32 0, i32 33
  %2225 = getelementptr inbounds %struct.Reg, %struct.Reg* %2224, i32 0, i32 0
  %PC.i1563 = bitcast %union.anon* %2225 to i64*
  %2226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2227 = getelementptr inbounds %struct.GPR, %struct.GPR* %2226, i32 0, i32 9
  %2228 = getelementptr inbounds %struct.Reg, %struct.Reg* %2227, i32 0, i32 0
  %RSI.i1564 = bitcast %union.anon* %2228 to i64*
  %2229 = load i64, i64* %PC.i1563
  %2230 = add i64 %2229, 8
  store i64 %2230, i64* %PC.i1563
  %2231 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2231, i64* %RSI.i1564, align 8
  store %struct.Memory* %loadMem_4337b6, %struct.Memory** %MEMORY
  %loadMem_4337be = load %struct.Memory*, %struct.Memory** %MEMORY
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2233 = getelementptr inbounds %struct.GPR, %struct.GPR* %2232, i32 0, i32 33
  %2234 = getelementptr inbounds %struct.Reg, %struct.Reg* %2233, i32 0, i32 0
  %PC.i1560 = bitcast %union.anon* %2234 to i64*
  %2235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2236 = getelementptr inbounds %struct.GPR, %struct.GPR* %2235, i32 0, i32 5
  %2237 = getelementptr inbounds %struct.Reg, %struct.Reg* %2236, i32 0, i32 0
  %ECX.i1561 = bitcast %union.anon* %2237 to i32*
  %2238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2239 = getelementptr inbounds %struct.GPR, %struct.GPR* %2238, i32 0, i32 9
  %2240 = getelementptr inbounds %struct.Reg, %struct.Reg* %2239, i32 0, i32 0
  %RSI.i1562 = bitcast %union.anon* %2240 to i64*
  %2241 = load i64, i64* %RSI.i1562
  %2242 = add i64 %2241, 72712
  %2243 = load i32, i32* %ECX.i1561
  %2244 = zext i32 %2243 to i64
  %2245 = load i64, i64* %PC.i1560
  %2246 = add i64 %2245, 6
  store i64 %2246, i64* %PC.i1560
  %2247 = inttoptr i64 %2242 to i32*
  store i32 %2243, i32* %2247
  store %struct.Memory* %loadMem_4337be, %struct.Memory** %MEMORY
  %loadMem_4337c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2249 = getelementptr inbounds %struct.GPR, %struct.GPR* %2248, i32 0, i32 33
  %2250 = getelementptr inbounds %struct.Reg, %struct.Reg* %2249, i32 0, i32 0
  %PC.i1558 = bitcast %union.anon* %2250 to i64*
  %2251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2252 = getelementptr inbounds %struct.GPR, %struct.GPR* %2251, i32 0, i32 9
  %2253 = getelementptr inbounds %struct.Reg, %struct.Reg* %2252, i32 0, i32 0
  %RSI.i1559 = bitcast %union.anon* %2253 to i64*
  %2254 = load i64, i64* %PC.i1558
  %2255 = add i64 %2254, 8
  store i64 %2255, i64* %PC.i1558
  %2256 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2256, i64* %RSI.i1559, align 8
  store %struct.Memory* %loadMem_4337c4, %struct.Memory** %MEMORY
  %loadMem_4337cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2258 = getelementptr inbounds %struct.GPR, %struct.GPR* %2257, i32 0, i32 33
  %2259 = getelementptr inbounds %struct.Reg, %struct.Reg* %2258, i32 0, i32 0
  %PC.i1555 = bitcast %union.anon* %2259 to i64*
  %2260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2261 = getelementptr inbounds %struct.GPR, %struct.GPR* %2260, i32 0, i32 5
  %2262 = getelementptr inbounds %struct.Reg, %struct.Reg* %2261, i32 0, i32 0
  %RCX.i1556 = bitcast %union.anon* %2262 to i64*
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2264 = getelementptr inbounds %struct.GPR, %struct.GPR* %2263, i32 0, i32 9
  %2265 = getelementptr inbounds %struct.Reg, %struct.Reg* %2264, i32 0, i32 0
  %RSI.i1557 = bitcast %union.anon* %2265 to i64*
  %2266 = load i64, i64* %RSI.i1557
  %2267 = add i64 %2266, 72664
  %2268 = load i64, i64* %PC.i1555
  %2269 = add i64 %2268, 6
  store i64 %2269, i64* %PC.i1555
  %2270 = inttoptr i64 %2267 to i32*
  %2271 = load i32, i32* %2270
  %2272 = zext i32 %2271 to i64
  store i64 %2272, i64* %RCX.i1556, align 8
  store %struct.Memory* %loadMem_4337cc, %struct.Memory** %MEMORY
  %loadMem_4337d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2274 = getelementptr inbounds %struct.GPR, %struct.GPR* %2273, i32 0, i32 33
  %2275 = getelementptr inbounds %struct.Reg, %struct.Reg* %2274, i32 0, i32 0
  %PC.i1553 = bitcast %union.anon* %2275 to i64*
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2277 = getelementptr inbounds %struct.GPR, %struct.GPR* %2276, i32 0, i32 5
  %2278 = getelementptr inbounds %struct.Reg, %struct.Reg* %2277, i32 0, i32 0
  %RCX.i1554 = bitcast %union.anon* %2278 to i64*
  %2279 = load i64, i64* %RCX.i1554
  %2280 = load i64, i64* %PC.i1553
  %2281 = add i64 %2280, 3
  store i64 %2281, i64* %PC.i1553
  %2282 = trunc i64 %2279 to i32
  %2283 = sub i32 %2282, 8
  %2284 = zext i32 %2283 to i64
  store i64 %2284, i64* %RCX.i1554, align 8
  %2285 = icmp ult i32 %2282, 8
  %2286 = zext i1 %2285 to i8
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2286, i8* %2287, align 1
  %2288 = and i32 %2283, 255
  %2289 = call i32 @llvm.ctpop.i32(i32 %2288)
  %2290 = trunc i32 %2289 to i8
  %2291 = and i8 %2290, 1
  %2292 = xor i8 %2291, 1
  %2293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2292, i8* %2293, align 1
  %2294 = xor i64 8, %2279
  %2295 = trunc i64 %2294 to i32
  %2296 = xor i32 %2295, %2283
  %2297 = lshr i32 %2296, 4
  %2298 = trunc i32 %2297 to i8
  %2299 = and i8 %2298, 1
  %2300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2299, i8* %2300, align 1
  %2301 = icmp eq i32 %2283, 0
  %2302 = zext i1 %2301 to i8
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2302, i8* %2303, align 1
  %2304 = lshr i32 %2283, 31
  %2305 = trunc i32 %2304 to i8
  %2306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2305, i8* %2306, align 1
  %2307 = lshr i32 %2282, 31
  %2308 = xor i32 %2304, %2307
  %2309 = add i32 %2308, %2307
  %2310 = icmp eq i32 %2309, 2
  %2311 = zext i1 %2310 to i8
  %2312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2311, i8* %2312, align 1
  store %struct.Memory* %loadMem_4337d2, %struct.Memory** %MEMORY
  %loadMem_4337d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2314 = getelementptr inbounds %struct.GPR, %struct.GPR* %2313, i32 0, i32 33
  %2315 = getelementptr inbounds %struct.Reg, %struct.Reg* %2314, i32 0, i32 0
  %PC.i1550 = bitcast %union.anon* %2315 to i64*
  %2316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2317 = getelementptr inbounds %struct.GPR, %struct.GPR* %2316, i32 0, i32 5
  %2318 = getelementptr inbounds %struct.Reg, %struct.Reg* %2317, i32 0, i32 0
  %ECX.i1551 = bitcast %union.anon* %2318 to i32*
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2320 = getelementptr inbounds %struct.GPR, %struct.GPR* %2319, i32 0, i32 5
  %2321 = getelementptr inbounds %struct.Reg, %struct.Reg* %2320, i32 0, i32 0
  %RCX.i1552 = bitcast %union.anon* %2321 to i64*
  %2322 = load i32, i32* %ECX.i1551
  %2323 = zext i32 %2322 to i64
  %2324 = load i64, i64* %PC.i1550
  %2325 = add i64 %2324, 3
  store i64 %2325, i64* %PC.i1550
  %2326 = shl i64 %2323, 32
  %2327 = ashr exact i64 %2326, 32
  %2328 = mul i64 6, %2327
  %2329 = trunc i64 %2328 to i32
  %2330 = and i64 %2328, 4294967295
  store i64 %2330, i64* %RCX.i1552, align 8
  %2331 = shl i64 %2328, 32
  %2332 = ashr exact i64 %2331, 32
  %2333 = icmp ne i64 %2332, %2328
  %2334 = zext i1 %2333 to i8
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2334, i8* %2335, align 1
  %2336 = and i32 %2329, 255
  %2337 = call i32 @llvm.ctpop.i32(i32 %2336)
  %2338 = trunc i32 %2337 to i8
  %2339 = and i8 %2338, 1
  %2340 = xor i8 %2339, 1
  %2341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2340, i8* %2341, align 1
  %2342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2342, align 1
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2343, align 1
  %2344 = lshr i32 %2329, 31
  %2345 = trunc i32 %2344 to i8
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2345, i8* %2346, align 1
  %2347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2334, i8* %2347, align 1
  store %struct.Memory* %loadMem_4337d5, %struct.Memory** %MEMORY
  %loadMem_4337d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2349 = getelementptr inbounds %struct.GPR, %struct.GPR* %2348, i32 0, i32 33
  %2350 = getelementptr inbounds %struct.Reg, %struct.Reg* %2349, i32 0, i32 0
  %PC.i1548 = bitcast %union.anon* %2350 to i64*
  %2351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2352 = getelementptr inbounds %struct.GPR, %struct.GPR* %2351, i32 0, i32 9
  %2353 = getelementptr inbounds %struct.Reg, %struct.Reg* %2352, i32 0, i32 0
  %RSI.i1549 = bitcast %union.anon* %2353 to i64*
  %2354 = load i64, i64* %PC.i1548
  %2355 = add i64 %2354, 8
  store i64 %2355, i64* %PC.i1548
  %2356 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2356, i64* %RSI.i1549, align 8
  store %struct.Memory* %loadMem_4337d8, %struct.Memory** %MEMORY
  %loadMem_4337e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2358 = getelementptr inbounds %struct.GPR, %struct.GPR* %2357, i32 0, i32 33
  %2359 = getelementptr inbounds %struct.Reg, %struct.Reg* %2358, i32 0, i32 0
  %PC.i1545 = bitcast %union.anon* %2359 to i64*
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2361 = getelementptr inbounds %struct.GPR, %struct.GPR* %2360, i32 0, i32 5
  %2362 = getelementptr inbounds %struct.Reg, %struct.Reg* %2361, i32 0, i32 0
  %ECX.i1546 = bitcast %union.anon* %2362 to i32*
  %2363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2364 = getelementptr inbounds %struct.GPR, %struct.GPR* %2363, i32 0, i32 9
  %2365 = getelementptr inbounds %struct.Reg, %struct.Reg* %2364, i32 0, i32 0
  %RSI.i1547 = bitcast %union.anon* %2365 to i64*
  %2366 = load i64, i64* %RSI.i1547
  %2367 = add i64 %2366, 72672
  %2368 = load i32, i32* %ECX.i1546
  %2369 = zext i32 %2368 to i64
  %2370 = load i64, i64* %PC.i1545
  %2371 = add i64 %2370, 6
  store i64 %2371, i64* %PC.i1545
  %2372 = inttoptr i64 %2367 to i32*
  store i32 %2368, i32* %2372
  store %struct.Memory* %loadMem_4337e0, %struct.Memory** %MEMORY
  %loadMem_4337e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2374 = getelementptr inbounds %struct.GPR, %struct.GPR* %2373, i32 0, i32 33
  %2375 = getelementptr inbounds %struct.Reg, %struct.Reg* %2374, i32 0, i32 0
  %PC.i1543 = bitcast %union.anon* %2375 to i64*
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2377 = getelementptr inbounds %struct.GPR, %struct.GPR* %2376, i32 0, i32 9
  %2378 = getelementptr inbounds %struct.Reg, %struct.Reg* %2377, i32 0, i32 0
  %RSI.i1544 = bitcast %union.anon* %2378 to i64*
  %2379 = load i64, i64* %PC.i1543
  %2380 = add i64 %2379, 8
  store i64 %2380, i64* %PC.i1543
  %2381 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2381, i64* %RSI.i1544, align 8
  store %struct.Memory* %loadMem_4337e6, %struct.Memory** %MEMORY
  %loadMem_4337ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %2382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2383 = getelementptr inbounds %struct.GPR, %struct.GPR* %2382, i32 0, i32 33
  %2384 = getelementptr inbounds %struct.Reg, %struct.Reg* %2383, i32 0, i32 0
  %PC.i1541 = bitcast %union.anon* %2384 to i64*
  %2385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2386 = getelementptr inbounds %struct.GPR, %struct.GPR* %2385, i32 0, i32 9
  %2387 = getelementptr inbounds %struct.Reg, %struct.Reg* %2386, i32 0, i32 0
  %RSI.i1542 = bitcast %union.anon* %2387 to i64*
  %2388 = load i64, i64* %RSI.i1542
  %2389 = add i64 %2388, 72724
  %2390 = load i64, i64* %PC.i1541
  %2391 = add i64 %2390, 7
  store i64 %2391, i64* %PC.i1541
  %2392 = inttoptr i64 %2389 to i32*
  %2393 = load i32, i32* %2392
  %2394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2394, align 1
  %2395 = and i32 %2393, 255
  %2396 = call i32 @llvm.ctpop.i32(i32 %2395)
  %2397 = trunc i32 %2396 to i8
  %2398 = and i8 %2397, 1
  %2399 = xor i8 %2398, 1
  %2400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2399, i8* %2400, align 1
  %2401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2401, align 1
  %2402 = icmp eq i32 %2393, 0
  %2403 = zext i1 %2402 to i8
  %2404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2403, i8* %2404, align 1
  %2405 = lshr i32 %2393, 31
  %2406 = trunc i32 %2405 to i8
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2406, i8* %2407, align 1
  %2408 = lshr i32 %2393, 31
  %2409 = xor i32 %2405, %2408
  %2410 = add i32 %2409, %2408
  %2411 = icmp eq i32 %2410, 2
  %2412 = zext i1 %2411 to i8
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2412, i8* %2413, align 1
  store %struct.Memory* %loadMem_4337ee, %struct.Memory** %MEMORY
  %loadMem_4337f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2415 = getelementptr inbounds %struct.GPR, %struct.GPR* %2414, i32 0, i32 33
  %2416 = getelementptr inbounds %struct.Reg, %struct.Reg* %2415, i32 0, i32 0
  %PC.i1540 = bitcast %union.anon* %2416 to i64*
  %2417 = load i64, i64* %PC.i1540
  %2418 = add i64 %2417, 29
  %2419 = load i64, i64* %PC.i1540
  %2420 = add i64 %2419, 6
  %2421 = load i64, i64* %PC.i1540
  %2422 = add i64 %2421, 6
  store i64 %2422, i64* %PC.i1540
  %2423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2424 = load i8, i8* %2423, align 1
  store i8 %2424, i8* %BRANCH_TAKEN, align 1
  %2425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2426 = icmp ne i8 %2424, 0
  %2427 = select i1 %2426, i64 %2418, i64 %2420
  store i64 %2427, i64* %2425, align 8
  store %struct.Memory* %loadMem_4337f5, %struct.Memory** %MEMORY
  %loadBr_4337f5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4337f5 = icmp eq i8 %loadBr_4337f5, 1
  br i1 %cmpBr_4337f5, label %block_.L_433812, label %block_4337fb

block_4337fb:                                     ; preds = %block_.L_4337a4
  %loadMem_4337fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2429 = getelementptr inbounds %struct.GPR, %struct.GPR* %2428, i32 0, i32 33
  %2430 = getelementptr inbounds %struct.Reg, %struct.Reg* %2429, i32 0, i32 0
  %PC.i1538 = bitcast %union.anon* %2430 to i64*
  %2431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2432 = getelementptr inbounds %struct.GPR, %struct.GPR* %2431, i32 0, i32 1
  %2433 = getelementptr inbounds %struct.Reg, %struct.Reg* %2432, i32 0, i32 0
  %RAX.i1539 = bitcast %union.anon* %2433 to i64*
  %2434 = load i64, i64* %PC.i1538
  %2435 = add i64 %2434, 8
  store i64 %2435, i64* %PC.i1538
  %2436 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2436, i64* %RAX.i1539, align 8
  store %struct.Memory* %loadMem_4337fb, %struct.Memory** %MEMORY
  %loadMem_433803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2438 = getelementptr inbounds %struct.GPR, %struct.GPR* %2437, i32 0, i32 33
  %2439 = getelementptr inbounds %struct.Reg, %struct.Reg* %2438, i32 0, i32 0
  %PC.i1535 = bitcast %union.anon* %2439 to i64*
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2441 = getelementptr inbounds %struct.GPR, %struct.GPR* %2440, i32 0, i32 1
  %2442 = getelementptr inbounds %struct.Reg, %struct.Reg* %2441, i32 0, i32 0
  %RAX.i1536 = bitcast %union.anon* %2442 to i64*
  %2443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2444 = getelementptr inbounds %struct.GPR, %struct.GPR* %2443, i32 0, i32 5
  %2445 = getelementptr inbounds %struct.Reg, %struct.Reg* %2444, i32 0, i32 0
  %RCX.i1537 = bitcast %union.anon* %2445 to i64*
  %2446 = load i64, i64* %RAX.i1536
  %2447 = add i64 %2446, 72672
  %2448 = load i64, i64* %PC.i1535
  %2449 = add i64 %2448, 6
  store i64 %2449, i64* %PC.i1535
  %2450 = inttoptr i64 %2447 to i32*
  %2451 = load i32, i32* %2450
  %2452 = zext i32 %2451 to i64
  store i64 %2452, i64* %RCX.i1537, align 8
  store %struct.Memory* %loadMem_433803, %struct.Memory** %MEMORY
  %loadMem_433809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2454 = getelementptr inbounds %struct.GPR, %struct.GPR* %2453, i32 0, i32 33
  %2455 = getelementptr inbounds %struct.Reg, %struct.Reg* %2454, i32 0, i32 0
  %PC.i1533 = bitcast %union.anon* %2455 to i64*
  %2456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2457 = getelementptr inbounds %struct.GPR, %struct.GPR* %2456, i32 0, i32 5
  %2458 = getelementptr inbounds %struct.Reg, %struct.Reg* %2457, i32 0, i32 0
  %RCX.i1534 = bitcast %union.anon* %2458 to i64*
  %2459 = load i64, i64* %RCX.i1534
  %2460 = load i64, i64* %PC.i1533
  %2461 = add i64 %2460, 3
  store i64 %2461, i64* %PC.i1533
  %2462 = trunc i64 %2459 to i32
  %2463 = add i32 6, %2462
  %2464 = zext i32 %2463 to i64
  store i64 %2464, i64* %RCX.i1534, align 8
  %2465 = icmp ult i32 %2463, %2462
  %2466 = icmp ult i32 %2463, 6
  %2467 = or i1 %2465, %2466
  %2468 = zext i1 %2467 to i8
  %2469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2468, i8* %2469, align 1
  %2470 = and i32 %2463, 255
  %2471 = call i32 @llvm.ctpop.i32(i32 %2470)
  %2472 = trunc i32 %2471 to i8
  %2473 = and i8 %2472, 1
  %2474 = xor i8 %2473, 1
  %2475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2474, i8* %2475, align 1
  %2476 = xor i64 6, %2459
  %2477 = trunc i64 %2476 to i32
  %2478 = xor i32 %2477, %2463
  %2479 = lshr i32 %2478, 4
  %2480 = trunc i32 %2479 to i8
  %2481 = and i8 %2480, 1
  %2482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2481, i8* %2482, align 1
  %2483 = icmp eq i32 %2463, 0
  %2484 = zext i1 %2483 to i8
  %2485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2484, i8* %2485, align 1
  %2486 = lshr i32 %2463, 31
  %2487 = trunc i32 %2486 to i8
  %2488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2487, i8* %2488, align 1
  %2489 = lshr i32 %2462, 31
  %2490 = xor i32 %2486, %2489
  %2491 = add i32 %2490, %2486
  %2492 = icmp eq i32 %2491, 2
  %2493 = zext i1 %2492 to i8
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2493, i8* %2494, align 1
  store %struct.Memory* %loadMem_433809, %struct.Memory** %MEMORY
  %loadMem_43380c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2496 = getelementptr inbounds %struct.GPR, %struct.GPR* %2495, i32 0, i32 33
  %2497 = getelementptr inbounds %struct.Reg, %struct.Reg* %2496, i32 0, i32 0
  %PC.i1530 = bitcast %union.anon* %2497 to i64*
  %2498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2499 = getelementptr inbounds %struct.GPR, %struct.GPR* %2498, i32 0, i32 5
  %2500 = getelementptr inbounds %struct.Reg, %struct.Reg* %2499, i32 0, i32 0
  %ECX.i1531 = bitcast %union.anon* %2500 to i32*
  %2501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2502 = getelementptr inbounds %struct.GPR, %struct.GPR* %2501, i32 0, i32 1
  %2503 = getelementptr inbounds %struct.Reg, %struct.Reg* %2502, i32 0, i32 0
  %RAX.i1532 = bitcast %union.anon* %2503 to i64*
  %2504 = load i64, i64* %RAX.i1532
  %2505 = add i64 %2504, 72672
  %2506 = load i32, i32* %ECX.i1531
  %2507 = zext i32 %2506 to i64
  %2508 = load i64, i64* %PC.i1530
  %2509 = add i64 %2508, 6
  store i64 %2509, i64* %PC.i1530
  %2510 = inttoptr i64 %2505 to i32*
  store i32 %2506, i32* %2510
  store %struct.Memory* %loadMem_43380c, %struct.Memory** %MEMORY
  br label %block_.L_433812

block_.L_433812:                                  ; preds = %block_4337fb, %block_.L_4337a4
  %loadMem_433812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2512 = getelementptr inbounds %struct.GPR, %struct.GPR* %2511, i32 0, i32 33
  %2513 = getelementptr inbounds %struct.Reg, %struct.Reg* %2512, i32 0, i32 0
  %PC.i1528 = bitcast %union.anon* %2513 to i64*
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2515 = getelementptr inbounds %struct.GPR, %struct.GPR* %2514, i32 0, i32 1
  %2516 = getelementptr inbounds %struct.Reg, %struct.Reg* %2515, i32 0, i32 0
  %RAX.i1529 = bitcast %union.anon* %2516 to i64*
  %2517 = load i64, i64* %PC.i1528
  %2518 = add i64 %2517, 8
  store i64 %2518, i64* %PC.i1528
  %2519 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %2519, i64* %RAX.i1529, align 8
  store %struct.Memory* %loadMem_433812, %struct.Memory** %MEMORY
  %loadMem_43381a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2521 = getelementptr inbounds %struct.GPR, %struct.GPR* %2520, i32 0, i32 33
  %2522 = getelementptr inbounds %struct.Reg, %struct.Reg* %2521, i32 0, i32 0
  %PC.i1525 = bitcast %union.anon* %2522 to i64*
  %2523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2524 = getelementptr inbounds %struct.GPR, %struct.GPR* %2523, i32 0, i32 1
  %2525 = getelementptr inbounds %struct.Reg, %struct.Reg* %2524, i32 0, i32 0
  %RAX.i1526 = bitcast %union.anon* %2525 to i64*
  %2526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2527 = getelementptr inbounds %struct.GPR, %struct.GPR* %2526, i32 0, i32 5
  %2528 = getelementptr inbounds %struct.Reg, %struct.Reg* %2527, i32 0, i32 0
  %RCX.i1527 = bitcast %union.anon* %2528 to i64*
  %2529 = load i64, i64* %RAX.i1526
  %2530 = add i64 %2529, 212
  %2531 = load i64, i64* %PC.i1525
  %2532 = add i64 %2531, 6
  store i64 %2532, i64* %PC.i1525
  %2533 = inttoptr i64 %2530 to i32*
  %2534 = load i32, i32* %2533
  %2535 = zext i32 %2534 to i64
  store i64 %2535, i64* %RCX.i1527, align 8
  store %struct.Memory* %loadMem_43381a, %struct.Memory** %MEMORY
  %loadMem_433820 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2537 = getelementptr inbounds %struct.GPR, %struct.GPR* %2536, i32 0, i32 33
  %2538 = getelementptr inbounds %struct.Reg, %struct.Reg* %2537, i32 0, i32 0
  %PC.i1523 = bitcast %union.anon* %2538 to i64*
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2540 = getelementptr inbounds %struct.GPR, %struct.GPR* %2539, i32 0, i32 1
  %2541 = getelementptr inbounds %struct.Reg, %struct.Reg* %2540, i32 0, i32 0
  %RAX.i1524 = bitcast %union.anon* %2541 to i64*
  %2542 = load i64, i64* %PC.i1523
  %2543 = add i64 %2542, 8
  store i64 %2543, i64* %PC.i1523
  %2544 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2544, i64* %RAX.i1524, align 8
  store %struct.Memory* %loadMem_433820, %struct.Memory** %MEMORY
  %loadMem_433828 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2546 = getelementptr inbounds %struct.GPR, %struct.GPR* %2545, i32 0, i32 33
  %2547 = getelementptr inbounds %struct.Reg, %struct.Reg* %2546, i32 0, i32 0
  %PC.i1520 = bitcast %union.anon* %2547 to i64*
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2549 = getelementptr inbounds %struct.GPR, %struct.GPR* %2548, i32 0, i32 5
  %2550 = getelementptr inbounds %struct.Reg, %struct.Reg* %2549, i32 0, i32 0
  %ECX.i1521 = bitcast %union.anon* %2550 to i32*
  %2551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2552 = getelementptr inbounds %struct.GPR, %struct.GPR* %2551, i32 0, i32 1
  %2553 = getelementptr inbounds %struct.Reg, %struct.Reg* %2552, i32 0, i32 0
  %RAX.i1522 = bitcast %union.anon* %2553 to i64*
  %2554 = load i64, i64* %RAX.i1522
  %2555 = add i64 %2554, 72716
  %2556 = load i32, i32* %ECX.i1521
  %2557 = zext i32 %2556 to i64
  %2558 = load i64, i64* %PC.i1520
  %2559 = add i64 %2558, 6
  store i64 %2559, i64* %PC.i1520
  %2560 = inttoptr i64 %2555 to i32*
  store i32 %2556, i32* %2560
  store %struct.Memory* %loadMem_433828, %struct.Memory** %MEMORY
  %loadMem_43382e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2562 = getelementptr inbounds %struct.GPR, %struct.GPR* %2561, i32 0, i32 33
  %2563 = getelementptr inbounds %struct.Reg, %struct.Reg* %2562, i32 0, i32 0
  %PC.i1518 = bitcast %union.anon* %2563 to i64*
  %2564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2565 = getelementptr inbounds %struct.GPR, %struct.GPR* %2564, i32 0, i32 1
  %2566 = getelementptr inbounds %struct.Reg, %struct.Reg* %2565, i32 0, i32 0
  %RAX.i1519 = bitcast %union.anon* %2566 to i64*
  %2567 = load i64, i64* %PC.i1518
  %2568 = add i64 %2567, 8
  store i64 %2568, i64* %PC.i1518
  %2569 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %2569, i64* %RAX.i1519, align 8
  store %struct.Memory* %loadMem_43382e, %struct.Memory** %MEMORY
  %loadMem_433836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2571 = getelementptr inbounds %struct.GPR, %struct.GPR* %2570, i32 0, i32 33
  %2572 = getelementptr inbounds %struct.Reg, %struct.Reg* %2571, i32 0, i32 0
  %PC.i1515 = bitcast %union.anon* %2572 to i64*
  %2573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2574 = getelementptr inbounds %struct.GPR, %struct.GPR* %2573, i32 0, i32 1
  %2575 = getelementptr inbounds %struct.Reg, %struct.Reg* %2574, i32 0, i32 0
  %RAX.i1516 = bitcast %union.anon* %2575 to i64*
  %2576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2577 = getelementptr inbounds %struct.GPR, %struct.GPR* %2576, i32 0, i32 5
  %2578 = getelementptr inbounds %struct.Reg, %struct.Reg* %2577, i32 0, i32 0
  %RCX.i1517 = bitcast %union.anon* %2578 to i64*
  %2579 = load i64, i64* %RAX.i1516
  %2580 = add i64 %2579, 216
  %2581 = load i64, i64* %PC.i1515
  %2582 = add i64 %2581, 6
  store i64 %2582, i64* %PC.i1515
  %2583 = inttoptr i64 %2580 to i32*
  %2584 = load i32, i32* %2583
  %2585 = zext i32 %2584 to i64
  store i64 %2585, i64* %RCX.i1517, align 8
  store %struct.Memory* %loadMem_433836, %struct.Memory** %MEMORY
  %loadMem_43383c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2587 = getelementptr inbounds %struct.GPR, %struct.GPR* %2586, i32 0, i32 33
  %2588 = getelementptr inbounds %struct.Reg, %struct.Reg* %2587, i32 0, i32 0
  %PC.i1513 = bitcast %union.anon* %2588 to i64*
  %2589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2590 = getelementptr inbounds %struct.GPR, %struct.GPR* %2589, i32 0, i32 1
  %2591 = getelementptr inbounds %struct.Reg, %struct.Reg* %2590, i32 0, i32 0
  %RAX.i1514 = bitcast %union.anon* %2591 to i64*
  %2592 = load i64, i64* %PC.i1513
  %2593 = add i64 %2592, 8
  store i64 %2593, i64* %PC.i1513
  %2594 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2594, i64* %RAX.i1514, align 8
  store %struct.Memory* %loadMem_43383c, %struct.Memory** %MEMORY
  %loadMem_433844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2596 = getelementptr inbounds %struct.GPR, %struct.GPR* %2595, i32 0, i32 33
  %2597 = getelementptr inbounds %struct.Reg, %struct.Reg* %2596, i32 0, i32 0
  %PC.i1510 = bitcast %union.anon* %2597 to i64*
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2599 = getelementptr inbounds %struct.GPR, %struct.GPR* %2598, i32 0, i32 5
  %2600 = getelementptr inbounds %struct.Reg, %struct.Reg* %2599, i32 0, i32 0
  %ECX.i1511 = bitcast %union.anon* %2600 to i32*
  %2601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2602 = getelementptr inbounds %struct.GPR, %struct.GPR* %2601, i32 0, i32 1
  %2603 = getelementptr inbounds %struct.Reg, %struct.Reg* %2602, i32 0, i32 0
  %RAX.i1512 = bitcast %union.anon* %2603 to i64*
  %2604 = load i64, i64* %RAX.i1512
  %2605 = add i64 %2604, 72720
  %2606 = load i32, i32* %ECX.i1511
  %2607 = zext i32 %2606 to i64
  %2608 = load i64, i64* %PC.i1510
  %2609 = add i64 %2608, 6
  store i64 %2609, i64* %PC.i1510
  %2610 = inttoptr i64 %2605 to i32*
  store i32 %2606, i32* %2610
  store %struct.Memory* %loadMem_433844, %struct.Memory** %MEMORY
  %loadMem_43384a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2612 = getelementptr inbounds %struct.GPR, %struct.GPR* %2611, i32 0, i32 33
  %2613 = getelementptr inbounds %struct.Reg, %struct.Reg* %2612, i32 0, i32 0
  %PC.i1509 = bitcast %union.anon* %2613 to i64*
  %2614 = load i64, i64* %PC.i1509
  %2615 = add i64 %2614, 185
  %2616 = load i64, i64* %PC.i1509
  %2617 = add i64 %2616, 5
  store i64 %2617, i64* %PC.i1509
  %2618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2615, i64* %2618, align 8
  store %struct.Memory* %loadMem_43384a, %struct.Memory** %MEMORY
  br label %block_.L_433903

block_.L_43384f:                                  ; preds = %routine_shll__cl___eax.exit
  %loadMem_43384f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2620 = getelementptr inbounds %struct.GPR, %struct.GPR* %2619, i32 0, i32 33
  %2621 = getelementptr inbounds %struct.Reg, %struct.Reg* %2620, i32 0, i32 0
  %PC.i1507 = bitcast %union.anon* %2621 to i64*
  %2622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2623 = getelementptr inbounds %struct.GPR, %struct.GPR* %2622, i32 0, i32 1
  %2624 = getelementptr inbounds %struct.Reg, %struct.Reg* %2623, i32 0, i32 0
  %RAX.i1508 = bitcast %union.anon* %2624 to i64*
  %2625 = load i64, i64* %PC.i1507
  %2626 = add i64 %2625, 8
  store i64 %2626, i64* %PC.i1507
  %2627 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2627, i64* %RAX.i1508, align 8
  store %struct.Memory* %loadMem_43384f, %struct.Memory** %MEMORY
  %loadMem_433857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2629 = getelementptr inbounds %struct.GPR, %struct.GPR* %2628, i32 0, i32 33
  %2630 = getelementptr inbounds %struct.Reg, %struct.Reg* %2629, i32 0, i32 0
  %PC.i1505 = bitcast %union.anon* %2630 to i64*
  %2631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2632 = getelementptr inbounds %struct.GPR, %struct.GPR* %2631, i32 0, i32 1
  %2633 = getelementptr inbounds %struct.Reg, %struct.Reg* %2632, i32 0, i32 0
  %RAX.i1506 = bitcast %union.anon* %2633 to i64*
  %2634 = load i64, i64* %RAX.i1506
  %2635 = add i64 %2634, 72664
  %2636 = load i64, i64* %PC.i1505
  %2637 = add i64 %2636, 10
  store i64 %2637, i64* %PC.i1505
  %2638 = inttoptr i64 %2635 to i32*
  store i32 0, i32* %2638
  store %struct.Memory* %loadMem_433857, %struct.Memory** %MEMORY
  %loadMem_433861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2640 = getelementptr inbounds %struct.GPR, %struct.GPR* %2639, i32 0, i32 33
  %2641 = getelementptr inbounds %struct.Reg, %struct.Reg* %2640, i32 0, i32 0
  %PC.i1503 = bitcast %union.anon* %2641 to i64*
  %2642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2643 = getelementptr inbounds %struct.GPR, %struct.GPR* %2642, i32 0, i32 1
  %2644 = getelementptr inbounds %struct.Reg, %struct.Reg* %2643, i32 0, i32 0
  %RAX.i1504 = bitcast %union.anon* %2644 to i64*
  %2645 = load i64, i64* %PC.i1503
  %2646 = add i64 %2645, 8
  store i64 %2646, i64* %PC.i1503
  %2647 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2647, i64* %RAX.i1504, align 8
  store %struct.Memory* %loadMem_433861, %struct.Memory** %MEMORY
  %loadMem_433869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2649 = getelementptr inbounds %struct.GPR, %struct.GPR* %2648, i32 0, i32 33
  %2650 = getelementptr inbounds %struct.Reg, %struct.Reg* %2649, i32 0, i32 0
  %PC.i1501 = bitcast %union.anon* %2650 to i64*
  %2651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2652 = getelementptr inbounds %struct.GPR, %struct.GPR* %2651, i32 0, i32 1
  %2653 = getelementptr inbounds %struct.Reg, %struct.Reg* %2652, i32 0, i32 0
  %RAX.i1502 = bitcast %union.anon* %2653 to i64*
  %2654 = load i64, i64* %RAX.i1502
  %2655 = add i64 %2654, 72688
  %2656 = load i64, i64* %PC.i1501
  %2657 = add i64 %2656, 10
  store i64 %2657, i64* %PC.i1501
  %2658 = inttoptr i64 %2655 to i32*
  store i32 0, i32* %2658
  store %struct.Memory* %loadMem_433869, %struct.Memory** %MEMORY
  %loadMem_433873 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2660 = getelementptr inbounds %struct.GPR, %struct.GPR* %2659, i32 0, i32 33
  %2661 = getelementptr inbounds %struct.Reg, %struct.Reg* %2660, i32 0, i32 0
  %PC.i1499 = bitcast %union.anon* %2661 to i64*
  %2662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2663 = getelementptr inbounds %struct.GPR, %struct.GPR* %2662, i32 0, i32 1
  %2664 = getelementptr inbounds %struct.Reg, %struct.Reg* %2663, i32 0, i32 0
  %RAX.i1500 = bitcast %union.anon* %2664 to i64*
  %2665 = load i64, i64* %PC.i1499
  %2666 = add i64 %2665, 8
  store i64 %2666, i64* %PC.i1499
  %2667 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2667, i64* %RAX.i1500, align 8
  store %struct.Memory* %loadMem_433873, %struct.Memory** %MEMORY
  %loadMem_43387b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2669 = getelementptr inbounds %struct.GPR, %struct.GPR* %2668, i32 0, i32 33
  %2670 = getelementptr inbounds %struct.Reg, %struct.Reg* %2669, i32 0, i32 0
  %PC.i1497 = bitcast %union.anon* %2670 to i64*
  %2671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2672 = getelementptr inbounds %struct.GPR, %struct.GPR* %2671, i32 0, i32 1
  %2673 = getelementptr inbounds %struct.Reg, %struct.Reg* %2672, i32 0, i32 0
  %RAX.i1498 = bitcast %union.anon* %2673 to i64*
  %2674 = load i64, i64* %RAX.i1498
  %2675 = add i64 %2674, 72692
  %2676 = load i64, i64* %PC.i1497
  %2677 = add i64 %2676, 10
  store i64 %2677, i64* %PC.i1497
  %2678 = inttoptr i64 %2675 to i32*
  store i32 0, i32* %2678
  store %struct.Memory* %loadMem_43387b, %struct.Memory** %MEMORY
  %loadMem_433885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2680 = getelementptr inbounds %struct.GPR, %struct.GPR* %2679, i32 0, i32 33
  %2681 = getelementptr inbounds %struct.Reg, %struct.Reg* %2680, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %2681 to i64*
  %2682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2683 = getelementptr inbounds %struct.GPR, %struct.GPR* %2682, i32 0, i32 1
  %2684 = getelementptr inbounds %struct.Reg, %struct.Reg* %2683, i32 0, i32 0
  %RAX.i1496 = bitcast %union.anon* %2684 to i64*
  %2685 = load i64, i64* %PC.i1495
  %2686 = add i64 %2685, 8
  store i64 %2686, i64* %PC.i1495
  %2687 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2687, i64* %RAX.i1496, align 8
  store %struct.Memory* %loadMem_433885, %struct.Memory** %MEMORY
  %loadMem_43388d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2689 = getelementptr inbounds %struct.GPR, %struct.GPR* %2688, i32 0, i32 33
  %2690 = getelementptr inbounds %struct.Reg, %struct.Reg* %2689, i32 0, i32 0
  %PC.i1493 = bitcast %union.anon* %2690 to i64*
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2692 = getelementptr inbounds %struct.GPR, %struct.GPR* %2691, i32 0, i32 1
  %2693 = getelementptr inbounds %struct.Reg, %struct.Reg* %2692, i32 0, i32 0
  %RAX.i1494 = bitcast %union.anon* %2693 to i64*
  %2694 = load i64, i64* %RAX.i1494
  %2695 = add i64 %2694, 72696
  %2696 = load i64, i64* %PC.i1493
  %2697 = add i64 %2696, 10
  store i64 %2697, i64* %PC.i1493
  %2698 = inttoptr i64 %2695 to i32*
  store i32 0, i32* %2698
  store %struct.Memory* %loadMem_43388d, %struct.Memory** %MEMORY
  %loadMem_433897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2700 = getelementptr inbounds %struct.GPR, %struct.GPR* %2699, i32 0, i32 33
  %2701 = getelementptr inbounds %struct.Reg, %struct.Reg* %2700, i32 0, i32 0
  %PC.i1491 = bitcast %union.anon* %2701 to i64*
  %2702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2703 = getelementptr inbounds %struct.GPR, %struct.GPR* %2702, i32 0, i32 1
  %2704 = getelementptr inbounds %struct.Reg, %struct.Reg* %2703, i32 0, i32 0
  %RAX.i1492 = bitcast %union.anon* %2704 to i64*
  %2705 = load i64, i64* %PC.i1491
  %2706 = add i64 %2705, 8
  store i64 %2706, i64* %PC.i1491
  %2707 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2707, i64* %RAX.i1492, align 8
  store %struct.Memory* %loadMem_433897, %struct.Memory** %MEMORY
  %loadMem_43389f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2709 = getelementptr inbounds %struct.GPR, %struct.GPR* %2708, i32 0, i32 33
  %2710 = getelementptr inbounds %struct.Reg, %struct.Reg* %2709, i32 0, i32 0
  %PC.i1489 = bitcast %union.anon* %2710 to i64*
  %2711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2712 = getelementptr inbounds %struct.GPR, %struct.GPR* %2711, i32 0, i32 1
  %2713 = getelementptr inbounds %struct.Reg, %struct.Reg* %2712, i32 0, i32 0
  %RAX.i1490 = bitcast %union.anon* %2713 to i64*
  %2714 = load i64, i64* %RAX.i1490
  %2715 = add i64 %2714, 72708
  %2716 = load i64, i64* %PC.i1489
  %2717 = add i64 %2716, 10
  store i64 %2717, i64* %PC.i1489
  %2718 = inttoptr i64 %2715 to i32*
  store i32 0, i32* %2718
  store %struct.Memory* %loadMem_43389f, %struct.Memory** %MEMORY
  %loadMem_4338a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2720 = getelementptr inbounds %struct.GPR, %struct.GPR* %2719, i32 0, i32 33
  %2721 = getelementptr inbounds %struct.Reg, %struct.Reg* %2720, i32 0, i32 0
  %PC.i1487 = bitcast %union.anon* %2721 to i64*
  %2722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2723 = getelementptr inbounds %struct.GPR, %struct.GPR* %2722, i32 0, i32 1
  %2724 = getelementptr inbounds %struct.Reg, %struct.Reg* %2723, i32 0, i32 0
  %RAX.i1488 = bitcast %union.anon* %2724 to i64*
  %2725 = load i64, i64* %PC.i1487
  %2726 = add i64 %2725, 8
  store i64 %2726, i64* %PC.i1487
  %2727 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2727, i64* %RAX.i1488, align 8
  store %struct.Memory* %loadMem_4338a9, %struct.Memory** %MEMORY
  %loadMem_4338b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2729 = getelementptr inbounds %struct.GPR, %struct.GPR* %2728, i32 0, i32 33
  %2730 = getelementptr inbounds %struct.Reg, %struct.Reg* %2729, i32 0, i32 0
  %PC.i1485 = bitcast %union.anon* %2730 to i64*
  %2731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2732 = getelementptr inbounds %struct.GPR, %struct.GPR* %2731, i32 0, i32 1
  %2733 = getelementptr inbounds %struct.Reg, %struct.Reg* %2732, i32 0, i32 0
  %RAX.i1486 = bitcast %union.anon* %2733 to i64*
  %2734 = load i64, i64* %RAX.i1486
  %2735 = add i64 %2734, 72712
  %2736 = load i64, i64* %PC.i1485
  %2737 = add i64 %2736, 10
  store i64 %2737, i64* %PC.i1485
  %2738 = inttoptr i64 %2735 to i32*
  store i32 0, i32* %2738
  store %struct.Memory* %loadMem_4338b1, %struct.Memory** %MEMORY
  %loadMem_4338bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2740 = getelementptr inbounds %struct.GPR, %struct.GPR* %2739, i32 0, i32 33
  %2741 = getelementptr inbounds %struct.Reg, %struct.Reg* %2740, i32 0, i32 0
  %PC.i1483 = bitcast %union.anon* %2741 to i64*
  %2742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2743 = getelementptr inbounds %struct.GPR, %struct.GPR* %2742, i32 0, i32 1
  %2744 = getelementptr inbounds %struct.Reg, %struct.Reg* %2743, i32 0, i32 0
  %RAX.i1484 = bitcast %union.anon* %2744 to i64*
  %2745 = load i64, i64* %PC.i1483
  %2746 = add i64 %2745, 8
  store i64 %2746, i64* %PC.i1483
  %2747 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2747, i64* %RAX.i1484, align 8
  store %struct.Memory* %loadMem_4338bb, %struct.Memory** %MEMORY
  %loadMem_4338c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2749 = getelementptr inbounds %struct.GPR, %struct.GPR* %2748, i32 0, i32 33
  %2750 = getelementptr inbounds %struct.Reg, %struct.Reg* %2749, i32 0, i32 0
  %PC.i1481 = bitcast %union.anon* %2750 to i64*
  %2751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2752 = getelementptr inbounds %struct.GPR, %struct.GPR* %2751, i32 0, i32 1
  %2753 = getelementptr inbounds %struct.Reg, %struct.Reg* %2752, i32 0, i32 0
  %RAX.i1482 = bitcast %union.anon* %2753 to i64*
  %2754 = load i64, i64* %RAX.i1482
  %2755 = add i64 %2754, 72672
  %2756 = load i64, i64* %PC.i1481
  %2757 = add i64 %2756, 10
  store i64 %2757, i64* %PC.i1481
  %2758 = inttoptr i64 %2755 to i32*
  store i32 0, i32* %2758
  store %struct.Memory* %loadMem_4338c3, %struct.Memory** %MEMORY
  %loadMem_4338cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2760 = getelementptr inbounds %struct.GPR, %struct.GPR* %2759, i32 0, i32 33
  %2761 = getelementptr inbounds %struct.Reg, %struct.Reg* %2760, i32 0, i32 0
  %PC.i1479 = bitcast %union.anon* %2761 to i64*
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2763 = getelementptr inbounds %struct.GPR, %struct.GPR* %2762, i32 0, i32 1
  %2764 = getelementptr inbounds %struct.Reg, %struct.Reg* %2763, i32 0, i32 0
  %RAX.i1480 = bitcast %union.anon* %2764 to i64*
  %2765 = load i64, i64* %PC.i1479
  %2766 = add i64 %2765, 8
  store i64 %2766, i64* %PC.i1479
  %2767 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2767, i64* %RAX.i1480, align 8
  store %struct.Memory* %loadMem_4338cd, %struct.Memory** %MEMORY
  %loadMem_4338d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2769 = getelementptr inbounds %struct.GPR, %struct.GPR* %2768, i32 0, i32 33
  %2770 = getelementptr inbounds %struct.Reg, %struct.Reg* %2769, i32 0, i32 0
  %PC.i1477 = bitcast %union.anon* %2770 to i64*
  %2771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2772 = getelementptr inbounds %struct.GPR, %struct.GPR* %2771, i32 0, i32 1
  %2773 = getelementptr inbounds %struct.Reg, %struct.Reg* %2772, i32 0, i32 0
  %RAX.i1478 = bitcast %union.anon* %2773 to i64*
  %2774 = load i64, i64* %RAX.i1478
  %2775 = add i64 %2774, 72672
  %2776 = load i64, i64* %PC.i1477
  %2777 = add i64 %2776, 10
  store i64 %2777, i64* %PC.i1477
  %2778 = inttoptr i64 %2775 to i32*
  store i32 0, i32* %2778
  store %struct.Memory* %loadMem_4338d5, %struct.Memory** %MEMORY
  %loadMem_4338df = load %struct.Memory*, %struct.Memory** %MEMORY
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2780 = getelementptr inbounds %struct.GPR, %struct.GPR* %2779, i32 0, i32 33
  %2781 = getelementptr inbounds %struct.Reg, %struct.Reg* %2780, i32 0, i32 0
  %PC.i1475 = bitcast %union.anon* %2781 to i64*
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2783 = getelementptr inbounds %struct.GPR, %struct.GPR* %2782, i32 0, i32 1
  %2784 = getelementptr inbounds %struct.Reg, %struct.Reg* %2783, i32 0, i32 0
  %RAX.i1476 = bitcast %union.anon* %2784 to i64*
  %2785 = load i64, i64* %PC.i1475
  %2786 = add i64 %2785, 8
  store i64 %2786, i64* %PC.i1475
  %2787 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2787, i64* %RAX.i1476, align 8
  store %struct.Memory* %loadMem_4338df, %struct.Memory** %MEMORY
  %loadMem_4338e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2789 = getelementptr inbounds %struct.GPR, %struct.GPR* %2788, i32 0, i32 33
  %2790 = getelementptr inbounds %struct.Reg, %struct.Reg* %2789, i32 0, i32 0
  %PC.i1473 = bitcast %union.anon* %2790 to i64*
  %2791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2792 = getelementptr inbounds %struct.GPR, %struct.GPR* %2791, i32 0, i32 1
  %2793 = getelementptr inbounds %struct.Reg, %struct.Reg* %2792, i32 0, i32 0
  %RAX.i1474 = bitcast %union.anon* %2793 to i64*
  %2794 = load i64, i64* %RAX.i1474
  %2795 = add i64 %2794, 72716
  %2796 = load i64, i64* %PC.i1473
  %2797 = add i64 %2796, 10
  store i64 %2797, i64* %PC.i1473
  %2798 = inttoptr i64 %2795 to i32*
  store i32 0, i32* %2798
  store %struct.Memory* %loadMem_4338e7, %struct.Memory** %MEMORY
  %loadMem_4338f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2800 = getelementptr inbounds %struct.GPR, %struct.GPR* %2799, i32 0, i32 33
  %2801 = getelementptr inbounds %struct.Reg, %struct.Reg* %2800, i32 0, i32 0
  %PC.i1471 = bitcast %union.anon* %2801 to i64*
  %2802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2803 = getelementptr inbounds %struct.GPR, %struct.GPR* %2802, i32 0, i32 1
  %2804 = getelementptr inbounds %struct.Reg, %struct.Reg* %2803, i32 0, i32 0
  %RAX.i1472 = bitcast %union.anon* %2804 to i64*
  %2805 = load i64, i64* %PC.i1471
  %2806 = add i64 %2805, 8
  store i64 %2806, i64* %PC.i1471
  %2807 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2807, i64* %RAX.i1472, align 8
  store %struct.Memory* %loadMem_4338f1, %struct.Memory** %MEMORY
  %loadMem_4338f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2809 = getelementptr inbounds %struct.GPR, %struct.GPR* %2808, i32 0, i32 33
  %2810 = getelementptr inbounds %struct.Reg, %struct.Reg* %2809, i32 0, i32 0
  %PC.i1469 = bitcast %union.anon* %2810 to i64*
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2812 = getelementptr inbounds %struct.GPR, %struct.GPR* %2811, i32 0, i32 1
  %2813 = getelementptr inbounds %struct.Reg, %struct.Reg* %2812, i32 0, i32 0
  %RAX.i1470 = bitcast %union.anon* %2813 to i64*
  %2814 = load i64, i64* %RAX.i1470
  %2815 = add i64 %2814, 72720
  %2816 = load i64, i64* %PC.i1469
  %2817 = add i64 %2816, 10
  store i64 %2817, i64* %PC.i1469
  %2818 = inttoptr i64 %2815 to i32*
  store i32 0, i32* %2818
  store %struct.Memory* %loadMem_4338f9, %struct.Memory** %MEMORY
  br label %block_.L_433903

block_.L_433903:                                  ; preds = %block_.L_43384f, %block_.L_433812
  %loadMem_433903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2820 = getelementptr inbounds %struct.GPR, %struct.GPR* %2819, i32 0, i32 33
  %2821 = getelementptr inbounds %struct.Reg, %struct.Reg* %2820, i32 0, i32 0
  %PC.i1467 = bitcast %union.anon* %2821 to i64*
  %2822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2823 = getelementptr inbounds %struct.GPR, %struct.GPR* %2822, i32 0, i32 1
  %2824 = getelementptr inbounds %struct.Reg, %struct.Reg* %2823, i32 0, i32 0
  %RAX.i1468 = bitcast %union.anon* %2824 to i64*
  %2825 = load i64, i64* %PC.i1467
  %2826 = add i64 %2825, 8
  store i64 %2826, i64* %PC.i1467
  %2827 = load i64, i64* bitcast (%G_0x722cb0_type* @G_0x722cb0 to i64*)
  store i64 %2827, i64* %RAX.i1468, align 8
  store %struct.Memory* %loadMem_433903, %struct.Memory** %MEMORY
  %loadMem_43390b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2829 = getelementptr inbounds %struct.GPR, %struct.GPR* %2828, i32 0, i32 33
  %2830 = getelementptr inbounds %struct.Reg, %struct.Reg* %2829, i32 0, i32 0
  %PC.i1464 = bitcast %union.anon* %2830 to i64*
  %2831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2832 = getelementptr inbounds %struct.GPR, %struct.GPR* %2831, i32 0, i32 1
  %2833 = getelementptr inbounds %struct.Reg, %struct.Reg* %2832, i32 0, i32 0
  %RAX.i1465 = bitcast %union.anon* %2833 to i64*
  %2834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2835 = getelementptr inbounds %struct.GPR, %struct.GPR* %2834, i32 0, i32 5
  %2836 = getelementptr inbounds %struct.Reg, %struct.Reg* %2835, i32 0, i32 0
  %RCX.i1466 = bitcast %union.anon* %2836 to i64*
  %2837 = load i64, i64* %RAX.i1465
  %2838 = add i64 %2837, 1132
  %2839 = load i64, i64* %PC.i1464
  %2840 = add i64 %2839, 6
  store i64 %2840, i64* %PC.i1464
  %2841 = inttoptr i64 %2838 to i32*
  %2842 = load i32, i32* %2841
  %2843 = zext i32 %2842 to i64
  store i64 %2843, i64* %RCX.i1466, align 8
  store %struct.Memory* %loadMem_43390b, %struct.Memory** %MEMORY
  %loadMem_433911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2845 = getelementptr inbounds %struct.GPR, %struct.GPR* %2844, i32 0, i32 33
  %2846 = getelementptr inbounds %struct.Reg, %struct.Reg* %2845, i32 0, i32 0
  %PC.i1462 = bitcast %union.anon* %2846 to i64*
  %2847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2848 = getelementptr inbounds %struct.GPR, %struct.GPR* %2847, i32 0, i32 1
  %2849 = getelementptr inbounds %struct.Reg, %struct.Reg* %2848, i32 0, i32 0
  %RAX.i1463 = bitcast %union.anon* %2849 to i64*
  %2850 = load i64, i64* %PC.i1462
  %2851 = add i64 %2850, 8
  store i64 %2851, i64* %PC.i1462
  %2852 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2852, i64* %RAX.i1463, align 8
  store %struct.Memory* %loadMem_433911, %struct.Memory** %MEMORY
  %loadMem_433919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2854 = getelementptr inbounds %struct.GPR, %struct.GPR* %2853, i32 0, i32 33
  %2855 = getelementptr inbounds %struct.Reg, %struct.Reg* %2854, i32 0, i32 0
  %PC.i1459 = bitcast %union.anon* %2855 to i64*
  %2856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2857 = getelementptr inbounds %struct.GPR, %struct.GPR* %2856, i32 0, i32 5
  %2858 = getelementptr inbounds %struct.Reg, %struct.Reg* %2857, i32 0, i32 0
  %ECX.i1460 = bitcast %union.anon* %2858 to i32*
  %2859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2860 = getelementptr inbounds %struct.GPR, %struct.GPR* %2859, i32 0, i32 1
  %2861 = getelementptr inbounds %struct.Reg, %struct.Reg* %2860, i32 0, i32 0
  %RAX.i1461 = bitcast %union.anon* %2861 to i64*
  %2862 = load i64, i64* %RAX.i1461
  %2863 = add i64 %2862, 32
  %2864 = load i32, i32* %ECX.i1460
  %2865 = zext i32 %2864 to i64
  %2866 = load i64, i64* %PC.i1459
  %2867 = add i64 %2866, 3
  store i64 %2867, i64* %PC.i1459
  %2868 = inttoptr i64 %2863 to i32*
  store i32 %2864, i32* %2868
  store %struct.Memory* %loadMem_433919, %struct.Memory** %MEMORY
  %loadMem_43391c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2870 = getelementptr inbounds %struct.GPR, %struct.GPR* %2869, i32 0, i32 33
  %2871 = getelementptr inbounds %struct.Reg, %struct.Reg* %2870, i32 0, i32 0
  %PC.i1457 = bitcast %union.anon* %2871 to i64*
  %2872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2873 = getelementptr inbounds %struct.GPR, %struct.GPR* %2872, i32 0, i32 1
  %2874 = getelementptr inbounds %struct.Reg, %struct.Reg* %2873, i32 0, i32 0
  %RAX.i1458 = bitcast %union.anon* %2874 to i64*
  %2875 = load i64, i64* %PC.i1457
  %2876 = add i64 %2875, 8
  store i64 %2876, i64* %PC.i1457
  %2877 = load i64, i64* bitcast (%G_0x722cb0_type* @G_0x722cb0 to i64*)
  store i64 %2877, i64* %RAX.i1458, align 8
  store %struct.Memory* %loadMem_43391c, %struct.Memory** %MEMORY
  %loadMem_433924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2879 = getelementptr inbounds %struct.GPR, %struct.GPR* %2878, i32 0, i32 33
  %2880 = getelementptr inbounds %struct.Reg, %struct.Reg* %2879, i32 0, i32 0
  %PC.i1455 = bitcast %union.anon* %2880 to i64*
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2882 = getelementptr inbounds %struct.GPR, %struct.GPR* %2881, i32 0, i32 1
  %2883 = getelementptr inbounds %struct.Reg, %struct.Reg* %2882, i32 0, i32 0
  %RAX.i1456 = bitcast %union.anon* %2883 to i64*
  %2884 = load i64, i64* %RAX.i1456
  %2885 = add i64 %2884, 1148
  %2886 = load i64, i64* %PC.i1455
  %2887 = add i64 %2886, 7
  store i64 %2887, i64* %PC.i1455
  %2888 = inttoptr i64 %2885 to i32*
  %2889 = load i32, i32* %2888
  %2890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2890, align 1
  %2891 = and i32 %2889, 255
  %2892 = call i32 @llvm.ctpop.i32(i32 %2891)
  %2893 = trunc i32 %2892 to i8
  %2894 = and i8 %2893, 1
  %2895 = xor i8 %2894, 1
  %2896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2895, i8* %2896, align 1
  %2897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2897, align 1
  %2898 = icmp eq i32 %2889, 0
  %2899 = zext i1 %2898 to i8
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2899, i8* %2900, align 1
  %2901 = lshr i32 %2889, 31
  %2902 = trunc i32 %2901 to i8
  %2903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2902, i8* %2903, align 1
  %2904 = lshr i32 %2889, 31
  %2905 = xor i32 %2901, %2904
  %2906 = add i32 %2905, %2904
  %2907 = icmp eq i32 %2906, 2
  %2908 = zext i1 %2907 to i8
  %2909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2908, i8* %2909, align 1
  store %struct.Memory* %loadMem_433924, %struct.Memory** %MEMORY
  %loadMem_43392b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2911 = getelementptr inbounds %struct.GPR, %struct.GPR* %2910, i32 0, i32 33
  %2912 = getelementptr inbounds %struct.Reg, %struct.Reg* %2911, i32 0, i32 0
  %PC.i1454 = bitcast %union.anon* %2912 to i64*
  %2913 = load i64, i64* %PC.i1454
  %2914 = add i64 %2913, 28
  %2915 = load i64, i64* %PC.i1454
  %2916 = add i64 %2915, 6
  %2917 = load i64, i64* %PC.i1454
  %2918 = add i64 %2917, 6
  store i64 %2918, i64* %PC.i1454
  %2919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2920 = load i8, i8* %2919, align 1
  store i8 %2920, i8* %BRANCH_TAKEN, align 1
  %2921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2922 = icmp ne i8 %2920, 0
  %2923 = select i1 %2922, i64 %2914, i64 %2916
  store i64 %2923, i64* %2921, align 8
  store %struct.Memory* %loadMem_43392b, %struct.Memory** %MEMORY
  %loadBr_43392b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43392b = icmp eq i8 %loadBr_43392b, 1
  br i1 %cmpBr_43392b, label %block_.L_433947, label %block_433931

block_433931:                                     ; preds = %block_.L_433903
  %loadMem_433931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2925 = getelementptr inbounds %struct.GPR, %struct.GPR* %2924, i32 0, i32 33
  %2926 = getelementptr inbounds %struct.Reg, %struct.Reg* %2925, i32 0, i32 0
  %PC.i1452 = bitcast %union.anon* %2926 to i64*
  %2927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2928 = getelementptr inbounds %struct.GPR, %struct.GPR* %2927, i32 0, i32 1
  %2929 = getelementptr inbounds %struct.Reg, %struct.Reg* %2928, i32 0, i32 0
  %RAX.i1453 = bitcast %union.anon* %2929 to i64*
  %2930 = load i64, i64* %PC.i1452
  %2931 = add i64 %2930, 8
  store i64 %2931, i64* %PC.i1452
  %2932 = load i64, i64* bitcast (%G_0x722cb0_type* @G_0x722cb0 to i64*)
  store i64 %2932, i64* %RAX.i1453, align 8
  store %struct.Memory* %loadMem_433931, %struct.Memory** %MEMORY
  %loadMem_433939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2934 = getelementptr inbounds %struct.GPR, %struct.GPR* %2933, i32 0, i32 33
  %2935 = getelementptr inbounds %struct.Reg, %struct.Reg* %2934, i32 0, i32 0
  %PC.i1449 = bitcast %union.anon* %2935 to i64*
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2937 = getelementptr inbounds %struct.GPR, %struct.GPR* %2936, i32 0, i32 1
  %2938 = getelementptr inbounds %struct.Reg, %struct.Reg* %2937, i32 0, i32 0
  %RAX.i1450 = bitcast %union.anon* %2938 to i64*
  %2939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2940 = getelementptr inbounds %struct.GPR, %struct.GPR* %2939, i32 0, i32 5
  %2941 = getelementptr inbounds %struct.Reg, %struct.Reg* %2940, i32 0, i32 0
  %RCX.i1451 = bitcast %union.anon* %2941 to i64*
  %2942 = load i64, i64* %RAX.i1450
  %2943 = add i64 %2942, 1132
  %2944 = load i64, i64* %PC.i1449
  %2945 = add i64 %2944, 6
  store i64 %2945, i64* %PC.i1449
  %2946 = inttoptr i64 %2943 to i32*
  %2947 = load i32, i32* %2946
  %2948 = zext i32 %2947 to i64
  store i64 %2948, i64* %RCX.i1451, align 8
  store %struct.Memory* %loadMem_433939, %struct.Memory** %MEMORY
  %loadMem_43393f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2950 = getelementptr inbounds %struct.GPR, %struct.GPR* %2949, i32 0, i32 33
  %2951 = getelementptr inbounds %struct.Reg, %struct.Reg* %2950, i32 0, i32 0
  %PC.i1446 = bitcast %union.anon* %2951 to i64*
  %2952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2953 = getelementptr inbounds %struct.GPR, %struct.GPR* %2952, i32 0, i32 5
  %2954 = getelementptr inbounds %struct.Reg, %struct.Reg* %2953, i32 0, i32 0
  %ECX.i1447 = bitcast %union.anon* %2954 to i32*
  %2955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2956 = getelementptr inbounds %struct.GPR, %struct.GPR* %2955, i32 0, i32 15
  %2957 = getelementptr inbounds %struct.Reg, %struct.Reg* %2956, i32 0, i32 0
  %RBP.i1448 = bitcast %union.anon* %2957 to i64*
  %2958 = load i64, i64* %RBP.i1448
  %2959 = sub i64 %2958, 48
  %2960 = load i32, i32* %ECX.i1447
  %2961 = zext i32 %2960 to i64
  %2962 = load i64, i64* %PC.i1446
  %2963 = add i64 %2962, 3
  store i64 %2963, i64* %PC.i1446
  %2964 = inttoptr i64 %2959 to i32*
  store i32 %2960, i32* %2964
  store %struct.Memory* %loadMem_43393f, %struct.Memory** %MEMORY
  %loadMem_433942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2966 = getelementptr inbounds %struct.GPR, %struct.GPR* %2965, i32 0, i32 33
  %2967 = getelementptr inbounds %struct.Reg, %struct.Reg* %2966, i32 0, i32 0
  %PC.i1445 = bitcast %union.anon* %2967 to i64*
  %2968 = load i64, i64* %PC.i1445
  %2969 = add i64 %2968, 25
  %2970 = load i64, i64* %PC.i1445
  %2971 = add i64 %2970, 5
  store i64 %2971, i64* %PC.i1445
  %2972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2969, i64* %2972, align 8
  store %struct.Memory* %loadMem_433942, %struct.Memory** %MEMORY
  br label %block_.L_43395b

block_.L_433947:                                  ; preds = %block_.L_433903
  %loadMem_433947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2974 = getelementptr inbounds %struct.GPR, %struct.GPR* %2973, i32 0, i32 33
  %2975 = getelementptr inbounds %struct.Reg, %struct.Reg* %2974, i32 0, i32 0
  %PC.i1443 = bitcast %union.anon* %2975 to i64*
  %2976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2977 = getelementptr inbounds %struct.GPR, %struct.GPR* %2976, i32 0, i32 1
  %2978 = getelementptr inbounds %struct.Reg, %struct.Reg* %2977, i32 0, i32 0
  %RAX.i1444 = bitcast %union.anon* %2978 to i64*
  %2979 = load i64, i64* %PC.i1443
  %2980 = add i64 %2979, 8
  store i64 %2980, i64* %PC.i1443
  %2981 = load i64, i64* bitcast (%G_0x722cb0_type* @G_0x722cb0 to i64*)
  store i64 %2981, i64* %RAX.i1444, align 8
  store %struct.Memory* %loadMem_433947, %struct.Memory** %MEMORY
  %loadMem_43394f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2983 = getelementptr inbounds %struct.GPR, %struct.GPR* %2982, i32 0, i32 33
  %2984 = getelementptr inbounds %struct.Reg, %struct.Reg* %2983, i32 0, i32 0
  %PC.i1440 = bitcast %union.anon* %2984 to i64*
  %2985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2986 = getelementptr inbounds %struct.GPR, %struct.GPR* %2985, i32 0, i32 1
  %2987 = getelementptr inbounds %struct.Reg, %struct.Reg* %2986, i32 0, i32 0
  %RAX.i1441 = bitcast %union.anon* %2987 to i64*
  %2988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2989 = getelementptr inbounds %struct.GPR, %struct.GPR* %2988, i32 0, i32 5
  %2990 = getelementptr inbounds %struct.Reg, %struct.Reg* %2989, i32 0, i32 0
  %RCX.i1442 = bitcast %union.anon* %2990 to i64*
  %2991 = load i64, i64* %RAX.i1441
  %2992 = add i64 %2991, 1132
  %2993 = load i64, i64* %PC.i1440
  %2994 = add i64 %2993, 6
  store i64 %2994, i64* %PC.i1440
  %2995 = inttoptr i64 %2992 to i32*
  %2996 = load i32, i32* %2995
  %2997 = zext i32 %2996 to i64
  store i64 %2997, i64* %RCX.i1442, align 8
  store %struct.Memory* %loadMem_43394f, %struct.Memory** %MEMORY
  %loadMem_433955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2999 = getelementptr inbounds %struct.GPR, %struct.GPR* %2998, i32 0, i32 33
  %3000 = getelementptr inbounds %struct.Reg, %struct.Reg* %2999, i32 0, i32 0
  %PC.i1438 = bitcast %union.anon* %3000 to i64*
  %3001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3002 = getelementptr inbounds %struct.GPR, %struct.GPR* %3001, i32 0, i32 5
  %3003 = getelementptr inbounds %struct.Reg, %struct.Reg* %3002, i32 0, i32 0
  %RCX.i1439 = bitcast %union.anon* %3003 to i64*
  %3004 = load i64, i64* %RCX.i1439
  %3005 = load i64, i64* %PC.i1438
  %3006 = add i64 %3005, 2
  store i64 %3006, i64* %PC.i1438
  %3007 = trunc i64 %3004 to i32
  %3008 = shl i32 %3007, 1
  %3009 = icmp slt i32 %3007, 0
  %3010 = icmp slt i32 %3008, 0
  %3011 = xor i1 %3009, %3010
  %3012 = zext i32 %3008 to i64
  store i64 %3012, i64* %RCX.i1439, align 8
  %3013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3014 = zext i1 %3009 to i8
  store i8 %3014, i8* %3013, align 1
  %3015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3016 = and i32 %3008, 254
  %3017 = call i32 @llvm.ctpop.i32(i32 %3016)
  %3018 = trunc i32 %3017 to i8
  %3019 = and i8 %3018, 1
  %3020 = xor i8 %3019, 1
  store i8 %3020, i8* %3015, align 1
  %3021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3021, align 1
  %3022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3023 = icmp eq i32 %3008, 0
  %3024 = zext i1 %3023 to i8
  store i8 %3024, i8* %3022, align 1
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3026 = lshr i32 %3008, 31
  %3027 = trunc i32 %3026 to i8
  store i8 %3027, i8* %3025, align 1
  %3028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3029 = zext i1 %3011 to i8
  store i8 %3029, i8* %3028, align 1
  store %struct.Memory* %loadMem_433955, %struct.Memory** %MEMORY
  %loadMem_433958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3031 = getelementptr inbounds %struct.GPR, %struct.GPR* %3030, i32 0, i32 33
  %3032 = getelementptr inbounds %struct.Reg, %struct.Reg* %3031, i32 0, i32 0
  %PC.i1435 = bitcast %union.anon* %3032 to i64*
  %3033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3034 = getelementptr inbounds %struct.GPR, %struct.GPR* %3033, i32 0, i32 5
  %3035 = getelementptr inbounds %struct.Reg, %struct.Reg* %3034, i32 0, i32 0
  %ECX.i1436 = bitcast %union.anon* %3035 to i32*
  %3036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3037 = getelementptr inbounds %struct.GPR, %struct.GPR* %3036, i32 0, i32 15
  %3038 = getelementptr inbounds %struct.Reg, %struct.Reg* %3037, i32 0, i32 0
  %RBP.i1437 = bitcast %union.anon* %3038 to i64*
  %3039 = load i64, i64* %RBP.i1437
  %3040 = sub i64 %3039, 48
  %3041 = load i32, i32* %ECX.i1436
  %3042 = zext i32 %3041 to i64
  %3043 = load i64, i64* %PC.i1435
  %3044 = add i64 %3043, 3
  store i64 %3044, i64* %PC.i1435
  %3045 = inttoptr i64 %3040 to i32*
  store i32 %3041, i32* %3045
  store %struct.Memory* %loadMem_433958, %struct.Memory** %MEMORY
  br label %block_.L_43395b

block_.L_43395b:                                  ; preds = %block_.L_433947, %block_433931
  %loadMem_43395b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3047 = getelementptr inbounds %struct.GPR, %struct.GPR* %3046, i32 0, i32 33
  %3048 = getelementptr inbounds %struct.Reg, %struct.Reg* %3047, i32 0, i32 0
  %PC.i1432 = bitcast %union.anon* %3048 to i64*
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3050 = getelementptr inbounds %struct.GPR, %struct.GPR* %3049, i32 0, i32 1
  %3051 = getelementptr inbounds %struct.Reg, %struct.Reg* %3050, i32 0, i32 0
  %RAX.i1433 = bitcast %union.anon* %3051 to i64*
  %3052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3053 = getelementptr inbounds %struct.GPR, %struct.GPR* %3052, i32 0, i32 15
  %3054 = getelementptr inbounds %struct.Reg, %struct.Reg* %3053, i32 0, i32 0
  %RBP.i1434 = bitcast %union.anon* %3054 to i64*
  %3055 = load i64, i64* %RBP.i1434
  %3056 = sub i64 %3055, 48
  %3057 = load i64, i64* %PC.i1432
  %3058 = add i64 %3057, 3
  store i64 %3058, i64* %PC.i1432
  %3059 = inttoptr i64 %3056 to i32*
  %3060 = load i32, i32* %3059
  %3061 = zext i32 %3060 to i64
  store i64 %3061, i64* %RAX.i1433, align 8
  store %struct.Memory* %loadMem_43395b, %struct.Memory** %MEMORY
  %loadMem_43395e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3063 = getelementptr inbounds %struct.GPR, %struct.GPR* %3062, i32 0, i32 33
  %3064 = getelementptr inbounds %struct.Reg, %struct.Reg* %3063, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %3064 to i64*
  %3065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3066 = getelementptr inbounds %struct.GPR, %struct.GPR* %3065, i32 0, i32 5
  %3067 = getelementptr inbounds %struct.Reg, %struct.Reg* %3066, i32 0, i32 0
  %RCX.i1431 = bitcast %union.anon* %3067 to i64*
  %3068 = load i64, i64* %PC.i1430
  %3069 = add i64 %3068, 8
  store i64 %3069, i64* %PC.i1430
  %3070 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3070, i64* %RCX.i1431, align 8
  store %struct.Memory* %loadMem_43395e, %struct.Memory** %MEMORY
  %loadMem_433966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3072 = getelementptr inbounds %struct.GPR, %struct.GPR* %3071, i32 0, i32 33
  %3073 = getelementptr inbounds %struct.Reg, %struct.Reg* %3072, i32 0, i32 0
  %PC.i1427 = bitcast %union.anon* %3073 to i64*
  %3074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3075 = getelementptr inbounds %struct.GPR, %struct.GPR* %3074, i32 0, i32 1
  %3076 = getelementptr inbounds %struct.Reg, %struct.Reg* %3075, i32 0, i32 0
  %EAX.i1428 = bitcast %union.anon* %3076 to i32*
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3078 = getelementptr inbounds %struct.GPR, %struct.GPR* %3077, i32 0, i32 5
  %3079 = getelementptr inbounds %struct.Reg, %struct.Reg* %3078, i32 0, i32 0
  %RCX.i1429 = bitcast %union.anon* %3079 to i64*
  %3080 = load i64, i64* %RCX.i1429
  %3081 = add i64 %3080, 36
  %3082 = load i32, i32* %EAX.i1428
  %3083 = zext i32 %3082 to i64
  %3084 = load i64, i64* %PC.i1427
  %3085 = add i64 %3084, 3
  store i64 %3085, i64* %PC.i1427
  %3086 = inttoptr i64 %3081 to i32*
  store i32 %3082, i32* %3086
  store %struct.Memory* %loadMem_433966, %struct.Memory** %MEMORY
  %loadMem_433969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3088 = getelementptr inbounds %struct.GPR, %struct.GPR* %3087, i32 0, i32 33
  %3089 = getelementptr inbounds %struct.Reg, %struct.Reg* %3088, i32 0, i32 0
  %PC.i1425 = bitcast %union.anon* %3089 to i64*
  %3090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3091 = getelementptr inbounds %struct.GPR, %struct.GPR* %3090, i32 0, i32 5
  %3092 = getelementptr inbounds %struct.Reg, %struct.Reg* %3091, i32 0, i32 0
  %RCX.i1426 = bitcast %union.anon* %3092 to i64*
  %3093 = load i64, i64* %PC.i1425
  %3094 = add i64 %3093, 8
  store i64 %3094, i64* %PC.i1425
  %3095 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %3095, i64* %RCX.i1426, align 8
  store %struct.Memory* %loadMem_433969, %struct.Memory** %MEMORY
  %loadMem_433971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3097 = getelementptr inbounds %struct.GPR, %struct.GPR* %3096, i32 0, i32 33
  %3098 = getelementptr inbounds %struct.Reg, %struct.Reg* %3097, i32 0, i32 0
  %PC.i1422 = bitcast %union.anon* %3098 to i64*
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3100 = getelementptr inbounds %struct.GPR, %struct.GPR* %3099, i32 0, i32 1
  %3101 = getelementptr inbounds %struct.Reg, %struct.Reg* %3100, i32 0, i32 0
  %RAX.i1423 = bitcast %union.anon* %3101 to i64*
  %3102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3103 = getelementptr inbounds %struct.GPR, %struct.GPR* %3102, i32 0, i32 5
  %3104 = getelementptr inbounds %struct.Reg, %struct.Reg* %3103, i32 0, i32 0
  %RCX.i1424 = bitcast %union.anon* %3104 to i64*
  %3105 = load i64, i64* %RCX.i1424
  %3106 = add i64 %3105, 36
  %3107 = load i64, i64* %PC.i1422
  %3108 = add i64 %3107, 3
  store i64 %3108, i64* %PC.i1422
  %3109 = inttoptr i64 %3106 to i32*
  %3110 = load i32, i32* %3109
  %3111 = zext i32 %3110 to i64
  store i64 %3111, i64* %RAX.i1423, align 8
  store %struct.Memory* %loadMem_433971, %struct.Memory** %MEMORY
  %loadMem_433974 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3113 = getelementptr inbounds %struct.GPR, %struct.GPR* %3112, i32 0, i32 33
  %3114 = getelementptr inbounds %struct.Reg, %struct.Reg* %3113, i32 0, i32 0
  %PC.i1420 = bitcast %union.anon* %3114 to i64*
  %3115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3116 = getelementptr inbounds %struct.GPR, %struct.GPR* %3115, i32 0, i32 5
  %3117 = getelementptr inbounds %struct.Reg, %struct.Reg* %3116, i32 0, i32 0
  %RCX.i1421 = bitcast %union.anon* %3117 to i64*
  %3118 = load i64, i64* %PC.i1420
  %3119 = add i64 %3118, 8
  store i64 %3119, i64* %PC.i1420
  %3120 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3120, i64* %RCX.i1421, align 8
  store %struct.Memory* %loadMem_433974, %struct.Memory** %MEMORY
  %loadMem_43397c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3122 = getelementptr inbounds %struct.GPR, %struct.GPR* %3121, i32 0, i32 33
  %3123 = getelementptr inbounds %struct.Reg, %struct.Reg* %3122, i32 0, i32 0
  %PC.i1417 = bitcast %union.anon* %3123 to i64*
  %3124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3125 = getelementptr inbounds %struct.GPR, %struct.GPR* %3124, i32 0, i32 1
  %3126 = getelementptr inbounds %struct.Reg, %struct.Reg* %3125, i32 0, i32 0
  %EAX.i1418 = bitcast %union.anon* %3126 to i32*
  %3127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3128 = getelementptr inbounds %struct.GPR, %struct.GPR* %3127, i32 0, i32 5
  %3129 = getelementptr inbounds %struct.Reg, %struct.Reg* %3128, i32 0, i32 0
  %RCX.i1419 = bitcast %union.anon* %3129 to i64*
  %3130 = load i64, i64* %RCX.i1419
  %3131 = add i64 %3130, 72376
  %3132 = load i32, i32* %EAX.i1418
  %3133 = zext i32 %3132 to i64
  %3134 = load i64, i64* %PC.i1417
  %3135 = add i64 %3134, 6
  store i64 %3135, i64* %PC.i1417
  %3136 = inttoptr i64 %3131 to i32*
  store i32 %3132, i32* %3136
  store %struct.Memory* %loadMem_43397c, %struct.Memory** %MEMORY
  %loadMem_433982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3138 = getelementptr inbounds %struct.GPR, %struct.GPR* %3137, i32 0, i32 33
  %3139 = getelementptr inbounds %struct.Reg, %struct.Reg* %3138, i32 0, i32 0
  %PC.i1415 = bitcast %union.anon* %3139 to i64*
  %3140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3141 = getelementptr inbounds %struct.GPR, %struct.GPR* %3140, i32 0, i32 5
  %3142 = getelementptr inbounds %struct.Reg, %struct.Reg* %3141, i32 0, i32 0
  %RCX.i1416 = bitcast %union.anon* %3142 to i64*
  %3143 = load i64, i64* %PC.i1415
  %3144 = add i64 %3143, 8
  store i64 %3144, i64* %PC.i1415
  %3145 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3145, i64* %RCX.i1416, align 8
  store %struct.Memory* %loadMem_433982, %struct.Memory** %MEMORY
  %loadMem_43398a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3147 = getelementptr inbounds %struct.GPR, %struct.GPR* %3146, i32 0, i32 33
  %3148 = getelementptr inbounds %struct.Reg, %struct.Reg* %3147, i32 0, i32 0
  %PC.i1413 = bitcast %union.anon* %3148 to i64*
  %3149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3150 = getelementptr inbounds %struct.GPR, %struct.GPR* %3149, i32 0, i32 5
  %3151 = getelementptr inbounds %struct.Reg, %struct.Reg* %3150, i32 0, i32 0
  %RCX.i1414 = bitcast %union.anon* %3151 to i64*
  %3152 = load i64, i64* %RCX.i1414
  %3153 = add i64 %3152, 72636
  %3154 = load i64, i64* %PC.i1413
  %3155 = add i64 %3154, 10
  store i64 %3155, i64* %PC.i1413
  %3156 = inttoptr i64 %3153 to i32*
  store i32 0, i32* %3156
  store %struct.Memory* %loadMem_43398a, %struct.Memory** %MEMORY
  %loadMem_433994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3158 = getelementptr inbounds %struct.GPR, %struct.GPR* %3157, i32 0, i32 33
  %3159 = getelementptr inbounds %struct.Reg, %struct.Reg* %3158, i32 0, i32 0
  %PC.i1411 = bitcast %union.anon* %3159 to i64*
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3161 = getelementptr inbounds %struct.GPR, %struct.GPR* %3160, i32 0, i32 5
  %3162 = getelementptr inbounds %struct.Reg, %struct.Reg* %3161, i32 0, i32 0
  %RCX.i1412 = bitcast %union.anon* %3162 to i64*
  %3163 = load i64, i64* %PC.i1411
  %3164 = add i64 %3163, 8
  store i64 %3164, i64* %PC.i1411
  %3165 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %3165, i64* %RCX.i1412, align 8
  store %struct.Memory* %loadMem_433994, %struct.Memory** %MEMORY
  %loadMem_43399c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3167 = getelementptr inbounds %struct.GPR, %struct.GPR* %3166, i32 0, i32 33
  %3168 = getelementptr inbounds %struct.Reg, %struct.Reg* %3167, i32 0, i32 0
  %PC.i1409 = bitcast %union.anon* %3168 to i64*
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3170 = getelementptr inbounds %struct.GPR, %struct.GPR* %3169, i32 0, i32 5
  %3171 = getelementptr inbounds %struct.Reg, %struct.Reg* %3170, i32 0, i32 0
  %RCX.i1410 = bitcast %union.anon* %3171 to i64*
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3173 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3172, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %3173 to %"class.std::bitset"*
  %3174 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %3175 = load i64, i64* %RCX.i1410
  %3176 = add i64 %3175, 2424
  %3177 = load i64, i64* %PC.i1409
  %3178 = add i64 %3177, 8
  store i64 %3178, i64* %PC.i1409
  %3179 = bitcast i8* %3174 to <2 x i32>*
  %3180 = load <2 x i32>, <2 x i32>* %3179, align 1
  %3181 = getelementptr inbounds i8, i8* %3174, i64 8
  %3182 = bitcast i8* %3181 to <2 x i32>*
  %3183 = load <2 x i32>, <2 x i32>* %3182, align 1
  %3184 = inttoptr i64 %3176 to double*
  %3185 = load double, double* %3184
  %3186 = fptrunc double %3185 to float
  %3187 = bitcast i8* %3174 to float*
  store float %3186, float* %3187, align 1
  %3188 = extractelement <2 x i32> %3180, i32 1
  %3189 = getelementptr inbounds i8, i8* %3174, i64 4
  %3190 = bitcast i8* %3189 to i32*
  store i32 %3188, i32* %3190, align 1
  %3191 = extractelement <2 x i32> %3183, i32 0
  %3192 = bitcast i8* %3181 to i32*
  store i32 %3191, i32* %3192, align 1
  %3193 = extractelement <2 x i32> %3183, i32 1
  %3194 = getelementptr inbounds i8, i8* %3174, i64 12
  %3195 = bitcast i8* %3194 to i32*
  store i32 %3193, i32* %3195, align 1
  store %struct.Memory* %loadMem_43399c, %struct.Memory** %MEMORY
  %loadMem_4339a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3197 = getelementptr inbounds %struct.GPR, %struct.GPR* %3196, i32 0, i32 33
  %3198 = getelementptr inbounds %struct.Reg, %struct.Reg* %3197, i32 0, i32 0
  %PC.i1407 = bitcast %union.anon* %3198 to i64*
  %3199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3200 = getelementptr inbounds %struct.GPR, %struct.GPR* %3199, i32 0, i32 5
  %3201 = getelementptr inbounds %struct.Reg, %struct.Reg* %3200, i32 0, i32 0
  %RCX.i1408 = bitcast %union.anon* %3201 to i64*
  %3202 = load i64, i64* %PC.i1407
  %3203 = add i64 %3202, 8
  store i64 %3203, i64* %PC.i1407
  %3204 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3204, i64* %RCX.i1408, align 8
  store %struct.Memory* %loadMem_4339a4, %struct.Memory** %MEMORY
  %loadMem_4339ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3206 = getelementptr inbounds %struct.GPR, %struct.GPR* %3205, i32 0, i32 33
  %3207 = getelementptr inbounds %struct.Reg, %struct.Reg* %3206, i32 0, i32 0
  %PC.i1405 = bitcast %union.anon* %3207 to i64*
  %3208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3209 = getelementptr inbounds %struct.GPR, %struct.GPR* %3208, i32 0, i32 5
  %3210 = getelementptr inbounds %struct.Reg, %struct.Reg* %3209, i32 0, i32 0
  %RCX.i1406 = bitcast %union.anon* %3210 to i64*
  %3211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3212 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3211, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %3212 to %union.vec128_t*
  %3213 = load i64, i64* %RCX.i1406
  %3214 = add i64 %3213, 48
  %3215 = bitcast %union.vec128_t* %XMM0.i to i8*
  %3216 = load i64, i64* %PC.i1405
  %3217 = add i64 %3216, 5
  store i64 %3217, i64* %PC.i1405
  %3218 = bitcast i8* %3215 to <2 x float>*
  %3219 = load <2 x float>, <2 x float>* %3218, align 1
  %3220 = extractelement <2 x float> %3219, i32 0
  %3221 = inttoptr i64 %3214 to float*
  store float %3220, float* %3221
  store %struct.Memory* %loadMem_4339ac, %struct.Memory** %MEMORY
  %loadMem_4339b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3223 = getelementptr inbounds %struct.GPR, %struct.GPR* %3222, i32 0, i32 33
  %3224 = getelementptr inbounds %struct.Reg, %struct.Reg* %3223, i32 0, i32 0
  %PC.i1403 = bitcast %union.anon* %3224 to i64*
  %3225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3226 = getelementptr inbounds %struct.GPR, %struct.GPR* %3225, i32 0, i32 5
  %3227 = getelementptr inbounds %struct.Reg, %struct.Reg* %3226, i32 0, i32 0
  %RCX.i1404 = bitcast %union.anon* %3227 to i64*
  %3228 = load i64, i64* %PC.i1403
  %3229 = add i64 %3228, 8
  store i64 %3229, i64* %PC.i1403
  %3230 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3230, i64* %RCX.i1404, align 8
  store %struct.Memory* %loadMem_4339b1, %struct.Memory** %MEMORY
  %loadMem_4339b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3232 = getelementptr inbounds %struct.GPR, %struct.GPR* %3231, i32 0, i32 33
  %3233 = getelementptr inbounds %struct.Reg, %struct.Reg* %3232, i32 0, i32 0
  %PC.i1401 = bitcast %union.anon* %3233 to i64*
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3235 = getelementptr inbounds %struct.GPR, %struct.GPR* %3234, i32 0, i32 5
  %3236 = getelementptr inbounds %struct.Reg, %struct.Reg* %3235, i32 0, i32 0
  %RCX.i1402 = bitcast %union.anon* %3236 to i64*
  %3237 = load i64, i64* %RCX.i1402
  %3238 = load i64, i64* %PC.i1401
  %3239 = add i64 %3238, 7
  store i64 %3239, i64* %PC.i1401
  %3240 = add i64 71920, %3237
  store i64 %3240, i64* %RCX.i1402, align 8
  %3241 = icmp ult i64 %3240, %3237
  %3242 = icmp ult i64 %3240, 71920
  %3243 = or i1 %3241, %3242
  %3244 = zext i1 %3243 to i8
  %3245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3244, i8* %3245, align 1
  %3246 = trunc i64 %3240 to i32
  %3247 = and i32 %3246, 255
  %3248 = call i32 @llvm.ctpop.i32(i32 %3247)
  %3249 = trunc i32 %3248 to i8
  %3250 = and i8 %3249, 1
  %3251 = xor i8 %3250, 1
  %3252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3251, i8* %3252, align 1
  %3253 = xor i64 71920, %3237
  %3254 = xor i64 %3253, %3240
  %3255 = lshr i64 %3254, 4
  %3256 = trunc i64 %3255 to i8
  %3257 = and i8 %3256, 1
  %3258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3257, i8* %3258, align 1
  %3259 = icmp eq i64 %3240, 0
  %3260 = zext i1 %3259 to i8
  %3261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3260, i8* %3261, align 1
  %3262 = lshr i64 %3240, 63
  %3263 = trunc i64 %3262 to i8
  %3264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3263, i8* %3264, align 1
  %3265 = lshr i64 %3237, 63
  %3266 = xor i64 %3262, %3265
  %3267 = add i64 %3266, %3262
  %3268 = icmp eq i64 %3267, 2
  %3269 = zext i1 %3268 to i8
  %3270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3269, i8* %3270, align 1
  store %struct.Memory* %loadMem_4339b9, %struct.Memory** %MEMORY
  %loadMem_4339c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3272 = getelementptr inbounds %struct.GPR, %struct.GPR* %3271, i32 0, i32 33
  %3273 = getelementptr inbounds %struct.Reg, %struct.Reg* %3272, i32 0, i32 0
  %PC.i1398 = bitcast %union.anon* %3273 to i64*
  %3274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3275 = getelementptr inbounds %struct.GPR, %struct.GPR* %3274, i32 0, i32 5
  %3276 = getelementptr inbounds %struct.Reg, %struct.Reg* %3275, i32 0, i32 0
  %RCX.i1399 = bitcast %union.anon* %3276 to i64*
  %3277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3278 = getelementptr inbounds %struct.GPR, %struct.GPR* %3277, i32 0, i32 11
  %3279 = getelementptr inbounds %struct.Reg, %struct.Reg* %3278, i32 0, i32 0
  %RDI.i1400 = bitcast %union.anon* %3279 to i64*
  %3280 = load i64, i64* %RCX.i1399
  %3281 = load i64, i64* %PC.i1398
  %3282 = add i64 %3281, 3
  store i64 %3282, i64* %PC.i1398
  store i64 %3280, i64* %RDI.i1400, align 8
  store %struct.Memory* %loadMem_4339c0, %struct.Memory** %MEMORY
  %loadMem1_4339c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3284 = getelementptr inbounds %struct.GPR, %struct.GPR* %3283, i32 0, i32 33
  %3285 = getelementptr inbounds %struct.Reg, %struct.Reg* %3284, i32 0, i32 0
  %PC.i1397 = bitcast %union.anon* %3285 to i64*
  %3286 = load i64, i64* %PC.i1397
  %3287 = add i64 %3286, 18717
  %3288 = load i64, i64* %PC.i1397
  %3289 = add i64 %3288, 5
  %3290 = load i64, i64* %PC.i1397
  %3291 = add i64 %3290, 5
  store i64 %3291, i64* %PC.i1397
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3293 = load i64, i64* %3292, align 8
  %3294 = add i64 %3293, -8
  %3295 = inttoptr i64 %3294 to i64*
  store i64 %3289, i64* %3295
  store i64 %3294, i64* %3292, align 8
  %3296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3287, i64* %3296, align 8
  store %struct.Memory* %loadMem1_4339c3, %struct.Memory** %MEMORY
  %loadMem2_4339c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4339c3 = load i64, i64* %3
  %call2_4339c3 = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_4339c3, %struct.Memory* %loadMem2_4339c3)
  store %struct.Memory* %call2_4339c3, %struct.Memory** %MEMORY
  %loadMem_4339c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3298 = getelementptr inbounds %struct.GPR, %struct.GPR* %3297, i32 0, i32 33
  %3299 = getelementptr inbounds %struct.Reg, %struct.Reg* %3298, i32 0, i32 0
  %PC.i1395 = bitcast %union.anon* %3299 to i64*
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3301 = getelementptr inbounds %struct.GPR, %struct.GPR* %3300, i32 0, i32 5
  %3302 = getelementptr inbounds %struct.Reg, %struct.Reg* %3301, i32 0, i32 0
  %RCX.i1396 = bitcast %union.anon* %3302 to i64*
  %3303 = load i64, i64* %PC.i1395
  %3304 = add i64 %3303, 8
  store i64 %3304, i64* %PC.i1395
  %3305 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3305, i64* %RCX.i1396, align 8
  store %struct.Memory* %loadMem_4339c8, %struct.Memory** %MEMORY
  %loadMem_4339d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3307 = getelementptr inbounds %struct.GPR, %struct.GPR* %3306, i32 0, i32 33
  %3308 = getelementptr inbounds %struct.Reg, %struct.Reg* %3307, i32 0, i32 0
  %PC.i1393 = bitcast %union.anon* %3308 to i64*
  %3309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3310 = getelementptr inbounds %struct.GPR, %struct.GPR* %3309, i32 0, i32 5
  %3311 = getelementptr inbounds %struct.Reg, %struct.Reg* %3310, i32 0, i32 0
  %RCX.i1394 = bitcast %union.anon* %3311 to i64*
  %3312 = load i64, i64* %RCX.i1394
  %3313 = load i64, i64* %PC.i1393
  %3314 = add i64 %3313, 7
  store i64 %3314, i64* %PC.i1393
  %3315 = add i64 71928, %3312
  store i64 %3315, i64* %RCX.i1394, align 8
  %3316 = icmp ult i64 %3315, %3312
  %3317 = icmp ult i64 %3315, 71928
  %3318 = or i1 %3316, %3317
  %3319 = zext i1 %3318 to i8
  %3320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3319, i8* %3320, align 1
  %3321 = trunc i64 %3315 to i32
  %3322 = and i32 %3321, 255
  %3323 = call i32 @llvm.ctpop.i32(i32 %3322)
  %3324 = trunc i32 %3323 to i8
  %3325 = and i8 %3324, 1
  %3326 = xor i8 %3325, 1
  %3327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3326, i8* %3327, align 1
  %3328 = xor i64 71928, %3312
  %3329 = xor i64 %3328, %3315
  %3330 = lshr i64 %3329, 4
  %3331 = trunc i64 %3330 to i8
  %3332 = and i8 %3331, 1
  %3333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3332, i8* %3333, align 1
  %3334 = icmp eq i64 %3315, 0
  %3335 = zext i1 %3334 to i8
  %3336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3335, i8* %3336, align 1
  %3337 = lshr i64 %3315, 63
  %3338 = trunc i64 %3337 to i8
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3338, i8* %3339, align 1
  %3340 = lshr i64 %3312, 63
  %3341 = xor i64 %3337, %3340
  %3342 = add i64 %3341, %3337
  %3343 = icmp eq i64 %3342, 2
  %3344 = zext i1 %3343 to i8
  %3345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3344, i8* %3345, align 1
  store %struct.Memory* %loadMem_4339d0, %struct.Memory** %MEMORY
  %loadMem_4339d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3347 = getelementptr inbounds %struct.GPR, %struct.GPR* %3346, i32 0, i32 33
  %3348 = getelementptr inbounds %struct.Reg, %struct.Reg* %3347, i32 0, i32 0
  %PC.i1390 = bitcast %union.anon* %3348 to i64*
  %3349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3350 = getelementptr inbounds %struct.GPR, %struct.GPR* %3349, i32 0, i32 5
  %3351 = getelementptr inbounds %struct.Reg, %struct.Reg* %3350, i32 0, i32 0
  %RCX.i1391 = bitcast %union.anon* %3351 to i64*
  %3352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3353 = getelementptr inbounds %struct.GPR, %struct.GPR* %3352, i32 0, i32 11
  %3354 = getelementptr inbounds %struct.Reg, %struct.Reg* %3353, i32 0, i32 0
  %RDI.i1392 = bitcast %union.anon* %3354 to i64*
  %3355 = load i64, i64* %RCX.i1391
  %3356 = load i64, i64* %PC.i1390
  %3357 = add i64 %3356, 3
  store i64 %3357, i64* %PC.i1390
  store i64 %3355, i64* %RDI.i1392, align 8
  store %struct.Memory* %loadMem_4339d7, %struct.Memory** %MEMORY
  %loadMem_4339da = load %struct.Memory*, %struct.Memory** %MEMORY
  %3358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3359 = getelementptr inbounds %struct.GPR, %struct.GPR* %3358, i32 0, i32 33
  %3360 = getelementptr inbounds %struct.Reg, %struct.Reg* %3359, i32 0, i32 0
  %PC.i1387 = bitcast %union.anon* %3360 to i64*
  %3361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3362 = getelementptr inbounds %struct.GPR, %struct.GPR* %3361, i32 0, i32 1
  %3363 = getelementptr inbounds %struct.Reg, %struct.Reg* %3362, i32 0, i32 0
  %EAX.i1388 = bitcast %union.anon* %3363 to i32*
  %3364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3365 = getelementptr inbounds %struct.GPR, %struct.GPR* %3364, i32 0, i32 15
  %3366 = getelementptr inbounds %struct.Reg, %struct.Reg* %3365, i32 0, i32 0
  %RBP.i1389 = bitcast %union.anon* %3366 to i64*
  %3367 = load i64, i64* %RBP.i1389
  %3368 = sub i64 %3367, 52
  %3369 = load i32, i32* %EAX.i1388
  %3370 = zext i32 %3369 to i64
  %3371 = load i64, i64* %PC.i1387
  %3372 = add i64 %3371, 3
  store i64 %3372, i64* %PC.i1387
  %3373 = inttoptr i64 %3368 to i32*
  store i32 %3369, i32* %3373
  store %struct.Memory* %loadMem_4339da, %struct.Memory** %MEMORY
  %loadMem1_4339dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3375 = getelementptr inbounds %struct.GPR, %struct.GPR* %3374, i32 0, i32 33
  %3376 = getelementptr inbounds %struct.Reg, %struct.Reg* %3375, i32 0, i32 0
  %PC.i1386 = bitcast %union.anon* %3376 to i64*
  %3377 = load i64, i64* %PC.i1386
  %3378 = add i64 %3377, 18691
  %3379 = load i64, i64* %PC.i1386
  %3380 = add i64 %3379, 5
  %3381 = load i64, i64* %PC.i1386
  %3382 = add i64 %3381, 5
  store i64 %3382, i64* %PC.i1386
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3384 = load i64, i64* %3383, align 8
  %3385 = add i64 %3384, -8
  %3386 = inttoptr i64 %3385 to i64*
  store i64 %3380, i64* %3386
  store i64 %3385, i64* %3383, align 8
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3378, i64* %3387, align 8
  store %struct.Memory* %loadMem1_4339dd, %struct.Memory** %MEMORY
  %loadMem2_4339dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4339dd = load i64, i64* %3
  %call2_4339dd = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_4339dd, %struct.Memory* %loadMem2_4339dd)
  store %struct.Memory* %call2_4339dd, %struct.Memory** %MEMORY
  %loadMem_4339e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3389 = getelementptr inbounds %struct.GPR, %struct.GPR* %3388, i32 0, i32 33
  %3390 = getelementptr inbounds %struct.Reg, %struct.Reg* %3389, i32 0, i32 0
  %PC.i1384 = bitcast %union.anon* %3390 to i64*
  %3391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3392 = getelementptr inbounds %struct.GPR, %struct.GPR* %3391, i32 0, i32 5
  %3393 = getelementptr inbounds %struct.Reg, %struct.Reg* %3392, i32 0, i32 0
  %RCX.i1385 = bitcast %union.anon* %3393 to i64*
  %3394 = load i64, i64* %PC.i1384
  %3395 = add i64 %3394, 8
  store i64 %3395, i64* %PC.i1384
  %3396 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %3396, i64* %RCX.i1385, align 8
  store %struct.Memory* %loadMem_4339e2, %struct.Memory** %MEMORY
  %loadMem_4339ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %3397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3398 = getelementptr inbounds %struct.GPR, %struct.GPR* %3397, i32 0, i32 33
  %3399 = getelementptr inbounds %struct.Reg, %struct.Reg* %3398, i32 0, i32 0
  %PC.i1382 = bitcast %union.anon* %3399 to i64*
  %3400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3401 = getelementptr inbounds %struct.GPR, %struct.GPR* %3400, i32 0, i32 5
  %3402 = getelementptr inbounds %struct.Reg, %struct.Reg* %3401, i32 0, i32 0
  %RCX.i1383 = bitcast %union.anon* %3402 to i64*
  %3403 = load i64, i64* %RCX.i1383
  %3404 = add i64 %3403, 1256
  %3405 = load i64, i64* %PC.i1382
  %3406 = add i64 %3405, 7
  store i64 %3406, i64* %PC.i1382
  %3407 = inttoptr i64 %3404 to i32*
  %3408 = load i32, i32* %3407
  %3409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3409, align 1
  %3410 = and i32 %3408, 255
  %3411 = call i32 @llvm.ctpop.i32(i32 %3410)
  %3412 = trunc i32 %3411 to i8
  %3413 = and i8 %3412, 1
  %3414 = xor i8 %3413, 1
  %3415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3414, i8* %3415, align 1
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3416, align 1
  %3417 = icmp eq i32 %3408, 0
  %3418 = zext i1 %3417 to i8
  %3419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3418, i8* %3419, align 1
  %3420 = lshr i32 %3408, 31
  %3421 = trunc i32 %3420 to i8
  %3422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3421, i8* %3422, align 1
  %3423 = lshr i32 %3408, 31
  %3424 = xor i32 %3420, %3423
  %3425 = add i32 %3424, %3423
  %3426 = icmp eq i32 %3425, 2
  %3427 = zext i1 %3426 to i8
  %3428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3427, i8* %3428, align 1
  store %struct.Memory* %loadMem_4339ea, %struct.Memory** %MEMORY
  %loadMem_4339f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3430 = getelementptr inbounds %struct.GPR, %struct.GPR* %3429, i32 0, i32 33
  %3431 = getelementptr inbounds %struct.Reg, %struct.Reg* %3430, i32 0, i32 0
  %PC.i1379 = bitcast %union.anon* %3431 to i64*
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3433 = getelementptr inbounds %struct.GPR, %struct.GPR* %3432, i32 0, i32 1
  %3434 = getelementptr inbounds %struct.Reg, %struct.Reg* %3433, i32 0, i32 0
  %EAX.i1380 = bitcast %union.anon* %3434 to i32*
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3436 = getelementptr inbounds %struct.GPR, %struct.GPR* %3435, i32 0, i32 15
  %3437 = getelementptr inbounds %struct.Reg, %struct.Reg* %3436, i32 0, i32 0
  %RBP.i1381 = bitcast %union.anon* %3437 to i64*
  %3438 = load i64, i64* %RBP.i1381
  %3439 = sub i64 %3438, 56
  %3440 = load i32, i32* %EAX.i1380
  %3441 = zext i32 %3440 to i64
  %3442 = load i64, i64* %PC.i1379
  %3443 = add i64 %3442, 3
  store i64 %3443, i64* %PC.i1379
  %3444 = inttoptr i64 %3439 to i32*
  store i32 %3440, i32* %3444
  store %struct.Memory* %loadMem_4339f1, %struct.Memory** %MEMORY
  %loadMem_4339f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3446 = getelementptr inbounds %struct.GPR, %struct.GPR* %3445, i32 0, i32 33
  %3447 = getelementptr inbounds %struct.Reg, %struct.Reg* %3446, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %3447 to i64*
  %3448 = load i64, i64* %PC.i1378
  %3449 = add i64 %3448, 54
  %3450 = load i64, i64* %PC.i1378
  %3451 = add i64 %3450, 6
  %3452 = load i64, i64* %PC.i1378
  %3453 = add i64 %3452, 6
  store i64 %3453, i64* %PC.i1378
  %3454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3455 = load i8, i8* %3454, align 1
  store i8 %3455, i8* %BRANCH_TAKEN, align 1
  %3456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3457 = icmp ne i8 %3455, 0
  %3458 = select i1 %3457, i64 %3449, i64 %3451
  store i64 %3458, i64* %3456, align 8
  store %struct.Memory* %loadMem_4339f4, %struct.Memory** %MEMORY
  %loadBr_4339f4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4339f4 = icmp eq i8 %loadBr_4339f4, 1
  br i1 %cmpBr_4339f4, label %block_.L_433a2a, label %block_4339fa

block_4339fa:                                     ; preds = %block_.L_43395b
  %loadMem_4339fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3460 = getelementptr inbounds %struct.GPR, %struct.GPR* %3459, i32 0, i32 33
  %3461 = getelementptr inbounds %struct.Reg, %struct.Reg* %3460, i32 0, i32 0
  %PC.i1376 = bitcast %union.anon* %3461 to i64*
  %3462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3463 = getelementptr inbounds %struct.GPR, %struct.GPR* %3462, i32 0, i32 1
  %3464 = getelementptr inbounds %struct.Reg, %struct.Reg* %3463, i32 0, i32 0
  %RAX.i1377 = bitcast %union.anon* %3464 to i64*
  %3465 = load i64, i64* %PC.i1376
  %3466 = add i64 %3465, 8
  store i64 %3466, i64* %PC.i1376
  %3467 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3467, i64* %RAX.i1377, align 8
  store %struct.Memory* %loadMem_4339fa, %struct.Memory** %MEMORY
  %loadMem_433a02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3469 = getelementptr inbounds %struct.GPR, %struct.GPR* %3468, i32 0, i32 33
  %3470 = getelementptr inbounds %struct.Reg, %struct.Reg* %3469, i32 0, i32 0
  %PC.i1374 = bitcast %union.anon* %3470 to i64*
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3472 = getelementptr inbounds %struct.GPR, %struct.GPR* %3471, i32 0, i32 1
  %3473 = getelementptr inbounds %struct.Reg, %struct.Reg* %3472, i32 0, i32 0
  %RAX.i1375 = bitcast %union.anon* %3473 to i64*
  %3474 = load i64, i64* %RAX.i1375
  %3475 = load i64, i64* %PC.i1374
  %3476 = add i64 %3475, 6
  store i64 %3476, i64* %PC.i1374
  %3477 = add i64 71936, %3474
  store i64 %3477, i64* %RAX.i1375, align 8
  %3478 = icmp ult i64 %3477, %3474
  %3479 = icmp ult i64 %3477, 71936
  %3480 = or i1 %3478, %3479
  %3481 = zext i1 %3480 to i8
  %3482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3481, i8* %3482, align 1
  %3483 = trunc i64 %3477 to i32
  %3484 = and i32 %3483, 255
  %3485 = call i32 @llvm.ctpop.i32(i32 %3484)
  %3486 = trunc i32 %3485 to i8
  %3487 = and i8 %3486, 1
  %3488 = xor i8 %3487, 1
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3488, i8* %3489, align 1
  %3490 = xor i64 71936, %3474
  %3491 = xor i64 %3490, %3477
  %3492 = lshr i64 %3491, 4
  %3493 = trunc i64 %3492 to i8
  %3494 = and i8 %3493, 1
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3494, i8* %3495, align 1
  %3496 = icmp eq i64 %3477, 0
  %3497 = zext i1 %3496 to i8
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3497, i8* %3498, align 1
  %3499 = lshr i64 %3477, 63
  %3500 = trunc i64 %3499 to i8
  %3501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3500, i8* %3501, align 1
  %3502 = lshr i64 %3474, 63
  %3503 = xor i64 %3499, %3502
  %3504 = add i64 %3503, %3499
  %3505 = icmp eq i64 %3504, 2
  %3506 = zext i1 %3505 to i8
  %3507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3506, i8* %3507, align 1
  store %struct.Memory* %loadMem_433a02, %struct.Memory** %MEMORY
  %loadMem_433a08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3509 = getelementptr inbounds %struct.GPR, %struct.GPR* %3508, i32 0, i32 33
  %3510 = getelementptr inbounds %struct.Reg, %struct.Reg* %3509, i32 0, i32 0
  %PC.i1371 = bitcast %union.anon* %3510 to i64*
  %3511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3512 = getelementptr inbounds %struct.GPR, %struct.GPR* %3511, i32 0, i32 1
  %3513 = getelementptr inbounds %struct.Reg, %struct.Reg* %3512, i32 0, i32 0
  %RAX.i1372 = bitcast %union.anon* %3513 to i64*
  %3514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3515 = getelementptr inbounds %struct.GPR, %struct.GPR* %3514, i32 0, i32 11
  %3516 = getelementptr inbounds %struct.Reg, %struct.Reg* %3515, i32 0, i32 0
  %RDI.i1373 = bitcast %union.anon* %3516 to i64*
  %3517 = load i64, i64* %RAX.i1372
  %3518 = load i64, i64* %PC.i1371
  %3519 = add i64 %3518, 3
  store i64 %3519, i64* %PC.i1371
  store i64 %3517, i64* %RDI.i1373, align 8
  store %struct.Memory* %loadMem_433a08, %struct.Memory** %MEMORY
  %loadMem1_433a0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3521 = getelementptr inbounds %struct.GPR, %struct.GPR* %3520, i32 0, i32 33
  %3522 = getelementptr inbounds %struct.Reg, %struct.Reg* %3521, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %3522 to i64*
  %3523 = load i64, i64* %PC.i1370
  %3524 = add i64 %3523, 18645
  %3525 = load i64, i64* %PC.i1370
  %3526 = add i64 %3525, 5
  %3527 = load i64, i64* %PC.i1370
  %3528 = add i64 %3527, 5
  store i64 %3528, i64* %PC.i1370
  %3529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3530 = load i64, i64* %3529, align 8
  %3531 = add i64 %3530, -8
  %3532 = inttoptr i64 %3531 to i64*
  store i64 %3526, i64* %3532
  store i64 %3531, i64* %3529, align 8
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3524, i64* %3533, align 8
  store %struct.Memory* %loadMem1_433a0b, %struct.Memory** %MEMORY
  %loadMem2_433a0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433a0b = load i64, i64* %3
  %call2_433a0b = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433a0b, %struct.Memory* %loadMem2_433a0b)
  store %struct.Memory* %call2_433a0b, %struct.Memory** %MEMORY
  %loadMem_433a10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3535 = getelementptr inbounds %struct.GPR, %struct.GPR* %3534, i32 0, i32 33
  %3536 = getelementptr inbounds %struct.Reg, %struct.Reg* %3535, i32 0, i32 0
  %PC.i1368 = bitcast %union.anon* %3536 to i64*
  %3537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3538 = getelementptr inbounds %struct.GPR, %struct.GPR* %3537, i32 0, i32 11
  %3539 = getelementptr inbounds %struct.Reg, %struct.Reg* %3538, i32 0, i32 0
  %RDI.i1369 = bitcast %union.anon* %3539 to i64*
  %3540 = load i64, i64* %PC.i1368
  %3541 = add i64 %3540, 8
  store i64 %3541, i64* %PC.i1368
  %3542 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3542, i64* %RDI.i1369, align 8
  store %struct.Memory* %loadMem_433a10, %struct.Memory** %MEMORY
  %loadMem_433a18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3544 = getelementptr inbounds %struct.GPR, %struct.GPR* %3543, i32 0, i32 33
  %3545 = getelementptr inbounds %struct.Reg, %struct.Reg* %3544, i32 0, i32 0
  %PC.i1366 = bitcast %union.anon* %3545 to i64*
  %3546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3547 = getelementptr inbounds %struct.GPR, %struct.GPR* %3546, i32 0, i32 11
  %3548 = getelementptr inbounds %struct.Reg, %struct.Reg* %3547, i32 0, i32 0
  %RDI.i1367 = bitcast %union.anon* %3548 to i64*
  %3549 = load i64, i64* %RDI.i1367
  %3550 = load i64, i64* %PC.i1366
  %3551 = add i64 %3550, 7
  store i64 %3551, i64* %PC.i1366
  %3552 = add i64 71944, %3549
  store i64 %3552, i64* %RDI.i1367, align 8
  %3553 = icmp ult i64 %3552, %3549
  %3554 = icmp ult i64 %3552, 71944
  %3555 = or i1 %3553, %3554
  %3556 = zext i1 %3555 to i8
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3556, i8* %3557, align 1
  %3558 = trunc i64 %3552 to i32
  %3559 = and i32 %3558, 255
  %3560 = call i32 @llvm.ctpop.i32(i32 %3559)
  %3561 = trunc i32 %3560 to i8
  %3562 = and i8 %3561, 1
  %3563 = xor i8 %3562, 1
  %3564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3563, i8* %3564, align 1
  %3565 = xor i64 71944, %3549
  %3566 = xor i64 %3565, %3552
  %3567 = lshr i64 %3566, 4
  %3568 = trunc i64 %3567 to i8
  %3569 = and i8 %3568, 1
  %3570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3569, i8* %3570, align 1
  %3571 = icmp eq i64 %3552, 0
  %3572 = zext i1 %3571 to i8
  %3573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3572, i8* %3573, align 1
  %3574 = lshr i64 %3552, 63
  %3575 = trunc i64 %3574 to i8
  %3576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3575, i8* %3576, align 1
  %3577 = lshr i64 %3549, 63
  %3578 = xor i64 %3574, %3577
  %3579 = add i64 %3578, %3574
  %3580 = icmp eq i64 %3579, 2
  %3581 = zext i1 %3580 to i8
  %3582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3581, i8* %3582, align 1
  store %struct.Memory* %loadMem_433a18, %struct.Memory** %MEMORY
  %loadMem_433a1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3584 = getelementptr inbounds %struct.GPR, %struct.GPR* %3583, i32 0, i32 33
  %3585 = getelementptr inbounds %struct.Reg, %struct.Reg* %3584, i32 0, i32 0
  %PC.i1363 = bitcast %union.anon* %3585 to i64*
  %3586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3587 = getelementptr inbounds %struct.GPR, %struct.GPR* %3586, i32 0, i32 1
  %3588 = getelementptr inbounds %struct.Reg, %struct.Reg* %3587, i32 0, i32 0
  %EAX.i1364 = bitcast %union.anon* %3588 to i32*
  %3589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3590 = getelementptr inbounds %struct.GPR, %struct.GPR* %3589, i32 0, i32 15
  %3591 = getelementptr inbounds %struct.Reg, %struct.Reg* %3590, i32 0, i32 0
  %RBP.i1365 = bitcast %union.anon* %3591 to i64*
  %3592 = load i64, i64* %RBP.i1365
  %3593 = sub i64 %3592, 60
  %3594 = load i32, i32* %EAX.i1364
  %3595 = zext i32 %3594 to i64
  %3596 = load i64, i64* %PC.i1363
  %3597 = add i64 %3596, 3
  store i64 %3597, i64* %PC.i1363
  %3598 = inttoptr i64 %3593 to i32*
  store i32 %3594, i32* %3598
  store %struct.Memory* %loadMem_433a1f, %struct.Memory** %MEMORY
  %loadMem1_433a22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3600 = getelementptr inbounds %struct.GPR, %struct.GPR* %3599, i32 0, i32 33
  %3601 = getelementptr inbounds %struct.Reg, %struct.Reg* %3600, i32 0, i32 0
  %PC.i1362 = bitcast %union.anon* %3601 to i64*
  %3602 = load i64, i64* %PC.i1362
  %3603 = add i64 %3602, 18622
  %3604 = load i64, i64* %PC.i1362
  %3605 = add i64 %3604, 5
  %3606 = load i64, i64* %PC.i1362
  %3607 = add i64 %3606, 5
  store i64 %3607, i64* %PC.i1362
  %3608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3609 = load i64, i64* %3608, align 8
  %3610 = add i64 %3609, -8
  %3611 = inttoptr i64 %3610 to i64*
  store i64 %3605, i64* %3611
  store i64 %3610, i64* %3608, align 8
  %3612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3603, i64* %3612, align 8
  store %struct.Memory* %loadMem1_433a22, %struct.Memory** %MEMORY
  %loadMem2_433a22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433a22 = load i64, i64* %3
  %call2_433a22 = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433a22, %struct.Memory* %loadMem2_433a22)
  store %struct.Memory* %call2_433a22, %struct.Memory** %MEMORY
  %loadMem_433a27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3614 = getelementptr inbounds %struct.GPR, %struct.GPR* %3613, i32 0, i32 33
  %3615 = getelementptr inbounds %struct.Reg, %struct.Reg* %3614, i32 0, i32 0
  %PC.i1359 = bitcast %union.anon* %3615 to i64*
  %3616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3617 = getelementptr inbounds %struct.GPR, %struct.GPR* %3616, i32 0, i32 1
  %3618 = getelementptr inbounds %struct.Reg, %struct.Reg* %3617, i32 0, i32 0
  %EAX.i1360 = bitcast %union.anon* %3618 to i32*
  %3619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3620 = getelementptr inbounds %struct.GPR, %struct.GPR* %3619, i32 0, i32 15
  %3621 = getelementptr inbounds %struct.Reg, %struct.Reg* %3620, i32 0, i32 0
  %RBP.i1361 = bitcast %union.anon* %3621 to i64*
  %3622 = load i64, i64* %RBP.i1361
  %3623 = sub i64 %3622, 64
  %3624 = load i32, i32* %EAX.i1360
  %3625 = zext i32 %3624 to i64
  %3626 = load i64, i64* %PC.i1359
  %3627 = add i64 %3626, 3
  store i64 %3627, i64* %PC.i1359
  %3628 = inttoptr i64 %3623 to i32*
  store i32 %3624, i32* %3628
  store %struct.Memory* %loadMem_433a27, %struct.Memory** %MEMORY
  br label %block_.L_433a2a

block_.L_433a2a:                                  ; preds = %block_4339fa, %block_.L_43395b
  %loadMem_433a2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3630 = getelementptr inbounds %struct.GPR, %struct.GPR* %3629, i32 0, i32 33
  %3631 = getelementptr inbounds %struct.Reg, %struct.Reg* %3630, i32 0, i32 0
  %PC.i1357 = bitcast %union.anon* %3631 to i64*
  %3632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3633 = getelementptr inbounds %struct.GPR, %struct.GPR* %3632, i32 0, i32 1
  %3634 = getelementptr inbounds %struct.Reg, %struct.Reg* %3633, i32 0, i32 0
  %RAX.i1358 = bitcast %union.anon* %3634 to i64*
  %3635 = load i64, i64* %PC.i1357
  %3636 = add i64 %3635, 8
  store i64 %3636, i64* %PC.i1357
  %3637 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3637, i64* %RAX.i1358, align 8
  store %struct.Memory* %loadMem_433a2a, %struct.Memory** %MEMORY
  %loadMem_433a32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3639 = getelementptr inbounds %struct.GPR, %struct.GPR* %3638, i32 0, i32 33
  %3640 = getelementptr inbounds %struct.Reg, %struct.Reg* %3639, i32 0, i32 0
  %PC.i1355 = bitcast %union.anon* %3640 to i64*
  %3641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3642 = getelementptr inbounds %struct.GPR, %struct.GPR* %3641, i32 0, i32 1
  %3643 = getelementptr inbounds %struct.Reg, %struct.Reg* %3642, i32 0, i32 0
  %RAX.i1356 = bitcast %union.anon* %3643 to i64*
  %3644 = load i64, i64* %RAX.i1356
  %3645 = load i64, i64* %PC.i1355
  %3646 = add i64 %3645, 6
  store i64 %3646, i64* %PC.i1355
  %3647 = add i64 14136, %3644
  store i64 %3647, i64* %RAX.i1356, align 8
  %3648 = icmp ult i64 %3647, %3644
  %3649 = icmp ult i64 %3647, 14136
  %3650 = or i1 %3648, %3649
  %3651 = zext i1 %3650 to i8
  %3652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3651, i8* %3652, align 1
  %3653 = trunc i64 %3647 to i32
  %3654 = and i32 %3653, 255
  %3655 = call i32 @llvm.ctpop.i32(i32 %3654)
  %3656 = trunc i32 %3655 to i8
  %3657 = and i8 %3656, 1
  %3658 = xor i8 %3657, 1
  %3659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3658, i8* %3659, align 1
  %3660 = xor i64 14136, %3644
  %3661 = xor i64 %3660, %3647
  %3662 = lshr i64 %3661, 4
  %3663 = trunc i64 %3662 to i8
  %3664 = and i8 %3663, 1
  %3665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3664, i8* %3665, align 1
  %3666 = icmp eq i64 %3647, 0
  %3667 = zext i1 %3666 to i8
  %3668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3667, i8* %3668, align 1
  %3669 = lshr i64 %3647, 63
  %3670 = trunc i64 %3669 to i8
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3670, i8* %3671, align 1
  %3672 = lshr i64 %3644, 63
  %3673 = xor i64 %3669, %3672
  %3674 = add i64 %3673, %3669
  %3675 = icmp eq i64 %3674, 2
  %3676 = zext i1 %3675 to i8
  %3677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3676, i8* %3677, align 1
  store %struct.Memory* %loadMem_433a32, %struct.Memory** %MEMORY
  %loadMem_433a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3679 = getelementptr inbounds %struct.GPR, %struct.GPR* %3678, i32 0, i32 33
  %3680 = getelementptr inbounds %struct.Reg, %struct.Reg* %3679, i32 0, i32 0
  %PC.i1352 = bitcast %union.anon* %3680 to i64*
  %3681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3682 = getelementptr inbounds %struct.GPR, %struct.GPR* %3681, i32 0, i32 1
  %3683 = getelementptr inbounds %struct.Reg, %struct.Reg* %3682, i32 0, i32 0
  %RAX.i1353 = bitcast %union.anon* %3683 to i64*
  %3684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3685 = getelementptr inbounds %struct.GPR, %struct.GPR* %3684, i32 0, i32 11
  %3686 = getelementptr inbounds %struct.Reg, %struct.Reg* %3685, i32 0, i32 0
  %RDI.i1354 = bitcast %union.anon* %3686 to i64*
  %3687 = load i64, i64* %RAX.i1353
  %3688 = load i64, i64* %PC.i1352
  %3689 = add i64 %3688, 3
  store i64 %3689, i64* %PC.i1352
  store i64 %3687, i64* %RDI.i1354, align 8
  store %struct.Memory* %loadMem_433a38, %struct.Memory** %MEMORY
  %loadMem1_433a3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3691 = getelementptr inbounds %struct.GPR, %struct.GPR* %3690, i32 0, i32 33
  %3692 = getelementptr inbounds %struct.Reg, %struct.Reg* %3691, i32 0, i32 0
  %PC.i1351 = bitcast %union.anon* %3692 to i64*
  %3693 = load i64, i64* %PC.i1351
  %3694 = add i64 %3693, 19269
  %3695 = load i64, i64* %PC.i1351
  %3696 = add i64 %3695, 5
  %3697 = load i64, i64* %PC.i1351
  %3698 = add i64 %3697, 5
  store i64 %3698, i64* %PC.i1351
  %3699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3700 = load i64, i64* %3699, align 8
  %3701 = add i64 %3700, -8
  %3702 = inttoptr i64 %3701 to i64*
  store i64 %3696, i64* %3702
  store i64 %3701, i64* %3699, align 8
  %3703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3694, i64* %3703, align 8
  store %struct.Memory* %loadMem1_433a3b, %struct.Memory** %MEMORY
  %loadMem2_433a3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433a3b = load i64, i64* %3
  %call2_433a3b = call %struct.Memory* @sub_438580.get_mem_ACcoeff(%struct.State* %0, i64 %loadPC_433a3b, %struct.Memory* %loadMem2_433a3b)
  store %struct.Memory* %call2_433a3b, %struct.Memory** %MEMORY
  %loadMem_433a40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3705 = getelementptr inbounds %struct.GPR, %struct.GPR* %3704, i32 0, i32 33
  %3706 = getelementptr inbounds %struct.Reg, %struct.Reg* %3705, i32 0, i32 0
  %PC.i1349 = bitcast %union.anon* %3706 to i64*
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3708 = getelementptr inbounds %struct.GPR, %struct.GPR* %3707, i32 0, i32 11
  %3709 = getelementptr inbounds %struct.Reg, %struct.Reg* %3708, i32 0, i32 0
  %RDI.i1350 = bitcast %union.anon* %3709 to i64*
  %3710 = load i64, i64* %PC.i1349
  %3711 = add i64 %3710, 8
  store i64 %3711, i64* %PC.i1349
  %3712 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3712, i64* %RDI.i1350, align 8
  store %struct.Memory* %loadMem_433a40, %struct.Memory** %MEMORY
  %loadMem_433a48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3714 = getelementptr inbounds %struct.GPR, %struct.GPR* %3713, i32 0, i32 33
  %3715 = getelementptr inbounds %struct.Reg, %struct.Reg* %3714, i32 0, i32 0
  %PC.i1347 = bitcast %union.anon* %3715 to i64*
  %3716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3717 = getelementptr inbounds %struct.GPR, %struct.GPR* %3716, i32 0, i32 11
  %3718 = getelementptr inbounds %struct.Reg, %struct.Reg* %3717, i32 0, i32 0
  %RDI.i1348 = bitcast %union.anon* %3718 to i64*
  %3719 = load i64, i64* %RDI.i1348
  %3720 = load i64, i64* %PC.i1347
  %3721 = add i64 %3720, 7
  store i64 %3721, i64* %PC.i1347
  %3722 = add i64 14144, %3719
  store i64 %3722, i64* %RDI.i1348, align 8
  %3723 = icmp ult i64 %3722, %3719
  %3724 = icmp ult i64 %3722, 14144
  %3725 = or i1 %3723, %3724
  %3726 = zext i1 %3725 to i8
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3726, i8* %3727, align 1
  %3728 = trunc i64 %3722 to i32
  %3729 = and i32 %3728, 255
  %3730 = call i32 @llvm.ctpop.i32(i32 %3729)
  %3731 = trunc i32 %3730 to i8
  %3732 = and i8 %3731, 1
  %3733 = xor i8 %3732, 1
  %3734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3733, i8* %3734, align 1
  %3735 = xor i64 14144, %3719
  %3736 = xor i64 %3735, %3722
  %3737 = lshr i64 %3736, 4
  %3738 = trunc i64 %3737 to i8
  %3739 = and i8 %3738, 1
  %3740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3739, i8* %3740, align 1
  %3741 = icmp eq i64 %3722, 0
  %3742 = zext i1 %3741 to i8
  %3743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3742, i8* %3743, align 1
  %3744 = lshr i64 %3722, 63
  %3745 = trunc i64 %3744 to i8
  %3746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3745, i8* %3746, align 1
  %3747 = lshr i64 %3719, 63
  %3748 = xor i64 %3744, %3747
  %3749 = add i64 %3748, %3744
  %3750 = icmp eq i64 %3749, 2
  %3751 = zext i1 %3750 to i8
  %3752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3751, i8* %3752, align 1
  store %struct.Memory* %loadMem_433a48, %struct.Memory** %MEMORY
  %loadMem_433a4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3754 = getelementptr inbounds %struct.GPR, %struct.GPR* %3753, i32 0, i32 33
  %3755 = getelementptr inbounds %struct.Reg, %struct.Reg* %3754, i32 0, i32 0
  %PC.i1344 = bitcast %union.anon* %3755 to i64*
  %3756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3757 = getelementptr inbounds %struct.GPR, %struct.GPR* %3756, i32 0, i32 1
  %3758 = getelementptr inbounds %struct.Reg, %struct.Reg* %3757, i32 0, i32 0
  %EAX.i1345 = bitcast %union.anon* %3758 to i32*
  %3759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3760 = getelementptr inbounds %struct.GPR, %struct.GPR* %3759, i32 0, i32 15
  %3761 = getelementptr inbounds %struct.Reg, %struct.Reg* %3760, i32 0, i32 0
  %RBP.i1346 = bitcast %union.anon* %3761 to i64*
  %3762 = load i64, i64* %RBP.i1346
  %3763 = sub i64 %3762, 68
  %3764 = load i32, i32* %EAX.i1345
  %3765 = zext i32 %3764 to i64
  %3766 = load i64, i64* %PC.i1344
  %3767 = add i64 %3766, 3
  store i64 %3767, i64* %PC.i1344
  %3768 = inttoptr i64 %3763 to i32*
  store i32 %3764, i32* %3768
  store %struct.Memory* %loadMem_433a4f, %struct.Memory** %MEMORY
  %loadMem1_433a52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3770 = getelementptr inbounds %struct.GPR, %struct.GPR* %3769, i32 0, i32 33
  %3771 = getelementptr inbounds %struct.Reg, %struct.Reg* %3770, i32 0, i32 0
  %PC.i1343 = bitcast %union.anon* %3771 to i64*
  %3772 = load i64, i64* %PC.i1343
  %3773 = add i64 %3772, 19678
  %3774 = load i64, i64* %PC.i1343
  %3775 = add i64 %3774, 5
  %3776 = load i64, i64* %PC.i1343
  %3777 = add i64 %3776, 5
  store i64 %3777, i64* %PC.i1343
  %3778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3779 = load i64, i64* %3778, align 8
  %3780 = add i64 %3779, -8
  %3781 = inttoptr i64 %3780 to i64*
  store i64 %3775, i64* %3781
  store i64 %3780, i64* %3778, align 8
  %3782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3773, i64* %3782, align 8
  store %struct.Memory* %loadMem1_433a52, %struct.Memory** %MEMORY
  %loadMem2_433a52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433a52 = load i64, i64* %3
  %call2_433a52 = call %struct.Memory* @sub_438730.get_mem_DCcoeff(%struct.State* %0, i64 %loadPC_433a52, %struct.Memory* %loadMem2_433a52)
  store %struct.Memory* %call2_433a52, %struct.Memory** %MEMORY
  %loadMem_433a57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3784 = getelementptr inbounds %struct.GPR, %struct.GPR* %3783, i32 0, i32 33
  %3785 = getelementptr inbounds %struct.Reg, %struct.Reg* %3784, i32 0, i32 0
  %PC.i1341 = bitcast %union.anon* %3785 to i64*
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3787 = getelementptr inbounds %struct.GPR, %struct.GPR* %3786, i32 0, i32 11
  %3788 = getelementptr inbounds %struct.Reg, %struct.Reg* %3787, i32 0, i32 0
  %RDI.i1342 = bitcast %union.anon* %3788 to i64*
  %3789 = load i64, i64* %PC.i1341
  %3790 = add i64 %3789, 8
  store i64 %3790, i64* %PC.i1341
  %3791 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %3791, i64* %RDI.i1342, align 8
  store %struct.Memory* %loadMem_433a57, %struct.Memory** %MEMORY
  %loadMem_433a5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3793 = getelementptr inbounds %struct.GPR, %struct.GPR* %3792, i32 0, i32 33
  %3794 = getelementptr inbounds %struct.Reg, %struct.Reg* %3793, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %3794 to i64*
  %3795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3796 = getelementptr inbounds %struct.GPR, %struct.GPR* %3795, i32 0, i32 11
  %3797 = getelementptr inbounds %struct.Reg, %struct.Reg* %3796, i32 0, i32 0
  %RDI.i1340 = bitcast %union.anon* %3797 to i64*
  %3798 = load i64, i64* %RDI.i1340
  %3799 = add i64 %3798, 2884
  %3800 = load i64, i64* %PC.i1339
  %3801 = add i64 %3800, 7
  store i64 %3801, i64* %PC.i1339
  %3802 = inttoptr i64 %3799 to i32*
  %3803 = load i32, i32* %3802
  %3804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3804, align 1
  %3805 = and i32 %3803, 255
  %3806 = call i32 @llvm.ctpop.i32(i32 %3805)
  %3807 = trunc i32 %3806 to i8
  %3808 = and i8 %3807, 1
  %3809 = xor i8 %3808, 1
  %3810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3809, i8* %3810, align 1
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3811, align 1
  %3812 = icmp eq i32 %3803, 0
  %3813 = zext i1 %3812 to i8
  %3814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3813, i8* %3814, align 1
  %3815 = lshr i32 %3803, 31
  %3816 = trunc i32 %3815 to i8
  %3817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3816, i8* %3817, align 1
  %3818 = lshr i32 %3803, 31
  %3819 = xor i32 %3815, %3818
  %3820 = add i32 %3819, %3818
  %3821 = icmp eq i32 %3820, 2
  %3822 = zext i1 %3821 to i8
  %3823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3822, i8* %3823, align 1
  store %struct.Memory* %loadMem_433a5f, %struct.Memory** %MEMORY
  %loadMem_433a66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3825 = getelementptr inbounds %struct.GPR, %struct.GPR* %3824, i32 0, i32 33
  %3826 = getelementptr inbounds %struct.Reg, %struct.Reg* %3825, i32 0, i32 0
  %PC.i1336 = bitcast %union.anon* %3826 to i64*
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3828 = getelementptr inbounds %struct.GPR, %struct.GPR* %3827, i32 0, i32 1
  %3829 = getelementptr inbounds %struct.Reg, %struct.Reg* %3828, i32 0, i32 0
  %EAX.i1337 = bitcast %union.anon* %3829 to i32*
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3831 = getelementptr inbounds %struct.GPR, %struct.GPR* %3830, i32 0, i32 15
  %3832 = getelementptr inbounds %struct.Reg, %struct.Reg* %3831, i32 0, i32 0
  %RBP.i1338 = bitcast %union.anon* %3832 to i64*
  %3833 = load i64, i64* %RBP.i1338
  %3834 = sub i64 %3833, 72
  %3835 = load i32, i32* %EAX.i1337
  %3836 = zext i32 %3835 to i64
  %3837 = load i64, i64* %PC.i1336
  %3838 = add i64 %3837, 3
  store i64 %3838, i64* %PC.i1336
  %3839 = inttoptr i64 %3834 to i32*
  store i32 %3835, i32* %3839
  store %struct.Memory* %loadMem_433a66, %struct.Memory** %MEMORY
  %loadMem_433a69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3841 = getelementptr inbounds %struct.GPR, %struct.GPR* %3840, i32 0, i32 33
  %3842 = getelementptr inbounds %struct.Reg, %struct.Reg* %3841, i32 0, i32 0
  %PC.i1335 = bitcast %union.anon* %3842 to i64*
  %3843 = load i64, i64* %PC.i1335
  %3844 = add i64 %3843, 663
  %3845 = load i64, i64* %PC.i1335
  %3846 = add i64 %3845, 6
  %3847 = load i64, i64* %PC.i1335
  %3848 = add i64 %3847, 6
  store i64 %3848, i64* %PC.i1335
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3850 = load i8, i8* %3849, align 1
  store i8 %3850, i8* %BRANCH_TAKEN, align 1
  %3851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3852 = icmp ne i8 %3850, 0
  %3853 = select i1 %3852, i64 %3844, i64 %3846
  store i64 %3853, i64* %3851, align 8
  store %struct.Memory* %loadMem_433a69, %struct.Memory** %MEMORY
  %loadBr_433a69 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_433a69 = icmp eq i8 %loadBr_433a69, 1
  br i1 %cmpBr_433a69, label %block_.L_433d00, label %block_433a6f

block_433a6f:                                     ; preds = %block_.L_433a2a
  %loadMem_433a6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3855 = getelementptr inbounds %struct.GPR, %struct.GPR* %3854, i32 0, i32 33
  %3856 = getelementptr inbounds %struct.Reg, %struct.Reg* %3855, i32 0, i32 0
  %PC.i1333 = bitcast %union.anon* %3856 to i64*
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3858 = getelementptr inbounds %struct.GPR, %struct.GPR* %3857, i32 0, i32 1
  %3859 = getelementptr inbounds %struct.Reg, %struct.Reg* %3858, i32 0, i32 0
  %RAX.i1334 = bitcast %union.anon* %3859 to i64*
  %3860 = load i64, i64* %PC.i1333
  %3861 = add i64 %3860, 10
  store i64 %3861, i64* %PC.i1333
  store i64 ptrtoint (%G__0x710a60_type* @G__0x710a60 to i64), i64* %RAX.i1334, align 8
  store %struct.Memory* %loadMem_433a6f, %struct.Memory** %MEMORY
  %loadMem_433a79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3863 = getelementptr inbounds %struct.GPR, %struct.GPR* %3862, i32 0, i32 33
  %3864 = getelementptr inbounds %struct.Reg, %struct.Reg* %3863, i32 0, i32 0
  %PC.i1331 = bitcast %union.anon* %3864 to i64*
  %3865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3866 = getelementptr inbounds %struct.GPR, %struct.GPR* %3865, i32 0, i32 1
  %3867 = getelementptr inbounds %struct.Reg, %struct.Reg* %3866, i32 0, i32 0
  %RAX.i1332 = bitcast %union.anon* %3867 to i64*
  %3868 = load i64, i64* %RAX.i1332
  %3869 = load i64, i64* %PC.i1331
  %3870 = add i64 %3869, 6
  store i64 %3870, i64* %PC.i1331
  %3871 = add i64 3232, %3868
  store i64 %3871, i64* %RAX.i1332, align 8
  %3872 = icmp ult i64 %3871, %3868
  %3873 = icmp ult i64 %3871, 3232
  %3874 = or i1 %3872, %3873
  %3875 = zext i1 %3874 to i8
  %3876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3875, i8* %3876, align 1
  %3877 = trunc i64 %3871 to i32
  %3878 = and i32 %3877, 255
  %3879 = call i32 @llvm.ctpop.i32(i32 %3878)
  %3880 = trunc i32 %3879 to i8
  %3881 = and i8 %3880, 1
  %3882 = xor i8 %3881, 1
  %3883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3882, i8* %3883, align 1
  %3884 = xor i64 3232, %3868
  %3885 = xor i64 %3884, %3871
  %3886 = lshr i64 %3885, 4
  %3887 = trunc i64 %3886 to i8
  %3888 = and i8 %3887, 1
  %3889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3888, i8* %3889, align 1
  %3890 = icmp eq i64 %3871, 0
  %3891 = zext i1 %3890 to i8
  %3892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3891, i8* %3892, align 1
  %3893 = lshr i64 %3871, 63
  %3894 = trunc i64 %3893 to i8
  %3895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3894, i8* %3895, align 1
  %3896 = lshr i64 %3868, 63
  %3897 = xor i64 %3893, %3896
  %3898 = add i64 %3897, %3893
  %3899 = icmp eq i64 %3898, 2
  %3900 = zext i1 %3899 to i8
  %3901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3900, i8* %3901, align 1
  store %struct.Memory* %loadMem_433a79, %struct.Memory** %MEMORY
  %loadMem_433a7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3903 = getelementptr inbounds %struct.GPR, %struct.GPR* %3902, i32 0, i32 33
  %3904 = getelementptr inbounds %struct.Reg, %struct.Reg* %3903, i32 0, i32 0
  %PC.i1328 = bitcast %union.anon* %3904 to i64*
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3906 = getelementptr inbounds %struct.GPR, %struct.GPR* %3905, i32 0, i32 1
  %3907 = getelementptr inbounds %struct.Reg, %struct.Reg* %3906, i32 0, i32 0
  %RAX.i1329 = bitcast %union.anon* %3907 to i64*
  %3908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3909 = getelementptr inbounds %struct.GPR, %struct.GPR* %3908, i32 0, i32 11
  %3910 = getelementptr inbounds %struct.Reg, %struct.Reg* %3909, i32 0, i32 0
  %RDI.i1330 = bitcast %union.anon* %3910 to i64*
  %3911 = load i64, i64* %RAX.i1329
  %3912 = load i64, i64* %PC.i1328
  %3913 = add i64 %3912, 3
  store i64 %3913, i64* %PC.i1328
  store i64 %3911, i64* %RDI.i1330, align 8
  store %struct.Memory* %loadMem_433a7f, %struct.Memory** %MEMORY
  %loadMem1_433a82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3915 = getelementptr inbounds %struct.GPR, %struct.GPR* %3914, i32 0, i32 33
  %3916 = getelementptr inbounds %struct.Reg, %struct.Reg* %3915, i32 0, i32 0
  %PC.i1327 = bitcast %union.anon* %3916 to i64*
  %3917 = load i64, i64* %PC.i1327
  %3918 = add i64 %3917, 18526
  %3919 = load i64, i64* %PC.i1327
  %3920 = add i64 %3919, 5
  %3921 = load i64, i64* %PC.i1327
  %3922 = add i64 %3921, 5
  store i64 %3922, i64* %PC.i1327
  %3923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3924 = load i64, i64* %3923, align 8
  %3925 = add i64 %3924, -8
  %3926 = inttoptr i64 %3925 to i64*
  store i64 %3920, i64* %3926
  store i64 %3925, i64* %3923, align 8
  %3927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3918, i64* %3927, align 8
  store %struct.Memory* %loadMem1_433a82, %struct.Memory** %MEMORY
  %loadMem2_433a82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433a82 = load i64, i64* %3
  %call2_433a82 = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433a82, %struct.Memory* %loadMem2_433a82)
  store %struct.Memory* %call2_433a82, %struct.Memory** %MEMORY
  %loadMem_433a87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3929 = getelementptr inbounds %struct.GPR, %struct.GPR* %3928, i32 0, i32 33
  %3930 = getelementptr inbounds %struct.Reg, %struct.Reg* %3929, i32 0, i32 0
  %PC.i1325 = bitcast %union.anon* %3930 to i64*
  %3931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3932 = getelementptr inbounds %struct.GPR, %struct.GPR* %3931, i32 0, i32 11
  %3933 = getelementptr inbounds %struct.Reg, %struct.Reg* %3932, i32 0, i32 0
  %RDI.i1326 = bitcast %union.anon* %3933 to i64*
  %3934 = load i64, i64* %PC.i1325
  %3935 = add i64 %3934, 10
  store i64 %3935, i64* %PC.i1325
  store i64 ptrtoint (%G__0x710a60_type* @G__0x710a60 to i64), i64* %RDI.i1326, align 8
  store %struct.Memory* %loadMem_433a87, %struct.Memory** %MEMORY
  %loadMem_433a91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3937 = getelementptr inbounds %struct.GPR, %struct.GPR* %3936, i32 0, i32 33
  %3938 = getelementptr inbounds %struct.Reg, %struct.Reg* %3937, i32 0, i32 0
  %PC.i1323 = bitcast %union.anon* %3938 to i64*
  %3939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3940 = getelementptr inbounds %struct.GPR, %struct.GPR* %3939, i32 0, i32 11
  %3941 = getelementptr inbounds %struct.Reg, %struct.Reg* %3940, i32 0, i32 0
  %RDI.i1324 = bitcast %union.anon* %3941 to i64*
  %3942 = load i64, i64* %RDI.i1324
  %3943 = load i64, i64* %PC.i1323
  %3944 = add i64 %3943, 7
  store i64 %3944, i64* %PC.i1323
  %3945 = add i64 3240, %3942
  store i64 %3945, i64* %RDI.i1324, align 8
  %3946 = icmp ult i64 %3945, %3942
  %3947 = icmp ult i64 %3945, 3240
  %3948 = or i1 %3946, %3947
  %3949 = zext i1 %3948 to i8
  %3950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3949, i8* %3950, align 1
  %3951 = trunc i64 %3945 to i32
  %3952 = and i32 %3951, 255
  %3953 = call i32 @llvm.ctpop.i32(i32 %3952)
  %3954 = trunc i32 %3953 to i8
  %3955 = and i8 %3954, 1
  %3956 = xor i8 %3955, 1
  %3957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3956, i8* %3957, align 1
  %3958 = xor i64 3240, %3942
  %3959 = xor i64 %3958, %3945
  %3960 = lshr i64 %3959, 4
  %3961 = trunc i64 %3960 to i8
  %3962 = and i8 %3961, 1
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3962, i8* %3963, align 1
  %3964 = icmp eq i64 %3945, 0
  %3965 = zext i1 %3964 to i8
  %3966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3965, i8* %3966, align 1
  %3967 = lshr i64 %3945, 63
  %3968 = trunc i64 %3967 to i8
  %3969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3968, i8* %3969, align 1
  %3970 = lshr i64 %3942, 63
  %3971 = xor i64 %3967, %3970
  %3972 = add i64 %3971, %3967
  %3973 = icmp eq i64 %3972, 2
  %3974 = zext i1 %3973 to i8
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3974, i8* %3975, align 1
  store %struct.Memory* %loadMem_433a91, %struct.Memory** %MEMORY
  %loadMem_433a98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3977 = getelementptr inbounds %struct.GPR, %struct.GPR* %3976, i32 0, i32 33
  %3978 = getelementptr inbounds %struct.Reg, %struct.Reg* %3977, i32 0, i32 0
  %PC.i1320 = bitcast %union.anon* %3978 to i64*
  %3979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3980 = getelementptr inbounds %struct.GPR, %struct.GPR* %3979, i32 0, i32 1
  %3981 = getelementptr inbounds %struct.Reg, %struct.Reg* %3980, i32 0, i32 0
  %EAX.i1321 = bitcast %union.anon* %3981 to i32*
  %3982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3983 = getelementptr inbounds %struct.GPR, %struct.GPR* %3982, i32 0, i32 15
  %3984 = getelementptr inbounds %struct.Reg, %struct.Reg* %3983, i32 0, i32 0
  %RBP.i1322 = bitcast %union.anon* %3984 to i64*
  %3985 = load i64, i64* %RBP.i1322
  %3986 = sub i64 %3985, 76
  %3987 = load i32, i32* %EAX.i1321
  %3988 = zext i32 %3987 to i64
  %3989 = load i64, i64* %PC.i1320
  %3990 = add i64 %3989, 3
  store i64 %3990, i64* %PC.i1320
  %3991 = inttoptr i64 %3986 to i32*
  store i32 %3987, i32* %3991
  store %struct.Memory* %loadMem_433a98, %struct.Memory** %MEMORY
  %loadMem1_433a9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3993 = getelementptr inbounds %struct.GPR, %struct.GPR* %3992, i32 0, i32 33
  %3994 = getelementptr inbounds %struct.Reg, %struct.Reg* %3993, i32 0, i32 0
  %PC.i1319 = bitcast %union.anon* %3994 to i64*
  %3995 = load i64, i64* %PC.i1319
  %3996 = add i64 %3995, 18501
  %3997 = load i64, i64* %PC.i1319
  %3998 = add i64 %3997, 5
  %3999 = load i64, i64* %PC.i1319
  %4000 = add i64 %3999, 5
  store i64 %4000, i64* %PC.i1319
  %4001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4002 = load i64, i64* %4001, align 8
  %4003 = add i64 %4002, -8
  %4004 = inttoptr i64 %4003 to i64*
  store i64 %3998, i64* %4004
  store i64 %4003, i64* %4001, align 8
  %4005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3996, i64* %4005, align 8
  store %struct.Memory* %loadMem1_433a9b, %struct.Memory** %MEMORY
  %loadMem2_433a9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433a9b = load i64, i64* %3
  %call2_433a9b = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433a9b, %struct.Memory* %loadMem2_433a9b)
  store %struct.Memory* %call2_433a9b, %struct.Memory** %MEMORY
  %loadMem_433aa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4007 = getelementptr inbounds %struct.GPR, %struct.GPR* %4006, i32 0, i32 33
  %4008 = getelementptr inbounds %struct.Reg, %struct.Reg* %4007, i32 0, i32 0
  %PC.i1317 = bitcast %union.anon* %4008 to i64*
  %4009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4010 = getelementptr inbounds %struct.GPR, %struct.GPR* %4009, i32 0, i32 11
  %4011 = getelementptr inbounds %struct.Reg, %struct.Reg* %4010, i32 0, i32 0
  %RDI.i1318 = bitcast %union.anon* %4011 to i64*
  %4012 = load i64, i64* %PC.i1317
  %4013 = add i64 %4012, 10
  store i64 %4013, i64* %PC.i1317
  store i64 ptrtoint (%G__0x6cd878_type* @G__0x6cd878 to i64), i64* %RDI.i1318, align 8
  store %struct.Memory* %loadMem_433aa0, %struct.Memory** %MEMORY
  %loadMem_433aaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4015 = getelementptr inbounds %struct.GPR, %struct.GPR* %4014, i32 0, i32 33
  %4016 = getelementptr inbounds %struct.Reg, %struct.Reg* %4015, i32 0, i32 0
  %PC.i1315 = bitcast %union.anon* %4016 to i64*
  %4017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4018 = getelementptr inbounds %struct.GPR, %struct.GPR* %4017, i32 0, i32 11
  %4019 = getelementptr inbounds %struct.Reg, %struct.Reg* %4018, i32 0, i32 0
  %RDI.i1316 = bitcast %union.anon* %4019 to i64*
  %4020 = load i64, i64* %RDI.i1316
  %4021 = load i64, i64* %PC.i1315
  %4022 = add i64 %4021, 7
  store i64 %4022, i64* %PC.i1315
  %4023 = add i64 3232, %4020
  store i64 %4023, i64* %RDI.i1316, align 8
  %4024 = icmp ult i64 %4023, %4020
  %4025 = icmp ult i64 %4023, 3232
  %4026 = or i1 %4024, %4025
  %4027 = zext i1 %4026 to i8
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4027, i8* %4028, align 1
  %4029 = trunc i64 %4023 to i32
  %4030 = and i32 %4029, 255
  %4031 = call i32 @llvm.ctpop.i32(i32 %4030)
  %4032 = trunc i32 %4031 to i8
  %4033 = and i8 %4032, 1
  %4034 = xor i8 %4033, 1
  %4035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4034, i8* %4035, align 1
  %4036 = xor i64 3232, %4020
  %4037 = xor i64 %4036, %4023
  %4038 = lshr i64 %4037, 4
  %4039 = trunc i64 %4038 to i8
  %4040 = and i8 %4039, 1
  %4041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4040, i8* %4041, align 1
  %4042 = icmp eq i64 %4023, 0
  %4043 = zext i1 %4042 to i8
  %4044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4043, i8* %4044, align 1
  %4045 = lshr i64 %4023, 63
  %4046 = trunc i64 %4045 to i8
  %4047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4046, i8* %4047, align 1
  %4048 = lshr i64 %4020, 63
  %4049 = xor i64 %4045, %4048
  %4050 = add i64 %4049, %4045
  %4051 = icmp eq i64 %4050, 2
  %4052 = zext i1 %4051 to i8
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4052, i8* %4053, align 1
  store %struct.Memory* %loadMem_433aaa, %struct.Memory** %MEMORY
  %loadMem_433ab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4055 = getelementptr inbounds %struct.GPR, %struct.GPR* %4054, i32 0, i32 33
  %4056 = getelementptr inbounds %struct.Reg, %struct.Reg* %4055, i32 0, i32 0
  %PC.i1312 = bitcast %union.anon* %4056 to i64*
  %4057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4058 = getelementptr inbounds %struct.GPR, %struct.GPR* %4057, i32 0, i32 1
  %4059 = getelementptr inbounds %struct.Reg, %struct.Reg* %4058, i32 0, i32 0
  %EAX.i1313 = bitcast %union.anon* %4059 to i32*
  %4060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4061 = getelementptr inbounds %struct.GPR, %struct.GPR* %4060, i32 0, i32 15
  %4062 = getelementptr inbounds %struct.Reg, %struct.Reg* %4061, i32 0, i32 0
  %RBP.i1314 = bitcast %union.anon* %4062 to i64*
  %4063 = load i64, i64* %RBP.i1314
  %4064 = sub i64 %4063, 80
  %4065 = load i32, i32* %EAX.i1313
  %4066 = zext i32 %4065 to i64
  %4067 = load i64, i64* %PC.i1312
  %4068 = add i64 %4067, 3
  store i64 %4068, i64* %PC.i1312
  %4069 = inttoptr i64 %4064 to i32*
  store i32 %4065, i32* %4069
  store %struct.Memory* %loadMem_433ab1, %struct.Memory** %MEMORY
  %loadMem1_433ab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4071 = getelementptr inbounds %struct.GPR, %struct.GPR* %4070, i32 0, i32 33
  %4072 = getelementptr inbounds %struct.Reg, %struct.Reg* %4071, i32 0, i32 0
  %PC.i1311 = bitcast %union.anon* %4072 to i64*
  %4073 = load i64, i64* %PC.i1311
  %4074 = add i64 %4073, 18476
  %4075 = load i64, i64* %PC.i1311
  %4076 = add i64 %4075, 5
  %4077 = load i64, i64* %PC.i1311
  %4078 = add i64 %4077, 5
  store i64 %4078, i64* %PC.i1311
  %4079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4080 = load i64, i64* %4079, align 8
  %4081 = add i64 %4080, -8
  %4082 = inttoptr i64 %4081 to i64*
  store i64 %4076, i64* %4082
  store i64 %4081, i64* %4079, align 8
  %4083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4074, i64* %4083, align 8
  store %struct.Memory* %loadMem1_433ab4, %struct.Memory** %MEMORY
  %loadMem2_433ab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433ab4 = load i64, i64* %3
  %call2_433ab4 = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433ab4, %struct.Memory* %loadMem2_433ab4)
  store %struct.Memory* %call2_433ab4, %struct.Memory** %MEMORY
  %loadMem_433ab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4085 = getelementptr inbounds %struct.GPR, %struct.GPR* %4084, i32 0, i32 33
  %4086 = getelementptr inbounds %struct.Reg, %struct.Reg* %4085, i32 0, i32 0
  %PC.i1309 = bitcast %union.anon* %4086 to i64*
  %4087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4088 = getelementptr inbounds %struct.GPR, %struct.GPR* %4087, i32 0, i32 11
  %4089 = getelementptr inbounds %struct.Reg, %struct.Reg* %4088, i32 0, i32 0
  %RDI.i1310 = bitcast %union.anon* %4089 to i64*
  %4090 = load i64, i64* %PC.i1309
  %4091 = add i64 %4090, 10
  store i64 %4091, i64* %PC.i1309
  store i64 ptrtoint (%G__0x6cd878_type* @G__0x6cd878 to i64), i64* %RDI.i1310, align 8
  store %struct.Memory* %loadMem_433ab9, %struct.Memory** %MEMORY
  %loadMem_433ac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4093 = getelementptr inbounds %struct.GPR, %struct.GPR* %4092, i32 0, i32 33
  %4094 = getelementptr inbounds %struct.Reg, %struct.Reg* %4093, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %4094 to i64*
  %4095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4096 = getelementptr inbounds %struct.GPR, %struct.GPR* %4095, i32 0, i32 11
  %4097 = getelementptr inbounds %struct.Reg, %struct.Reg* %4096, i32 0, i32 0
  %RDI.i1308 = bitcast %union.anon* %4097 to i64*
  %4098 = load i64, i64* %RDI.i1308
  %4099 = load i64, i64* %PC.i1307
  %4100 = add i64 %4099, 7
  store i64 %4100, i64* %PC.i1307
  %4101 = add i64 3240, %4098
  store i64 %4101, i64* %RDI.i1308, align 8
  %4102 = icmp ult i64 %4101, %4098
  %4103 = icmp ult i64 %4101, 3240
  %4104 = or i1 %4102, %4103
  %4105 = zext i1 %4104 to i8
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4105, i8* %4106, align 1
  %4107 = trunc i64 %4101 to i32
  %4108 = and i32 %4107, 255
  %4109 = call i32 @llvm.ctpop.i32(i32 %4108)
  %4110 = trunc i32 %4109 to i8
  %4111 = and i8 %4110, 1
  %4112 = xor i8 %4111, 1
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4112, i8* %4113, align 1
  %4114 = xor i64 3240, %4098
  %4115 = xor i64 %4114, %4101
  %4116 = lshr i64 %4115, 4
  %4117 = trunc i64 %4116 to i8
  %4118 = and i8 %4117, 1
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4118, i8* %4119, align 1
  %4120 = icmp eq i64 %4101, 0
  %4121 = zext i1 %4120 to i8
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4121, i8* %4122, align 1
  %4123 = lshr i64 %4101, 63
  %4124 = trunc i64 %4123 to i8
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4124, i8* %4125, align 1
  %4126 = lshr i64 %4098, 63
  %4127 = xor i64 %4123, %4126
  %4128 = add i64 %4127, %4123
  %4129 = icmp eq i64 %4128, 2
  %4130 = zext i1 %4129 to i8
  %4131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4130, i8* %4131, align 1
  store %struct.Memory* %loadMem_433ac3, %struct.Memory** %MEMORY
  %loadMem_433aca = load %struct.Memory*, %struct.Memory** %MEMORY
  %4132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4133 = getelementptr inbounds %struct.GPR, %struct.GPR* %4132, i32 0, i32 33
  %4134 = getelementptr inbounds %struct.Reg, %struct.Reg* %4133, i32 0, i32 0
  %PC.i1304 = bitcast %union.anon* %4134 to i64*
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4136 = getelementptr inbounds %struct.GPR, %struct.GPR* %4135, i32 0, i32 1
  %4137 = getelementptr inbounds %struct.Reg, %struct.Reg* %4136, i32 0, i32 0
  %EAX.i1305 = bitcast %union.anon* %4137 to i32*
  %4138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4139 = getelementptr inbounds %struct.GPR, %struct.GPR* %4138, i32 0, i32 15
  %4140 = getelementptr inbounds %struct.Reg, %struct.Reg* %4139, i32 0, i32 0
  %RBP.i1306 = bitcast %union.anon* %4140 to i64*
  %4141 = load i64, i64* %RBP.i1306
  %4142 = sub i64 %4141, 84
  %4143 = load i32, i32* %EAX.i1305
  %4144 = zext i32 %4143 to i64
  %4145 = load i64, i64* %PC.i1304
  %4146 = add i64 %4145, 3
  store i64 %4146, i64* %PC.i1304
  %4147 = inttoptr i64 %4142 to i32*
  store i32 %4143, i32* %4147
  store %struct.Memory* %loadMem_433aca, %struct.Memory** %MEMORY
  %loadMem1_433acd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4149 = getelementptr inbounds %struct.GPR, %struct.GPR* %4148, i32 0, i32 33
  %4150 = getelementptr inbounds %struct.Reg, %struct.Reg* %4149, i32 0, i32 0
  %PC.i1303 = bitcast %union.anon* %4150 to i64*
  %4151 = load i64, i64* %PC.i1303
  %4152 = add i64 %4151, 18451
  %4153 = load i64, i64* %PC.i1303
  %4154 = add i64 %4153, 5
  %4155 = load i64, i64* %PC.i1303
  %4156 = add i64 %4155, 5
  store i64 %4156, i64* %PC.i1303
  %4157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4158 = load i64, i64* %4157, align 8
  %4159 = add i64 %4158, -8
  %4160 = inttoptr i64 %4159 to i64*
  store i64 %4154, i64* %4160
  store i64 %4159, i64* %4157, align 8
  %4161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4152, i64* %4161, align 8
  store %struct.Memory* %loadMem1_433acd, %struct.Memory** %MEMORY
  %loadMem2_433acd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433acd = load i64, i64* %3
  %call2_433acd = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433acd, %struct.Memory* %loadMem2_433acd)
  store %struct.Memory* %call2_433acd, %struct.Memory** %MEMORY
  %loadMem_433ad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4163 = getelementptr inbounds %struct.GPR, %struct.GPR* %4162, i32 0, i32 33
  %4164 = getelementptr inbounds %struct.Reg, %struct.Reg* %4163, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %4164 to i64*
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4166 = getelementptr inbounds %struct.GPR, %struct.GPR* %4165, i32 0, i32 11
  %4167 = getelementptr inbounds %struct.Reg, %struct.Reg* %4166, i32 0, i32 0
  %RDI.i1302 = bitcast %union.anon* %4167 to i64*
  %4168 = load i64, i64* %PC.i1301
  %4169 = add i64 %4168, 10
  store i64 %4169, i64* %PC.i1301
  store i64 ptrtoint (%G__0x6d2198_type* @G__0x6d2198 to i64), i64* %RDI.i1302, align 8
  store %struct.Memory* %loadMem_433ad2, %struct.Memory** %MEMORY
  %loadMem_433adc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4171 = getelementptr inbounds %struct.GPR, %struct.GPR* %4170, i32 0, i32 33
  %4172 = getelementptr inbounds %struct.Reg, %struct.Reg* %4171, i32 0, i32 0
  %PC.i1299 = bitcast %union.anon* %4172 to i64*
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4174 = getelementptr inbounds %struct.GPR, %struct.GPR* %4173, i32 0, i32 11
  %4175 = getelementptr inbounds %struct.Reg, %struct.Reg* %4174, i32 0, i32 0
  %RDI.i1300 = bitcast %union.anon* %4175 to i64*
  %4176 = load i64, i64* %RDI.i1300
  %4177 = load i64, i64* %PC.i1299
  %4178 = add i64 %4177, 7
  store i64 %4178, i64* %PC.i1299
  %4179 = add i64 3232, %4176
  store i64 %4179, i64* %RDI.i1300, align 8
  %4180 = icmp ult i64 %4179, %4176
  %4181 = icmp ult i64 %4179, 3232
  %4182 = or i1 %4180, %4181
  %4183 = zext i1 %4182 to i8
  %4184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4183, i8* %4184, align 1
  %4185 = trunc i64 %4179 to i32
  %4186 = and i32 %4185, 255
  %4187 = call i32 @llvm.ctpop.i32(i32 %4186)
  %4188 = trunc i32 %4187 to i8
  %4189 = and i8 %4188, 1
  %4190 = xor i8 %4189, 1
  %4191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4190, i8* %4191, align 1
  %4192 = xor i64 3232, %4176
  %4193 = xor i64 %4192, %4179
  %4194 = lshr i64 %4193, 4
  %4195 = trunc i64 %4194 to i8
  %4196 = and i8 %4195, 1
  %4197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4196, i8* %4197, align 1
  %4198 = icmp eq i64 %4179, 0
  %4199 = zext i1 %4198 to i8
  %4200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4199, i8* %4200, align 1
  %4201 = lshr i64 %4179, 63
  %4202 = trunc i64 %4201 to i8
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4202, i8* %4203, align 1
  %4204 = lshr i64 %4176, 63
  %4205 = xor i64 %4201, %4204
  %4206 = add i64 %4205, %4201
  %4207 = icmp eq i64 %4206, 2
  %4208 = zext i1 %4207 to i8
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4208, i8* %4209, align 1
  store %struct.Memory* %loadMem_433adc, %struct.Memory** %MEMORY
  %loadMem_433ae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4211 = getelementptr inbounds %struct.GPR, %struct.GPR* %4210, i32 0, i32 33
  %4212 = getelementptr inbounds %struct.Reg, %struct.Reg* %4211, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %4212 to i64*
  %4213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4214 = getelementptr inbounds %struct.GPR, %struct.GPR* %4213, i32 0, i32 1
  %4215 = getelementptr inbounds %struct.Reg, %struct.Reg* %4214, i32 0, i32 0
  %EAX.i1297 = bitcast %union.anon* %4215 to i32*
  %4216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4217 = getelementptr inbounds %struct.GPR, %struct.GPR* %4216, i32 0, i32 15
  %4218 = getelementptr inbounds %struct.Reg, %struct.Reg* %4217, i32 0, i32 0
  %RBP.i1298 = bitcast %union.anon* %4218 to i64*
  %4219 = load i64, i64* %RBP.i1298
  %4220 = sub i64 %4219, 88
  %4221 = load i32, i32* %EAX.i1297
  %4222 = zext i32 %4221 to i64
  %4223 = load i64, i64* %PC.i1296
  %4224 = add i64 %4223, 3
  store i64 %4224, i64* %PC.i1296
  %4225 = inttoptr i64 %4220 to i32*
  store i32 %4221, i32* %4225
  store %struct.Memory* %loadMem_433ae3, %struct.Memory** %MEMORY
  %loadMem1_433ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4227 = getelementptr inbounds %struct.GPR, %struct.GPR* %4226, i32 0, i32 33
  %4228 = getelementptr inbounds %struct.Reg, %struct.Reg* %4227, i32 0, i32 0
  %PC.i1295 = bitcast %union.anon* %4228 to i64*
  %4229 = load i64, i64* %PC.i1295
  %4230 = add i64 %4229, 18426
  %4231 = load i64, i64* %PC.i1295
  %4232 = add i64 %4231, 5
  %4233 = load i64, i64* %PC.i1295
  %4234 = add i64 %4233, 5
  store i64 %4234, i64* %PC.i1295
  %4235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4236 = load i64, i64* %4235, align 8
  %4237 = add i64 %4236, -8
  %4238 = inttoptr i64 %4237 to i64*
  store i64 %4232, i64* %4238
  store i64 %4237, i64* %4235, align 8
  %4239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4230, i64* %4239, align 8
  store %struct.Memory* %loadMem1_433ae6, %struct.Memory** %MEMORY
  %loadMem2_433ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433ae6 = load i64, i64* %3
  %call2_433ae6 = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433ae6, %struct.Memory* %loadMem2_433ae6)
  store %struct.Memory* %call2_433ae6, %struct.Memory** %MEMORY
  %loadMem_433aeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4241 = getelementptr inbounds %struct.GPR, %struct.GPR* %4240, i32 0, i32 33
  %4242 = getelementptr inbounds %struct.Reg, %struct.Reg* %4241, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %4242 to i64*
  %4243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4244 = getelementptr inbounds %struct.GPR, %struct.GPR* %4243, i32 0, i32 11
  %4245 = getelementptr inbounds %struct.Reg, %struct.Reg* %4244, i32 0, i32 0
  %RDI.i1294 = bitcast %union.anon* %4245 to i64*
  %4246 = load i64, i64* %PC.i1293
  %4247 = add i64 %4246, 10
  store i64 %4247, i64* %PC.i1293
  store i64 ptrtoint (%G__0x6d2198_type* @G__0x6d2198 to i64), i64* %RDI.i1294, align 8
  store %struct.Memory* %loadMem_433aeb, %struct.Memory** %MEMORY
  %loadMem_433af5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4249 = getelementptr inbounds %struct.GPR, %struct.GPR* %4248, i32 0, i32 33
  %4250 = getelementptr inbounds %struct.Reg, %struct.Reg* %4249, i32 0, i32 0
  %PC.i1291 = bitcast %union.anon* %4250 to i64*
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4252 = getelementptr inbounds %struct.GPR, %struct.GPR* %4251, i32 0, i32 11
  %4253 = getelementptr inbounds %struct.Reg, %struct.Reg* %4252, i32 0, i32 0
  %RDI.i1292 = bitcast %union.anon* %4253 to i64*
  %4254 = load i64, i64* %RDI.i1292
  %4255 = load i64, i64* %PC.i1291
  %4256 = add i64 %4255, 7
  store i64 %4256, i64* %PC.i1291
  %4257 = add i64 3240, %4254
  store i64 %4257, i64* %RDI.i1292, align 8
  %4258 = icmp ult i64 %4257, %4254
  %4259 = icmp ult i64 %4257, 3240
  %4260 = or i1 %4258, %4259
  %4261 = zext i1 %4260 to i8
  %4262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4261, i8* %4262, align 1
  %4263 = trunc i64 %4257 to i32
  %4264 = and i32 %4263, 255
  %4265 = call i32 @llvm.ctpop.i32(i32 %4264)
  %4266 = trunc i32 %4265 to i8
  %4267 = and i8 %4266, 1
  %4268 = xor i8 %4267, 1
  %4269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4268, i8* %4269, align 1
  %4270 = xor i64 3240, %4254
  %4271 = xor i64 %4270, %4257
  %4272 = lshr i64 %4271, 4
  %4273 = trunc i64 %4272 to i8
  %4274 = and i8 %4273, 1
  %4275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4274, i8* %4275, align 1
  %4276 = icmp eq i64 %4257, 0
  %4277 = zext i1 %4276 to i8
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4277, i8* %4278, align 1
  %4279 = lshr i64 %4257, 63
  %4280 = trunc i64 %4279 to i8
  %4281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4280, i8* %4281, align 1
  %4282 = lshr i64 %4254, 63
  %4283 = xor i64 %4279, %4282
  %4284 = add i64 %4283, %4279
  %4285 = icmp eq i64 %4284, 2
  %4286 = zext i1 %4285 to i8
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4286, i8* %4287, align 1
  store %struct.Memory* %loadMem_433af5, %struct.Memory** %MEMORY
  %loadMem_433afc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4289 = getelementptr inbounds %struct.GPR, %struct.GPR* %4288, i32 0, i32 33
  %4290 = getelementptr inbounds %struct.Reg, %struct.Reg* %4289, i32 0, i32 0
  %PC.i1288 = bitcast %union.anon* %4290 to i64*
  %4291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4292 = getelementptr inbounds %struct.GPR, %struct.GPR* %4291, i32 0, i32 1
  %4293 = getelementptr inbounds %struct.Reg, %struct.Reg* %4292, i32 0, i32 0
  %EAX.i1289 = bitcast %union.anon* %4293 to i32*
  %4294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4295 = getelementptr inbounds %struct.GPR, %struct.GPR* %4294, i32 0, i32 15
  %4296 = getelementptr inbounds %struct.Reg, %struct.Reg* %4295, i32 0, i32 0
  %RBP.i1290 = bitcast %union.anon* %4296 to i64*
  %4297 = load i64, i64* %RBP.i1290
  %4298 = sub i64 %4297, 92
  %4299 = load i32, i32* %EAX.i1289
  %4300 = zext i32 %4299 to i64
  %4301 = load i64, i64* %PC.i1288
  %4302 = add i64 %4301, 3
  store i64 %4302, i64* %PC.i1288
  %4303 = inttoptr i64 %4298 to i32*
  store i32 %4299, i32* %4303
  store %struct.Memory* %loadMem_433afc, %struct.Memory** %MEMORY
  %loadMem1_433aff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4305 = getelementptr inbounds %struct.GPR, %struct.GPR* %4304, i32 0, i32 33
  %4306 = getelementptr inbounds %struct.Reg, %struct.Reg* %4305, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %4306 to i64*
  %4307 = load i64, i64* %PC.i1287
  %4308 = add i64 %4307, 18401
  %4309 = load i64, i64* %PC.i1287
  %4310 = add i64 %4309, 5
  %4311 = load i64, i64* %PC.i1287
  %4312 = add i64 %4311, 5
  store i64 %4312, i64* %PC.i1287
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4314 = load i64, i64* %4313, align 8
  %4315 = add i64 %4314, -8
  %4316 = inttoptr i64 %4315 to i64*
  store i64 %4310, i64* %4316
  store i64 %4315, i64* %4313, align 8
  %4317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4308, i64* %4317, align 8
  store %struct.Memory* %loadMem1_433aff, %struct.Memory** %MEMORY
  %loadMem2_433aff = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433aff = load i64, i64* %3
  %call2_433aff = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433aff, %struct.Memory* %loadMem2_433aff)
  store %struct.Memory* %call2_433aff, %struct.Memory** %MEMORY
  %loadMem_433b04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4319 = getelementptr inbounds %struct.GPR, %struct.GPR* %4318, i32 0, i32 33
  %4320 = getelementptr inbounds %struct.Reg, %struct.Reg* %4319, i32 0, i32 0
  %PC.i1285 = bitcast %union.anon* %4320 to i64*
  %4321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4322 = getelementptr inbounds %struct.GPR, %struct.GPR* %4321, i32 0, i32 11
  %4323 = getelementptr inbounds %struct.Reg, %struct.Reg* %4322, i32 0, i32 0
  %RDI.i1286 = bitcast %union.anon* %4323 to i64*
  %4324 = load i64, i64* %PC.i1285
  %4325 = add i64 %4324, 10
  store i64 %4325, i64* %PC.i1285
  store i64 ptrtoint (%G__0x721e00_type* @G__0x721e00 to i64), i64* %RDI.i1286, align 8
  store %struct.Memory* %loadMem_433b04, %struct.Memory** %MEMORY
  %loadMem_433b0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4327 = getelementptr inbounds %struct.GPR, %struct.GPR* %4326, i32 0, i32 33
  %4328 = getelementptr inbounds %struct.Reg, %struct.Reg* %4327, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %4328 to i64*
  %4329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4330 = getelementptr inbounds %struct.GPR, %struct.GPR* %4329, i32 0, i32 11
  %4331 = getelementptr inbounds %struct.Reg, %struct.Reg* %4330, i32 0, i32 0
  %RDI.i1284 = bitcast %union.anon* %4331 to i64*
  %4332 = load i64, i64* %RDI.i1284
  %4333 = load i64, i64* %PC.i1283
  %4334 = add i64 %4333, 7
  store i64 %4334, i64* %PC.i1283
  %4335 = add i64 3232, %4332
  store i64 %4335, i64* %RDI.i1284, align 8
  %4336 = icmp ult i64 %4335, %4332
  %4337 = icmp ult i64 %4335, 3232
  %4338 = or i1 %4336, %4337
  %4339 = zext i1 %4338 to i8
  %4340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4339, i8* %4340, align 1
  %4341 = trunc i64 %4335 to i32
  %4342 = and i32 %4341, 255
  %4343 = call i32 @llvm.ctpop.i32(i32 %4342)
  %4344 = trunc i32 %4343 to i8
  %4345 = and i8 %4344, 1
  %4346 = xor i8 %4345, 1
  %4347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4346, i8* %4347, align 1
  %4348 = xor i64 3232, %4332
  %4349 = xor i64 %4348, %4335
  %4350 = lshr i64 %4349, 4
  %4351 = trunc i64 %4350 to i8
  %4352 = and i8 %4351, 1
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4352, i8* %4353, align 1
  %4354 = icmp eq i64 %4335, 0
  %4355 = zext i1 %4354 to i8
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4355, i8* %4356, align 1
  %4357 = lshr i64 %4335, 63
  %4358 = trunc i64 %4357 to i8
  %4359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4358, i8* %4359, align 1
  %4360 = lshr i64 %4332, 63
  %4361 = xor i64 %4357, %4360
  %4362 = add i64 %4361, %4357
  %4363 = icmp eq i64 %4362, 2
  %4364 = zext i1 %4363 to i8
  %4365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4364, i8* %4365, align 1
  store %struct.Memory* %loadMem_433b0e, %struct.Memory** %MEMORY
  %loadMem_433b15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4367 = getelementptr inbounds %struct.GPR, %struct.GPR* %4366, i32 0, i32 33
  %4368 = getelementptr inbounds %struct.Reg, %struct.Reg* %4367, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %4368 to i64*
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4370 = getelementptr inbounds %struct.GPR, %struct.GPR* %4369, i32 0, i32 1
  %4371 = getelementptr inbounds %struct.Reg, %struct.Reg* %4370, i32 0, i32 0
  %EAX.i1281 = bitcast %union.anon* %4371 to i32*
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4373 = getelementptr inbounds %struct.GPR, %struct.GPR* %4372, i32 0, i32 15
  %4374 = getelementptr inbounds %struct.Reg, %struct.Reg* %4373, i32 0, i32 0
  %RBP.i1282 = bitcast %union.anon* %4374 to i64*
  %4375 = load i64, i64* %RBP.i1282
  %4376 = sub i64 %4375, 96
  %4377 = load i32, i32* %EAX.i1281
  %4378 = zext i32 %4377 to i64
  %4379 = load i64, i64* %PC.i1280
  %4380 = add i64 %4379, 3
  store i64 %4380, i64* %PC.i1280
  %4381 = inttoptr i64 %4376 to i32*
  store i32 %4377, i32* %4381
  store %struct.Memory* %loadMem_433b15, %struct.Memory** %MEMORY
  %loadMem1_433b18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4383 = getelementptr inbounds %struct.GPR, %struct.GPR* %4382, i32 0, i32 33
  %4384 = getelementptr inbounds %struct.Reg, %struct.Reg* %4383, i32 0, i32 0
  %PC.i1279 = bitcast %union.anon* %4384 to i64*
  %4385 = load i64, i64* %PC.i1279
  %4386 = add i64 %4385, 18376
  %4387 = load i64, i64* %PC.i1279
  %4388 = add i64 %4387, 5
  %4389 = load i64, i64* %PC.i1279
  %4390 = add i64 %4389, 5
  store i64 %4390, i64* %PC.i1279
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4392 = load i64, i64* %4391, align 8
  %4393 = add i64 %4392, -8
  %4394 = inttoptr i64 %4393 to i64*
  store i64 %4388, i64* %4394
  store i64 %4393, i64* %4391, align 8
  %4395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4386, i64* %4395, align 8
  store %struct.Memory* %loadMem1_433b18, %struct.Memory** %MEMORY
  %loadMem2_433b18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433b18 = load i64, i64* %3
  %call2_433b18 = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433b18, %struct.Memory* %loadMem2_433b18)
  store %struct.Memory* %call2_433b18, %struct.Memory** %MEMORY
  %loadMem_433b1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4397 = getelementptr inbounds %struct.GPR, %struct.GPR* %4396, i32 0, i32 33
  %4398 = getelementptr inbounds %struct.Reg, %struct.Reg* %4397, i32 0, i32 0
  %PC.i1277 = bitcast %union.anon* %4398 to i64*
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4400 = getelementptr inbounds %struct.GPR, %struct.GPR* %4399, i32 0, i32 11
  %4401 = getelementptr inbounds %struct.Reg, %struct.Reg* %4400, i32 0, i32 0
  %RDI.i1278 = bitcast %union.anon* %4401 to i64*
  %4402 = load i64, i64* %PC.i1277
  %4403 = add i64 %4402, 10
  store i64 %4403, i64* %PC.i1277
  store i64 ptrtoint (%G__0x721e00_type* @G__0x721e00 to i64), i64* %RDI.i1278, align 8
  store %struct.Memory* %loadMem_433b1d, %struct.Memory** %MEMORY
  %loadMem_433b27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4405 = getelementptr inbounds %struct.GPR, %struct.GPR* %4404, i32 0, i32 33
  %4406 = getelementptr inbounds %struct.Reg, %struct.Reg* %4405, i32 0, i32 0
  %PC.i1275 = bitcast %union.anon* %4406 to i64*
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4408 = getelementptr inbounds %struct.GPR, %struct.GPR* %4407, i32 0, i32 11
  %4409 = getelementptr inbounds %struct.Reg, %struct.Reg* %4408, i32 0, i32 0
  %RDI.i1276 = bitcast %union.anon* %4409 to i64*
  %4410 = load i64, i64* %RDI.i1276
  %4411 = load i64, i64* %PC.i1275
  %4412 = add i64 %4411, 7
  store i64 %4412, i64* %PC.i1275
  %4413 = add i64 3240, %4410
  store i64 %4413, i64* %RDI.i1276, align 8
  %4414 = icmp ult i64 %4413, %4410
  %4415 = icmp ult i64 %4413, 3240
  %4416 = or i1 %4414, %4415
  %4417 = zext i1 %4416 to i8
  %4418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4417, i8* %4418, align 1
  %4419 = trunc i64 %4413 to i32
  %4420 = and i32 %4419, 255
  %4421 = call i32 @llvm.ctpop.i32(i32 %4420)
  %4422 = trunc i32 %4421 to i8
  %4423 = and i8 %4422, 1
  %4424 = xor i8 %4423, 1
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4424, i8* %4425, align 1
  %4426 = xor i64 3240, %4410
  %4427 = xor i64 %4426, %4413
  %4428 = lshr i64 %4427, 4
  %4429 = trunc i64 %4428 to i8
  %4430 = and i8 %4429, 1
  %4431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4430, i8* %4431, align 1
  %4432 = icmp eq i64 %4413, 0
  %4433 = zext i1 %4432 to i8
  %4434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4433, i8* %4434, align 1
  %4435 = lshr i64 %4413, 63
  %4436 = trunc i64 %4435 to i8
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4436, i8* %4437, align 1
  %4438 = lshr i64 %4410, 63
  %4439 = xor i64 %4435, %4438
  %4440 = add i64 %4439, %4435
  %4441 = icmp eq i64 %4440, 2
  %4442 = zext i1 %4441 to i8
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4442, i8* %4443, align 1
  store %struct.Memory* %loadMem_433b27, %struct.Memory** %MEMORY
  %loadMem_433b2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4445 = getelementptr inbounds %struct.GPR, %struct.GPR* %4444, i32 0, i32 33
  %4446 = getelementptr inbounds %struct.Reg, %struct.Reg* %4445, i32 0, i32 0
  %PC.i1272 = bitcast %union.anon* %4446 to i64*
  %4447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4448 = getelementptr inbounds %struct.GPR, %struct.GPR* %4447, i32 0, i32 1
  %4449 = getelementptr inbounds %struct.Reg, %struct.Reg* %4448, i32 0, i32 0
  %EAX.i1273 = bitcast %union.anon* %4449 to i32*
  %4450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4451 = getelementptr inbounds %struct.GPR, %struct.GPR* %4450, i32 0, i32 15
  %4452 = getelementptr inbounds %struct.Reg, %struct.Reg* %4451, i32 0, i32 0
  %RBP.i1274 = bitcast %union.anon* %4452 to i64*
  %4453 = load i64, i64* %RBP.i1274
  %4454 = sub i64 %4453, 100
  %4455 = load i32, i32* %EAX.i1273
  %4456 = zext i32 %4455 to i64
  %4457 = load i64, i64* %PC.i1272
  %4458 = add i64 %4457, 3
  store i64 %4458, i64* %PC.i1272
  %4459 = inttoptr i64 %4454 to i32*
  store i32 %4455, i32* %4459
  store %struct.Memory* %loadMem_433b2e, %struct.Memory** %MEMORY
  %loadMem1_433b31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4461 = getelementptr inbounds %struct.GPR, %struct.GPR* %4460, i32 0, i32 33
  %4462 = getelementptr inbounds %struct.Reg, %struct.Reg* %4461, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %4462 to i64*
  %4463 = load i64, i64* %PC.i1271
  %4464 = add i64 %4463, 18351
  %4465 = load i64, i64* %PC.i1271
  %4466 = add i64 %4465, 5
  %4467 = load i64, i64* %PC.i1271
  %4468 = add i64 %4467, 5
  store i64 %4468, i64* %PC.i1271
  %4469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4470 = load i64, i64* %4469, align 8
  %4471 = add i64 %4470, -8
  %4472 = inttoptr i64 %4471 to i64*
  store i64 %4466, i64* %4472
  store i64 %4471, i64* %4469, align 8
  %4473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4464, i64* %4473, align 8
  store %struct.Memory* %loadMem1_433b31, %struct.Memory** %MEMORY
  %loadMem2_433b31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433b31 = load i64, i64* %3
  %call2_433b31 = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433b31, %struct.Memory* %loadMem2_433b31)
  store %struct.Memory* %call2_433b31, %struct.Memory** %MEMORY
  %loadMem_433b36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4475 = getelementptr inbounds %struct.GPR, %struct.GPR* %4474, i32 0, i32 33
  %4476 = getelementptr inbounds %struct.Reg, %struct.Reg* %4475, i32 0, i32 0
  %PC.i1269 = bitcast %union.anon* %4476 to i64*
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4478 = getelementptr inbounds %struct.GPR, %struct.GPR* %4477, i32 0, i32 11
  %4479 = getelementptr inbounds %struct.Reg, %struct.Reg* %4478, i32 0, i32 0
  %RDI.i1270 = bitcast %union.anon* %4479 to i64*
  %4480 = load i64, i64* %PC.i1269
  %4481 = add i64 %4480, 8
  store i64 %4481, i64* %PC.i1269
  %4482 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %4482, i64* %RDI.i1270, align 8
  store %struct.Memory* %loadMem_433b36, %struct.Memory** %MEMORY
  %loadMem_433b3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4484 = getelementptr inbounds %struct.GPR, %struct.GPR* %4483, i32 0, i32 33
  %4485 = getelementptr inbounds %struct.Reg, %struct.Reg* %4484, i32 0, i32 0
  %PC.i1267 = bitcast %union.anon* %4485 to i64*
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4487 = getelementptr inbounds %struct.GPR, %struct.GPR* %4486, i32 0, i32 11
  %4488 = getelementptr inbounds %struct.Reg, %struct.Reg* %4487, i32 0, i32 0
  %RDI.i1268 = bitcast %union.anon* %4488 to i64*
  %4489 = load i64, i64* %RDI.i1268
  %4490 = add i64 %4489, 1256
  %4491 = load i64, i64* %PC.i1267
  %4492 = add i64 %4491, 7
  store i64 %4492, i64* %PC.i1267
  %4493 = inttoptr i64 %4490 to i32*
  %4494 = load i32, i32* %4493
  %4495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4495, align 1
  %4496 = and i32 %4494, 255
  %4497 = call i32 @llvm.ctpop.i32(i32 %4496)
  %4498 = trunc i32 %4497 to i8
  %4499 = and i8 %4498, 1
  %4500 = xor i8 %4499, 1
  %4501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4500, i8* %4501, align 1
  %4502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4502, align 1
  %4503 = icmp eq i32 %4494, 0
  %4504 = zext i1 %4503 to i8
  %4505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4504, i8* %4505, align 1
  %4506 = lshr i32 %4494, 31
  %4507 = trunc i32 %4506 to i8
  %4508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4507, i8* %4508, align 1
  %4509 = lshr i32 %4494, 31
  %4510 = xor i32 %4506, %4509
  %4511 = add i32 %4510, %4509
  %4512 = icmp eq i32 %4511, 2
  %4513 = zext i1 %4512 to i8
  %4514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4513, i8* %4514, align 1
  store %struct.Memory* %loadMem_433b3e, %struct.Memory** %MEMORY
  %loadMem_433b45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4516 = getelementptr inbounds %struct.GPR, %struct.GPR* %4515, i32 0, i32 33
  %4517 = getelementptr inbounds %struct.Reg, %struct.Reg* %4516, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %4517 to i64*
  %4518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4519 = getelementptr inbounds %struct.GPR, %struct.GPR* %4518, i32 0, i32 1
  %4520 = getelementptr inbounds %struct.Reg, %struct.Reg* %4519, i32 0, i32 0
  %EAX.i1265 = bitcast %union.anon* %4520 to i32*
  %4521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4522 = getelementptr inbounds %struct.GPR, %struct.GPR* %4521, i32 0, i32 15
  %4523 = getelementptr inbounds %struct.Reg, %struct.Reg* %4522, i32 0, i32 0
  %RBP.i1266 = bitcast %union.anon* %4523 to i64*
  %4524 = load i64, i64* %RBP.i1266
  %4525 = sub i64 %4524, 104
  %4526 = load i32, i32* %EAX.i1265
  %4527 = zext i32 %4526 to i64
  %4528 = load i64, i64* %PC.i1264
  %4529 = add i64 %4528, 3
  store i64 %4529, i64* %PC.i1264
  %4530 = inttoptr i64 %4525 to i32*
  store i32 %4526, i32* %4530
  store %struct.Memory* %loadMem_433b45, %struct.Memory** %MEMORY
  %loadMem_433b48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4532 = getelementptr inbounds %struct.GPR, %struct.GPR* %4531, i32 0, i32 33
  %4533 = getelementptr inbounds %struct.Reg, %struct.Reg* %4532, i32 0, i32 0
  %PC.i1263 = bitcast %union.anon* %4533 to i64*
  %4534 = load i64, i64* %PC.i1263
  %4535 = add i64 %4534, 214
  %4536 = load i64, i64* %PC.i1263
  %4537 = add i64 %4536, 6
  %4538 = load i64, i64* %PC.i1263
  %4539 = add i64 %4538, 6
  store i64 %4539, i64* %PC.i1263
  %4540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4541 = load i8, i8* %4540, align 1
  store i8 %4541, i8* %BRANCH_TAKEN, align 1
  %4542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4543 = icmp ne i8 %4541, 0
  %4544 = select i1 %4543, i64 %4535, i64 %4537
  store i64 %4544, i64* %4542, align 8
  store %struct.Memory* %loadMem_433b48, %struct.Memory** %MEMORY
  %loadBr_433b48 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_433b48 = icmp eq i8 %loadBr_433b48, 1
  br i1 %cmpBr_433b48, label %block_.L_433c1e, label %block_433b4e

block_433b4e:                                     ; preds = %block_433a6f
  %loadMem_433b4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4546 = getelementptr inbounds %struct.GPR, %struct.GPR* %4545, i32 0, i32 33
  %4547 = getelementptr inbounds %struct.Reg, %struct.Reg* %4546, i32 0, i32 0
  %PC.i1261 = bitcast %union.anon* %4547 to i64*
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4549 = getelementptr inbounds %struct.GPR, %struct.GPR* %4548, i32 0, i32 1
  %4550 = getelementptr inbounds %struct.Reg, %struct.Reg* %4549, i32 0, i32 0
  %RAX.i1262 = bitcast %union.anon* %4550 to i64*
  %4551 = load i64, i64* %PC.i1261
  %4552 = add i64 %4551, 10
  store i64 %4552, i64* %PC.i1261
  store i64 ptrtoint (%G__0x710a60_type* @G__0x710a60 to i64), i64* %RAX.i1262, align 8
  store %struct.Memory* %loadMem_433b4e, %struct.Memory** %MEMORY
  %loadMem_433b58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4554 = getelementptr inbounds %struct.GPR, %struct.GPR* %4553, i32 0, i32 33
  %4555 = getelementptr inbounds %struct.Reg, %struct.Reg* %4554, i32 0, i32 0
  %PC.i1259 = bitcast %union.anon* %4555 to i64*
  %4556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4557 = getelementptr inbounds %struct.GPR, %struct.GPR* %4556, i32 0, i32 1
  %4558 = getelementptr inbounds %struct.Reg, %struct.Reg* %4557, i32 0, i32 0
  %RAX.i1260 = bitcast %union.anon* %4558 to i64*
  %4559 = load i64, i64* %RAX.i1260
  %4560 = load i64, i64* %PC.i1259
  %4561 = add i64 %4560, 6
  store i64 %4561, i64* %PC.i1259
  %4562 = add i64 3248, %4559
  store i64 %4562, i64* %RAX.i1260, align 8
  %4563 = icmp ult i64 %4562, %4559
  %4564 = icmp ult i64 %4562, 3248
  %4565 = or i1 %4563, %4564
  %4566 = zext i1 %4565 to i8
  %4567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4566, i8* %4567, align 1
  %4568 = trunc i64 %4562 to i32
  %4569 = and i32 %4568, 255
  %4570 = call i32 @llvm.ctpop.i32(i32 %4569)
  %4571 = trunc i32 %4570 to i8
  %4572 = and i8 %4571, 1
  %4573 = xor i8 %4572, 1
  %4574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4573, i8* %4574, align 1
  %4575 = xor i64 3248, %4559
  %4576 = xor i64 %4575, %4562
  %4577 = lshr i64 %4576, 4
  %4578 = trunc i64 %4577 to i8
  %4579 = and i8 %4578, 1
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4579, i8* %4580, align 1
  %4581 = icmp eq i64 %4562, 0
  %4582 = zext i1 %4581 to i8
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4582, i8* %4583, align 1
  %4584 = lshr i64 %4562, 63
  %4585 = trunc i64 %4584 to i8
  %4586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4585, i8* %4586, align 1
  %4587 = lshr i64 %4559, 63
  %4588 = xor i64 %4584, %4587
  %4589 = add i64 %4588, %4584
  %4590 = icmp eq i64 %4589, 2
  %4591 = zext i1 %4590 to i8
  %4592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4591, i8* %4592, align 1
  store %struct.Memory* %loadMem_433b58, %struct.Memory** %MEMORY
  %loadMem_433b5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4594 = getelementptr inbounds %struct.GPR, %struct.GPR* %4593, i32 0, i32 33
  %4595 = getelementptr inbounds %struct.Reg, %struct.Reg* %4594, i32 0, i32 0
  %PC.i1256 = bitcast %union.anon* %4595 to i64*
  %4596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4597 = getelementptr inbounds %struct.GPR, %struct.GPR* %4596, i32 0, i32 1
  %4598 = getelementptr inbounds %struct.Reg, %struct.Reg* %4597, i32 0, i32 0
  %RAX.i1257 = bitcast %union.anon* %4598 to i64*
  %4599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4600 = getelementptr inbounds %struct.GPR, %struct.GPR* %4599, i32 0, i32 11
  %4601 = getelementptr inbounds %struct.Reg, %struct.Reg* %4600, i32 0, i32 0
  %RDI.i1258 = bitcast %union.anon* %4601 to i64*
  %4602 = load i64, i64* %RAX.i1257
  %4603 = load i64, i64* %PC.i1256
  %4604 = add i64 %4603, 3
  store i64 %4604, i64* %PC.i1256
  store i64 %4602, i64* %RDI.i1258, align 8
  store %struct.Memory* %loadMem_433b5e, %struct.Memory** %MEMORY
  %loadMem1_433b61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4606 = getelementptr inbounds %struct.GPR, %struct.GPR* %4605, i32 0, i32 33
  %4607 = getelementptr inbounds %struct.Reg, %struct.Reg* %4606, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %4607 to i64*
  %4608 = load i64, i64* %PC.i1255
  %4609 = add i64 %4608, 18303
  %4610 = load i64, i64* %PC.i1255
  %4611 = add i64 %4610, 5
  %4612 = load i64, i64* %PC.i1255
  %4613 = add i64 %4612, 5
  store i64 %4613, i64* %PC.i1255
  %4614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4615 = load i64, i64* %4614, align 8
  %4616 = add i64 %4615, -8
  %4617 = inttoptr i64 %4616 to i64*
  store i64 %4611, i64* %4617
  store i64 %4616, i64* %4614, align 8
  %4618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4609, i64* %4618, align 8
  store %struct.Memory* %loadMem1_433b61, %struct.Memory** %MEMORY
  %loadMem2_433b61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433b61 = load i64, i64* %3
  %call2_433b61 = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433b61, %struct.Memory* %loadMem2_433b61)
  store %struct.Memory* %call2_433b61, %struct.Memory** %MEMORY
  %loadMem_433b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4620 = getelementptr inbounds %struct.GPR, %struct.GPR* %4619, i32 0, i32 33
  %4621 = getelementptr inbounds %struct.Reg, %struct.Reg* %4620, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %4621 to i64*
  %4622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4623 = getelementptr inbounds %struct.GPR, %struct.GPR* %4622, i32 0, i32 11
  %4624 = getelementptr inbounds %struct.Reg, %struct.Reg* %4623, i32 0, i32 0
  %RDI.i1254 = bitcast %union.anon* %4624 to i64*
  %4625 = load i64, i64* %PC.i1253
  %4626 = add i64 %4625, 10
  store i64 %4626, i64* %PC.i1253
  store i64 ptrtoint (%G__0x710a60_type* @G__0x710a60 to i64), i64* %RDI.i1254, align 8
  store %struct.Memory* %loadMem_433b66, %struct.Memory** %MEMORY
  %loadMem_433b70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4628 = getelementptr inbounds %struct.GPR, %struct.GPR* %4627, i32 0, i32 33
  %4629 = getelementptr inbounds %struct.Reg, %struct.Reg* %4628, i32 0, i32 0
  %PC.i1251 = bitcast %union.anon* %4629 to i64*
  %4630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4631 = getelementptr inbounds %struct.GPR, %struct.GPR* %4630, i32 0, i32 11
  %4632 = getelementptr inbounds %struct.Reg, %struct.Reg* %4631, i32 0, i32 0
  %RDI.i1252 = bitcast %union.anon* %4632 to i64*
  %4633 = load i64, i64* %RDI.i1252
  %4634 = load i64, i64* %PC.i1251
  %4635 = add i64 %4634, 7
  store i64 %4635, i64* %PC.i1251
  %4636 = add i64 3256, %4633
  store i64 %4636, i64* %RDI.i1252, align 8
  %4637 = icmp ult i64 %4636, %4633
  %4638 = icmp ult i64 %4636, 3256
  %4639 = or i1 %4637, %4638
  %4640 = zext i1 %4639 to i8
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4640, i8* %4641, align 1
  %4642 = trunc i64 %4636 to i32
  %4643 = and i32 %4642, 255
  %4644 = call i32 @llvm.ctpop.i32(i32 %4643)
  %4645 = trunc i32 %4644 to i8
  %4646 = and i8 %4645, 1
  %4647 = xor i8 %4646, 1
  %4648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4647, i8* %4648, align 1
  %4649 = xor i64 3256, %4633
  %4650 = xor i64 %4649, %4636
  %4651 = lshr i64 %4650, 4
  %4652 = trunc i64 %4651 to i8
  %4653 = and i8 %4652, 1
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4653, i8* %4654, align 1
  %4655 = icmp eq i64 %4636, 0
  %4656 = zext i1 %4655 to i8
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4656, i8* %4657, align 1
  %4658 = lshr i64 %4636, 63
  %4659 = trunc i64 %4658 to i8
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4659, i8* %4660, align 1
  %4661 = lshr i64 %4633, 63
  %4662 = xor i64 %4658, %4661
  %4663 = add i64 %4662, %4658
  %4664 = icmp eq i64 %4663, 2
  %4665 = zext i1 %4664 to i8
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4665, i8* %4666, align 1
  store %struct.Memory* %loadMem_433b70, %struct.Memory** %MEMORY
  %loadMem_433b77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4668 = getelementptr inbounds %struct.GPR, %struct.GPR* %4667, i32 0, i32 33
  %4669 = getelementptr inbounds %struct.Reg, %struct.Reg* %4668, i32 0, i32 0
  %PC.i1248 = bitcast %union.anon* %4669 to i64*
  %4670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4671 = getelementptr inbounds %struct.GPR, %struct.GPR* %4670, i32 0, i32 1
  %4672 = getelementptr inbounds %struct.Reg, %struct.Reg* %4671, i32 0, i32 0
  %EAX.i1249 = bitcast %union.anon* %4672 to i32*
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4674 = getelementptr inbounds %struct.GPR, %struct.GPR* %4673, i32 0, i32 15
  %4675 = getelementptr inbounds %struct.Reg, %struct.Reg* %4674, i32 0, i32 0
  %RBP.i1250 = bitcast %union.anon* %4675 to i64*
  %4676 = load i64, i64* %RBP.i1250
  %4677 = sub i64 %4676, 108
  %4678 = load i32, i32* %EAX.i1249
  %4679 = zext i32 %4678 to i64
  %4680 = load i64, i64* %PC.i1248
  %4681 = add i64 %4680, 3
  store i64 %4681, i64* %PC.i1248
  %4682 = inttoptr i64 %4677 to i32*
  store i32 %4678, i32* %4682
  store %struct.Memory* %loadMem_433b77, %struct.Memory** %MEMORY
  %loadMem1_433b7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4684 = getelementptr inbounds %struct.GPR, %struct.GPR* %4683, i32 0, i32 33
  %4685 = getelementptr inbounds %struct.Reg, %struct.Reg* %4684, i32 0, i32 0
  %PC.i1247 = bitcast %union.anon* %4685 to i64*
  %4686 = load i64, i64* %PC.i1247
  %4687 = add i64 %4686, 18278
  %4688 = load i64, i64* %PC.i1247
  %4689 = add i64 %4688, 5
  %4690 = load i64, i64* %PC.i1247
  %4691 = add i64 %4690, 5
  store i64 %4691, i64* %PC.i1247
  %4692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4693 = load i64, i64* %4692, align 8
  %4694 = add i64 %4693, -8
  %4695 = inttoptr i64 %4694 to i64*
  store i64 %4689, i64* %4695
  store i64 %4694, i64* %4692, align 8
  %4696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4687, i64* %4696, align 8
  store %struct.Memory* %loadMem1_433b7a, %struct.Memory** %MEMORY
  %loadMem2_433b7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433b7a = load i64, i64* %3
  %call2_433b7a = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433b7a, %struct.Memory* %loadMem2_433b7a)
  store %struct.Memory* %call2_433b7a, %struct.Memory** %MEMORY
  %loadMem_433b7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4698 = getelementptr inbounds %struct.GPR, %struct.GPR* %4697, i32 0, i32 33
  %4699 = getelementptr inbounds %struct.Reg, %struct.Reg* %4698, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %4699 to i64*
  %4700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4701 = getelementptr inbounds %struct.GPR, %struct.GPR* %4700, i32 0, i32 11
  %4702 = getelementptr inbounds %struct.Reg, %struct.Reg* %4701, i32 0, i32 0
  %RDI.i1246 = bitcast %union.anon* %4702 to i64*
  %4703 = load i64, i64* %PC.i1245
  %4704 = add i64 %4703, 10
  store i64 %4704, i64* %PC.i1245
  store i64 ptrtoint (%G__0x6cd878_type* @G__0x6cd878 to i64), i64* %RDI.i1246, align 8
  store %struct.Memory* %loadMem_433b7f, %struct.Memory** %MEMORY
  %loadMem_433b89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4706 = getelementptr inbounds %struct.GPR, %struct.GPR* %4705, i32 0, i32 33
  %4707 = getelementptr inbounds %struct.Reg, %struct.Reg* %4706, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %4707 to i64*
  %4708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4709 = getelementptr inbounds %struct.GPR, %struct.GPR* %4708, i32 0, i32 11
  %4710 = getelementptr inbounds %struct.Reg, %struct.Reg* %4709, i32 0, i32 0
  %RDI.i1244 = bitcast %union.anon* %4710 to i64*
  %4711 = load i64, i64* %RDI.i1244
  %4712 = load i64, i64* %PC.i1243
  %4713 = add i64 %4712, 7
  store i64 %4713, i64* %PC.i1243
  %4714 = add i64 3248, %4711
  store i64 %4714, i64* %RDI.i1244, align 8
  %4715 = icmp ult i64 %4714, %4711
  %4716 = icmp ult i64 %4714, 3248
  %4717 = or i1 %4715, %4716
  %4718 = zext i1 %4717 to i8
  %4719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4718, i8* %4719, align 1
  %4720 = trunc i64 %4714 to i32
  %4721 = and i32 %4720, 255
  %4722 = call i32 @llvm.ctpop.i32(i32 %4721)
  %4723 = trunc i32 %4722 to i8
  %4724 = and i8 %4723, 1
  %4725 = xor i8 %4724, 1
  %4726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4725, i8* %4726, align 1
  %4727 = xor i64 3248, %4711
  %4728 = xor i64 %4727, %4714
  %4729 = lshr i64 %4728, 4
  %4730 = trunc i64 %4729 to i8
  %4731 = and i8 %4730, 1
  %4732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4731, i8* %4732, align 1
  %4733 = icmp eq i64 %4714, 0
  %4734 = zext i1 %4733 to i8
  %4735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4734, i8* %4735, align 1
  %4736 = lshr i64 %4714, 63
  %4737 = trunc i64 %4736 to i8
  %4738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4737, i8* %4738, align 1
  %4739 = lshr i64 %4711, 63
  %4740 = xor i64 %4736, %4739
  %4741 = add i64 %4740, %4736
  %4742 = icmp eq i64 %4741, 2
  %4743 = zext i1 %4742 to i8
  %4744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4743, i8* %4744, align 1
  store %struct.Memory* %loadMem_433b89, %struct.Memory** %MEMORY
  %loadMem_433b90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4746 = getelementptr inbounds %struct.GPR, %struct.GPR* %4745, i32 0, i32 33
  %4747 = getelementptr inbounds %struct.Reg, %struct.Reg* %4746, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %4747 to i64*
  %4748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4749 = getelementptr inbounds %struct.GPR, %struct.GPR* %4748, i32 0, i32 1
  %4750 = getelementptr inbounds %struct.Reg, %struct.Reg* %4749, i32 0, i32 0
  %EAX.i1241 = bitcast %union.anon* %4750 to i32*
  %4751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4752 = getelementptr inbounds %struct.GPR, %struct.GPR* %4751, i32 0, i32 15
  %4753 = getelementptr inbounds %struct.Reg, %struct.Reg* %4752, i32 0, i32 0
  %RBP.i1242 = bitcast %union.anon* %4753 to i64*
  %4754 = load i64, i64* %RBP.i1242
  %4755 = sub i64 %4754, 112
  %4756 = load i32, i32* %EAX.i1241
  %4757 = zext i32 %4756 to i64
  %4758 = load i64, i64* %PC.i1240
  %4759 = add i64 %4758, 3
  store i64 %4759, i64* %PC.i1240
  %4760 = inttoptr i64 %4755 to i32*
  store i32 %4756, i32* %4760
  store %struct.Memory* %loadMem_433b90, %struct.Memory** %MEMORY
  %loadMem1_433b93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4762 = getelementptr inbounds %struct.GPR, %struct.GPR* %4761, i32 0, i32 33
  %4763 = getelementptr inbounds %struct.Reg, %struct.Reg* %4762, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %4763 to i64*
  %4764 = load i64, i64* %PC.i1239
  %4765 = add i64 %4764, 18253
  %4766 = load i64, i64* %PC.i1239
  %4767 = add i64 %4766, 5
  %4768 = load i64, i64* %PC.i1239
  %4769 = add i64 %4768, 5
  store i64 %4769, i64* %PC.i1239
  %4770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4771 = load i64, i64* %4770, align 8
  %4772 = add i64 %4771, -8
  %4773 = inttoptr i64 %4772 to i64*
  store i64 %4767, i64* %4773
  store i64 %4772, i64* %4770, align 8
  %4774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4765, i64* %4774, align 8
  store %struct.Memory* %loadMem1_433b93, %struct.Memory** %MEMORY
  %loadMem2_433b93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433b93 = load i64, i64* %3
  %call2_433b93 = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433b93, %struct.Memory* %loadMem2_433b93)
  store %struct.Memory* %call2_433b93, %struct.Memory** %MEMORY
  %loadMem_433b98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4776 = getelementptr inbounds %struct.GPR, %struct.GPR* %4775, i32 0, i32 33
  %4777 = getelementptr inbounds %struct.Reg, %struct.Reg* %4776, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %4777 to i64*
  %4778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4779 = getelementptr inbounds %struct.GPR, %struct.GPR* %4778, i32 0, i32 11
  %4780 = getelementptr inbounds %struct.Reg, %struct.Reg* %4779, i32 0, i32 0
  %RDI.i1238 = bitcast %union.anon* %4780 to i64*
  %4781 = load i64, i64* %PC.i1237
  %4782 = add i64 %4781, 10
  store i64 %4782, i64* %PC.i1237
  store i64 ptrtoint (%G__0x6cd878_type* @G__0x6cd878 to i64), i64* %RDI.i1238, align 8
  store %struct.Memory* %loadMem_433b98, %struct.Memory** %MEMORY
  %loadMem_433ba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4784 = getelementptr inbounds %struct.GPR, %struct.GPR* %4783, i32 0, i32 33
  %4785 = getelementptr inbounds %struct.Reg, %struct.Reg* %4784, i32 0, i32 0
  %PC.i1235 = bitcast %union.anon* %4785 to i64*
  %4786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4787 = getelementptr inbounds %struct.GPR, %struct.GPR* %4786, i32 0, i32 11
  %4788 = getelementptr inbounds %struct.Reg, %struct.Reg* %4787, i32 0, i32 0
  %RDI.i1236 = bitcast %union.anon* %4788 to i64*
  %4789 = load i64, i64* %RDI.i1236
  %4790 = load i64, i64* %PC.i1235
  %4791 = add i64 %4790, 7
  store i64 %4791, i64* %PC.i1235
  %4792 = add i64 3256, %4789
  store i64 %4792, i64* %RDI.i1236, align 8
  %4793 = icmp ult i64 %4792, %4789
  %4794 = icmp ult i64 %4792, 3256
  %4795 = or i1 %4793, %4794
  %4796 = zext i1 %4795 to i8
  %4797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4796, i8* %4797, align 1
  %4798 = trunc i64 %4792 to i32
  %4799 = and i32 %4798, 255
  %4800 = call i32 @llvm.ctpop.i32(i32 %4799)
  %4801 = trunc i32 %4800 to i8
  %4802 = and i8 %4801, 1
  %4803 = xor i8 %4802, 1
  %4804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4803, i8* %4804, align 1
  %4805 = xor i64 3256, %4789
  %4806 = xor i64 %4805, %4792
  %4807 = lshr i64 %4806, 4
  %4808 = trunc i64 %4807 to i8
  %4809 = and i8 %4808, 1
  %4810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4809, i8* %4810, align 1
  %4811 = icmp eq i64 %4792, 0
  %4812 = zext i1 %4811 to i8
  %4813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4812, i8* %4813, align 1
  %4814 = lshr i64 %4792, 63
  %4815 = trunc i64 %4814 to i8
  %4816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4815, i8* %4816, align 1
  %4817 = lshr i64 %4789, 63
  %4818 = xor i64 %4814, %4817
  %4819 = add i64 %4818, %4814
  %4820 = icmp eq i64 %4819, 2
  %4821 = zext i1 %4820 to i8
  %4822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4821, i8* %4822, align 1
  store %struct.Memory* %loadMem_433ba2, %struct.Memory** %MEMORY
  %loadMem_433ba9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4824 = getelementptr inbounds %struct.GPR, %struct.GPR* %4823, i32 0, i32 33
  %4825 = getelementptr inbounds %struct.Reg, %struct.Reg* %4824, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %4825 to i64*
  %4826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4827 = getelementptr inbounds %struct.GPR, %struct.GPR* %4826, i32 0, i32 1
  %4828 = getelementptr inbounds %struct.Reg, %struct.Reg* %4827, i32 0, i32 0
  %EAX.i1233 = bitcast %union.anon* %4828 to i32*
  %4829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4830 = getelementptr inbounds %struct.GPR, %struct.GPR* %4829, i32 0, i32 15
  %4831 = getelementptr inbounds %struct.Reg, %struct.Reg* %4830, i32 0, i32 0
  %RBP.i1234 = bitcast %union.anon* %4831 to i64*
  %4832 = load i64, i64* %RBP.i1234
  %4833 = sub i64 %4832, 116
  %4834 = load i32, i32* %EAX.i1233
  %4835 = zext i32 %4834 to i64
  %4836 = load i64, i64* %PC.i1232
  %4837 = add i64 %4836, 3
  store i64 %4837, i64* %PC.i1232
  %4838 = inttoptr i64 %4833 to i32*
  store i32 %4834, i32* %4838
  store %struct.Memory* %loadMem_433ba9, %struct.Memory** %MEMORY
  %loadMem1_433bac = load %struct.Memory*, %struct.Memory** %MEMORY
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4840 = getelementptr inbounds %struct.GPR, %struct.GPR* %4839, i32 0, i32 33
  %4841 = getelementptr inbounds %struct.Reg, %struct.Reg* %4840, i32 0, i32 0
  %PC.i1231 = bitcast %union.anon* %4841 to i64*
  %4842 = load i64, i64* %PC.i1231
  %4843 = add i64 %4842, 18228
  %4844 = load i64, i64* %PC.i1231
  %4845 = add i64 %4844, 5
  %4846 = load i64, i64* %PC.i1231
  %4847 = add i64 %4846, 5
  store i64 %4847, i64* %PC.i1231
  %4848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4849 = load i64, i64* %4848, align 8
  %4850 = add i64 %4849, -8
  %4851 = inttoptr i64 %4850 to i64*
  store i64 %4845, i64* %4851
  store i64 %4850, i64* %4848, align 8
  %4852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4843, i64* %4852, align 8
  store %struct.Memory* %loadMem1_433bac, %struct.Memory** %MEMORY
  %loadMem2_433bac = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433bac = load i64, i64* %3
  %call2_433bac = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433bac, %struct.Memory* %loadMem2_433bac)
  store %struct.Memory* %call2_433bac, %struct.Memory** %MEMORY
  %loadMem_433bb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4854 = getelementptr inbounds %struct.GPR, %struct.GPR* %4853, i32 0, i32 33
  %4855 = getelementptr inbounds %struct.Reg, %struct.Reg* %4854, i32 0, i32 0
  %PC.i1229 = bitcast %union.anon* %4855 to i64*
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4857 = getelementptr inbounds %struct.GPR, %struct.GPR* %4856, i32 0, i32 11
  %4858 = getelementptr inbounds %struct.Reg, %struct.Reg* %4857, i32 0, i32 0
  %RDI.i1230 = bitcast %union.anon* %4858 to i64*
  %4859 = load i64, i64* %PC.i1229
  %4860 = add i64 %4859, 10
  store i64 %4860, i64* %PC.i1229
  store i64 ptrtoint (%G__0x6d2198_type* @G__0x6d2198 to i64), i64* %RDI.i1230, align 8
  store %struct.Memory* %loadMem_433bb1, %struct.Memory** %MEMORY
  %loadMem_433bbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4862 = getelementptr inbounds %struct.GPR, %struct.GPR* %4861, i32 0, i32 33
  %4863 = getelementptr inbounds %struct.Reg, %struct.Reg* %4862, i32 0, i32 0
  %PC.i1227 = bitcast %union.anon* %4863 to i64*
  %4864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4865 = getelementptr inbounds %struct.GPR, %struct.GPR* %4864, i32 0, i32 11
  %4866 = getelementptr inbounds %struct.Reg, %struct.Reg* %4865, i32 0, i32 0
  %RDI.i1228 = bitcast %union.anon* %4866 to i64*
  %4867 = load i64, i64* %RDI.i1228
  %4868 = load i64, i64* %PC.i1227
  %4869 = add i64 %4868, 7
  store i64 %4869, i64* %PC.i1227
  %4870 = add i64 3248, %4867
  store i64 %4870, i64* %RDI.i1228, align 8
  %4871 = icmp ult i64 %4870, %4867
  %4872 = icmp ult i64 %4870, 3248
  %4873 = or i1 %4871, %4872
  %4874 = zext i1 %4873 to i8
  %4875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4874, i8* %4875, align 1
  %4876 = trunc i64 %4870 to i32
  %4877 = and i32 %4876, 255
  %4878 = call i32 @llvm.ctpop.i32(i32 %4877)
  %4879 = trunc i32 %4878 to i8
  %4880 = and i8 %4879, 1
  %4881 = xor i8 %4880, 1
  %4882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4881, i8* %4882, align 1
  %4883 = xor i64 3248, %4867
  %4884 = xor i64 %4883, %4870
  %4885 = lshr i64 %4884, 4
  %4886 = trunc i64 %4885 to i8
  %4887 = and i8 %4886, 1
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4887, i8* %4888, align 1
  %4889 = icmp eq i64 %4870, 0
  %4890 = zext i1 %4889 to i8
  %4891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4890, i8* %4891, align 1
  %4892 = lshr i64 %4870, 63
  %4893 = trunc i64 %4892 to i8
  %4894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4893, i8* %4894, align 1
  %4895 = lshr i64 %4867, 63
  %4896 = xor i64 %4892, %4895
  %4897 = add i64 %4896, %4892
  %4898 = icmp eq i64 %4897, 2
  %4899 = zext i1 %4898 to i8
  %4900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4899, i8* %4900, align 1
  store %struct.Memory* %loadMem_433bbb, %struct.Memory** %MEMORY
  %loadMem_433bc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4902 = getelementptr inbounds %struct.GPR, %struct.GPR* %4901, i32 0, i32 33
  %4903 = getelementptr inbounds %struct.Reg, %struct.Reg* %4902, i32 0, i32 0
  %PC.i1224 = bitcast %union.anon* %4903 to i64*
  %4904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4905 = getelementptr inbounds %struct.GPR, %struct.GPR* %4904, i32 0, i32 1
  %4906 = getelementptr inbounds %struct.Reg, %struct.Reg* %4905, i32 0, i32 0
  %EAX.i1225 = bitcast %union.anon* %4906 to i32*
  %4907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4908 = getelementptr inbounds %struct.GPR, %struct.GPR* %4907, i32 0, i32 15
  %4909 = getelementptr inbounds %struct.Reg, %struct.Reg* %4908, i32 0, i32 0
  %RBP.i1226 = bitcast %union.anon* %4909 to i64*
  %4910 = load i64, i64* %RBP.i1226
  %4911 = sub i64 %4910, 120
  %4912 = load i32, i32* %EAX.i1225
  %4913 = zext i32 %4912 to i64
  %4914 = load i64, i64* %PC.i1224
  %4915 = add i64 %4914, 3
  store i64 %4915, i64* %PC.i1224
  %4916 = inttoptr i64 %4911 to i32*
  store i32 %4912, i32* %4916
  store %struct.Memory* %loadMem_433bc2, %struct.Memory** %MEMORY
  %loadMem1_433bc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4918 = getelementptr inbounds %struct.GPR, %struct.GPR* %4917, i32 0, i32 33
  %4919 = getelementptr inbounds %struct.Reg, %struct.Reg* %4918, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %4919 to i64*
  %4920 = load i64, i64* %PC.i1223
  %4921 = add i64 %4920, 18203
  %4922 = load i64, i64* %PC.i1223
  %4923 = add i64 %4922, 5
  %4924 = load i64, i64* %PC.i1223
  %4925 = add i64 %4924, 5
  store i64 %4925, i64* %PC.i1223
  %4926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4927 = load i64, i64* %4926, align 8
  %4928 = add i64 %4927, -8
  %4929 = inttoptr i64 %4928 to i64*
  store i64 %4923, i64* %4929
  store i64 %4928, i64* %4926, align 8
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4921, i64* %4930, align 8
  store %struct.Memory* %loadMem1_433bc5, %struct.Memory** %MEMORY
  %loadMem2_433bc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433bc5 = load i64, i64* %3
  %call2_433bc5 = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433bc5, %struct.Memory* %loadMem2_433bc5)
  store %struct.Memory* %call2_433bc5, %struct.Memory** %MEMORY
  %loadMem_433bca = load %struct.Memory*, %struct.Memory** %MEMORY
  %4931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4932 = getelementptr inbounds %struct.GPR, %struct.GPR* %4931, i32 0, i32 33
  %4933 = getelementptr inbounds %struct.Reg, %struct.Reg* %4932, i32 0, i32 0
  %PC.i1221 = bitcast %union.anon* %4933 to i64*
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4935 = getelementptr inbounds %struct.GPR, %struct.GPR* %4934, i32 0, i32 11
  %4936 = getelementptr inbounds %struct.Reg, %struct.Reg* %4935, i32 0, i32 0
  %RDI.i1222 = bitcast %union.anon* %4936 to i64*
  %4937 = load i64, i64* %PC.i1221
  %4938 = add i64 %4937, 10
  store i64 %4938, i64* %PC.i1221
  store i64 ptrtoint (%G__0x6d2198_type* @G__0x6d2198 to i64), i64* %RDI.i1222, align 8
  store %struct.Memory* %loadMem_433bca, %struct.Memory** %MEMORY
  %loadMem_433bd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4940 = getelementptr inbounds %struct.GPR, %struct.GPR* %4939, i32 0, i32 33
  %4941 = getelementptr inbounds %struct.Reg, %struct.Reg* %4940, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %4941 to i64*
  %4942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4943 = getelementptr inbounds %struct.GPR, %struct.GPR* %4942, i32 0, i32 11
  %4944 = getelementptr inbounds %struct.Reg, %struct.Reg* %4943, i32 0, i32 0
  %RDI.i1220 = bitcast %union.anon* %4944 to i64*
  %4945 = load i64, i64* %RDI.i1220
  %4946 = load i64, i64* %PC.i1219
  %4947 = add i64 %4946, 7
  store i64 %4947, i64* %PC.i1219
  %4948 = add i64 3256, %4945
  store i64 %4948, i64* %RDI.i1220, align 8
  %4949 = icmp ult i64 %4948, %4945
  %4950 = icmp ult i64 %4948, 3256
  %4951 = or i1 %4949, %4950
  %4952 = zext i1 %4951 to i8
  %4953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4952, i8* %4953, align 1
  %4954 = trunc i64 %4948 to i32
  %4955 = and i32 %4954, 255
  %4956 = call i32 @llvm.ctpop.i32(i32 %4955)
  %4957 = trunc i32 %4956 to i8
  %4958 = and i8 %4957, 1
  %4959 = xor i8 %4958, 1
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4959, i8* %4960, align 1
  %4961 = xor i64 3256, %4945
  %4962 = xor i64 %4961, %4948
  %4963 = lshr i64 %4962, 4
  %4964 = trunc i64 %4963 to i8
  %4965 = and i8 %4964, 1
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4965, i8* %4966, align 1
  %4967 = icmp eq i64 %4948, 0
  %4968 = zext i1 %4967 to i8
  %4969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4968, i8* %4969, align 1
  %4970 = lshr i64 %4948, 63
  %4971 = trunc i64 %4970 to i8
  %4972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4971, i8* %4972, align 1
  %4973 = lshr i64 %4945, 63
  %4974 = xor i64 %4970, %4973
  %4975 = add i64 %4974, %4970
  %4976 = icmp eq i64 %4975, 2
  %4977 = zext i1 %4976 to i8
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4977, i8* %4978, align 1
  store %struct.Memory* %loadMem_433bd4, %struct.Memory** %MEMORY
  %loadMem_433bdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4980 = getelementptr inbounds %struct.GPR, %struct.GPR* %4979, i32 0, i32 33
  %4981 = getelementptr inbounds %struct.Reg, %struct.Reg* %4980, i32 0, i32 0
  %PC.i1216 = bitcast %union.anon* %4981 to i64*
  %4982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4983 = getelementptr inbounds %struct.GPR, %struct.GPR* %4982, i32 0, i32 1
  %4984 = getelementptr inbounds %struct.Reg, %struct.Reg* %4983, i32 0, i32 0
  %EAX.i1217 = bitcast %union.anon* %4984 to i32*
  %4985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4986 = getelementptr inbounds %struct.GPR, %struct.GPR* %4985, i32 0, i32 15
  %4987 = getelementptr inbounds %struct.Reg, %struct.Reg* %4986, i32 0, i32 0
  %RBP.i1218 = bitcast %union.anon* %4987 to i64*
  %4988 = load i64, i64* %RBP.i1218
  %4989 = sub i64 %4988, 124
  %4990 = load i32, i32* %EAX.i1217
  %4991 = zext i32 %4990 to i64
  %4992 = load i64, i64* %PC.i1216
  %4993 = add i64 %4992, 3
  store i64 %4993, i64* %PC.i1216
  %4994 = inttoptr i64 %4989 to i32*
  store i32 %4990, i32* %4994
  store %struct.Memory* %loadMem_433bdb, %struct.Memory** %MEMORY
  %loadMem1_433bde = load %struct.Memory*, %struct.Memory** %MEMORY
  %4995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4996 = getelementptr inbounds %struct.GPR, %struct.GPR* %4995, i32 0, i32 33
  %4997 = getelementptr inbounds %struct.Reg, %struct.Reg* %4996, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %4997 to i64*
  %4998 = load i64, i64* %PC.i1215
  %4999 = add i64 %4998, 18178
  %5000 = load i64, i64* %PC.i1215
  %5001 = add i64 %5000, 5
  %5002 = load i64, i64* %PC.i1215
  %5003 = add i64 %5002, 5
  store i64 %5003, i64* %PC.i1215
  %5004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5005 = load i64, i64* %5004, align 8
  %5006 = add i64 %5005, -8
  %5007 = inttoptr i64 %5006 to i64*
  store i64 %5001, i64* %5007
  store i64 %5006, i64* %5004, align 8
  %5008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4999, i64* %5008, align 8
  store %struct.Memory* %loadMem1_433bde, %struct.Memory** %MEMORY
  %loadMem2_433bde = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433bde = load i64, i64* %3
  %call2_433bde = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433bde, %struct.Memory* %loadMem2_433bde)
  store %struct.Memory* %call2_433bde, %struct.Memory** %MEMORY
  %loadMem_433be3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5010 = getelementptr inbounds %struct.GPR, %struct.GPR* %5009, i32 0, i32 33
  %5011 = getelementptr inbounds %struct.Reg, %struct.Reg* %5010, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %5011 to i64*
  %5012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5013 = getelementptr inbounds %struct.GPR, %struct.GPR* %5012, i32 0, i32 11
  %5014 = getelementptr inbounds %struct.Reg, %struct.Reg* %5013, i32 0, i32 0
  %RDI.i1214 = bitcast %union.anon* %5014 to i64*
  %5015 = load i64, i64* %PC.i1213
  %5016 = add i64 %5015, 10
  store i64 %5016, i64* %PC.i1213
  store i64 ptrtoint (%G__0x721e00_type* @G__0x721e00 to i64), i64* %RDI.i1214, align 8
  store %struct.Memory* %loadMem_433be3, %struct.Memory** %MEMORY
  %loadMem_433bed = load %struct.Memory*, %struct.Memory** %MEMORY
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5018 = getelementptr inbounds %struct.GPR, %struct.GPR* %5017, i32 0, i32 33
  %5019 = getelementptr inbounds %struct.Reg, %struct.Reg* %5018, i32 0, i32 0
  %PC.i1211 = bitcast %union.anon* %5019 to i64*
  %5020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5021 = getelementptr inbounds %struct.GPR, %struct.GPR* %5020, i32 0, i32 11
  %5022 = getelementptr inbounds %struct.Reg, %struct.Reg* %5021, i32 0, i32 0
  %RDI.i1212 = bitcast %union.anon* %5022 to i64*
  %5023 = load i64, i64* %RDI.i1212
  %5024 = load i64, i64* %PC.i1211
  %5025 = add i64 %5024, 7
  store i64 %5025, i64* %PC.i1211
  %5026 = add i64 3248, %5023
  store i64 %5026, i64* %RDI.i1212, align 8
  %5027 = icmp ult i64 %5026, %5023
  %5028 = icmp ult i64 %5026, 3248
  %5029 = or i1 %5027, %5028
  %5030 = zext i1 %5029 to i8
  %5031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5030, i8* %5031, align 1
  %5032 = trunc i64 %5026 to i32
  %5033 = and i32 %5032, 255
  %5034 = call i32 @llvm.ctpop.i32(i32 %5033)
  %5035 = trunc i32 %5034 to i8
  %5036 = and i8 %5035, 1
  %5037 = xor i8 %5036, 1
  %5038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5037, i8* %5038, align 1
  %5039 = xor i64 3248, %5023
  %5040 = xor i64 %5039, %5026
  %5041 = lshr i64 %5040, 4
  %5042 = trunc i64 %5041 to i8
  %5043 = and i8 %5042, 1
  %5044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5043, i8* %5044, align 1
  %5045 = icmp eq i64 %5026, 0
  %5046 = zext i1 %5045 to i8
  %5047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5046, i8* %5047, align 1
  %5048 = lshr i64 %5026, 63
  %5049 = trunc i64 %5048 to i8
  %5050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5049, i8* %5050, align 1
  %5051 = lshr i64 %5023, 63
  %5052 = xor i64 %5048, %5051
  %5053 = add i64 %5052, %5048
  %5054 = icmp eq i64 %5053, 2
  %5055 = zext i1 %5054 to i8
  %5056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5055, i8* %5056, align 1
  store %struct.Memory* %loadMem_433bed, %struct.Memory** %MEMORY
  %loadMem_433bf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5058 = getelementptr inbounds %struct.GPR, %struct.GPR* %5057, i32 0, i32 33
  %5059 = getelementptr inbounds %struct.Reg, %struct.Reg* %5058, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %5059 to i64*
  %5060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5061 = getelementptr inbounds %struct.GPR, %struct.GPR* %5060, i32 0, i32 1
  %5062 = getelementptr inbounds %struct.Reg, %struct.Reg* %5061, i32 0, i32 0
  %EAX.i1209 = bitcast %union.anon* %5062 to i32*
  %5063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5064 = getelementptr inbounds %struct.GPR, %struct.GPR* %5063, i32 0, i32 15
  %5065 = getelementptr inbounds %struct.Reg, %struct.Reg* %5064, i32 0, i32 0
  %RBP.i1210 = bitcast %union.anon* %5065 to i64*
  %5066 = load i64, i64* %RBP.i1210
  %5067 = sub i64 %5066, 128
  %5068 = load i32, i32* %EAX.i1209
  %5069 = zext i32 %5068 to i64
  %5070 = load i64, i64* %PC.i1208
  %5071 = add i64 %5070, 3
  store i64 %5071, i64* %PC.i1208
  %5072 = inttoptr i64 %5067 to i32*
  store i32 %5068, i32* %5072
  store %struct.Memory* %loadMem_433bf4, %struct.Memory** %MEMORY
  %loadMem1_433bf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5074 = getelementptr inbounds %struct.GPR, %struct.GPR* %5073, i32 0, i32 33
  %5075 = getelementptr inbounds %struct.Reg, %struct.Reg* %5074, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %5075 to i64*
  %5076 = load i64, i64* %PC.i1207
  %5077 = add i64 %5076, 18153
  %5078 = load i64, i64* %PC.i1207
  %5079 = add i64 %5078, 5
  %5080 = load i64, i64* %PC.i1207
  %5081 = add i64 %5080, 5
  store i64 %5081, i64* %PC.i1207
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5083 = load i64, i64* %5082, align 8
  %5084 = add i64 %5083, -8
  %5085 = inttoptr i64 %5084 to i64*
  store i64 %5079, i64* %5085
  store i64 %5084, i64* %5082, align 8
  %5086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5077, i64* %5086, align 8
  store %struct.Memory* %loadMem1_433bf7, %struct.Memory** %MEMORY
  %loadMem2_433bf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433bf7 = load i64, i64* %3
  %call2_433bf7 = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433bf7, %struct.Memory* %loadMem2_433bf7)
  store %struct.Memory* %call2_433bf7, %struct.Memory** %MEMORY
  %loadMem_433bfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5088 = getelementptr inbounds %struct.GPR, %struct.GPR* %5087, i32 0, i32 33
  %5089 = getelementptr inbounds %struct.Reg, %struct.Reg* %5088, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %5089 to i64*
  %5090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5091 = getelementptr inbounds %struct.GPR, %struct.GPR* %5090, i32 0, i32 11
  %5092 = getelementptr inbounds %struct.Reg, %struct.Reg* %5091, i32 0, i32 0
  %RDI.i1206 = bitcast %union.anon* %5092 to i64*
  %5093 = load i64, i64* %PC.i1205
  %5094 = add i64 %5093, 10
  store i64 %5094, i64* %PC.i1205
  store i64 ptrtoint (%G__0x721e00_type* @G__0x721e00 to i64), i64* %RDI.i1206, align 8
  store %struct.Memory* %loadMem_433bfc, %struct.Memory** %MEMORY
  %loadMem_433c06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5096 = getelementptr inbounds %struct.GPR, %struct.GPR* %5095, i32 0, i32 33
  %5097 = getelementptr inbounds %struct.Reg, %struct.Reg* %5096, i32 0, i32 0
  %PC.i1203 = bitcast %union.anon* %5097 to i64*
  %5098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5099 = getelementptr inbounds %struct.GPR, %struct.GPR* %5098, i32 0, i32 11
  %5100 = getelementptr inbounds %struct.Reg, %struct.Reg* %5099, i32 0, i32 0
  %RDI.i1204 = bitcast %union.anon* %5100 to i64*
  %5101 = load i64, i64* %RDI.i1204
  %5102 = load i64, i64* %PC.i1203
  %5103 = add i64 %5102, 7
  store i64 %5103, i64* %PC.i1203
  %5104 = add i64 3256, %5101
  store i64 %5104, i64* %RDI.i1204, align 8
  %5105 = icmp ult i64 %5104, %5101
  %5106 = icmp ult i64 %5104, 3256
  %5107 = or i1 %5105, %5106
  %5108 = zext i1 %5107 to i8
  %5109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5108, i8* %5109, align 1
  %5110 = trunc i64 %5104 to i32
  %5111 = and i32 %5110, 255
  %5112 = call i32 @llvm.ctpop.i32(i32 %5111)
  %5113 = trunc i32 %5112 to i8
  %5114 = and i8 %5113, 1
  %5115 = xor i8 %5114, 1
  %5116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5115, i8* %5116, align 1
  %5117 = xor i64 3256, %5101
  %5118 = xor i64 %5117, %5104
  %5119 = lshr i64 %5118, 4
  %5120 = trunc i64 %5119 to i8
  %5121 = and i8 %5120, 1
  %5122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5121, i8* %5122, align 1
  %5123 = icmp eq i64 %5104, 0
  %5124 = zext i1 %5123 to i8
  %5125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5124, i8* %5125, align 1
  %5126 = lshr i64 %5104, 63
  %5127 = trunc i64 %5126 to i8
  %5128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5127, i8* %5128, align 1
  %5129 = lshr i64 %5101, 63
  %5130 = xor i64 %5126, %5129
  %5131 = add i64 %5130, %5126
  %5132 = icmp eq i64 %5131, 2
  %5133 = zext i1 %5132 to i8
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5133, i8* %5134, align 1
  store %struct.Memory* %loadMem_433c06, %struct.Memory** %MEMORY
  %loadMem_433c0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5136 = getelementptr inbounds %struct.GPR, %struct.GPR* %5135, i32 0, i32 33
  %5137 = getelementptr inbounds %struct.Reg, %struct.Reg* %5136, i32 0, i32 0
  %PC.i1200 = bitcast %union.anon* %5137 to i64*
  %5138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5139 = getelementptr inbounds %struct.GPR, %struct.GPR* %5138, i32 0, i32 1
  %5140 = getelementptr inbounds %struct.Reg, %struct.Reg* %5139, i32 0, i32 0
  %EAX.i1201 = bitcast %union.anon* %5140 to i32*
  %5141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5142 = getelementptr inbounds %struct.GPR, %struct.GPR* %5141, i32 0, i32 15
  %5143 = getelementptr inbounds %struct.Reg, %struct.Reg* %5142, i32 0, i32 0
  %RBP.i1202 = bitcast %union.anon* %5143 to i64*
  %5144 = load i64, i64* %RBP.i1202
  %5145 = sub i64 %5144, 132
  %5146 = load i32, i32* %EAX.i1201
  %5147 = zext i32 %5146 to i64
  %5148 = load i64, i64* %PC.i1200
  %5149 = add i64 %5148, 6
  store i64 %5149, i64* %PC.i1200
  %5150 = inttoptr i64 %5145 to i32*
  store i32 %5146, i32* %5150
  store %struct.Memory* %loadMem_433c0d, %struct.Memory** %MEMORY
  %loadMem1_433c13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5152 = getelementptr inbounds %struct.GPR, %struct.GPR* %5151, i32 0, i32 33
  %5153 = getelementptr inbounds %struct.Reg, %struct.Reg* %5152, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %5153 to i64*
  %5154 = load i64, i64* %PC.i1199
  %5155 = add i64 %5154, 18125
  %5156 = load i64, i64* %PC.i1199
  %5157 = add i64 %5156, 5
  %5158 = load i64, i64* %PC.i1199
  %5159 = add i64 %5158, 5
  store i64 %5159, i64* %PC.i1199
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5161 = load i64, i64* %5160, align 8
  %5162 = add i64 %5161, -8
  %5163 = inttoptr i64 %5162 to i64*
  store i64 %5157, i64* %5163
  store i64 %5162, i64* %5160, align 8
  %5164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5155, i64* %5164, align 8
  store %struct.Memory* %loadMem1_433c13, %struct.Memory** %MEMORY
  %loadMem2_433c13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433c13 = load i64, i64* %3
  %call2_433c13 = call %struct.Memory* @sub_4382e0.get_mem_mv(%struct.State* %0, i64 %loadPC_433c13, %struct.Memory* %loadMem2_433c13)
  store %struct.Memory* %call2_433c13, %struct.Memory** %MEMORY
  %loadMem_433c18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5166 = getelementptr inbounds %struct.GPR, %struct.GPR* %5165, i32 0, i32 33
  %5167 = getelementptr inbounds %struct.Reg, %struct.Reg* %5166, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %5167 to i64*
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5169 = getelementptr inbounds %struct.GPR, %struct.GPR* %5168, i32 0, i32 1
  %5170 = getelementptr inbounds %struct.Reg, %struct.Reg* %5169, i32 0, i32 0
  %EAX.i1197 = bitcast %union.anon* %5170 to i32*
  %5171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5172 = getelementptr inbounds %struct.GPR, %struct.GPR* %5171, i32 0, i32 15
  %5173 = getelementptr inbounds %struct.Reg, %struct.Reg* %5172, i32 0, i32 0
  %RBP.i1198 = bitcast %union.anon* %5173 to i64*
  %5174 = load i64, i64* %RBP.i1198
  %5175 = sub i64 %5174, 136
  %5176 = load i32, i32* %EAX.i1197
  %5177 = zext i32 %5176 to i64
  %5178 = load i64, i64* %PC.i1196
  %5179 = add i64 %5178, 6
  store i64 %5179, i64* %PC.i1196
  %5180 = inttoptr i64 %5175 to i32*
  store i32 %5176, i32* %5180
  store %struct.Memory* %loadMem_433c18, %struct.Memory** %MEMORY
  br label %block_.L_433c1e

block_.L_433c1e:                                  ; preds = %block_433b4e, %block_433a6f
  %loadMem_433c1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5182 = getelementptr inbounds %struct.GPR, %struct.GPR* %5181, i32 0, i32 33
  %5183 = getelementptr inbounds %struct.Reg, %struct.Reg* %5182, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %5183 to i64*
  %5184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5185 = getelementptr inbounds %struct.GPR, %struct.GPR* %5184, i32 0, i32 1
  %5186 = getelementptr inbounds %struct.Reg, %struct.Reg* %5185, i32 0, i32 0
  %RAX.i1195 = bitcast %union.anon* %5186 to i64*
  %5187 = load i64, i64* %PC.i1194
  %5188 = add i64 %5187, 10
  store i64 %5188, i64* %PC.i1194
  store i64 ptrtoint (%G__0x710a60_type* @G__0x710a60 to i64), i64* %RAX.i1195, align 8
  store %struct.Memory* %loadMem_433c1e, %struct.Memory** %MEMORY
  %loadMem_433c28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5190 = getelementptr inbounds %struct.GPR, %struct.GPR* %5189, i32 0, i32 33
  %5191 = getelementptr inbounds %struct.Reg, %struct.Reg* %5190, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %5191 to i64*
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5193 = getelementptr inbounds %struct.GPR, %struct.GPR* %5192, i32 0, i32 1
  %5194 = getelementptr inbounds %struct.Reg, %struct.Reg* %5193, i32 0, i32 0
  %RAX.i1193 = bitcast %union.anon* %5194 to i64*
  %5195 = load i64, i64* %RAX.i1193
  %5196 = load i64, i64* %PC.i1192
  %5197 = add i64 %5196, 6
  store i64 %5197, i64* %PC.i1192
  %5198 = add i64 3080, %5195
  store i64 %5198, i64* %RAX.i1193, align 8
  %5199 = icmp ult i64 %5198, %5195
  %5200 = icmp ult i64 %5198, 3080
  %5201 = or i1 %5199, %5200
  %5202 = zext i1 %5201 to i8
  %5203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5202, i8* %5203, align 1
  %5204 = trunc i64 %5198 to i32
  %5205 = and i32 %5204, 255
  %5206 = call i32 @llvm.ctpop.i32(i32 %5205)
  %5207 = trunc i32 %5206 to i8
  %5208 = and i8 %5207, 1
  %5209 = xor i8 %5208, 1
  %5210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5209, i8* %5210, align 1
  %5211 = xor i64 3080, %5195
  %5212 = xor i64 %5211, %5198
  %5213 = lshr i64 %5212, 4
  %5214 = trunc i64 %5213 to i8
  %5215 = and i8 %5214, 1
  %5216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5215, i8* %5216, align 1
  %5217 = icmp eq i64 %5198, 0
  %5218 = zext i1 %5217 to i8
  %5219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5218, i8* %5219, align 1
  %5220 = lshr i64 %5198, 63
  %5221 = trunc i64 %5220 to i8
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5221, i8* %5222, align 1
  %5223 = lshr i64 %5195, 63
  %5224 = xor i64 %5220, %5223
  %5225 = add i64 %5224, %5220
  %5226 = icmp eq i64 %5225, 2
  %5227 = zext i1 %5226 to i8
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5227, i8* %5228, align 1
  store %struct.Memory* %loadMem_433c28, %struct.Memory** %MEMORY
  %loadMem_433c2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5230 = getelementptr inbounds %struct.GPR, %struct.GPR* %5229, i32 0, i32 33
  %5231 = getelementptr inbounds %struct.Reg, %struct.Reg* %5230, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %5231 to i64*
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5233 = getelementptr inbounds %struct.GPR, %struct.GPR* %5232, i32 0, i32 1
  %5234 = getelementptr inbounds %struct.Reg, %struct.Reg* %5233, i32 0, i32 0
  %RAX.i1190 = bitcast %union.anon* %5234 to i64*
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5236 = getelementptr inbounds %struct.GPR, %struct.GPR* %5235, i32 0, i32 11
  %5237 = getelementptr inbounds %struct.Reg, %struct.Reg* %5236, i32 0, i32 0
  %RDI.i1191 = bitcast %union.anon* %5237 to i64*
  %5238 = load i64, i64* %RAX.i1190
  %5239 = load i64, i64* %PC.i1189
  %5240 = add i64 %5239, 3
  store i64 %5240, i64* %PC.i1189
  store i64 %5238, i64* %RDI.i1191, align 8
  store %struct.Memory* %loadMem_433c2e, %struct.Memory** %MEMORY
  %loadMem1_433c31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5242 = getelementptr inbounds %struct.GPR, %struct.GPR* %5241, i32 0, i32 33
  %5243 = getelementptr inbounds %struct.Reg, %struct.Reg* %5242, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %5243 to i64*
  %5244 = load i64, i64* %PC.i1188
  %5245 = add i64 %5244, 18767
  %5246 = load i64, i64* %PC.i1188
  %5247 = add i64 %5246, 5
  %5248 = load i64, i64* %PC.i1188
  %5249 = add i64 %5248, 5
  store i64 %5249, i64* %PC.i1188
  %5250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5251 = load i64, i64* %5250, align 8
  %5252 = add i64 %5251, -8
  %5253 = inttoptr i64 %5252 to i64*
  store i64 %5247, i64* %5253
  store i64 %5252, i64* %5250, align 8
  %5254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5245, i64* %5254, align 8
  store %struct.Memory* %loadMem1_433c31, %struct.Memory** %MEMORY
  %loadMem2_433c31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433c31 = load i64, i64* %3
  %call2_433c31 = call %struct.Memory* @sub_438580.get_mem_ACcoeff(%struct.State* %0, i64 %loadPC_433c31, %struct.Memory* %loadMem2_433c31)
  store %struct.Memory* %call2_433c31, %struct.Memory** %MEMORY
  %loadMem_433c36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5256 = getelementptr inbounds %struct.GPR, %struct.GPR* %5255, i32 0, i32 33
  %5257 = getelementptr inbounds %struct.Reg, %struct.Reg* %5256, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %5257 to i64*
  %5258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5259 = getelementptr inbounds %struct.GPR, %struct.GPR* %5258, i32 0, i32 11
  %5260 = getelementptr inbounds %struct.Reg, %struct.Reg* %5259, i32 0, i32 0
  %RDI.i1187 = bitcast %union.anon* %5260 to i64*
  %5261 = load i64, i64* %PC.i1186
  %5262 = add i64 %5261, 10
  store i64 %5262, i64* %PC.i1186
  store i64 ptrtoint (%G__0x710a60_type* @G__0x710a60 to i64), i64* %RDI.i1187, align 8
  store %struct.Memory* %loadMem_433c36, %struct.Memory** %MEMORY
  %loadMem_433c40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5264 = getelementptr inbounds %struct.GPR, %struct.GPR* %5263, i32 0, i32 33
  %5265 = getelementptr inbounds %struct.Reg, %struct.Reg* %5264, i32 0, i32 0
  %PC.i1184 = bitcast %union.anon* %5265 to i64*
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5267 = getelementptr inbounds %struct.GPR, %struct.GPR* %5266, i32 0, i32 11
  %5268 = getelementptr inbounds %struct.Reg, %struct.Reg* %5267, i32 0, i32 0
  %RDI.i1185 = bitcast %union.anon* %5268 to i64*
  %5269 = load i64, i64* %RDI.i1185
  %5270 = load i64, i64* %PC.i1184
  %5271 = add i64 %5270, 7
  store i64 %5271, i64* %PC.i1184
  %5272 = add i64 3088, %5269
  store i64 %5272, i64* %RDI.i1185, align 8
  %5273 = icmp ult i64 %5272, %5269
  %5274 = icmp ult i64 %5272, 3088
  %5275 = or i1 %5273, %5274
  %5276 = zext i1 %5275 to i8
  %5277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5276, i8* %5277, align 1
  %5278 = trunc i64 %5272 to i32
  %5279 = and i32 %5278, 255
  %5280 = call i32 @llvm.ctpop.i32(i32 %5279)
  %5281 = trunc i32 %5280 to i8
  %5282 = and i8 %5281, 1
  %5283 = xor i8 %5282, 1
  %5284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5283, i8* %5284, align 1
  %5285 = xor i64 3088, %5269
  %5286 = xor i64 %5285, %5272
  %5287 = lshr i64 %5286, 4
  %5288 = trunc i64 %5287 to i8
  %5289 = and i8 %5288, 1
  %5290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5289, i8* %5290, align 1
  %5291 = icmp eq i64 %5272, 0
  %5292 = zext i1 %5291 to i8
  %5293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5292, i8* %5293, align 1
  %5294 = lshr i64 %5272, 63
  %5295 = trunc i64 %5294 to i8
  %5296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5295, i8* %5296, align 1
  %5297 = lshr i64 %5269, 63
  %5298 = xor i64 %5294, %5297
  %5299 = add i64 %5298, %5294
  %5300 = icmp eq i64 %5299, 2
  %5301 = zext i1 %5300 to i8
  %5302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5301, i8* %5302, align 1
  store %struct.Memory* %loadMem_433c40, %struct.Memory** %MEMORY
  %loadMem_433c47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5304 = getelementptr inbounds %struct.GPR, %struct.GPR* %5303, i32 0, i32 33
  %5305 = getelementptr inbounds %struct.Reg, %struct.Reg* %5304, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %5305 to i64*
  %5306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5307 = getelementptr inbounds %struct.GPR, %struct.GPR* %5306, i32 0, i32 1
  %5308 = getelementptr inbounds %struct.Reg, %struct.Reg* %5307, i32 0, i32 0
  %EAX.i1182 = bitcast %union.anon* %5308 to i32*
  %5309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5310 = getelementptr inbounds %struct.GPR, %struct.GPR* %5309, i32 0, i32 15
  %5311 = getelementptr inbounds %struct.Reg, %struct.Reg* %5310, i32 0, i32 0
  %RBP.i1183 = bitcast %union.anon* %5311 to i64*
  %5312 = load i64, i64* %RBP.i1183
  %5313 = sub i64 %5312, 140
  %5314 = load i32, i32* %EAX.i1182
  %5315 = zext i32 %5314 to i64
  %5316 = load i64, i64* %PC.i1181
  %5317 = add i64 %5316, 6
  store i64 %5317, i64* %PC.i1181
  %5318 = inttoptr i64 %5313 to i32*
  store i32 %5314, i32* %5318
  store %struct.Memory* %loadMem_433c47, %struct.Memory** %MEMORY
  %loadMem1_433c4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5320 = getelementptr inbounds %struct.GPR, %struct.GPR* %5319, i32 0, i32 33
  %5321 = getelementptr inbounds %struct.Reg, %struct.Reg* %5320, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %5321 to i64*
  %5322 = load i64, i64* %PC.i1180
  %5323 = add i64 %5322, 19171
  %5324 = load i64, i64* %PC.i1180
  %5325 = add i64 %5324, 5
  %5326 = load i64, i64* %PC.i1180
  %5327 = add i64 %5326, 5
  store i64 %5327, i64* %PC.i1180
  %5328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5329 = load i64, i64* %5328, align 8
  %5330 = add i64 %5329, -8
  %5331 = inttoptr i64 %5330 to i64*
  store i64 %5325, i64* %5331
  store i64 %5330, i64* %5328, align 8
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5323, i64* %5332, align 8
  store %struct.Memory* %loadMem1_433c4d, %struct.Memory** %MEMORY
  %loadMem2_433c4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433c4d = load i64, i64* %3
  %call2_433c4d = call %struct.Memory* @sub_438730.get_mem_DCcoeff(%struct.State* %0, i64 %loadPC_433c4d, %struct.Memory* %loadMem2_433c4d)
  store %struct.Memory* %call2_433c4d, %struct.Memory** %MEMORY
  %loadMem_433c52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5334 = getelementptr inbounds %struct.GPR, %struct.GPR* %5333, i32 0, i32 33
  %5335 = getelementptr inbounds %struct.Reg, %struct.Reg* %5334, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %5335 to i64*
  %5336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5337 = getelementptr inbounds %struct.GPR, %struct.GPR* %5336, i32 0, i32 11
  %5338 = getelementptr inbounds %struct.Reg, %struct.Reg* %5337, i32 0, i32 0
  %RDI.i1179 = bitcast %union.anon* %5338 to i64*
  %5339 = load i64, i64* %PC.i1178
  %5340 = add i64 %5339, 10
  store i64 %5340, i64* %PC.i1178
  store i64 ptrtoint (%G__0x6cd878_type* @G__0x6cd878 to i64), i64* %RDI.i1179, align 8
  store %struct.Memory* %loadMem_433c52, %struct.Memory** %MEMORY
  %loadMem_433c5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5342 = getelementptr inbounds %struct.GPR, %struct.GPR* %5341, i32 0, i32 33
  %5343 = getelementptr inbounds %struct.Reg, %struct.Reg* %5342, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %5343 to i64*
  %5344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5345 = getelementptr inbounds %struct.GPR, %struct.GPR* %5344, i32 0, i32 11
  %5346 = getelementptr inbounds %struct.Reg, %struct.Reg* %5345, i32 0, i32 0
  %RDI.i1177 = bitcast %union.anon* %5346 to i64*
  %5347 = load i64, i64* %RDI.i1177
  %5348 = load i64, i64* %PC.i1176
  %5349 = add i64 %5348, 7
  store i64 %5349, i64* %PC.i1176
  %5350 = add i64 3080, %5347
  store i64 %5350, i64* %RDI.i1177, align 8
  %5351 = icmp ult i64 %5350, %5347
  %5352 = icmp ult i64 %5350, 3080
  %5353 = or i1 %5351, %5352
  %5354 = zext i1 %5353 to i8
  %5355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5354, i8* %5355, align 1
  %5356 = trunc i64 %5350 to i32
  %5357 = and i32 %5356, 255
  %5358 = call i32 @llvm.ctpop.i32(i32 %5357)
  %5359 = trunc i32 %5358 to i8
  %5360 = and i8 %5359, 1
  %5361 = xor i8 %5360, 1
  %5362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5361, i8* %5362, align 1
  %5363 = xor i64 3080, %5347
  %5364 = xor i64 %5363, %5350
  %5365 = lshr i64 %5364, 4
  %5366 = trunc i64 %5365 to i8
  %5367 = and i8 %5366, 1
  %5368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5367, i8* %5368, align 1
  %5369 = icmp eq i64 %5350, 0
  %5370 = zext i1 %5369 to i8
  %5371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5370, i8* %5371, align 1
  %5372 = lshr i64 %5350, 63
  %5373 = trunc i64 %5372 to i8
  %5374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5373, i8* %5374, align 1
  %5375 = lshr i64 %5347, 63
  %5376 = xor i64 %5372, %5375
  %5377 = add i64 %5376, %5372
  %5378 = icmp eq i64 %5377, 2
  %5379 = zext i1 %5378 to i8
  %5380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5379, i8* %5380, align 1
  store %struct.Memory* %loadMem_433c5c, %struct.Memory** %MEMORY
  %loadMem_433c63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5382 = getelementptr inbounds %struct.GPR, %struct.GPR* %5381, i32 0, i32 33
  %5383 = getelementptr inbounds %struct.Reg, %struct.Reg* %5382, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %5383 to i64*
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5385 = getelementptr inbounds %struct.GPR, %struct.GPR* %5384, i32 0, i32 1
  %5386 = getelementptr inbounds %struct.Reg, %struct.Reg* %5385, i32 0, i32 0
  %EAX.i1174 = bitcast %union.anon* %5386 to i32*
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5388 = getelementptr inbounds %struct.GPR, %struct.GPR* %5387, i32 0, i32 15
  %5389 = getelementptr inbounds %struct.Reg, %struct.Reg* %5388, i32 0, i32 0
  %RBP.i1175 = bitcast %union.anon* %5389 to i64*
  %5390 = load i64, i64* %RBP.i1175
  %5391 = sub i64 %5390, 144
  %5392 = load i32, i32* %EAX.i1174
  %5393 = zext i32 %5392 to i64
  %5394 = load i64, i64* %PC.i1173
  %5395 = add i64 %5394, 6
  store i64 %5395, i64* %PC.i1173
  %5396 = inttoptr i64 %5391 to i32*
  store i32 %5392, i32* %5396
  store %struct.Memory* %loadMem_433c63, %struct.Memory** %MEMORY
  %loadMem1_433c69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5398 = getelementptr inbounds %struct.GPR, %struct.GPR* %5397, i32 0, i32 33
  %5399 = getelementptr inbounds %struct.Reg, %struct.Reg* %5398, i32 0, i32 0
  %PC.i1172 = bitcast %union.anon* %5399 to i64*
  %5400 = load i64, i64* %PC.i1172
  %5401 = add i64 %5400, 18711
  %5402 = load i64, i64* %PC.i1172
  %5403 = add i64 %5402, 5
  %5404 = load i64, i64* %PC.i1172
  %5405 = add i64 %5404, 5
  store i64 %5405, i64* %PC.i1172
  %5406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5407 = load i64, i64* %5406, align 8
  %5408 = add i64 %5407, -8
  %5409 = inttoptr i64 %5408 to i64*
  store i64 %5403, i64* %5409
  store i64 %5408, i64* %5406, align 8
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5401, i64* %5410, align 8
  store %struct.Memory* %loadMem1_433c69, %struct.Memory** %MEMORY
  %loadMem2_433c69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433c69 = load i64, i64* %3
  %call2_433c69 = call %struct.Memory* @sub_438580.get_mem_ACcoeff(%struct.State* %0, i64 %loadPC_433c69, %struct.Memory* %loadMem2_433c69)
  store %struct.Memory* %call2_433c69, %struct.Memory** %MEMORY
  %loadMem_433c6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5412 = getelementptr inbounds %struct.GPR, %struct.GPR* %5411, i32 0, i32 33
  %5413 = getelementptr inbounds %struct.Reg, %struct.Reg* %5412, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %5413 to i64*
  %5414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5415 = getelementptr inbounds %struct.GPR, %struct.GPR* %5414, i32 0, i32 11
  %5416 = getelementptr inbounds %struct.Reg, %struct.Reg* %5415, i32 0, i32 0
  %RDI.i1171 = bitcast %union.anon* %5416 to i64*
  %5417 = load i64, i64* %PC.i1170
  %5418 = add i64 %5417, 10
  store i64 %5418, i64* %PC.i1170
  store i64 ptrtoint (%G__0x6cd878_type* @G__0x6cd878 to i64), i64* %RDI.i1171, align 8
  store %struct.Memory* %loadMem_433c6e, %struct.Memory** %MEMORY
  %loadMem_433c78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5420 = getelementptr inbounds %struct.GPR, %struct.GPR* %5419, i32 0, i32 33
  %5421 = getelementptr inbounds %struct.Reg, %struct.Reg* %5420, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %5421 to i64*
  %5422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5423 = getelementptr inbounds %struct.GPR, %struct.GPR* %5422, i32 0, i32 11
  %5424 = getelementptr inbounds %struct.Reg, %struct.Reg* %5423, i32 0, i32 0
  %RDI.i1169 = bitcast %union.anon* %5424 to i64*
  %5425 = load i64, i64* %RDI.i1169
  %5426 = load i64, i64* %PC.i1168
  %5427 = add i64 %5426, 7
  store i64 %5427, i64* %PC.i1168
  %5428 = add i64 3088, %5425
  store i64 %5428, i64* %RDI.i1169, align 8
  %5429 = icmp ult i64 %5428, %5425
  %5430 = icmp ult i64 %5428, 3088
  %5431 = or i1 %5429, %5430
  %5432 = zext i1 %5431 to i8
  %5433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5432, i8* %5433, align 1
  %5434 = trunc i64 %5428 to i32
  %5435 = and i32 %5434, 255
  %5436 = call i32 @llvm.ctpop.i32(i32 %5435)
  %5437 = trunc i32 %5436 to i8
  %5438 = and i8 %5437, 1
  %5439 = xor i8 %5438, 1
  %5440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5439, i8* %5440, align 1
  %5441 = xor i64 3088, %5425
  %5442 = xor i64 %5441, %5428
  %5443 = lshr i64 %5442, 4
  %5444 = trunc i64 %5443 to i8
  %5445 = and i8 %5444, 1
  %5446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5445, i8* %5446, align 1
  %5447 = icmp eq i64 %5428, 0
  %5448 = zext i1 %5447 to i8
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5448, i8* %5449, align 1
  %5450 = lshr i64 %5428, 63
  %5451 = trunc i64 %5450 to i8
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5451, i8* %5452, align 1
  %5453 = lshr i64 %5425, 63
  %5454 = xor i64 %5450, %5453
  %5455 = add i64 %5454, %5450
  %5456 = icmp eq i64 %5455, 2
  %5457 = zext i1 %5456 to i8
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5457, i8* %5458, align 1
  store %struct.Memory* %loadMem_433c78, %struct.Memory** %MEMORY
  %loadMem_433c7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5460 = getelementptr inbounds %struct.GPR, %struct.GPR* %5459, i32 0, i32 33
  %5461 = getelementptr inbounds %struct.Reg, %struct.Reg* %5460, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %5461 to i64*
  %5462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5463 = getelementptr inbounds %struct.GPR, %struct.GPR* %5462, i32 0, i32 1
  %5464 = getelementptr inbounds %struct.Reg, %struct.Reg* %5463, i32 0, i32 0
  %EAX.i1166 = bitcast %union.anon* %5464 to i32*
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5466 = getelementptr inbounds %struct.GPR, %struct.GPR* %5465, i32 0, i32 15
  %5467 = getelementptr inbounds %struct.Reg, %struct.Reg* %5466, i32 0, i32 0
  %RBP.i1167 = bitcast %union.anon* %5467 to i64*
  %5468 = load i64, i64* %RBP.i1167
  %5469 = sub i64 %5468, 148
  %5470 = load i32, i32* %EAX.i1166
  %5471 = zext i32 %5470 to i64
  %5472 = load i64, i64* %PC.i1165
  %5473 = add i64 %5472, 6
  store i64 %5473, i64* %PC.i1165
  %5474 = inttoptr i64 %5469 to i32*
  store i32 %5470, i32* %5474
  store %struct.Memory* %loadMem_433c7f, %struct.Memory** %MEMORY
  %loadMem1_433c85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5476 = getelementptr inbounds %struct.GPR, %struct.GPR* %5475, i32 0, i32 33
  %5477 = getelementptr inbounds %struct.Reg, %struct.Reg* %5476, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %5477 to i64*
  %5478 = load i64, i64* %PC.i1164
  %5479 = add i64 %5478, 19115
  %5480 = load i64, i64* %PC.i1164
  %5481 = add i64 %5480, 5
  %5482 = load i64, i64* %PC.i1164
  %5483 = add i64 %5482, 5
  store i64 %5483, i64* %PC.i1164
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5485 = load i64, i64* %5484, align 8
  %5486 = add i64 %5485, -8
  %5487 = inttoptr i64 %5486 to i64*
  store i64 %5481, i64* %5487
  store i64 %5486, i64* %5484, align 8
  %5488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5479, i64* %5488, align 8
  store %struct.Memory* %loadMem1_433c85, %struct.Memory** %MEMORY
  %loadMem2_433c85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433c85 = load i64, i64* %3
  %call2_433c85 = call %struct.Memory* @sub_438730.get_mem_DCcoeff(%struct.State* %0, i64 %loadPC_433c85, %struct.Memory* %loadMem2_433c85)
  store %struct.Memory* %call2_433c85, %struct.Memory** %MEMORY
  %loadMem_433c8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5490 = getelementptr inbounds %struct.GPR, %struct.GPR* %5489, i32 0, i32 33
  %5491 = getelementptr inbounds %struct.Reg, %struct.Reg* %5490, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %5491 to i64*
  %5492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5493 = getelementptr inbounds %struct.GPR, %struct.GPR* %5492, i32 0, i32 11
  %5494 = getelementptr inbounds %struct.Reg, %struct.Reg* %5493, i32 0, i32 0
  %RDI.i1163 = bitcast %union.anon* %5494 to i64*
  %5495 = load i64, i64* %PC.i1162
  %5496 = add i64 %5495, 10
  store i64 %5496, i64* %PC.i1162
  store i64 ptrtoint (%G__0x6d2198_type* @G__0x6d2198 to i64), i64* %RDI.i1163, align 8
  store %struct.Memory* %loadMem_433c8a, %struct.Memory** %MEMORY
  %loadMem_433c94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5498 = getelementptr inbounds %struct.GPR, %struct.GPR* %5497, i32 0, i32 33
  %5499 = getelementptr inbounds %struct.Reg, %struct.Reg* %5498, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %5499 to i64*
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5501 = getelementptr inbounds %struct.GPR, %struct.GPR* %5500, i32 0, i32 11
  %5502 = getelementptr inbounds %struct.Reg, %struct.Reg* %5501, i32 0, i32 0
  %RDI.i1161 = bitcast %union.anon* %5502 to i64*
  %5503 = load i64, i64* %RDI.i1161
  %5504 = load i64, i64* %PC.i1160
  %5505 = add i64 %5504, 7
  store i64 %5505, i64* %PC.i1160
  %5506 = add i64 3080, %5503
  store i64 %5506, i64* %RDI.i1161, align 8
  %5507 = icmp ult i64 %5506, %5503
  %5508 = icmp ult i64 %5506, 3080
  %5509 = or i1 %5507, %5508
  %5510 = zext i1 %5509 to i8
  %5511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5510, i8* %5511, align 1
  %5512 = trunc i64 %5506 to i32
  %5513 = and i32 %5512, 255
  %5514 = call i32 @llvm.ctpop.i32(i32 %5513)
  %5515 = trunc i32 %5514 to i8
  %5516 = and i8 %5515, 1
  %5517 = xor i8 %5516, 1
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5517, i8* %5518, align 1
  %5519 = xor i64 3080, %5503
  %5520 = xor i64 %5519, %5506
  %5521 = lshr i64 %5520, 4
  %5522 = trunc i64 %5521 to i8
  %5523 = and i8 %5522, 1
  %5524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5523, i8* %5524, align 1
  %5525 = icmp eq i64 %5506, 0
  %5526 = zext i1 %5525 to i8
  %5527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5526, i8* %5527, align 1
  %5528 = lshr i64 %5506, 63
  %5529 = trunc i64 %5528 to i8
  %5530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5529, i8* %5530, align 1
  %5531 = lshr i64 %5503, 63
  %5532 = xor i64 %5528, %5531
  %5533 = add i64 %5532, %5528
  %5534 = icmp eq i64 %5533, 2
  %5535 = zext i1 %5534 to i8
  %5536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5535, i8* %5536, align 1
  store %struct.Memory* %loadMem_433c94, %struct.Memory** %MEMORY
  %loadMem_433c9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5538 = getelementptr inbounds %struct.GPR, %struct.GPR* %5537, i32 0, i32 33
  %5539 = getelementptr inbounds %struct.Reg, %struct.Reg* %5538, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %5539 to i64*
  %5540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5541 = getelementptr inbounds %struct.GPR, %struct.GPR* %5540, i32 0, i32 1
  %5542 = getelementptr inbounds %struct.Reg, %struct.Reg* %5541, i32 0, i32 0
  %EAX.i1158 = bitcast %union.anon* %5542 to i32*
  %5543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5544 = getelementptr inbounds %struct.GPR, %struct.GPR* %5543, i32 0, i32 15
  %5545 = getelementptr inbounds %struct.Reg, %struct.Reg* %5544, i32 0, i32 0
  %RBP.i1159 = bitcast %union.anon* %5545 to i64*
  %5546 = load i64, i64* %RBP.i1159
  %5547 = sub i64 %5546, 152
  %5548 = load i32, i32* %EAX.i1158
  %5549 = zext i32 %5548 to i64
  %5550 = load i64, i64* %PC.i1157
  %5551 = add i64 %5550, 6
  store i64 %5551, i64* %PC.i1157
  %5552 = inttoptr i64 %5547 to i32*
  store i32 %5548, i32* %5552
  store %struct.Memory* %loadMem_433c9b, %struct.Memory** %MEMORY
  %loadMem1_433ca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5554 = getelementptr inbounds %struct.GPR, %struct.GPR* %5553, i32 0, i32 33
  %5555 = getelementptr inbounds %struct.Reg, %struct.Reg* %5554, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %5555 to i64*
  %5556 = load i64, i64* %PC.i1156
  %5557 = add i64 %5556, 18655
  %5558 = load i64, i64* %PC.i1156
  %5559 = add i64 %5558, 5
  %5560 = load i64, i64* %PC.i1156
  %5561 = add i64 %5560, 5
  store i64 %5561, i64* %PC.i1156
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5563 = load i64, i64* %5562, align 8
  %5564 = add i64 %5563, -8
  %5565 = inttoptr i64 %5564 to i64*
  store i64 %5559, i64* %5565
  store i64 %5564, i64* %5562, align 8
  %5566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5557, i64* %5566, align 8
  store %struct.Memory* %loadMem1_433ca1, %struct.Memory** %MEMORY
  %loadMem2_433ca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433ca1 = load i64, i64* %3
  %call2_433ca1 = call %struct.Memory* @sub_438580.get_mem_ACcoeff(%struct.State* %0, i64 %loadPC_433ca1, %struct.Memory* %loadMem2_433ca1)
  store %struct.Memory* %call2_433ca1, %struct.Memory** %MEMORY
  %loadMem_433ca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5568 = getelementptr inbounds %struct.GPR, %struct.GPR* %5567, i32 0, i32 33
  %5569 = getelementptr inbounds %struct.Reg, %struct.Reg* %5568, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %5569 to i64*
  %5570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5571 = getelementptr inbounds %struct.GPR, %struct.GPR* %5570, i32 0, i32 11
  %5572 = getelementptr inbounds %struct.Reg, %struct.Reg* %5571, i32 0, i32 0
  %RDI.i1155 = bitcast %union.anon* %5572 to i64*
  %5573 = load i64, i64* %PC.i1154
  %5574 = add i64 %5573, 10
  store i64 %5574, i64* %PC.i1154
  store i64 ptrtoint (%G__0x6d2198_type* @G__0x6d2198 to i64), i64* %RDI.i1155, align 8
  store %struct.Memory* %loadMem_433ca6, %struct.Memory** %MEMORY
  %loadMem_433cb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5576 = getelementptr inbounds %struct.GPR, %struct.GPR* %5575, i32 0, i32 33
  %5577 = getelementptr inbounds %struct.Reg, %struct.Reg* %5576, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %5577 to i64*
  %5578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5579 = getelementptr inbounds %struct.GPR, %struct.GPR* %5578, i32 0, i32 11
  %5580 = getelementptr inbounds %struct.Reg, %struct.Reg* %5579, i32 0, i32 0
  %RDI.i1153 = bitcast %union.anon* %5580 to i64*
  %5581 = load i64, i64* %RDI.i1153
  %5582 = load i64, i64* %PC.i1152
  %5583 = add i64 %5582, 7
  store i64 %5583, i64* %PC.i1152
  %5584 = add i64 3088, %5581
  store i64 %5584, i64* %RDI.i1153, align 8
  %5585 = icmp ult i64 %5584, %5581
  %5586 = icmp ult i64 %5584, 3088
  %5587 = or i1 %5585, %5586
  %5588 = zext i1 %5587 to i8
  %5589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5588, i8* %5589, align 1
  %5590 = trunc i64 %5584 to i32
  %5591 = and i32 %5590, 255
  %5592 = call i32 @llvm.ctpop.i32(i32 %5591)
  %5593 = trunc i32 %5592 to i8
  %5594 = and i8 %5593, 1
  %5595 = xor i8 %5594, 1
  %5596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5595, i8* %5596, align 1
  %5597 = xor i64 3088, %5581
  %5598 = xor i64 %5597, %5584
  %5599 = lshr i64 %5598, 4
  %5600 = trunc i64 %5599 to i8
  %5601 = and i8 %5600, 1
  %5602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5601, i8* %5602, align 1
  %5603 = icmp eq i64 %5584, 0
  %5604 = zext i1 %5603 to i8
  %5605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5604, i8* %5605, align 1
  %5606 = lshr i64 %5584, 63
  %5607 = trunc i64 %5606 to i8
  %5608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5607, i8* %5608, align 1
  %5609 = lshr i64 %5581, 63
  %5610 = xor i64 %5606, %5609
  %5611 = add i64 %5610, %5606
  %5612 = icmp eq i64 %5611, 2
  %5613 = zext i1 %5612 to i8
  %5614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5613, i8* %5614, align 1
  store %struct.Memory* %loadMem_433cb0, %struct.Memory** %MEMORY
  %loadMem_433cb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5616 = getelementptr inbounds %struct.GPR, %struct.GPR* %5615, i32 0, i32 33
  %5617 = getelementptr inbounds %struct.Reg, %struct.Reg* %5616, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %5617 to i64*
  %5618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5619 = getelementptr inbounds %struct.GPR, %struct.GPR* %5618, i32 0, i32 1
  %5620 = getelementptr inbounds %struct.Reg, %struct.Reg* %5619, i32 0, i32 0
  %EAX.i1150 = bitcast %union.anon* %5620 to i32*
  %5621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5622 = getelementptr inbounds %struct.GPR, %struct.GPR* %5621, i32 0, i32 15
  %5623 = getelementptr inbounds %struct.Reg, %struct.Reg* %5622, i32 0, i32 0
  %RBP.i1151 = bitcast %union.anon* %5623 to i64*
  %5624 = load i64, i64* %RBP.i1151
  %5625 = sub i64 %5624, 156
  %5626 = load i32, i32* %EAX.i1150
  %5627 = zext i32 %5626 to i64
  %5628 = load i64, i64* %PC.i1149
  %5629 = add i64 %5628, 6
  store i64 %5629, i64* %PC.i1149
  %5630 = inttoptr i64 %5625 to i32*
  store i32 %5626, i32* %5630
  store %struct.Memory* %loadMem_433cb7, %struct.Memory** %MEMORY
  %loadMem1_433cbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5632 = getelementptr inbounds %struct.GPR, %struct.GPR* %5631, i32 0, i32 33
  %5633 = getelementptr inbounds %struct.Reg, %struct.Reg* %5632, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %5633 to i64*
  %5634 = load i64, i64* %PC.i1148
  %5635 = add i64 %5634, 19059
  %5636 = load i64, i64* %PC.i1148
  %5637 = add i64 %5636, 5
  %5638 = load i64, i64* %PC.i1148
  %5639 = add i64 %5638, 5
  store i64 %5639, i64* %PC.i1148
  %5640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5641 = load i64, i64* %5640, align 8
  %5642 = add i64 %5641, -8
  %5643 = inttoptr i64 %5642 to i64*
  store i64 %5637, i64* %5643
  store i64 %5642, i64* %5640, align 8
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5635, i64* %5644, align 8
  store %struct.Memory* %loadMem1_433cbd, %struct.Memory** %MEMORY
  %loadMem2_433cbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433cbd = load i64, i64* %3
  %call2_433cbd = call %struct.Memory* @sub_438730.get_mem_DCcoeff(%struct.State* %0, i64 %loadPC_433cbd, %struct.Memory* %loadMem2_433cbd)
  store %struct.Memory* %call2_433cbd, %struct.Memory** %MEMORY
  %loadMem_433cc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5646 = getelementptr inbounds %struct.GPR, %struct.GPR* %5645, i32 0, i32 33
  %5647 = getelementptr inbounds %struct.Reg, %struct.Reg* %5646, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %5647 to i64*
  %5648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5649 = getelementptr inbounds %struct.GPR, %struct.GPR* %5648, i32 0, i32 11
  %5650 = getelementptr inbounds %struct.Reg, %struct.Reg* %5649, i32 0, i32 0
  %RDI.i1147 = bitcast %union.anon* %5650 to i64*
  %5651 = load i64, i64* %PC.i1146
  %5652 = add i64 %5651, 10
  store i64 %5652, i64* %PC.i1146
  store i64 ptrtoint (%G__0x721e00_type* @G__0x721e00 to i64), i64* %RDI.i1147, align 8
  store %struct.Memory* %loadMem_433cc2, %struct.Memory** %MEMORY
  %loadMem_433ccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5654 = getelementptr inbounds %struct.GPR, %struct.GPR* %5653, i32 0, i32 33
  %5655 = getelementptr inbounds %struct.Reg, %struct.Reg* %5654, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %5655 to i64*
  %5656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5657 = getelementptr inbounds %struct.GPR, %struct.GPR* %5656, i32 0, i32 11
  %5658 = getelementptr inbounds %struct.Reg, %struct.Reg* %5657, i32 0, i32 0
  %RDI.i1145 = bitcast %union.anon* %5658 to i64*
  %5659 = load i64, i64* %RDI.i1145
  %5660 = load i64, i64* %PC.i1144
  %5661 = add i64 %5660, 7
  store i64 %5661, i64* %PC.i1144
  %5662 = add i64 3080, %5659
  store i64 %5662, i64* %RDI.i1145, align 8
  %5663 = icmp ult i64 %5662, %5659
  %5664 = icmp ult i64 %5662, 3080
  %5665 = or i1 %5663, %5664
  %5666 = zext i1 %5665 to i8
  %5667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5666, i8* %5667, align 1
  %5668 = trunc i64 %5662 to i32
  %5669 = and i32 %5668, 255
  %5670 = call i32 @llvm.ctpop.i32(i32 %5669)
  %5671 = trunc i32 %5670 to i8
  %5672 = and i8 %5671, 1
  %5673 = xor i8 %5672, 1
  %5674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5673, i8* %5674, align 1
  %5675 = xor i64 3080, %5659
  %5676 = xor i64 %5675, %5662
  %5677 = lshr i64 %5676, 4
  %5678 = trunc i64 %5677 to i8
  %5679 = and i8 %5678, 1
  %5680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5679, i8* %5680, align 1
  %5681 = icmp eq i64 %5662, 0
  %5682 = zext i1 %5681 to i8
  %5683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5682, i8* %5683, align 1
  %5684 = lshr i64 %5662, 63
  %5685 = trunc i64 %5684 to i8
  %5686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5685, i8* %5686, align 1
  %5687 = lshr i64 %5659, 63
  %5688 = xor i64 %5684, %5687
  %5689 = add i64 %5688, %5684
  %5690 = icmp eq i64 %5689, 2
  %5691 = zext i1 %5690 to i8
  %5692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5691, i8* %5692, align 1
  store %struct.Memory* %loadMem_433ccc, %struct.Memory** %MEMORY
  %loadMem_433cd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5694 = getelementptr inbounds %struct.GPR, %struct.GPR* %5693, i32 0, i32 33
  %5695 = getelementptr inbounds %struct.Reg, %struct.Reg* %5694, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %5695 to i64*
  %5696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5697 = getelementptr inbounds %struct.GPR, %struct.GPR* %5696, i32 0, i32 1
  %5698 = getelementptr inbounds %struct.Reg, %struct.Reg* %5697, i32 0, i32 0
  %EAX.i1142 = bitcast %union.anon* %5698 to i32*
  %5699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5700 = getelementptr inbounds %struct.GPR, %struct.GPR* %5699, i32 0, i32 15
  %5701 = getelementptr inbounds %struct.Reg, %struct.Reg* %5700, i32 0, i32 0
  %RBP.i1143 = bitcast %union.anon* %5701 to i64*
  %5702 = load i64, i64* %RBP.i1143
  %5703 = sub i64 %5702, 160
  %5704 = load i32, i32* %EAX.i1142
  %5705 = zext i32 %5704 to i64
  %5706 = load i64, i64* %PC.i1141
  %5707 = add i64 %5706, 6
  store i64 %5707, i64* %PC.i1141
  %5708 = inttoptr i64 %5703 to i32*
  store i32 %5704, i32* %5708
  store %struct.Memory* %loadMem_433cd3, %struct.Memory** %MEMORY
  %loadMem1_433cd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5710 = getelementptr inbounds %struct.GPR, %struct.GPR* %5709, i32 0, i32 33
  %5711 = getelementptr inbounds %struct.Reg, %struct.Reg* %5710, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %5711 to i64*
  %5712 = load i64, i64* %PC.i1140
  %5713 = add i64 %5712, 18599
  %5714 = load i64, i64* %PC.i1140
  %5715 = add i64 %5714, 5
  %5716 = load i64, i64* %PC.i1140
  %5717 = add i64 %5716, 5
  store i64 %5717, i64* %PC.i1140
  %5718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5719 = load i64, i64* %5718, align 8
  %5720 = add i64 %5719, -8
  %5721 = inttoptr i64 %5720 to i64*
  store i64 %5715, i64* %5721
  store i64 %5720, i64* %5718, align 8
  %5722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5713, i64* %5722, align 8
  store %struct.Memory* %loadMem1_433cd9, %struct.Memory** %MEMORY
  %loadMem2_433cd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433cd9 = load i64, i64* %3
  %call2_433cd9 = call %struct.Memory* @sub_438580.get_mem_ACcoeff(%struct.State* %0, i64 %loadPC_433cd9, %struct.Memory* %loadMem2_433cd9)
  store %struct.Memory* %call2_433cd9, %struct.Memory** %MEMORY
  %loadMem_433cde = load %struct.Memory*, %struct.Memory** %MEMORY
  %5723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5724 = getelementptr inbounds %struct.GPR, %struct.GPR* %5723, i32 0, i32 33
  %5725 = getelementptr inbounds %struct.Reg, %struct.Reg* %5724, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %5725 to i64*
  %5726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5727 = getelementptr inbounds %struct.GPR, %struct.GPR* %5726, i32 0, i32 11
  %5728 = getelementptr inbounds %struct.Reg, %struct.Reg* %5727, i32 0, i32 0
  %RDI.i1139 = bitcast %union.anon* %5728 to i64*
  %5729 = load i64, i64* %PC.i1138
  %5730 = add i64 %5729, 10
  store i64 %5730, i64* %PC.i1138
  store i64 ptrtoint (%G__0x721e00_type* @G__0x721e00 to i64), i64* %RDI.i1139, align 8
  store %struct.Memory* %loadMem_433cde, %struct.Memory** %MEMORY
  %loadMem_433ce8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5732 = getelementptr inbounds %struct.GPR, %struct.GPR* %5731, i32 0, i32 33
  %5733 = getelementptr inbounds %struct.Reg, %struct.Reg* %5732, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %5733 to i64*
  %5734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5735 = getelementptr inbounds %struct.GPR, %struct.GPR* %5734, i32 0, i32 11
  %5736 = getelementptr inbounds %struct.Reg, %struct.Reg* %5735, i32 0, i32 0
  %RDI.i1137 = bitcast %union.anon* %5736 to i64*
  %5737 = load i64, i64* %RDI.i1137
  %5738 = load i64, i64* %PC.i1136
  %5739 = add i64 %5738, 7
  store i64 %5739, i64* %PC.i1136
  %5740 = add i64 3088, %5737
  store i64 %5740, i64* %RDI.i1137, align 8
  %5741 = icmp ult i64 %5740, %5737
  %5742 = icmp ult i64 %5740, 3088
  %5743 = or i1 %5741, %5742
  %5744 = zext i1 %5743 to i8
  %5745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5744, i8* %5745, align 1
  %5746 = trunc i64 %5740 to i32
  %5747 = and i32 %5746, 255
  %5748 = call i32 @llvm.ctpop.i32(i32 %5747)
  %5749 = trunc i32 %5748 to i8
  %5750 = and i8 %5749, 1
  %5751 = xor i8 %5750, 1
  %5752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5751, i8* %5752, align 1
  %5753 = xor i64 3088, %5737
  %5754 = xor i64 %5753, %5740
  %5755 = lshr i64 %5754, 4
  %5756 = trunc i64 %5755 to i8
  %5757 = and i8 %5756, 1
  %5758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5757, i8* %5758, align 1
  %5759 = icmp eq i64 %5740, 0
  %5760 = zext i1 %5759 to i8
  %5761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5760, i8* %5761, align 1
  %5762 = lshr i64 %5740, 63
  %5763 = trunc i64 %5762 to i8
  %5764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5763, i8* %5764, align 1
  %5765 = lshr i64 %5737, 63
  %5766 = xor i64 %5762, %5765
  %5767 = add i64 %5766, %5762
  %5768 = icmp eq i64 %5767, 2
  %5769 = zext i1 %5768 to i8
  %5770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5769, i8* %5770, align 1
  store %struct.Memory* %loadMem_433ce8, %struct.Memory** %MEMORY
  %loadMem_433cef = load %struct.Memory*, %struct.Memory** %MEMORY
  %5771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5772 = getelementptr inbounds %struct.GPR, %struct.GPR* %5771, i32 0, i32 33
  %5773 = getelementptr inbounds %struct.Reg, %struct.Reg* %5772, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %5773 to i64*
  %5774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5775 = getelementptr inbounds %struct.GPR, %struct.GPR* %5774, i32 0, i32 1
  %5776 = getelementptr inbounds %struct.Reg, %struct.Reg* %5775, i32 0, i32 0
  %EAX.i1134 = bitcast %union.anon* %5776 to i32*
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5778 = getelementptr inbounds %struct.GPR, %struct.GPR* %5777, i32 0, i32 15
  %5779 = getelementptr inbounds %struct.Reg, %struct.Reg* %5778, i32 0, i32 0
  %RBP.i1135 = bitcast %union.anon* %5779 to i64*
  %5780 = load i64, i64* %RBP.i1135
  %5781 = sub i64 %5780, 164
  %5782 = load i32, i32* %EAX.i1134
  %5783 = zext i32 %5782 to i64
  %5784 = load i64, i64* %PC.i1133
  %5785 = add i64 %5784, 6
  store i64 %5785, i64* %PC.i1133
  %5786 = inttoptr i64 %5781 to i32*
  store i32 %5782, i32* %5786
  store %struct.Memory* %loadMem_433cef, %struct.Memory** %MEMORY
  %loadMem1_433cf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5788 = getelementptr inbounds %struct.GPR, %struct.GPR* %5787, i32 0, i32 33
  %5789 = getelementptr inbounds %struct.Reg, %struct.Reg* %5788, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %5789 to i64*
  %5790 = load i64, i64* %PC.i1132
  %5791 = add i64 %5790, 19003
  %5792 = load i64, i64* %PC.i1132
  %5793 = add i64 %5792, 5
  %5794 = load i64, i64* %PC.i1132
  %5795 = add i64 %5794, 5
  store i64 %5795, i64* %PC.i1132
  %5796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5797 = load i64, i64* %5796, align 8
  %5798 = add i64 %5797, -8
  %5799 = inttoptr i64 %5798 to i64*
  store i64 %5793, i64* %5799
  store i64 %5798, i64* %5796, align 8
  %5800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5791, i64* %5800, align 8
  store %struct.Memory* %loadMem1_433cf5, %struct.Memory** %MEMORY
  %loadMem2_433cf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433cf5 = load i64, i64* %3
  %call2_433cf5 = call %struct.Memory* @sub_438730.get_mem_DCcoeff(%struct.State* %0, i64 %loadPC_433cf5, %struct.Memory* %loadMem2_433cf5)
  store %struct.Memory* %call2_433cf5, %struct.Memory** %MEMORY
  %loadMem_433cfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5802 = getelementptr inbounds %struct.GPR, %struct.GPR* %5801, i32 0, i32 33
  %5803 = getelementptr inbounds %struct.Reg, %struct.Reg* %5802, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %5803 to i64*
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5805 = getelementptr inbounds %struct.GPR, %struct.GPR* %5804, i32 0, i32 1
  %5806 = getelementptr inbounds %struct.Reg, %struct.Reg* %5805, i32 0, i32 0
  %EAX.i1130 = bitcast %union.anon* %5806 to i32*
  %5807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5808 = getelementptr inbounds %struct.GPR, %struct.GPR* %5807, i32 0, i32 15
  %5809 = getelementptr inbounds %struct.Reg, %struct.Reg* %5808, i32 0, i32 0
  %RBP.i1131 = bitcast %union.anon* %5809 to i64*
  %5810 = load i64, i64* %RBP.i1131
  %5811 = sub i64 %5810, 168
  %5812 = load i32, i32* %EAX.i1130
  %5813 = zext i32 %5812 to i64
  %5814 = load i64, i64* %PC.i1129
  %5815 = add i64 %5814, 6
  store i64 %5815, i64* %PC.i1129
  %5816 = inttoptr i64 %5811 to i32*
  store i32 %5812, i32* %5816
  store %struct.Memory* %loadMem_433cfa, %struct.Memory** %MEMORY
  br label %block_.L_433d00

block_.L_433d00:                                  ; preds = %block_.L_433c1e, %block_.L_433a2a
  %loadMem_433d00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5818 = getelementptr inbounds %struct.GPR, %struct.GPR* %5817, i32 0, i32 33
  %5819 = getelementptr inbounds %struct.Reg, %struct.Reg* %5818, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %5819 to i64*
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5821 = getelementptr inbounds %struct.GPR, %struct.GPR* %5820, i32 0, i32 1
  %5822 = getelementptr inbounds %struct.Reg, %struct.Reg* %5821, i32 0, i32 0
  %RAX.i1128 = bitcast %union.anon* %5822 to i64*
  %5823 = load i64, i64* %PC.i1127
  %5824 = add i64 %5823, 8
  store i64 %5824, i64* %PC.i1127
  %5825 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5825, i64* %RAX.i1128, align 8
  store %struct.Memory* %loadMem_433d00, %struct.Memory** %MEMORY
  %loadMem_433d08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5827 = getelementptr inbounds %struct.GPR, %struct.GPR* %5826, i32 0, i32 33
  %5828 = getelementptr inbounds %struct.Reg, %struct.Reg* %5827, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %5828 to i64*
  %5829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5830 = getelementptr inbounds %struct.GPR, %struct.GPR* %5829, i32 0, i32 1
  %5831 = getelementptr inbounds %struct.Reg, %struct.Reg* %5830, i32 0, i32 0
  %RAX.i1125 = bitcast %union.anon* %5831 to i64*
  %5832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5833 = getelementptr inbounds %struct.GPR, %struct.GPR* %5832, i32 0, i32 5
  %5834 = getelementptr inbounds %struct.Reg, %struct.Reg* %5833, i32 0, i32 0
  %RCX.i1126 = bitcast %union.anon* %5834 to i64*
  %5835 = load i64, i64* %RAX.i1125
  %5836 = add i64 %5835, 72684
  %5837 = load i64, i64* %PC.i1124
  %5838 = add i64 %5837, 6
  store i64 %5838, i64* %PC.i1124
  %5839 = inttoptr i64 %5836 to i32*
  %5840 = load i32, i32* %5839
  %5841 = zext i32 %5840 to i64
  store i64 %5841, i64* %RCX.i1126, align 8
  store %struct.Memory* %loadMem_433d08, %struct.Memory** %MEMORY
  %loadMem_433d0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5843 = getelementptr inbounds %struct.GPR, %struct.GPR* %5842, i32 0, i32 33
  %5844 = getelementptr inbounds %struct.Reg, %struct.Reg* %5843, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %5844 to i64*
  %5845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5846 = getelementptr inbounds %struct.GPR, %struct.GPR* %5845, i32 0, i32 1
  %5847 = getelementptr inbounds %struct.Reg, %struct.Reg* %5846, i32 0, i32 0
  %RAX.i1123 = bitcast %union.anon* %5847 to i64*
  %5848 = load i64, i64* %PC.i1122
  %5849 = add i64 %5848, 8
  store i64 %5849, i64* %PC.i1122
  %5850 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5850, i64* %RAX.i1123, align 8
  store %struct.Memory* %loadMem_433d0e, %struct.Memory** %MEMORY
  %loadMem_433d16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5852 = getelementptr inbounds %struct.GPR, %struct.GPR* %5851, i32 0, i32 33
  %5853 = getelementptr inbounds %struct.Reg, %struct.Reg* %5852, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %5853 to i64*
  %5854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5855 = getelementptr inbounds %struct.GPR, %struct.GPR* %5854, i32 0, i32 5
  %5856 = getelementptr inbounds %struct.Reg, %struct.Reg* %5855, i32 0, i32 0
  %ECX.i1120 = bitcast %union.anon* %5856 to i32*
  %5857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5858 = getelementptr inbounds %struct.GPR, %struct.GPR* %5857, i32 0, i32 1
  %5859 = getelementptr inbounds %struct.Reg, %struct.Reg* %5858, i32 0, i32 0
  %RAX.i1121 = bitcast %union.anon* %5859 to i64*
  %5860 = load i32, i32* %ECX.i1120
  %5861 = zext i32 %5860 to i64
  %5862 = load i64, i64* %RAX.i1121
  %5863 = add i64 %5862, 72688
  %5864 = load i64, i64* %PC.i1119
  %5865 = add i64 %5864, 6
  store i64 %5865, i64* %PC.i1119
  %5866 = inttoptr i64 %5863 to i32*
  %5867 = load i32, i32* %5866
  %5868 = sub i32 %5860, %5867
  %5869 = icmp ult i32 %5860, %5867
  %5870 = zext i1 %5869 to i8
  %5871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5870, i8* %5871, align 1
  %5872 = and i32 %5868, 255
  %5873 = call i32 @llvm.ctpop.i32(i32 %5872)
  %5874 = trunc i32 %5873 to i8
  %5875 = and i8 %5874, 1
  %5876 = xor i8 %5875, 1
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5876, i8* %5877, align 1
  %5878 = xor i32 %5867, %5860
  %5879 = xor i32 %5878, %5868
  %5880 = lshr i32 %5879, 4
  %5881 = trunc i32 %5880 to i8
  %5882 = and i8 %5881, 1
  %5883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5882, i8* %5883, align 1
  %5884 = icmp eq i32 %5868, 0
  %5885 = zext i1 %5884 to i8
  %5886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5885, i8* %5886, align 1
  %5887 = lshr i32 %5868, 31
  %5888 = trunc i32 %5887 to i8
  %5889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5888, i8* %5889, align 1
  %5890 = lshr i32 %5860, 31
  %5891 = lshr i32 %5867, 31
  %5892 = xor i32 %5891, %5890
  %5893 = xor i32 %5887, %5890
  %5894 = add i32 %5893, %5892
  %5895 = icmp eq i32 %5894, 2
  %5896 = zext i1 %5895 to i8
  %5897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5896, i8* %5897, align 1
  store %struct.Memory* %loadMem_433d16, %struct.Memory** %MEMORY
  %loadMem_433d1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5899 = getelementptr inbounds %struct.GPR, %struct.GPR* %5898, i32 0, i32 33
  %5900 = getelementptr inbounds %struct.Reg, %struct.Reg* %5899, i32 0, i32 0
  %PC.i1118 = bitcast %union.anon* %5900 to i64*
  %5901 = load i64, i64* %PC.i1118
  %5902 = add i64 %5901, 34
  %5903 = load i64, i64* %PC.i1118
  %5904 = add i64 %5903, 6
  %5905 = load i64, i64* %PC.i1118
  %5906 = add i64 %5905, 6
  store i64 %5906, i64* %PC.i1118
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5908 = load i8, i8* %5907, align 1
  %5909 = icmp ne i8 %5908, 0
  %5910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5911 = load i8, i8* %5910, align 1
  %5912 = icmp ne i8 %5911, 0
  %5913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5914 = load i8, i8* %5913, align 1
  %5915 = icmp ne i8 %5914, 0
  %5916 = xor i1 %5912, %5915
  %5917 = or i1 %5909, %5916
  %5918 = zext i1 %5917 to i8
  store i8 %5918, i8* %BRANCH_TAKEN, align 1
  %5919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5920 = select i1 %5917, i64 %5902, i64 %5904
  store i64 %5920, i64* %5919, align 8
  store %struct.Memory* %loadMem_433d1c, %struct.Memory** %MEMORY
  %loadBr_433d1c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_433d1c = icmp eq i8 %loadBr_433d1c, 1
  br i1 %cmpBr_433d1c, label %block_.L_433d3e, label %block_433d22

block_433d22:                                     ; preds = %block_.L_433d00
  %loadMem_433d22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5922 = getelementptr inbounds %struct.GPR, %struct.GPR* %5921, i32 0, i32 33
  %5923 = getelementptr inbounds %struct.Reg, %struct.Reg* %5922, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %5923 to i64*
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5925 = getelementptr inbounds %struct.GPR, %struct.GPR* %5924, i32 0, i32 1
  %5926 = getelementptr inbounds %struct.Reg, %struct.Reg* %5925, i32 0, i32 0
  %RAX.i1117 = bitcast %union.anon* %5926 to i64*
  %5927 = load i64, i64* %PC.i1116
  %5928 = add i64 %5927, 8
  store i64 %5928, i64* %PC.i1116
  %5929 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5929, i64* %RAX.i1117, align 8
  store %struct.Memory* %loadMem_433d22, %struct.Memory** %MEMORY
  %loadMem_433d2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5931 = getelementptr inbounds %struct.GPR, %struct.GPR* %5930, i32 0, i32 33
  %5932 = getelementptr inbounds %struct.Reg, %struct.Reg* %5931, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %5932 to i64*
  %5933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5934 = getelementptr inbounds %struct.GPR, %struct.GPR* %5933, i32 0, i32 1
  %5935 = getelementptr inbounds %struct.Reg, %struct.Reg* %5934, i32 0, i32 0
  %RAX.i1114 = bitcast %union.anon* %5935 to i64*
  %5936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5937 = getelementptr inbounds %struct.GPR, %struct.GPR* %5936, i32 0, i32 5
  %5938 = getelementptr inbounds %struct.Reg, %struct.Reg* %5937, i32 0, i32 0
  %RCX.i1115 = bitcast %union.anon* %5938 to i64*
  %5939 = load i64, i64* %RAX.i1114
  %5940 = add i64 %5939, 72684
  %5941 = load i64, i64* %PC.i1113
  %5942 = add i64 %5941, 6
  store i64 %5942, i64* %PC.i1113
  %5943 = inttoptr i64 %5940 to i32*
  %5944 = load i32, i32* %5943
  %5945 = zext i32 %5944 to i64
  store i64 %5945, i64* %RCX.i1115, align 8
  store %struct.Memory* %loadMem_433d2a, %struct.Memory** %MEMORY
  %loadMem_433d30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5947 = getelementptr inbounds %struct.GPR, %struct.GPR* %5946, i32 0, i32 33
  %5948 = getelementptr inbounds %struct.Reg, %struct.Reg* %5947, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %5948 to i64*
  %5949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5950 = getelementptr inbounds %struct.GPR, %struct.GPR* %5949, i32 0, i32 5
  %5951 = getelementptr inbounds %struct.Reg, %struct.Reg* %5950, i32 0, i32 0
  %RCX.i1112 = bitcast %union.anon* %5951 to i64*
  %5952 = load i64, i64* %RCX.i1112
  %5953 = load i64, i64* %PC.i1111
  %5954 = add i64 %5953, 3
  store i64 %5954, i64* %PC.i1111
  %5955 = trunc i64 %5952 to i32
  %5956 = add i32 1, %5955
  %5957 = zext i32 %5956 to i64
  store i64 %5957, i64* %RCX.i1112, align 8
  %5958 = icmp ult i32 %5956, %5955
  %5959 = icmp ult i32 %5956, 1
  %5960 = or i1 %5958, %5959
  %5961 = zext i1 %5960 to i8
  %5962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5961, i8* %5962, align 1
  %5963 = and i32 %5956, 255
  %5964 = call i32 @llvm.ctpop.i32(i32 %5963)
  %5965 = trunc i32 %5964 to i8
  %5966 = and i8 %5965, 1
  %5967 = xor i8 %5966, 1
  %5968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5967, i8* %5968, align 1
  %5969 = xor i64 1, %5952
  %5970 = trunc i64 %5969 to i32
  %5971 = xor i32 %5970, %5956
  %5972 = lshr i32 %5971, 4
  %5973 = trunc i32 %5972 to i8
  %5974 = and i8 %5973, 1
  %5975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5974, i8* %5975, align 1
  %5976 = icmp eq i32 %5956, 0
  %5977 = zext i1 %5976 to i8
  %5978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5977, i8* %5978, align 1
  %5979 = lshr i32 %5956, 31
  %5980 = trunc i32 %5979 to i8
  %5981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5980, i8* %5981, align 1
  %5982 = lshr i32 %5955, 31
  %5983 = xor i32 %5979, %5982
  %5984 = add i32 %5983, %5979
  %5985 = icmp eq i32 %5984, 2
  %5986 = zext i1 %5985 to i8
  %5987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5986, i8* %5987, align 1
  store %struct.Memory* %loadMem_433d30, %struct.Memory** %MEMORY
  %loadMem_433d33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5989 = getelementptr inbounds %struct.GPR, %struct.GPR* %5988, i32 0, i32 33
  %5990 = getelementptr inbounds %struct.Reg, %struct.Reg* %5989, i32 0, i32 0
  %PC.i1109 = bitcast %union.anon* %5990 to i64*
  %5991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5992 = getelementptr inbounds %struct.GPR, %struct.GPR* %5991, i32 0, i32 5
  %5993 = getelementptr inbounds %struct.Reg, %struct.Reg* %5992, i32 0, i32 0
  %RCX.i1110 = bitcast %union.anon* %5993 to i64*
  %5994 = load i64, i64* %RCX.i1110
  %5995 = load i64, i64* %PC.i1109
  %5996 = add i64 %5995, 2
  store i64 %5996, i64* %PC.i1109
  %5997 = trunc i64 %5994 to i32
  %5998 = shl i32 %5997, 1
  %5999 = icmp slt i32 %5997, 0
  %6000 = icmp slt i32 %5998, 0
  %6001 = xor i1 %5999, %6000
  %6002 = zext i32 %5998 to i64
  store i64 %6002, i64* %RCX.i1110, align 8
  %6003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6004 = zext i1 %5999 to i8
  store i8 %6004, i8* %6003, align 1
  %6005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6006 = and i32 %5998, 254
  %6007 = call i32 @llvm.ctpop.i32(i32 %6006)
  %6008 = trunc i32 %6007 to i8
  %6009 = and i8 %6008, 1
  %6010 = xor i8 %6009, 1
  store i8 %6010, i8* %6005, align 1
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6011, align 1
  %6012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6013 = icmp eq i32 %5998, 0
  %6014 = zext i1 %6013 to i8
  store i8 %6014, i8* %6012, align 1
  %6015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6016 = lshr i32 %5998, 31
  %6017 = trunc i32 %6016 to i8
  store i8 %6017, i8* %6015, align 1
  %6018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6019 = zext i1 %6001 to i8
  store i8 %6019, i8* %6018, align 1
  store %struct.Memory* %loadMem_433d33, %struct.Memory** %MEMORY
  %loadMem_433d36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6021 = getelementptr inbounds %struct.GPR, %struct.GPR* %6020, i32 0, i32 33
  %6022 = getelementptr inbounds %struct.Reg, %struct.Reg* %6021, i32 0, i32 0
  %PC.i1106 = bitcast %union.anon* %6022 to i64*
  %6023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6024 = getelementptr inbounds %struct.GPR, %struct.GPR* %6023, i32 0, i32 5
  %6025 = getelementptr inbounds %struct.Reg, %struct.Reg* %6024, i32 0, i32 0
  %ECX.i1107 = bitcast %union.anon* %6025 to i32*
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6027 = getelementptr inbounds %struct.GPR, %struct.GPR* %6026, i32 0, i32 15
  %6028 = getelementptr inbounds %struct.Reg, %struct.Reg* %6027, i32 0, i32 0
  %RBP.i1108 = bitcast %union.anon* %6028 to i64*
  %6029 = load i64, i64* %RBP.i1108
  %6030 = sub i64 %6029, 36
  %6031 = load i32, i32* %ECX.i1107
  %6032 = zext i32 %6031 to i64
  %6033 = load i64, i64* %PC.i1106
  %6034 = add i64 %6033, 3
  store i64 %6034, i64* %PC.i1106
  %6035 = inttoptr i64 %6030 to i32*
  store i32 %6031, i32* %6035
  store %struct.Memory* %loadMem_433d36, %struct.Memory** %MEMORY
  %loadMem_433d39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6037 = getelementptr inbounds %struct.GPR, %struct.GPR* %6036, i32 0, i32 33
  %6038 = getelementptr inbounds %struct.Reg, %struct.Reg* %6037, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %6038 to i64*
  %6039 = load i64, i64* %PC.i1105
  %6040 = add i64 %6039, 28
  %6041 = load i64, i64* %PC.i1105
  %6042 = add i64 %6041, 5
  store i64 %6042, i64* %PC.i1105
  %6043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6040, i64* %6043, align 8
  store %struct.Memory* %loadMem_433d39, %struct.Memory** %MEMORY
  br label %block_.L_433d55

block_.L_433d3e:                                  ; preds = %block_.L_433d00
  %loadMem_433d3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6045 = getelementptr inbounds %struct.GPR, %struct.GPR* %6044, i32 0, i32 33
  %6046 = getelementptr inbounds %struct.Reg, %struct.Reg* %6045, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %6046 to i64*
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6048 = getelementptr inbounds %struct.GPR, %struct.GPR* %6047, i32 0, i32 1
  %6049 = getelementptr inbounds %struct.Reg, %struct.Reg* %6048, i32 0, i32 0
  %RAX.i1104 = bitcast %union.anon* %6049 to i64*
  %6050 = load i64, i64* %PC.i1103
  %6051 = add i64 %6050, 8
  store i64 %6051, i64* %PC.i1103
  %6052 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6052, i64* %RAX.i1104, align 8
  store %struct.Memory* %loadMem_433d3e, %struct.Memory** %MEMORY
  %loadMem_433d46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6054 = getelementptr inbounds %struct.GPR, %struct.GPR* %6053, i32 0, i32 33
  %6055 = getelementptr inbounds %struct.Reg, %struct.Reg* %6054, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %6055 to i64*
  %6056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6057 = getelementptr inbounds %struct.GPR, %struct.GPR* %6056, i32 0, i32 1
  %6058 = getelementptr inbounds %struct.Reg, %struct.Reg* %6057, i32 0, i32 0
  %RAX.i1101 = bitcast %union.anon* %6058 to i64*
  %6059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6060 = getelementptr inbounds %struct.GPR, %struct.GPR* %6059, i32 0, i32 5
  %6061 = getelementptr inbounds %struct.Reg, %struct.Reg* %6060, i32 0, i32 0
  %RCX.i1102 = bitcast %union.anon* %6061 to i64*
  %6062 = load i64, i64* %RAX.i1101
  %6063 = add i64 %6062, 72688
  %6064 = load i64, i64* %PC.i1100
  %6065 = add i64 %6064, 6
  store i64 %6065, i64* %PC.i1100
  %6066 = inttoptr i64 %6063 to i32*
  %6067 = load i32, i32* %6066
  %6068 = zext i32 %6067 to i64
  store i64 %6068, i64* %RCX.i1102, align 8
  store %struct.Memory* %loadMem_433d46, %struct.Memory** %MEMORY
  %loadMem_433d4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6070 = getelementptr inbounds %struct.GPR, %struct.GPR* %6069, i32 0, i32 33
  %6071 = getelementptr inbounds %struct.Reg, %struct.Reg* %6070, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %6071 to i64*
  %6072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6073 = getelementptr inbounds %struct.GPR, %struct.GPR* %6072, i32 0, i32 5
  %6074 = getelementptr inbounds %struct.Reg, %struct.Reg* %6073, i32 0, i32 0
  %RCX.i1099 = bitcast %union.anon* %6074 to i64*
  %6075 = load i64, i64* %RCX.i1099
  %6076 = load i64, i64* %PC.i1098
  %6077 = add i64 %6076, 3
  store i64 %6077, i64* %PC.i1098
  %6078 = trunc i64 %6075 to i32
  %6079 = add i32 1, %6078
  %6080 = zext i32 %6079 to i64
  store i64 %6080, i64* %RCX.i1099, align 8
  %6081 = icmp ult i32 %6079, %6078
  %6082 = icmp ult i32 %6079, 1
  %6083 = or i1 %6081, %6082
  %6084 = zext i1 %6083 to i8
  %6085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6084, i8* %6085, align 1
  %6086 = and i32 %6079, 255
  %6087 = call i32 @llvm.ctpop.i32(i32 %6086)
  %6088 = trunc i32 %6087 to i8
  %6089 = and i8 %6088, 1
  %6090 = xor i8 %6089, 1
  %6091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6090, i8* %6091, align 1
  %6092 = xor i64 1, %6075
  %6093 = trunc i64 %6092 to i32
  %6094 = xor i32 %6093, %6079
  %6095 = lshr i32 %6094, 4
  %6096 = trunc i32 %6095 to i8
  %6097 = and i8 %6096, 1
  %6098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6097, i8* %6098, align 1
  %6099 = icmp eq i32 %6079, 0
  %6100 = zext i1 %6099 to i8
  %6101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6100, i8* %6101, align 1
  %6102 = lshr i32 %6079, 31
  %6103 = trunc i32 %6102 to i8
  %6104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6103, i8* %6104, align 1
  %6105 = lshr i32 %6078, 31
  %6106 = xor i32 %6102, %6105
  %6107 = add i32 %6106, %6102
  %6108 = icmp eq i32 %6107, 2
  %6109 = zext i1 %6108 to i8
  %6110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6109, i8* %6110, align 1
  store %struct.Memory* %loadMem_433d4c, %struct.Memory** %MEMORY
  %loadMem_433d4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6112 = getelementptr inbounds %struct.GPR, %struct.GPR* %6111, i32 0, i32 33
  %6113 = getelementptr inbounds %struct.Reg, %struct.Reg* %6112, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %6113 to i64*
  %6114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6115 = getelementptr inbounds %struct.GPR, %struct.GPR* %6114, i32 0, i32 5
  %6116 = getelementptr inbounds %struct.Reg, %struct.Reg* %6115, i32 0, i32 0
  %RCX.i1097 = bitcast %union.anon* %6116 to i64*
  %6117 = load i64, i64* %RCX.i1097
  %6118 = load i64, i64* %PC.i1096
  %6119 = add i64 %6118, 2
  store i64 %6119, i64* %PC.i1096
  %6120 = trunc i64 %6117 to i32
  %6121 = shl i32 %6120, 1
  %6122 = icmp slt i32 %6120, 0
  %6123 = icmp slt i32 %6121, 0
  %6124 = xor i1 %6122, %6123
  %6125 = zext i32 %6121 to i64
  store i64 %6125, i64* %RCX.i1097, align 8
  %6126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6127 = zext i1 %6122 to i8
  store i8 %6127, i8* %6126, align 1
  %6128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6129 = and i32 %6121, 254
  %6130 = call i32 @llvm.ctpop.i32(i32 %6129)
  %6131 = trunc i32 %6130 to i8
  %6132 = and i8 %6131, 1
  %6133 = xor i8 %6132, 1
  store i8 %6133, i8* %6128, align 1
  %6134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6134, align 1
  %6135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6136 = icmp eq i32 %6121, 0
  %6137 = zext i1 %6136 to i8
  store i8 %6137, i8* %6135, align 1
  %6138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6139 = lshr i32 %6121, 31
  %6140 = trunc i32 %6139 to i8
  store i8 %6140, i8* %6138, align 1
  %6141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6142 = zext i1 %6124 to i8
  store i8 %6142, i8* %6141, align 1
  store %struct.Memory* %loadMem_433d4f, %struct.Memory** %MEMORY
  %loadMem_433d52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6144 = getelementptr inbounds %struct.GPR, %struct.GPR* %6143, i32 0, i32 33
  %6145 = getelementptr inbounds %struct.Reg, %struct.Reg* %6144, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %6145 to i64*
  %6146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6147 = getelementptr inbounds %struct.GPR, %struct.GPR* %6146, i32 0, i32 5
  %6148 = getelementptr inbounds %struct.Reg, %struct.Reg* %6147, i32 0, i32 0
  %ECX.i1094 = bitcast %union.anon* %6148 to i32*
  %6149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6150 = getelementptr inbounds %struct.GPR, %struct.GPR* %6149, i32 0, i32 15
  %6151 = getelementptr inbounds %struct.Reg, %struct.Reg* %6150, i32 0, i32 0
  %RBP.i1095 = bitcast %union.anon* %6151 to i64*
  %6152 = load i64, i64* %RBP.i1095
  %6153 = sub i64 %6152, 36
  %6154 = load i32, i32* %ECX.i1094
  %6155 = zext i32 %6154 to i64
  %6156 = load i64, i64* %PC.i1093
  %6157 = add i64 %6156, 3
  store i64 %6157, i64* %PC.i1093
  %6158 = inttoptr i64 %6153 to i32*
  store i32 %6154, i32* %6158
  store %struct.Memory* %loadMem_433d52, %struct.Memory** %MEMORY
  br label %block_.L_433d55

block_.L_433d55:                                  ; preds = %block_.L_433d3e, %block_433d22
  %loadMem_433d55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6160 = getelementptr inbounds %struct.GPR, %struct.GPR* %6159, i32 0, i32 33
  %6161 = getelementptr inbounds %struct.Reg, %struct.Reg* %6160, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %6161 to i64*
  %6162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6163 = getelementptr inbounds %struct.GPR, %struct.GPR* %6162, i32 0, i32 1
  %6164 = getelementptr inbounds %struct.Reg, %struct.Reg* %6163, i32 0, i32 0
  %RAX.i1092 = bitcast %union.anon* %6164 to i64*
  %6165 = load i64, i64* %PC.i1091
  %6166 = add i64 %6165, 5
  store i64 %6166, i64* %PC.i1091
  store i64 4, i64* %RAX.i1092, align 8
  store %struct.Memory* %loadMem_433d55, %struct.Memory** %MEMORY
  %loadMem_433d5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6168 = getelementptr inbounds %struct.GPR, %struct.GPR* %6167, i32 0, i32 33
  %6169 = getelementptr inbounds %struct.Reg, %struct.Reg* %6168, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %6169 to i64*
  %6170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6171 = getelementptr inbounds %struct.GPR, %struct.GPR* %6170, i32 0, i32 1
  %6172 = getelementptr inbounds %struct.Reg, %struct.Reg* %6171, i32 0, i32 0
  %EAX.i1089 = bitcast %union.anon* %6172 to i32*
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6174 = getelementptr inbounds %struct.GPR, %struct.GPR* %6173, i32 0, i32 9
  %6175 = getelementptr inbounds %struct.Reg, %struct.Reg* %6174, i32 0, i32 0
  %RSI.i1090 = bitcast %union.anon* %6175 to i64*
  %6176 = load i32, i32* %EAX.i1089
  %6177 = zext i32 %6176 to i64
  %6178 = load i64, i64* %PC.i1088
  %6179 = add i64 %6178, 2
  store i64 %6179, i64* %PC.i1088
  %6180 = and i64 %6177, 4294967295
  store i64 %6180, i64* %RSI.i1090, align 8
  store %struct.Memory* %loadMem_433d5a, %struct.Memory** %MEMORY
  %loadMem_433d5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6182 = getelementptr inbounds %struct.GPR, %struct.GPR* %6181, i32 0, i32 33
  %6183 = getelementptr inbounds %struct.Reg, %struct.Reg* %6182, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %6183 to i64*
  %6184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6185 = getelementptr inbounds %struct.GPR, %struct.GPR* %6184, i32 0, i32 11
  %6186 = getelementptr inbounds %struct.Reg, %struct.Reg* %6185, i32 0, i32 0
  %RDI.i1086 = bitcast %union.anon* %6186 to i64*
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6188 = getelementptr inbounds %struct.GPR, %struct.GPR* %6187, i32 0, i32 15
  %6189 = getelementptr inbounds %struct.Reg, %struct.Reg* %6188, i32 0, i32 0
  %RBP.i1087 = bitcast %union.anon* %6189 to i64*
  %6190 = load i64, i64* %RBP.i1087
  %6191 = sub i64 %6190, 36
  %6192 = load i64, i64* %PC.i1085
  %6193 = add i64 %6192, 4
  store i64 %6193, i64* %PC.i1085
  %6194 = inttoptr i64 %6191 to i32*
  %6195 = load i32, i32* %6194
  %6196 = sext i32 %6195 to i64
  store i64 %6196, i64* %RDI.i1086, align 8
  store %struct.Memory* %loadMem_433d5c, %struct.Memory** %MEMORY
  %loadMem1_433d60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6198 = getelementptr inbounds %struct.GPR, %struct.GPR* %6197, i32 0, i32 33
  %6199 = getelementptr inbounds %struct.Reg, %struct.Reg* %6198, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %6199 to i64*
  %6200 = load i64, i64* %PC.i1084
  %6201 = add i64 %6200, -208000
  %6202 = load i64, i64* %PC.i1084
  %6203 = add i64 %6202, 5
  %6204 = load i64, i64* %PC.i1084
  %6205 = add i64 %6204, 5
  store i64 %6205, i64* %PC.i1084
  %6206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6207 = load i64, i64* %6206, align 8
  %6208 = add i64 %6207, -8
  %6209 = inttoptr i64 %6208 to i64*
  store i64 %6203, i64* %6209
  store i64 %6208, i64* %6206, align 8
  %6210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6201, i64* %6210, align 8
  store %struct.Memory* %loadMem1_433d60, %struct.Memory** %MEMORY
  %loadMem2_433d60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433d60 = load i64, i64* %3
  %6211 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %loadMem2_433d60)
  store %struct.Memory* %6211, %struct.Memory** %MEMORY
  %loadMem_433d65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6213 = getelementptr inbounds %struct.GPR, %struct.GPR* %6212, i32 0, i32 33
  %6214 = getelementptr inbounds %struct.Reg, %struct.Reg* %6213, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %6214 to i64*
  %6215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6216 = getelementptr inbounds %struct.GPR, %struct.GPR* %6215, i32 0, i32 9
  %6217 = getelementptr inbounds %struct.Reg, %struct.Reg* %6216, i32 0, i32 0
  %RSI.i1081 = bitcast %union.anon* %6217 to i64*
  %6218 = load i64, i64* %PC.i1080
  %6219 = add i64 %6218, 8
  store i64 %6219, i64* %PC.i1080
  %6220 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6220, i64* %RSI.i1081, align 8
  store %struct.Memory* %loadMem_433d65, %struct.Memory** %MEMORY
  %loadMem_433d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6222 = getelementptr inbounds %struct.GPR, %struct.GPR* %6221, i32 0, i32 33
  %6223 = getelementptr inbounds %struct.Reg, %struct.Reg* %6222, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %6223 to i64*
  %6224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6225 = getelementptr inbounds %struct.GPR, %struct.GPR* %6224, i32 0, i32 1
  %6226 = getelementptr inbounds %struct.Reg, %struct.Reg* %6225, i32 0, i32 0
  %RAX.i1078 = bitcast %union.anon* %6226 to i64*
  %6227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6228 = getelementptr inbounds %struct.GPR, %struct.GPR* %6227, i32 0, i32 9
  %6229 = getelementptr inbounds %struct.Reg, %struct.Reg* %6228, i32 0, i32 0
  %RSI.i1079 = bitcast %union.anon* %6229 to i64*
  %6230 = load i64, i64* %RSI.i1079
  %6231 = add i64 %6230, 71776
  %6232 = load i64, i64* %RAX.i1078
  %6233 = load i64, i64* %PC.i1077
  %6234 = add i64 %6233, 7
  store i64 %6234, i64* %PC.i1077
  %6235 = inttoptr i64 %6231 to i64*
  store i64 %6232, i64* %6235
  store %struct.Memory* %loadMem_433d6d, %struct.Memory** %MEMORY
  %loadMem_433d74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6237 = getelementptr inbounds %struct.GPR, %struct.GPR* %6236, i32 0, i32 33
  %6238 = getelementptr inbounds %struct.Reg, %struct.Reg* %6237, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %6238 to i64*
  %6239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6240 = getelementptr inbounds %struct.GPR, %struct.GPR* %6239, i32 0, i32 1
  %6241 = getelementptr inbounds %struct.Reg, %struct.Reg* %6240, i32 0, i32 0
  %RAX.i1076 = bitcast %union.anon* %6241 to i64*
  %6242 = load i64, i64* %RAX.i1076
  %6243 = load i64, i64* %PC.i1075
  %6244 = add i64 %6243, 4
  store i64 %6244, i64* %PC.i1075
  %6245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6245, align 1
  %6246 = trunc i64 %6242 to i32
  %6247 = and i32 %6246, 255
  %6248 = call i32 @llvm.ctpop.i32(i32 %6247)
  %6249 = trunc i32 %6248 to i8
  %6250 = and i8 %6249, 1
  %6251 = xor i8 %6250, 1
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6251, i8* %6252, align 1
  %6253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6253, align 1
  %6254 = icmp eq i64 %6242, 0
  %6255 = zext i1 %6254 to i8
  %6256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6255, i8* %6256, align 1
  %6257 = lshr i64 %6242, 63
  %6258 = trunc i64 %6257 to i8
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6258, i8* %6259, align 1
  %6260 = lshr i64 %6242, 63
  %6261 = xor i64 %6257, %6260
  %6262 = add i64 %6261, %6260
  %6263 = icmp eq i64 %6262, 2
  %6264 = zext i1 %6263 to i8
  %6265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6264, i8* %6265, align 1
  store %struct.Memory* %loadMem_433d74, %struct.Memory** %MEMORY
  %loadMem_433d78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6267 = getelementptr inbounds %struct.GPR, %struct.GPR* %6266, i32 0, i32 33
  %6268 = getelementptr inbounds %struct.Reg, %struct.Reg* %6267, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %6268 to i64*
  %6269 = load i64, i64* %PC.i1074
  %6270 = add i64 %6269, 21
  %6271 = load i64, i64* %PC.i1074
  %6272 = add i64 %6271, 6
  %6273 = load i64, i64* %PC.i1074
  %6274 = add i64 %6273, 6
  store i64 %6274, i64* %PC.i1074
  %6275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6276 = load i8, i8* %6275, align 1
  %6277 = icmp eq i8 %6276, 0
  %6278 = zext i1 %6277 to i8
  store i8 %6278, i8* %BRANCH_TAKEN, align 1
  %6279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6280 = select i1 %6277, i64 %6270, i64 %6272
  store i64 %6280, i64* %6279, align 8
  store %struct.Memory* %loadMem_433d78, %struct.Memory** %MEMORY
  %loadBr_433d78 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_433d78 = icmp eq i8 %loadBr_433d78, 1
  br i1 %cmpBr_433d78, label %block_.L_433d8d, label %block_433d7e

block_433d7e:                                     ; preds = %block_.L_433d55
  %loadMem_433d7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6282 = getelementptr inbounds %struct.GPR, %struct.GPR* %6281, i32 0, i32 33
  %6283 = getelementptr inbounds %struct.Reg, %struct.Reg* %6282, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %6283 to i64*
  %6284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6285 = getelementptr inbounds %struct.GPR, %struct.GPR* %6284, i32 0, i32 11
  %6286 = getelementptr inbounds %struct.Reg, %struct.Reg* %6285, i32 0, i32 0
  %RDI.i1073 = bitcast %union.anon* %6286 to i64*
  %6287 = load i64, i64* %PC.i1072
  %6288 = add i64 %6287, 10
  store i64 %6288, i64* %PC.i1072
  store i64 ptrtoint (%G__0x4c16f1_type* @G__0x4c16f1 to i64), i64* %RDI.i1073, align 8
  store %struct.Memory* %loadMem_433d7e, %struct.Memory** %MEMORY
  %loadMem1_433d88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6290 = getelementptr inbounds %struct.GPR, %struct.GPR* %6289, i32 0, i32 33
  %6291 = getelementptr inbounds %struct.Reg, %struct.Reg* %6290, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %6291 to i64*
  %6292 = load i64, i64* %PC.i1071
  %6293 = add i64 %6292, 153192
  %6294 = load i64, i64* %PC.i1071
  %6295 = add i64 %6294, 5
  %6296 = load i64, i64* %PC.i1071
  %6297 = add i64 %6296, 5
  store i64 %6297, i64* %PC.i1071
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6299 = load i64, i64* %6298, align 8
  %6300 = add i64 %6299, -8
  %6301 = inttoptr i64 %6300 to i64*
  store i64 %6295, i64* %6301
  store i64 %6300, i64* %6298, align 8
  %6302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6293, i64* %6302, align 8
  store %struct.Memory* %loadMem1_433d88, %struct.Memory** %MEMORY
  %loadMem2_433d88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433d88 = load i64, i64* %3
  %call2_433d88 = call %struct.Memory* @sub_4593f0.no_mem_exit(%struct.State* %0, i64 %loadPC_433d88, %struct.Memory* %loadMem2_433d88)
  store %struct.Memory* %call2_433d88, %struct.Memory** %MEMORY
  br label %block_.L_433d8d

block_.L_433d8d:                                  ; preds = %block_433d7e, %block_.L_433d55
  %loadMem_433d8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6304 = getelementptr inbounds %struct.GPR, %struct.GPR* %6303, i32 0, i32 33
  %6305 = getelementptr inbounds %struct.Reg, %struct.Reg* %6304, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %6305 to i64*
  %6306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6307 = getelementptr inbounds %struct.GPR, %struct.GPR* %6306, i32 0, i32 1
  %6308 = getelementptr inbounds %struct.Reg, %struct.Reg* %6307, i32 0, i32 0
  %RAX.i1070 = bitcast %union.anon* %6308 to i64*
  %6309 = load i64, i64* %PC.i1069
  %6310 = add i64 %6309, 5
  store i64 %6310, i64* %PC.i1069
  store i64 2, i64* %RAX.i1070, align 8
  store %struct.Memory* %loadMem_433d8d, %struct.Memory** %MEMORY
  %loadMem_433d92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6312 = getelementptr inbounds %struct.GPR, %struct.GPR* %6311, i32 0, i32 33
  %6313 = getelementptr inbounds %struct.Reg, %struct.Reg* %6312, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %6313 to i64*
  %6314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6315 = getelementptr inbounds %struct.GPR, %struct.GPR* %6314, i32 0, i32 5
  %6316 = getelementptr inbounds %struct.Reg, %struct.Reg* %6315, i32 0, i32 0
  %RCX.i1067 = bitcast %union.anon* %6316 to i64*
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6318 = getelementptr inbounds %struct.GPR, %struct.GPR* %6317, i32 0, i32 15
  %6319 = getelementptr inbounds %struct.Reg, %struct.Reg* %6318, i32 0, i32 0
  %RBP.i1068 = bitcast %union.anon* %6319 to i64*
  %6320 = load i64, i64* %RBP.i1068
  %6321 = sub i64 %6320, 36
  %6322 = load i64, i64* %PC.i1066
  %6323 = add i64 %6322, 3
  store i64 %6323, i64* %PC.i1066
  %6324 = inttoptr i64 %6321 to i32*
  %6325 = load i32, i32* %6324
  %6326 = zext i32 %6325 to i64
  store i64 %6326, i64* %RCX.i1067, align 8
  store %struct.Memory* %loadMem_433d92, %struct.Memory** %MEMORY
  %loadMem_433d95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6328 = getelementptr inbounds %struct.GPR, %struct.GPR* %6327, i32 0, i32 33
  %6329 = getelementptr inbounds %struct.Reg, %struct.Reg* %6328, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %6329 to i64*
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6331 = getelementptr inbounds %struct.GPR, %struct.GPR* %6330, i32 0, i32 1
  %6332 = getelementptr inbounds %struct.Reg, %struct.Reg* %6331, i32 0, i32 0
  %EAX.i1064 = bitcast %union.anon* %6332 to i32*
  %6333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6334 = getelementptr inbounds %struct.GPR, %struct.GPR* %6333, i32 0, i32 15
  %6335 = getelementptr inbounds %struct.Reg, %struct.Reg* %6334, i32 0, i32 0
  %RBP.i1065 = bitcast %union.anon* %6335 to i64*
  %6336 = load i64, i64* %RBP.i1065
  %6337 = sub i64 %6336, 172
  %6338 = load i32, i32* %EAX.i1064
  %6339 = zext i32 %6338 to i64
  %6340 = load i64, i64* %PC.i1063
  %6341 = add i64 %6340, 6
  store i64 %6341, i64* %PC.i1063
  %6342 = inttoptr i64 %6337 to i32*
  store i32 %6338, i32* %6342
  store %struct.Memory* %loadMem_433d95, %struct.Memory** %MEMORY
  %loadMem_433d9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6344 = getelementptr inbounds %struct.GPR, %struct.GPR* %6343, i32 0, i32 33
  %6345 = getelementptr inbounds %struct.Reg, %struct.Reg* %6344, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %6345 to i64*
  %6346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6347 = getelementptr inbounds %struct.GPR, %struct.GPR* %6346, i32 0, i32 5
  %6348 = getelementptr inbounds %struct.Reg, %struct.Reg* %6347, i32 0, i32 0
  %ECX.i1061 = bitcast %union.anon* %6348 to i32*
  %6349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6350 = getelementptr inbounds %struct.GPR, %struct.GPR* %6349, i32 0, i32 1
  %6351 = getelementptr inbounds %struct.Reg, %struct.Reg* %6350, i32 0, i32 0
  %RAX.i1062 = bitcast %union.anon* %6351 to i64*
  %6352 = load i32, i32* %ECX.i1061
  %6353 = zext i32 %6352 to i64
  %6354 = load i64, i64* %PC.i1060
  %6355 = add i64 %6354, 2
  store i64 %6355, i64* %PC.i1060
  %6356 = and i64 %6353, 4294967295
  store i64 %6356, i64* %RAX.i1062, align 8
  store %struct.Memory* %loadMem_433d9b, %struct.Memory** %MEMORY
  %loadMem_433d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6358 = getelementptr inbounds %struct.GPR, %struct.GPR* %6357, i32 0, i32 33
  %6359 = getelementptr inbounds %struct.Reg, %struct.Reg* %6358, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %6359 to i64*
  %6360 = load i64, i64* %PC.i1059
  %6361 = add i64 %6360, 1
  store i64 %6361, i64* %PC.i1059
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %6363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %6364 = bitcast %union.anon* %6363 to i32*
  %6365 = load i32, i32* %6364, align 8
  %6366 = sext i32 %6365 to i64
  %6367 = lshr i64 %6366, 32
  store i64 %6367, i64* %6362, align 8
  store %struct.Memory* %loadMem_433d9d, %struct.Memory** %MEMORY
  %loadMem_433d9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6369 = getelementptr inbounds %struct.GPR, %struct.GPR* %6368, i32 0, i32 33
  %6370 = getelementptr inbounds %struct.Reg, %struct.Reg* %6369, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %6370 to i64*
  %6371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6372 = getelementptr inbounds %struct.GPR, %struct.GPR* %6371, i32 0, i32 5
  %6373 = getelementptr inbounds %struct.Reg, %struct.Reg* %6372, i32 0, i32 0
  %RCX.i1057 = bitcast %union.anon* %6373 to i64*
  %6374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6375 = getelementptr inbounds %struct.GPR, %struct.GPR* %6374, i32 0, i32 15
  %6376 = getelementptr inbounds %struct.Reg, %struct.Reg* %6375, i32 0, i32 0
  %RBP.i1058 = bitcast %union.anon* %6376 to i64*
  %6377 = load i64, i64* %RBP.i1058
  %6378 = sub i64 %6377, 172
  %6379 = load i64, i64* %PC.i1056
  %6380 = add i64 %6379, 6
  store i64 %6380, i64* %PC.i1056
  %6381 = inttoptr i64 %6378 to i32*
  %6382 = load i32, i32* %6381
  %6383 = zext i32 %6382 to i64
  store i64 %6383, i64* %RCX.i1057, align 8
  store %struct.Memory* %loadMem_433d9e, %struct.Memory** %MEMORY
  %loadMem_433da4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6385 = getelementptr inbounds %struct.GPR, %struct.GPR* %6384, i32 0, i32 33
  %6386 = getelementptr inbounds %struct.Reg, %struct.Reg* %6385, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %6386 to i64*
  %6387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6388 = getelementptr inbounds %struct.GPR, %struct.GPR* %6387, i32 0, i32 5
  %6389 = getelementptr inbounds %struct.Reg, %struct.Reg* %6388, i32 0, i32 0
  %ECX.i1052 = bitcast %union.anon* %6389 to i32*
  %6390 = load i32, i32* %ECX.i1052
  %6391 = zext i32 %6390 to i64
  %6392 = load i64, i64* %PC.i1051
  %6393 = add i64 %6392, 2
  store i64 %6393, i64* %PC.i1051
  %6394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %6395 = bitcast %union.anon* %6394 to i32*
  %6396 = load i32, i32* %6395, align 8
  %6397 = zext i32 %6396 to i64
  %6398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %6399 = bitcast %union.anon* %6398 to i32*
  %6400 = load i32, i32* %6399, align 8
  %6401 = zext i32 %6400 to i64
  %6402 = shl i64 %6391, 32
  %6403 = ashr exact i64 %6402, 32
  %6404 = shl i64 %6401, 32
  %6405 = or i64 %6404, %6397
  %6406 = sdiv i64 %6405, %6403
  %6407 = shl i64 %6406, 32
  %6408 = ashr exact i64 %6407, 32
  %6409 = icmp eq i64 %6406, %6408
  br i1 %6409, label %6414, label %6410

; <label>:6410:                                   ; preds = %block_.L_433d8d
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6412 = load i64, i64* %6411, align 8
  %6413 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6412, %struct.Memory* %loadMem_433da4)
  br label %routine_idivl__ecx.exit1053

; <label>:6414:                                   ; preds = %block_.L_433d8d
  %6415 = srem i64 %6405, %6403
  %6416 = getelementptr inbounds %union.anon, %union.anon* %6394, i64 0, i32 0
  %6417 = and i64 %6406, 4294967295
  store i64 %6417, i64* %6416, align 8
  %6418 = getelementptr inbounds %union.anon, %union.anon* %6398, i64 0, i32 0
  %6419 = and i64 %6415, 4294967295
  store i64 %6419, i64* %6418, align 8
  %6420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6420, align 1
  %6421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %6421, align 1
  %6422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6422, align 1
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6423, align 1
  %6424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %6424, align 1
  %6425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6425, align 1
  br label %routine_idivl__ecx.exit1053

routine_idivl__ecx.exit1053:                      ; preds = %6410, %6414
  %6426 = phi %struct.Memory* [ %6413, %6410 ], [ %loadMem_433da4, %6414 ]
  store %struct.Memory* %6426, %struct.Memory** %MEMORY
  %loadMem_433da6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6428 = getelementptr inbounds %struct.GPR, %struct.GPR* %6427, i32 0, i32 33
  %6429 = getelementptr inbounds %struct.Reg, %struct.Reg* %6428, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %6429 to i64*
  %6430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6431 = getelementptr inbounds %struct.GPR, %struct.GPR* %6430, i32 0, i32 9
  %6432 = getelementptr inbounds %struct.Reg, %struct.Reg* %6431, i32 0, i32 0
  %RSI.i1050 = bitcast %union.anon* %6432 to i64*
  %6433 = load i64, i64* %PC.i1049
  %6434 = add i64 %6433, 8
  store i64 %6434, i64* %PC.i1049
  %6435 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6435, i64* %RSI.i1050, align 8
  store %struct.Memory* %loadMem_433da6, %struct.Memory** %MEMORY
  %loadMem_433dae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6437 = getelementptr inbounds %struct.GPR, %struct.GPR* %6436, i32 0, i32 33
  %6438 = getelementptr inbounds %struct.Reg, %struct.Reg* %6437, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %6438 to i64*
  %6439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6440 = getelementptr inbounds %struct.GPR, %struct.GPR* %6439, i32 0, i32 9
  %6441 = getelementptr inbounds %struct.Reg, %struct.Reg* %6440, i32 0, i32 0
  %RSI.i1047 = bitcast %union.anon* %6441 to i64*
  %6442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6443 = getelementptr inbounds %struct.GPR, %struct.GPR* %6442, i32 0, i32 11
  %6444 = getelementptr inbounds %struct.Reg, %struct.Reg* %6443, i32 0, i32 0
  %RDI.i1048 = bitcast %union.anon* %6444 to i64*
  %6445 = load i64, i64* %RSI.i1047
  %6446 = add i64 %6445, 71776
  %6447 = load i64, i64* %PC.i1046
  %6448 = add i64 %6447, 7
  store i64 %6448, i64* %PC.i1046
  %6449 = inttoptr i64 %6446 to i64*
  %6450 = load i64, i64* %6449
  store i64 %6450, i64* %RDI.i1048, align 8
  store %struct.Memory* %loadMem_433dae, %struct.Memory** %MEMORY
  %loadMem_433db5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6452 = getelementptr inbounds %struct.GPR, %struct.GPR* %6451, i32 0, i32 33
  %6453 = getelementptr inbounds %struct.Reg, %struct.Reg* %6452, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %6453 to i64*
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6455 = getelementptr inbounds %struct.GPR, %struct.GPR* %6454, i32 0, i32 1
  %6456 = getelementptr inbounds %struct.Reg, %struct.Reg* %6455, i32 0, i32 0
  %EAX.i1044 = bitcast %union.anon* %6456 to i32*
  %6457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6458 = getelementptr inbounds %struct.GPR, %struct.GPR* %6457, i32 0, i32 17
  %6459 = getelementptr inbounds %struct.Reg, %struct.Reg* %6458, i32 0, i32 0
  %R8.i1045 = bitcast %union.anon* %6459 to i64*
  %6460 = load i32, i32* %EAX.i1044
  %6461 = zext i32 %6460 to i64
  %6462 = load i64, i64* %PC.i1043
  %6463 = add i64 %6462, 3
  store i64 %6463, i64* %PC.i1043
  %6464 = shl i64 %6461, 32
  %6465 = ashr exact i64 %6464, 32
  store i64 %6465, i64* %R8.i1045, align 8
  store %struct.Memory* %loadMem_433db5, %struct.Memory** %MEMORY
  %loadMem_433db8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6467 = getelementptr inbounds %struct.GPR, %struct.GPR* %6466, i32 0, i32 33
  %6468 = getelementptr inbounds %struct.Reg, %struct.Reg* %6467, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %6468 to i64*
  %6469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6470 = getelementptr inbounds %struct.GPR, %struct.GPR* %6469, i32 0, i32 17
  %6471 = getelementptr inbounds %struct.Reg, %struct.Reg* %6470, i32 0, i32 0
  %R8.i1042 = bitcast %union.anon* %6471 to i64*
  %6472 = load i64, i64* %R8.i1042
  %6473 = load i64, i64* %PC.i1041
  %6474 = add i64 %6473, 4
  store i64 %6474, i64* %PC.i1041
  %6475 = shl i64 %6472, 1
  %6476 = icmp slt i64 %6475, 0
  %6477 = shl i64 %6475, 1
  store i64 %6477, i64* %R8.i1042, align 8
  %6478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6479 = zext i1 %6476 to i8
  store i8 %6479, i8* %6478, align 1
  %6480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6481 = trunc i64 %6477 to i32
  %6482 = and i32 %6481, 254
  %6483 = call i32 @llvm.ctpop.i32(i32 %6482)
  %6484 = trunc i32 %6483 to i8
  %6485 = and i8 %6484, 1
  %6486 = xor i8 %6485, 1
  store i8 %6486, i8* %6480, align 1
  %6487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6487, align 1
  %6488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6489 = icmp eq i64 %6477, 0
  %6490 = zext i1 %6489 to i8
  store i8 %6490, i8* %6488, align 1
  %6491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6492 = lshr i64 %6477, 63
  %6493 = trunc i64 %6492 to i8
  store i8 %6493, i8* %6491, align 1
  %6494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6494, align 1
  store %struct.Memory* %loadMem_433db8, %struct.Memory** %MEMORY
  %loadMem_433dbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6496 = getelementptr inbounds %struct.GPR, %struct.GPR* %6495, i32 0, i32 33
  %6497 = getelementptr inbounds %struct.Reg, %struct.Reg* %6496, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %6497 to i64*
  %6498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6499 = getelementptr inbounds %struct.GPR, %struct.GPR* %6498, i32 0, i32 11
  %6500 = getelementptr inbounds %struct.Reg, %struct.Reg* %6499, i32 0, i32 0
  %RDI.i1039 = bitcast %union.anon* %6500 to i64*
  %6501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6502 = getelementptr inbounds %struct.GPR, %struct.GPR* %6501, i32 0, i32 17
  %6503 = getelementptr inbounds %struct.Reg, %struct.Reg* %6502, i32 0, i32 0
  %R8.i1040 = bitcast %union.anon* %6503 to i64*
  %6504 = load i64, i64* %RDI.i1039
  %6505 = load i64, i64* %R8.i1040
  %6506 = load i64, i64* %PC.i1038
  %6507 = add i64 %6506, 3
  store i64 %6507, i64* %PC.i1038
  %6508 = add i64 %6505, %6504
  store i64 %6508, i64* %RDI.i1039, align 8
  %6509 = icmp ult i64 %6508, %6504
  %6510 = icmp ult i64 %6508, %6505
  %6511 = or i1 %6509, %6510
  %6512 = zext i1 %6511 to i8
  %6513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6512, i8* %6513, align 1
  %6514 = trunc i64 %6508 to i32
  %6515 = and i32 %6514, 255
  %6516 = call i32 @llvm.ctpop.i32(i32 %6515)
  %6517 = trunc i32 %6516 to i8
  %6518 = and i8 %6517, 1
  %6519 = xor i8 %6518, 1
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6519, i8* %6520, align 1
  %6521 = xor i64 %6505, %6504
  %6522 = xor i64 %6521, %6508
  %6523 = lshr i64 %6522, 4
  %6524 = trunc i64 %6523 to i8
  %6525 = and i8 %6524, 1
  %6526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6525, i8* %6526, align 1
  %6527 = icmp eq i64 %6508, 0
  %6528 = zext i1 %6527 to i8
  %6529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6528, i8* %6529, align 1
  %6530 = lshr i64 %6508, 63
  %6531 = trunc i64 %6530 to i8
  %6532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6531, i8* %6532, align 1
  %6533 = lshr i64 %6504, 63
  %6534 = lshr i64 %6505, 63
  %6535 = xor i64 %6530, %6533
  %6536 = xor i64 %6530, %6534
  %6537 = add i64 %6535, %6536
  %6538 = icmp eq i64 %6537, 2
  %6539 = zext i1 %6538 to i8
  %6540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6539, i8* %6540, align 1
  store %struct.Memory* %loadMem_433dbc, %struct.Memory** %MEMORY
  %loadMem_433dbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6542 = getelementptr inbounds %struct.GPR, %struct.GPR* %6541, i32 0, i32 33
  %6543 = getelementptr inbounds %struct.Reg, %struct.Reg* %6542, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %6543 to i64*
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6545 = getelementptr inbounds %struct.GPR, %struct.GPR* %6544, i32 0, i32 9
  %6546 = getelementptr inbounds %struct.Reg, %struct.Reg* %6545, i32 0, i32 0
  %RSI.i1036 = bitcast %union.anon* %6546 to i64*
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6548 = getelementptr inbounds %struct.GPR, %struct.GPR* %6547, i32 0, i32 11
  %6549 = getelementptr inbounds %struct.Reg, %struct.Reg* %6548, i32 0, i32 0
  %RDI.i1037 = bitcast %union.anon* %6549 to i64*
  %6550 = load i64, i64* %RSI.i1036
  %6551 = add i64 %6550, 71776
  %6552 = load i64, i64* %RDI.i1037
  %6553 = load i64, i64* %PC.i1035
  %6554 = add i64 %6553, 7
  store i64 %6554, i64* %PC.i1035
  %6555 = inttoptr i64 %6551 to i64*
  store i64 %6552, i64* %6555
  store %struct.Memory* %loadMem_433dbf, %struct.Memory** %MEMORY
  %loadMem_433dc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6557 = getelementptr inbounds %struct.GPR, %struct.GPR* %6556, i32 0, i32 33
  %6558 = getelementptr inbounds %struct.Reg, %struct.Reg* %6557, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %6558 to i64*
  %6559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6560 = getelementptr inbounds %struct.GPR, %struct.GPR* %6559, i32 0, i32 15
  %6561 = getelementptr inbounds %struct.Reg, %struct.Reg* %6560, i32 0, i32 0
  %RBP.i1034 = bitcast %union.anon* %6561 to i64*
  %6562 = load i64, i64* %RBP.i1034
  %6563 = sub i64 %6562, 28
  %6564 = load i64, i64* %PC.i1033
  %6565 = add i64 %6564, 7
  store i64 %6565, i64* %PC.i1033
  %6566 = inttoptr i64 %6563 to i32*
  store i32 0, i32* %6566
  store %struct.Memory* %loadMem_433dc6, %struct.Memory** %MEMORY
  br label %block_.L_433dcd

block_.L_433dcd:                                  ; preds = %block_433df1, %routine_idivl__ecx.exit1053
  %loadMem_433dcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6568 = getelementptr inbounds %struct.GPR, %struct.GPR* %6567, i32 0, i32 33
  %6569 = getelementptr inbounds %struct.Reg, %struct.Reg* %6568, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %6569 to i64*
  %6570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6571 = getelementptr inbounds %struct.GPR, %struct.GPR* %6570, i32 0, i32 1
  %6572 = getelementptr inbounds %struct.Reg, %struct.Reg* %6571, i32 0, i32 0
  %RAX.i1032 = bitcast %union.anon* %6572 to i64*
  %6573 = load i64, i64* %PC.i1031
  %6574 = add i64 %6573, 5
  store i64 %6574, i64* %PC.i1031
  store i64 2, i64* %RAX.i1032, align 8
  store %struct.Memory* %loadMem_433dcd, %struct.Memory** %MEMORY
  %loadMem_433dd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6576 = getelementptr inbounds %struct.GPR, %struct.GPR* %6575, i32 0, i32 33
  %6577 = getelementptr inbounds %struct.Reg, %struct.Reg* %6576, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %6577 to i64*
  %6578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6579 = getelementptr inbounds %struct.GPR, %struct.GPR* %6578, i32 0, i32 5
  %6580 = getelementptr inbounds %struct.Reg, %struct.Reg* %6579, i32 0, i32 0
  %RCX.i1029 = bitcast %union.anon* %6580 to i64*
  %6581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6582 = getelementptr inbounds %struct.GPR, %struct.GPR* %6581, i32 0, i32 15
  %6583 = getelementptr inbounds %struct.Reg, %struct.Reg* %6582, i32 0, i32 0
  %RBP.i1030 = bitcast %union.anon* %6583 to i64*
  %6584 = load i64, i64* %RBP.i1030
  %6585 = sub i64 %6584, 28
  %6586 = load i64, i64* %PC.i1028
  %6587 = add i64 %6586, 3
  store i64 %6587, i64* %PC.i1028
  %6588 = inttoptr i64 %6585 to i32*
  %6589 = load i32, i32* %6588
  %6590 = zext i32 %6589 to i64
  store i64 %6590, i64* %RCX.i1029, align 8
  store %struct.Memory* %loadMem_433dd2, %struct.Memory** %MEMORY
  %loadMem_433dd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6592 = getelementptr inbounds %struct.GPR, %struct.GPR* %6591, i32 0, i32 33
  %6593 = getelementptr inbounds %struct.Reg, %struct.Reg* %6592, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %6593 to i64*
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6595 = getelementptr inbounds %struct.GPR, %struct.GPR* %6594, i32 0, i32 7
  %6596 = getelementptr inbounds %struct.Reg, %struct.Reg* %6595, i32 0, i32 0
  %RDX.i1026 = bitcast %union.anon* %6596 to i64*
  %6597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6598 = getelementptr inbounds %struct.GPR, %struct.GPR* %6597, i32 0, i32 15
  %6599 = getelementptr inbounds %struct.Reg, %struct.Reg* %6598, i32 0, i32 0
  %RBP.i1027 = bitcast %union.anon* %6599 to i64*
  %6600 = load i64, i64* %RBP.i1027
  %6601 = sub i64 %6600, 36
  %6602 = load i64, i64* %PC.i1025
  %6603 = add i64 %6602, 3
  store i64 %6603, i64* %PC.i1025
  %6604 = inttoptr i64 %6601 to i32*
  %6605 = load i32, i32* %6604
  %6606 = zext i32 %6605 to i64
  store i64 %6606, i64* %RDX.i1026, align 8
  store %struct.Memory* %loadMem_433dd5, %struct.Memory** %MEMORY
  %loadMem_433dd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6608 = getelementptr inbounds %struct.GPR, %struct.GPR* %6607, i32 0, i32 33
  %6609 = getelementptr inbounds %struct.Reg, %struct.Reg* %6608, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %6609 to i64*
  %6610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6611 = getelementptr inbounds %struct.GPR, %struct.GPR* %6610, i32 0, i32 1
  %6612 = getelementptr inbounds %struct.Reg, %struct.Reg* %6611, i32 0, i32 0
  %EAX.i1023 = bitcast %union.anon* %6612 to i32*
  %6613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6614 = getelementptr inbounds %struct.GPR, %struct.GPR* %6613, i32 0, i32 15
  %6615 = getelementptr inbounds %struct.Reg, %struct.Reg* %6614, i32 0, i32 0
  %RBP.i1024 = bitcast %union.anon* %6615 to i64*
  %6616 = load i64, i64* %RBP.i1024
  %6617 = sub i64 %6616, 176
  %6618 = load i32, i32* %EAX.i1023
  %6619 = zext i32 %6618 to i64
  %6620 = load i64, i64* %PC.i1022
  %6621 = add i64 %6620, 6
  store i64 %6621, i64* %PC.i1022
  %6622 = inttoptr i64 %6617 to i32*
  store i32 %6618, i32* %6622
  store %struct.Memory* %loadMem_433dd8, %struct.Memory** %MEMORY
  %loadMem_433dde = load %struct.Memory*, %struct.Memory** %MEMORY
  %6623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6624 = getelementptr inbounds %struct.GPR, %struct.GPR* %6623, i32 0, i32 33
  %6625 = getelementptr inbounds %struct.Reg, %struct.Reg* %6624, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %6625 to i64*
  %6626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6627 = getelementptr inbounds %struct.GPR, %struct.GPR* %6626, i32 0, i32 7
  %6628 = getelementptr inbounds %struct.Reg, %struct.Reg* %6627, i32 0, i32 0
  %EDX.i1020 = bitcast %union.anon* %6628 to i32*
  %6629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6630 = getelementptr inbounds %struct.GPR, %struct.GPR* %6629, i32 0, i32 1
  %6631 = getelementptr inbounds %struct.Reg, %struct.Reg* %6630, i32 0, i32 0
  %RAX.i1021 = bitcast %union.anon* %6631 to i64*
  %6632 = load i32, i32* %EDX.i1020
  %6633 = zext i32 %6632 to i64
  %6634 = load i64, i64* %PC.i1019
  %6635 = add i64 %6634, 2
  store i64 %6635, i64* %PC.i1019
  %6636 = and i64 %6633, 4294967295
  store i64 %6636, i64* %RAX.i1021, align 8
  store %struct.Memory* %loadMem_433dde, %struct.Memory** %MEMORY
  %loadMem_433de0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6638 = getelementptr inbounds %struct.GPR, %struct.GPR* %6637, i32 0, i32 33
  %6639 = getelementptr inbounds %struct.Reg, %struct.Reg* %6638, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %6639 to i64*
  %6640 = load i64, i64* %PC.i1018
  %6641 = add i64 %6640, 1
  store i64 %6641, i64* %PC.i1018
  %6642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %6643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %6644 = bitcast %union.anon* %6643 to i32*
  %6645 = load i32, i32* %6644, align 8
  %6646 = sext i32 %6645 to i64
  %6647 = lshr i64 %6646, 32
  store i64 %6647, i64* %6642, align 8
  store %struct.Memory* %loadMem_433de0, %struct.Memory** %MEMORY
  %loadMem_433de1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6649 = getelementptr inbounds %struct.GPR, %struct.GPR* %6648, i32 0, i32 33
  %6650 = getelementptr inbounds %struct.Reg, %struct.Reg* %6649, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %6650 to i64*
  %6651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6652 = getelementptr inbounds %struct.GPR, %struct.GPR* %6651, i32 0, i32 9
  %6653 = getelementptr inbounds %struct.Reg, %struct.Reg* %6652, i32 0, i32 0
  %RSI.i1016 = bitcast %union.anon* %6653 to i64*
  %6654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6655 = getelementptr inbounds %struct.GPR, %struct.GPR* %6654, i32 0, i32 15
  %6656 = getelementptr inbounds %struct.Reg, %struct.Reg* %6655, i32 0, i32 0
  %RBP.i1017 = bitcast %union.anon* %6656 to i64*
  %6657 = load i64, i64* %RBP.i1017
  %6658 = sub i64 %6657, 176
  %6659 = load i64, i64* %PC.i1015
  %6660 = add i64 %6659, 6
  store i64 %6660, i64* %PC.i1015
  %6661 = inttoptr i64 %6658 to i32*
  %6662 = load i32, i32* %6661
  %6663 = zext i32 %6662 to i64
  store i64 %6663, i64* %RSI.i1016, align 8
  store %struct.Memory* %loadMem_433de1, %struct.Memory** %MEMORY
  %loadMem_433de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6665 = getelementptr inbounds %struct.GPR, %struct.GPR* %6664, i32 0, i32 33
  %6666 = getelementptr inbounds %struct.Reg, %struct.Reg* %6665, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %6666 to i64*
  %6667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6668 = getelementptr inbounds %struct.GPR, %struct.GPR* %6667, i32 0, i32 9
  %6669 = getelementptr inbounds %struct.Reg, %struct.Reg* %6668, i32 0, i32 0
  %ESI.i1012 = bitcast %union.anon* %6669 to i32*
  %6670 = load i32, i32* %ESI.i1012
  %6671 = zext i32 %6670 to i64
  %6672 = load i64, i64* %PC.i1011
  %6673 = add i64 %6672, 2
  store i64 %6673, i64* %PC.i1011
  %6674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %6675 = bitcast %union.anon* %6674 to i32*
  %6676 = load i32, i32* %6675, align 8
  %6677 = zext i32 %6676 to i64
  %6678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %6679 = bitcast %union.anon* %6678 to i32*
  %6680 = load i32, i32* %6679, align 8
  %6681 = zext i32 %6680 to i64
  %6682 = shl i64 %6671, 32
  %6683 = ashr exact i64 %6682, 32
  %6684 = shl i64 %6681, 32
  %6685 = or i64 %6684, %6677
  %6686 = sdiv i64 %6685, %6683
  %6687 = shl i64 %6686, 32
  %6688 = ashr exact i64 %6687, 32
  %6689 = icmp eq i64 %6686, %6688
  br i1 %6689, label %6694, label %6690

; <label>:6690:                                   ; preds = %block_.L_433dcd
  %6691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6692 = load i64, i64* %6691, align 8
  %6693 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6692, %struct.Memory* %loadMem_433de7)
  br label %routine_idivl__esi.exit1013

; <label>:6694:                                   ; preds = %block_.L_433dcd
  %6695 = srem i64 %6685, %6683
  %6696 = getelementptr inbounds %union.anon, %union.anon* %6674, i64 0, i32 0
  %6697 = and i64 %6686, 4294967295
  store i64 %6697, i64* %6696, align 8
  %6698 = getelementptr inbounds %union.anon, %union.anon* %6678, i64 0, i32 0
  %6699 = and i64 %6695, 4294967295
  store i64 %6699, i64* %6698, align 8
  %6700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6700, align 1
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %6701, align 1
  %6702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6702, align 1
  %6703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6703, align 1
  %6704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %6704, align 1
  %6705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6705, align 1
  br label %routine_idivl__esi.exit1013

routine_idivl__esi.exit1013:                      ; preds = %6690, %6694
  %6706 = phi %struct.Memory* [ %6693, %6690 ], [ %loadMem_433de7, %6694 ]
  store %struct.Memory* %6706, %struct.Memory** %MEMORY
  %loadMem_433de9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6708 = getelementptr inbounds %struct.GPR, %struct.GPR* %6707, i32 0, i32 33
  %6709 = getelementptr inbounds %struct.Reg, %struct.Reg* %6708, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %6709 to i64*
  %6710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6711 = getelementptr inbounds %struct.GPR, %struct.GPR* %6710, i32 0, i32 1
  %6712 = getelementptr inbounds %struct.Reg, %struct.Reg* %6711, i32 0, i32 0
  %EAX.i1009 = bitcast %union.anon* %6712 to i32*
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6714 = getelementptr inbounds %struct.GPR, %struct.GPR* %6713, i32 0, i32 5
  %6715 = getelementptr inbounds %struct.Reg, %struct.Reg* %6714, i32 0, i32 0
  %ECX.i1010 = bitcast %union.anon* %6715 to i32*
  %6716 = load i32, i32* %ECX.i1010
  %6717 = zext i32 %6716 to i64
  %6718 = load i32, i32* %EAX.i1009
  %6719 = zext i32 %6718 to i64
  %6720 = load i64, i64* %PC.i1008
  %6721 = add i64 %6720, 2
  store i64 %6721, i64* %PC.i1008
  %6722 = sub i32 %6716, %6718
  %6723 = icmp ult i32 %6716, %6718
  %6724 = zext i1 %6723 to i8
  %6725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6724, i8* %6725, align 1
  %6726 = and i32 %6722, 255
  %6727 = call i32 @llvm.ctpop.i32(i32 %6726)
  %6728 = trunc i32 %6727 to i8
  %6729 = and i8 %6728, 1
  %6730 = xor i8 %6729, 1
  %6731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6730, i8* %6731, align 1
  %6732 = xor i64 %6719, %6717
  %6733 = trunc i64 %6732 to i32
  %6734 = xor i32 %6733, %6722
  %6735 = lshr i32 %6734, 4
  %6736 = trunc i32 %6735 to i8
  %6737 = and i8 %6736, 1
  %6738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6737, i8* %6738, align 1
  %6739 = icmp eq i32 %6722, 0
  %6740 = zext i1 %6739 to i8
  %6741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6740, i8* %6741, align 1
  %6742 = lshr i32 %6722, 31
  %6743 = trunc i32 %6742 to i8
  %6744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6743, i8* %6744, align 1
  %6745 = lshr i32 %6716, 31
  %6746 = lshr i32 %6718, 31
  %6747 = xor i32 %6746, %6745
  %6748 = xor i32 %6742, %6745
  %6749 = add i32 %6748, %6747
  %6750 = icmp eq i32 %6749, 2
  %6751 = zext i1 %6750 to i8
  %6752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6751, i8* %6752, align 1
  store %struct.Memory* %loadMem_433de9, %struct.Memory** %MEMORY
  %loadMem_433deb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6754 = getelementptr inbounds %struct.GPR, %struct.GPR* %6753, i32 0, i32 33
  %6755 = getelementptr inbounds %struct.Reg, %struct.Reg* %6754, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %6755 to i64*
  %6756 = load i64, i64* %PC.i1007
  %6757 = add i64 %6756, 75
  %6758 = load i64, i64* %PC.i1007
  %6759 = add i64 %6758, 6
  %6760 = load i64, i64* %PC.i1007
  %6761 = add i64 %6760, 6
  store i64 %6761, i64* %PC.i1007
  %6762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6763 = load i8, i8* %6762, align 1
  %6764 = icmp ne i8 %6763, 0
  %6765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6766 = load i8, i8* %6765, align 1
  %6767 = icmp ne i8 %6766, 0
  %6768 = xor i1 %6764, %6767
  %6769 = xor i1 %6768, true
  %6770 = zext i1 %6769 to i8
  store i8 %6770, i8* %BRANCH_TAKEN, align 1
  %6771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6772 = select i1 %6768, i64 %6759, i64 %6757
  store i64 %6772, i64* %6771, align 8
  store %struct.Memory* %loadMem_433deb, %struct.Memory** %MEMORY
  %loadBr_433deb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_433deb = icmp eq i8 %loadBr_433deb, 1
  br i1 %cmpBr_433deb, label %block_.L_433e36, label %block_433df1

block_433df1:                                     ; preds = %routine_idivl__esi.exit1013
  %loadMem_433df1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6774 = getelementptr inbounds %struct.GPR, %struct.GPR* %6773, i32 0, i32 33
  %6775 = getelementptr inbounds %struct.Reg, %struct.Reg* %6774, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %6775 to i64*
  %6776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6777 = getelementptr inbounds %struct.GPR, %struct.GPR* %6776, i32 0, i32 1
  %6778 = getelementptr inbounds %struct.Reg, %struct.Reg* %6777, i32 0, i32 0
  %EAX.i1005 = bitcast %union.anon* %6778 to i32*
  %6779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6780 = getelementptr inbounds %struct.GPR, %struct.GPR* %6779, i32 0, i32 1
  %6781 = getelementptr inbounds %struct.Reg, %struct.Reg* %6780, i32 0, i32 0
  %RAX.i1006 = bitcast %union.anon* %6781 to i64*
  %6782 = load i64, i64* %RAX.i1006
  %6783 = load i32, i32* %EAX.i1005
  %6784 = zext i32 %6783 to i64
  %6785 = load i64, i64* %PC.i1004
  %6786 = add i64 %6785, 2
  store i64 %6786, i64* %PC.i1004
  %6787 = xor i64 %6784, %6782
  %6788 = trunc i64 %6787 to i32
  %6789 = and i64 %6787, 4294967295
  store i64 %6789, i64* %RAX.i1006, align 8
  %6790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6790, align 1
  %6791 = and i32 %6788, 255
  %6792 = call i32 @llvm.ctpop.i32(i32 %6791)
  %6793 = trunc i32 %6792 to i8
  %6794 = and i8 %6793, 1
  %6795 = xor i8 %6794, 1
  %6796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6795, i8* %6796, align 1
  %6797 = icmp eq i32 %6788, 0
  %6798 = zext i1 %6797 to i8
  %6799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6798, i8* %6799, align 1
  %6800 = lshr i32 %6788, 31
  %6801 = trunc i32 %6800 to i8
  %6802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6801, i8* %6802, align 1
  %6803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6803, align 1
  %6804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6804, align 1
  store %struct.Memory* %loadMem_433df1, %struct.Memory** %MEMORY
  %loadMem_433df3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6806 = getelementptr inbounds %struct.GPR, %struct.GPR* %6805, i32 0, i32 33
  %6807 = getelementptr inbounds %struct.Reg, %struct.Reg* %6806, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %6807 to i64*
  %6808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6809 = getelementptr inbounds %struct.GPR, %struct.GPR* %6808, i32 0, i32 5
  %6810 = getelementptr inbounds %struct.Reg, %struct.Reg* %6809, i32 0, i32 0
  %RCX.i1002 = bitcast %union.anon* %6810 to i64*
  %6811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6812 = getelementptr inbounds %struct.GPR, %struct.GPR* %6811, i32 0, i32 15
  %6813 = getelementptr inbounds %struct.Reg, %struct.Reg* %6812, i32 0, i32 0
  %RBP.i1003 = bitcast %union.anon* %6813 to i64*
  %6814 = load i64, i64* %RBP.i1003
  %6815 = sub i64 %6814, 28
  %6816 = load i64, i64* %PC.i1001
  %6817 = add i64 %6816, 3
  store i64 %6817, i64* %PC.i1001
  %6818 = inttoptr i64 %6815 to i32*
  %6819 = load i32, i32* %6818
  %6820 = zext i32 %6819 to i64
  store i64 %6820, i64* %RCX.i1002, align 8
  store %struct.Memory* %loadMem_433df3, %struct.Memory** %MEMORY
  %loadMem_433df6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6822 = getelementptr inbounds %struct.GPR, %struct.GPR* %6821, i32 0, i32 33
  %6823 = getelementptr inbounds %struct.Reg, %struct.Reg* %6822, i32 0, i32 0
  %PC.i998 = bitcast %union.anon* %6823 to i64*
  %6824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6825 = getelementptr inbounds %struct.GPR, %struct.GPR* %6824, i32 0, i32 5
  %6826 = getelementptr inbounds %struct.Reg, %struct.Reg* %6825, i32 0, i32 0
  %RCX.i999 = bitcast %union.anon* %6826 to i64*
  %6827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6828 = getelementptr inbounds %struct.GPR, %struct.GPR* %6827, i32 0, i32 15
  %6829 = getelementptr inbounds %struct.Reg, %struct.Reg* %6828, i32 0, i32 0
  %RBP.i1000 = bitcast %union.anon* %6829 to i64*
  %6830 = load i64, i64* %RCX.i999
  %6831 = load i64, i64* %RBP.i1000
  %6832 = sub i64 %6831, 28
  %6833 = load i64, i64* %PC.i998
  %6834 = add i64 %6833, 4
  store i64 %6834, i64* %PC.i998
  %6835 = inttoptr i64 %6832 to i32*
  %6836 = load i32, i32* %6835
  %6837 = shl i64 %6830, 32
  %6838 = ashr exact i64 %6837, 32
  %6839 = sext i32 %6836 to i64
  %6840 = mul i64 %6839, %6838
  %6841 = trunc i64 %6840 to i32
  %6842 = and i64 %6840, 4294967295
  store i64 %6842, i64* %RCX.i999, align 8
  %6843 = shl i64 %6840, 32
  %6844 = ashr exact i64 %6843, 32
  %6845 = icmp ne i64 %6844, %6840
  %6846 = zext i1 %6845 to i8
  %6847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6846, i8* %6847, align 1
  %6848 = and i32 %6841, 255
  %6849 = call i32 @llvm.ctpop.i32(i32 %6848)
  %6850 = trunc i32 %6849 to i8
  %6851 = and i8 %6850, 1
  %6852 = xor i8 %6851, 1
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6852, i8* %6853, align 1
  %6854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6854, align 1
  %6855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6855, align 1
  %6856 = lshr i32 %6841, 31
  %6857 = trunc i32 %6856 to i8
  %6858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6857, i8* %6858, align 1
  %6859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6846, i8* %6859, align 1
  store %struct.Memory* %loadMem_433df6, %struct.Memory** %MEMORY
  %loadMem_433dfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6861 = getelementptr inbounds %struct.GPR, %struct.GPR* %6860, i32 0, i32 33
  %6862 = getelementptr inbounds %struct.Reg, %struct.Reg* %6861, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %6862 to i64*
  %6863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6864 = getelementptr inbounds %struct.GPR, %struct.GPR* %6863, i32 0, i32 7
  %6865 = getelementptr inbounds %struct.Reg, %struct.Reg* %6864, i32 0, i32 0
  %RDX.i997 = bitcast %union.anon* %6865 to i64*
  %6866 = load i64, i64* %PC.i996
  %6867 = add i64 %6866, 8
  store i64 %6867, i64* %PC.i996
  %6868 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6868, i64* %RDX.i997, align 8
  store %struct.Memory* %loadMem_433dfa, %struct.Memory** %MEMORY
  %loadMem_433e02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6870 = getelementptr inbounds %struct.GPR, %struct.GPR* %6869, i32 0, i32 33
  %6871 = getelementptr inbounds %struct.Reg, %struct.Reg* %6870, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %6871 to i64*
  %6872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6873 = getelementptr inbounds %struct.GPR, %struct.GPR* %6872, i32 0, i32 7
  %6874 = getelementptr inbounds %struct.Reg, %struct.Reg* %6873, i32 0, i32 0
  %RDX.i995 = bitcast %union.anon* %6874 to i64*
  %6875 = load i64, i64* %RDX.i995
  %6876 = add i64 %6875, 71776
  %6877 = load i64, i64* %PC.i994
  %6878 = add i64 %6877, 7
  store i64 %6878, i64* %PC.i994
  %6879 = inttoptr i64 %6876 to i64*
  %6880 = load i64, i64* %6879
  store i64 %6880, i64* %RDX.i995, align 8
  store %struct.Memory* %loadMem_433e02, %struct.Memory** %MEMORY
  %loadMem_433e09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6882 = getelementptr inbounds %struct.GPR, %struct.GPR* %6881, i32 0, i32 33
  %6883 = getelementptr inbounds %struct.Reg, %struct.Reg* %6882, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %6883 to i64*
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6885 = getelementptr inbounds %struct.GPR, %struct.GPR* %6884, i32 0, i32 1
  %6886 = getelementptr inbounds %struct.Reg, %struct.Reg* %6885, i32 0, i32 0
  %RAX.i992 = bitcast %union.anon* %6886 to i64*
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6888 = getelementptr inbounds %struct.GPR, %struct.GPR* %6887, i32 0, i32 15
  %6889 = getelementptr inbounds %struct.Reg, %struct.Reg* %6888, i32 0, i32 0
  %RBP.i993 = bitcast %union.anon* %6889 to i64*
  %6890 = load i64, i64* %RAX.i992
  %6891 = load i64, i64* %RBP.i993
  %6892 = sub i64 %6891, 28
  %6893 = load i64, i64* %PC.i991
  %6894 = add i64 %6893, 3
  store i64 %6894, i64* %PC.i991
  %6895 = trunc i64 %6890 to i32
  %6896 = inttoptr i64 %6892 to i32*
  %6897 = load i32, i32* %6896
  %6898 = sub i32 %6895, %6897
  %6899 = zext i32 %6898 to i64
  store i64 %6899, i64* %RAX.i992, align 8
  %6900 = icmp ult i32 %6895, %6897
  %6901 = zext i1 %6900 to i8
  %6902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6901, i8* %6902, align 1
  %6903 = and i32 %6898, 255
  %6904 = call i32 @llvm.ctpop.i32(i32 %6903)
  %6905 = trunc i32 %6904 to i8
  %6906 = and i8 %6905, 1
  %6907 = xor i8 %6906, 1
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6907, i8* %6908, align 1
  %6909 = xor i32 %6897, %6895
  %6910 = xor i32 %6909, %6898
  %6911 = lshr i32 %6910, 4
  %6912 = trunc i32 %6911 to i8
  %6913 = and i8 %6912, 1
  %6914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6913, i8* %6914, align 1
  %6915 = icmp eq i32 %6898, 0
  %6916 = zext i1 %6915 to i8
  %6917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6916, i8* %6917, align 1
  %6918 = lshr i32 %6898, 31
  %6919 = trunc i32 %6918 to i8
  %6920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6919, i8* %6920, align 1
  %6921 = lshr i32 %6895, 31
  %6922 = lshr i32 %6897, 31
  %6923 = xor i32 %6922, %6921
  %6924 = xor i32 %6918, %6921
  %6925 = add i32 %6924, %6923
  %6926 = icmp eq i32 %6925, 2
  %6927 = zext i1 %6926 to i8
  %6928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6927, i8* %6928, align 1
  store %struct.Memory* %loadMem_433e09, %struct.Memory** %MEMORY
  %loadMem_433e0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6930 = getelementptr inbounds %struct.GPR, %struct.GPR* %6929, i32 0, i32 33
  %6931 = getelementptr inbounds %struct.Reg, %struct.Reg* %6930, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %6931 to i64*
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6933 = getelementptr inbounds %struct.GPR, %struct.GPR* %6932, i32 0, i32 1
  %6934 = getelementptr inbounds %struct.Reg, %struct.Reg* %6933, i32 0, i32 0
  %EAX.i989 = bitcast %union.anon* %6934 to i32*
  %6935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6936 = getelementptr inbounds %struct.GPR, %struct.GPR* %6935, i32 0, i32 9
  %6937 = getelementptr inbounds %struct.Reg, %struct.Reg* %6936, i32 0, i32 0
  %RSI.i990 = bitcast %union.anon* %6937 to i64*
  %6938 = load i32, i32* %EAX.i989
  %6939 = zext i32 %6938 to i64
  %6940 = load i64, i64* %PC.i988
  %6941 = add i64 %6940, 3
  store i64 %6941, i64* %PC.i988
  %6942 = shl i64 %6939, 32
  %6943 = ashr exact i64 %6942, 32
  store i64 %6943, i64* %RSI.i990, align 8
  store %struct.Memory* %loadMem_433e0c, %struct.Memory** %MEMORY
  %loadMem_433e0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6945 = getelementptr inbounds %struct.GPR, %struct.GPR* %6944, i32 0, i32 33
  %6946 = getelementptr inbounds %struct.Reg, %struct.Reg* %6945, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %6946 to i64*
  %6947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6948 = getelementptr inbounds %struct.GPR, %struct.GPR* %6947, i32 0, i32 5
  %6949 = getelementptr inbounds %struct.Reg, %struct.Reg* %6948, i32 0, i32 0
  %ECX.i985 = bitcast %union.anon* %6949 to i32*
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6951 = getelementptr inbounds %struct.GPR, %struct.GPR* %6950, i32 0, i32 7
  %6952 = getelementptr inbounds %struct.Reg, %struct.Reg* %6951, i32 0, i32 0
  %RDX.i986 = bitcast %union.anon* %6952 to i64*
  %6953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6954 = getelementptr inbounds %struct.GPR, %struct.GPR* %6953, i32 0, i32 9
  %6955 = getelementptr inbounds %struct.Reg, %struct.Reg* %6954, i32 0, i32 0
  %RSI.i987 = bitcast %union.anon* %6955 to i64*
  %6956 = load i64, i64* %RDX.i986
  %6957 = load i64, i64* %RSI.i987
  %6958 = mul i64 %6957, 4
  %6959 = add i64 %6958, %6956
  %6960 = load i32, i32* %ECX.i985
  %6961 = zext i32 %6960 to i64
  %6962 = load i64, i64* %PC.i984
  %6963 = add i64 %6962, 3
  store i64 %6963, i64* %PC.i984
  %6964 = inttoptr i64 %6959 to i32*
  store i32 %6960, i32* %6964
  store %struct.Memory* %loadMem_433e0f, %struct.Memory** %MEMORY
  %loadMem_433e12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6966 = getelementptr inbounds %struct.GPR, %struct.GPR* %6965, i32 0, i32 33
  %6967 = getelementptr inbounds %struct.Reg, %struct.Reg* %6966, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %6967 to i64*
  %6968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6969 = getelementptr inbounds %struct.GPR, %struct.GPR* %6968, i32 0, i32 7
  %6970 = getelementptr inbounds %struct.Reg, %struct.Reg* %6969, i32 0, i32 0
  %RDX.i983 = bitcast %union.anon* %6970 to i64*
  %6971 = load i64, i64* %PC.i982
  %6972 = add i64 %6971, 8
  store i64 %6972, i64* %PC.i982
  %6973 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6973, i64* %RDX.i983, align 8
  store %struct.Memory* %loadMem_433e12, %struct.Memory** %MEMORY
  %loadMem_433e1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6975 = getelementptr inbounds %struct.GPR, %struct.GPR* %6974, i32 0, i32 33
  %6976 = getelementptr inbounds %struct.Reg, %struct.Reg* %6975, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %6976 to i64*
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6978 = getelementptr inbounds %struct.GPR, %struct.GPR* %6977, i32 0, i32 7
  %6979 = getelementptr inbounds %struct.Reg, %struct.Reg* %6978, i32 0, i32 0
  %RDX.i981 = bitcast %union.anon* %6979 to i64*
  %6980 = load i64, i64* %RDX.i981
  %6981 = add i64 %6980, 71776
  %6982 = load i64, i64* %PC.i980
  %6983 = add i64 %6982, 7
  store i64 %6983, i64* %PC.i980
  %6984 = inttoptr i64 %6981 to i64*
  %6985 = load i64, i64* %6984
  store i64 %6985, i64* %RDX.i981, align 8
  store %struct.Memory* %loadMem_433e1a, %struct.Memory** %MEMORY
  %loadMem_433e21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6987 = getelementptr inbounds %struct.GPR, %struct.GPR* %6986, i32 0, i32 33
  %6988 = getelementptr inbounds %struct.Reg, %struct.Reg* %6987, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %6988 to i64*
  %6989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6990 = getelementptr inbounds %struct.GPR, %struct.GPR* %6989, i32 0, i32 9
  %6991 = getelementptr inbounds %struct.Reg, %struct.Reg* %6990, i32 0, i32 0
  %RSI.i978 = bitcast %union.anon* %6991 to i64*
  %6992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6993 = getelementptr inbounds %struct.GPR, %struct.GPR* %6992, i32 0, i32 15
  %6994 = getelementptr inbounds %struct.Reg, %struct.Reg* %6993, i32 0, i32 0
  %RBP.i979 = bitcast %union.anon* %6994 to i64*
  %6995 = load i64, i64* %RBP.i979
  %6996 = sub i64 %6995, 28
  %6997 = load i64, i64* %PC.i977
  %6998 = add i64 %6997, 4
  store i64 %6998, i64* %PC.i977
  %6999 = inttoptr i64 %6996 to i32*
  %7000 = load i32, i32* %6999
  %7001 = sext i32 %7000 to i64
  store i64 %7001, i64* %RSI.i978, align 8
  store %struct.Memory* %loadMem_433e21, %struct.Memory** %MEMORY
  %loadMem_433e25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7003 = getelementptr inbounds %struct.GPR, %struct.GPR* %7002, i32 0, i32 33
  %7004 = getelementptr inbounds %struct.Reg, %struct.Reg* %7003, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %7004 to i64*
  %7005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7006 = getelementptr inbounds %struct.GPR, %struct.GPR* %7005, i32 0, i32 5
  %7007 = getelementptr inbounds %struct.Reg, %struct.Reg* %7006, i32 0, i32 0
  %ECX.i974 = bitcast %union.anon* %7007 to i32*
  %7008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7009 = getelementptr inbounds %struct.GPR, %struct.GPR* %7008, i32 0, i32 7
  %7010 = getelementptr inbounds %struct.Reg, %struct.Reg* %7009, i32 0, i32 0
  %RDX.i975 = bitcast %union.anon* %7010 to i64*
  %7011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7012 = getelementptr inbounds %struct.GPR, %struct.GPR* %7011, i32 0, i32 9
  %7013 = getelementptr inbounds %struct.Reg, %struct.Reg* %7012, i32 0, i32 0
  %RSI.i976 = bitcast %union.anon* %7013 to i64*
  %7014 = load i64, i64* %RDX.i975
  %7015 = load i64, i64* %RSI.i976
  %7016 = mul i64 %7015, 4
  %7017 = add i64 %7016, %7014
  %7018 = load i32, i32* %ECX.i974
  %7019 = zext i32 %7018 to i64
  %7020 = load i64, i64* %PC.i973
  %7021 = add i64 %7020, 3
  store i64 %7021, i64* %PC.i973
  %7022 = inttoptr i64 %7017 to i32*
  store i32 %7018, i32* %7022
  store %struct.Memory* %loadMem_433e25, %struct.Memory** %MEMORY
  %loadMem_433e28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7024 = getelementptr inbounds %struct.GPR, %struct.GPR* %7023, i32 0, i32 33
  %7025 = getelementptr inbounds %struct.Reg, %struct.Reg* %7024, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %7025 to i64*
  %7026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7027 = getelementptr inbounds %struct.GPR, %struct.GPR* %7026, i32 0, i32 1
  %7028 = getelementptr inbounds %struct.Reg, %struct.Reg* %7027, i32 0, i32 0
  %RAX.i971 = bitcast %union.anon* %7028 to i64*
  %7029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7030 = getelementptr inbounds %struct.GPR, %struct.GPR* %7029, i32 0, i32 15
  %7031 = getelementptr inbounds %struct.Reg, %struct.Reg* %7030, i32 0, i32 0
  %RBP.i972 = bitcast %union.anon* %7031 to i64*
  %7032 = load i64, i64* %RBP.i972
  %7033 = sub i64 %7032, 28
  %7034 = load i64, i64* %PC.i970
  %7035 = add i64 %7034, 3
  store i64 %7035, i64* %PC.i970
  %7036 = inttoptr i64 %7033 to i32*
  %7037 = load i32, i32* %7036
  %7038 = zext i32 %7037 to i64
  store i64 %7038, i64* %RAX.i971, align 8
  store %struct.Memory* %loadMem_433e28, %struct.Memory** %MEMORY
  %loadMem_433e2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7040 = getelementptr inbounds %struct.GPR, %struct.GPR* %7039, i32 0, i32 33
  %7041 = getelementptr inbounds %struct.Reg, %struct.Reg* %7040, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %7041 to i64*
  %7042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7043 = getelementptr inbounds %struct.GPR, %struct.GPR* %7042, i32 0, i32 1
  %7044 = getelementptr inbounds %struct.Reg, %struct.Reg* %7043, i32 0, i32 0
  %RAX.i969 = bitcast %union.anon* %7044 to i64*
  %7045 = load i64, i64* %RAX.i969
  %7046 = load i64, i64* %PC.i968
  %7047 = add i64 %7046, 3
  store i64 %7047, i64* %PC.i968
  %7048 = trunc i64 %7045 to i32
  %7049 = add i32 1, %7048
  %7050 = zext i32 %7049 to i64
  store i64 %7050, i64* %RAX.i969, align 8
  %7051 = icmp ult i32 %7049, %7048
  %7052 = icmp ult i32 %7049, 1
  %7053 = or i1 %7051, %7052
  %7054 = zext i1 %7053 to i8
  %7055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7054, i8* %7055, align 1
  %7056 = and i32 %7049, 255
  %7057 = call i32 @llvm.ctpop.i32(i32 %7056)
  %7058 = trunc i32 %7057 to i8
  %7059 = and i8 %7058, 1
  %7060 = xor i8 %7059, 1
  %7061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7060, i8* %7061, align 1
  %7062 = xor i64 1, %7045
  %7063 = trunc i64 %7062 to i32
  %7064 = xor i32 %7063, %7049
  %7065 = lshr i32 %7064, 4
  %7066 = trunc i32 %7065 to i8
  %7067 = and i8 %7066, 1
  %7068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7067, i8* %7068, align 1
  %7069 = icmp eq i32 %7049, 0
  %7070 = zext i1 %7069 to i8
  %7071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7070, i8* %7071, align 1
  %7072 = lshr i32 %7049, 31
  %7073 = trunc i32 %7072 to i8
  %7074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7073, i8* %7074, align 1
  %7075 = lshr i32 %7048, 31
  %7076 = xor i32 %7072, %7075
  %7077 = add i32 %7076, %7072
  %7078 = icmp eq i32 %7077, 2
  %7079 = zext i1 %7078 to i8
  %7080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7079, i8* %7080, align 1
  store %struct.Memory* %loadMem_433e2b, %struct.Memory** %MEMORY
  %loadMem_433e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7082 = getelementptr inbounds %struct.GPR, %struct.GPR* %7081, i32 0, i32 33
  %7083 = getelementptr inbounds %struct.Reg, %struct.Reg* %7082, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %7083 to i64*
  %7084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7085 = getelementptr inbounds %struct.GPR, %struct.GPR* %7084, i32 0, i32 1
  %7086 = getelementptr inbounds %struct.Reg, %struct.Reg* %7085, i32 0, i32 0
  %EAX.i966 = bitcast %union.anon* %7086 to i32*
  %7087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7088 = getelementptr inbounds %struct.GPR, %struct.GPR* %7087, i32 0, i32 15
  %7089 = getelementptr inbounds %struct.Reg, %struct.Reg* %7088, i32 0, i32 0
  %RBP.i967 = bitcast %union.anon* %7089 to i64*
  %7090 = load i64, i64* %RBP.i967
  %7091 = sub i64 %7090, 28
  %7092 = load i32, i32* %EAX.i966
  %7093 = zext i32 %7092 to i64
  %7094 = load i64, i64* %PC.i965
  %7095 = add i64 %7094, 3
  store i64 %7095, i64* %PC.i965
  %7096 = inttoptr i64 %7091 to i32*
  store i32 %7092, i32* %7096
  store %struct.Memory* %loadMem_433e2e, %struct.Memory** %MEMORY
  %loadMem_433e31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7098 = getelementptr inbounds %struct.GPR, %struct.GPR* %7097, i32 0, i32 33
  %7099 = getelementptr inbounds %struct.Reg, %struct.Reg* %7098, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %7099 to i64*
  %7100 = load i64, i64* %PC.i964
  %7101 = add i64 %7100, -100
  %7102 = load i64, i64* %PC.i964
  %7103 = add i64 %7102, 5
  store i64 %7103, i64* %PC.i964
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7101, i64* %7104, align 8
  store %struct.Memory* %loadMem_433e31, %struct.Memory** %MEMORY
  br label %block_.L_433dcd

block_.L_433e36:                                  ; preds = %routine_idivl__esi.exit1013
  %loadMem_433e36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7106 = getelementptr inbounds %struct.GPR, %struct.GPR* %7105, i32 0, i32 33
  %7107 = getelementptr inbounds %struct.Reg, %struct.Reg* %7106, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %7107 to i64*
  %7108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7109 = getelementptr inbounds %struct.GPR, %struct.GPR* %7108, i32 0, i32 1
  %7110 = getelementptr inbounds %struct.Reg, %struct.Reg* %7109, i32 0, i32 0
  %RAX.i963 = bitcast %union.anon* %7110 to i64*
  %7111 = load i64, i64* %PC.i962
  %7112 = add i64 %7111, 8
  store i64 %7112, i64* %PC.i962
  %7113 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7113, i64* %RAX.i963, align 8
  store %struct.Memory* %loadMem_433e36, %struct.Memory** %MEMORY
  %loadMem_433e3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7115 = getelementptr inbounds %struct.GPR, %struct.GPR* %7114, i32 0, i32 33
  %7116 = getelementptr inbounds %struct.Reg, %struct.Reg* %7115, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %7116 to i64*
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7118 = getelementptr inbounds %struct.GPR, %struct.GPR* %7117, i32 0, i32 1
  %7119 = getelementptr inbounds %struct.Reg, %struct.Reg* %7118, i32 0, i32 0
  %RAX.i960 = bitcast %union.anon* %7119 to i64*
  %7120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7121 = getelementptr inbounds %struct.GPR, %struct.GPR* %7120, i32 0, i32 5
  %7122 = getelementptr inbounds %struct.Reg, %struct.Reg* %7121, i32 0, i32 0
  %RCX.i961 = bitcast %union.anon* %7122 to i64*
  %7123 = load i64, i64* %RAX.i960
  %7124 = add i64 %7123, 64
  %7125 = load i64, i64* %PC.i959
  %7126 = add i64 %7125, 3
  store i64 %7126, i64* %PC.i959
  %7127 = inttoptr i64 %7124 to i32*
  %7128 = load i32, i32* %7127
  %7129 = zext i32 %7128 to i64
  store i64 %7129, i64* %RCX.i961, align 8
  store %struct.Memory* %loadMem_433e3e, %struct.Memory** %MEMORY
  %loadMem_433e41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7131 = getelementptr inbounds %struct.GPR, %struct.GPR* %7130, i32 0, i32 33
  %7132 = getelementptr inbounds %struct.Reg, %struct.Reg* %7131, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %7132 to i64*
  %7133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7134 = getelementptr inbounds %struct.GPR, %struct.GPR* %7133, i32 0, i32 1
  %7135 = getelementptr inbounds %struct.Reg, %struct.Reg* %7134, i32 0, i32 0
  %RAX.i958 = bitcast %union.anon* %7135 to i64*
  %7136 = load i64, i64* %PC.i957
  %7137 = add i64 %7136, 8
  store i64 %7137, i64* %PC.i957
  %7138 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7138, i64* %RAX.i958, align 8
  store %struct.Memory* %loadMem_433e41, %struct.Memory** %MEMORY
  %loadMem_433e49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7140 = getelementptr inbounds %struct.GPR, %struct.GPR* %7139, i32 0, i32 33
  %7141 = getelementptr inbounds %struct.Reg, %struct.Reg* %7140, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %7141 to i64*
  %7142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7143 = getelementptr inbounds %struct.GPR, %struct.GPR* %7142, i32 0, i32 1
  %7144 = getelementptr inbounds %struct.Reg, %struct.Reg* %7143, i32 0, i32 0
  %RAX.i955 = bitcast %union.anon* %7144 to i64*
  %7145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7146 = getelementptr inbounds %struct.GPR, %struct.GPR* %7145, i32 0, i32 5
  %7147 = getelementptr inbounds %struct.Reg, %struct.Reg* %7146, i32 0, i32 0
  %RCX.i956 = bitcast %union.anon* %7147 to i64*
  %7148 = load i64, i64* %RCX.i956
  %7149 = load i64, i64* %RAX.i955
  %7150 = add i64 %7149, 72728
  %7151 = load i64, i64* %PC.i954
  %7152 = add i64 %7151, 6
  store i64 %7152, i64* %PC.i954
  %7153 = trunc i64 %7148 to i32
  %7154 = inttoptr i64 %7150 to i32*
  %7155 = load i32, i32* %7154
  %7156 = add i32 %7155, %7153
  %7157 = zext i32 %7156 to i64
  store i64 %7157, i64* %RCX.i956, align 8
  %7158 = icmp ult i32 %7156, %7153
  %7159 = icmp ult i32 %7156, %7155
  %7160 = or i1 %7158, %7159
  %7161 = zext i1 %7160 to i8
  %7162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7161, i8* %7162, align 1
  %7163 = and i32 %7156, 255
  %7164 = call i32 @llvm.ctpop.i32(i32 %7163)
  %7165 = trunc i32 %7164 to i8
  %7166 = and i8 %7165, 1
  %7167 = xor i8 %7166, 1
  %7168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7167, i8* %7168, align 1
  %7169 = xor i32 %7155, %7153
  %7170 = xor i32 %7169, %7156
  %7171 = lshr i32 %7170, 4
  %7172 = trunc i32 %7171 to i8
  %7173 = and i8 %7172, 1
  %7174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7173, i8* %7174, align 1
  %7175 = icmp eq i32 %7156, 0
  %7176 = zext i1 %7175 to i8
  %7177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7176, i8* %7177, align 1
  %7178 = lshr i32 %7156, 31
  %7179 = trunc i32 %7178 to i8
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7179, i8* %7180, align 1
  %7181 = lshr i32 %7153, 31
  %7182 = lshr i32 %7155, 31
  %7183 = xor i32 %7178, %7181
  %7184 = xor i32 %7178, %7182
  %7185 = add i32 %7183, %7184
  %7186 = icmp eq i32 %7185, 2
  %7187 = zext i1 %7186 to i8
  %7188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7187, i8* %7188, align 1
  store %struct.Memory* %loadMem_433e49, %struct.Memory** %MEMORY
  %loadMem_433e4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7190 = getelementptr inbounds %struct.GPR, %struct.GPR* %7189, i32 0, i32 33
  %7191 = getelementptr inbounds %struct.Reg, %struct.Reg* %7190, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %7191 to i64*
  %7192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7193 = getelementptr inbounds %struct.GPR, %struct.GPR* %7192, i32 0, i32 1
  %7194 = getelementptr inbounds %struct.Reg, %struct.Reg* %7193, i32 0, i32 0
  %RAX.i953 = bitcast %union.anon* %7194 to i64*
  %7195 = load i64, i64* %PC.i952
  %7196 = add i64 %7195, 8
  store i64 %7196, i64* %PC.i952
  %7197 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7197, i64* %RAX.i953, align 8
  store %struct.Memory* %loadMem_433e4f, %struct.Memory** %MEMORY
  %loadMem_433e57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7199 = getelementptr inbounds %struct.GPR, %struct.GPR* %7198, i32 0, i32 33
  %7200 = getelementptr inbounds %struct.Reg, %struct.Reg* %7199, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %7200 to i64*
  %7201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7202 = getelementptr inbounds %struct.GPR, %struct.GPR* %7201, i32 0, i32 5
  %7203 = getelementptr inbounds %struct.Reg, %struct.Reg* %7202, i32 0, i32 0
  %ECX.i950 = bitcast %union.anon* %7203 to i32*
  %7204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7205 = getelementptr inbounds %struct.GPR, %struct.GPR* %7204, i32 0, i32 1
  %7206 = getelementptr inbounds %struct.Reg, %struct.Reg* %7205, i32 0, i32 0
  %RAX.i951 = bitcast %union.anon* %7206 to i64*
  %7207 = load i64, i64* %RAX.i951
  %7208 = add i64 %7207, 52
  %7209 = load i32, i32* %ECX.i950
  %7210 = zext i32 %7209 to i64
  %7211 = load i64, i64* %PC.i949
  %7212 = add i64 %7211, 3
  store i64 %7212, i64* %PC.i949
  %7213 = inttoptr i64 %7208 to i32*
  store i32 %7209, i32* %7213
  store %struct.Memory* %loadMem_433e57, %struct.Memory** %MEMORY
  %loadMem_433e5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7215 = getelementptr inbounds %struct.GPR, %struct.GPR* %7214, i32 0, i32 33
  %7216 = getelementptr inbounds %struct.Reg, %struct.Reg* %7215, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %7216 to i64*
  %7217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7218 = getelementptr inbounds %struct.GPR, %struct.GPR* %7217, i32 0, i32 1
  %7219 = getelementptr inbounds %struct.Reg, %struct.Reg* %7218, i32 0, i32 0
  %RAX.i948 = bitcast %union.anon* %7219 to i64*
  %7220 = load i64, i64* %PC.i947
  %7221 = add i64 %7220, 8
  store i64 %7221, i64* %PC.i947
  %7222 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7222, i64* %RAX.i948, align 8
  store %struct.Memory* %loadMem_433e5a, %struct.Memory** %MEMORY
  %loadMem_433e62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7224 = getelementptr inbounds %struct.GPR, %struct.GPR* %7223, i32 0, i32 33
  %7225 = getelementptr inbounds %struct.Reg, %struct.Reg* %7224, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %7225 to i64*
  %7226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7227 = getelementptr inbounds %struct.GPR, %struct.GPR* %7226, i32 0, i32 1
  %7228 = getelementptr inbounds %struct.Reg, %struct.Reg* %7227, i32 0, i32 0
  %RAX.i945 = bitcast %union.anon* %7228 to i64*
  %7229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7230 = getelementptr inbounds %struct.GPR, %struct.GPR* %7229, i32 0, i32 5
  %7231 = getelementptr inbounds %struct.Reg, %struct.Reg* %7230, i32 0, i32 0
  %RCX.i946 = bitcast %union.anon* %7231 to i64*
  %7232 = load i64, i64* %RAX.i945
  %7233 = add i64 %7232, 68
  %7234 = load i64, i64* %PC.i944
  %7235 = add i64 %7234, 3
  store i64 %7235, i64* %PC.i944
  %7236 = inttoptr i64 %7233 to i32*
  %7237 = load i32, i32* %7236
  %7238 = zext i32 %7237 to i64
  store i64 %7238, i64* %RCX.i946, align 8
  store %struct.Memory* %loadMem_433e62, %struct.Memory** %MEMORY
  %loadMem_433e65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7240 = getelementptr inbounds %struct.GPR, %struct.GPR* %7239, i32 0, i32 33
  %7241 = getelementptr inbounds %struct.Reg, %struct.Reg* %7240, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %7241 to i64*
  %7242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7243 = getelementptr inbounds %struct.GPR, %struct.GPR* %7242, i32 0, i32 1
  %7244 = getelementptr inbounds %struct.Reg, %struct.Reg* %7243, i32 0, i32 0
  %RAX.i943 = bitcast %union.anon* %7244 to i64*
  %7245 = load i64, i64* %PC.i942
  %7246 = add i64 %7245, 8
  store i64 %7246, i64* %PC.i942
  %7247 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7247, i64* %RAX.i943, align 8
  store %struct.Memory* %loadMem_433e65, %struct.Memory** %MEMORY
  %loadMem_433e6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7249 = getelementptr inbounds %struct.GPR, %struct.GPR* %7248, i32 0, i32 33
  %7250 = getelementptr inbounds %struct.Reg, %struct.Reg* %7249, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %7250 to i64*
  %7251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7252 = getelementptr inbounds %struct.GPR, %struct.GPR* %7251, i32 0, i32 1
  %7253 = getelementptr inbounds %struct.Reg, %struct.Reg* %7252, i32 0, i32 0
  %RAX.i940 = bitcast %union.anon* %7253 to i64*
  %7254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7255 = getelementptr inbounds %struct.GPR, %struct.GPR* %7254, i32 0, i32 5
  %7256 = getelementptr inbounds %struct.Reg, %struct.Reg* %7255, i32 0, i32 0
  %RCX.i941 = bitcast %union.anon* %7256 to i64*
  %7257 = load i64, i64* %RCX.i941
  %7258 = load i64, i64* %RAX.i940
  %7259 = add i64 %7258, 72732
  %7260 = load i64, i64* %PC.i939
  %7261 = add i64 %7260, 6
  store i64 %7261, i64* %PC.i939
  %7262 = trunc i64 %7257 to i32
  %7263 = inttoptr i64 %7259 to i32*
  %7264 = load i32, i32* %7263
  %7265 = add i32 %7264, %7262
  %7266 = zext i32 %7265 to i64
  store i64 %7266, i64* %RCX.i941, align 8
  %7267 = icmp ult i32 %7265, %7262
  %7268 = icmp ult i32 %7265, %7264
  %7269 = or i1 %7267, %7268
  %7270 = zext i1 %7269 to i8
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7270, i8* %7271, align 1
  %7272 = and i32 %7265, 255
  %7273 = call i32 @llvm.ctpop.i32(i32 %7272)
  %7274 = trunc i32 %7273 to i8
  %7275 = and i8 %7274, 1
  %7276 = xor i8 %7275, 1
  %7277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7276, i8* %7277, align 1
  %7278 = xor i32 %7264, %7262
  %7279 = xor i32 %7278, %7265
  %7280 = lshr i32 %7279, 4
  %7281 = trunc i32 %7280 to i8
  %7282 = and i8 %7281, 1
  %7283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7282, i8* %7283, align 1
  %7284 = icmp eq i32 %7265, 0
  %7285 = zext i1 %7284 to i8
  %7286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7285, i8* %7286, align 1
  %7287 = lshr i32 %7265, 31
  %7288 = trunc i32 %7287 to i8
  %7289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7288, i8* %7289, align 1
  %7290 = lshr i32 %7262, 31
  %7291 = lshr i32 %7264, 31
  %7292 = xor i32 %7287, %7290
  %7293 = xor i32 %7287, %7291
  %7294 = add i32 %7292, %7293
  %7295 = icmp eq i32 %7294, 2
  %7296 = zext i1 %7295 to i8
  %7297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7296, i8* %7297, align 1
  store %struct.Memory* %loadMem_433e6d, %struct.Memory** %MEMORY
  %loadMem_433e73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7299 = getelementptr inbounds %struct.GPR, %struct.GPR* %7298, i32 0, i32 33
  %7300 = getelementptr inbounds %struct.Reg, %struct.Reg* %7299, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %7300 to i64*
  %7301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7302 = getelementptr inbounds %struct.GPR, %struct.GPR* %7301, i32 0, i32 1
  %7303 = getelementptr inbounds %struct.Reg, %struct.Reg* %7302, i32 0, i32 0
  %RAX.i938 = bitcast %union.anon* %7303 to i64*
  %7304 = load i64, i64* %PC.i937
  %7305 = add i64 %7304, 8
  store i64 %7305, i64* %PC.i937
  %7306 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7306, i64* %RAX.i938, align 8
  store %struct.Memory* %loadMem_433e73, %struct.Memory** %MEMORY
  %loadMem_433e7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7308 = getelementptr inbounds %struct.GPR, %struct.GPR* %7307, i32 0, i32 33
  %7309 = getelementptr inbounds %struct.Reg, %struct.Reg* %7308, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %7309 to i64*
  %7310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7311 = getelementptr inbounds %struct.GPR, %struct.GPR* %7310, i32 0, i32 5
  %7312 = getelementptr inbounds %struct.Reg, %struct.Reg* %7311, i32 0, i32 0
  %ECX.i935 = bitcast %union.anon* %7312 to i32*
  %7313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7314 = getelementptr inbounds %struct.GPR, %struct.GPR* %7313, i32 0, i32 1
  %7315 = getelementptr inbounds %struct.Reg, %struct.Reg* %7314, i32 0, i32 0
  %RAX.i936 = bitcast %union.anon* %7315 to i64*
  %7316 = load i64, i64* %RAX.i936
  %7317 = add i64 %7316, 60
  %7318 = load i32, i32* %ECX.i935
  %7319 = zext i32 %7318 to i64
  %7320 = load i64, i64* %PC.i934
  %7321 = add i64 %7320, 3
  store i64 %7321, i64* %PC.i934
  %7322 = inttoptr i64 %7317 to i32*
  store i32 %7318, i32* %7322
  store %struct.Memory* %loadMem_433e7b, %struct.Memory** %MEMORY
  %loadMem_433e7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7324 = getelementptr inbounds %struct.GPR, %struct.GPR* %7323, i32 0, i32 33
  %7325 = getelementptr inbounds %struct.Reg, %struct.Reg* %7324, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %7325 to i64*
  %7326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7327 = getelementptr inbounds %struct.GPR, %struct.GPR* %7326, i32 0, i32 1
  %7328 = getelementptr inbounds %struct.Reg, %struct.Reg* %7327, i32 0, i32 0
  %RAX.i933 = bitcast %union.anon* %7328 to i64*
  %7329 = load i64, i64* %PC.i932
  %7330 = add i64 %7329, 8
  store i64 %7330, i64* %PC.i932
  %7331 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7331, i64* %RAX.i933, align 8
  store %struct.Memory* %loadMem_433e7e, %struct.Memory** %MEMORY
  %loadMem_433e86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7333 = getelementptr inbounds %struct.GPR, %struct.GPR* %7332, i32 0, i32 33
  %7334 = getelementptr inbounds %struct.Reg, %struct.Reg* %7333, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %7334 to i64*
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7336 = getelementptr inbounds %struct.GPR, %struct.GPR* %7335, i32 0, i32 1
  %7337 = getelementptr inbounds %struct.Reg, %struct.Reg* %7336, i32 0, i32 0
  %RAX.i931 = bitcast %union.anon* %7337 to i64*
  %7338 = load i64, i64* %RAX.i931
  %7339 = add i64 %7338, 72700
  %7340 = load i64, i64* %PC.i930
  %7341 = add i64 %7340, 7
  store i64 %7341, i64* %PC.i930
  %7342 = inttoptr i64 %7339 to i32*
  %7343 = load i32, i32* %7342
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7344, align 1
  %7345 = and i32 %7343, 255
  %7346 = call i32 @llvm.ctpop.i32(i32 %7345)
  %7347 = trunc i32 %7346 to i8
  %7348 = and i8 %7347, 1
  %7349 = xor i8 %7348, 1
  %7350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7349, i8* %7350, align 1
  %7351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7351, align 1
  %7352 = icmp eq i32 %7343, 0
  %7353 = zext i1 %7352 to i8
  %7354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7353, i8* %7354, align 1
  %7355 = lshr i32 %7343, 31
  %7356 = trunc i32 %7355 to i8
  %7357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7356, i8* %7357, align 1
  %7358 = lshr i32 %7343, 31
  %7359 = xor i32 %7355, %7358
  %7360 = add i32 %7359, %7358
  %7361 = icmp eq i32 %7360, 2
  %7362 = zext i1 %7361 to i8
  %7363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7362, i8* %7363, align 1
  store %struct.Memory* %loadMem_433e86, %struct.Memory** %MEMORY
  %loadMem_433e8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7365 = getelementptr inbounds %struct.GPR, %struct.GPR* %7364, i32 0, i32 33
  %7366 = getelementptr inbounds %struct.Reg, %struct.Reg* %7365, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %7366 to i64*
  %7367 = load i64, i64* %PC.i929
  %7368 = add i64 %7367, 350
  %7369 = load i64, i64* %PC.i929
  %7370 = add i64 %7369, 6
  %7371 = load i64, i64* %PC.i929
  %7372 = add i64 %7371, 6
  store i64 %7372, i64* %PC.i929
  %7373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7374 = load i8, i8* %7373, align 1
  store i8 %7374, i8* %BRANCH_TAKEN, align 1
  %7375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7376 = icmp ne i8 %7374, 0
  %7377 = select i1 %7376, i64 %7368, i64 %7370
  store i64 %7377, i64* %7375, align 8
  store %struct.Memory* %loadMem_433e8d, %struct.Memory** %MEMORY
  %loadBr_433e8d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_433e8d = icmp eq i8 %loadBr_433e8d, 1
  br i1 %cmpBr_433e8d, label %block_.L_433feb, label %block_433e93

block_433e93:                                     ; preds = %block_.L_433e36
  %loadMem_433e93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7379 = getelementptr inbounds %struct.GPR, %struct.GPR* %7378, i32 0, i32 33
  %7380 = getelementptr inbounds %struct.Reg, %struct.Reg* %7379, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %7380 to i64*
  %7381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7382 = getelementptr inbounds %struct.GPR, %struct.GPR* %7381, i32 0, i32 1
  %7383 = getelementptr inbounds %struct.Reg, %struct.Reg* %7382, i32 0, i32 0
  %RAX.i928 = bitcast %union.anon* %7383 to i64*
  %7384 = load i64, i64* %PC.i927
  %7385 = add i64 %7384, 5
  store i64 %7385, i64* %PC.i927
  store i64 16, i64* %RAX.i928, align 8
  store %struct.Memory* %loadMem_433e93, %struct.Memory** %MEMORY
  %loadMem_433e98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7387 = getelementptr inbounds %struct.GPR, %struct.GPR* %7386, i32 0, i32 33
  %7388 = getelementptr inbounds %struct.Reg, %struct.Reg* %7387, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %7388 to i64*
  %7389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7390 = getelementptr inbounds %struct.GPR, %struct.GPR* %7389, i32 0, i32 5
  %7391 = getelementptr inbounds %struct.Reg, %struct.Reg* %7390, i32 0, i32 0
  %RCX.i926 = bitcast %union.anon* %7391 to i64*
  %7392 = load i64, i64* %PC.i925
  %7393 = add i64 %7392, 8
  store i64 %7393, i64* %PC.i925
  %7394 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7394, i64* %RCX.i926, align 8
  store %struct.Memory* %loadMem_433e98, %struct.Memory** %MEMORY
  %loadMem_433ea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7396 = getelementptr inbounds %struct.GPR, %struct.GPR* %7395, i32 0, i32 33
  %7397 = getelementptr inbounds %struct.Reg, %struct.Reg* %7396, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %7397 to i64*
  %7398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7399 = getelementptr inbounds %struct.GPR, %struct.GPR* %7398, i32 0, i32 5
  %7400 = getelementptr inbounds %struct.Reg, %struct.Reg* %7399, i32 0, i32 0
  %RCX.i923 = bitcast %union.anon* %7400 to i64*
  %7401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7402 = getelementptr inbounds %struct.GPR, %struct.GPR* %7401, i32 0, i32 7
  %7403 = getelementptr inbounds %struct.Reg, %struct.Reg* %7402, i32 0, i32 0
  %RDX.i924 = bitcast %union.anon* %7403 to i64*
  %7404 = load i64, i64* %RCX.i923
  %7405 = add i64 %7404, 52
  %7406 = load i64, i64* %PC.i922
  %7407 = add i64 %7406, 3
  store i64 %7407, i64* %PC.i922
  %7408 = inttoptr i64 %7405 to i32*
  %7409 = load i32, i32* %7408
  %7410 = zext i32 %7409 to i64
  store i64 %7410, i64* %RDX.i924, align 8
  store %struct.Memory* %loadMem_433ea0, %struct.Memory** %MEMORY
  %loadMem_433ea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7412 = getelementptr inbounds %struct.GPR, %struct.GPR* %7411, i32 0, i32 33
  %7413 = getelementptr inbounds %struct.Reg, %struct.Reg* %7412, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %7413 to i64*
  %7414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7415 = getelementptr inbounds %struct.GPR, %struct.GPR* %7414, i32 0, i32 5
  %7416 = getelementptr inbounds %struct.Reg, %struct.Reg* %7415, i32 0, i32 0
  %RCX.i921 = bitcast %union.anon* %7416 to i64*
  %7417 = load i64, i64* %PC.i920
  %7418 = add i64 %7417, 8
  store i64 %7418, i64* %PC.i920
  %7419 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7419, i64* %RCX.i921, align 8
  store %struct.Memory* %loadMem_433ea3, %struct.Memory** %MEMORY
  %loadMem_433eab = load %struct.Memory*, %struct.Memory** %MEMORY
  %7420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7421 = getelementptr inbounds %struct.GPR, %struct.GPR* %7420, i32 0, i32 33
  %7422 = getelementptr inbounds %struct.Reg, %struct.Reg* %7421, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %7422 to i64*
  %7423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7424 = getelementptr inbounds %struct.GPR, %struct.GPR* %7423, i32 0, i32 5
  %7425 = getelementptr inbounds %struct.Reg, %struct.Reg* %7424, i32 0, i32 0
  %RCX.i919 = bitcast %union.anon* %7425 to i64*
  %7426 = load i64, i64* %RCX.i919
  %7427 = add i64 %7426, 72700
  %7428 = load i64, i64* %PC.i918
  %7429 = add i64 %7428, 7
  store i64 %7429, i64* %PC.i918
  %7430 = inttoptr i64 %7427 to i32*
  %7431 = load i32, i32* %7430
  %7432 = sext i32 %7431 to i64
  store i64 %7432, i64* %RCX.i919, align 8
  store %struct.Memory* %loadMem_433eab, %struct.Memory** %MEMORY
  %loadMem_433eb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7434 = getelementptr inbounds %struct.GPR, %struct.GPR* %7433, i32 0, i32 33
  %7435 = getelementptr inbounds %struct.Reg, %struct.Reg* %7434, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %7435 to i64*
  %7436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7437 = getelementptr inbounds %struct.GPR, %struct.GPR* %7436, i32 0, i32 1
  %7438 = getelementptr inbounds %struct.Reg, %struct.Reg* %7437, i32 0, i32 0
  %EAX.i916 = bitcast %union.anon* %7438 to i32*
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7440 = getelementptr inbounds %struct.GPR, %struct.GPR* %7439, i32 0, i32 15
  %7441 = getelementptr inbounds %struct.Reg, %struct.Reg* %7440, i32 0, i32 0
  %RBP.i917 = bitcast %union.anon* %7441 to i64*
  %7442 = load i64, i64* %RBP.i917
  %7443 = sub i64 %7442, 180
  %7444 = load i32, i32* %EAX.i916
  %7445 = zext i32 %7444 to i64
  %7446 = load i64, i64* %PC.i915
  %7447 = add i64 %7446, 6
  store i64 %7447, i64* %PC.i915
  %7448 = inttoptr i64 %7443 to i32*
  store i32 %7444, i32* %7448
  store %struct.Memory* %loadMem_433eb2, %struct.Memory** %MEMORY
  %loadMem_433eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7450 = getelementptr inbounds %struct.GPR, %struct.GPR* %7449, i32 0, i32 33
  %7451 = getelementptr inbounds %struct.Reg, %struct.Reg* %7450, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %7451 to i64*
  %7452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7453 = getelementptr inbounds %struct.GPR, %struct.GPR* %7452, i32 0, i32 7
  %7454 = getelementptr inbounds %struct.Reg, %struct.Reg* %7453, i32 0, i32 0
  %EDX.i913 = bitcast %union.anon* %7454 to i32*
  %7455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7456 = getelementptr inbounds %struct.GPR, %struct.GPR* %7455, i32 0, i32 15
  %7457 = getelementptr inbounds %struct.Reg, %struct.Reg* %7456, i32 0, i32 0
  %RBP.i914 = bitcast %union.anon* %7457 to i64*
  %7458 = load i64, i64* %RBP.i914
  %7459 = sub i64 %7458, 184
  %7460 = load i32, i32* %EDX.i913
  %7461 = zext i32 %7460 to i64
  %7462 = load i64, i64* %PC.i912
  %7463 = add i64 %7462, 6
  store i64 %7463, i64* %PC.i912
  %7464 = inttoptr i64 %7459 to i32*
  store i32 %7460, i32* %7464
  store %struct.Memory* %loadMem_433eb8, %struct.Memory** %MEMORY
  %loadMem_433ebe = load %struct.Memory*, %struct.Memory** %MEMORY
  %7465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7466 = getelementptr inbounds %struct.GPR, %struct.GPR* %7465, i32 0, i32 33
  %7467 = getelementptr inbounds %struct.Reg, %struct.Reg* %7466, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %7467 to i64*
  %7468 = load i64, i64* %PC.i911
  %7469 = add i64 %7468, 1
  store i64 %7469, i64* %PC.i911
  %7470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %7471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7472 = bitcast %union.anon* %7471 to i32*
  %7473 = load i32, i32* %7472, align 8
  %7474 = sext i32 %7473 to i64
  %7475 = lshr i64 %7474, 32
  store i64 %7475, i64* %7470, align 8
  store %struct.Memory* %loadMem_433ebe, %struct.Memory** %MEMORY
  %loadMem_433ebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7477 = getelementptr inbounds %struct.GPR, %struct.GPR* %7476, i32 0, i32 33
  %7478 = getelementptr inbounds %struct.Reg, %struct.Reg* %7477, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %7478 to i64*
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7480 = getelementptr inbounds %struct.GPR, %struct.GPR* %7479, i32 0, i32 5
  %7481 = getelementptr inbounds %struct.Reg, %struct.Reg* %7480, i32 0, i32 0
  %RCX.i906 = bitcast %union.anon* %7481 to i64*
  %7482 = load i64, i64* %RCX.i906
  %7483 = mul i64 %7482, 4
  %7484 = add i64 %7483, 7125280
  %7485 = load i64, i64* %PC.i905
  %7486 = add i64 %7485, 7
  store i64 %7486, i64* %PC.i905
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7488 = bitcast %union.anon* %7487 to i32*
  %7489 = load i32, i32* %7488, align 8
  %7490 = zext i32 %7489 to i64
  %7491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %7492 = bitcast %union.anon* %7491 to i32*
  %7493 = load i32, i32* %7492, align 8
  %7494 = zext i32 %7493 to i64
  %7495 = inttoptr i64 %7484 to i32*
  %7496 = load i32, i32* %7495
  %7497 = sext i32 %7496 to i64
  %7498 = shl i64 %7494, 32
  %7499 = or i64 %7498, %7490
  %7500 = sdiv i64 %7499, %7497
  %7501 = shl i64 %7500, 32
  %7502 = ashr exact i64 %7501, 32
  %7503 = icmp eq i64 %7500, %7502
  br i1 %7503, label %7508, label %7504

; <label>:7504:                                   ; preds = %block_433e93
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7506 = load i64, i64* %7505, align 8
  %7507 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7506, %struct.Memory* %loadMem_433ebf)
  br label %routine_idivl_0x6cb920___rcx_4_.exit907

; <label>:7508:                                   ; preds = %block_433e93
  %7509 = srem i64 %7499, %7497
  %7510 = getelementptr inbounds %union.anon, %union.anon* %7487, i64 0, i32 0
  %7511 = and i64 %7500, 4294967295
  store i64 %7511, i64* %7510, align 8
  %7512 = getelementptr inbounds %union.anon, %union.anon* %7491, i64 0, i32 0
  %7513 = and i64 %7509, 4294967295
  store i64 %7513, i64* %7512, align 8
  %7514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7514, align 1
  %7515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %7515, align 1
  %7516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7516, align 1
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7517, align 1
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7518, align 1
  %7519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7519, align 1
  br label %routine_idivl_0x6cb920___rcx_4_.exit907

routine_idivl_0x6cb920___rcx_4_.exit907:          ; preds = %7504, %7508
  %7520 = phi %struct.Memory* [ %7507, %7504 ], [ %loadMem_433ebf, %7508 ]
  store %struct.Memory* %7520, %struct.Memory** %MEMORY
  %loadMem_433ec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7522 = getelementptr inbounds %struct.GPR, %struct.GPR* %7521, i32 0, i32 33
  %7523 = getelementptr inbounds %struct.Reg, %struct.Reg* %7522, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %7523 to i64*
  %7524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7525 = getelementptr inbounds %struct.GPR, %struct.GPR* %7524, i32 0, i32 9
  %7526 = getelementptr inbounds %struct.Reg, %struct.Reg* %7525, i32 0, i32 0
  %RSI.i903 = bitcast %union.anon* %7526 to i64*
  %7527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7528 = getelementptr inbounds %struct.GPR, %struct.GPR* %7527, i32 0, i32 15
  %7529 = getelementptr inbounds %struct.Reg, %struct.Reg* %7528, i32 0, i32 0
  %RBP.i904 = bitcast %union.anon* %7529 to i64*
  %7530 = load i64, i64* %RBP.i904
  %7531 = sub i64 %7530, 184
  %7532 = load i64, i64* %PC.i902
  %7533 = add i64 %7532, 6
  store i64 %7533, i64* %PC.i902
  %7534 = inttoptr i64 %7531 to i32*
  %7535 = load i32, i32* %7534
  %7536 = zext i32 %7535 to i64
  store i64 %7536, i64* %RSI.i903, align 8
  store %struct.Memory* %loadMem_433ec6, %struct.Memory** %MEMORY
  %loadMem_433ecc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7538 = getelementptr inbounds %struct.GPR, %struct.GPR* %7537, i32 0, i32 33
  %7539 = getelementptr inbounds %struct.Reg, %struct.Reg* %7538, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %7539 to i64*
  %7540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7541 = getelementptr inbounds %struct.GPR, %struct.GPR* %7540, i32 0, i32 1
  %7542 = getelementptr inbounds %struct.Reg, %struct.Reg* %7541, i32 0, i32 0
  %EAX.i900 = bitcast %union.anon* %7542 to i32*
  %7543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7544 = getelementptr inbounds %struct.GPR, %struct.GPR* %7543, i32 0, i32 15
  %7545 = getelementptr inbounds %struct.Reg, %struct.Reg* %7544, i32 0, i32 0
  %RBP.i901 = bitcast %union.anon* %7545 to i64*
  %7546 = load i64, i64* %RBP.i901
  %7547 = sub i64 %7546, 188
  %7548 = load i32, i32* %EAX.i900
  %7549 = zext i32 %7548 to i64
  %7550 = load i64, i64* %PC.i899
  %7551 = add i64 %7550, 6
  store i64 %7551, i64* %PC.i899
  %7552 = inttoptr i64 %7547 to i32*
  store i32 %7548, i32* %7552
  store %struct.Memory* %loadMem_433ecc, %struct.Memory** %MEMORY
  %loadMem_433ed2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7554 = getelementptr inbounds %struct.GPR, %struct.GPR* %7553, i32 0, i32 33
  %7555 = getelementptr inbounds %struct.Reg, %struct.Reg* %7554, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %7555 to i64*
  %7556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7557 = getelementptr inbounds %struct.GPR, %struct.GPR* %7556, i32 0, i32 9
  %7558 = getelementptr inbounds %struct.Reg, %struct.Reg* %7557, i32 0, i32 0
  %ESI.i897 = bitcast %union.anon* %7558 to i32*
  %7559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7560 = getelementptr inbounds %struct.GPR, %struct.GPR* %7559, i32 0, i32 1
  %7561 = getelementptr inbounds %struct.Reg, %struct.Reg* %7560, i32 0, i32 0
  %RAX.i898 = bitcast %union.anon* %7561 to i64*
  %7562 = load i32, i32* %ESI.i897
  %7563 = zext i32 %7562 to i64
  %7564 = load i64, i64* %PC.i896
  %7565 = add i64 %7564, 2
  store i64 %7565, i64* %PC.i896
  %7566 = and i64 %7563, 4294967295
  store i64 %7566, i64* %RAX.i898, align 8
  store %struct.Memory* %loadMem_433ed2, %struct.Memory** %MEMORY
  %loadMem_433ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7568 = getelementptr inbounds %struct.GPR, %struct.GPR* %7567, i32 0, i32 33
  %7569 = getelementptr inbounds %struct.Reg, %struct.Reg* %7568, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %7569 to i64*
  %7570 = load i64, i64* %PC.i895
  %7571 = add i64 %7570, 1
  store i64 %7571, i64* %PC.i895
  %7572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %7573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7574 = bitcast %union.anon* %7573 to i32*
  %7575 = load i32, i32* %7574, align 8
  %7576 = sext i32 %7575 to i64
  %7577 = lshr i64 %7576, 32
  store i64 %7577, i64* %7572, align 8
  store %struct.Memory* %loadMem_433ed4, %struct.Memory** %MEMORY
  %loadMem_433ed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7579 = getelementptr inbounds %struct.GPR, %struct.GPR* %7578, i32 0, i32 33
  %7580 = getelementptr inbounds %struct.Reg, %struct.Reg* %7579, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %7580 to i64*
  %7581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7582 = getelementptr inbounds %struct.GPR, %struct.GPR* %7581, i32 0, i32 11
  %7583 = getelementptr inbounds %struct.Reg, %struct.Reg* %7582, i32 0, i32 0
  %RDI.i893 = bitcast %union.anon* %7583 to i64*
  %7584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7585 = getelementptr inbounds %struct.GPR, %struct.GPR* %7584, i32 0, i32 15
  %7586 = getelementptr inbounds %struct.Reg, %struct.Reg* %7585, i32 0, i32 0
  %RBP.i894 = bitcast %union.anon* %7586 to i64*
  %7587 = load i64, i64* %RBP.i894
  %7588 = sub i64 %7587, 188
  %7589 = load i64, i64* %PC.i892
  %7590 = add i64 %7589, 6
  store i64 %7590, i64* %PC.i892
  %7591 = inttoptr i64 %7588 to i32*
  %7592 = load i32, i32* %7591
  %7593 = zext i32 %7592 to i64
  store i64 %7593, i64* %RDI.i893, align 8
  store %struct.Memory* %loadMem_433ed5, %struct.Memory** %MEMORY
  %loadMem_433edb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7595 = getelementptr inbounds %struct.GPR, %struct.GPR* %7594, i32 0, i32 33
  %7596 = getelementptr inbounds %struct.Reg, %struct.Reg* %7595, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %7596 to i64*
  %7597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7598 = getelementptr inbounds %struct.GPR, %struct.GPR* %7597, i32 0, i32 11
  %7599 = getelementptr inbounds %struct.Reg, %struct.Reg* %7598, i32 0, i32 0
  %EDI.i889 = bitcast %union.anon* %7599 to i32*
  %7600 = load i32, i32* %EDI.i889
  %7601 = zext i32 %7600 to i64
  %7602 = load i64, i64* %PC.i888
  %7603 = add i64 %7602, 2
  store i64 %7603, i64* %PC.i888
  %7604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7605 = bitcast %union.anon* %7604 to i32*
  %7606 = load i32, i32* %7605, align 8
  %7607 = zext i32 %7606 to i64
  %7608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %7609 = bitcast %union.anon* %7608 to i32*
  %7610 = load i32, i32* %7609, align 8
  %7611 = zext i32 %7610 to i64
  %7612 = shl i64 %7601, 32
  %7613 = ashr exact i64 %7612, 32
  %7614 = shl i64 %7611, 32
  %7615 = or i64 %7614, %7607
  %7616 = sdiv i64 %7615, %7613
  %7617 = shl i64 %7616, 32
  %7618 = ashr exact i64 %7617, 32
  %7619 = icmp eq i64 %7616, %7618
  br i1 %7619, label %7624, label %7620

; <label>:7620:                                   ; preds = %routine_idivl_0x6cb920___rcx_4_.exit907
  %7621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7622 = load i64, i64* %7621, align 8
  %7623 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7622, %struct.Memory* %loadMem_433edb)
  br label %routine_idivl__edi.exit

; <label>:7624:                                   ; preds = %routine_idivl_0x6cb920___rcx_4_.exit907
  %7625 = srem i64 %7615, %7613
  %7626 = getelementptr inbounds %union.anon, %union.anon* %7604, i64 0, i32 0
  %7627 = and i64 %7616, 4294967295
  store i64 %7627, i64* %7626, align 8
  %7628 = getelementptr inbounds %union.anon, %union.anon* %7608, i64 0, i32 0
  %7629 = and i64 %7625, 4294967295
  store i64 %7629, i64* %7628, align 8
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7630, align 1
  %7631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %7631, align 1
  %7632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7632, align 1
  %7633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7633, align 1
  %7634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7634, align 1
  %7635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7635, align 1
  br label %routine_idivl__edi.exit

routine_idivl__edi.exit:                          ; preds = %7620, %7624
  %7636 = phi %struct.Memory* [ %7623, %7620 ], [ %loadMem_433edb, %7624 ]
  store %struct.Memory* %7636, %struct.Memory** %MEMORY
  %loadMem_433edd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7638 = getelementptr inbounds %struct.GPR, %struct.GPR* %7637, i32 0, i32 33
  %7639 = getelementptr inbounds %struct.Reg, %struct.Reg* %7638, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %7639 to i64*
  %7640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7641 = getelementptr inbounds %struct.GPR, %struct.GPR* %7640, i32 0, i32 5
  %7642 = getelementptr inbounds %struct.Reg, %struct.Reg* %7641, i32 0, i32 0
  %RCX.i887 = bitcast %union.anon* %7642 to i64*
  %7643 = load i64, i64* %PC.i886
  %7644 = add i64 %7643, 8
  store i64 %7644, i64* %PC.i886
  %7645 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7645, i64* %RCX.i887, align 8
  store %struct.Memory* %loadMem_433edd, %struct.Memory** %MEMORY
  %loadMem_433ee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7647 = getelementptr inbounds %struct.GPR, %struct.GPR* %7646, i32 0, i32 33
  %7648 = getelementptr inbounds %struct.Reg, %struct.Reg* %7647, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %7648 to i64*
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7650 = getelementptr inbounds %struct.GPR, %struct.GPR* %7649, i32 0, i32 1
  %7651 = getelementptr inbounds %struct.Reg, %struct.Reg* %7650, i32 0, i32 0
  %EAX.i884 = bitcast %union.anon* %7651 to i32*
  %7652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7653 = getelementptr inbounds %struct.GPR, %struct.GPR* %7652, i32 0, i32 5
  %7654 = getelementptr inbounds %struct.Reg, %struct.Reg* %7653, i32 0, i32 0
  %RCX.i885 = bitcast %union.anon* %7654 to i64*
  %7655 = load i64, i64* %RCX.i885
  %7656 = add i64 %7655, 56
  %7657 = load i32, i32* %EAX.i884
  %7658 = zext i32 %7657 to i64
  %7659 = load i64, i64* %PC.i883
  %7660 = add i64 %7659, 3
  store i64 %7660, i64* %PC.i883
  %7661 = inttoptr i64 %7656 to i32*
  store i32 %7657, i32* %7661
  store %struct.Memory* %loadMem_433ee5, %struct.Memory** %MEMORY
  %loadMem_433ee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7663 = getelementptr inbounds %struct.GPR, %struct.GPR* %7662, i32 0, i32 33
  %7664 = getelementptr inbounds %struct.Reg, %struct.Reg* %7663, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %7664 to i64*
  %7665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7666 = getelementptr inbounds %struct.GPR, %struct.GPR* %7665, i32 0, i32 5
  %7667 = getelementptr inbounds %struct.Reg, %struct.Reg* %7666, i32 0, i32 0
  %RCX.i882 = bitcast %union.anon* %7667 to i64*
  %7668 = load i64, i64* %PC.i881
  %7669 = add i64 %7668, 8
  store i64 %7669, i64* %PC.i881
  %7670 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7670, i64* %RCX.i882, align 8
  store %struct.Memory* %loadMem_433ee8, %struct.Memory** %MEMORY
  %loadMem_433ef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7672 = getelementptr inbounds %struct.GPR, %struct.GPR* %7671, i32 0, i32 33
  %7673 = getelementptr inbounds %struct.Reg, %struct.Reg* %7672, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %7673 to i64*
  %7674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7675 = getelementptr inbounds %struct.GPR, %struct.GPR* %7674, i32 0, i32 1
  %7676 = getelementptr inbounds %struct.Reg, %struct.Reg* %7675, i32 0, i32 0
  %RAX.i879 = bitcast %union.anon* %7676 to i64*
  %7677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7678 = getelementptr inbounds %struct.GPR, %struct.GPR* %7677, i32 0, i32 5
  %7679 = getelementptr inbounds %struct.Reg, %struct.Reg* %7678, i32 0, i32 0
  %RCX.i880 = bitcast %union.anon* %7679 to i64*
  %7680 = load i64, i64* %RCX.i880
  %7681 = add i64 %7680, 60
  %7682 = load i64, i64* %PC.i878
  %7683 = add i64 %7682, 3
  store i64 %7683, i64* %PC.i878
  %7684 = inttoptr i64 %7681 to i32*
  %7685 = load i32, i32* %7684
  %7686 = zext i32 %7685 to i64
  store i64 %7686, i64* %RAX.i879, align 8
  store %struct.Memory* %loadMem_433ef0, %struct.Memory** %MEMORY
  %loadMem_433ef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7688 = getelementptr inbounds %struct.GPR, %struct.GPR* %7687, i32 0, i32 33
  %7689 = getelementptr inbounds %struct.Reg, %struct.Reg* %7688, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %7689 to i64*
  %7690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7691 = getelementptr inbounds %struct.GPR, %struct.GPR* %7690, i32 0, i32 5
  %7692 = getelementptr inbounds %struct.Reg, %struct.Reg* %7691, i32 0, i32 0
  %RCX.i877 = bitcast %union.anon* %7692 to i64*
  %7693 = load i64, i64* %PC.i876
  %7694 = add i64 %7693, 8
  store i64 %7694, i64* %PC.i876
  %7695 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7695, i64* %RCX.i877, align 8
  store %struct.Memory* %loadMem_433ef3, %struct.Memory** %MEMORY
  %loadMem_433efb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7697 = getelementptr inbounds %struct.GPR, %struct.GPR* %7696, i32 0, i32 33
  %7698 = getelementptr inbounds %struct.Reg, %struct.Reg* %7697, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %7698 to i64*
  %7699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7700 = getelementptr inbounds %struct.GPR, %struct.GPR* %7699, i32 0, i32 5
  %7701 = getelementptr inbounds %struct.Reg, %struct.Reg* %7700, i32 0, i32 0
  %RCX.i875 = bitcast %union.anon* %7701 to i64*
  %7702 = load i64, i64* %RCX.i875
  %7703 = add i64 %7702, 72700
  %7704 = load i64, i64* %PC.i874
  %7705 = add i64 %7704, 7
  store i64 %7705, i64* %PC.i874
  %7706 = inttoptr i64 %7703 to i32*
  %7707 = load i32, i32* %7706
  %7708 = sext i32 %7707 to i64
  store i64 %7708, i64* %RCX.i875, align 8
  store %struct.Memory* %loadMem_433efb, %struct.Memory** %MEMORY
  %loadMem_433f02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7710 = getelementptr inbounds %struct.GPR, %struct.GPR* %7709, i32 0, i32 33
  %7711 = getelementptr inbounds %struct.Reg, %struct.Reg* %7710, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %7711 to i64*
  %7712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7713 = getelementptr inbounds %struct.GPR, %struct.GPR* %7712, i32 0, i32 17
  %7714 = getelementptr inbounds %struct.Reg, %struct.Reg* %7713, i32 0, i32 0
  %R8D.i872 = bitcast %union.anon* %7714 to i32*
  %7715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7716 = getelementptr inbounds %struct.GPR, %struct.GPR* %7715, i32 0, i32 15
  %7717 = getelementptr inbounds %struct.Reg, %struct.Reg* %7716, i32 0, i32 0
  %RBP.i873 = bitcast %union.anon* %7717 to i64*
  %7718 = bitcast i32* %R8D.i872 to i64*
  %7719 = load i64, i64* %RBP.i873
  %7720 = sub i64 %7719, 180
  %7721 = load i64, i64* %PC.i871
  %7722 = add i64 %7721, 7
  store i64 %7722, i64* %PC.i871
  %7723 = inttoptr i64 %7720 to i32*
  %7724 = load i32, i32* %7723
  %7725 = zext i32 %7724 to i64
  store i64 %7725, i64* %7718, align 8
  store %struct.Memory* %loadMem_433f02, %struct.Memory** %MEMORY
  %loadMem_433f09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7727 = getelementptr inbounds %struct.GPR, %struct.GPR* %7726, i32 0, i32 33
  %7728 = getelementptr inbounds %struct.Reg, %struct.Reg* %7727, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %7728 to i64*
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7730 = getelementptr inbounds %struct.GPR, %struct.GPR* %7729, i32 0, i32 1
  %7731 = getelementptr inbounds %struct.Reg, %struct.Reg* %7730, i32 0, i32 0
  %EAX.i869 = bitcast %union.anon* %7731 to i32*
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7733 = getelementptr inbounds %struct.GPR, %struct.GPR* %7732, i32 0, i32 15
  %7734 = getelementptr inbounds %struct.Reg, %struct.Reg* %7733, i32 0, i32 0
  %RBP.i870 = bitcast %union.anon* %7734 to i64*
  %7735 = load i64, i64* %RBP.i870
  %7736 = sub i64 %7735, 192
  %7737 = load i32, i32* %EAX.i869
  %7738 = zext i32 %7737 to i64
  %7739 = load i64, i64* %PC.i868
  %7740 = add i64 %7739, 6
  store i64 %7740, i64* %PC.i868
  %7741 = inttoptr i64 %7736 to i32*
  store i32 %7737, i32* %7741
  store %struct.Memory* %loadMem_433f09, %struct.Memory** %MEMORY
  %loadMem_433f0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7743 = getelementptr inbounds %struct.GPR, %struct.GPR* %7742, i32 0, i32 33
  %7744 = getelementptr inbounds %struct.Reg, %struct.Reg* %7743, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %7744 to i64*
  %7745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7746 = getelementptr inbounds %struct.GPR, %struct.GPR* %7745, i32 0, i32 17
  %7747 = getelementptr inbounds %struct.Reg, %struct.Reg* %7746, i32 0, i32 0
  %R8D.i866 = bitcast %union.anon* %7747 to i32*
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7749 = getelementptr inbounds %struct.GPR, %struct.GPR* %7748, i32 0, i32 1
  %7750 = getelementptr inbounds %struct.Reg, %struct.Reg* %7749, i32 0, i32 0
  %RAX.i867 = bitcast %union.anon* %7750 to i64*
  %7751 = load i32, i32* %R8D.i866
  %7752 = zext i32 %7751 to i64
  %7753 = load i64, i64* %PC.i865
  %7754 = add i64 %7753, 3
  store i64 %7754, i64* %PC.i865
  %7755 = and i64 %7752, 4294967295
  store i64 %7755, i64* %RAX.i867, align 8
  store %struct.Memory* %loadMem_433f0f, %struct.Memory** %MEMORY
  %loadMem_433f12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7757 = getelementptr inbounds %struct.GPR, %struct.GPR* %7756, i32 0, i32 33
  %7758 = getelementptr inbounds %struct.Reg, %struct.Reg* %7757, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %7758 to i64*
  %7759 = load i64, i64* %PC.i864
  %7760 = add i64 %7759, 1
  store i64 %7760, i64* %PC.i864
  %7761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %7762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7763 = bitcast %union.anon* %7762 to i32*
  %7764 = load i32, i32* %7763, align 8
  %7765 = sext i32 %7764 to i64
  %7766 = lshr i64 %7765, 32
  store i64 %7766, i64* %7761, align 8
  store %struct.Memory* %loadMem_433f12, %struct.Memory** %MEMORY
  %loadMem_433f13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7768 = getelementptr inbounds %struct.GPR, %struct.GPR* %7767, i32 0, i32 33
  %7769 = getelementptr inbounds %struct.Reg, %struct.Reg* %7768, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %7769 to i64*
  %7770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7771 = getelementptr inbounds %struct.GPR, %struct.GPR* %7770, i32 0, i32 5
  %7772 = getelementptr inbounds %struct.Reg, %struct.Reg* %7771, i32 0, i32 0
  %RCX.i859 = bitcast %union.anon* %7772 to i64*
  %7773 = load i64, i64* %RCX.i859
  %7774 = mul i64 %7773, 4
  %7775 = add i64 %7774, 7125296
  %7776 = load i64, i64* %PC.i858
  %7777 = add i64 %7776, 7
  store i64 %7777, i64* %PC.i858
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7779 = bitcast %union.anon* %7778 to i32*
  %7780 = load i32, i32* %7779, align 8
  %7781 = zext i32 %7780 to i64
  %7782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %7783 = bitcast %union.anon* %7782 to i32*
  %7784 = load i32, i32* %7783, align 8
  %7785 = zext i32 %7784 to i64
  %7786 = inttoptr i64 %7775 to i32*
  %7787 = load i32, i32* %7786
  %7788 = sext i32 %7787 to i64
  %7789 = shl i64 %7785, 32
  %7790 = or i64 %7789, %7781
  %7791 = sdiv i64 %7790, %7788
  %7792 = shl i64 %7791, 32
  %7793 = ashr exact i64 %7792, 32
  %7794 = icmp eq i64 %7791, %7793
  br i1 %7794, label %7799, label %7795

; <label>:7795:                                   ; preds = %routine_idivl__edi.exit
  %7796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7797 = load i64, i64* %7796, align 8
  %7798 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7797, %struct.Memory* %loadMem_433f13)
  br label %routine_idivl_0x6cb930___rcx_4_.exit860

; <label>:7799:                                   ; preds = %routine_idivl__edi.exit
  %7800 = srem i64 %7790, %7788
  %7801 = getelementptr inbounds %union.anon, %union.anon* %7778, i64 0, i32 0
  %7802 = and i64 %7791, 4294967295
  store i64 %7802, i64* %7801, align 8
  %7803 = getelementptr inbounds %union.anon, %union.anon* %7782, i64 0, i32 0
  %7804 = and i64 %7800, 4294967295
  store i64 %7804, i64* %7803, align 8
  %7805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7805, align 1
  %7806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %7806, align 1
  %7807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7807, align 1
  %7808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7808, align 1
  %7809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7809, align 1
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7810, align 1
  br label %routine_idivl_0x6cb930___rcx_4_.exit860

routine_idivl_0x6cb930___rcx_4_.exit860:          ; preds = %7795, %7799
  %7811 = phi %struct.Memory* [ %7798, %7795 ], [ %loadMem_433f13, %7799 ]
  store %struct.Memory* %7811, %struct.Memory** %MEMORY
  %loadMem_433f1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7813 = getelementptr inbounds %struct.GPR, %struct.GPR* %7812, i32 0, i32 33
  %7814 = getelementptr inbounds %struct.Reg, %struct.Reg* %7813, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %7814 to i64*
  %7815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7816 = getelementptr inbounds %struct.GPR, %struct.GPR* %7815, i32 0, i32 19
  %7817 = getelementptr inbounds %struct.Reg, %struct.Reg* %7816, i32 0, i32 0
  %R9D.i856 = bitcast %union.anon* %7817 to i32*
  %7818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7819 = getelementptr inbounds %struct.GPR, %struct.GPR* %7818, i32 0, i32 15
  %7820 = getelementptr inbounds %struct.Reg, %struct.Reg* %7819, i32 0, i32 0
  %RBP.i857 = bitcast %union.anon* %7820 to i64*
  %7821 = bitcast i32* %R9D.i856 to i64*
  %7822 = load i64, i64* %RBP.i857
  %7823 = sub i64 %7822, 192
  %7824 = load i64, i64* %PC.i855
  %7825 = add i64 %7824, 7
  store i64 %7825, i64* %PC.i855
  %7826 = inttoptr i64 %7823 to i32*
  %7827 = load i32, i32* %7826
  %7828 = zext i32 %7827 to i64
  store i64 %7828, i64* %7821, align 8
  store %struct.Memory* %loadMem_433f1a, %struct.Memory** %MEMORY
  %loadMem_433f21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7830 = getelementptr inbounds %struct.GPR, %struct.GPR* %7829, i32 0, i32 33
  %7831 = getelementptr inbounds %struct.Reg, %struct.Reg* %7830, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %7831 to i64*
  %7832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7833 = getelementptr inbounds %struct.GPR, %struct.GPR* %7832, i32 0, i32 1
  %7834 = getelementptr inbounds %struct.Reg, %struct.Reg* %7833, i32 0, i32 0
  %EAX.i853 = bitcast %union.anon* %7834 to i32*
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7836 = getelementptr inbounds %struct.GPR, %struct.GPR* %7835, i32 0, i32 15
  %7837 = getelementptr inbounds %struct.Reg, %struct.Reg* %7836, i32 0, i32 0
  %RBP.i854 = bitcast %union.anon* %7837 to i64*
  %7838 = load i64, i64* %RBP.i854
  %7839 = sub i64 %7838, 196
  %7840 = load i32, i32* %EAX.i853
  %7841 = zext i32 %7840 to i64
  %7842 = load i64, i64* %PC.i852
  %7843 = add i64 %7842, 6
  store i64 %7843, i64* %PC.i852
  %7844 = inttoptr i64 %7839 to i32*
  store i32 %7840, i32* %7844
  store %struct.Memory* %loadMem_433f21, %struct.Memory** %MEMORY
  %loadMem_433f27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7846 = getelementptr inbounds %struct.GPR, %struct.GPR* %7845, i32 0, i32 33
  %7847 = getelementptr inbounds %struct.Reg, %struct.Reg* %7846, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %7847 to i64*
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7849 = getelementptr inbounds %struct.GPR, %struct.GPR* %7848, i32 0, i32 19
  %7850 = getelementptr inbounds %struct.Reg, %struct.Reg* %7849, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %7850 to i32*
  %7851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7852 = getelementptr inbounds %struct.GPR, %struct.GPR* %7851, i32 0, i32 1
  %7853 = getelementptr inbounds %struct.Reg, %struct.Reg* %7852, i32 0, i32 0
  %RAX.i851 = bitcast %union.anon* %7853 to i64*
  %7854 = load i32, i32* %R9D.i
  %7855 = zext i32 %7854 to i64
  %7856 = load i64, i64* %PC.i850
  %7857 = add i64 %7856, 3
  store i64 %7857, i64* %PC.i850
  %7858 = and i64 %7855, 4294967295
  store i64 %7858, i64* %RAX.i851, align 8
  store %struct.Memory* %loadMem_433f27, %struct.Memory** %MEMORY
  %loadMem_433f2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7860 = getelementptr inbounds %struct.GPR, %struct.GPR* %7859, i32 0, i32 33
  %7861 = getelementptr inbounds %struct.Reg, %struct.Reg* %7860, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %7861 to i64*
  %7862 = load i64, i64* %PC.i849
  %7863 = add i64 %7862, 1
  store i64 %7863, i64* %PC.i849
  %7864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %7865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7866 = bitcast %union.anon* %7865 to i32*
  %7867 = load i32, i32* %7866, align 8
  %7868 = sext i32 %7867 to i64
  %7869 = lshr i64 %7868, 32
  store i64 %7869, i64* %7864, align 8
  store %struct.Memory* %loadMem_433f2a, %struct.Memory** %MEMORY
  %loadMem_433f2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7871 = getelementptr inbounds %struct.GPR, %struct.GPR* %7870, i32 0, i32 33
  %7872 = getelementptr inbounds %struct.Reg, %struct.Reg* %7871, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %7872 to i64*
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7874 = getelementptr inbounds %struct.GPR, %struct.GPR* %7873, i32 0, i32 21
  %7875 = getelementptr inbounds %struct.Reg, %struct.Reg* %7874, i32 0, i32 0
  %R10D.i847 = bitcast %union.anon* %7875 to i32*
  %7876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7877 = getelementptr inbounds %struct.GPR, %struct.GPR* %7876, i32 0, i32 15
  %7878 = getelementptr inbounds %struct.Reg, %struct.Reg* %7877, i32 0, i32 0
  %RBP.i848 = bitcast %union.anon* %7878 to i64*
  %7879 = bitcast i32* %R10D.i847 to i64*
  %7880 = load i64, i64* %RBP.i848
  %7881 = sub i64 %7880, 196
  %7882 = load i64, i64* %PC.i846
  %7883 = add i64 %7882, 7
  store i64 %7883, i64* %PC.i846
  %7884 = inttoptr i64 %7881 to i32*
  %7885 = load i32, i32* %7884
  %7886 = zext i32 %7885 to i64
  store i64 %7886, i64* %7879, align 8
  store %struct.Memory* %loadMem_433f2b, %struct.Memory** %MEMORY
  %loadMem_433f32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7888 = getelementptr inbounds %struct.GPR, %struct.GPR* %7887, i32 0, i32 33
  %7889 = getelementptr inbounds %struct.Reg, %struct.Reg* %7888, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %7889 to i64*
  %7890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7891 = getelementptr inbounds %struct.GPR, %struct.GPR* %7890, i32 0, i32 21
  %7892 = getelementptr inbounds %struct.Reg, %struct.Reg* %7891, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %7892 to i32*
  %7893 = load i32, i32* %R10D.i
  %7894 = zext i32 %7893 to i64
  %7895 = load i64, i64* %PC.i843
  %7896 = add i64 %7895, 3
  store i64 %7896, i64* %PC.i843
  %7897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7898 = bitcast %union.anon* %7897 to i32*
  %7899 = load i32, i32* %7898, align 8
  %7900 = zext i32 %7899 to i64
  %7901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %7902 = bitcast %union.anon* %7901 to i32*
  %7903 = load i32, i32* %7902, align 8
  %7904 = zext i32 %7903 to i64
  %7905 = shl i64 %7894, 32
  %7906 = ashr exact i64 %7905, 32
  %7907 = shl i64 %7904, 32
  %7908 = or i64 %7907, %7900
  %7909 = sdiv i64 %7908, %7906
  %7910 = shl i64 %7909, 32
  %7911 = ashr exact i64 %7910, 32
  %7912 = icmp eq i64 %7909, %7911
  br i1 %7912, label %7917, label %7913

; <label>:7913:                                   ; preds = %routine_idivl_0x6cb930___rcx_4_.exit860
  %7914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7915 = load i64, i64* %7914, align 8
  %7916 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7915, %struct.Memory* %loadMem_433f32)
  br label %routine_idivl__r10d.exit

; <label>:7917:                                   ; preds = %routine_idivl_0x6cb930___rcx_4_.exit860
  %7918 = srem i64 %7908, %7906
  %7919 = getelementptr inbounds %union.anon, %union.anon* %7897, i64 0, i32 0
  %7920 = and i64 %7909, 4294967295
  store i64 %7920, i64* %7919, align 8
  %7921 = getelementptr inbounds %union.anon, %union.anon* %7901, i64 0, i32 0
  %7922 = and i64 %7918, 4294967295
  store i64 %7922, i64* %7921, align 8
  %7923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7923, align 1
  %7924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %7924, align 1
  %7925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7925, align 1
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7926, align 1
  %7927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7927, align 1
  %7928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7928, align 1
  br label %routine_idivl__r10d.exit

routine_idivl__r10d.exit:                         ; preds = %7913, %7917
  %7929 = phi %struct.Memory* [ %7916, %7913 ], [ %loadMem_433f32, %7917 ]
  store %struct.Memory* %7929, %struct.Memory** %MEMORY
  %loadMem_433f35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7931 = getelementptr inbounds %struct.GPR, %struct.GPR* %7930, i32 0, i32 33
  %7932 = getelementptr inbounds %struct.Reg, %struct.Reg* %7931, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %7932 to i64*
  %7933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7934 = getelementptr inbounds %struct.GPR, %struct.GPR* %7933, i32 0, i32 5
  %7935 = getelementptr inbounds %struct.Reg, %struct.Reg* %7934, i32 0, i32 0
  %RCX.i842 = bitcast %union.anon* %7935 to i64*
  %7936 = load i64, i64* %PC.i841
  %7937 = add i64 %7936, 8
  store i64 %7937, i64* %PC.i841
  %7938 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7938, i64* %RCX.i842, align 8
  store %struct.Memory* %loadMem_433f35, %struct.Memory** %MEMORY
  %loadMem_433f3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7940 = getelementptr inbounds %struct.GPR, %struct.GPR* %7939, i32 0, i32 33
  %7941 = getelementptr inbounds %struct.Reg, %struct.Reg* %7940, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %7941 to i64*
  %7942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7943 = getelementptr inbounds %struct.GPR, %struct.GPR* %7942, i32 0, i32 1
  %7944 = getelementptr inbounds %struct.Reg, %struct.Reg* %7943, i32 0, i32 0
  %EAX.i839 = bitcast %union.anon* %7944 to i32*
  %7945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7946 = getelementptr inbounds %struct.GPR, %struct.GPR* %7945, i32 0, i32 5
  %7947 = getelementptr inbounds %struct.Reg, %struct.Reg* %7946, i32 0, i32 0
  %RCX.i840 = bitcast %union.anon* %7947 to i64*
  %7948 = load i64, i64* %RCX.i840
  %7949 = add i64 %7948, 64
  %7950 = load i32, i32* %EAX.i839
  %7951 = zext i32 %7950 to i64
  %7952 = load i64, i64* %PC.i838
  %7953 = add i64 %7952, 3
  store i64 %7953, i64* %PC.i838
  %7954 = inttoptr i64 %7949 to i32*
  store i32 %7950, i32* %7954
  store %struct.Memory* %loadMem_433f3d, %struct.Memory** %MEMORY
  %loadMem_433f40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7956 = getelementptr inbounds %struct.GPR, %struct.GPR* %7955, i32 0, i32 33
  %7957 = getelementptr inbounds %struct.Reg, %struct.Reg* %7956, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %7957 to i64*
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7959 = getelementptr inbounds %struct.GPR, %struct.GPR* %7958, i32 0, i32 5
  %7960 = getelementptr inbounds %struct.Reg, %struct.Reg* %7959, i32 0, i32 0
  %RCX.i837 = bitcast %union.anon* %7960 to i64*
  %7961 = load i64, i64* %PC.i836
  %7962 = add i64 %7961, 8
  store i64 %7962, i64* %PC.i836
  %7963 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7963, i64* %RCX.i837, align 8
  store %struct.Memory* %loadMem_433f40, %struct.Memory** %MEMORY
  %loadMem_433f48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7965 = getelementptr inbounds %struct.GPR, %struct.GPR* %7964, i32 0, i32 33
  %7966 = getelementptr inbounds %struct.Reg, %struct.Reg* %7965, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %7966 to i64*
  %7967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7968 = getelementptr inbounds %struct.GPR, %struct.GPR* %7967, i32 0, i32 1
  %7969 = getelementptr inbounds %struct.Reg, %struct.Reg* %7968, i32 0, i32 0
  %RAX.i834 = bitcast %union.anon* %7969 to i64*
  %7970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7971 = getelementptr inbounds %struct.GPR, %struct.GPR* %7970, i32 0, i32 5
  %7972 = getelementptr inbounds %struct.Reg, %struct.Reg* %7971, i32 0, i32 0
  %RCX.i835 = bitcast %union.anon* %7972 to i64*
  %7973 = load i64, i64* %RCX.i835
  %7974 = add i64 %7973, 64
  %7975 = load i64, i64* %PC.i833
  %7976 = add i64 %7975, 3
  store i64 %7976, i64* %PC.i833
  %7977 = inttoptr i64 %7974 to i32*
  %7978 = load i32, i32* %7977
  %7979 = zext i32 %7978 to i64
  store i64 %7979, i64* %RAX.i834, align 8
  store %struct.Memory* %loadMem_433f48, %struct.Memory** %MEMORY
  %loadMem_433f4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7981 = getelementptr inbounds %struct.GPR, %struct.GPR* %7980, i32 0, i32 33
  %7982 = getelementptr inbounds %struct.Reg, %struct.Reg* %7981, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %7982 to i64*
  %7983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7984 = getelementptr inbounds %struct.GPR, %struct.GPR* %7983, i32 0, i32 5
  %7985 = getelementptr inbounds %struct.Reg, %struct.Reg* %7984, i32 0, i32 0
  %RCX.i832 = bitcast %union.anon* %7985 to i64*
  %7986 = load i64, i64* %PC.i831
  %7987 = add i64 %7986, 8
  store i64 %7987, i64* %PC.i831
  %7988 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7988, i64* %RCX.i832, align 8
  store %struct.Memory* %loadMem_433f4b, %struct.Memory** %MEMORY
  %loadMem_433f53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7990 = getelementptr inbounds %struct.GPR, %struct.GPR* %7989, i32 0, i32 33
  %7991 = getelementptr inbounds %struct.Reg, %struct.Reg* %7990, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %7991 to i64*
  %7992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7993 = getelementptr inbounds %struct.GPR, %struct.GPR* %7992, i32 0, i32 5
  %7994 = getelementptr inbounds %struct.Reg, %struct.Reg* %7993, i32 0, i32 0
  %RCX.i830 = bitcast %union.anon* %7994 to i64*
  %7995 = load i64, i64* %RCX.i830
  %7996 = add i64 %7995, 72700
  %7997 = load i64, i64* %PC.i829
  %7998 = add i64 %7997, 7
  store i64 %7998, i64* %PC.i829
  %7999 = inttoptr i64 %7996 to i32*
  %8000 = load i32, i32* %7999
  %8001 = sext i32 %8000 to i64
  store i64 %8001, i64* %RCX.i830, align 8
  store %struct.Memory* %loadMem_433f53, %struct.Memory** %MEMORY
  %loadMem_433f5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8003 = getelementptr inbounds %struct.GPR, %struct.GPR* %8002, i32 0, i32 33
  %8004 = getelementptr inbounds %struct.Reg, %struct.Reg* %8003, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %8004 to i64*
  %8005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8006 = getelementptr inbounds %struct.GPR, %struct.GPR* %8005, i32 0, i32 1
  %8007 = getelementptr inbounds %struct.Reg, %struct.Reg* %8006, i32 0, i32 0
  %EAX.i827 = bitcast %union.anon* %8007 to i32*
  %8008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8009 = getelementptr inbounds %struct.GPR, %struct.GPR* %8008, i32 0, i32 15
  %8010 = getelementptr inbounds %struct.Reg, %struct.Reg* %8009, i32 0, i32 0
  %RBP.i828 = bitcast %union.anon* %8010 to i64*
  %8011 = load i64, i64* %RBP.i828
  %8012 = sub i64 %8011, 200
  %8013 = load i32, i32* %EAX.i827
  %8014 = zext i32 %8013 to i64
  %8015 = load i64, i64* %PC.i826
  %8016 = add i64 %8015, 6
  store i64 %8016, i64* %PC.i826
  %8017 = inttoptr i64 %8012 to i32*
  store i32 %8013, i32* %8017
  store %struct.Memory* %loadMem_433f5a, %struct.Memory** %MEMORY
  %loadMem_433f60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8019 = getelementptr inbounds %struct.GPR, %struct.GPR* %8018, i32 0, i32 33
  %8020 = getelementptr inbounds %struct.Reg, %struct.Reg* %8019, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %8020 to i64*
  %8021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8022 = getelementptr inbounds %struct.GPR, %struct.GPR* %8021, i32 0, i32 17
  %8023 = getelementptr inbounds %struct.Reg, %struct.Reg* %8022, i32 0, i32 0
  %R8D.i824 = bitcast %union.anon* %8023 to i32*
  %8024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8025 = getelementptr inbounds %struct.GPR, %struct.GPR* %8024, i32 0, i32 1
  %8026 = getelementptr inbounds %struct.Reg, %struct.Reg* %8025, i32 0, i32 0
  %RAX.i825 = bitcast %union.anon* %8026 to i64*
  %8027 = load i32, i32* %R8D.i824
  %8028 = zext i32 %8027 to i64
  %8029 = load i64, i64* %PC.i823
  %8030 = add i64 %8029, 3
  store i64 %8030, i64* %PC.i823
  %8031 = and i64 %8028, 4294967295
  store i64 %8031, i64* %RAX.i825, align 8
  store %struct.Memory* %loadMem_433f60, %struct.Memory** %MEMORY
  %loadMem_433f63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8033 = getelementptr inbounds %struct.GPR, %struct.GPR* %8032, i32 0, i32 33
  %8034 = getelementptr inbounds %struct.Reg, %struct.Reg* %8033, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %8034 to i64*
  %8035 = load i64, i64* %PC.i822
  %8036 = add i64 %8035, 1
  store i64 %8036, i64* %PC.i822
  %8037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8039 = bitcast %union.anon* %8038 to i32*
  %8040 = load i32, i32* %8039, align 8
  %8041 = sext i32 %8040 to i64
  %8042 = lshr i64 %8041, 32
  store i64 %8042, i64* %8037, align 8
  store %struct.Memory* %loadMem_433f63, %struct.Memory** %MEMORY
  %loadMem_433f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8044 = getelementptr inbounds %struct.GPR, %struct.GPR* %8043, i32 0, i32 33
  %8045 = getelementptr inbounds %struct.Reg, %struct.Reg* %8044, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %8045 to i64*
  %8046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8047 = getelementptr inbounds %struct.GPR, %struct.GPR* %8046, i32 0, i32 5
  %8048 = getelementptr inbounds %struct.Reg, %struct.Reg* %8047, i32 0, i32 0
  %RCX.i819 = bitcast %union.anon* %8048 to i64*
  %8049 = load i64, i64* %RCX.i819
  %8050 = mul i64 %8049, 4
  %8051 = add i64 %8050, 7125280
  %8052 = load i64, i64* %PC.i818
  %8053 = add i64 %8052, 7
  store i64 %8053, i64* %PC.i818
  %8054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8055 = bitcast %union.anon* %8054 to i32*
  %8056 = load i32, i32* %8055, align 8
  %8057 = zext i32 %8056 to i64
  %8058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8059 = bitcast %union.anon* %8058 to i32*
  %8060 = load i32, i32* %8059, align 8
  %8061 = zext i32 %8060 to i64
  %8062 = inttoptr i64 %8051 to i32*
  %8063 = load i32, i32* %8062
  %8064 = sext i32 %8063 to i64
  %8065 = shl i64 %8061, 32
  %8066 = or i64 %8065, %8057
  %8067 = sdiv i64 %8066, %8064
  %8068 = shl i64 %8067, 32
  %8069 = ashr exact i64 %8068, 32
  %8070 = icmp eq i64 %8067, %8069
  br i1 %8070, label %8075, label %8071

; <label>:8071:                                   ; preds = %routine_idivl__r10d.exit
  %8072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8073 = load i64, i64* %8072, align 8
  %8074 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8073, %struct.Memory* %loadMem_433f64)
  br label %routine_idivl_0x6cb920___rcx_4_.exit

; <label>:8075:                                   ; preds = %routine_idivl__r10d.exit
  %8076 = srem i64 %8066, %8064
  %8077 = getelementptr inbounds %union.anon, %union.anon* %8054, i64 0, i32 0
  %8078 = and i64 %8067, 4294967295
  store i64 %8078, i64* %8077, align 8
  %8079 = getelementptr inbounds %union.anon, %union.anon* %8058, i64 0, i32 0
  %8080 = and i64 %8076, 4294967295
  store i64 %8080, i64* %8079, align 8
  %8081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8081, align 1
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8082, align 1
  %8083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8083, align 1
  %8084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8084, align 1
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8085, align 1
  %8086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8086, align 1
  br label %routine_idivl_0x6cb920___rcx_4_.exit

routine_idivl_0x6cb920___rcx_4_.exit:             ; preds = %8071, %8075
  %8087 = phi %struct.Memory* [ %8074, %8071 ], [ %loadMem_433f64, %8075 ]
  store %struct.Memory* %8087, %struct.Memory** %MEMORY
  %loadMem_433f6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8089 = getelementptr inbounds %struct.GPR, %struct.GPR* %8088, i32 0, i32 33
  %8090 = getelementptr inbounds %struct.Reg, %struct.Reg* %8089, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %8090 to i64*
  %8091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8092 = getelementptr inbounds %struct.GPR, %struct.GPR* %8091, i32 0, i32 23
  %8093 = getelementptr inbounds %struct.Reg, %struct.Reg* %8092, i32 0, i32 0
  %R11D.i816 = bitcast %union.anon* %8093 to i32*
  %8094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8095 = getelementptr inbounds %struct.GPR, %struct.GPR* %8094, i32 0, i32 15
  %8096 = getelementptr inbounds %struct.Reg, %struct.Reg* %8095, i32 0, i32 0
  %RBP.i817 = bitcast %union.anon* %8096 to i64*
  %8097 = bitcast i32* %R11D.i816 to i64*
  %8098 = load i64, i64* %RBP.i817
  %8099 = sub i64 %8098, 200
  %8100 = load i64, i64* %PC.i815
  %8101 = add i64 %8100, 7
  store i64 %8101, i64* %PC.i815
  %8102 = inttoptr i64 %8099 to i32*
  %8103 = load i32, i32* %8102
  %8104 = zext i32 %8103 to i64
  store i64 %8104, i64* %8097, align 8
  store %struct.Memory* %loadMem_433f6b, %struct.Memory** %MEMORY
  %loadMem_433f72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8106 = getelementptr inbounds %struct.GPR, %struct.GPR* %8105, i32 0, i32 33
  %8107 = getelementptr inbounds %struct.Reg, %struct.Reg* %8106, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %8107 to i64*
  %8108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8109 = getelementptr inbounds %struct.GPR, %struct.GPR* %8108, i32 0, i32 1
  %8110 = getelementptr inbounds %struct.Reg, %struct.Reg* %8109, i32 0, i32 0
  %EAX.i813 = bitcast %union.anon* %8110 to i32*
  %8111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8112 = getelementptr inbounds %struct.GPR, %struct.GPR* %8111, i32 0, i32 15
  %8113 = getelementptr inbounds %struct.Reg, %struct.Reg* %8112, i32 0, i32 0
  %RBP.i814 = bitcast %union.anon* %8113 to i64*
  %8114 = load i64, i64* %RBP.i814
  %8115 = sub i64 %8114, 204
  %8116 = load i32, i32* %EAX.i813
  %8117 = zext i32 %8116 to i64
  %8118 = load i64, i64* %PC.i812
  %8119 = add i64 %8118, 6
  store i64 %8119, i64* %PC.i812
  %8120 = inttoptr i64 %8115 to i32*
  store i32 %8116, i32* %8120
  store %struct.Memory* %loadMem_433f72, %struct.Memory** %MEMORY
  %loadMem_433f78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8122 = getelementptr inbounds %struct.GPR, %struct.GPR* %8121, i32 0, i32 33
  %8123 = getelementptr inbounds %struct.Reg, %struct.Reg* %8122, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %8123 to i64*
  %8124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8125 = getelementptr inbounds %struct.GPR, %struct.GPR* %8124, i32 0, i32 23
  %8126 = getelementptr inbounds %struct.Reg, %struct.Reg* %8125, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %8126 to i32*
  %8127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8128 = getelementptr inbounds %struct.GPR, %struct.GPR* %8127, i32 0, i32 1
  %8129 = getelementptr inbounds %struct.Reg, %struct.Reg* %8128, i32 0, i32 0
  %RAX.i811 = bitcast %union.anon* %8129 to i64*
  %8130 = load i32, i32* %R11D.i
  %8131 = zext i32 %8130 to i64
  %8132 = load i64, i64* %PC.i810
  %8133 = add i64 %8132, 3
  store i64 %8133, i64* %PC.i810
  %8134 = and i64 %8131, 4294967295
  store i64 %8134, i64* %RAX.i811, align 8
  store %struct.Memory* %loadMem_433f78, %struct.Memory** %MEMORY
  %loadMem_433f7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8136 = getelementptr inbounds %struct.GPR, %struct.GPR* %8135, i32 0, i32 33
  %8137 = getelementptr inbounds %struct.Reg, %struct.Reg* %8136, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %8137 to i64*
  %8138 = load i64, i64* %PC.i809
  %8139 = add i64 %8138, 1
  store i64 %8139, i64* %PC.i809
  %8140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8142 = bitcast %union.anon* %8141 to i32*
  %8143 = load i32, i32* %8142, align 8
  %8144 = sext i32 %8143 to i64
  %8145 = lshr i64 %8144, 32
  store i64 %8145, i64* %8140, align 8
  store %struct.Memory* %loadMem_433f7b, %struct.Memory** %MEMORY
  %loadMem_433f7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8147 = getelementptr inbounds %struct.GPR, %struct.GPR* %8146, i32 0, i32 33
  %8148 = getelementptr inbounds %struct.Reg, %struct.Reg* %8147, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %8148 to i64*
  %8149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8150 = getelementptr inbounds %struct.GPR, %struct.GPR* %8149, i32 0, i32 3
  %8151 = getelementptr inbounds %struct.Reg, %struct.Reg* %8150, i32 0, i32 0
  %RBX.i807 = bitcast %union.anon* %8151 to i64*
  %8152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8153 = getelementptr inbounds %struct.GPR, %struct.GPR* %8152, i32 0, i32 15
  %8154 = getelementptr inbounds %struct.Reg, %struct.Reg* %8153, i32 0, i32 0
  %RBP.i808 = bitcast %union.anon* %8154 to i64*
  %8155 = load i64, i64* %RBP.i808
  %8156 = sub i64 %8155, 204
  %8157 = load i64, i64* %PC.i806
  %8158 = add i64 %8157, 6
  store i64 %8158, i64* %PC.i806
  %8159 = inttoptr i64 %8156 to i32*
  %8160 = load i32, i32* %8159
  %8161 = zext i32 %8160 to i64
  store i64 %8161, i64* %RBX.i807, align 8
  store %struct.Memory* %loadMem_433f7c, %struct.Memory** %MEMORY
  %loadMem_433f82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8163 = getelementptr inbounds %struct.GPR, %struct.GPR* %8162, i32 0, i32 33
  %8164 = getelementptr inbounds %struct.Reg, %struct.Reg* %8163, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %8164 to i64*
  %8165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8166 = getelementptr inbounds %struct.GPR, %struct.GPR* %8165, i32 0, i32 3
  %8167 = getelementptr inbounds %struct.Reg, %struct.Reg* %8166, i32 0, i32 0
  %EBX.i = bitcast %union.anon* %8167 to i32*
  %8168 = load i32, i32* %EBX.i
  %8169 = zext i32 %8168 to i64
  %8170 = load i64, i64* %PC.i803
  %8171 = add i64 %8170, 2
  store i64 %8171, i64* %PC.i803
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8173 = bitcast %union.anon* %8172 to i32*
  %8174 = load i32, i32* %8173, align 8
  %8175 = zext i32 %8174 to i64
  %8176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8177 = bitcast %union.anon* %8176 to i32*
  %8178 = load i32, i32* %8177, align 8
  %8179 = zext i32 %8178 to i64
  %8180 = shl i64 %8169, 32
  %8181 = ashr exact i64 %8180, 32
  %8182 = shl i64 %8179, 32
  %8183 = or i64 %8182, %8175
  %8184 = sdiv i64 %8183, %8181
  %8185 = shl i64 %8184, 32
  %8186 = ashr exact i64 %8185, 32
  %8187 = icmp eq i64 %8184, %8186
  br i1 %8187, label %8192, label %8188

; <label>:8188:                                   ; preds = %routine_idivl_0x6cb920___rcx_4_.exit
  %8189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8190 = load i64, i64* %8189, align 8
  %8191 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8190, %struct.Memory* %loadMem_433f82)
  br label %routine_idivl__ebx.exit

; <label>:8192:                                   ; preds = %routine_idivl_0x6cb920___rcx_4_.exit
  %8193 = srem i64 %8183, %8181
  %8194 = getelementptr inbounds %union.anon, %union.anon* %8172, i64 0, i32 0
  %8195 = and i64 %8184, 4294967295
  store i64 %8195, i64* %8194, align 8
  %8196 = getelementptr inbounds %union.anon, %union.anon* %8176, i64 0, i32 0
  %8197 = and i64 %8193, 4294967295
  store i64 %8197, i64* %8196, align 8
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8198, align 1
  %8199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8199, align 1
  %8200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8200, align 1
  %8201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8201, align 1
  %8202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8202, align 1
  %8203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8203, align 1
  br label %routine_idivl__ebx.exit

routine_idivl__ebx.exit:                          ; preds = %8188, %8192
  %8204 = phi %struct.Memory* [ %8191, %8188 ], [ %loadMem_433f82, %8192 ]
  store %struct.Memory* %8204, %struct.Memory** %MEMORY
  %loadMem_433f84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8206 = getelementptr inbounds %struct.GPR, %struct.GPR* %8205, i32 0, i32 33
  %8207 = getelementptr inbounds %struct.Reg, %struct.Reg* %8206, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %8207 to i64*
  %8208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8209 = getelementptr inbounds %struct.GPR, %struct.GPR* %8208, i32 0, i32 5
  %8210 = getelementptr inbounds %struct.Reg, %struct.Reg* %8209, i32 0, i32 0
  %RCX.i802 = bitcast %union.anon* %8210 to i64*
  %8211 = load i64, i64* %PC.i801
  %8212 = add i64 %8211, 8
  store i64 %8212, i64* %PC.i801
  %8213 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %8213, i64* %RCX.i802, align 8
  store %struct.Memory* %loadMem_433f84, %struct.Memory** %MEMORY
  %loadMem_433f8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8215 = getelementptr inbounds %struct.GPR, %struct.GPR* %8214, i32 0, i32 33
  %8216 = getelementptr inbounds %struct.Reg, %struct.Reg* %8215, i32 0, i32 0
  %PC.i798 = bitcast %union.anon* %8216 to i64*
  %8217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8218 = getelementptr inbounds %struct.GPR, %struct.GPR* %8217, i32 0, i32 1
  %8219 = getelementptr inbounds %struct.Reg, %struct.Reg* %8218, i32 0, i32 0
  %EAX.i799 = bitcast %union.anon* %8219 to i32*
  %8220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8221 = getelementptr inbounds %struct.GPR, %struct.GPR* %8220, i32 0, i32 5
  %8222 = getelementptr inbounds %struct.Reg, %struct.Reg* %8221, i32 0, i32 0
  %RCX.i800 = bitcast %union.anon* %8222 to i64*
  %8223 = load i64, i64* %RCX.i800
  %8224 = add i64 %8223, 3308
  %8225 = load i32, i32* %EAX.i799
  %8226 = zext i32 %8225 to i64
  %8227 = load i64, i64* %PC.i798
  %8228 = add i64 %8227, 6
  store i64 %8228, i64* %PC.i798
  %8229 = inttoptr i64 %8224 to i32*
  store i32 %8225, i32* %8229
  store %struct.Memory* %loadMem_433f8c, %struct.Memory** %MEMORY
  %loadMem_433f92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8231 = getelementptr inbounds %struct.GPR, %struct.GPR* %8230, i32 0, i32 33
  %8232 = getelementptr inbounds %struct.Reg, %struct.Reg* %8231, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %8232 to i64*
  %8233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8234 = getelementptr inbounds %struct.GPR, %struct.GPR* %8233, i32 0, i32 5
  %8235 = getelementptr inbounds %struct.Reg, %struct.Reg* %8234, i32 0, i32 0
  %RCX.i797 = bitcast %union.anon* %8235 to i64*
  %8236 = load i64, i64* %PC.i796
  %8237 = add i64 %8236, 8
  store i64 %8237, i64* %PC.i796
  %8238 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %8238, i64* %RCX.i797, align 8
  store %struct.Memory* %loadMem_433f92, %struct.Memory** %MEMORY
  %loadMem_433f9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8240 = getelementptr inbounds %struct.GPR, %struct.GPR* %8239, i32 0, i32 33
  %8241 = getelementptr inbounds %struct.Reg, %struct.Reg* %8240, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %8241 to i64*
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8243 = getelementptr inbounds %struct.GPR, %struct.GPR* %8242, i32 0, i32 1
  %8244 = getelementptr inbounds %struct.Reg, %struct.Reg* %8243, i32 0, i32 0
  %RAX.i794 = bitcast %union.anon* %8244 to i64*
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8246 = getelementptr inbounds %struct.GPR, %struct.GPR* %8245, i32 0, i32 5
  %8247 = getelementptr inbounds %struct.Reg, %struct.Reg* %8246, i32 0, i32 0
  %RCX.i795 = bitcast %union.anon* %8247 to i64*
  %8248 = load i64, i64* %RCX.i795
  %8249 = add i64 %8248, 68
  %8250 = load i64, i64* %PC.i793
  %8251 = add i64 %8250, 3
  store i64 %8251, i64* %PC.i793
  %8252 = inttoptr i64 %8249 to i32*
  %8253 = load i32, i32* %8252
  %8254 = zext i32 %8253 to i64
  store i64 %8254, i64* %RAX.i794, align 8
  store %struct.Memory* %loadMem_433f9a, %struct.Memory** %MEMORY
  %loadMem_433f9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8256 = getelementptr inbounds %struct.GPR, %struct.GPR* %8255, i32 0, i32 33
  %8257 = getelementptr inbounds %struct.Reg, %struct.Reg* %8256, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %8257 to i64*
  %8258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8259 = getelementptr inbounds %struct.GPR, %struct.GPR* %8258, i32 0, i32 5
  %8260 = getelementptr inbounds %struct.Reg, %struct.Reg* %8259, i32 0, i32 0
  %RCX.i792 = bitcast %union.anon* %8260 to i64*
  %8261 = load i64, i64* %PC.i791
  %8262 = add i64 %8261, 8
  store i64 %8262, i64* %PC.i791
  %8263 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8263, i64* %RCX.i792, align 8
  store %struct.Memory* %loadMem_433f9d, %struct.Memory** %MEMORY
  %loadMem_433fa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8265 = getelementptr inbounds %struct.GPR, %struct.GPR* %8264, i32 0, i32 33
  %8266 = getelementptr inbounds %struct.Reg, %struct.Reg* %8265, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %8266 to i64*
  %8267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8268 = getelementptr inbounds %struct.GPR, %struct.GPR* %8267, i32 0, i32 5
  %8269 = getelementptr inbounds %struct.Reg, %struct.Reg* %8268, i32 0, i32 0
  %RCX.i790 = bitcast %union.anon* %8269 to i64*
  %8270 = load i64, i64* %RCX.i790
  %8271 = add i64 %8270, 72700
  %8272 = load i64, i64* %PC.i789
  %8273 = add i64 %8272, 7
  store i64 %8273, i64* %PC.i789
  %8274 = inttoptr i64 %8271 to i32*
  %8275 = load i32, i32* %8274
  %8276 = sext i32 %8275 to i64
  store i64 %8276, i64* %RCX.i790, align 8
  store %struct.Memory* %loadMem_433fa5, %struct.Memory** %MEMORY
  %loadMem_433fac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8278 = getelementptr inbounds %struct.GPR, %struct.GPR* %8277, i32 0, i32 33
  %8279 = getelementptr inbounds %struct.Reg, %struct.Reg* %8278, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %8279 to i64*
  %8280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8281 = getelementptr inbounds %struct.GPR, %struct.GPR* %8280, i32 0, i32 1
  %8282 = getelementptr inbounds %struct.Reg, %struct.Reg* %8281, i32 0, i32 0
  %EAX.i787 = bitcast %union.anon* %8282 to i32*
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8284 = getelementptr inbounds %struct.GPR, %struct.GPR* %8283, i32 0, i32 15
  %8285 = getelementptr inbounds %struct.Reg, %struct.Reg* %8284, i32 0, i32 0
  %RBP.i788 = bitcast %union.anon* %8285 to i64*
  %8286 = load i64, i64* %RBP.i788
  %8287 = sub i64 %8286, 208
  %8288 = load i32, i32* %EAX.i787
  %8289 = zext i32 %8288 to i64
  %8290 = load i64, i64* %PC.i786
  %8291 = add i64 %8290, 6
  store i64 %8291, i64* %PC.i786
  %8292 = inttoptr i64 %8287 to i32*
  store i32 %8288, i32* %8292
  store %struct.Memory* %loadMem_433fac, %struct.Memory** %MEMORY
  %loadMem_433fb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8294 = getelementptr inbounds %struct.GPR, %struct.GPR* %8293, i32 0, i32 33
  %8295 = getelementptr inbounds %struct.Reg, %struct.Reg* %8294, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %8295 to i64*
  %8296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8297 = getelementptr inbounds %struct.GPR, %struct.GPR* %8296, i32 0, i32 17
  %8298 = getelementptr inbounds %struct.Reg, %struct.Reg* %8297, i32 0, i32 0
  %R8D.i784 = bitcast %union.anon* %8298 to i32*
  %8299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8300 = getelementptr inbounds %struct.GPR, %struct.GPR* %8299, i32 0, i32 1
  %8301 = getelementptr inbounds %struct.Reg, %struct.Reg* %8300, i32 0, i32 0
  %RAX.i785 = bitcast %union.anon* %8301 to i64*
  %8302 = load i32, i32* %R8D.i784
  %8303 = zext i32 %8302 to i64
  %8304 = load i64, i64* %PC.i783
  %8305 = add i64 %8304, 3
  store i64 %8305, i64* %PC.i783
  %8306 = and i64 %8303, 4294967295
  store i64 %8306, i64* %RAX.i785, align 8
  store %struct.Memory* %loadMem_433fb2, %struct.Memory** %MEMORY
  %loadMem_433fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8308 = getelementptr inbounds %struct.GPR, %struct.GPR* %8307, i32 0, i32 33
  %8309 = getelementptr inbounds %struct.Reg, %struct.Reg* %8308, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %8309 to i64*
  %8310 = load i64, i64* %PC.i782
  %8311 = add i64 %8310, 1
  store i64 %8311, i64* %PC.i782
  %8312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8314 = bitcast %union.anon* %8313 to i32*
  %8315 = load i32, i32* %8314, align 8
  %8316 = sext i32 %8315 to i64
  %8317 = lshr i64 %8316, 32
  store i64 %8317, i64* %8312, align 8
  store %struct.Memory* %loadMem_433fb5, %struct.Memory** %MEMORY
  %loadMem_433fb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8319 = getelementptr inbounds %struct.GPR, %struct.GPR* %8318, i32 0, i32 33
  %8320 = getelementptr inbounds %struct.Reg, %struct.Reg* %8319, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %8320 to i64*
  %8321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8322 = getelementptr inbounds %struct.GPR, %struct.GPR* %8321, i32 0, i32 5
  %8323 = getelementptr inbounds %struct.Reg, %struct.Reg* %8322, i32 0, i32 0
  %RCX.i779 = bitcast %union.anon* %8323 to i64*
  %8324 = load i64, i64* %RCX.i779
  %8325 = mul i64 %8324, 4
  %8326 = add i64 %8325, 7125296
  %8327 = load i64, i64* %PC.i778
  %8328 = add i64 %8327, 7
  store i64 %8328, i64* %PC.i778
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8330 = bitcast %union.anon* %8329 to i32*
  %8331 = load i32, i32* %8330, align 8
  %8332 = zext i32 %8331 to i64
  %8333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8334 = bitcast %union.anon* %8333 to i32*
  %8335 = load i32, i32* %8334, align 8
  %8336 = zext i32 %8335 to i64
  %8337 = inttoptr i64 %8326 to i32*
  %8338 = load i32, i32* %8337
  %8339 = sext i32 %8338 to i64
  %8340 = shl i64 %8336, 32
  %8341 = or i64 %8340, %8332
  %8342 = sdiv i64 %8341, %8339
  %8343 = shl i64 %8342, 32
  %8344 = ashr exact i64 %8343, 32
  %8345 = icmp eq i64 %8342, %8344
  br i1 %8345, label %8350, label %8346

; <label>:8346:                                   ; preds = %routine_idivl__ebx.exit
  %8347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8348 = load i64, i64* %8347, align 8
  %8349 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8348, %struct.Memory* %loadMem_433fb6)
  br label %routine_idivl_0x6cb930___rcx_4_.exit

; <label>:8350:                                   ; preds = %routine_idivl__ebx.exit
  %8351 = srem i64 %8341, %8339
  %8352 = getelementptr inbounds %union.anon, %union.anon* %8329, i64 0, i32 0
  %8353 = and i64 %8342, 4294967295
  store i64 %8353, i64* %8352, align 8
  %8354 = getelementptr inbounds %union.anon, %union.anon* %8333, i64 0, i32 0
  %8355 = and i64 %8351, 4294967295
  store i64 %8355, i64* %8354, align 8
  %8356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8356, align 1
  %8357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8357, align 1
  %8358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8358, align 1
  %8359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8359, align 1
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8360, align 1
  %8361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8361, align 1
  br label %routine_idivl_0x6cb930___rcx_4_.exit

routine_idivl_0x6cb930___rcx_4_.exit:             ; preds = %8346, %8350
  %8362 = phi %struct.Memory* [ %8349, %8346 ], [ %loadMem_433fb6, %8350 ]
  store %struct.Memory* %8362, %struct.Memory** %MEMORY
  %loadMem_433fbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8364 = getelementptr inbounds %struct.GPR, %struct.GPR* %8363, i32 0, i32 33
  %8365 = getelementptr inbounds %struct.Reg, %struct.Reg* %8364, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %8365 to i64*
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8367 = getelementptr inbounds %struct.GPR, %struct.GPR* %8366, i32 0, i32 29
  %8368 = getelementptr inbounds %struct.Reg, %struct.Reg* %8367, i32 0, i32 0
  %R14D.i776 = bitcast %union.anon* %8368 to i32*
  %8369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8370 = getelementptr inbounds %struct.GPR, %struct.GPR* %8369, i32 0, i32 15
  %8371 = getelementptr inbounds %struct.Reg, %struct.Reg* %8370, i32 0, i32 0
  %RBP.i777 = bitcast %union.anon* %8371 to i64*
  %8372 = bitcast i32* %R14D.i776 to i64*
  %8373 = load i64, i64* %RBP.i777
  %8374 = sub i64 %8373, 208
  %8375 = load i64, i64* %PC.i775
  %8376 = add i64 %8375, 7
  store i64 %8376, i64* %PC.i775
  %8377 = inttoptr i64 %8374 to i32*
  %8378 = load i32, i32* %8377
  %8379 = zext i32 %8378 to i64
  store i64 %8379, i64* %8372, align 8
  store %struct.Memory* %loadMem_433fbd, %struct.Memory** %MEMORY
  %loadMem_433fc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8381 = getelementptr inbounds %struct.GPR, %struct.GPR* %8380, i32 0, i32 33
  %8382 = getelementptr inbounds %struct.Reg, %struct.Reg* %8381, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %8382 to i64*
  %8383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8384 = getelementptr inbounds %struct.GPR, %struct.GPR* %8383, i32 0, i32 1
  %8385 = getelementptr inbounds %struct.Reg, %struct.Reg* %8384, i32 0, i32 0
  %EAX.i773 = bitcast %union.anon* %8385 to i32*
  %8386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8387 = getelementptr inbounds %struct.GPR, %struct.GPR* %8386, i32 0, i32 15
  %8388 = getelementptr inbounds %struct.Reg, %struct.Reg* %8387, i32 0, i32 0
  %RBP.i774 = bitcast %union.anon* %8388 to i64*
  %8389 = load i64, i64* %RBP.i774
  %8390 = sub i64 %8389, 212
  %8391 = load i32, i32* %EAX.i773
  %8392 = zext i32 %8391 to i64
  %8393 = load i64, i64* %PC.i772
  %8394 = add i64 %8393, 6
  store i64 %8394, i64* %PC.i772
  %8395 = inttoptr i64 %8390 to i32*
  store i32 %8391, i32* %8395
  store %struct.Memory* %loadMem_433fc4, %struct.Memory** %MEMORY
  %loadMem_433fca = load %struct.Memory*, %struct.Memory** %MEMORY
  %8396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8397 = getelementptr inbounds %struct.GPR, %struct.GPR* %8396, i32 0, i32 33
  %8398 = getelementptr inbounds %struct.Reg, %struct.Reg* %8397, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %8398 to i64*
  %8399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8400 = getelementptr inbounds %struct.GPR, %struct.GPR* %8399, i32 0, i32 29
  %8401 = getelementptr inbounds %struct.Reg, %struct.Reg* %8400, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %8401 to i32*
  %8402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8403 = getelementptr inbounds %struct.GPR, %struct.GPR* %8402, i32 0, i32 1
  %8404 = getelementptr inbounds %struct.Reg, %struct.Reg* %8403, i32 0, i32 0
  %RAX.i771 = bitcast %union.anon* %8404 to i64*
  %8405 = load i32, i32* %R14D.i
  %8406 = zext i32 %8405 to i64
  %8407 = load i64, i64* %PC.i770
  %8408 = add i64 %8407, 3
  store i64 %8408, i64* %PC.i770
  %8409 = and i64 %8406, 4294967295
  store i64 %8409, i64* %RAX.i771, align 8
  store %struct.Memory* %loadMem_433fca, %struct.Memory** %MEMORY
  %loadMem_433fcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8411 = getelementptr inbounds %struct.GPR, %struct.GPR* %8410, i32 0, i32 33
  %8412 = getelementptr inbounds %struct.Reg, %struct.Reg* %8411, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %8412 to i64*
  %8413 = load i64, i64* %PC.i769
  %8414 = add i64 %8413, 1
  store i64 %8414, i64* %PC.i769
  %8415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8417 = bitcast %union.anon* %8416 to i32*
  %8418 = load i32, i32* %8417, align 8
  %8419 = sext i32 %8418 to i64
  %8420 = lshr i64 %8419, 32
  store i64 %8420, i64* %8415, align 8
  store %struct.Memory* %loadMem_433fcd, %struct.Memory** %MEMORY
  %loadMem_433fce = load %struct.Memory*, %struct.Memory** %MEMORY
  %8421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8422 = getelementptr inbounds %struct.GPR, %struct.GPR* %8421, i32 0, i32 33
  %8423 = getelementptr inbounds %struct.Reg, %struct.Reg* %8422, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %8423 to i64*
  %8424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8425 = getelementptr inbounds %struct.GPR, %struct.GPR* %8424, i32 0, i32 31
  %8426 = getelementptr inbounds %struct.Reg, %struct.Reg* %8425, i32 0, i32 0
  %R15D.i767 = bitcast %union.anon* %8426 to i32*
  %8427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8428 = getelementptr inbounds %struct.GPR, %struct.GPR* %8427, i32 0, i32 15
  %8429 = getelementptr inbounds %struct.Reg, %struct.Reg* %8428, i32 0, i32 0
  %RBP.i768 = bitcast %union.anon* %8429 to i64*
  %8430 = bitcast i32* %R15D.i767 to i64*
  %8431 = load i64, i64* %RBP.i768
  %8432 = sub i64 %8431, 212
  %8433 = load i64, i64* %PC.i766
  %8434 = add i64 %8433, 7
  store i64 %8434, i64* %PC.i766
  %8435 = inttoptr i64 %8432 to i32*
  %8436 = load i32, i32* %8435
  %8437 = zext i32 %8436 to i64
  store i64 %8437, i64* %8430, align 8
  store %struct.Memory* %loadMem_433fce, %struct.Memory** %MEMORY
  %loadMem_433fd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8439 = getelementptr inbounds %struct.GPR, %struct.GPR* %8438, i32 0, i32 33
  %8440 = getelementptr inbounds %struct.Reg, %struct.Reg* %8439, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %8440 to i64*
  %8441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8442 = getelementptr inbounds %struct.GPR, %struct.GPR* %8441, i32 0, i32 31
  %8443 = getelementptr inbounds %struct.Reg, %struct.Reg* %8442, i32 0, i32 0
  %R15D.i = bitcast %union.anon* %8443 to i32*
  %8444 = load i32, i32* %R15D.i
  %8445 = zext i32 %8444 to i64
  %8446 = load i64, i64* %PC.i764
  %8447 = add i64 %8446, 3
  store i64 %8447, i64* %PC.i764
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8449 = bitcast %union.anon* %8448 to i32*
  %8450 = load i32, i32* %8449, align 8
  %8451 = zext i32 %8450 to i64
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8453 = bitcast %union.anon* %8452 to i32*
  %8454 = load i32, i32* %8453, align 8
  %8455 = zext i32 %8454 to i64
  %8456 = shl i64 %8445, 32
  %8457 = ashr exact i64 %8456, 32
  %8458 = shl i64 %8455, 32
  %8459 = or i64 %8458, %8451
  %8460 = sdiv i64 %8459, %8457
  %8461 = shl i64 %8460, 32
  %8462 = ashr exact i64 %8461, 32
  %8463 = icmp eq i64 %8460, %8462
  br i1 %8463, label %8468, label %8464

; <label>:8464:                                   ; preds = %routine_idivl_0x6cb930___rcx_4_.exit
  %8465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8466 = load i64, i64* %8465, align 8
  %8467 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8466, %struct.Memory* %loadMem_433fd5)
  br label %routine_idivl__r15d.exit

; <label>:8468:                                   ; preds = %routine_idivl_0x6cb930___rcx_4_.exit
  %8469 = srem i64 %8459, %8457
  %8470 = getelementptr inbounds %union.anon, %union.anon* %8448, i64 0, i32 0
  %8471 = and i64 %8460, 4294967295
  store i64 %8471, i64* %8470, align 8
  %8472 = getelementptr inbounds %union.anon, %union.anon* %8452, i64 0, i32 0
  %8473 = and i64 %8469, 4294967295
  store i64 %8473, i64* %8472, align 8
  %8474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8474, align 1
  %8475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8475, align 1
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8476, align 1
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8477, align 1
  %8478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8478, align 1
  %8479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8479, align 1
  br label %routine_idivl__r15d.exit

routine_idivl__r15d.exit:                         ; preds = %8464, %8468
  %8480 = phi %struct.Memory* [ %8467, %8464 ], [ %loadMem_433fd5, %8468 ]
  store %struct.Memory* %8480, %struct.Memory** %MEMORY
  %loadMem_433fd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8482 = getelementptr inbounds %struct.GPR, %struct.GPR* %8481, i32 0, i32 33
  %8483 = getelementptr inbounds %struct.Reg, %struct.Reg* %8482, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %8483 to i64*
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8485 = getelementptr inbounds %struct.GPR, %struct.GPR* %8484, i32 0, i32 5
  %8486 = getelementptr inbounds %struct.Reg, %struct.Reg* %8485, i32 0, i32 0
  %RCX.i763 = bitcast %union.anon* %8486 to i64*
  %8487 = load i64, i64* %PC.i762
  %8488 = add i64 %8487, 8
  store i64 %8488, i64* %PC.i762
  %8489 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %8489, i64* %RCX.i763, align 8
  store %struct.Memory* %loadMem_433fd8, %struct.Memory** %MEMORY
  %loadMem_433fe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8491 = getelementptr inbounds %struct.GPR, %struct.GPR* %8490, i32 0, i32 33
  %8492 = getelementptr inbounds %struct.Reg, %struct.Reg* %8491, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %8492 to i64*
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8494 = getelementptr inbounds %struct.GPR, %struct.GPR* %8493, i32 0, i32 1
  %8495 = getelementptr inbounds %struct.Reg, %struct.Reg* %8494, i32 0, i32 0
  %EAX.i760 = bitcast %union.anon* %8495 to i32*
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8497 = getelementptr inbounds %struct.GPR, %struct.GPR* %8496, i32 0, i32 5
  %8498 = getelementptr inbounds %struct.Reg, %struct.Reg* %8497, i32 0, i32 0
  %RCX.i761 = bitcast %union.anon* %8498 to i64*
  %8499 = load i64, i64* %RCX.i761
  %8500 = add i64 %8499, 3304
  %8501 = load i32, i32* %EAX.i760
  %8502 = zext i32 %8501 to i64
  %8503 = load i64, i64* %PC.i759
  %8504 = add i64 %8503, 6
  store i64 %8504, i64* %PC.i759
  %8505 = inttoptr i64 %8500 to i32*
  store i32 %8501, i32* %8505
  store %struct.Memory* %loadMem_433fe0, %struct.Memory** %MEMORY
  %loadMem_433fe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8507 = getelementptr inbounds %struct.GPR, %struct.GPR* %8506, i32 0, i32 33
  %8508 = getelementptr inbounds %struct.Reg, %struct.Reg* %8507, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %8508 to i64*
  %8509 = load i64, i64* %PC.i758
  %8510 = add i64 %8509, 71
  %8511 = load i64, i64* %PC.i758
  %8512 = add i64 %8511, 5
  store i64 %8512, i64* %PC.i758
  %8513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8510, i64* %8513, align 8
  store %struct.Memory* %loadMem_433fe6, %struct.Memory** %MEMORY
  br label %block_.L_43402d

block_.L_433feb:                                  ; preds = %block_.L_433e36
  %loadMem_433feb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8515 = getelementptr inbounds %struct.GPR, %struct.GPR* %8514, i32 0, i32 33
  %8516 = getelementptr inbounds %struct.Reg, %struct.Reg* %8515, i32 0, i32 0
  %PC.i756 = bitcast %union.anon* %8516 to i64*
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8518 = getelementptr inbounds %struct.GPR, %struct.GPR* %8517, i32 0, i32 1
  %8519 = getelementptr inbounds %struct.Reg, %struct.Reg* %8518, i32 0, i32 0
  %RAX.i757 = bitcast %union.anon* %8519 to i64*
  %8520 = load i64, i64* %PC.i756
  %8521 = add i64 %8520, 8
  store i64 %8521, i64* %PC.i756
  %8522 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8522, i64* %RAX.i757, align 8
  store %struct.Memory* %loadMem_433feb, %struct.Memory** %MEMORY
  %loadMem_433ff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8524 = getelementptr inbounds %struct.GPR, %struct.GPR* %8523, i32 0, i32 33
  %8525 = getelementptr inbounds %struct.Reg, %struct.Reg* %8524, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %8525 to i64*
  %8526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8527 = getelementptr inbounds %struct.GPR, %struct.GPR* %8526, i32 0, i32 1
  %8528 = getelementptr inbounds %struct.Reg, %struct.Reg* %8527, i32 0, i32 0
  %RAX.i755 = bitcast %union.anon* %8528 to i64*
  %8529 = load i64, i64* %RAX.i755
  %8530 = add i64 %8529, 56
  %8531 = load i64, i64* %PC.i754
  %8532 = add i64 %8531, 7
  store i64 %8532, i64* %PC.i754
  %8533 = inttoptr i64 %8530 to i32*
  store i32 0, i32* %8533
  store %struct.Memory* %loadMem_433ff3, %struct.Memory** %MEMORY
  %loadMem_433ffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8535 = getelementptr inbounds %struct.GPR, %struct.GPR* %8534, i32 0, i32 33
  %8536 = getelementptr inbounds %struct.Reg, %struct.Reg* %8535, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %8536 to i64*
  %8537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8538 = getelementptr inbounds %struct.GPR, %struct.GPR* %8537, i32 0, i32 1
  %8539 = getelementptr inbounds %struct.Reg, %struct.Reg* %8538, i32 0, i32 0
  %RAX.i753 = bitcast %union.anon* %8539 to i64*
  %8540 = load i64, i64* %PC.i752
  %8541 = add i64 %8540, 8
  store i64 %8541, i64* %PC.i752
  %8542 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8542, i64* %RAX.i753, align 8
  store %struct.Memory* %loadMem_433ffa, %struct.Memory** %MEMORY
  %loadMem_434002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8544 = getelementptr inbounds %struct.GPR, %struct.GPR* %8543, i32 0, i32 33
  %8545 = getelementptr inbounds %struct.Reg, %struct.Reg* %8544, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %8545 to i64*
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8547 = getelementptr inbounds %struct.GPR, %struct.GPR* %8546, i32 0, i32 1
  %8548 = getelementptr inbounds %struct.Reg, %struct.Reg* %8547, i32 0, i32 0
  %RAX.i751 = bitcast %union.anon* %8548 to i64*
  %8549 = load i64, i64* %RAX.i751
  %8550 = add i64 %8549, 64
  %8551 = load i64, i64* %PC.i750
  %8552 = add i64 %8551, 7
  store i64 %8552, i64* %PC.i750
  %8553 = inttoptr i64 %8550 to i32*
  store i32 0, i32* %8553
  store %struct.Memory* %loadMem_434002, %struct.Memory** %MEMORY
  %loadMem_434009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8555 = getelementptr inbounds %struct.GPR, %struct.GPR* %8554, i32 0, i32 33
  %8556 = getelementptr inbounds %struct.Reg, %struct.Reg* %8555, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %8556 to i64*
  %8557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8558 = getelementptr inbounds %struct.GPR, %struct.GPR* %8557, i32 0, i32 1
  %8559 = getelementptr inbounds %struct.Reg, %struct.Reg* %8558, i32 0, i32 0
  %RAX.i749 = bitcast %union.anon* %8559 to i64*
  %8560 = load i64, i64* %PC.i748
  %8561 = add i64 %8560, 8
  store i64 %8561, i64* %PC.i748
  %8562 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %8562, i64* %RAX.i749, align 8
  store %struct.Memory* %loadMem_434009, %struct.Memory** %MEMORY
  %loadMem_434011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8564 = getelementptr inbounds %struct.GPR, %struct.GPR* %8563, i32 0, i32 33
  %8565 = getelementptr inbounds %struct.Reg, %struct.Reg* %8564, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %8565 to i64*
  %8566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8567 = getelementptr inbounds %struct.GPR, %struct.GPR* %8566, i32 0, i32 1
  %8568 = getelementptr inbounds %struct.Reg, %struct.Reg* %8567, i32 0, i32 0
  %RAX.i747 = bitcast %union.anon* %8568 to i64*
  %8569 = load i64, i64* %RAX.i747
  %8570 = add i64 %8569, 3308
  %8571 = load i64, i64* %PC.i746
  %8572 = add i64 %8571, 10
  store i64 %8572, i64* %PC.i746
  %8573 = inttoptr i64 %8570 to i32*
  store i32 0, i32* %8573
  store %struct.Memory* %loadMem_434011, %struct.Memory** %MEMORY
  %loadMem_43401b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8575 = getelementptr inbounds %struct.GPR, %struct.GPR* %8574, i32 0, i32 33
  %8576 = getelementptr inbounds %struct.Reg, %struct.Reg* %8575, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %8576 to i64*
  %8577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8578 = getelementptr inbounds %struct.GPR, %struct.GPR* %8577, i32 0, i32 1
  %8579 = getelementptr inbounds %struct.Reg, %struct.Reg* %8578, i32 0, i32 0
  %RAX.i745 = bitcast %union.anon* %8579 to i64*
  %8580 = load i64, i64* %PC.i744
  %8581 = add i64 %8580, 8
  store i64 %8581, i64* %PC.i744
  %8582 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %8582, i64* %RAX.i745, align 8
  store %struct.Memory* %loadMem_43401b, %struct.Memory** %MEMORY
  %loadMem_434023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8584 = getelementptr inbounds %struct.GPR, %struct.GPR* %8583, i32 0, i32 33
  %8585 = getelementptr inbounds %struct.Reg, %struct.Reg* %8584, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %8585 to i64*
  %8586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8587 = getelementptr inbounds %struct.GPR, %struct.GPR* %8586, i32 0, i32 1
  %8588 = getelementptr inbounds %struct.Reg, %struct.Reg* %8587, i32 0, i32 0
  %RAX.i743 = bitcast %union.anon* %8588 to i64*
  %8589 = load i64, i64* %RAX.i743
  %8590 = add i64 %8589, 3304
  %8591 = load i64, i64* %PC.i742
  %8592 = add i64 %8591, 10
  store i64 %8592, i64* %PC.i742
  %8593 = inttoptr i64 %8590 to i32*
  store i32 0, i32* %8593
  store %struct.Memory* %loadMem_434023, %struct.Memory** %MEMORY
  br label %block_.L_43402d

block_.L_43402d:                                  ; preds = %block_.L_433feb, %routine_idivl__r15d.exit
  %loadMem_43402d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8595 = getelementptr inbounds %struct.GPR, %struct.GPR* %8594, i32 0, i32 33
  %8596 = getelementptr inbounds %struct.Reg, %struct.Reg* %8595, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %8596 to i64*
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8598 = getelementptr inbounds %struct.GPR, %struct.GPR* %8597, i32 0, i32 1
  %8599 = getelementptr inbounds %struct.Reg, %struct.Reg* %8598, i32 0, i32 0
  %RAX.i741 = bitcast %union.anon* %8599 to i64*
  %8600 = load i64, i64* %PC.i740
  %8601 = add i64 %8600, 5
  store i64 %8601, i64* %PC.i740
  store i64 16, i64* %RAX.i741, align 8
  store %struct.Memory* %loadMem_43402d, %struct.Memory** %MEMORY
  %loadMem_434032 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8603 = getelementptr inbounds %struct.GPR, %struct.GPR* %8602, i32 0, i32 33
  %8604 = getelementptr inbounds %struct.Reg, %struct.Reg* %8603, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %8604 to i64*
  %8605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8606 = getelementptr inbounds %struct.GPR, %struct.GPR* %8605, i32 0, i32 5
  %8607 = getelementptr inbounds %struct.Reg, %struct.Reg* %8606, i32 0, i32 0
  %RCX.i739 = bitcast %union.anon* %8607 to i64*
  %8608 = load i64, i64* %PC.i738
  %8609 = add i64 %8608, 8
  store i64 %8609, i64* %PC.i738
  %8610 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8610, i64* %RCX.i739, align 8
  store %struct.Memory* %loadMem_434032, %struct.Memory** %MEMORY
  %loadMem_43403a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8612 = getelementptr inbounds %struct.GPR, %struct.GPR* %8611, i32 0, i32 33
  %8613 = getelementptr inbounds %struct.Reg, %struct.Reg* %8612, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %8613 to i64*
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8615 = getelementptr inbounds %struct.GPR, %struct.GPR* %8614, i32 0, i32 5
  %8616 = getelementptr inbounds %struct.Reg, %struct.Reg* %8615, i32 0, i32 0
  %RCX.i736 = bitcast %union.anon* %8616 to i64*
  %8617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8618 = getelementptr inbounds %struct.GPR, %struct.GPR* %8617, i32 0, i32 7
  %8619 = getelementptr inbounds %struct.Reg, %struct.Reg* %8618, i32 0, i32 0
  %RDX.i737 = bitcast %union.anon* %8619 to i64*
  %8620 = load i64, i64* %RCX.i736
  %8621 = add i64 %8620, 64
  %8622 = load i64, i64* %PC.i735
  %8623 = add i64 %8622, 3
  store i64 %8623, i64* %PC.i735
  %8624 = inttoptr i64 %8621 to i32*
  %8625 = load i32, i32* %8624
  %8626 = zext i32 %8625 to i64
  store i64 %8626, i64* %RDX.i737, align 8
  store %struct.Memory* %loadMem_43403a, %struct.Memory** %MEMORY
  %loadMem_43403d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8628 = getelementptr inbounds %struct.GPR, %struct.GPR* %8627, i32 0, i32 33
  %8629 = getelementptr inbounds %struct.Reg, %struct.Reg* %8628, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %8629 to i64*
  %8630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8631 = getelementptr inbounds %struct.GPR, %struct.GPR* %8630, i32 0, i32 5
  %8632 = getelementptr inbounds %struct.Reg, %struct.Reg* %8631, i32 0, i32 0
  %RCX.i734 = bitcast %union.anon* %8632 to i64*
  %8633 = load i64, i64* %PC.i733
  %8634 = add i64 %8633, 8
  store i64 %8634, i64* %PC.i733
  %8635 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8635, i64* %RCX.i734, align 8
  store %struct.Memory* %loadMem_43403d, %struct.Memory** %MEMORY
  %loadMem_434045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8637 = getelementptr inbounds %struct.GPR, %struct.GPR* %8636, i32 0, i32 33
  %8638 = getelementptr inbounds %struct.Reg, %struct.Reg* %8637, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %8638 to i64*
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8640 = getelementptr inbounds %struct.GPR, %struct.GPR* %8639, i32 0, i32 7
  %8641 = getelementptr inbounds %struct.Reg, %struct.Reg* %8640, i32 0, i32 0
  %EDX.i731 = bitcast %union.anon* %8641 to i32*
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8643 = getelementptr inbounds %struct.GPR, %struct.GPR* %8642, i32 0, i32 5
  %8644 = getelementptr inbounds %struct.Reg, %struct.Reg* %8643, i32 0, i32 0
  %RCX.i732 = bitcast %union.anon* %8644 to i64*
  %8645 = load i64, i64* %RCX.i732
  %8646 = add i64 %8645, 68
  %8647 = load i32, i32* %EDX.i731
  %8648 = zext i32 %8647 to i64
  %8649 = load i64, i64* %PC.i730
  %8650 = add i64 %8649, 3
  store i64 %8650, i64* %PC.i730
  %8651 = inttoptr i64 %8646 to i32*
  store i32 %8647, i32* %8651
  store %struct.Memory* %loadMem_434045, %struct.Memory** %MEMORY
  %loadMem_434048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8653 = getelementptr inbounds %struct.GPR, %struct.GPR* %8652, i32 0, i32 33
  %8654 = getelementptr inbounds %struct.Reg, %struct.Reg* %8653, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %8654 to i64*
  %8655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8656 = getelementptr inbounds %struct.GPR, %struct.GPR* %8655, i32 0, i32 5
  %8657 = getelementptr inbounds %struct.Reg, %struct.Reg* %8656, i32 0, i32 0
  %RCX.i729 = bitcast %union.anon* %8657 to i64*
  %8658 = load i64, i64* %PC.i728
  %8659 = add i64 %8658, 8
  store i64 %8659, i64* %PC.i728
  %8660 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %8660, i64* %RCX.i729, align 8
  store %struct.Memory* %loadMem_434048, %struct.Memory** %MEMORY
  %loadMem_434050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8662 = getelementptr inbounds %struct.GPR, %struct.GPR* %8661, i32 0, i32 33
  %8663 = getelementptr inbounds %struct.Reg, %struct.Reg* %8662, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %8663 to i64*
  %8664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8665 = getelementptr inbounds %struct.GPR, %struct.GPR* %8664, i32 0, i32 5
  %8666 = getelementptr inbounds %struct.Reg, %struct.Reg* %8665, i32 0, i32 0
  %RCX.i726 = bitcast %union.anon* %8666 to i64*
  %8667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8668 = getelementptr inbounds %struct.GPR, %struct.GPR* %8667, i32 0, i32 7
  %8669 = getelementptr inbounds %struct.Reg, %struct.Reg* %8668, i32 0, i32 0
  %RDX.i727 = bitcast %union.anon* %8669 to i64*
  %8670 = load i64, i64* %RCX.i726
  %8671 = add i64 %8670, 64
  %8672 = load i64, i64* %PC.i725
  %8673 = add i64 %8672, 3
  store i64 %8673, i64* %PC.i725
  %8674 = inttoptr i64 %8671 to i32*
  %8675 = load i32, i32* %8674
  %8676 = zext i32 %8675 to i64
  store i64 %8676, i64* %RDX.i727, align 8
  store %struct.Memory* %loadMem_434050, %struct.Memory** %MEMORY
  %loadMem_434053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8678 = getelementptr inbounds %struct.GPR, %struct.GPR* %8677, i32 0, i32 33
  %8679 = getelementptr inbounds %struct.Reg, %struct.Reg* %8678, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %8679 to i64*
  %8680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8681 = getelementptr inbounds %struct.GPR, %struct.GPR* %8680, i32 0, i32 5
  %8682 = getelementptr inbounds %struct.Reg, %struct.Reg* %8681, i32 0, i32 0
  %RCX.i724 = bitcast %union.anon* %8682 to i64*
  %8683 = load i64, i64* %PC.i723
  %8684 = add i64 %8683, 8
  store i64 %8684, i64* %PC.i723
  %8685 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8685, i64* %RCX.i724, align 8
  store %struct.Memory* %loadMem_434053, %struct.Memory** %MEMORY
  %loadMem_43405b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8687 = getelementptr inbounds %struct.GPR, %struct.GPR* %8686, i32 0, i32 33
  %8688 = getelementptr inbounds %struct.Reg, %struct.Reg* %8687, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %8688 to i64*
  %8689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8690 = getelementptr inbounds %struct.GPR, %struct.GPR* %8689, i32 0, i32 5
  %8691 = getelementptr inbounds %struct.Reg, %struct.Reg* %8690, i32 0, i32 0
  %RCX.i721 = bitcast %union.anon* %8691 to i64*
  %8692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8693 = getelementptr inbounds %struct.GPR, %struct.GPR* %8692, i32 0, i32 7
  %8694 = getelementptr inbounds %struct.Reg, %struct.Reg* %8693, i32 0, i32 0
  %RDX.i722 = bitcast %union.anon* %8694 to i64*
  %8695 = load i64, i64* %RDX.i722
  %8696 = load i64, i64* %RCX.i721
  %8697 = add i64 %8696, 72728
  %8698 = load i64, i64* %PC.i720
  %8699 = add i64 %8698, 6
  store i64 %8699, i64* %PC.i720
  %8700 = trunc i64 %8695 to i32
  %8701 = inttoptr i64 %8697 to i32*
  %8702 = load i32, i32* %8701
  %8703 = add i32 %8702, %8700
  %8704 = zext i32 %8703 to i64
  store i64 %8704, i64* %RDX.i722, align 8
  %8705 = icmp ult i32 %8703, %8700
  %8706 = icmp ult i32 %8703, %8702
  %8707 = or i1 %8705, %8706
  %8708 = zext i1 %8707 to i8
  %8709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8708, i8* %8709, align 1
  %8710 = and i32 %8703, 255
  %8711 = call i32 @llvm.ctpop.i32(i32 %8710)
  %8712 = trunc i32 %8711 to i8
  %8713 = and i8 %8712, 1
  %8714 = xor i8 %8713, 1
  %8715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8714, i8* %8715, align 1
  %8716 = xor i32 %8702, %8700
  %8717 = xor i32 %8716, %8703
  %8718 = lshr i32 %8717, 4
  %8719 = trunc i32 %8718 to i8
  %8720 = and i8 %8719, 1
  %8721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8720, i8* %8721, align 1
  %8722 = icmp eq i32 %8703, 0
  %8723 = zext i1 %8722 to i8
  %8724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8723, i8* %8724, align 1
  %8725 = lshr i32 %8703, 31
  %8726 = trunc i32 %8725 to i8
  %8727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8726, i8* %8727, align 1
  %8728 = lshr i32 %8700, 31
  %8729 = lshr i32 %8702, 31
  %8730 = xor i32 %8725, %8728
  %8731 = xor i32 %8725, %8729
  %8732 = add i32 %8730, %8731
  %8733 = icmp eq i32 %8732, 2
  %8734 = zext i1 %8733 to i8
  %8735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8734, i8* %8735, align 1
  store %struct.Memory* %loadMem_43405b, %struct.Memory** %MEMORY
  %loadMem_434061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8737 = getelementptr inbounds %struct.GPR, %struct.GPR* %8736, i32 0, i32 33
  %8738 = getelementptr inbounds %struct.Reg, %struct.Reg* %8737, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %8738 to i64*
  %8739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8740 = getelementptr inbounds %struct.GPR, %struct.GPR* %8739, i32 0, i32 1
  %8741 = getelementptr inbounds %struct.Reg, %struct.Reg* %8740, i32 0, i32 0
  %EAX.i718 = bitcast %union.anon* %8741 to i32*
  %8742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8743 = getelementptr inbounds %struct.GPR, %struct.GPR* %8742, i32 0, i32 15
  %8744 = getelementptr inbounds %struct.Reg, %struct.Reg* %8743, i32 0, i32 0
  %RBP.i719 = bitcast %union.anon* %8744 to i64*
  %8745 = load i64, i64* %RBP.i719
  %8746 = sub i64 %8745, 216
  %8747 = load i32, i32* %EAX.i718
  %8748 = zext i32 %8747 to i64
  %8749 = load i64, i64* %PC.i717
  %8750 = add i64 %8749, 6
  store i64 %8750, i64* %PC.i717
  %8751 = inttoptr i64 %8746 to i32*
  store i32 %8747, i32* %8751
  store %struct.Memory* %loadMem_434061, %struct.Memory** %MEMORY
  %loadMem_434067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8753 = getelementptr inbounds %struct.GPR, %struct.GPR* %8752, i32 0, i32 33
  %8754 = getelementptr inbounds %struct.Reg, %struct.Reg* %8753, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %8754 to i64*
  %8755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8756 = getelementptr inbounds %struct.GPR, %struct.GPR* %8755, i32 0, i32 7
  %8757 = getelementptr inbounds %struct.Reg, %struct.Reg* %8756, i32 0, i32 0
  %EDX.i715 = bitcast %union.anon* %8757 to i32*
  %8758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8759 = getelementptr inbounds %struct.GPR, %struct.GPR* %8758, i32 0, i32 1
  %8760 = getelementptr inbounds %struct.Reg, %struct.Reg* %8759, i32 0, i32 0
  %RAX.i716 = bitcast %union.anon* %8760 to i64*
  %8761 = load i32, i32* %EDX.i715
  %8762 = zext i32 %8761 to i64
  %8763 = load i64, i64* %PC.i714
  %8764 = add i64 %8763, 2
  store i64 %8764, i64* %PC.i714
  %8765 = and i64 %8762, 4294967295
  store i64 %8765, i64* %RAX.i716, align 8
  store %struct.Memory* %loadMem_434067, %struct.Memory** %MEMORY
  %loadMem_434069 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8767 = getelementptr inbounds %struct.GPR, %struct.GPR* %8766, i32 0, i32 33
  %8768 = getelementptr inbounds %struct.Reg, %struct.Reg* %8767, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %8768 to i64*
  %8769 = load i64, i64* %PC.i713
  %8770 = add i64 %8769, 1
  store i64 %8770, i64* %PC.i713
  %8771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8773 = bitcast %union.anon* %8772 to i32*
  %8774 = load i32, i32* %8773, align 8
  %8775 = sext i32 %8774 to i64
  %8776 = lshr i64 %8775, 32
  store i64 %8776, i64* %8771, align 8
  store %struct.Memory* %loadMem_434069, %struct.Memory** %MEMORY
  %loadMem_43406a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8778 = getelementptr inbounds %struct.GPR, %struct.GPR* %8777, i32 0, i32 33
  %8779 = getelementptr inbounds %struct.Reg, %struct.Reg* %8778, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %8779 to i64*
  %8780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8781 = getelementptr inbounds %struct.GPR, %struct.GPR* %8780, i32 0, i32 9
  %8782 = getelementptr inbounds %struct.Reg, %struct.Reg* %8781, i32 0, i32 0
  %RSI.i711 = bitcast %union.anon* %8782 to i64*
  %8783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8784 = getelementptr inbounds %struct.GPR, %struct.GPR* %8783, i32 0, i32 15
  %8785 = getelementptr inbounds %struct.Reg, %struct.Reg* %8784, i32 0, i32 0
  %RBP.i712 = bitcast %union.anon* %8785 to i64*
  %8786 = load i64, i64* %RBP.i712
  %8787 = sub i64 %8786, 216
  %8788 = load i64, i64* %PC.i710
  %8789 = add i64 %8788, 6
  store i64 %8789, i64* %PC.i710
  %8790 = inttoptr i64 %8787 to i32*
  %8791 = load i32, i32* %8790
  %8792 = zext i32 %8791 to i64
  store i64 %8792, i64* %RSI.i711, align 8
  store %struct.Memory* %loadMem_43406a, %struct.Memory** %MEMORY
  %loadMem_434070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8794 = getelementptr inbounds %struct.GPR, %struct.GPR* %8793, i32 0, i32 33
  %8795 = getelementptr inbounds %struct.Reg, %struct.Reg* %8794, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %8795 to i64*
  %8796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8797 = getelementptr inbounds %struct.GPR, %struct.GPR* %8796, i32 0, i32 9
  %8798 = getelementptr inbounds %struct.Reg, %struct.Reg* %8797, i32 0, i32 0
  %ESI.i706 = bitcast %union.anon* %8798 to i32*
  %8799 = load i32, i32* %ESI.i706
  %8800 = zext i32 %8799 to i64
  %8801 = load i64, i64* %PC.i705
  %8802 = add i64 %8801, 2
  store i64 %8802, i64* %PC.i705
  %8803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8804 = bitcast %union.anon* %8803 to i32*
  %8805 = load i32, i32* %8804, align 8
  %8806 = zext i32 %8805 to i64
  %8807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8808 = bitcast %union.anon* %8807 to i32*
  %8809 = load i32, i32* %8808, align 8
  %8810 = zext i32 %8809 to i64
  %8811 = shl i64 %8800, 32
  %8812 = ashr exact i64 %8811, 32
  %8813 = shl i64 %8810, 32
  %8814 = or i64 %8813, %8806
  %8815 = sdiv i64 %8814, %8812
  %8816 = shl i64 %8815, 32
  %8817 = ashr exact i64 %8816, 32
  %8818 = icmp eq i64 %8815, %8817
  br i1 %8818, label %8823, label %8819

; <label>:8819:                                   ; preds = %block_.L_43402d
  %8820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8821 = load i64, i64* %8820, align 8
  %8822 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8821, %struct.Memory* %loadMem_434070)
  br label %routine_idivl__esi.exit707

; <label>:8823:                                   ; preds = %block_.L_43402d
  %8824 = srem i64 %8814, %8812
  %8825 = getelementptr inbounds %union.anon, %union.anon* %8803, i64 0, i32 0
  %8826 = and i64 %8815, 4294967295
  store i64 %8826, i64* %8825, align 8
  %8827 = getelementptr inbounds %union.anon, %union.anon* %8807, i64 0, i32 0
  %8828 = and i64 %8824, 4294967295
  store i64 %8828, i64* %8827, align 8
  %8829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8829, align 1
  %8830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8830, align 1
  %8831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8831, align 1
  %8832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8832, align 1
  %8833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8833, align 1
  %8834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8834, align 1
  br label %routine_idivl__esi.exit707

routine_idivl__esi.exit707:                       ; preds = %8819, %8823
  %8835 = phi %struct.Memory* [ %8822, %8819 ], [ %loadMem_434070, %8823 ]
  store %struct.Memory* %8835, %struct.Memory** %MEMORY
  %loadMem_434072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8837 = getelementptr inbounds %struct.GPR, %struct.GPR* %8836, i32 0, i32 33
  %8838 = getelementptr inbounds %struct.Reg, %struct.Reg* %8837, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %8838 to i64*
  %8839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8840 = getelementptr inbounds %struct.GPR, %struct.GPR* %8839, i32 0, i32 5
  %8841 = getelementptr inbounds %struct.Reg, %struct.Reg* %8840, i32 0, i32 0
  %RCX.i704 = bitcast %union.anon* %8841 to i64*
  %8842 = load i64, i64* %PC.i703
  %8843 = add i64 %8842, 8
  store i64 %8843, i64* %PC.i703
  %8844 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8844, i64* %RCX.i704, align 8
  store %struct.Memory* %loadMem_434072, %struct.Memory** %MEMORY
  %loadMem_43407a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8846 = getelementptr inbounds %struct.GPR, %struct.GPR* %8845, i32 0, i32 33
  %8847 = getelementptr inbounds %struct.Reg, %struct.Reg* %8846, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %8847 to i64*
  %8848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8849 = getelementptr inbounds %struct.GPR, %struct.GPR* %8848, i32 0, i32 1
  %8850 = getelementptr inbounds %struct.Reg, %struct.Reg* %8849, i32 0, i32 0
  %EAX.i701 = bitcast %union.anon* %8850 to i32*
  %8851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8852 = getelementptr inbounds %struct.GPR, %struct.GPR* %8851, i32 0, i32 5
  %8853 = getelementptr inbounds %struct.Reg, %struct.Reg* %8852, i32 0, i32 0
  %RCX.i702 = bitcast %union.anon* %8853 to i64*
  %8854 = load i64, i64* %RCX.i702
  %8855 = add i64 %8854, 72468
  %8856 = load i32, i32* %EAX.i701
  %8857 = zext i32 %8856 to i64
  %8858 = load i64, i64* %PC.i700
  %8859 = add i64 %8858, 6
  store i64 %8859, i64* %PC.i700
  %8860 = inttoptr i64 %8855 to i32*
  store i32 %8856, i32* %8860
  store %struct.Memory* %loadMem_43407a, %struct.Memory** %MEMORY
  %loadMem_434080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8862 = getelementptr inbounds %struct.GPR, %struct.GPR* %8861, i32 0, i32 33
  %8863 = getelementptr inbounds %struct.Reg, %struct.Reg* %8862, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %8863 to i64*
  %8864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8865 = getelementptr inbounds %struct.GPR, %struct.GPR* %8864, i32 0, i32 5
  %8866 = getelementptr inbounds %struct.Reg, %struct.Reg* %8865, i32 0, i32 0
  %RCX.i699 = bitcast %union.anon* %8866 to i64*
  %8867 = load i64, i64* %PC.i698
  %8868 = add i64 %8867, 8
  store i64 %8868, i64* %PC.i698
  %8869 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %8869, i64* %RCX.i699, align 8
  store %struct.Memory* %loadMem_434080, %struct.Memory** %MEMORY
  %loadMem_434088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8871 = getelementptr inbounds %struct.GPR, %struct.GPR* %8870, i32 0, i32 33
  %8872 = getelementptr inbounds %struct.Reg, %struct.Reg* %8871, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %8872 to i64*
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8874 = getelementptr inbounds %struct.GPR, %struct.GPR* %8873, i32 0, i32 1
  %8875 = getelementptr inbounds %struct.Reg, %struct.Reg* %8874, i32 0, i32 0
  %RAX.i696 = bitcast %union.anon* %8875 to i64*
  %8876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8877 = getelementptr inbounds %struct.GPR, %struct.GPR* %8876, i32 0, i32 5
  %8878 = getelementptr inbounds %struct.Reg, %struct.Reg* %8877, i32 0, i32 0
  %RCX.i697 = bitcast %union.anon* %8878 to i64*
  %8879 = load i64, i64* %RCX.i697
  %8880 = add i64 %8879, 68
  %8881 = load i64, i64* %PC.i695
  %8882 = add i64 %8881, 3
  store i64 %8882, i64* %PC.i695
  %8883 = inttoptr i64 %8880 to i32*
  %8884 = load i32, i32* %8883
  %8885 = zext i32 %8884 to i64
  store i64 %8885, i64* %RAX.i696, align 8
  store %struct.Memory* %loadMem_434088, %struct.Memory** %MEMORY
  %loadMem_43408b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8887 = getelementptr inbounds %struct.GPR, %struct.GPR* %8886, i32 0, i32 33
  %8888 = getelementptr inbounds %struct.Reg, %struct.Reg* %8887, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %8888 to i64*
  %8889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8890 = getelementptr inbounds %struct.GPR, %struct.GPR* %8889, i32 0, i32 5
  %8891 = getelementptr inbounds %struct.Reg, %struct.Reg* %8890, i32 0, i32 0
  %RCX.i694 = bitcast %union.anon* %8891 to i64*
  %8892 = load i64, i64* %PC.i693
  %8893 = add i64 %8892, 8
  store i64 %8893, i64* %PC.i693
  %8894 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8894, i64* %RCX.i694, align 8
  store %struct.Memory* %loadMem_43408b, %struct.Memory** %MEMORY
  %loadMem_434093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8896 = getelementptr inbounds %struct.GPR, %struct.GPR* %8895, i32 0, i32 33
  %8897 = getelementptr inbounds %struct.Reg, %struct.Reg* %8896, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %8897 to i64*
  %8898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8899 = getelementptr inbounds %struct.GPR, %struct.GPR* %8898, i32 0, i32 1
  %8900 = getelementptr inbounds %struct.Reg, %struct.Reg* %8899, i32 0, i32 0
  %RAX.i691 = bitcast %union.anon* %8900 to i64*
  %8901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8902 = getelementptr inbounds %struct.GPR, %struct.GPR* %8901, i32 0, i32 5
  %8903 = getelementptr inbounds %struct.Reg, %struct.Reg* %8902, i32 0, i32 0
  %RCX.i692 = bitcast %union.anon* %8903 to i64*
  %8904 = load i64, i64* %RAX.i691
  %8905 = load i64, i64* %RCX.i692
  %8906 = add i64 %8905, 72732
  %8907 = load i64, i64* %PC.i690
  %8908 = add i64 %8907, 6
  store i64 %8908, i64* %PC.i690
  %8909 = trunc i64 %8904 to i32
  %8910 = inttoptr i64 %8906 to i32*
  %8911 = load i32, i32* %8910
  %8912 = add i32 %8911, %8909
  %8913 = zext i32 %8912 to i64
  store i64 %8913, i64* %RAX.i691, align 8
  %8914 = icmp ult i32 %8912, %8909
  %8915 = icmp ult i32 %8912, %8911
  %8916 = or i1 %8914, %8915
  %8917 = zext i1 %8916 to i8
  %8918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8917, i8* %8918, align 1
  %8919 = and i32 %8912, 255
  %8920 = call i32 @llvm.ctpop.i32(i32 %8919)
  %8921 = trunc i32 %8920 to i8
  %8922 = and i8 %8921, 1
  %8923 = xor i8 %8922, 1
  %8924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8923, i8* %8924, align 1
  %8925 = xor i32 %8911, %8909
  %8926 = xor i32 %8925, %8912
  %8927 = lshr i32 %8926, 4
  %8928 = trunc i32 %8927 to i8
  %8929 = and i8 %8928, 1
  %8930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8929, i8* %8930, align 1
  %8931 = icmp eq i32 %8912, 0
  %8932 = zext i1 %8931 to i8
  %8933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8932, i8* %8933, align 1
  %8934 = lshr i32 %8912, 31
  %8935 = trunc i32 %8934 to i8
  %8936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8935, i8* %8936, align 1
  %8937 = lshr i32 %8909, 31
  %8938 = lshr i32 %8911, 31
  %8939 = xor i32 %8934, %8937
  %8940 = xor i32 %8934, %8938
  %8941 = add i32 %8939, %8940
  %8942 = icmp eq i32 %8941, 2
  %8943 = zext i1 %8942 to i8
  %8944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8943, i8* %8944, align 1
  store %struct.Memory* %loadMem_434093, %struct.Memory** %MEMORY
  %loadMem_434099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8946 = getelementptr inbounds %struct.GPR, %struct.GPR* %8945, i32 0, i32 33
  %8947 = getelementptr inbounds %struct.Reg, %struct.Reg* %8946, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %8947 to i64*
  %8948 = load i64, i64* %PC.i689
  %8949 = add i64 %8948, 1
  store i64 %8949, i64* %PC.i689
  %8950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8952 = bitcast %union.anon* %8951 to i32*
  %8953 = load i32, i32* %8952, align 8
  %8954 = sext i32 %8953 to i64
  %8955 = lshr i64 %8954, 32
  store i64 %8955, i64* %8950, align 8
  store %struct.Memory* %loadMem_434099, %struct.Memory** %MEMORY
  %loadMem_43409a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8957 = getelementptr inbounds %struct.GPR, %struct.GPR* %8956, i32 0, i32 33
  %8958 = getelementptr inbounds %struct.Reg, %struct.Reg* %8957, i32 0, i32 0
  %PC.i684 = bitcast %union.anon* %8958 to i64*
  %8959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8960 = getelementptr inbounds %struct.GPR, %struct.GPR* %8959, i32 0, i32 9
  %8961 = getelementptr inbounds %struct.Reg, %struct.Reg* %8960, i32 0, i32 0
  %ESI.i685 = bitcast %union.anon* %8961 to i32*
  %8962 = load i32, i32* %ESI.i685
  %8963 = zext i32 %8962 to i64
  %8964 = load i64, i64* %PC.i684
  %8965 = add i64 %8964, 2
  store i64 %8965, i64* %PC.i684
  %8966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8967 = bitcast %union.anon* %8966 to i32*
  %8968 = load i32, i32* %8967, align 8
  %8969 = zext i32 %8968 to i64
  %8970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8971 = bitcast %union.anon* %8970 to i32*
  %8972 = load i32, i32* %8971, align 8
  %8973 = zext i32 %8972 to i64
  %8974 = shl i64 %8963, 32
  %8975 = ashr exact i64 %8974, 32
  %8976 = shl i64 %8973, 32
  %8977 = or i64 %8976, %8969
  %8978 = sdiv i64 %8977, %8975
  %8979 = shl i64 %8978, 32
  %8980 = ashr exact i64 %8979, 32
  %8981 = icmp eq i64 %8978, %8980
  br i1 %8981, label %8986, label %8982

; <label>:8982:                                   ; preds = %routine_idivl__esi.exit707
  %8983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8984 = load i64, i64* %8983, align 8
  %8985 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8984, %struct.Memory* %loadMem_43409a)
  br label %routine_idivl__esi.exit686

; <label>:8986:                                   ; preds = %routine_idivl__esi.exit707
  %8987 = srem i64 %8977, %8975
  %8988 = getelementptr inbounds %union.anon, %union.anon* %8966, i64 0, i32 0
  %8989 = and i64 %8978, 4294967295
  store i64 %8989, i64* %8988, align 8
  %8990 = getelementptr inbounds %union.anon, %union.anon* %8970, i64 0, i32 0
  %8991 = and i64 %8987, 4294967295
  store i64 %8991, i64* %8990, align 8
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8992, align 1
  %8993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8993, align 1
  %8994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8994, align 1
  %8995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8995, align 1
  %8996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8996, align 1
  %8997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8997, align 1
  br label %routine_idivl__esi.exit686

routine_idivl__esi.exit686:                       ; preds = %8982, %8986
  %8998 = phi %struct.Memory* [ %8985, %8982 ], [ %loadMem_43409a, %8986 ]
  store %struct.Memory* %8998, %struct.Memory** %MEMORY
  %loadMem_43409c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9000 = getelementptr inbounds %struct.GPR, %struct.GPR* %8999, i32 0, i32 33
  %9001 = getelementptr inbounds %struct.Reg, %struct.Reg* %9000, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %9001 to i64*
  %9002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9003 = getelementptr inbounds %struct.GPR, %struct.GPR* %9002, i32 0, i32 5
  %9004 = getelementptr inbounds %struct.Reg, %struct.Reg* %9003, i32 0, i32 0
  %RCX.i683 = bitcast %union.anon* %9004 to i64*
  %9005 = load i64, i64* %PC.i682
  %9006 = add i64 %9005, 8
  store i64 %9006, i64* %PC.i682
  %9007 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9007, i64* %RCX.i683, align 8
  store %struct.Memory* %loadMem_43409c, %struct.Memory** %MEMORY
  %loadMem_4340a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9009 = getelementptr inbounds %struct.GPR, %struct.GPR* %9008, i32 0, i32 33
  %9010 = getelementptr inbounds %struct.Reg, %struct.Reg* %9009, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %9010 to i64*
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9012 = getelementptr inbounds %struct.GPR, %struct.GPR* %9011, i32 0, i32 1
  %9013 = getelementptr inbounds %struct.Reg, %struct.Reg* %9012, i32 0, i32 0
  %EAX.i680 = bitcast %union.anon* %9013 to i32*
  %9014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9015 = getelementptr inbounds %struct.GPR, %struct.GPR* %9014, i32 0, i32 5
  %9016 = getelementptr inbounds %struct.Reg, %struct.Reg* %9015, i32 0, i32 0
  %RCX.i681 = bitcast %union.anon* %9016 to i64*
  %9017 = load i64, i64* %RCX.i681
  %9018 = add i64 %9017, 72476
  %9019 = load i32, i32* %EAX.i680
  %9020 = zext i32 %9019 to i64
  %9021 = load i64, i64* %PC.i679
  %9022 = add i64 %9021, 6
  store i64 %9022, i64* %PC.i679
  %9023 = inttoptr i64 %9018 to i32*
  store i32 %9019, i32* %9023
  store %struct.Memory* %loadMem_4340a4, %struct.Memory** %MEMORY
  %loadMem_4340aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9025 = getelementptr inbounds %struct.GPR, %struct.GPR* %9024, i32 0, i32 33
  %9026 = getelementptr inbounds %struct.Reg, %struct.Reg* %9025, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %9026 to i64*
  %9027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9028 = getelementptr inbounds %struct.GPR, %struct.GPR* %9027, i32 0, i32 5
  %9029 = getelementptr inbounds %struct.Reg, %struct.Reg* %9028, i32 0, i32 0
  %RCX.i678 = bitcast %union.anon* %9029 to i64*
  %9030 = load i64, i64* %PC.i677
  %9031 = add i64 %9030, 8
  store i64 %9031, i64* %PC.i677
  %9032 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9032, i64* %RCX.i678, align 8
  store %struct.Memory* %loadMem_4340aa, %struct.Memory** %MEMORY
  %loadMem_4340b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9034 = getelementptr inbounds %struct.GPR, %struct.GPR* %9033, i32 0, i32 33
  %9035 = getelementptr inbounds %struct.Reg, %struct.Reg* %9034, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %9035 to i64*
  %9036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9037 = getelementptr inbounds %struct.GPR, %struct.GPR* %9036, i32 0, i32 1
  %9038 = getelementptr inbounds %struct.Reg, %struct.Reg* %9037, i32 0, i32 0
  %RAX.i675 = bitcast %union.anon* %9038 to i64*
  %9039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9040 = getelementptr inbounds %struct.GPR, %struct.GPR* %9039, i32 0, i32 5
  %9041 = getelementptr inbounds %struct.Reg, %struct.Reg* %9040, i32 0, i32 0
  %RCX.i676 = bitcast %union.anon* %9041 to i64*
  %9042 = load i64, i64* %RCX.i676
  %9043 = add i64 %9042, 72468
  %9044 = load i64, i64* %PC.i674
  %9045 = add i64 %9044, 6
  store i64 %9045, i64* %PC.i674
  %9046 = inttoptr i64 %9043 to i32*
  %9047 = load i32, i32* %9046
  %9048 = zext i32 %9047 to i64
  store i64 %9048, i64* %RAX.i675, align 8
  store %struct.Memory* %loadMem_4340b2, %struct.Memory** %MEMORY
  %loadMem_4340b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9050 = getelementptr inbounds %struct.GPR, %struct.GPR* %9049, i32 0, i32 33
  %9051 = getelementptr inbounds %struct.Reg, %struct.Reg* %9050, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %9051 to i64*
  %9052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9053 = getelementptr inbounds %struct.GPR, %struct.GPR* %9052, i32 0, i32 5
  %9054 = getelementptr inbounds %struct.Reg, %struct.Reg* %9053, i32 0, i32 0
  %RCX.i673 = bitcast %union.anon* %9054 to i64*
  %9055 = load i64, i64* %PC.i672
  %9056 = add i64 %9055, 8
  store i64 %9056, i64* %PC.i672
  %9057 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9057, i64* %RCX.i673, align 8
  store %struct.Memory* %loadMem_4340b8, %struct.Memory** %MEMORY
  %loadMem_4340c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9059 = getelementptr inbounds %struct.GPR, %struct.GPR* %9058, i32 0, i32 33
  %9060 = getelementptr inbounds %struct.Reg, %struct.Reg* %9059, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %9060 to i64*
  %9061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9062 = getelementptr inbounds %struct.GPR, %struct.GPR* %9061, i32 0, i32 1
  %9063 = getelementptr inbounds %struct.Reg, %struct.Reg* %9062, i32 0, i32 0
  %RAX.i670 = bitcast %union.anon* %9063 to i64*
  %9064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9065 = getelementptr inbounds %struct.GPR, %struct.GPR* %9064, i32 0, i32 5
  %9066 = getelementptr inbounds %struct.Reg, %struct.Reg* %9065, i32 0, i32 0
  %RCX.i671 = bitcast %union.anon* %9066 to i64*
  %9067 = load i64, i64* %RAX.i670
  %9068 = load i64, i64* %RCX.i671
  %9069 = add i64 %9068, 72476
  %9070 = load i64, i64* %PC.i669
  %9071 = add i64 %9070, 7
  store i64 %9071, i64* %PC.i669
  %9072 = inttoptr i64 %9069 to i32*
  %9073 = load i32, i32* %9072
  %9074 = shl i64 %9067, 32
  %9075 = ashr exact i64 %9074, 32
  %9076 = sext i32 %9073 to i64
  %9077 = mul i64 %9076, %9075
  %9078 = trunc i64 %9077 to i32
  %9079 = and i64 %9077, 4294967295
  store i64 %9079, i64* %RAX.i670, align 8
  %9080 = shl i64 %9077, 32
  %9081 = ashr exact i64 %9080, 32
  %9082 = icmp ne i64 %9081, %9077
  %9083 = zext i1 %9082 to i8
  %9084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9083, i8* %9084, align 1
  %9085 = and i32 %9078, 255
  %9086 = call i32 @llvm.ctpop.i32(i32 %9085)
  %9087 = trunc i32 %9086 to i8
  %9088 = and i8 %9087, 1
  %9089 = xor i8 %9088, 1
  %9090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9089, i8* %9090, align 1
  %9091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9091, align 1
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9092, align 1
  %9093 = lshr i32 %9078, 31
  %9094 = trunc i32 %9093 to i8
  %9095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9094, i8* %9095, align 1
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9083, i8* %9096, align 1
  store %struct.Memory* %loadMem_4340c0, %struct.Memory** %MEMORY
  %loadMem_4340c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9098 = getelementptr inbounds %struct.GPR, %struct.GPR* %9097, i32 0, i32 33
  %9099 = getelementptr inbounds %struct.Reg, %struct.Reg* %9098, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %9099 to i64*
  %9100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9101 = getelementptr inbounds %struct.GPR, %struct.GPR* %9100, i32 0, i32 5
  %9102 = getelementptr inbounds %struct.Reg, %struct.Reg* %9101, i32 0, i32 0
  %RCX.i668 = bitcast %union.anon* %9102 to i64*
  %9103 = load i64, i64* %PC.i667
  %9104 = add i64 %9103, 8
  store i64 %9104, i64* %PC.i667
  %9105 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9105, i64* %RCX.i668, align 8
  store %struct.Memory* %loadMem_4340c7, %struct.Memory** %MEMORY
  %loadMem_4340cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9107 = getelementptr inbounds %struct.GPR, %struct.GPR* %9106, i32 0, i32 33
  %9108 = getelementptr inbounds %struct.Reg, %struct.Reg* %9107, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %9108 to i64*
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9110 = getelementptr inbounds %struct.GPR, %struct.GPR* %9109, i32 0, i32 1
  %9111 = getelementptr inbounds %struct.Reg, %struct.Reg* %9110, i32 0, i32 0
  %EAX.i665 = bitcast %union.anon* %9111 to i32*
  %9112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9113 = getelementptr inbounds %struct.GPR, %struct.GPR* %9112, i32 0, i32 5
  %9114 = getelementptr inbounds %struct.Reg, %struct.Reg* %9113, i32 0, i32 0
  %RCX.i666 = bitcast %union.anon* %9114 to i64*
  %9115 = load i64, i64* %RCX.i666
  %9116 = add i64 %9115, 72488
  %9117 = load i32, i32* %EAX.i665
  %9118 = zext i32 %9117 to i64
  %9119 = load i64, i64* %PC.i664
  %9120 = add i64 %9119, 6
  store i64 %9120, i64* %PC.i664
  %9121 = inttoptr i64 %9116 to i32*
  store i32 %9117, i32* %9121
  store %struct.Memory* %loadMem_4340cf, %struct.Memory** %MEMORY
  %loadMem_4340d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9123 = getelementptr inbounds %struct.GPR, %struct.GPR* %9122, i32 0, i32 33
  %9124 = getelementptr inbounds %struct.Reg, %struct.Reg* %9123, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %9124 to i64*
  %9125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9126 = getelementptr inbounds %struct.GPR, %struct.GPR* %9125, i32 0, i32 5
  %9127 = getelementptr inbounds %struct.Reg, %struct.Reg* %9126, i32 0, i32 0
  %RCX.i663 = bitcast %union.anon* %9127 to i64*
  %9128 = load i64, i64* %PC.i662
  %9129 = add i64 %9128, 8
  store i64 %9129, i64* %PC.i662
  %9130 = load i64, i64* bitcast (%G_0x722cb0_type* @G_0x722cb0 to i64*)
  store i64 %9130, i64* %RCX.i663, align 8
  store %struct.Memory* %loadMem_4340d5, %struct.Memory** %MEMORY
  %loadMem_4340dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9132 = getelementptr inbounds %struct.GPR, %struct.GPR* %9131, i32 0, i32 33
  %9133 = getelementptr inbounds %struct.Reg, %struct.Reg* %9132, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %9133 to i64*
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9135 = getelementptr inbounds %struct.GPR, %struct.GPR* %9134, i32 0, i32 5
  %9136 = getelementptr inbounds %struct.Reg, %struct.Reg* %9135, i32 0, i32 0
  %RCX.i661 = bitcast %union.anon* %9136 to i64*
  %9137 = load i64, i64* %RCX.i661
  %9138 = add i64 %9137, 1148
  %9139 = load i64, i64* %PC.i660
  %9140 = add i64 %9139, 7
  store i64 %9140, i64* %PC.i660
  %9141 = inttoptr i64 %9138 to i32*
  %9142 = load i32, i32* %9141
  %9143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9143, align 1
  %9144 = and i32 %9142, 255
  %9145 = call i32 @llvm.ctpop.i32(i32 %9144)
  %9146 = trunc i32 %9145 to i8
  %9147 = and i8 %9146, 1
  %9148 = xor i8 %9147, 1
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9148, i8* %9149, align 1
  %9150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9150, align 1
  %9151 = icmp eq i32 %9142, 0
  %9152 = zext i1 %9151 to i8
  %9153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9152, i8* %9153, align 1
  %9154 = lshr i32 %9142, 31
  %9155 = trunc i32 %9154 to i8
  %9156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9155, i8* %9156, align 1
  %9157 = lshr i32 %9142, 31
  %9158 = xor i32 %9154, %9157
  %9159 = add i32 %9158, %9157
  %9160 = icmp eq i32 %9159, 2
  %9161 = zext i1 %9160 to i8
  %9162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9161, i8* %9162, align 1
  store %struct.Memory* %loadMem_4340dd, %struct.Memory** %MEMORY
  %loadMem_4340e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9164 = getelementptr inbounds %struct.GPR, %struct.GPR* %9163, i32 0, i32 33
  %9165 = getelementptr inbounds %struct.Reg, %struct.Reg* %9164, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %9165 to i64*
  %9166 = load i64, i64* %PC.i659
  %9167 = add i64 %9166, 31
  %9168 = load i64, i64* %PC.i659
  %9169 = add i64 %9168, 6
  %9170 = load i64, i64* %PC.i659
  %9171 = add i64 %9170, 6
  store i64 %9171, i64* %PC.i659
  %9172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9173 = load i8, i8* %9172, align 1
  store i8 %9173, i8* %BRANCH_TAKEN, align 1
  %9174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9175 = icmp ne i8 %9173, 0
  %9176 = select i1 %9175, i64 %9167, i64 %9169
  store i64 %9176, i64* %9174, align 8
  store %struct.Memory* %loadMem_4340e4, %struct.Memory** %MEMORY
  %loadBr_4340e4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4340e4 = icmp eq i8 %loadBr_4340e4, 1
  br i1 %cmpBr_4340e4, label %block_.L_434103, label %block_4340ea

block_4340ea:                                     ; preds = %routine_idivl__esi.exit686
  %loadMem_4340ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9178 = getelementptr inbounds %struct.GPR, %struct.GPR* %9177, i32 0, i32 33
  %9179 = getelementptr inbounds %struct.Reg, %struct.Reg* %9178, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %9179 to i64*
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9181 = getelementptr inbounds %struct.GPR, %struct.GPR* %9180, i32 0, i32 1
  %9182 = getelementptr inbounds %struct.Reg, %struct.Reg* %9181, i32 0, i32 0
  %RAX.i658 = bitcast %union.anon* %9182 to i64*
  %9183 = load i64, i64* %PC.i657
  %9184 = add i64 %9183, 8
  store i64 %9184, i64* %PC.i657
  %9185 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9185, i64* %RAX.i658, align 8
  store %struct.Memory* %loadMem_4340ea, %struct.Memory** %MEMORY
  %loadMem_4340f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9187 = getelementptr inbounds %struct.GPR, %struct.GPR* %9186, i32 0, i32 33
  %9188 = getelementptr inbounds %struct.Reg, %struct.Reg* %9187, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %9188 to i64*
  %9189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9190 = getelementptr inbounds %struct.GPR, %struct.GPR* %9189, i32 0, i32 1
  %9191 = getelementptr inbounds %struct.Reg, %struct.Reg* %9190, i32 0, i32 0
  %RAX.i655 = bitcast %union.anon* %9191 to i64*
  %9192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9193 = getelementptr inbounds %struct.GPR, %struct.GPR* %9192, i32 0, i32 5
  %9194 = getelementptr inbounds %struct.Reg, %struct.Reg* %9193, i32 0, i32 0
  %RCX.i656 = bitcast %union.anon* %9194 to i64*
  %9195 = load i64, i64* %RAX.i655
  %9196 = add i64 %9195, 72476
  %9197 = load i64, i64* %PC.i654
  %9198 = add i64 %9197, 6
  store i64 %9198, i64* %PC.i654
  %9199 = inttoptr i64 %9196 to i32*
  %9200 = load i32, i32* %9199
  %9201 = zext i32 %9200 to i64
  store i64 %9201, i64* %RCX.i656, align 8
  store %struct.Memory* %loadMem_4340f2, %struct.Memory** %MEMORY
  %loadMem_4340f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9203 = getelementptr inbounds %struct.GPR, %struct.GPR* %9202, i32 0, i32 33
  %9204 = getelementptr inbounds %struct.Reg, %struct.Reg* %9203, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %9204 to i64*
  %9205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9206 = getelementptr inbounds %struct.GPR, %struct.GPR* %9205, i32 0, i32 5
  %9207 = getelementptr inbounds %struct.Reg, %struct.Reg* %9206, i32 0, i32 0
  %ECX.i652 = bitcast %union.anon* %9207 to i32*
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9209 = getelementptr inbounds %struct.GPR, %struct.GPR* %9208, i32 0, i32 15
  %9210 = getelementptr inbounds %struct.Reg, %struct.Reg* %9209, i32 0, i32 0
  %RBP.i653 = bitcast %union.anon* %9210 to i64*
  %9211 = load i64, i64* %RBP.i653
  %9212 = sub i64 %9211, 220
  %9213 = load i32, i32* %ECX.i652
  %9214 = zext i32 %9213 to i64
  %9215 = load i64, i64* %PC.i651
  %9216 = add i64 %9215, 6
  store i64 %9216, i64* %PC.i651
  %9217 = inttoptr i64 %9212 to i32*
  store i32 %9213, i32* %9217
  store %struct.Memory* %loadMem_4340f8, %struct.Memory** %MEMORY
  %loadMem_4340fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9219 = getelementptr inbounds %struct.GPR, %struct.GPR* %9218, i32 0, i32 33
  %9220 = getelementptr inbounds %struct.Reg, %struct.Reg* %9219, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %9220 to i64*
  %9221 = load i64, i64* %PC.i650
  %9222 = add i64 %9221, 28
  %9223 = load i64, i64* %PC.i650
  %9224 = add i64 %9223, 5
  store i64 %9224, i64* %PC.i650
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9222, i64* %9225, align 8
  store %struct.Memory* %loadMem_4340fe, %struct.Memory** %MEMORY
  br label %block_.L_43411a

block_.L_434103:                                  ; preds = %routine_idivl__esi.exit686
  %loadMem_434103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9227 = getelementptr inbounds %struct.GPR, %struct.GPR* %9226, i32 0, i32 33
  %9228 = getelementptr inbounds %struct.Reg, %struct.Reg* %9227, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %9228 to i64*
  %9229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9230 = getelementptr inbounds %struct.GPR, %struct.GPR* %9229, i32 0, i32 1
  %9231 = getelementptr inbounds %struct.Reg, %struct.Reg* %9230, i32 0, i32 0
  %RAX.i649 = bitcast %union.anon* %9231 to i64*
  %9232 = load i64, i64* %PC.i648
  %9233 = add i64 %9232, 8
  store i64 %9233, i64* %PC.i648
  %9234 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9234, i64* %RAX.i649, align 8
  store %struct.Memory* %loadMem_434103, %struct.Memory** %MEMORY
  %loadMem_43410b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9236 = getelementptr inbounds %struct.GPR, %struct.GPR* %9235, i32 0, i32 33
  %9237 = getelementptr inbounds %struct.Reg, %struct.Reg* %9236, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %9237 to i64*
  %9238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9239 = getelementptr inbounds %struct.GPR, %struct.GPR* %9238, i32 0, i32 1
  %9240 = getelementptr inbounds %struct.Reg, %struct.Reg* %9239, i32 0, i32 0
  %RAX.i646 = bitcast %union.anon* %9240 to i64*
  %9241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9242 = getelementptr inbounds %struct.GPR, %struct.GPR* %9241, i32 0, i32 5
  %9243 = getelementptr inbounds %struct.Reg, %struct.Reg* %9242, i32 0, i32 0
  %RCX.i647 = bitcast %union.anon* %9243 to i64*
  %9244 = load i64, i64* %RAX.i646
  %9245 = add i64 %9244, 72476
  %9246 = load i64, i64* %PC.i645
  %9247 = add i64 %9246, 6
  store i64 %9247, i64* %PC.i645
  %9248 = inttoptr i64 %9245 to i32*
  %9249 = load i32, i32* %9248
  %9250 = zext i32 %9249 to i64
  store i64 %9250, i64* %RCX.i647, align 8
  store %struct.Memory* %loadMem_43410b, %struct.Memory** %MEMORY
  %loadMem_434111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9252 = getelementptr inbounds %struct.GPR, %struct.GPR* %9251, i32 0, i32 33
  %9253 = getelementptr inbounds %struct.Reg, %struct.Reg* %9252, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %9253 to i64*
  %9254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9255 = getelementptr inbounds %struct.GPR, %struct.GPR* %9254, i32 0, i32 5
  %9256 = getelementptr inbounds %struct.Reg, %struct.Reg* %9255, i32 0, i32 0
  %RCX.i644 = bitcast %union.anon* %9256 to i64*
  %9257 = load i64, i64* %RCX.i644
  %9258 = load i64, i64* %PC.i643
  %9259 = add i64 %9258, 2
  store i64 %9259, i64* %PC.i643
  %9260 = trunc i64 %9257 to i32
  %9261 = lshr i32 %9260, 31
  %9262 = trunc i32 %9261 to i8
  %9263 = trunc i64 %9257 to i8
  %9264 = and i8 %9263, 1
  %9265 = lshr i64 %9257, 1
  %9266 = trunc i64 %9265 to i32
  %9267 = and i32 %9266, 2147483647
  %9268 = zext i32 %9267 to i64
  store i64 %9268, i64* %RCX.i644, align 8
  %9269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9264, i8* %9269, align 1
  %9270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9271 = and i32 %9266, 255
  %9272 = call i32 @llvm.ctpop.i32(i32 %9271)
  %9273 = trunc i32 %9272 to i8
  %9274 = and i8 %9273, 1
  %9275 = xor i8 %9274, 1
  store i8 %9275, i8* %9270, align 1
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9276, align 1
  %9277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9278 = icmp eq i32 %9267, 0
  %9279 = zext i1 %9278 to i8
  store i8 %9279, i8* %9277, align 1
  %9280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9280, align 1
  %9281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9262, i8* %9281, align 1
  store %struct.Memory* %loadMem_434111, %struct.Memory** %MEMORY
  %loadMem_434114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9283 = getelementptr inbounds %struct.GPR, %struct.GPR* %9282, i32 0, i32 33
  %9284 = getelementptr inbounds %struct.Reg, %struct.Reg* %9283, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %9284 to i64*
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9286 = getelementptr inbounds %struct.GPR, %struct.GPR* %9285, i32 0, i32 5
  %9287 = getelementptr inbounds %struct.Reg, %struct.Reg* %9286, i32 0, i32 0
  %ECX.i641 = bitcast %union.anon* %9287 to i32*
  %9288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9289 = getelementptr inbounds %struct.GPR, %struct.GPR* %9288, i32 0, i32 15
  %9290 = getelementptr inbounds %struct.Reg, %struct.Reg* %9289, i32 0, i32 0
  %RBP.i642 = bitcast %union.anon* %9290 to i64*
  %9291 = load i64, i64* %RBP.i642
  %9292 = sub i64 %9291, 220
  %9293 = load i32, i32* %ECX.i641
  %9294 = zext i32 %9293 to i64
  %9295 = load i64, i64* %PC.i640
  %9296 = add i64 %9295, 6
  store i64 %9296, i64* %PC.i640
  %9297 = inttoptr i64 %9292 to i32*
  store i32 %9293, i32* %9297
  store %struct.Memory* %loadMem_434114, %struct.Memory** %MEMORY
  br label %block_.L_43411a

block_.L_43411a:                                  ; preds = %block_.L_434103, %block_4340ea
  %loadMem_43411a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9299 = getelementptr inbounds %struct.GPR, %struct.GPR* %9298, i32 0, i32 33
  %9300 = getelementptr inbounds %struct.Reg, %struct.Reg* %9299, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %9300 to i64*
  %9301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9302 = getelementptr inbounds %struct.GPR, %struct.GPR* %9301, i32 0, i32 1
  %9303 = getelementptr inbounds %struct.Reg, %struct.Reg* %9302, i32 0, i32 0
  %RAX.i638 = bitcast %union.anon* %9303 to i64*
  %9304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9305 = getelementptr inbounds %struct.GPR, %struct.GPR* %9304, i32 0, i32 15
  %9306 = getelementptr inbounds %struct.Reg, %struct.Reg* %9305, i32 0, i32 0
  %RBP.i639 = bitcast %union.anon* %9306 to i64*
  %9307 = load i64, i64* %RBP.i639
  %9308 = sub i64 %9307, 220
  %9309 = load i64, i64* %PC.i637
  %9310 = add i64 %9309, 6
  store i64 %9310, i64* %PC.i637
  %9311 = inttoptr i64 %9308 to i32*
  %9312 = load i32, i32* %9311
  %9313 = zext i32 %9312 to i64
  store i64 %9313, i64* %RAX.i638, align 8
  store %struct.Memory* %loadMem_43411a, %struct.Memory** %MEMORY
  %loadMem_434120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9315 = getelementptr inbounds %struct.GPR, %struct.GPR* %9314, i32 0, i32 33
  %9316 = getelementptr inbounds %struct.Reg, %struct.Reg* %9315, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %9316 to i64*
  %9317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9318 = getelementptr inbounds %struct.GPR, %struct.GPR* %9317, i32 0, i32 5
  %9319 = getelementptr inbounds %struct.Reg, %struct.Reg* %9318, i32 0, i32 0
  %RCX.i636 = bitcast %union.anon* %9319 to i64*
  %9320 = load i64, i64* %PC.i635
  %9321 = add i64 %9320, 5
  store i64 %9321, i64* %PC.i635
  store i64 632, i64* %RCX.i636, align 8
  store %struct.Memory* %loadMem_434120, %struct.Memory** %MEMORY
  %loadMem_434125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9323 = getelementptr inbounds %struct.GPR, %struct.GPR* %9322, i32 0, i32 33
  %9324 = getelementptr inbounds %struct.Reg, %struct.Reg* %9323, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %9324 to i64*
  %9325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9326 = getelementptr inbounds %struct.GPR, %struct.GPR* %9325, i32 0, i32 5
  %9327 = getelementptr inbounds %struct.Reg, %struct.Reg* %9326, i32 0, i32 0
  %ECX.i633 = bitcast %union.anon* %9327 to i32*
  %9328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9329 = getelementptr inbounds %struct.GPR, %struct.GPR* %9328, i32 0, i32 9
  %9330 = getelementptr inbounds %struct.Reg, %struct.Reg* %9329, i32 0, i32 0
  %RSI.i634 = bitcast %union.anon* %9330 to i64*
  %9331 = load i32, i32* %ECX.i633
  %9332 = zext i32 %9331 to i64
  %9333 = load i64, i64* %PC.i632
  %9334 = add i64 %9333, 2
  store i64 %9334, i64* %PC.i632
  %9335 = and i64 %9332, 4294967295
  store i64 %9335, i64* %RSI.i634, align 8
  store %struct.Memory* %loadMem_434125, %struct.Memory** %MEMORY
  %loadMem_434127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9337 = getelementptr inbounds %struct.GPR, %struct.GPR* %9336, i32 0, i32 33
  %9338 = getelementptr inbounds %struct.Reg, %struct.Reg* %9337, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %9338 to i64*
  %9339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9340 = getelementptr inbounds %struct.GPR, %struct.GPR* %9339, i32 0, i32 7
  %9341 = getelementptr inbounds %struct.Reg, %struct.Reg* %9340, i32 0, i32 0
  %RDX.i631 = bitcast %union.anon* %9341 to i64*
  %9342 = load i64, i64* %PC.i630
  %9343 = add i64 %9342, 8
  store i64 %9343, i64* %PC.i630
  %9344 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9344, i64* %RDX.i631, align 8
  store %struct.Memory* %loadMem_434127, %struct.Memory** %MEMORY
  %loadMem_43412f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9346 = getelementptr inbounds %struct.GPR, %struct.GPR* %9345, i32 0, i32 33
  %9347 = getelementptr inbounds %struct.Reg, %struct.Reg* %9346, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %9347 to i64*
  %9348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9349 = getelementptr inbounds %struct.GPR, %struct.GPR* %9348, i32 0, i32 1
  %9350 = getelementptr inbounds %struct.Reg, %struct.Reg* %9349, i32 0, i32 0
  %EAX.i628 = bitcast %union.anon* %9350 to i32*
  %9351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9352 = getelementptr inbounds %struct.GPR, %struct.GPR* %9351, i32 0, i32 7
  %9353 = getelementptr inbounds %struct.Reg, %struct.Reg* %9352, i32 0, i32 0
  %RDX.i629 = bitcast %union.anon* %9353 to i64*
  %9354 = load i64, i64* %RDX.i629
  %9355 = add i64 %9354, 72472
  %9356 = load i32, i32* %EAX.i628
  %9357 = zext i32 %9356 to i64
  %9358 = load i64, i64* %PC.i627
  %9359 = add i64 %9358, 6
  store i64 %9359, i64* %PC.i627
  %9360 = inttoptr i64 %9355 to i32*
  store i32 %9356, i32* %9360
  store %struct.Memory* %loadMem_43412f, %struct.Memory** %MEMORY
  %loadMem_434135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9362 = getelementptr inbounds %struct.GPR, %struct.GPR* %9361, i32 0, i32 33
  %9363 = getelementptr inbounds %struct.Reg, %struct.Reg* %9362, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %9363 to i64*
  %9364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9365 = getelementptr inbounds %struct.GPR, %struct.GPR* %9364, i32 0, i32 7
  %9366 = getelementptr inbounds %struct.Reg, %struct.Reg* %9365, i32 0, i32 0
  %RDX.i626 = bitcast %union.anon* %9366 to i64*
  %9367 = load i64, i64* %PC.i625
  %9368 = add i64 %9367, 8
  store i64 %9368, i64* %PC.i625
  %9369 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9369, i64* %RDX.i626, align 8
  store %struct.Memory* %loadMem_434135, %struct.Memory** %MEMORY
  %loadMem_43413d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9371 = getelementptr inbounds %struct.GPR, %struct.GPR* %9370, i32 0, i32 33
  %9372 = getelementptr inbounds %struct.Reg, %struct.Reg* %9371, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %9372 to i64*
  %9373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9374 = getelementptr inbounds %struct.GPR, %struct.GPR* %9373, i32 0, i32 1
  %9375 = getelementptr inbounds %struct.Reg, %struct.Reg* %9374, i32 0, i32 0
  %RAX.i623 = bitcast %union.anon* %9375 to i64*
  %9376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9377 = getelementptr inbounds %struct.GPR, %struct.GPR* %9376, i32 0, i32 7
  %9378 = getelementptr inbounds %struct.Reg, %struct.Reg* %9377, i32 0, i32 0
  %RDX.i624 = bitcast %union.anon* %9378 to i64*
  %9379 = load i64, i64* %RDX.i624
  %9380 = add i64 %9379, 72488
  %9381 = load i64, i64* %PC.i622
  %9382 = add i64 %9381, 6
  store i64 %9382, i64* %PC.i622
  %9383 = inttoptr i64 %9380 to i32*
  %9384 = load i32, i32* %9383
  %9385 = zext i32 %9384 to i64
  store i64 %9385, i64* %RAX.i623, align 8
  store %struct.Memory* %loadMem_43413d, %struct.Memory** %MEMORY
  %loadMem_434143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9387 = getelementptr inbounds %struct.GPR, %struct.GPR* %9386, i32 0, i32 33
  %9388 = getelementptr inbounds %struct.Reg, %struct.Reg* %9387, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %9388 to i64*
  %9389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9390 = getelementptr inbounds %struct.GPR, %struct.GPR* %9389, i32 0, i32 1
  %9391 = getelementptr inbounds %struct.Reg, %struct.Reg* %9390, i32 0, i32 0
  %EAX.i620 = bitcast %union.anon* %9391 to i32*
  %9392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9393 = getelementptr inbounds %struct.GPR, %struct.GPR* %9392, i32 0, i32 11
  %9394 = getelementptr inbounds %struct.Reg, %struct.Reg* %9393, i32 0, i32 0
  %RDI.i621 = bitcast %union.anon* %9394 to i64*
  %9395 = load i32, i32* %EAX.i620
  %9396 = zext i32 %9395 to i64
  %9397 = load i64, i64* %PC.i619
  %9398 = add i64 %9397, 2
  store i64 %9398, i64* %PC.i619
  %9399 = and i64 %9396, 4294967295
  store i64 %9399, i64* %RDI.i621, align 8
  store %struct.Memory* %loadMem_434143, %struct.Memory** %MEMORY
  %loadMem1_434145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9401 = getelementptr inbounds %struct.GPR, %struct.GPR* %9400, i32 0, i32 33
  %9402 = getelementptr inbounds %struct.Reg, %struct.Reg* %9401, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %9402 to i64*
  %9403 = load i64, i64* %PC.i618
  %9404 = add i64 %9403, -208997
  %9405 = load i64, i64* %PC.i618
  %9406 = add i64 %9405, 5
  %9407 = load i64, i64* %PC.i618
  %9408 = add i64 %9407, 5
  store i64 %9408, i64* %PC.i618
  %9409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9410 = load i64, i64* %9409, align 8
  %9411 = add i64 %9410, -8
  %9412 = inttoptr i64 %9411 to i64*
  store i64 %9406, i64* %9412
  store i64 %9411, i64* %9409, align 8
  %9413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9404, i64* %9413, align 8
  store %struct.Memory* %loadMem1_434145, %struct.Memory** %MEMORY
  %loadMem2_434145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_434145 = load i64, i64* %3
  %9414 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %loadMem2_434145)
  store %struct.Memory* %9414, %struct.Memory** %MEMORY
  %loadMem_43414a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9416 = getelementptr inbounds %struct.GPR, %struct.GPR* %9415, i32 0, i32 33
  %9417 = getelementptr inbounds %struct.Reg, %struct.Reg* %9416, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %9417 to i64*
  %9418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9419 = getelementptr inbounds %struct.GPR, %struct.GPR* %9418, i32 0, i32 7
  %9420 = getelementptr inbounds %struct.Reg, %struct.Reg* %9419, i32 0, i32 0
  %RDX.i616 = bitcast %union.anon* %9420 to i64*
  %9421 = load i64, i64* %PC.i615
  %9422 = add i64 %9421, 8
  store i64 %9422, i64* %PC.i615
  %9423 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9423, i64* %RDX.i616, align 8
  store %struct.Memory* %loadMem_43414a, %struct.Memory** %MEMORY
  %loadMem_434152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9425 = getelementptr inbounds %struct.GPR, %struct.GPR* %9424, i32 0, i32 33
  %9426 = getelementptr inbounds %struct.Reg, %struct.Reg* %9425, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %9426 to i64*
  %9427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9428 = getelementptr inbounds %struct.GPR, %struct.GPR* %9427, i32 0, i32 1
  %9429 = getelementptr inbounds %struct.Reg, %struct.Reg* %9428, i32 0, i32 0
  %RAX.i613 = bitcast %union.anon* %9429 to i64*
  %9430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9431 = getelementptr inbounds %struct.GPR, %struct.GPR* %9430, i32 0, i32 7
  %9432 = getelementptr inbounds %struct.Reg, %struct.Reg* %9431, i32 0, i32 0
  %RDX.i614 = bitcast %union.anon* %9432 to i64*
  %9433 = load i64, i64* %RDX.i614
  %9434 = add i64 %9433, 14168
  %9435 = load i64, i64* %RAX.i613
  %9436 = load i64, i64* %PC.i612
  %9437 = add i64 %9436, 7
  store i64 %9437, i64* %PC.i612
  %9438 = inttoptr i64 %9434 to i64*
  store i64 %9435, i64* %9438
  store %struct.Memory* %loadMem_434152, %struct.Memory** %MEMORY
  %loadMem_434159 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9440 = getelementptr inbounds %struct.GPR, %struct.GPR* %9439, i32 0, i32 33
  %9441 = getelementptr inbounds %struct.Reg, %struct.Reg* %9440, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %9441 to i64*
  %9442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9443 = getelementptr inbounds %struct.GPR, %struct.GPR* %9442, i32 0, i32 1
  %9444 = getelementptr inbounds %struct.Reg, %struct.Reg* %9443, i32 0, i32 0
  %RAX.i611 = bitcast %union.anon* %9444 to i64*
  %9445 = load i64, i64* %RAX.i611
  %9446 = load i64, i64* %PC.i610
  %9447 = add i64 %9446, 4
  store i64 %9447, i64* %PC.i610
  %9448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9448, align 1
  %9449 = trunc i64 %9445 to i32
  %9450 = and i32 %9449, 255
  %9451 = call i32 @llvm.ctpop.i32(i32 %9450)
  %9452 = trunc i32 %9451 to i8
  %9453 = and i8 %9452, 1
  %9454 = xor i8 %9453, 1
  %9455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9454, i8* %9455, align 1
  %9456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9456, align 1
  %9457 = icmp eq i64 %9445, 0
  %9458 = zext i1 %9457 to i8
  %9459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9458, i8* %9459, align 1
  %9460 = lshr i64 %9445, 63
  %9461 = trunc i64 %9460 to i8
  %9462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9461, i8* %9462, align 1
  %9463 = lshr i64 %9445, 63
  %9464 = xor i64 %9460, %9463
  %9465 = add i64 %9464, %9463
  %9466 = icmp eq i64 %9465, 2
  %9467 = zext i1 %9466 to i8
  %9468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9467, i8* %9468, align 1
  store %struct.Memory* %loadMem_434159, %struct.Memory** %MEMORY
  %loadMem_43415d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9470 = getelementptr inbounds %struct.GPR, %struct.GPR* %9469, i32 0, i32 33
  %9471 = getelementptr inbounds %struct.Reg, %struct.Reg* %9470, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %9471 to i64*
  %9472 = load i64, i64* %PC.i609
  %9473 = add i64 %9472, 21
  %9474 = load i64, i64* %PC.i609
  %9475 = add i64 %9474, 6
  %9476 = load i64, i64* %PC.i609
  %9477 = add i64 %9476, 6
  store i64 %9477, i64* %PC.i609
  %9478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9479 = load i8, i8* %9478, align 1
  %9480 = icmp eq i8 %9479, 0
  %9481 = zext i1 %9480 to i8
  store i8 %9481, i8* %BRANCH_TAKEN, align 1
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9483 = select i1 %9480, i64 %9473, i64 %9475
  store i64 %9483, i64* %9482, align 8
  store %struct.Memory* %loadMem_43415d, %struct.Memory** %MEMORY
  %loadBr_43415d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43415d = icmp eq i8 %loadBr_43415d, 1
  br i1 %cmpBr_43415d, label %block_.L_434172, label %block_434163

block_434163:                                     ; preds = %block_.L_43411a
  %loadMem_434163 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9485 = getelementptr inbounds %struct.GPR, %struct.GPR* %9484, i32 0, i32 33
  %9486 = getelementptr inbounds %struct.Reg, %struct.Reg* %9485, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %9486 to i64*
  %9487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9488 = getelementptr inbounds %struct.GPR, %struct.GPR* %9487, i32 0, i32 11
  %9489 = getelementptr inbounds %struct.Reg, %struct.Reg* %9488, i32 0, i32 0
  %RDI.i608 = bitcast %union.anon* %9489 to i64*
  %9490 = load i64, i64* %PC.i607
  %9491 = add i64 %9490, 10
  store i64 %9491, i64* %PC.i607
  store i64 ptrtoint (%G__0x4c1705_type* @G__0x4c1705 to i64), i64* %RDI.i608, align 8
  store %struct.Memory* %loadMem_434163, %struct.Memory** %MEMORY
  %loadMem1_43416d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9493 = getelementptr inbounds %struct.GPR, %struct.GPR* %9492, i32 0, i32 33
  %9494 = getelementptr inbounds %struct.Reg, %struct.Reg* %9493, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %9494 to i64*
  %9495 = load i64, i64* %PC.i606
  %9496 = add i64 %9495, 152195
  %9497 = load i64, i64* %PC.i606
  %9498 = add i64 %9497, 5
  %9499 = load i64, i64* %PC.i606
  %9500 = add i64 %9499, 5
  store i64 %9500, i64* %PC.i606
  %9501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9502 = load i64, i64* %9501, align 8
  %9503 = add i64 %9502, -8
  %9504 = inttoptr i64 %9503 to i64*
  store i64 %9498, i64* %9504
  store i64 %9503, i64* %9501, align 8
  %9505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9496, i64* %9505, align 8
  store %struct.Memory* %loadMem1_43416d, %struct.Memory** %MEMORY
  %loadMem2_43416d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43416d = load i64, i64* %3
  %call2_43416d = call %struct.Memory* @sub_4593f0.no_mem_exit(%struct.State* %0, i64 %loadPC_43416d, %struct.Memory* %loadMem2_43416d)
  store %struct.Memory* %call2_43416d, %struct.Memory** %MEMORY
  br label %block_.L_434172

block_.L_434172:                                  ; preds = %block_434163, %block_.L_43411a
  %loadMem_434172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9507 = getelementptr inbounds %struct.GPR, %struct.GPR* %9506, i32 0, i32 33
  %9508 = getelementptr inbounds %struct.Reg, %struct.Reg* %9507, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %9508 to i64*
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9510 = getelementptr inbounds %struct.GPR, %struct.GPR* %9509, i32 0, i32 1
  %9511 = getelementptr inbounds %struct.Reg, %struct.Reg* %9510, i32 0, i32 0
  %RAX.i605 = bitcast %union.anon* %9511 to i64*
  %9512 = load i64, i64* %PC.i604
  %9513 = add i64 %9512, 8
  store i64 %9513, i64* %PC.i604
  %9514 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %9514, i64* %RAX.i605, align 8
  store %struct.Memory* %loadMem_434172, %struct.Memory** %MEMORY
  %loadMem_43417a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9516 = getelementptr inbounds %struct.GPR, %struct.GPR* %9515, i32 0, i32 33
  %9517 = getelementptr inbounds %struct.Reg, %struct.Reg* %9516, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %9517 to i64*
  %9518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9519 = getelementptr inbounds %struct.GPR, %struct.GPR* %9518, i32 0, i32 1
  %9520 = getelementptr inbounds %struct.Reg, %struct.Reg* %9519, i32 0, i32 0
  %RAX.i603 = bitcast %union.anon* %9520 to i64*
  %9521 = load i64, i64* %RAX.i603
  %9522 = add i64 %9521, 216
  %9523 = load i64, i64* %PC.i602
  %9524 = add i64 %9523, 7
  store i64 %9524, i64* %PC.i602
  %9525 = inttoptr i64 %9522 to i32*
  %9526 = load i32, i32* %9525
  %9527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9527, align 1
  %9528 = and i32 %9526, 255
  %9529 = call i32 @llvm.ctpop.i32(i32 %9528)
  %9530 = trunc i32 %9529 to i8
  %9531 = and i8 %9530, 1
  %9532 = xor i8 %9531, 1
  %9533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9532, i8* %9533, align 1
  %9534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9534, align 1
  %9535 = icmp eq i32 %9526, 0
  %9536 = zext i1 %9535 to i8
  %9537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9536, i8* %9537, align 1
  %9538 = lshr i32 %9526, 31
  %9539 = trunc i32 %9538 to i8
  %9540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9539, i8* %9540, align 1
  %9541 = lshr i32 %9526, 31
  %9542 = xor i32 %9538, %9541
  %9543 = add i32 %9542, %9541
  %9544 = icmp eq i32 %9543, 2
  %9545 = zext i1 %9544 to i8
  %9546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9545, i8* %9546, align 1
  store %struct.Memory* %loadMem_43417a, %struct.Memory** %MEMORY
  %loadMem_434181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9548 = getelementptr inbounds %struct.GPR, %struct.GPR* %9547, i32 0, i32 33
  %9549 = getelementptr inbounds %struct.Reg, %struct.Reg* %9548, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %9549 to i64*
  %9550 = load i64, i64* %PC.i601
  %9551 = add i64 %9550, 79
  %9552 = load i64, i64* %PC.i601
  %9553 = add i64 %9552, 6
  %9554 = load i64, i64* %PC.i601
  %9555 = add i64 %9554, 6
  store i64 %9555, i64* %PC.i601
  %9556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9557 = load i8, i8* %9556, align 1
  store i8 %9557, i8* %BRANCH_TAKEN, align 1
  %9558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9559 = icmp ne i8 %9557, 0
  %9560 = select i1 %9559, i64 %9551, i64 %9553
  store i64 %9560, i64* %9558, align 8
  store %struct.Memory* %loadMem_434181, %struct.Memory** %MEMORY
  %loadBr_434181 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_434181 = icmp eq i8 %loadBr_434181, 1
  br i1 %cmpBr_434181, label %block_.L_4341d0, label %block_434187

block_434187:                                     ; preds = %block_.L_434172
  %loadMem_434187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9562 = getelementptr inbounds %struct.GPR, %struct.GPR* %9561, i32 0, i32 33
  %9563 = getelementptr inbounds %struct.Reg, %struct.Reg* %9562, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %9563 to i64*
  %9564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9565 = getelementptr inbounds %struct.GPR, %struct.GPR* %9564, i32 0, i32 1
  %9566 = getelementptr inbounds %struct.Reg, %struct.Reg* %9565, i32 0, i32 0
  %RAX.i600 = bitcast %union.anon* %9566 to i64*
  %9567 = load i64, i64* %PC.i599
  %9568 = add i64 %9567, 5
  store i64 %9568, i64* %PC.i599
  store i64 4, i64* %RAX.i600, align 8
  store %struct.Memory* %loadMem_434187, %struct.Memory** %MEMORY
  %loadMem_43418c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9570 = getelementptr inbounds %struct.GPR, %struct.GPR* %9569, i32 0, i32 33
  %9571 = getelementptr inbounds %struct.Reg, %struct.Reg* %9570, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %9571 to i64*
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9573 = getelementptr inbounds %struct.GPR, %struct.GPR* %9572, i32 0, i32 1
  %9574 = getelementptr inbounds %struct.Reg, %struct.Reg* %9573, i32 0, i32 0
  %EAX.i597 = bitcast %union.anon* %9574 to i32*
  %9575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9576 = getelementptr inbounds %struct.GPR, %struct.GPR* %9575, i32 0, i32 9
  %9577 = getelementptr inbounds %struct.Reg, %struct.Reg* %9576, i32 0, i32 0
  %RSI.i598 = bitcast %union.anon* %9577 to i64*
  %9578 = load i32, i32* %EAX.i597
  %9579 = zext i32 %9578 to i64
  %9580 = load i64, i64* %PC.i596
  %9581 = add i64 %9580, 2
  store i64 %9581, i64* %PC.i596
  %9582 = and i64 %9579, 4294967295
  store i64 %9582, i64* %RSI.i598, align 8
  store %struct.Memory* %loadMem_43418c, %struct.Memory** %MEMORY
  %loadMem_43418e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9584 = getelementptr inbounds %struct.GPR, %struct.GPR* %9583, i32 0, i32 33
  %9585 = getelementptr inbounds %struct.Reg, %struct.Reg* %9584, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %9585 to i64*
  %9586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9587 = getelementptr inbounds %struct.GPR, %struct.GPR* %9586, i32 0, i32 5
  %9588 = getelementptr inbounds %struct.Reg, %struct.Reg* %9587, i32 0, i32 0
  %RCX.i595 = bitcast %union.anon* %9588 to i64*
  %9589 = load i64, i64* %PC.i594
  %9590 = add i64 %9589, 8
  store i64 %9590, i64* %PC.i594
  %9591 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9591, i64* %RCX.i595, align 8
  store %struct.Memory* %loadMem_43418e, %struct.Memory** %MEMORY
  %loadMem_434196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9593 = getelementptr inbounds %struct.GPR, %struct.GPR* %9592, i32 0, i32 33
  %9594 = getelementptr inbounds %struct.Reg, %struct.Reg* %9593, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %9594 to i64*
  %9595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9596 = getelementptr inbounds %struct.GPR, %struct.GPR* %9595, i32 0, i32 1
  %9597 = getelementptr inbounds %struct.Reg, %struct.Reg* %9596, i32 0, i32 0
  %RAX.i592 = bitcast %union.anon* %9597 to i64*
  %9598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9599 = getelementptr inbounds %struct.GPR, %struct.GPR* %9598, i32 0, i32 5
  %9600 = getelementptr inbounds %struct.Reg, %struct.Reg* %9599, i32 0, i32 0
  %RCX.i593 = bitcast %union.anon* %9600 to i64*
  %9601 = load i64, i64* %RCX.i593
  %9602 = add i64 %9601, 72488
  %9603 = load i64, i64* %PC.i591
  %9604 = add i64 %9603, 6
  store i64 %9604, i64* %PC.i591
  %9605 = inttoptr i64 %9602 to i32*
  %9606 = load i32, i32* %9605
  %9607 = zext i32 %9606 to i64
  store i64 %9607, i64* %RAX.i592, align 8
  store %struct.Memory* %loadMem_434196, %struct.Memory** %MEMORY
  %loadMem_43419c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9609 = getelementptr inbounds %struct.GPR, %struct.GPR* %9608, i32 0, i32 33
  %9610 = getelementptr inbounds %struct.Reg, %struct.Reg* %9609, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %9610 to i64*
  %9611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9612 = getelementptr inbounds %struct.GPR, %struct.GPR* %9611, i32 0, i32 1
  %9613 = getelementptr inbounds %struct.Reg, %struct.Reg* %9612, i32 0, i32 0
  %EAX.i589 = bitcast %union.anon* %9613 to i32*
  %9614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9615 = getelementptr inbounds %struct.GPR, %struct.GPR* %9614, i32 0, i32 11
  %9616 = getelementptr inbounds %struct.Reg, %struct.Reg* %9615, i32 0, i32 0
  %RDI.i590 = bitcast %union.anon* %9616 to i64*
  %9617 = load i32, i32* %EAX.i589
  %9618 = zext i32 %9617 to i64
  %9619 = load i64, i64* %PC.i588
  %9620 = add i64 %9619, 2
  store i64 %9620, i64* %PC.i588
  %9621 = and i64 %9618, 4294967295
  store i64 %9621, i64* %RDI.i590, align 8
  store %struct.Memory* %loadMem_43419c, %struct.Memory** %MEMORY
  %loadMem1_43419e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9623 = getelementptr inbounds %struct.GPR, %struct.GPR* %9622, i32 0, i32 33
  %9624 = getelementptr inbounds %struct.Reg, %struct.Reg* %9623, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %9624 to i64*
  %9625 = load i64, i64* %PC.i587
  %9626 = add i64 %9625, -209086
  %9627 = load i64, i64* %PC.i587
  %9628 = add i64 %9627, 5
  %9629 = load i64, i64* %PC.i587
  %9630 = add i64 %9629, 5
  store i64 %9630, i64* %PC.i587
  %9631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9632 = load i64, i64* %9631, align 8
  %9633 = add i64 %9632, -8
  %9634 = inttoptr i64 %9633 to i64*
  store i64 %9628, i64* %9634
  store i64 %9633, i64* %9631, align 8
  %9635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9626, i64* %9635, align 8
  store %struct.Memory* %loadMem1_43419e, %struct.Memory** %MEMORY
  %loadMem2_43419e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43419e = load i64, i64* %3
  %9636 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %loadMem2_43419e)
  store %struct.Memory* %9636, %struct.Memory** %MEMORY
  %loadMem_4341a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9638 = getelementptr inbounds %struct.GPR, %struct.GPR* %9637, i32 0, i32 33
  %9639 = getelementptr inbounds %struct.Reg, %struct.Reg* %9638, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %9639 to i64*
  %9640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9641 = getelementptr inbounds %struct.GPR, %struct.GPR* %9640, i32 0, i32 5
  %9642 = getelementptr inbounds %struct.Reg, %struct.Reg* %9641, i32 0, i32 0
  %RCX.i583 = bitcast %union.anon* %9642 to i64*
  %9643 = load i64, i64* %PC.i582
  %9644 = add i64 %9643, 8
  store i64 %9644, i64* %PC.i582
  %9645 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9645, i64* %RCX.i583, align 8
  store %struct.Memory* %loadMem_4341a3, %struct.Memory** %MEMORY
  %loadMem_4341ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %9646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9647 = getelementptr inbounds %struct.GPR, %struct.GPR* %9646, i32 0, i32 33
  %9648 = getelementptr inbounds %struct.Reg, %struct.Reg* %9647, i32 0, i32 0
  %PC.i579 = bitcast %union.anon* %9648 to i64*
  %9649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9650 = getelementptr inbounds %struct.GPR, %struct.GPR* %9649, i32 0, i32 1
  %9651 = getelementptr inbounds %struct.Reg, %struct.Reg* %9650, i32 0, i32 0
  %RAX.i580 = bitcast %union.anon* %9651 to i64*
  %9652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9653 = getelementptr inbounds %struct.GPR, %struct.GPR* %9652, i32 0, i32 5
  %9654 = getelementptr inbounds %struct.Reg, %struct.Reg* %9653, i32 0, i32 0
  %RCX.i581 = bitcast %union.anon* %9654 to i64*
  %9655 = load i64, i64* %RCX.i581
  %9656 = add i64 %9655, 71784
  %9657 = load i64, i64* %RAX.i580
  %9658 = load i64, i64* %PC.i579
  %9659 = add i64 %9658, 7
  store i64 %9659, i64* %PC.i579
  %9660 = inttoptr i64 %9656 to i64*
  store i64 %9657, i64* %9660
  store %struct.Memory* %loadMem_4341ab, %struct.Memory** %MEMORY
  %loadMem_4341b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9662 = getelementptr inbounds %struct.GPR, %struct.GPR* %9661, i32 0, i32 33
  %9663 = getelementptr inbounds %struct.Reg, %struct.Reg* %9662, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %9663 to i64*
  %9664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9665 = getelementptr inbounds %struct.GPR, %struct.GPR* %9664, i32 0, i32 1
  %9666 = getelementptr inbounds %struct.Reg, %struct.Reg* %9665, i32 0, i32 0
  %RAX.i578 = bitcast %union.anon* %9666 to i64*
  %9667 = load i64, i64* %RAX.i578
  %9668 = load i64, i64* %PC.i577
  %9669 = add i64 %9668, 4
  store i64 %9669, i64* %PC.i577
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9670, align 1
  %9671 = trunc i64 %9667 to i32
  %9672 = and i32 %9671, 255
  %9673 = call i32 @llvm.ctpop.i32(i32 %9672)
  %9674 = trunc i32 %9673 to i8
  %9675 = and i8 %9674, 1
  %9676 = xor i8 %9675, 1
  %9677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9676, i8* %9677, align 1
  %9678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9678, align 1
  %9679 = icmp eq i64 %9667, 0
  %9680 = zext i1 %9679 to i8
  %9681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9680, i8* %9681, align 1
  %9682 = lshr i64 %9667, 63
  %9683 = trunc i64 %9682 to i8
  %9684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9683, i8* %9684, align 1
  %9685 = lshr i64 %9667, 63
  %9686 = xor i64 %9682, %9685
  %9687 = add i64 %9686, %9685
  %9688 = icmp eq i64 %9687, 2
  %9689 = zext i1 %9688 to i8
  %9690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9689, i8* %9690, align 1
  store %struct.Memory* %loadMem_4341b2, %struct.Memory** %MEMORY
  %loadMem_4341b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9692 = getelementptr inbounds %struct.GPR, %struct.GPR* %9691, i32 0, i32 33
  %9693 = getelementptr inbounds %struct.Reg, %struct.Reg* %9692, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %9693 to i64*
  %9694 = load i64, i64* %PC.i576
  %9695 = add i64 %9694, 21
  %9696 = load i64, i64* %PC.i576
  %9697 = add i64 %9696, 6
  %9698 = load i64, i64* %PC.i576
  %9699 = add i64 %9698, 6
  store i64 %9699, i64* %PC.i576
  %9700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9701 = load i8, i8* %9700, align 1
  %9702 = icmp eq i8 %9701, 0
  %9703 = zext i1 %9702 to i8
  store i8 %9703, i8* %BRANCH_TAKEN, align 1
  %9704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9705 = select i1 %9702, i64 %9695, i64 %9697
  store i64 %9705, i64* %9704, align 8
  store %struct.Memory* %loadMem_4341b6, %struct.Memory** %MEMORY
  %loadBr_4341b6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4341b6 = icmp eq i8 %loadBr_4341b6, 1
  br i1 %cmpBr_4341b6, label %block_.L_4341cb, label %block_4341bc

block_4341bc:                                     ; preds = %block_434187
  %loadMem_4341bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9707 = getelementptr inbounds %struct.GPR, %struct.GPR* %9706, i32 0, i32 33
  %9708 = getelementptr inbounds %struct.Reg, %struct.Reg* %9707, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %9708 to i64*
  %9709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9710 = getelementptr inbounds %struct.GPR, %struct.GPR* %9709, i32 0, i32 11
  %9711 = getelementptr inbounds %struct.Reg, %struct.Reg* %9710, i32 0, i32 0
  %RDI.i575 = bitcast %union.anon* %9711 to i64*
  %9712 = load i64, i64* %PC.i574
  %9713 = add i64 %9712, 10
  store i64 %9713, i64* %PC.i574
  store i64 ptrtoint (%G__0x4c171c_type* @G__0x4c171c to i64), i64* %RDI.i575, align 8
  store %struct.Memory* %loadMem_4341bc, %struct.Memory** %MEMORY
  %loadMem1_4341c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9715 = getelementptr inbounds %struct.GPR, %struct.GPR* %9714, i32 0, i32 33
  %9716 = getelementptr inbounds %struct.Reg, %struct.Reg* %9715, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %9716 to i64*
  %9717 = load i64, i64* %PC.i573
  %9718 = add i64 %9717, 152106
  %9719 = load i64, i64* %PC.i573
  %9720 = add i64 %9719, 5
  %9721 = load i64, i64* %PC.i573
  %9722 = add i64 %9721, 5
  store i64 %9722, i64* %PC.i573
  %9723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9724 = load i64, i64* %9723, align 8
  %9725 = add i64 %9724, -8
  %9726 = inttoptr i64 %9725 to i64*
  store i64 %9720, i64* %9726
  store i64 %9725, i64* %9723, align 8
  %9727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9718, i64* %9727, align 8
  store %struct.Memory* %loadMem1_4341c6, %struct.Memory** %MEMORY
  %loadMem2_4341c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4341c6 = load i64, i64* %3
  %call2_4341c6 = call %struct.Memory* @sub_4593f0.no_mem_exit(%struct.State* %0, i64 %loadPC_4341c6, %struct.Memory* %loadMem2_4341c6)
  store %struct.Memory* %call2_4341c6, %struct.Memory** %MEMORY
  br label %block_.L_4341cb

block_.L_4341cb:                                  ; preds = %block_4341bc, %block_434187
  %loadMem_4341cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9729 = getelementptr inbounds %struct.GPR, %struct.GPR* %9728, i32 0, i32 33
  %9730 = getelementptr inbounds %struct.Reg, %struct.Reg* %9729, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %9730 to i64*
  %9731 = load i64, i64* %PC.i572
  %9732 = add i64 %9731, 5
  %9733 = load i64, i64* %PC.i572
  %9734 = add i64 %9733, 5
  store i64 %9734, i64* %PC.i572
  %9735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9732, i64* %9735, align 8
  store %struct.Memory* %loadMem_4341cb, %struct.Memory** %MEMORY
  br label %block_.L_4341d0

block_.L_4341d0:                                  ; preds = %block_.L_4341cb, %block_.L_434172
  %loadMem_4341d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9737 = getelementptr inbounds %struct.GPR, %struct.GPR* %9736, i32 0, i32 33
  %9738 = getelementptr inbounds %struct.Reg, %struct.Reg* %9737, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %9738 to i64*
  %9739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9740 = getelementptr inbounds %struct.GPR, %struct.GPR* %9739, i32 0, i32 1
  %9741 = getelementptr inbounds %struct.Reg, %struct.Reg* %9740, i32 0, i32 0
  %RAX.i571 = bitcast %union.anon* %9741 to i64*
  %9742 = load i64, i64* %PC.i570
  %9743 = add i64 %9742, 5
  store i64 %9743, i64* %PC.i570
  store i64 4, i64* %RAX.i571, align 8
  store %struct.Memory* %loadMem_4341d0, %struct.Memory** %MEMORY
  %loadMem_4341d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9745 = getelementptr inbounds %struct.GPR, %struct.GPR* %9744, i32 0, i32 33
  %9746 = getelementptr inbounds %struct.Reg, %struct.Reg* %9745, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %9746 to i64*
  %9747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9748 = getelementptr inbounds %struct.GPR, %struct.GPR* %9747, i32 0, i32 5
  %9749 = getelementptr inbounds %struct.Reg, %struct.Reg* %9748, i32 0, i32 0
  %RCX.i569 = bitcast %union.anon* %9749 to i64*
  %9750 = load i64, i64* %PC.i568
  %9751 = add i64 %9750, 8
  store i64 %9751, i64* %PC.i568
  %9752 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9752, i64* %RCX.i569, align 8
  store %struct.Memory* %loadMem_4341d5, %struct.Memory** %MEMORY
  %loadMem_4341dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9754 = getelementptr inbounds %struct.GPR, %struct.GPR* %9753, i32 0, i32 33
  %9755 = getelementptr inbounds %struct.Reg, %struct.Reg* %9754, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %9755 to i64*
  %9756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9757 = getelementptr inbounds %struct.GPR, %struct.GPR* %9756, i32 0, i32 5
  %9758 = getelementptr inbounds %struct.Reg, %struct.Reg* %9757, i32 0, i32 0
  %RCX.i567 = bitcast %union.anon* %9758 to i64*
  %9759 = load i64, i64* %RCX.i567
  %9760 = load i64, i64* %PC.i566
  %9761 = add i64 %9760, 4
  store i64 %9761, i64* %PC.i566
  %9762 = add i64 104, %9759
  store i64 %9762, i64* %RCX.i567, align 8
  %9763 = icmp ult i64 %9762, %9759
  %9764 = icmp ult i64 %9762, 104
  %9765 = or i1 %9763, %9764
  %9766 = zext i1 %9765 to i8
  %9767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9766, i8* %9767, align 1
  %9768 = trunc i64 %9762 to i32
  %9769 = and i32 %9768, 255
  %9770 = call i32 @llvm.ctpop.i32(i32 %9769)
  %9771 = trunc i32 %9770 to i8
  %9772 = and i8 %9771, 1
  %9773 = xor i8 %9772, 1
  %9774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9773, i8* %9774, align 1
  %9775 = xor i64 104, %9759
  %9776 = xor i64 %9775, %9762
  %9777 = lshr i64 %9776, 4
  %9778 = trunc i64 %9777 to i8
  %9779 = and i8 %9778, 1
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9779, i8* %9780, align 1
  %9781 = icmp eq i64 %9762, 0
  %9782 = zext i1 %9781 to i8
  %9783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9782, i8* %9783, align 1
  %9784 = lshr i64 %9762, 63
  %9785 = trunc i64 %9784 to i8
  %9786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9785, i8* %9786, align 1
  %9787 = lshr i64 %9759, 63
  %9788 = xor i64 %9784, %9787
  %9789 = add i64 %9788, %9784
  %9790 = icmp eq i64 %9789, 2
  %9791 = zext i1 %9790 to i8
  %9792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9791, i8* %9792, align 1
  store %struct.Memory* %loadMem_4341dd, %struct.Memory** %MEMORY
  %loadMem_4341e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9794 = getelementptr inbounds %struct.GPR, %struct.GPR* %9793, i32 0, i32 33
  %9795 = getelementptr inbounds %struct.Reg, %struct.Reg* %9794, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %9795 to i64*
  %9796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9797 = getelementptr inbounds %struct.GPR, %struct.GPR* %9796, i32 0, i32 7
  %9798 = getelementptr inbounds %struct.Reg, %struct.Reg* %9797, i32 0, i32 0
  %RDX.i565 = bitcast %union.anon* %9798 to i64*
  %9799 = load i64, i64* %PC.i564
  %9800 = add i64 %9799, 8
  store i64 %9800, i64* %PC.i564
  %9801 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9801, i64* %RDX.i565, align 8
  store %struct.Memory* %loadMem_4341e1, %struct.Memory** %MEMORY
  %loadMem_4341e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9803 = getelementptr inbounds %struct.GPR, %struct.GPR* %9802, i32 0, i32 33
  %9804 = getelementptr inbounds %struct.Reg, %struct.Reg* %9803, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %9804 to i64*
  %9805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9806 = getelementptr inbounds %struct.GPR, %struct.GPR* %9805, i32 0, i32 7
  %9807 = getelementptr inbounds %struct.Reg, %struct.Reg* %9806, i32 0, i32 0
  %RDX.i562 = bitcast %union.anon* %9807 to i64*
  %9808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9809 = getelementptr inbounds %struct.GPR, %struct.GPR* %9808, i32 0, i32 9
  %9810 = getelementptr inbounds %struct.Reg, %struct.Reg* %9809, i32 0, i32 0
  %RSI.i563 = bitcast %union.anon* %9810 to i64*
  %9811 = load i64, i64* %RDX.i562
  %9812 = add i64 %9811, 52
  %9813 = load i64, i64* %PC.i561
  %9814 = add i64 %9813, 3
  store i64 %9814, i64* %PC.i561
  %9815 = inttoptr i64 %9812 to i32*
  %9816 = load i32, i32* %9815
  %9817 = zext i32 %9816 to i64
  store i64 %9817, i64* %RSI.i563, align 8
  store %struct.Memory* %loadMem_4341e9, %struct.Memory** %MEMORY
  %loadMem_4341ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %9818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9819 = getelementptr inbounds %struct.GPR, %struct.GPR* %9818, i32 0, i32 33
  %9820 = getelementptr inbounds %struct.Reg, %struct.Reg* %9819, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %9820 to i64*
  %9821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9822 = getelementptr inbounds %struct.GPR, %struct.GPR* %9821, i32 0, i32 1
  %9823 = getelementptr inbounds %struct.Reg, %struct.Reg* %9822, i32 0, i32 0
  %EAX.i559 = bitcast %union.anon* %9823 to i32*
  %9824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9825 = getelementptr inbounds %struct.GPR, %struct.GPR* %9824, i32 0, i32 15
  %9826 = getelementptr inbounds %struct.Reg, %struct.Reg* %9825, i32 0, i32 0
  %RBP.i560 = bitcast %union.anon* %9826 to i64*
  %9827 = load i64, i64* %RBP.i560
  %9828 = sub i64 %9827, 224
  %9829 = load i32, i32* %EAX.i559
  %9830 = zext i32 %9829 to i64
  %9831 = load i64, i64* %PC.i558
  %9832 = add i64 %9831, 6
  store i64 %9832, i64* %PC.i558
  %9833 = inttoptr i64 %9828 to i32*
  store i32 %9829, i32* %9833
  store %struct.Memory* %loadMem_4341ec, %struct.Memory** %MEMORY
  %loadMem_4341f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9835 = getelementptr inbounds %struct.GPR, %struct.GPR* %9834, i32 0, i32 33
  %9836 = getelementptr inbounds %struct.Reg, %struct.Reg* %9835, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %9836 to i64*
  %9837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9838 = getelementptr inbounds %struct.GPR, %struct.GPR* %9837, i32 0, i32 9
  %9839 = getelementptr inbounds %struct.Reg, %struct.Reg* %9838, i32 0, i32 0
  %ESI.i556 = bitcast %union.anon* %9839 to i32*
  %9840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9841 = getelementptr inbounds %struct.GPR, %struct.GPR* %9840, i32 0, i32 1
  %9842 = getelementptr inbounds %struct.Reg, %struct.Reg* %9841, i32 0, i32 0
  %RAX.i557 = bitcast %union.anon* %9842 to i64*
  %9843 = load i32, i32* %ESI.i556
  %9844 = zext i32 %9843 to i64
  %9845 = load i64, i64* %PC.i555
  %9846 = add i64 %9845, 2
  store i64 %9846, i64* %PC.i555
  %9847 = and i64 %9844, 4294967295
  store i64 %9847, i64* %RAX.i557, align 8
  store %struct.Memory* %loadMem_4341f2, %struct.Memory** %MEMORY
  %loadMem_4341f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9849 = getelementptr inbounds %struct.GPR, %struct.GPR* %9848, i32 0, i32 33
  %9850 = getelementptr inbounds %struct.Reg, %struct.Reg* %9849, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %9850 to i64*
  %9851 = load i64, i64* %PC.i554
  %9852 = add i64 %9851, 1
  store i64 %9852, i64* %PC.i554
  %9853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9855 = bitcast %union.anon* %9854 to i32*
  %9856 = load i32, i32* %9855, align 8
  %9857 = sext i32 %9856 to i64
  %9858 = lshr i64 %9857, 32
  store i64 %9858, i64* %9853, align 8
  store %struct.Memory* %loadMem_4341f4, %struct.Memory** %MEMORY
  %loadMem_4341f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9860 = getelementptr inbounds %struct.GPR, %struct.GPR* %9859, i32 0, i32 33
  %9861 = getelementptr inbounds %struct.Reg, %struct.Reg* %9860, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %9861 to i64*
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9863 = getelementptr inbounds %struct.GPR, %struct.GPR* %9862, i32 0, i32 9
  %9864 = getelementptr inbounds %struct.Reg, %struct.Reg* %9863, i32 0, i32 0
  %RSI.i552 = bitcast %union.anon* %9864 to i64*
  %9865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9866 = getelementptr inbounds %struct.GPR, %struct.GPR* %9865, i32 0, i32 15
  %9867 = getelementptr inbounds %struct.Reg, %struct.Reg* %9866, i32 0, i32 0
  %RBP.i553 = bitcast %union.anon* %9867 to i64*
  %9868 = load i64, i64* %RBP.i553
  %9869 = sub i64 %9868, 224
  %9870 = load i64, i64* %PC.i551
  %9871 = add i64 %9870, 6
  store i64 %9871, i64* %PC.i551
  %9872 = inttoptr i64 %9869 to i32*
  %9873 = load i32, i32* %9872
  %9874 = zext i32 %9873 to i64
  store i64 %9874, i64* %RSI.i552, align 8
  store %struct.Memory* %loadMem_4341f5, %struct.Memory** %MEMORY
  %loadMem_4341fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9876 = getelementptr inbounds %struct.GPR, %struct.GPR* %9875, i32 0, i32 33
  %9877 = getelementptr inbounds %struct.Reg, %struct.Reg* %9876, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %9877 to i64*
  %9878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9879 = getelementptr inbounds %struct.GPR, %struct.GPR* %9878, i32 0, i32 9
  %9880 = getelementptr inbounds %struct.Reg, %struct.Reg* %9879, i32 0, i32 0
  %ESI.i547 = bitcast %union.anon* %9880 to i32*
  %9881 = load i32, i32* %ESI.i547
  %9882 = zext i32 %9881 to i64
  %9883 = load i64, i64* %PC.i546
  %9884 = add i64 %9883, 2
  store i64 %9884, i64* %PC.i546
  %9885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9886 = bitcast %union.anon* %9885 to i32*
  %9887 = load i32, i32* %9886, align 8
  %9888 = zext i32 %9887 to i64
  %9889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %9890 = bitcast %union.anon* %9889 to i32*
  %9891 = load i32, i32* %9890, align 8
  %9892 = zext i32 %9891 to i64
  %9893 = shl i64 %9882, 32
  %9894 = ashr exact i64 %9893, 32
  %9895 = shl i64 %9892, 32
  %9896 = or i64 %9895, %9888
  %9897 = sdiv i64 %9896, %9894
  %9898 = shl i64 %9897, 32
  %9899 = ashr exact i64 %9898, 32
  %9900 = icmp eq i64 %9897, %9899
  br i1 %9900, label %9905, label %9901

; <label>:9901:                                   ; preds = %block_.L_4341d0
  %9902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9903 = load i64, i64* %9902, align 8
  %9904 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9903, %struct.Memory* %loadMem_4341fb)
  br label %routine_idivl__esi.exit548

; <label>:9905:                                   ; preds = %block_.L_4341d0
  %9906 = srem i64 %9896, %9894
  %9907 = getelementptr inbounds %union.anon, %union.anon* %9885, i64 0, i32 0
  %9908 = and i64 %9897, 4294967295
  store i64 %9908, i64* %9907, align 8
  %9909 = getelementptr inbounds %union.anon, %union.anon* %9889, i64 0, i32 0
  %9910 = and i64 %9906, 4294967295
  store i64 %9910, i64* %9909, align 8
  %9911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9911, align 1
  %9912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %9912, align 1
  %9913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9913, align 1
  %9914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9914, align 1
  %9915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9915, align 1
  %9916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9916, align 1
  br label %routine_idivl__esi.exit548

routine_idivl__esi.exit548:                       ; preds = %9901, %9905
  %9917 = phi %struct.Memory* [ %9904, %9901 ], [ %loadMem_4341fb, %9905 ]
  store %struct.Memory* %9917, %struct.Memory** %MEMORY
  %loadMem_4341fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9919 = getelementptr inbounds %struct.GPR, %struct.GPR* %9918, i32 0, i32 33
  %9920 = getelementptr inbounds %struct.Reg, %struct.Reg* %9919, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %9920 to i64*
  %9921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9922 = getelementptr inbounds %struct.GPR, %struct.GPR* %9921, i32 0, i32 11
  %9923 = getelementptr inbounds %struct.Reg, %struct.Reg* %9922, i32 0, i32 0
  %RDI.i545 = bitcast %union.anon* %9923 to i64*
  %9924 = load i64, i64* %PC.i544
  %9925 = add i64 %9924, 8
  store i64 %9925, i64* %PC.i544
  %9926 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9926, i64* %RDI.i545, align 8
  store %struct.Memory* %loadMem_4341fd, %struct.Memory** %MEMORY
  %loadMem_434205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9928 = getelementptr inbounds %struct.GPR, %struct.GPR* %9927, i32 0, i32 33
  %9929 = getelementptr inbounds %struct.Reg, %struct.Reg* %9928, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %9929 to i64*
  %9930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9931 = getelementptr inbounds %struct.GPR, %struct.GPR* %9930, i32 0, i32 17
  %9932 = getelementptr inbounds %struct.Reg, %struct.Reg* %9931, i32 0, i32 0
  %R8D.i542 = bitcast %union.anon* %9932 to i32*
  %9933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9934 = getelementptr inbounds %struct.GPR, %struct.GPR* %9933, i32 0, i32 11
  %9935 = getelementptr inbounds %struct.Reg, %struct.Reg* %9934, i32 0, i32 0
  %RDI.i543 = bitcast %union.anon* %9935 to i64*
  %9936 = bitcast i32* %R8D.i542 to i64*
  %9937 = load i64, i64* %RDI.i543
  %9938 = add i64 %9937, 60
  %9939 = load i64, i64* %PC.i541
  %9940 = add i64 %9939, 4
  store i64 %9940, i64* %PC.i541
  %9941 = inttoptr i64 %9938 to i32*
  %9942 = load i32, i32* %9941
  %9943 = zext i32 %9942 to i64
  store i64 %9943, i64* %9936, align 8
  store %struct.Memory* %loadMem_434205, %struct.Memory** %MEMORY
  %loadMem_434209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9945 = getelementptr inbounds %struct.GPR, %struct.GPR* %9944, i32 0, i32 33
  %9946 = getelementptr inbounds %struct.Reg, %struct.Reg* %9945, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %9946 to i64*
  %9947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9948 = getelementptr inbounds %struct.GPR, %struct.GPR* %9947, i32 0, i32 1
  %9949 = getelementptr inbounds %struct.Reg, %struct.Reg* %9948, i32 0, i32 0
  %EAX.i539 = bitcast %union.anon* %9949 to i32*
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9951 = getelementptr inbounds %struct.GPR, %struct.GPR* %9950, i32 0, i32 15
  %9952 = getelementptr inbounds %struct.Reg, %struct.Reg* %9951, i32 0, i32 0
  %RBP.i540 = bitcast %union.anon* %9952 to i64*
  %9953 = load i64, i64* %RBP.i540
  %9954 = sub i64 %9953, 228
  %9955 = load i32, i32* %EAX.i539
  %9956 = zext i32 %9955 to i64
  %9957 = load i64, i64* %PC.i538
  %9958 = add i64 %9957, 6
  store i64 %9958, i64* %PC.i538
  %9959 = inttoptr i64 %9954 to i32*
  store i32 %9955, i32* %9959
  store %struct.Memory* %loadMem_434209, %struct.Memory** %MEMORY
  %loadMem_43420f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9961 = getelementptr inbounds %struct.GPR, %struct.GPR* %9960, i32 0, i32 33
  %9962 = getelementptr inbounds %struct.Reg, %struct.Reg* %9961, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %9962 to i64*
  %9963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9964 = getelementptr inbounds %struct.GPR, %struct.GPR* %9963, i32 0, i32 17
  %9965 = getelementptr inbounds %struct.Reg, %struct.Reg* %9964, i32 0, i32 0
  %R8D.i536 = bitcast %union.anon* %9965 to i32*
  %9966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9967 = getelementptr inbounds %struct.GPR, %struct.GPR* %9966, i32 0, i32 1
  %9968 = getelementptr inbounds %struct.Reg, %struct.Reg* %9967, i32 0, i32 0
  %RAX.i537 = bitcast %union.anon* %9968 to i64*
  %9969 = load i32, i32* %R8D.i536
  %9970 = zext i32 %9969 to i64
  %9971 = load i64, i64* %PC.i535
  %9972 = add i64 %9971, 3
  store i64 %9972, i64* %PC.i535
  %9973 = and i64 %9970, 4294967295
  store i64 %9973, i64* %RAX.i537, align 8
  store %struct.Memory* %loadMem_43420f, %struct.Memory** %MEMORY
  %loadMem_434212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9975 = getelementptr inbounds %struct.GPR, %struct.GPR* %9974, i32 0, i32 33
  %9976 = getelementptr inbounds %struct.Reg, %struct.Reg* %9975, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %9976 to i64*
  %9977 = load i64, i64* %PC.i534
  %9978 = add i64 %9977, 1
  store i64 %9978, i64* %PC.i534
  %9979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9981 = bitcast %union.anon* %9980 to i32*
  %9982 = load i32, i32* %9981, align 8
  %9983 = sext i32 %9982 to i64
  %9984 = lshr i64 %9983, 32
  store i64 %9984, i64* %9979, align 8
  store %struct.Memory* %loadMem_434212, %struct.Memory** %MEMORY
  %loadMem_434213 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9986 = getelementptr inbounds %struct.GPR, %struct.GPR* %9985, i32 0, i32 33
  %9987 = getelementptr inbounds %struct.Reg, %struct.Reg* %9986, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %9987 to i64*
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9989 = getelementptr inbounds %struct.GPR, %struct.GPR* %9988, i32 0, i32 9
  %9990 = getelementptr inbounds %struct.Reg, %struct.Reg* %9989, i32 0, i32 0
  %ESI.i529 = bitcast %union.anon* %9990 to i32*
  %9991 = load i32, i32* %ESI.i529
  %9992 = zext i32 %9991 to i64
  %9993 = load i64, i64* %PC.i528
  %9994 = add i64 %9993, 2
  store i64 %9994, i64* %PC.i528
  %9995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9996 = bitcast %union.anon* %9995 to i32*
  %9997 = load i32, i32* %9996, align 8
  %9998 = zext i32 %9997 to i64
  %9999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %10000 = bitcast %union.anon* %9999 to i32*
  %10001 = load i32, i32* %10000, align 8
  %10002 = zext i32 %10001 to i64
  %10003 = shl i64 %9992, 32
  %10004 = ashr exact i64 %10003, 32
  %10005 = shl i64 %10002, 32
  %10006 = or i64 %10005, %9998
  %10007 = sdiv i64 %10006, %10004
  %10008 = shl i64 %10007, 32
  %10009 = ashr exact i64 %10008, 32
  %10010 = icmp eq i64 %10007, %10009
  br i1 %10010, label %10015, label %10011

; <label>:10011:                                  ; preds = %routine_idivl__esi.exit548
  %10012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10013 = load i64, i64* %10012, align 8
  %10014 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %10013, %struct.Memory* %loadMem_434213)
  br label %routine_idivl__esi.exit530

; <label>:10015:                                  ; preds = %routine_idivl__esi.exit548
  %10016 = srem i64 %10006, %10004
  %10017 = getelementptr inbounds %union.anon, %union.anon* %9995, i64 0, i32 0
  %10018 = and i64 %10007, 4294967295
  store i64 %10018, i64* %10017, align 8
  %10019 = getelementptr inbounds %union.anon, %union.anon* %9999, i64 0, i32 0
  %10020 = and i64 %10016, 4294967295
  store i64 %10020, i64* %10019, align 8
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10021, align 1
  %10022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %10022, align 1
  %10023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10023, align 1
  %10024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10024, align 1
  %10025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %10025, align 1
  %10026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10026, align 1
  br label %routine_idivl__esi.exit530

routine_idivl__esi.exit530:                       ; preds = %10011, %10015
  %10027 = phi %struct.Memory* [ %10014, %10011 ], [ %loadMem_434213, %10015 ]
  store %struct.Memory* %10027, %struct.Memory** %MEMORY
  %loadMem_434215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10029 = getelementptr inbounds %struct.GPR, %struct.GPR* %10028, i32 0, i32 33
  %10030 = getelementptr inbounds %struct.Reg, %struct.Reg* %10029, i32 0, i32 0
  %PC.i525 = bitcast %union.anon* %10030 to i64*
  %10031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10032 = getelementptr inbounds %struct.GPR, %struct.GPR* %10031, i32 0, i32 5
  %10033 = getelementptr inbounds %struct.Reg, %struct.Reg* %10032, i32 0, i32 0
  %RCX.i526 = bitcast %union.anon* %10033 to i64*
  %10034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10035 = getelementptr inbounds %struct.GPR, %struct.GPR* %10034, i32 0, i32 11
  %10036 = getelementptr inbounds %struct.Reg, %struct.Reg* %10035, i32 0, i32 0
  %RDI.i527 = bitcast %union.anon* %10036 to i64*
  %10037 = load i64, i64* %RCX.i526
  %10038 = load i64, i64* %PC.i525
  %10039 = add i64 %10038, 3
  store i64 %10039, i64* %PC.i525
  store i64 %10037, i64* %RDI.i527, align 8
  store %struct.Memory* %loadMem_434215, %struct.Memory** %MEMORY
  %loadMem_434218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10041 = getelementptr inbounds %struct.GPR, %struct.GPR* %10040, i32 0, i32 33
  %10042 = getelementptr inbounds %struct.Reg, %struct.Reg* %10041, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %10042 to i64*
  %10043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10044 = getelementptr inbounds %struct.GPR, %struct.GPR* %10043, i32 0, i32 9
  %10045 = getelementptr inbounds %struct.Reg, %struct.Reg* %10044, i32 0, i32 0
  %RSI.i523 = bitcast %union.anon* %10045 to i64*
  %10046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10047 = getelementptr inbounds %struct.GPR, %struct.GPR* %10046, i32 0, i32 15
  %10048 = getelementptr inbounds %struct.Reg, %struct.Reg* %10047, i32 0, i32 0
  %RBP.i524 = bitcast %union.anon* %10048 to i64*
  %10049 = load i64, i64* %RBP.i524
  %10050 = sub i64 %10049, 228
  %10051 = load i64, i64* %PC.i522
  %10052 = add i64 %10051, 6
  store i64 %10052, i64* %PC.i522
  %10053 = inttoptr i64 %10050 to i32*
  %10054 = load i32, i32* %10053
  %10055 = zext i32 %10054 to i64
  store i64 %10055, i64* %RSI.i523, align 8
  store %struct.Memory* %loadMem_434218, %struct.Memory** %MEMORY
  %loadMem_43421e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10057 = getelementptr inbounds %struct.GPR, %struct.GPR* %10056, i32 0, i32 33
  %10058 = getelementptr inbounds %struct.Reg, %struct.Reg* %10057, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %10058 to i64*
  %10059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10060 = getelementptr inbounds %struct.GPR, %struct.GPR* %10059, i32 0, i32 1
  %10061 = getelementptr inbounds %struct.Reg, %struct.Reg* %10060, i32 0, i32 0
  %EAX.i520 = bitcast %union.anon* %10061 to i32*
  %10062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10063 = getelementptr inbounds %struct.GPR, %struct.GPR* %10062, i32 0, i32 7
  %10064 = getelementptr inbounds %struct.Reg, %struct.Reg* %10063, i32 0, i32 0
  %RDX.i521 = bitcast %union.anon* %10064 to i64*
  %10065 = load i32, i32* %EAX.i520
  %10066 = zext i32 %10065 to i64
  %10067 = load i64, i64* %PC.i519
  %10068 = add i64 %10067, 2
  store i64 %10068, i64* %PC.i519
  %10069 = and i64 %10066, 4294967295
  store i64 %10069, i64* %RDX.i521, align 8
  store %struct.Memory* %loadMem_43421e, %struct.Memory** %MEMORY
  %loadMem1_434220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10071 = getelementptr inbounds %struct.GPR, %struct.GPR* %10070, i32 0, i32 33
  %10072 = getelementptr inbounds %struct.Reg, %struct.Reg* %10071, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %10072 to i64*
  %10073 = load i64, i64* %PC.i518
  %10074 = add i64 %10073, 153056
  %10075 = load i64, i64* %PC.i518
  %10076 = add i64 %10075, 5
  %10077 = load i64, i64* %PC.i518
  %10078 = add i64 %10077, 5
  store i64 %10078, i64* %PC.i518
  %10079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10080 = load i64, i64* %10079, align 8
  %10081 = add i64 %10080, -8
  %10082 = inttoptr i64 %10081 to i64*
  store i64 %10076, i64* %10082
  store i64 %10081, i64* %10079, align 8
  %10083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10074, i64* %10083, align 8
  store %struct.Memory* %loadMem1_434220, %struct.Memory** %MEMORY
  %loadMem2_434220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_434220 = load i64, i64* %3
  %call2_434220 = call %struct.Memory* @sub_459800.get_mem2Dint(%struct.State* %0, i64 %loadPC_434220, %struct.Memory* %loadMem2_434220)
  store %struct.Memory* %call2_434220, %struct.Memory** %MEMORY
  %loadMem_434225 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10085 = getelementptr inbounds %struct.GPR, %struct.GPR* %10084, i32 0, i32 33
  %10086 = getelementptr inbounds %struct.Reg, %struct.Reg* %10085, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %10086 to i64*
  %10087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10088 = getelementptr inbounds %struct.GPR, %struct.GPR* %10087, i32 0, i32 7
  %10089 = getelementptr inbounds %struct.Reg, %struct.Reg* %10088, i32 0, i32 0
  %RDX.i517 = bitcast %union.anon* %10089 to i64*
  %10090 = load i64, i64* %PC.i516
  %10091 = add i64 %10090, 5
  store i64 %10091, i64* %PC.i516
  store i64 4, i64* %RDX.i517, align 8
  store %struct.Memory* %loadMem_434225, %struct.Memory** %MEMORY
  %loadMem_43422a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10093 = getelementptr inbounds %struct.GPR, %struct.GPR* %10092, i32 0, i32 33
  %10094 = getelementptr inbounds %struct.Reg, %struct.Reg* %10093, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %10094 to i64*
  %10095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10096 = getelementptr inbounds %struct.GPR, %struct.GPR* %10095, i32 0, i32 5
  %10097 = getelementptr inbounds %struct.Reg, %struct.Reg* %10096, i32 0, i32 0
  %RCX.i515 = bitcast %union.anon* %10097 to i64*
  %10098 = load i64, i64* %PC.i514
  %10099 = add i64 %10098, 8
  store i64 %10099, i64* %PC.i514
  %10100 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10100, i64* %RCX.i515, align 8
  store %struct.Memory* %loadMem_43422a, %struct.Memory** %MEMORY
  %loadMem_434232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10102 = getelementptr inbounds %struct.GPR, %struct.GPR* %10101, i32 0, i32 33
  %10103 = getelementptr inbounds %struct.Reg, %struct.Reg* %10102, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %10103 to i64*
  %10104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10105 = getelementptr inbounds %struct.GPR, %struct.GPR* %10104, i32 0, i32 5
  %10106 = getelementptr inbounds %struct.Reg, %struct.Reg* %10105, i32 0, i32 0
  %RCX.i513 = bitcast %union.anon* %10106 to i64*
  %10107 = load i64, i64* %RCX.i513
  %10108 = load i64, i64* %PC.i512
  %10109 = add i64 %10108, 4
  store i64 %10109, i64* %PC.i512
  %10110 = add i64 112, %10107
  store i64 %10110, i64* %RCX.i513, align 8
  %10111 = icmp ult i64 %10110, %10107
  %10112 = icmp ult i64 %10110, 112
  %10113 = or i1 %10111, %10112
  %10114 = zext i1 %10113 to i8
  %10115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10114, i8* %10115, align 1
  %10116 = trunc i64 %10110 to i32
  %10117 = and i32 %10116, 255
  %10118 = call i32 @llvm.ctpop.i32(i32 %10117)
  %10119 = trunc i32 %10118 to i8
  %10120 = and i8 %10119, 1
  %10121 = xor i8 %10120, 1
  %10122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10121, i8* %10122, align 1
  %10123 = xor i64 112, %10107
  %10124 = xor i64 %10123, %10110
  %10125 = lshr i64 %10124, 4
  %10126 = trunc i64 %10125 to i8
  %10127 = and i8 %10126, 1
  %10128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10127, i8* %10128, align 1
  %10129 = icmp eq i64 %10110, 0
  %10130 = zext i1 %10129 to i8
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10130, i8* %10131, align 1
  %10132 = lshr i64 %10110, 63
  %10133 = trunc i64 %10132 to i8
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10133, i8* %10134, align 1
  %10135 = lshr i64 %10107, 63
  %10136 = xor i64 %10132, %10135
  %10137 = add i64 %10136, %10132
  %10138 = icmp eq i64 %10137, 2
  %10139 = zext i1 %10138 to i8
  %10140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10139, i8* %10140, align 1
  store %struct.Memory* %loadMem_434232, %struct.Memory** %MEMORY
  %loadMem_434236 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10142 = getelementptr inbounds %struct.GPR, %struct.GPR* %10141, i32 0, i32 33
  %10143 = getelementptr inbounds %struct.Reg, %struct.Reg* %10142, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %10143 to i64*
  %10144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10145 = getelementptr inbounds %struct.GPR, %struct.GPR* %10144, i32 0, i32 11
  %10146 = getelementptr inbounds %struct.Reg, %struct.Reg* %10145, i32 0, i32 0
  %RDI.i511 = bitcast %union.anon* %10146 to i64*
  %10147 = load i64, i64* %PC.i510
  %10148 = add i64 %10147, 8
  store i64 %10148, i64* %PC.i510
  %10149 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10149, i64* %RDI.i511, align 8
  store %struct.Memory* %loadMem_434236, %struct.Memory** %MEMORY
  %loadMem_43423e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10151 = getelementptr inbounds %struct.GPR, %struct.GPR* %10150, i32 0, i32 33
  %10152 = getelementptr inbounds %struct.Reg, %struct.Reg* %10151, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %10152 to i64*
  %10153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10154 = getelementptr inbounds %struct.GPR, %struct.GPR* %10153, i32 0, i32 9
  %10155 = getelementptr inbounds %struct.Reg, %struct.Reg* %10154, i32 0, i32 0
  %RSI.i508 = bitcast %union.anon* %10155 to i64*
  %10156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10157 = getelementptr inbounds %struct.GPR, %struct.GPR* %10156, i32 0, i32 11
  %10158 = getelementptr inbounds %struct.Reg, %struct.Reg* %10157, i32 0, i32 0
  %RDI.i509 = bitcast %union.anon* %10158 to i64*
  %10159 = load i64, i64* %RDI.i509
  %10160 = add i64 %10159, 52
  %10161 = load i64, i64* %PC.i507
  %10162 = add i64 %10161, 3
  store i64 %10162, i64* %PC.i507
  %10163 = inttoptr i64 %10160 to i32*
  %10164 = load i32, i32* %10163
  %10165 = zext i32 %10164 to i64
  store i64 %10165, i64* %RSI.i508, align 8
  store %struct.Memory* %loadMem_43423e, %struct.Memory** %MEMORY
  %loadMem_434241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10167 = getelementptr inbounds %struct.GPR, %struct.GPR* %10166, i32 0, i32 33
  %10168 = getelementptr inbounds %struct.Reg, %struct.Reg* %10167, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %10168 to i64*
  %10169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10170 = getelementptr inbounds %struct.GPR, %struct.GPR* %10169, i32 0, i32 1
  %10171 = getelementptr inbounds %struct.Reg, %struct.Reg* %10170, i32 0, i32 0
  %EAX.i505 = bitcast %union.anon* %10171 to i32*
  %10172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10173 = getelementptr inbounds %struct.GPR, %struct.GPR* %10172, i32 0, i32 15
  %10174 = getelementptr inbounds %struct.Reg, %struct.Reg* %10173, i32 0, i32 0
  %RBP.i506 = bitcast %union.anon* %10174 to i64*
  %10175 = load i64, i64* %RBP.i506
  %10176 = sub i64 %10175, 232
  %10177 = load i32, i32* %EAX.i505
  %10178 = zext i32 %10177 to i64
  %10179 = load i64, i64* %PC.i504
  %10180 = add i64 %10179, 6
  store i64 %10180, i64* %PC.i504
  %10181 = inttoptr i64 %10176 to i32*
  store i32 %10177, i32* %10181
  store %struct.Memory* %loadMem_434241, %struct.Memory** %MEMORY
  %loadMem_434247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10183 = getelementptr inbounds %struct.GPR, %struct.GPR* %10182, i32 0, i32 33
  %10184 = getelementptr inbounds %struct.Reg, %struct.Reg* %10183, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %10184 to i64*
  %10185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10186 = getelementptr inbounds %struct.GPR, %struct.GPR* %10185, i32 0, i32 9
  %10187 = getelementptr inbounds %struct.Reg, %struct.Reg* %10186, i32 0, i32 0
  %ESI.i502 = bitcast %union.anon* %10187 to i32*
  %10188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10189 = getelementptr inbounds %struct.GPR, %struct.GPR* %10188, i32 0, i32 1
  %10190 = getelementptr inbounds %struct.Reg, %struct.Reg* %10189, i32 0, i32 0
  %RAX.i503 = bitcast %union.anon* %10190 to i64*
  %10191 = load i32, i32* %ESI.i502
  %10192 = zext i32 %10191 to i64
  %10193 = load i64, i64* %PC.i501
  %10194 = add i64 %10193, 2
  store i64 %10194, i64* %PC.i501
  %10195 = and i64 %10192, 4294967295
  store i64 %10195, i64* %RAX.i503, align 8
  store %struct.Memory* %loadMem_434247, %struct.Memory** %MEMORY
  %loadMem_434249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10197 = getelementptr inbounds %struct.GPR, %struct.GPR* %10196, i32 0, i32 33
  %10198 = getelementptr inbounds %struct.Reg, %struct.Reg* %10197, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %10198 to i64*
  %10199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10200 = getelementptr inbounds %struct.GPR, %struct.GPR* %10199, i32 0, i32 7
  %10201 = getelementptr inbounds %struct.Reg, %struct.Reg* %10200, i32 0, i32 0
  %EDX.i499 = bitcast %union.anon* %10201 to i32*
  %10202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10203 = getelementptr inbounds %struct.GPR, %struct.GPR* %10202, i32 0, i32 15
  %10204 = getelementptr inbounds %struct.Reg, %struct.Reg* %10203, i32 0, i32 0
  %RBP.i500 = bitcast %union.anon* %10204 to i64*
  %10205 = load i64, i64* %RBP.i500
  %10206 = sub i64 %10205, 236
  %10207 = load i32, i32* %EDX.i499
  %10208 = zext i32 %10207 to i64
  %10209 = load i64, i64* %PC.i498
  %10210 = add i64 %10209, 6
  store i64 %10210, i64* %PC.i498
  %10211 = inttoptr i64 %10206 to i32*
  store i32 %10207, i32* %10211
  store %struct.Memory* %loadMem_434249, %struct.Memory** %MEMORY
  %loadMem_43424f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10213 = getelementptr inbounds %struct.GPR, %struct.GPR* %10212, i32 0, i32 33
  %10214 = getelementptr inbounds %struct.Reg, %struct.Reg* %10213, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %10214 to i64*
  %10215 = load i64, i64* %PC.i497
  %10216 = add i64 %10215, 1
  store i64 %10216, i64* %PC.i497
  %10217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %10218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10219 = bitcast %union.anon* %10218 to i32*
  %10220 = load i32, i32* %10219, align 8
  %10221 = sext i32 %10220 to i64
  %10222 = lshr i64 %10221, 32
  store i64 %10222, i64* %10217, align 8
  store %struct.Memory* %loadMem_43424f, %struct.Memory** %MEMORY
  %loadMem_434250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10224 = getelementptr inbounds %struct.GPR, %struct.GPR* %10223, i32 0, i32 33
  %10225 = getelementptr inbounds %struct.Reg, %struct.Reg* %10224, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %10225 to i64*
  %10226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10227 = getelementptr inbounds %struct.GPR, %struct.GPR* %10226, i32 0, i32 9
  %10228 = getelementptr inbounds %struct.Reg, %struct.Reg* %10227, i32 0, i32 0
  %RSI.i495 = bitcast %union.anon* %10228 to i64*
  %10229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10230 = getelementptr inbounds %struct.GPR, %struct.GPR* %10229, i32 0, i32 15
  %10231 = getelementptr inbounds %struct.Reg, %struct.Reg* %10230, i32 0, i32 0
  %RBP.i496 = bitcast %union.anon* %10231 to i64*
  %10232 = load i64, i64* %RBP.i496
  %10233 = sub i64 %10232, 236
  %10234 = load i64, i64* %PC.i494
  %10235 = add i64 %10234, 6
  store i64 %10235, i64* %PC.i494
  %10236 = inttoptr i64 %10233 to i32*
  %10237 = load i32, i32* %10236
  %10238 = zext i32 %10237 to i64
  store i64 %10238, i64* %RSI.i495, align 8
  store %struct.Memory* %loadMem_434250, %struct.Memory** %MEMORY
  %loadMem_434256 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10240 = getelementptr inbounds %struct.GPR, %struct.GPR* %10239, i32 0, i32 33
  %10241 = getelementptr inbounds %struct.Reg, %struct.Reg* %10240, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %10241 to i64*
  %10242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10243 = getelementptr inbounds %struct.GPR, %struct.GPR* %10242, i32 0, i32 9
  %10244 = getelementptr inbounds %struct.Reg, %struct.Reg* %10243, i32 0, i32 0
  %ESI.i490 = bitcast %union.anon* %10244 to i32*
  %10245 = load i32, i32* %ESI.i490
  %10246 = zext i32 %10245 to i64
  %10247 = load i64, i64* %PC.i489
  %10248 = add i64 %10247, 2
  store i64 %10248, i64* %PC.i489
  %10249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10250 = bitcast %union.anon* %10249 to i32*
  %10251 = load i32, i32* %10250, align 8
  %10252 = zext i32 %10251 to i64
  %10253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %10254 = bitcast %union.anon* %10253 to i32*
  %10255 = load i32, i32* %10254, align 8
  %10256 = zext i32 %10255 to i64
  %10257 = shl i64 %10246, 32
  %10258 = ashr exact i64 %10257, 32
  %10259 = shl i64 %10256, 32
  %10260 = or i64 %10259, %10252
  %10261 = sdiv i64 %10260, %10258
  %10262 = shl i64 %10261, 32
  %10263 = ashr exact i64 %10262, 32
  %10264 = icmp eq i64 %10261, %10263
  br i1 %10264, label %10269, label %10265

; <label>:10265:                                  ; preds = %routine_idivl__esi.exit530
  %10266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10267 = load i64, i64* %10266, align 8
  %10268 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %10267, %struct.Memory* %loadMem_434256)
  br label %routine_idivl__esi.exit491

; <label>:10269:                                  ; preds = %routine_idivl__esi.exit530
  %10270 = srem i64 %10260, %10258
  %10271 = getelementptr inbounds %union.anon, %union.anon* %10249, i64 0, i32 0
  %10272 = and i64 %10261, 4294967295
  store i64 %10272, i64* %10271, align 8
  %10273 = getelementptr inbounds %union.anon, %union.anon* %10253, i64 0, i32 0
  %10274 = and i64 %10270, 4294967295
  store i64 %10274, i64* %10273, align 8
  %10275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10275, align 1
  %10276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %10276, align 1
  %10277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10277, align 1
  %10278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10278, align 1
  %10279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %10279, align 1
  %10280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10280, align 1
  br label %routine_idivl__esi.exit491

routine_idivl__esi.exit491:                       ; preds = %10265, %10269
  %10281 = phi %struct.Memory* [ %10268, %10265 ], [ %loadMem_434256, %10269 ]
  store %struct.Memory* %10281, %struct.Memory** %MEMORY
  %loadMem_434258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10283 = getelementptr inbounds %struct.GPR, %struct.GPR* %10282, i32 0, i32 33
  %10284 = getelementptr inbounds %struct.Reg, %struct.Reg* %10283, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %10284 to i64*
  %10285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10286 = getelementptr inbounds %struct.GPR, %struct.GPR* %10285, i32 0, i32 11
  %10287 = getelementptr inbounds %struct.Reg, %struct.Reg* %10286, i32 0, i32 0
  %RDI.i488 = bitcast %union.anon* %10287 to i64*
  %10288 = load i64, i64* %PC.i487
  %10289 = add i64 %10288, 8
  store i64 %10289, i64* %PC.i487
  %10290 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10290, i64* %RDI.i488, align 8
  store %struct.Memory* %loadMem_434258, %struct.Memory** %MEMORY
  %loadMem_434260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10292 = getelementptr inbounds %struct.GPR, %struct.GPR* %10291, i32 0, i32 33
  %10293 = getelementptr inbounds %struct.Reg, %struct.Reg* %10292, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %10293 to i64*
  %10294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10295 = getelementptr inbounds %struct.GPR, %struct.GPR* %10294, i32 0, i32 17
  %10296 = getelementptr inbounds %struct.Reg, %struct.Reg* %10295, i32 0, i32 0
  %R8D.i485 = bitcast %union.anon* %10296 to i32*
  %10297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10298 = getelementptr inbounds %struct.GPR, %struct.GPR* %10297, i32 0, i32 11
  %10299 = getelementptr inbounds %struct.Reg, %struct.Reg* %10298, i32 0, i32 0
  %RDI.i486 = bitcast %union.anon* %10299 to i64*
  %10300 = bitcast i32* %R8D.i485 to i64*
  %10301 = load i64, i64* %RDI.i486
  %10302 = add i64 %10301, 60
  %10303 = load i64, i64* %PC.i484
  %10304 = add i64 %10303, 4
  store i64 %10304, i64* %PC.i484
  %10305 = inttoptr i64 %10302 to i32*
  %10306 = load i32, i32* %10305
  %10307 = zext i32 %10306 to i64
  store i64 %10307, i64* %10300, align 8
  store %struct.Memory* %loadMem_434260, %struct.Memory** %MEMORY
  %loadMem_434264 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10309 = getelementptr inbounds %struct.GPR, %struct.GPR* %10308, i32 0, i32 33
  %10310 = getelementptr inbounds %struct.Reg, %struct.Reg* %10309, i32 0, i32 0
  %PC.i481 = bitcast %union.anon* %10310 to i64*
  %10311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10312 = getelementptr inbounds %struct.GPR, %struct.GPR* %10311, i32 0, i32 1
  %10313 = getelementptr inbounds %struct.Reg, %struct.Reg* %10312, i32 0, i32 0
  %EAX.i482 = bitcast %union.anon* %10313 to i32*
  %10314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10315 = getelementptr inbounds %struct.GPR, %struct.GPR* %10314, i32 0, i32 15
  %10316 = getelementptr inbounds %struct.Reg, %struct.Reg* %10315, i32 0, i32 0
  %RBP.i483 = bitcast %union.anon* %10316 to i64*
  %10317 = load i64, i64* %RBP.i483
  %10318 = sub i64 %10317, 240
  %10319 = load i32, i32* %EAX.i482
  %10320 = zext i32 %10319 to i64
  %10321 = load i64, i64* %PC.i481
  %10322 = add i64 %10321, 6
  store i64 %10322, i64* %PC.i481
  %10323 = inttoptr i64 %10318 to i32*
  store i32 %10319, i32* %10323
  store %struct.Memory* %loadMem_434264, %struct.Memory** %MEMORY
  %loadMem_43426a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10325 = getelementptr inbounds %struct.GPR, %struct.GPR* %10324, i32 0, i32 33
  %10326 = getelementptr inbounds %struct.Reg, %struct.Reg* %10325, i32 0, i32 0
  %PC.i478 = bitcast %union.anon* %10326 to i64*
  %10327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10328 = getelementptr inbounds %struct.GPR, %struct.GPR* %10327, i32 0, i32 17
  %10329 = getelementptr inbounds %struct.Reg, %struct.Reg* %10328, i32 0, i32 0
  %R8D.i479 = bitcast %union.anon* %10329 to i32*
  %10330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10331 = getelementptr inbounds %struct.GPR, %struct.GPR* %10330, i32 0, i32 1
  %10332 = getelementptr inbounds %struct.Reg, %struct.Reg* %10331, i32 0, i32 0
  %RAX.i480 = bitcast %union.anon* %10332 to i64*
  %10333 = load i32, i32* %R8D.i479
  %10334 = zext i32 %10333 to i64
  %10335 = load i64, i64* %PC.i478
  %10336 = add i64 %10335, 3
  store i64 %10336, i64* %PC.i478
  %10337 = and i64 %10334, 4294967295
  store i64 %10337, i64* %RAX.i480, align 8
  store %struct.Memory* %loadMem_43426a, %struct.Memory** %MEMORY
  %loadMem_43426d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10339 = getelementptr inbounds %struct.GPR, %struct.GPR* %10338, i32 0, i32 33
  %10340 = getelementptr inbounds %struct.Reg, %struct.Reg* %10339, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %10340 to i64*
  %10341 = load i64, i64* %PC.i477
  %10342 = add i64 %10341, 1
  store i64 %10342, i64* %PC.i477
  %10343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %10344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10345 = bitcast %union.anon* %10344 to i32*
  %10346 = load i32, i32* %10345, align 8
  %10347 = sext i32 %10346 to i64
  %10348 = lshr i64 %10347, 32
  store i64 %10348, i64* %10343, align 8
  store %struct.Memory* %loadMem_43426d, %struct.Memory** %MEMORY
  %loadMem_43426e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10350 = getelementptr inbounds %struct.GPR, %struct.GPR* %10349, i32 0, i32 33
  %10351 = getelementptr inbounds %struct.Reg, %struct.Reg* %10350, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %10351 to i64*
  %10352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10353 = getelementptr inbounds %struct.GPR, %struct.GPR* %10352, i32 0, i32 9
  %10354 = getelementptr inbounds %struct.Reg, %struct.Reg* %10353, i32 0, i32 0
  %ESI.i472 = bitcast %union.anon* %10354 to i32*
  %10355 = load i32, i32* %ESI.i472
  %10356 = zext i32 %10355 to i64
  %10357 = load i64, i64* %PC.i471
  %10358 = add i64 %10357, 2
  store i64 %10358, i64* %PC.i471
  %10359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10360 = bitcast %union.anon* %10359 to i32*
  %10361 = load i32, i32* %10360, align 8
  %10362 = zext i32 %10361 to i64
  %10363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %10364 = bitcast %union.anon* %10363 to i32*
  %10365 = load i32, i32* %10364, align 8
  %10366 = zext i32 %10365 to i64
  %10367 = shl i64 %10356, 32
  %10368 = ashr exact i64 %10367, 32
  %10369 = shl i64 %10366, 32
  %10370 = or i64 %10369, %10362
  %10371 = sdiv i64 %10370, %10368
  %10372 = shl i64 %10371, 32
  %10373 = ashr exact i64 %10372, 32
  %10374 = icmp eq i64 %10371, %10373
  br i1 %10374, label %10379, label %10375

; <label>:10375:                                  ; preds = %routine_idivl__esi.exit491
  %10376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10377 = load i64, i64* %10376, align 8
  %10378 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %10377, %struct.Memory* %loadMem_43426e)
  br label %routine_idivl__esi.exit473

; <label>:10379:                                  ; preds = %routine_idivl__esi.exit491
  %10380 = srem i64 %10370, %10368
  %10381 = getelementptr inbounds %union.anon, %union.anon* %10359, i64 0, i32 0
  %10382 = and i64 %10371, 4294967295
  store i64 %10382, i64* %10381, align 8
  %10383 = getelementptr inbounds %union.anon, %union.anon* %10363, i64 0, i32 0
  %10384 = and i64 %10380, 4294967295
  store i64 %10384, i64* %10383, align 8
  %10385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10385, align 1
  %10386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %10386, align 1
  %10387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10387, align 1
  %10388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10388, align 1
  %10389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %10389, align 1
  %10390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10390, align 1
  br label %routine_idivl__esi.exit473

routine_idivl__esi.exit473:                       ; preds = %10375, %10379
  %10391 = phi %struct.Memory* [ %10378, %10375 ], [ %loadMem_43426e, %10379 ]
  store %struct.Memory* %10391, %struct.Memory** %MEMORY
  %loadMem_434270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10393 = getelementptr inbounds %struct.GPR, %struct.GPR* %10392, i32 0, i32 33
  %10394 = getelementptr inbounds %struct.Reg, %struct.Reg* %10393, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %10394 to i64*
  %10395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10396 = getelementptr inbounds %struct.GPR, %struct.GPR* %10395, i32 0, i32 5
  %10397 = getelementptr inbounds %struct.Reg, %struct.Reg* %10396, i32 0, i32 0
  %RCX.i469 = bitcast %union.anon* %10397 to i64*
  %10398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10399 = getelementptr inbounds %struct.GPR, %struct.GPR* %10398, i32 0, i32 11
  %10400 = getelementptr inbounds %struct.Reg, %struct.Reg* %10399, i32 0, i32 0
  %RDI.i470 = bitcast %union.anon* %10400 to i64*
  %10401 = load i64, i64* %RCX.i469
  %10402 = load i64, i64* %PC.i468
  %10403 = add i64 %10402, 3
  store i64 %10403, i64* %PC.i468
  store i64 %10401, i64* %RDI.i470, align 8
  store %struct.Memory* %loadMem_434270, %struct.Memory** %MEMORY
  %loadMem_434273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10405 = getelementptr inbounds %struct.GPR, %struct.GPR* %10404, i32 0, i32 33
  %10406 = getelementptr inbounds %struct.Reg, %struct.Reg* %10405, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %10406 to i64*
  %10407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10408 = getelementptr inbounds %struct.GPR, %struct.GPR* %10407, i32 0, i32 9
  %10409 = getelementptr inbounds %struct.Reg, %struct.Reg* %10408, i32 0, i32 0
  %RSI.i466 = bitcast %union.anon* %10409 to i64*
  %10410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10411 = getelementptr inbounds %struct.GPR, %struct.GPR* %10410, i32 0, i32 15
  %10412 = getelementptr inbounds %struct.Reg, %struct.Reg* %10411, i32 0, i32 0
  %RBP.i467 = bitcast %union.anon* %10412 to i64*
  %10413 = load i64, i64* %RBP.i467
  %10414 = sub i64 %10413, 240
  %10415 = load i64, i64* %PC.i465
  %10416 = add i64 %10415, 6
  store i64 %10416, i64* %PC.i465
  %10417 = inttoptr i64 %10414 to i32*
  %10418 = load i32, i32* %10417
  %10419 = zext i32 %10418 to i64
  store i64 %10419, i64* %RSI.i466, align 8
  store %struct.Memory* %loadMem_434273, %struct.Memory** %MEMORY
  %loadMem_434279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10421 = getelementptr inbounds %struct.GPR, %struct.GPR* %10420, i32 0, i32 33
  %10422 = getelementptr inbounds %struct.Reg, %struct.Reg* %10421, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %10422 to i64*
  %10423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10424 = getelementptr inbounds %struct.GPR, %struct.GPR* %10423, i32 0, i32 1
  %10425 = getelementptr inbounds %struct.Reg, %struct.Reg* %10424, i32 0, i32 0
  %EAX.i463 = bitcast %union.anon* %10425 to i32*
  %10426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10427 = getelementptr inbounds %struct.GPR, %struct.GPR* %10426, i32 0, i32 7
  %10428 = getelementptr inbounds %struct.Reg, %struct.Reg* %10427, i32 0, i32 0
  %RDX.i464 = bitcast %union.anon* %10428 to i64*
  %10429 = load i32, i32* %EAX.i463
  %10430 = zext i32 %10429 to i64
  %10431 = load i64, i64* %PC.i462
  %10432 = add i64 %10431, 2
  store i64 %10432, i64* %PC.i462
  %10433 = and i64 %10430, 4294967295
  store i64 %10433, i64* %RDX.i464, align 8
  store %struct.Memory* %loadMem_434279, %struct.Memory** %MEMORY
  %loadMem1_43427b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10435 = getelementptr inbounds %struct.GPR, %struct.GPR* %10434, i32 0, i32 33
  %10436 = getelementptr inbounds %struct.Reg, %struct.Reg* %10435, i32 0, i32 0
  %PC.i461 = bitcast %union.anon* %10436 to i64*
  %10437 = load i64, i64* %PC.i461
  %10438 = add i64 %10437, 152965
  %10439 = load i64, i64* %PC.i461
  %10440 = add i64 %10439, 5
  %10441 = load i64, i64* %PC.i461
  %10442 = add i64 %10441, 5
  store i64 %10442, i64* %PC.i461
  %10443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10444 = load i64, i64* %10443, align 8
  %10445 = add i64 %10444, -8
  %10446 = inttoptr i64 %10445 to i64*
  store i64 %10440, i64* %10446
  store i64 %10445, i64* %10443, align 8
  %10447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10438, i64* %10447, align 8
  store %struct.Memory* %loadMem1_43427b, %struct.Memory** %MEMORY
  %loadMem2_43427b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43427b = load i64, i64* %3
  %call2_43427b = call %struct.Memory* @sub_459800.get_mem2Dint(%struct.State* %0, i64 %loadPC_43427b, %struct.Memory* %loadMem2_43427b)
  store %struct.Memory* %call2_43427b, %struct.Memory** %MEMORY
  %loadMem_434280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10449 = getelementptr inbounds %struct.GPR, %struct.GPR* %10448, i32 0, i32 33
  %10450 = getelementptr inbounds %struct.Reg, %struct.Reg* %10449, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %10450 to i64*
  %10451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10452 = getelementptr inbounds %struct.GPR, %struct.GPR* %10451, i32 0, i32 5
  %10453 = getelementptr inbounds %struct.Reg, %struct.Reg* %10452, i32 0, i32 0
  %RCX.i460 = bitcast %union.anon* %10453 to i64*
  %10454 = load i64, i64* %PC.i459
  %10455 = add i64 %10454, 10
  store i64 %10455, i64* %PC.i459
  store i64 ptrtoint (%G__0x710a60_type* @G__0x710a60 to i64), i64* %RCX.i460, align 8
  store %struct.Memory* %loadMem_434280, %struct.Memory** %MEMORY
  %loadMem_43428a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10457 = getelementptr inbounds %struct.GPR, %struct.GPR* %10456, i32 0, i32 33
  %10458 = getelementptr inbounds %struct.Reg, %struct.Reg* %10457, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %10458 to i64*
  %10459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10460 = getelementptr inbounds %struct.GPR, %struct.GPR* %10459, i32 0, i32 5
  %10461 = getelementptr inbounds %struct.Reg, %struct.Reg* %10460, i32 0, i32 0
  %RCX.i458 = bitcast %union.anon* %10461 to i64*
  %10462 = load i64, i64* %RCX.i458
  %10463 = load i64, i64* %PC.i457
  %10464 = add i64 %10463, 7
  store i64 %10464, i64* %PC.i457
  %10465 = add i64 3136, %10462
  store i64 %10465, i64* %RCX.i458, align 8
  %10466 = icmp ult i64 %10465, %10462
  %10467 = icmp ult i64 %10465, 3136
  %10468 = or i1 %10466, %10467
  %10469 = zext i1 %10468 to i8
  %10470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10469, i8* %10470, align 1
  %10471 = trunc i64 %10465 to i32
  %10472 = and i32 %10471, 255
  %10473 = call i32 @llvm.ctpop.i32(i32 %10472)
  %10474 = trunc i32 %10473 to i8
  %10475 = and i8 %10474, 1
  %10476 = xor i8 %10475, 1
  %10477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10476, i8* %10477, align 1
  %10478 = xor i64 3136, %10462
  %10479 = xor i64 %10478, %10465
  %10480 = lshr i64 %10479, 4
  %10481 = trunc i64 %10480 to i8
  %10482 = and i8 %10481, 1
  %10483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10482, i8* %10483, align 1
  %10484 = icmp eq i64 %10465, 0
  %10485 = zext i1 %10484 to i8
  %10486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10485, i8* %10486, align 1
  %10487 = lshr i64 %10465, 63
  %10488 = trunc i64 %10487 to i8
  %10489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10488, i8* %10489, align 1
  %10490 = lshr i64 %10462, 63
  %10491 = xor i64 %10487, %10490
  %10492 = add i64 %10491, %10487
  %10493 = icmp eq i64 %10492, 2
  %10494 = zext i1 %10493 to i8
  %10495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10494, i8* %10495, align 1
  store %struct.Memory* %loadMem_43428a, %struct.Memory** %MEMORY
  %loadMem_434291 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10497 = getelementptr inbounds %struct.GPR, %struct.GPR* %10496, i32 0, i32 33
  %10498 = getelementptr inbounds %struct.Reg, %struct.Reg* %10497, i32 0, i32 0
  %PC.i455 = bitcast %union.anon* %10498 to i64*
  %10499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10500 = getelementptr inbounds %struct.GPR, %struct.GPR* %10499, i32 0, i32 7
  %10501 = getelementptr inbounds %struct.Reg, %struct.Reg* %10500, i32 0, i32 0
  %RDX.i456 = bitcast %union.anon* %10501 to i64*
  %10502 = load i64, i64* %PC.i455
  %10503 = add i64 %10502, 5
  store i64 %10503, i64* %PC.i455
  store i64 4, i64* %RDX.i456, align 8
  store %struct.Memory* %loadMem_434291, %struct.Memory** %MEMORY
  %loadMem_434296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10505 = getelementptr inbounds %struct.GPR, %struct.GPR* %10504, i32 0, i32 33
  %10506 = getelementptr inbounds %struct.Reg, %struct.Reg* %10505, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %10506 to i64*
  %10507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10508 = getelementptr inbounds %struct.GPR, %struct.GPR* %10507, i32 0, i32 11
  %10509 = getelementptr inbounds %struct.Reg, %struct.Reg* %10508, i32 0, i32 0
  %RDI.i454 = bitcast %union.anon* %10509 to i64*
  %10510 = load i64, i64* %PC.i453
  %10511 = add i64 %10510, 8
  store i64 %10511, i64* %PC.i453
  %10512 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10512, i64* %RDI.i454, align 8
  store %struct.Memory* %loadMem_434296, %struct.Memory** %MEMORY
  %loadMem_43429e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10514 = getelementptr inbounds %struct.GPR, %struct.GPR* %10513, i32 0, i32 33
  %10515 = getelementptr inbounds %struct.Reg, %struct.Reg* %10514, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %10515 to i64*
  %10516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10517 = getelementptr inbounds %struct.GPR, %struct.GPR* %10516, i32 0, i32 9
  %10518 = getelementptr inbounds %struct.Reg, %struct.Reg* %10517, i32 0, i32 0
  %RSI.i451 = bitcast %union.anon* %10518 to i64*
  %10519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10520 = getelementptr inbounds %struct.GPR, %struct.GPR* %10519, i32 0, i32 11
  %10521 = getelementptr inbounds %struct.Reg, %struct.Reg* %10520, i32 0, i32 0
  %RDI.i452 = bitcast %union.anon* %10521 to i64*
  %10522 = load i64, i64* %RDI.i452
  %10523 = add i64 %10522, 52
  %10524 = load i64, i64* %PC.i450
  %10525 = add i64 %10524, 3
  store i64 %10525, i64* %PC.i450
  %10526 = inttoptr i64 %10523 to i32*
  %10527 = load i32, i32* %10526
  %10528 = zext i32 %10527 to i64
  store i64 %10528, i64* %RSI.i451, align 8
  store %struct.Memory* %loadMem_43429e, %struct.Memory** %MEMORY
  %loadMem_4342a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10530 = getelementptr inbounds %struct.GPR, %struct.GPR* %10529, i32 0, i32 33
  %10531 = getelementptr inbounds %struct.Reg, %struct.Reg* %10530, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %10531 to i64*
  %10532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10533 = getelementptr inbounds %struct.GPR, %struct.GPR* %10532, i32 0, i32 1
  %10534 = getelementptr inbounds %struct.Reg, %struct.Reg* %10533, i32 0, i32 0
  %EAX.i448 = bitcast %union.anon* %10534 to i32*
  %10535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10536 = getelementptr inbounds %struct.GPR, %struct.GPR* %10535, i32 0, i32 15
  %10537 = getelementptr inbounds %struct.Reg, %struct.Reg* %10536, i32 0, i32 0
  %RBP.i449 = bitcast %union.anon* %10537 to i64*
  %10538 = load i64, i64* %RBP.i449
  %10539 = sub i64 %10538, 244
  %10540 = load i32, i32* %EAX.i448
  %10541 = zext i32 %10540 to i64
  %10542 = load i64, i64* %PC.i447
  %10543 = add i64 %10542, 6
  store i64 %10543, i64* %PC.i447
  %10544 = inttoptr i64 %10539 to i32*
  store i32 %10540, i32* %10544
  store %struct.Memory* %loadMem_4342a1, %struct.Memory** %MEMORY
  %loadMem_4342a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10546 = getelementptr inbounds %struct.GPR, %struct.GPR* %10545, i32 0, i32 33
  %10547 = getelementptr inbounds %struct.Reg, %struct.Reg* %10546, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %10547 to i64*
  %10548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10549 = getelementptr inbounds %struct.GPR, %struct.GPR* %10548, i32 0, i32 9
  %10550 = getelementptr inbounds %struct.Reg, %struct.Reg* %10549, i32 0, i32 0
  %ESI.i445 = bitcast %union.anon* %10550 to i32*
  %10551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10552 = getelementptr inbounds %struct.GPR, %struct.GPR* %10551, i32 0, i32 1
  %10553 = getelementptr inbounds %struct.Reg, %struct.Reg* %10552, i32 0, i32 0
  %RAX.i446 = bitcast %union.anon* %10553 to i64*
  %10554 = load i32, i32* %ESI.i445
  %10555 = zext i32 %10554 to i64
  %10556 = load i64, i64* %PC.i444
  %10557 = add i64 %10556, 2
  store i64 %10557, i64* %PC.i444
  %10558 = and i64 %10555, 4294967295
  store i64 %10558, i64* %RAX.i446, align 8
  store %struct.Memory* %loadMem_4342a7, %struct.Memory** %MEMORY
  %loadMem_4342a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10560 = getelementptr inbounds %struct.GPR, %struct.GPR* %10559, i32 0, i32 33
  %10561 = getelementptr inbounds %struct.Reg, %struct.Reg* %10560, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %10561 to i64*
  %10562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10563 = getelementptr inbounds %struct.GPR, %struct.GPR* %10562, i32 0, i32 7
  %10564 = getelementptr inbounds %struct.Reg, %struct.Reg* %10563, i32 0, i32 0
  %EDX.i442 = bitcast %union.anon* %10564 to i32*
  %10565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10566 = getelementptr inbounds %struct.GPR, %struct.GPR* %10565, i32 0, i32 15
  %10567 = getelementptr inbounds %struct.Reg, %struct.Reg* %10566, i32 0, i32 0
  %RBP.i443 = bitcast %union.anon* %10567 to i64*
  %10568 = load i64, i64* %RBP.i443
  %10569 = sub i64 %10568, 248
  %10570 = load i32, i32* %EDX.i442
  %10571 = zext i32 %10570 to i64
  %10572 = load i64, i64* %PC.i441
  %10573 = add i64 %10572, 6
  store i64 %10573, i64* %PC.i441
  %10574 = inttoptr i64 %10569 to i32*
  store i32 %10570, i32* %10574
  store %struct.Memory* %loadMem_4342a9, %struct.Memory** %MEMORY
  %loadMem_4342af = load %struct.Memory*, %struct.Memory** %MEMORY
  %10575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10576 = getelementptr inbounds %struct.GPR, %struct.GPR* %10575, i32 0, i32 33
  %10577 = getelementptr inbounds %struct.Reg, %struct.Reg* %10576, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %10577 to i64*
  %10578 = load i64, i64* %PC.i440
  %10579 = add i64 %10578, 1
  store i64 %10579, i64* %PC.i440
  %10580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %10581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10582 = bitcast %union.anon* %10581 to i32*
  %10583 = load i32, i32* %10582, align 8
  %10584 = sext i32 %10583 to i64
  %10585 = lshr i64 %10584, 32
  store i64 %10585, i64* %10580, align 8
  store %struct.Memory* %loadMem_4342af, %struct.Memory** %MEMORY
  %loadMem_4342b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10587 = getelementptr inbounds %struct.GPR, %struct.GPR* %10586, i32 0, i32 33
  %10588 = getelementptr inbounds %struct.Reg, %struct.Reg* %10587, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %10588 to i64*
  %10589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10590 = getelementptr inbounds %struct.GPR, %struct.GPR* %10589, i32 0, i32 9
  %10591 = getelementptr inbounds %struct.Reg, %struct.Reg* %10590, i32 0, i32 0
  %RSI.i438 = bitcast %union.anon* %10591 to i64*
  %10592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10593 = getelementptr inbounds %struct.GPR, %struct.GPR* %10592, i32 0, i32 15
  %10594 = getelementptr inbounds %struct.Reg, %struct.Reg* %10593, i32 0, i32 0
  %RBP.i439 = bitcast %union.anon* %10594 to i64*
  %10595 = load i64, i64* %RBP.i439
  %10596 = sub i64 %10595, 248
  %10597 = load i64, i64* %PC.i437
  %10598 = add i64 %10597, 6
  store i64 %10598, i64* %PC.i437
  %10599 = inttoptr i64 %10596 to i32*
  %10600 = load i32, i32* %10599
  %10601 = zext i32 %10600 to i64
  store i64 %10601, i64* %RSI.i438, align 8
  store %struct.Memory* %loadMem_4342b0, %struct.Memory** %MEMORY
  %loadMem_4342b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10603 = getelementptr inbounds %struct.GPR, %struct.GPR* %10602, i32 0, i32 33
  %10604 = getelementptr inbounds %struct.Reg, %struct.Reg* %10603, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %10604 to i64*
  %10605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10606 = getelementptr inbounds %struct.GPR, %struct.GPR* %10605, i32 0, i32 9
  %10607 = getelementptr inbounds %struct.Reg, %struct.Reg* %10606, i32 0, i32 0
  %ESI.i433 = bitcast %union.anon* %10607 to i32*
  %10608 = load i32, i32* %ESI.i433
  %10609 = zext i32 %10608 to i64
  %10610 = load i64, i64* %PC.i432
  %10611 = add i64 %10610, 2
  store i64 %10611, i64* %PC.i432
  %10612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10613 = bitcast %union.anon* %10612 to i32*
  %10614 = load i32, i32* %10613, align 8
  %10615 = zext i32 %10614 to i64
  %10616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %10617 = bitcast %union.anon* %10616 to i32*
  %10618 = load i32, i32* %10617, align 8
  %10619 = zext i32 %10618 to i64
  %10620 = shl i64 %10609, 32
  %10621 = ashr exact i64 %10620, 32
  %10622 = shl i64 %10619, 32
  %10623 = or i64 %10622, %10615
  %10624 = sdiv i64 %10623, %10621
  %10625 = shl i64 %10624, 32
  %10626 = ashr exact i64 %10625, 32
  %10627 = icmp eq i64 %10624, %10626
  br i1 %10627, label %10632, label %10628

; <label>:10628:                                  ; preds = %routine_idivl__esi.exit473
  %10629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10630 = load i64, i64* %10629, align 8
  %10631 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %10630, %struct.Memory* %loadMem_4342b6)
  br label %routine_idivl__esi.exit434

; <label>:10632:                                  ; preds = %routine_idivl__esi.exit473
  %10633 = srem i64 %10623, %10621
  %10634 = getelementptr inbounds %union.anon, %union.anon* %10612, i64 0, i32 0
  %10635 = and i64 %10624, 4294967295
  store i64 %10635, i64* %10634, align 8
  %10636 = getelementptr inbounds %union.anon, %union.anon* %10616, i64 0, i32 0
  %10637 = and i64 %10633, 4294967295
  store i64 %10637, i64* %10636, align 8
  %10638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10638, align 1
  %10639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %10639, align 1
  %10640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10640, align 1
  %10641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10641, align 1
  %10642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %10642, align 1
  %10643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10643, align 1
  br label %routine_idivl__esi.exit434

routine_idivl__esi.exit434:                       ; preds = %10628, %10632
  %10644 = phi %struct.Memory* [ %10631, %10628 ], [ %loadMem_4342b6, %10632 ]
  store %struct.Memory* %10644, %struct.Memory** %MEMORY
  %loadMem_4342b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10646 = getelementptr inbounds %struct.GPR, %struct.GPR* %10645, i32 0, i32 33
  %10647 = getelementptr inbounds %struct.Reg, %struct.Reg* %10646, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %10647 to i64*
  %10648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10649 = getelementptr inbounds %struct.GPR, %struct.GPR* %10648, i32 0, i32 11
  %10650 = getelementptr inbounds %struct.Reg, %struct.Reg* %10649, i32 0, i32 0
  %RDI.i431 = bitcast %union.anon* %10650 to i64*
  %10651 = load i64, i64* %PC.i430
  %10652 = add i64 %10651, 8
  store i64 %10652, i64* %PC.i430
  %10653 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10653, i64* %RDI.i431, align 8
  store %struct.Memory* %loadMem_4342b8, %struct.Memory** %MEMORY
  %loadMem_4342c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10655 = getelementptr inbounds %struct.GPR, %struct.GPR* %10654, i32 0, i32 33
  %10656 = getelementptr inbounds %struct.Reg, %struct.Reg* %10655, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %10656 to i64*
  %10657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10658 = getelementptr inbounds %struct.GPR, %struct.GPR* %10657, i32 0, i32 17
  %10659 = getelementptr inbounds %struct.Reg, %struct.Reg* %10658, i32 0, i32 0
  %R8D.i428 = bitcast %union.anon* %10659 to i32*
  %10660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10661 = getelementptr inbounds %struct.GPR, %struct.GPR* %10660, i32 0, i32 11
  %10662 = getelementptr inbounds %struct.Reg, %struct.Reg* %10661, i32 0, i32 0
  %RDI.i429 = bitcast %union.anon* %10662 to i64*
  %10663 = bitcast i32* %R8D.i428 to i64*
  %10664 = load i64, i64* %RDI.i429
  %10665 = add i64 %10664, 60
  %10666 = load i64, i64* %PC.i427
  %10667 = add i64 %10666, 4
  store i64 %10667, i64* %PC.i427
  %10668 = inttoptr i64 %10665 to i32*
  %10669 = load i32, i32* %10668
  %10670 = zext i32 %10669 to i64
  store i64 %10670, i64* %10663, align 8
  store %struct.Memory* %loadMem_4342c0, %struct.Memory** %MEMORY
  %loadMem_4342c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10672 = getelementptr inbounds %struct.GPR, %struct.GPR* %10671, i32 0, i32 33
  %10673 = getelementptr inbounds %struct.Reg, %struct.Reg* %10672, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %10673 to i64*
  %10674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10675 = getelementptr inbounds %struct.GPR, %struct.GPR* %10674, i32 0, i32 1
  %10676 = getelementptr inbounds %struct.Reg, %struct.Reg* %10675, i32 0, i32 0
  %EAX.i425 = bitcast %union.anon* %10676 to i32*
  %10677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10678 = getelementptr inbounds %struct.GPR, %struct.GPR* %10677, i32 0, i32 15
  %10679 = getelementptr inbounds %struct.Reg, %struct.Reg* %10678, i32 0, i32 0
  %RBP.i426 = bitcast %union.anon* %10679 to i64*
  %10680 = load i64, i64* %RBP.i426
  %10681 = sub i64 %10680, 252
  %10682 = load i32, i32* %EAX.i425
  %10683 = zext i32 %10682 to i64
  %10684 = load i64, i64* %PC.i424
  %10685 = add i64 %10684, 6
  store i64 %10685, i64* %PC.i424
  %10686 = inttoptr i64 %10681 to i32*
  store i32 %10682, i32* %10686
  store %struct.Memory* %loadMem_4342c4, %struct.Memory** %MEMORY
  %loadMem_4342ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %10687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10688 = getelementptr inbounds %struct.GPR, %struct.GPR* %10687, i32 0, i32 33
  %10689 = getelementptr inbounds %struct.Reg, %struct.Reg* %10688, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %10689 to i64*
  %10690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10691 = getelementptr inbounds %struct.GPR, %struct.GPR* %10690, i32 0, i32 17
  %10692 = getelementptr inbounds %struct.Reg, %struct.Reg* %10691, i32 0, i32 0
  %R8D.i422 = bitcast %union.anon* %10692 to i32*
  %10693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10694 = getelementptr inbounds %struct.GPR, %struct.GPR* %10693, i32 0, i32 1
  %10695 = getelementptr inbounds %struct.Reg, %struct.Reg* %10694, i32 0, i32 0
  %RAX.i423 = bitcast %union.anon* %10695 to i64*
  %10696 = load i32, i32* %R8D.i422
  %10697 = zext i32 %10696 to i64
  %10698 = load i64, i64* %PC.i421
  %10699 = add i64 %10698, 3
  store i64 %10699, i64* %PC.i421
  %10700 = and i64 %10697, 4294967295
  store i64 %10700, i64* %RAX.i423, align 8
  store %struct.Memory* %loadMem_4342ca, %struct.Memory** %MEMORY
  %loadMem_4342cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10702 = getelementptr inbounds %struct.GPR, %struct.GPR* %10701, i32 0, i32 33
  %10703 = getelementptr inbounds %struct.Reg, %struct.Reg* %10702, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %10703 to i64*
  %10704 = load i64, i64* %PC.i420
  %10705 = add i64 %10704, 1
  store i64 %10705, i64* %PC.i420
  %10706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %10707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10708 = bitcast %union.anon* %10707 to i32*
  %10709 = load i32, i32* %10708, align 8
  %10710 = sext i32 %10709 to i64
  %10711 = lshr i64 %10710, 32
  store i64 %10711, i64* %10706, align 8
  store %struct.Memory* %loadMem_4342cd, %struct.Memory** %MEMORY
  %loadMem_4342ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %10712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10713 = getelementptr inbounds %struct.GPR, %struct.GPR* %10712, i32 0, i32 33
  %10714 = getelementptr inbounds %struct.Reg, %struct.Reg* %10713, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %10714 to i64*
  %10715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10716 = getelementptr inbounds %struct.GPR, %struct.GPR* %10715, i32 0, i32 9
  %10717 = getelementptr inbounds %struct.Reg, %struct.Reg* %10716, i32 0, i32 0
  %ESI.i415 = bitcast %union.anon* %10717 to i32*
  %10718 = load i32, i32* %ESI.i415
  %10719 = zext i32 %10718 to i64
  %10720 = load i64, i64* %PC.i414
  %10721 = add i64 %10720, 2
  store i64 %10721, i64* %PC.i414
  %10722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10723 = bitcast %union.anon* %10722 to i32*
  %10724 = load i32, i32* %10723, align 8
  %10725 = zext i32 %10724 to i64
  %10726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %10727 = bitcast %union.anon* %10726 to i32*
  %10728 = load i32, i32* %10727, align 8
  %10729 = zext i32 %10728 to i64
  %10730 = shl i64 %10719, 32
  %10731 = ashr exact i64 %10730, 32
  %10732 = shl i64 %10729, 32
  %10733 = or i64 %10732, %10725
  %10734 = sdiv i64 %10733, %10731
  %10735 = shl i64 %10734, 32
  %10736 = ashr exact i64 %10735, 32
  %10737 = icmp eq i64 %10734, %10736
  br i1 %10737, label %10742, label %10738

; <label>:10738:                                  ; preds = %routine_idivl__esi.exit434
  %10739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10740 = load i64, i64* %10739, align 8
  %10741 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %10740, %struct.Memory* %loadMem_4342ce)
  br label %routine_idivl__esi.exit416

; <label>:10742:                                  ; preds = %routine_idivl__esi.exit434
  %10743 = srem i64 %10733, %10731
  %10744 = getelementptr inbounds %union.anon, %union.anon* %10722, i64 0, i32 0
  %10745 = and i64 %10734, 4294967295
  store i64 %10745, i64* %10744, align 8
  %10746 = getelementptr inbounds %union.anon, %union.anon* %10726, i64 0, i32 0
  %10747 = and i64 %10743, 4294967295
  store i64 %10747, i64* %10746, align 8
  %10748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10748, align 1
  %10749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %10749, align 1
  %10750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10750, align 1
  %10751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10751, align 1
  %10752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %10752, align 1
  %10753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10753, align 1
  br label %routine_idivl__esi.exit416

routine_idivl__esi.exit416:                       ; preds = %10738, %10742
  %10754 = phi %struct.Memory* [ %10741, %10738 ], [ %loadMem_4342ce, %10742 ]
  store %struct.Memory* %10754, %struct.Memory** %MEMORY
  %loadMem_4342d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10756 = getelementptr inbounds %struct.GPR, %struct.GPR* %10755, i32 0, i32 33
  %10757 = getelementptr inbounds %struct.Reg, %struct.Reg* %10756, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %10757 to i64*
  %10758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10759 = getelementptr inbounds %struct.GPR, %struct.GPR* %10758, i32 0, i32 5
  %10760 = getelementptr inbounds %struct.Reg, %struct.Reg* %10759, i32 0, i32 0
  %RCX.i412 = bitcast %union.anon* %10760 to i64*
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10762 = getelementptr inbounds %struct.GPR, %struct.GPR* %10761, i32 0, i32 11
  %10763 = getelementptr inbounds %struct.Reg, %struct.Reg* %10762, i32 0, i32 0
  %RDI.i413 = bitcast %union.anon* %10763 to i64*
  %10764 = load i64, i64* %RCX.i412
  %10765 = load i64, i64* %PC.i411
  %10766 = add i64 %10765, 3
  store i64 %10766, i64* %PC.i411
  store i64 %10764, i64* %RDI.i413, align 8
  store %struct.Memory* %loadMem_4342d0, %struct.Memory** %MEMORY
  %loadMem_4342d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10768 = getelementptr inbounds %struct.GPR, %struct.GPR* %10767, i32 0, i32 33
  %10769 = getelementptr inbounds %struct.Reg, %struct.Reg* %10768, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %10769 to i64*
  %10770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10771 = getelementptr inbounds %struct.GPR, %struct.GPR* %10770, i32 0, i32 9
  %10772 = getelementptr inbounds %struct.Reg, %struct.Reg* %10771, i32 0, i32 0
  %RSI.i409 = bitcast %union.anon* %10772 to i64*
  %10773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10774 = getelementptr inbounds %struct.GPR, %struct.GPR* %10773, i32 0, i32 15
  %10775 = getelementptr inbounds %struct.Reg, %struct.Reg* %10774, i32 0, i32 0
  %RBP.i410 = bitcast %union.anon* %10775 to i64*
  %10776 = load i64, i64* %RBP.i410
  %10777 = sub i64 %10776, 252
  %10778 = load i64, i64* %PC.i408
  %10779 = add i64 %10778, 6
  store i64 %10779, i64* %PC.i408
  %10780 = inttoptr i64 %10777 to i32*
  %10781 = load i32, i32* %10780
  %10782 = zext i32 %10781 to i64
  store i64 %10782, i64* %RSI.i409, align 8
  store %struct.Memory* %loadMem_4342d3, %struct.Memory** %MEMORY
  %loadMem_4342d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10784 = getelementptr inbounds %struct.GPR, %struct.GPR* %10783, i32 0, i32 33
  %10785 = getelementptr inbounds %struct.Reg, %struct.Reg* %10784, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %10785 to i64*
  %10786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10787 = getelementptr inbounds %struct.GPR, %struct.GPR* %10786, i32 0, i32 1
  %10788 = getelementptr inbounds %struct.Reg, %struct.Reg* %10787, i32 0, i32 0
  %EAX.i406 = bitcast %union.anon* %10788 to i32*
  %10789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10790 = getelementptr inbounds %struct.GPR, %struct.GPR* %10789, i32 0, i32 7
  %10791 = getelementptr inbounds %struct.Reg, %struct.Reg* %10790, i32 0, i32 0
  %RDX.i407 = bitcast %union.anon* %10791 to i64*
  %10792 = load i32, i32* %EAX.i406
  %10793 = zext i32 %10792 to i64
  %10794 = load i64, i64* %PC.i405
  %10795 = add i64 %10794, 2
  store i64 %10795, i64* %PC.i405
  %10796 = and i64 %10793, 4294967295
  store i64 %10796, i64* %RDX.i407, align 8
  store %struct.Memory* %loadMem_4342d9, %struct.Memory** %MEMORY
  %loadMem1_4342db = load %struct.Memory*, %struct.Memory** %MEMORY
  %10797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10798 = getelementptr inbounds %struct.GPR, %struct.GPR* %10797, i32 0, i32 33
  %10799 = getelementptr inbounds %struct.Reg, %struct.Reg* %10798, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %10799 to i64*
  %10800 = load i64, i64* %PC.i404
  %10801 = add i64 %10800, 152869
  %10802 = load i64, i64* %PC.i404
  %10803 = add i64 %10802, 5
  %10804 = load i64, i64* %PC.i404
  %10805 = add i64 %10804, 5
  store i64 %10805, i64* %PC.i404
  %10806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10807 = load i64, i64* %10806, align 8
  %10808 = add i64 %10807, -8
  %10809 = inttoptr i64 %10808 to i64*
  store i64 %10803, i64* %10809
  store i64 %10808, i64* %10806, align 8
  %10810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10801, i64* %10810, align 8
  store %struct.Memory* %loadMem1_4342db, %struct.Memory** %MEMORY
  %loadMem2_4342db = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4342db = load i64, i64* %3
  %call2_4342db = call %struct.Memory* @sub_459800.get_mem2Dint(%struct.State* %0, i64 %loadPC_4342db, %struct.Memory* %loadMem2_4342db)
  store %struct.Memory* %call2_4342db, %struct.Memory** %MEMORY
  %loadMem_4342e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10812 = getelementptr inbounds %struct.GPR, %struct.GPR* %10811, i32 0, i32 33
  %10813 = getelementptr inbounds %struct.Reg, %struct.Reg* %10812, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %10813 to i64*
  %10814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10815 = getelementptr inbounds %struct.GPR, %struct.GPR* %10814, i32 0, i32 5
  %10816 = getelementptr inbounds %struct.Reg, %struct.Reg* %10815, i32 0, i32 0
  %RCX.i403 = bitcast %union.anon* %10816 to i64*
  %10817 = load i64, i64* %PC.i402
  %10818 = add i64 %10817, 8
  store i64 %10818, i64* %PC.i402
  %10819 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %10819, i64* %RCX.i403, align 8
  store %struct.Memory* %loadMem_4342e0, %struct.Memory** %MEMORY
  %loadMem_4342e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10821 = getelementptr inbounds %struct.GPR, %struct.GPR* %10820, i32 0, i32 33
  %10822 = getelementptr inbounds %struct.Reg, %struct.Reg* %10821, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %10822 to i64*
  %10823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10824 = getelementptr inbounds %struct.GPR, %struct.GPR* %10823, i32 0, i32 5
  %10825 = getelementptr inbounds %struct.Reg, %struct.Reg* %10824, i32 0, i32 0
  %RCX.i401 = bitcast %union.anon* %10825 to i64*
  %10826 = load i64, i64* %RCX.i401
  %10827 = add i64 %10826, 2884
  %10828 = load i64, i64* %PC.i400
  %10829 = add i64 %10828, 7
  store i64 %10829, i64* %PC.i400
  %10830 = inttoptr i64 %10827 to i32*
  %10831 = load i32, i32* %10830
  %10832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10832, align 1
  %10833 = and i32 %10831, 255
  %10834 = call i32 @llvm.ctpop.i32(i32 %10833)
  %10835 = trunc i32 %10834 to i8
  %10836 = and i8 %10835, 1
  %10837 = xor i8 %10836, 1
  %10838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10837, i8* %10838, align 1
  %10839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10839, align 1
  %10840 = icmp eq i32 %10831, 0
  %10841 = zext i1 %10840 to i8
  %10842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10841, i8* %10842, align 1
  %10843 = lshr i32 %10831, 31
  %10844 = trunc i32 %10843 to i8
  %10845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10844, i8* %10845, align 1
  %10846 = lshr i32 %10831, 31
  %10847 = xor i32 %10843, %10846
  %10848 = add i32 %10847, %10846
  %10849 = icmp eq i32 %10848, 2
  %10850 = zext i1 %10849 to i8
  %10851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10850, i8* %10851, align 1
  store %struct.Memory* %loadMem_4342e8, %struct.Memory** %MEMORY
  %loadMem_4342ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %10852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10853 = getelementptr inbounds %struct.GPR, %struct.GPR* %10852, i32 0, i32 33
  %10854 = getelementptr inbounds %struct.Reg, %struct.Reg* %10853, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %10854 to i64*
  %10855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10856 = getelementptr inbounds %struct.GPR, %struct.GPR* %10855, i32 0, i32 1
  %10857 = getelementptr inbounds %struct.Reg, %struct.Reg* %10856, i32 0, i32 0
  %EAX.i398 = bitcast %union.anon* %10857 to i32*
  %10858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10859 = getelementptr inbounds %struct.GPR, %struct.GPR* %10858, i32 0, i32 15
  %10860 = getelementptr inbounds %struct.Reg, %struct.Reg* %10859, i32 0, i32 0
  %RBP.i399 = bitcast %union.anon* %10860 to i64*
  %10861 = load i64, i64* %RBP.i399
  %10862 = sub i64 %10861, 256
  %10863 = load i32, i32* %EAX.i398
  %10864 = zext i32 %10863 to i64
  %10865 = load i64, i64* %PC.i397
  %10866 = add i64 %10865, 6
  store i64 %10866, i64* %PC.i397
  %10867 = inttoptr i64 %10862 to i32*
  store i32 %10863, i32* %10867
  store %struct.Memory* %loadMem_4342ef, %struct.Memory** %MEMORY
  %loadMem_4342f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10869 = getelementptr inbounds %struct.GPR, %struct.GPR* %10868, i32 0, i32 33
  %10870 = getelementptr inbounds %struct.Reg, %struct.Reg* %10869, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %10870 to i64*
  %10871 = load i64, i64* %PC.i396
  %10872 = add i64 %10871, 260
  %10873 = load i64, i64* %PC.i396
  %10874 = add i64 %10873, 6
  %10875 = load i64, i64* %PC.i396
  %10876 = add i64 %10875, 6
  store i64 %10876, i64* %PC.i396
  %10877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10878 = load i8, i8* %10877, align 1
  store i8 %10878, i8* %BRANCH_TAKEN, align 1
  %10879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10880 = icmp ne i8 %10878, 0
  %10881 = select i1 %10880, i64 %10872, i64 %10874
  store i64 %10881, i64* %10879, align 8
  store %struct.Memory* %loadMem_4342f5, %struct.Memory** %MEMORY
  %loadBr_4342f5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4342f5 = icmp eq i8 %loadBr_4342f5, 1
  br i1 %cmpBr_4342f5, label %block_.L_4343f9, label %block_4342fb

block_4342fb:                                     ; preds = %routine_idivl__esi.exit416
  %loadMem_4342fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10883 = getelementptr inbounds %struct.GPR, %struct.GPR* %10882, i32 0, i32 33
  %10884 = getelementptr inbounds %struct.Reg, %struct.Reg* %10883, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %10884 to i64*
  %10885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10886 = getelementptr inbounds %struct.GPR, %struct.GPR* %10885, i32 0, i32 1
  %10887 = getelementptr inbounds %struct.Reg, %struct.Reg* %10886, i32 0, i32 0
  %RAX.i395 = bitcast %union.anon* %10887 to i64*
  %10888 = load i64, i64* %PC.i394
  %10889 = add i64 %10888, 10
  store i64 %10889, i64* %PC.i394
  store i64 ptrtoint (%G__0x6cd878_type* @G__0x6cd878 to i64), i64* %RAX.i395, align 8
  store %struct.Memory* %loadMem_4342fb, %struct.Memory** %MEMORY
  %loadMem_434305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10891 = getelementptr inbounds %struct.GPR, %struct.GPR* %10890, i32 0, i32 33
  %10892 = getelementptr inbounds %struct.Reg, %struct.Reg* %10891, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %10892 to i64*
  %10893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10894 = getelementptr inbounds %struct.GPR, %struct.GPR* %10893, i32 0, i32 1
  %10895 = getelementptr inbounds %struct.Reg, %struct.Reg* %10894, i32 0, i32 0
  %RAX.i393 = bitcast %union.anon* %10895 to i64*
  %10896 = load i64, i64* %RAX.i393
  %10897 = load i64, i64* %PC.i392
  %10898 = add i64 %10897, 6
  store i64 %10898, i64* %PC.i392
  %10899 = add i64 3136, %10896
  store i64 %10899, i64* %RAX.i393, align 8
  %10900 = icmp ult i64 %10899, %10896
  %10901 = icmp ult i64 %10899, 3136
  %10902 = or i1 %10900, %10901
  %10903 = zext i1 %10902 to i8
  %10904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10903, i8* %10904, align 1
  %10905 = trunc i64 %10899 to i32
  %10906 = and i32 %10905, 255
  %10907 = call i32 @llvm.ctpop.i32(i32 %10906)
  %10908 = trunc i32 %10907 to i8
  %10909 = and i8 %10908, 1
  %10910 = xor i8 %10909, 1
  %10911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10910, i8* %10911, align 1
  %10912 = xor i64 3136, %10896
  %10913 = xor i64 %10912, %10899
  %10914 = lshr i64 %10913, 4
  %10915 = trunc i64 %10914 to i8
  %10916 = and i8 %10915, 1
  %10917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10916, i8* %10917, align 1
  %10918 = icmp eq i64 %10899, 0
  %10919 = zext i1 %10918 to i8
  %10920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10919, i8* %10920, align 1
  %10921 = lshr i64 %10899, 63
  %10922 = trunc i64 %10921 to i8
  %10923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10922, i8* %10923, align 1
  %10924 = lshr i64 %10896, 63
  %10925 = xor i64 %10921, %10924
  %10926 = add i64 %10925, %10921
  %10927 = icmp eq i64 %10926, 2
  %10928 = zext i1 %10927 to i8
  %10929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10928, i8* %10929, align 1
  store %struct.Memory* %loadMem_434305, %struct.Memory** %MEMORY
  %loadMem_43430b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10931 = getelementptr inbounds %struct.GPR, %struct.GPR* %10930, i32 0, i32 33
  %10932 = getelementptr inbounds %struct.Reg, %struct.Reg* %10931, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %10932 to i64*
  %10933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10934 = getelementptr inbounds %struct.GPR, %struct.GPR* %10933, i32 0, i32 5
  %10935 = getelementptr inbounds %struct.Reg, %struct.Reg* %10934, i32 0, i32 0
  %RCX.i391 = bitcast %union.anon* %10935 to i64*
  %10936 = load i64, i64* %PC.i390
  %10937 = add i64 %10936, 5
  store i64 %10937, i64* %PC.i390
  store i64 4, i64* %RCX.i391, align 8
  store %struct.Memory* %loadMem_43430b, %struct.Memory** %MEMORY
  %loadMem_434310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10939 = getelementptr inbounds %struct.GPR, %struct.GPR* %10938, i32 0, i32 33
  %10940 = getelementptr inbounds %struct.Reg, %struct.Reg* %10939, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %10940 to i64*
  %10941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10942 = getelementptr inbounds %struct.GPR, %struct.GPR* %10941, i32 0, i32 7
  %10943 = getelementptr inbounds %struct.Reg, %struct.Reg* %10942, i32 0, i32 0
  %RDX.i389 = bitcast %union.anon* %10943 to i64*
  %10944 = load i64, i64* %PC.i388
  %10945 = add i64 %10944, 8
  store i64 %10945, i64* %PC.i388
  %10946 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10946, i64* %RDX.i389, align 8
  store %struct.Memory* %loadMem_434310, %struct.Memory** %MEMORY
  %loadMem_434318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10948 = getelementptr inbounds %struct.GPR, %struct.GPR* %10947, i32 0, i32 33
  %10949 = getelementptr inbounds %struct.Reg, %struct.Reg* %10948, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %10949 to i64*
  %10950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10951 = getelementptr inbounds %struct.GPR, %struct.GPR* %10950, i32 0, i32 7
  %10952 = getelementptr inbounds %struct.Reg, %struct.Reg* %10951, i32 0, i32 0
  %RDX.i386 = bitcast %union.anon* %10952 to i64*
  %10953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10954 = getelementptr inbounds %struct.GPR, %struct.GPR* %10953, i32 0, i32 9
  %10955 = getelementptr inbounds %struct.Reg, %struct.Reg* %10954, i32 0, i32 0
  %RSI.i387 = bitcast %union.anon* %10955 to i64*
  %10956 = load i64, i64* %RDX.i386
  %10957 = add i64 %10956, 52
  %10958 = load i64, i64* %PC.i385
  %10959 = add i64 %10958, 3
  store i64 %10959, i64* %PC.i385
  %10960 = inttoptr i64 %10957 to i32*
  %10961 = load i32, i32* %10960
  %10962 = zext i32 %10961 to i64
  store i64 %10962, i64* %RSI.i387, align 8
  store %struct.Memory* %loadMem_434318, %struct.Memory** %MEMORY
  %loadMem_43431b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10964 = getelementptr inbounds %struct.GPR, %struct.GPR* %10963, i32 0, i32 33
  %10965 = getelementptr inbounds %struct.Reg, %struct.Reg* %10964, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %10965 to i64*
  %10966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10967 = getelementptr inbounds %struct.GPR, %struct.GPR* %10966, i32 0, i32 1
  %10968 = getelementptr inbounds %struct.Reg, %struct.Reg* %10967, i32 0, i32 0
  %RAX.i383 = bitcast %union.anon* %10968 to i64*
  %10969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10970 = getelementptr inbounds %struct.GPR, %struct.GPR* %10969, i32 0, i32 15
  %10971 = getelementptr inbounds %struct.Reg, %struct.Reg* %10970, i32 0, i32 0
  %RBP.i384 = bitcast %union.anon* %10971 to i64*
  %10972 = load i64, i64* %RBP.i384
  %10973 = sub i64 %10972, 264
  %10974 = load i64, i64* %RAX.i383
  %10975 = load i64, i64* %PC.i382
  %10976 = add i64 %10975, 7
  store i64 %10976, i64* %PC.i382
  %10977 = inttoptr i64 %10973 to i64*
  store i64 %10974, i64* %10977
  store %struct.Memory* %loadMem_43431b, %struct.Memory** %MEMORY
  %loadMem_434322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10979 = getelementptr inbounds %struct.GPR, %struct.GPR* %10978, i32 0, i32 33
  %10980 = getelementptr inbounds %struct.Reg, %struct.Reg* %10979, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %10980 to i64*
  %10981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10982 = getelementptr inbounds %struct.GPR, %struct.GPR* %10981, i32 0, i32 9
  %10983 = getelementptr inbounds %struct.Reg, %struct.Reg* %10982, i32 0, i32 0
  %ESI.i380 = bitcast %union.anon* %10983 to i32*
  %10984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10985 = getelementptr inbounds %struct.GPR, %struct.GPR* %10984, i32 0, i32 1
  %10986 = getelementptr inbounds %struct.Reg, %struct.Reg* %10985, i32 0, i32 0
  %RAX.i381 = bitcast %union.anon* %10986 to i64*
  %10987 = load i32, i32* %ESI.i380
  %10988 = zext i32 %10987 to i64
  %10989 = load i64, i64* %PC.i379
  %10990 = add i64 %10989, 2
  store i64 %10990, i64* %PC.i379
  %10991 = and i64 %10988, 4294967295
  store i64 %10991, i64* %RAX.i381, align 8
  store %struct.Memory* %loadMem_434322, %struct.Memory** %MEMORY
  %loadMem_434324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10993 = getelementptr inbounds %struct.GPR, %struct.GPR* %10992, i32 0, i32 33
  %10994 = getelementptr inbounds %struct.Reg, %struct.Reg* %10993, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %10994 to i64*
  %10995 = load i64, i64* %PC.i378
  %10996 = add i64 %10995, 1
  store i64 %10996, i64* %PC.i378
  %10997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %10998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10999 = bitcast %union.anon* %10998 to i32*
  %11000 = load i32, i32* %10999, align 8
  %11001 = sext i32 %11000 to i64
  %11002 = lshr i64 %11001, 32
  store i64 %11002, i64* %10997, align 8
  store %struct.Memory* %loadMem_434324, %struct.Memory** %MEMORY
  %loadMem_434325 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11004 = getelementptr inbounds %struct.GPR, %struct.GPR* %11003, i32 0, i32 33
  %11005 = getelementptr inbounds %struct.Reg, %struct.Reg* %11004, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %11005 to i64*
  %11006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11007 = getelementptr inbounds %struct.GPR, %struct.GPR* %11006, i32 0, i32 5
  %11008 = getelementptr inbounds %struct.Reg, %struct.Reg* %11007, i32 0, i32 0
  %ECX.i374 = bitcast %union.anon* %11008 to i32*
  %11009 = load i32, i32* %ECX.i374
  %11010 = zext i32 %11009 to i64
  %11011 = load i64, i64* %PC.i373
  %11012 = add i64 %11011, 2
  store i64 %11012, i64* %PC.i373
  %11013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11014 = bitcast %union.anon* %11013 to i32*
  %11015 = load i32, i32* %11014, align 8
  %11016 = zext i32 %11015 to i64
  %11017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %11018 = bitcast %union.anon* %11017 to i32*
  %11019 = load i32, i32* %11018, align 8
  %11020 = zext i32 %11019 to i64
  %11021 = shl i64 %11010, 32
  %11022 = ashr exact i64 %11021, 32
  %11023 = shl i64 %11020, 32
  %11024 = or i64 %11023, %11016
  %11025 = sdiv i64 %11024, %11022
  %11026 = shl i64 %11025, 32
  %11027 = ashr exact i64 %11026, 32
  %11028 = icmp eq i64 %11025, %11027
  br i1 %11028, label %11033, label %11029

; <label>:11029:                                  ; preds = %block_4342fb
  %11030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11031 = load i64, i64* %11030, align 8
  %11032 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11031, %struct.Memory* %loadMem_434325)
  br label %routine_idivl__ecx.exit375

; <label>:11033:                                  ; preds = %block_4342fb
  %11034 = srem i64 %11024, %11022
  %11035 = getelementptr inbounds %union.anon, %union.anon* %11013, i64 0, i32 0
  %11036 = and i64 %11025, 4294967295
  store i64 %11036, i64* %11035, align 8
  %11037 = getelementptr inbounds %union.anon, %union.anon* %11017, i64 0, i32 0
  %11038 = and i64 %11034, 4294967295
  store i64 %11038, i64* %11037, align 8
  %11039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11039, align 1
  %11040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %11040, align 1
  %11041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11041, align 1
  %11042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11042, align 1
  %11043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11043, align 1
  %11044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11044, align 1
  br label %routine_idivl__ecx.exit375

routine_idivl__ecx.exit375:                       ; preds = %11029, %11033
  %11045 = phi %struct.Memory* [ %11032, %11029 ], [ %loadMem_434325, %11033 ]
  store %struct.Memory* %11045, %struct.Memory** %MEMORY
  %loadMem_434327 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11047 = getelementptr inbounds %struct.GPR, %struct.GPR* %11046, i32 0, i32 33
  %11048 = getelementptr inbounds %struct.Reg, %struct.Reg* %11047, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %11048 to i64*
  %11049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11050 = getelementptr inbounds %struct.GPR, %struct.GPR* %11049, i32 0, i32 11
  %11051 = getelementptr inbounds %struct.Reg, %struct.Reg* %11050, i32 0, i32 0
  %RDI.i372 = bitcast %union.anon* %11051 to i64*
  %11052 = load i64, i64* %PC.i371
  %11053 = add i64 %11052, 8
  store i64 %11053, i64* %PC.i371
  %11054 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11054, i64* %RDI.i372, align 8
  store %struct.Memory* %loadMem_434327, %struct.Memory** %MEMORY
  %loadMem_43432f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11056 = getelementptr inbounds %struct.GPR, %struct.GPR* %11055, i32 0, i32 33
  %11057 = getelementptr inbounds %struct.Reg, %struct.Reg* %11056, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %11057 to i64*
  %11058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11059 = getelementptr inbounds %struct.GPR, %struct.GPR* %11058, i32 0, i32 9
  %11060 = getelementptr inbounds %struct.Reg, %struct.Reg* %11059, i32 0, i32 0
  %RSI.i369 = bitcast %union.anon* %11060 to i64*
  %11061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11062 = getelementptr inbounds %struct.GPR, %struct.GPR* %11061, i32 0, i32 11
  %11063 = getelementptr inbounds %struct.Reg, %struct.Reg* %11062, i32 0, i32 0
  %RDI.i370 = bitcast %union.anon* %11063 to i64*
  %11064 = load i64, i64* %RDI.i370
  %11065 = add i64 %11064, 60
  %11066 = load i64, i64* %PC.i368
  %11067 = add i64 %11066, 3
  store i64 %11067, i64* %PC.i368
  %11068 = inttoptr i64 %11065 to i32*
  %11069 = load i32, i32* %11068
  %11070 = zext i32 %11069 to i64
  store i64 %11070, i64* %RSI.i369, align 8
  store %struct.Memory* %loadMem_43432f, %struct.Memory** %MEMORY
  %loadMem_434332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11072 = getelementptr inbounds %struct.GPR, %struct.GPR* %11071, i32 0, i32 33
  %11073 = getelementptr inbounds %struct.Reg, %struct.Reg* %11072, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %11073 to i64*
  %11074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11075 = getelementptr inbounds %struct.GPR, %struct.GPR* %11074, i32 0, i32 1
  %11076 = getelementptr inbounds %struct.Reg, %struct.Reg* %11075, i32 0, i32 0
  %EAX.i366 = bitcast %union.anon* %11076 to i32*
  %11077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11078 = getelementptr inbounds %struct.GPR, %struct.GPR* %11077, i32 0, i32 15
  %11079 = getelementptr inbounds %struct.Reg, %struct.Reg* %11078, i32 0, i32 0
  %RBP.i367 = bitcast %union.anon* %11079 to i64*
  %11080 = load i64, i64* %RBP.i367
  %11081 = sub i64 %11080, 268
  %11082 = load i32, i32* %EAX.i366
  %11083 = zext i32 %11082 to i64
  %11084 = load i64, i64* %PC.i365
  %11085 = add i64 %11084, 6
  store i64 %11085, i64* %PC.i365
  %11086 = inttoptr i64 %11081 to i32*
  store i32 %11082, i32* %11086
  store %struct.Memory* %loadMem_434332, %struct.Memory** %MEMORY
  %loadMem_434338 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11088 = getelementptr inbounds %struct.GPR, %struct.GPR* %11087, i32 0, i32 33
  %11089 = getelementptr inbounds %struct.Reg, %struct.Reg* %11088, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %11089 to i64*
  %11090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11091 = getelementptr inbounds %struct.GPR, %struct.GPR* %11090, i32 0, i32 9
  %11092 = getelementptr inbounds %struct.Reg, %struct.Reg* %11091, i32 0, i32 0
  %ESI.i363 = bitcast %union.anon* %11092 to i32*
  %11093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11094 = getelementptr inbounds %struct.GPR, %struct.GPR* %11093, i32 0, i32 1
  %11095 = getelementptr inbounds %struct.Reg, %struct.Reg* %11094, i32 0, i32 0
  %RAX.i364 = bitcast %union.anon* %11095 to i64*
  %11096 = load i32, i32* %ESI.i363
  %11097 = zext i32 %11096 to i64
  %11098 = load i64, i64* %PC.i362
  %11099 = add i64 %11098, 2
  store i64 %11099, i64* %PC.i362
  %11100 = and i64 %11097, 4294967295
  store i64 %11100, i64* %RAX.i364, align 8
  store %struct.Memory* %loadMem_434338, %struct.Memory** %MEMORY
  %loadMem_43433a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11102 = getelementptr inbounds %struct.GPR, %struct.GPR* %11101, i32 0, i32 33
  %11103 = getelementptr inbounds %struct.Reg, %struct.Reg* %11102, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %11103 to i64*
  %11104 = load i64, i64* %PC.i361
  %11105 = add i64 %11104, 1
  store i64 %11105, i64* %PC.i361
  %11106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %11107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11108 = bitcast %union.anon* %11107 to i32*
  %11109 = load i32, i32* %11108, align 8
  %11110 = sext i32 %11109 to i64
  %11111 = lshr i64 %11110, 32
  store i64 %11111, i64* %11106, align 8
  store %struct.Memory* %loadMem_43433a, %struct.Memory** %MEMORY
  %loadMem_43433b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11113 = getelementptr inbounds %struct.GPR, %struct.GPR* %11112, i32 0, i32 33
  %11114 = getelementptr inbounds %struct.Reg, %struct.Reg* %11113, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %11114 to i64*
  %11115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11116 = getelementptr inbounds %struct.GPR, %struct.GPR* %11115, i32 0, i32 5
  %11117 = getelementptr inbounds %struct.Reg, %struct.Reg* %11116, i32 0, i32 0
  %ECX.i356 = bitcast %union.anon* %11117 to i32*
  %11118 = load i32, i32* %ECX.i356
  %11119 = zext i32 %11118 to i64
  %11120 = load i64, i64* %PC.i355
  %11121 = add i64 %11120, 2
  store i64 %11121, i64* %PC.i355
  %11122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11123 = bitcast %union.anon* %11122 to i32*
  %11124 = load i32, i32* %11123, align 8
  %11125 = zext i32 %11124 to i64
  %11126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %11127 = bitcast %union.anon* %11126 to i32*
  %11128 = load i32, i32* %11127, align 8
  %11129 = zext i32 %11128 to i64
  %11130 = shl i64 %11119, 32
  %11131 = ashr exact i64 %11130, 32
  %11132 = shl i64 %11129, 32
  %11133 = or i64 %11132, %11125
  %11134 = sdiv i64 %11133, %11131
  %11135 = shl i64 %11134, 32
  %11136 = ashr exact i64 %11135, 32
  %11137 = icmp eq i64 %11134, %11136
  br i1 %11137, label %11142, label %11138

; <label>:11138:                                  ; preds = %routine_idivl__ecx.exit375
  %11139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11140 = load i64, i64* %11139, align 8
  %11141 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11140, %struct.Memory* %loadMem_43433b)
  br label %routine_idivl__ecx.exit357

; <label>:11142:                                  ; preds = %routine_idivl__ecx.exit375
  %11143 = srem i64 %11133, %11131
  %11144 = getelementptr inbounds %union.anon, %union.anon* %11122, i64 0, i32 0
  %11145 = and i64 %11134, 4294967295
  store i64 %11145, i64* %11144, align 8
  %11146 = getelementptr inbounds %union.anon, %union.anon* %11126, i64 0, i32 0
  %11147 = and i64 %11143, 4294967295
  store i64 %11147, i64* %11146, align 8
  %11148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11148, align 1
  %11149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %11149, align 1
  %11150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11150, align 1
  %11151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11151, align 1
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11152, align 1
  %11153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11153, align 1
  br label %routine_idivl__ecx.exit357

routine_idivl__ecx.exit357:                       ; preds = %11138, %11142
  %11154 = phi %struct.Memory* [ %11141, %11138 ], [ %loadMem_43433b, %11142 ]
  store %struct.Memory* %11154, %struct.Memory** %MEMORY
  %loadMem_43433d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11156 = getelementptr inbounds %struct.GPR, %struct.GPR* %11155, i32 0, i32 33
  %11157 = getelementptr inbounds %struct.Reg, %struct.Reg* %11156, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %11157 to i64*
  %11158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11159 = getelementptr inbounds %struct.GPR, %struct.GPR* %11158, i32 0, i32 11
  %11160 = getelementptr inbounds %struct.Reg, %struct.Reg* %11159, i32 0, i32 0
  %RDI.i353 = bitcast %union.anon* %11160 to i64*
  %11161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11162 = getelementptr inbounds %struct.GPR, %struct.GPR* %11161, i32 0, i32 15
  %11163 = getelementptr inbounds %struct.Reg, %struct.Reg* %11162, i32 0, i32 0
  %RBP.i354 = bitcast %union.anon* %11163 to i64*
  %11164 = load i64, i64* %RBP.i354
  %11165 = sub i64 %11164, 264
  %11166 = load i64, i64* %PC.i352
  %11167 = add i64 %11166, 7
  store i64 %11167, i64* %PC.i352
  %11168 = inttoptr i64 %11165 to i64*
  %11169 = load i64, i64* %11168
  store i64 %11169, i64* %RDI.i353, align 8
  store %struct.Memory* %loadMem_43433d, %struct.Memory** %MEMORY
  %loadMem_434344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11171 = getelementptr inbounds %struct.GPR, %struct.GPR* %11170, i32 0, i32 33
  %11172 = getelementptr inbounds %struct.Reg, %struct.Reg* %11171, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %11172 to i64*
  %11173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11174 = getelementptr inbounds %struct.GPR, %struct.GPR* %11173, i32 0, i32 9
  %11175 = getelementptr inbounds %struct.Reg, %struct.Reg* %11174, i32 0, i32 0
  %RSI.i350 = bitcast %union.anon* %11175 to i64*
  %11176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11177 = getelementptr inbounds %struct.GPR, %struct.GPR* %11176, i32 0, i32 15
  %11178 = getelementptr inbounds %struct.Reg, %struct.Reg* %11177, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %11178 to i64*
  %11179 = load i64, i64* %RBP.i351
  %11180 = sub i64 %11179, 268
  %11181 = load i64, i64* %PC.i349
  %11182 = add i64 %11181, 6
  store i64 %11182, i64* %PC.i349
  %11183 = inttoptr i64 %11180 to i32*
  %11184 = load i32, i32* %11183
  %11185 = zext i32 %11184 to i64
  store i64 %11185, i64* %RSI.i350, align 8
  store %struct.Memory* %loadMem_434344, %struct.Memory** %MEMORY
  %loadMem_43434a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11187 = getelementptr inbounds %struct.GPR, %struct.GPR* %11186, i32 0, i32 33
  %11188 = getelementptr inbounds %struct.Reg, %struct.Reg* %11187, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %11188 to i64*
  %11189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11190 = getelementptr inbounds %struct.GPR, %struct.GPR* %11189, i32 0, i32 1
  %11191 = getelementptr inbounds %struct.Reg, %struct.Reg* %11190, i32 0, i32 0
  %EAX.i347 = bitcast %union.anon* %11191 to i32*
  %11192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11193 = getelementptr inbounds %struct.GPR, %struct.GPR* %11192, i32 0, i32 7
  %11194 = getelementptr inbounds %struct.Reg, %struct.Reg* %11193, i32 0, i32 0
  %RDX.i348 = bitcast %union.anon* %11194 to i64*
  %11195 = load i32, i32* %EAX.i347
  %11196 = zext i32 %11195 to i64
  %11197 = load i64, i64* %PC.i346
  %11198 = add i64 %11197, 2
  store i64 %11198, i64* %PC.i346
  %11199 = and i64 %11196, 4294967295
  store i64 %11199, i64* %RDX.i348, align 8
  store %struct.Memory* %loadMem_43434a, %struct.Memory** %MEMORY
  %loadMem1_43434c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11201 = getelementptr inbounds %struct.GPR, %struct.GPR* %11200, i32 0, i32 33
  %11202 = getelementptr inbounds %struct.Reg, %struct.Reg* %11201, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %11202 to i64*
  %11203 = load i64, i64* %PC.i345
  %11204 = add i64 %11203, 152756
  %11205 = load i64, i64* %PC.i345
  %11206 = add i64 %11205, 5
  %11207 = load i64, i64* %PC.i345
  %11208 = add i64 %11207, 5
  store i64 %11208, i64* %PC.i345
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11210 = load i64, i64* %11209, align 8
  %11211 = add i64 %11210, -8
  %11212 = inttoptr i64 %11211 to i64*
  store i64 %11206, i64* %11212
  store i64 %11211, i64* %11209, align 8
  %11213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11204, i64* %11213, align 8
  store %struct.Memory* %loadMem1_43434c, %struct.Memory** %MEMORY
  %loadMem2_43434c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43434c = load i64, i64* %3
  %call2_43434c = call %struct.Memory* @sub_459800.get_mem2Dint(%struct.State* %0, i64 %loadPC_43434c, %struct.Memory* %loadMem2_43434c)
  store %struct.Memory* %call2_43434c, %struct.Memory** %MEMORY
  %loadMem_434351 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11215 = getelementptr inbounds %struct.GPR, %struct.GPR* %11214, i32 0, i32 33
  %11216 = getelementptr inbounds %struct.Reg, %struct.Reg* %11215, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %11216 to i64*
  %11217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11218 = getelementptr inbounds %struct.GPR, %struct.GPR* %11217, i32 0, i32 11
  %11219 = getelementptr inbounds %struct.Reg, %struct.Reg* %11218, i32 0, i32 0
  %RDI.i344 = bitcast %union.anon* %11219 to i64*
  %11220 = load i64, i64* %PC.i343
  %11221 = add i64 %11220, 10
  store i64 %11221, i64* %PC.i343
  store i64 ptrtoint (%G__0x6d2198_type* @G__0x6d2198 to i64), i64* %RDI.i344, align 8
  store %struct.Memory* %loadMem_434351, %struct.Memory** %MEMORY
  %loadMem_43435b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11223 = getelementptr inbounds %struct.GPR, %struct.GPR* %11222, i32 0, i32 33
  %11224 = getelementptr inbounds %struct.Reg, %struct.Reg* %11223, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %11224 to i64*
  %11225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11226 = getelementptr inbounds %struct.GPR, %struct.GPR* %11225, i32 0, i32 11
  %11227 = getelementptr inbounds %struct.Reg, %struct.Reg* %11226, i32 0, i32 0
  %RDI.i342 = bitcast %union.anon* %11227 to i64*
  %11228 = load i64, i64* %RDI.i342
  %11229 = load i64, i64* %PC.i341
  %11230 = add i64 %11229, 7
  store i64 %11230, i64* %PC.i341
  %11231 = add i64 3136, %11228
  store i64 %11231, i64* %RDI.i342, align 8
  %11232 = icmp ult i64 %11231, %11228
  %11233 = icmp ult i64 %11231, 3136
  %11234 = or i1 %11232, %11233
  %11235 = zext i1 %11234 to i8
  %11236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11235, i8* %11236, align 1
  %11237 = trunc i64 %11231 to i32
  %11238 = and i32 %11237, 255
  %11239 = call i32 @llvm.ctpop.i32(i32 %11238)
  %11240 = trunc i32 %11239 to i8
  %11241 = and i8 %11240, 1
  %11242 = xor i8 %11241, 1
  %11243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11242, i8* %11243, align 1
  %11244 = xor i64 3136, %11228
  %11245 = xor i64 %11244, %11231
  %11246 = lshr i64 %11245, 4
  %11247 = trunc i64 %11246 to i8
  %11248 = and i8 %11247, 1
  %11249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11248, i8* %11249, align 1
  %11250 = icmp eq i64 %11231, 0
  %11251 = zext i1 %11250 to i8
  %11252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11251, i8* %11252, align 1
  %11253 = lshr i64 %11231, 63
  %11254 = trunc i64 %11253 to i8
  %11255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11254, i8* %11255, align 1
  %11256 = lshr i64 %11228, 63
  %11257 = xor i64 %11253, %11256
  %11258 = add i64 %11257, %11253
  %11259 = icmp eq i64 %11258, 2
  %11260 = zext i1 %11259 to i8
  %11261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11260, i8* %11261, align 1
  store %struct.Memory* %loadMem_43435b, %struct.Memory** %MEMORY
  %loadMem_434362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11263 = getelementptr inbounds %struct.GPR, %struct.GPR* %11262, i32 0, i32 33
  %11264 = getelementptr inbounds %struct.Reg, %struct.Reg* %11263, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %11264 to i64*
  %11265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11266 = getelementptr inbounds %struct.GPR, %struct.GPR* %11265, i32 0, i32 5
  %11267 = getelementptr inbounds %struct.Reg, %struct.Reg* %11266, i32 0, i32 0
  %RCX.i340 = bitcast %union.anon* %11267 to i64*
  %11268 = load i64, i64* %PC.i339
  %11269 = add i64 %11268, 5
  store i64 %11269, i64* %PC.i339
  store i64 4, i64* %RCX.i340, align 8
  store %struct.Memory* %loadMem_434362, %struct.Memory** %MEMORY
  %loadMem_434367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11271 = getelementptr inbounds %struct.GPR, %struct.GPR* %11270, i32 0, i32 33
  %11272 = getelementptr inbounds %struct.Reg, %struct.Reg* %11271, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %11272 to i64*
  %11273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11274 = getelementptr inbounds %struct.GPR, %struct.GPR* %11273, i32 0, i32 17
  %11275 = getelementptr inbounds %struct.Reg, %struct.Reg* %11274, i32 0, i32 0
  %R8.i338 = bitcast %union.anon* %11275 to i64*
  %11276 = load i64, i64* %PC.i337
  %11277 = add i64 %11276, 8
  store i64 %11277, i64* %PC.i337
  %11278 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11278, i64* %R8.i338, align 8
  store %struct.Memory* %loadMem_434367, %struct.Memory** %MEMORY
  %loadMem_43436f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11280 = getelementptr inbounds %struct.GPR, %struct.GPR* %11279, i32 0, i32 33
  %11281 = getelementptr inbounds %struct.Reg, %struct.Reg* %11280, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %11281 to i64*
  %11282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11283 = getelementptr inbounds %struct.GPR, %struct.GPR* %11282, i32 0, i32 7
  %11284 = getelementptr inbounds %struct.Reg, %struct.Reg* %11283, i32 0, i32 0
  %RDX.i335 = bitcast %union.anon* %11284 to i64*
  %11285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11286 = getelementptr inbounds %struct.GPR, %struct.GPR* %11285, i32 0, i32 17
  %11287 = getelementptr inbounds %struct.Reg, %struct.Reg* %11286, i32 0, i32 0
  %R8.i336 = bitcast %union.anon* %11287 to i64*
  %11288 = load i64, i64* %R8.i336
  %11289 = add i64 %11288, 52
  %11290 = load i64, i64* %PC.i334
  %11291 = add i64 %11290, 4
  store i64 %11291, i64* %PC.i334
  %11292 = inttoptr i64 %11289 to i32*
  %11293 = load i32, i32* %11292
  %11294 = zext i32 %11293 to i64
  store i64 %11294, i64* %RDX.i335, align 8
  store %struct.Memory* %loadMem_43436f, %struct.Memory** %MEMORY
  %loadMem_434373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11296 = getelementptr inbounds %struct.GPR, %struct.GPR* %11295, i32 0, i32 33
  %11297 = getelementptr inbounds %struct.Reg, %struct.Reg* %11296, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %11297 to i64*
  %11298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11299 = getelementptr inbounds %struct.GPR, %struct.GPR* %11298, i32 0, i32 1
  %11300 = getelementptr inbounds %struct.Reg, %struct.Reg* %11299, i32 0, i32 0
  %EAX.i332 = bitcast %union.anon* %11300 to i32*
  %11301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11302 = getelementptr inbounds %struct.GPR, %struct.GPR* %11301, i32 0, i32 15
  %11303 = getelementptr inbounds %struct.Reg, %struct.Reg* %11302, i32 0, i32 0
  %RBP.i333 = bitcast %union.anon* %11303 to i64*
  %11304 = load i64, i64* %RBP.i333
  %11305 = sub i64 %11304, 272
  %11306 = load i32, i32* %EAX.i332
  %11307 = zext i32 %11306 to i64
  %11308 = load i64, i64* %PC.i331
  %11309 = add i64 %11308, 6
  store i64 %11309, i64* %PC.i331
  %11310 = inttoptr i64 %11305 to i32*
  store i32 %11306, i32* %11310
  store %struct.Memory* %loadMem_434373, %struct.Memory** %MEMORY
  %loadMem_434379 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11312 = getelementptr inbounds %struct.GPR, %struct.GPR* %11311, i32 0, i32 33
  %11313 = getelementptr inbounds %struct.Reg, %struct.Reg* %11312, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %11313 to i64*
  %11314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11315 = getelementptr inbounds %struct.GPR, %struct.GPR* %11314, i32 0, i32 7
  %11316 = getelementptr inbounds %struct.Reg, %struct.Reg* %11315, i32 0, i32 0
  %EDX.i329 = bitcast %union.anon* %11316 to i32*
  %11317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11318 = getelementptr inbounds %struct.GPR, %struct.GPR* %11317, i32 0, i32 1
  %11319 = getelementptr inbounds %struct.Reg, %struct.Reg* %11318, i32 0, i32 0
  %RAX.i330 = bitcast %union.anon* %11319 to i64*
  %11320 = load i32, i32* %EDX.i329
  %11321 = zext i32 %11320 to i64
  %11322 = load i64, i64* %PC.i328
  %11323 = add i64 %11322, 2
  store i64 %11323, i64* %PC.i328
  %11324 = and i64 %11321, 4294967295
  store i64 %11324, i64* %RAX.i330, align 8
  store %struct.Memory* %loadMem_434379, %struct.Memory** %MEMORY
  %loadMem_43437b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11326 = getelementptr inbounds %struct.GPR, %struct.GPR* %11325, i32 0, i32 33
  %11327 = getelementptr inbounds %struct.Reg, %struct.Reg* %11326, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %11327 to i64*
  %11328 = load i64, i64* %PC.i327
  %11329 = add i64 %11328, 1
  store i64 %11329, i64* %PC.i327
  %11330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %11331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11332 = bitcast %union.anon* %11331 to i32*
  %11333 = load i32, i32* %11332, align 8
  %11334 = sext i32 %11333 to i64
  %11335 = lshr i64 %11334, 32
  store i64 %11335, i64* %11330, align 8
  store %struct.Memory* %loadMem_43437b, %struct.Memory** %MEMORY
  %loadMem_43437c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11337 = getelementptr inbounds %struct.GPR, %struct.GPR* %11336, i32 0, i32 33
  %11338 = getelementptr inbounds %struct.Reg, %struct.Reg* %11337, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %11338 to i64*
  %11339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11340 = getelementptr inbounds %struct.GPR, %struct.GPR* %11339, i32 0, i32 5
  %11341 = getelementptr inbounds %struct.Reg, %struct.Reg* %11340, i32 0, i32 0
  %ECX.i323 = bitcast %union.anon* %11341 to i32*
  %11342 = load i32, i32* %ECX.i323
  %11343 = zext i32 %11342 to i64
  %11344 = load i64, i64* %PC.i322
  %11345 = add i64 %11344, 2
  store i64 %11345, i64* %PC.i322
  %11346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11347 = bitcast %union.anon* %11346 to i32*
  %11348 = load i32, i32* %11347, align 8
  %11349 = zext i32 %11348 to i64
  %11350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %11351 = bitcast %union.anon* %11350 to i32*
  %11352 = load i32, i32* %11351, align 8
  %11353 = zext i32 %11352 to i64
  %11354 = shl i64 %11343, 32
  %11355 = ashr exact i64 %11354, 32
  %11356 = shl i64 %11353, 32
  %11357 = or i64 %11356, %11349
  %11358 = sdiv i64 %11357, %11355
  %11359 = shl i64 %11358, 32
  %11360 = ashr exact i64 %11359, 32
  %11361 = icmp eq i64 %11358, %11360
  br i1 %11361, label %11366, label %11362

; <label>:11362:                                  ; preds = %routine_idivl__ecx.exit357
  %11363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11364 = load i64, i64* %11363, align 8
  %11365 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11364, %struct.Memory* %loadMem_43437c)
  br label %routine_idivl__ecx.exit324

; <label>:11366:                                  ; preds = %routine_idivl__ecx.exit357
  %11367 = srem i64 %11357, %11355
  %11368 = getelementptr inbounds %union.anon, %union.anon* %11346, i64 0, i32 0
  %11369 = and i64 %11358, 4294967295
  store i64 %11369, i64* %11368, align 8
  %11370 = getelementptr inbounds %union.anon, %union.anon* %11350, i64 0, i32 0
  %11371 = and i64 %11367, 4294967295
  store i64 %11371, i64* %11370, align 8
  %11372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11372, align 1
  %11373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %11373, align 1
  %11374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11374, align 1
  %11375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11375, align 1
  %11376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11376, align 1
  %11377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11377, align 1
  br label %routine_idivl__ecx.exit324

routine_idivl__ecx.exit324:                       ; preds = %11362, %11366
  %11378 = phi %struct.Memory* [ %11365, %11362 ], [ %loadMem_43437c, %11366 ]
  store %struct.Memory* %11378, %struct.Memory** %MEMORY
  %loadMem_43437e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11380 = getelementptr inbounds %struct.GPR, %struct.GPR* %11379, i32 0, i32 33
  %11381 = getelementptr inbounds %struct.Reg, %struct.Reg* %11380, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %11381 to i64*
  %11382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11383 = getelementptr inbounds %struct.GPR, %struct.GPR* %11382, i32 0, i32 17
  %11384 = getelementptr inbounds %struct.Reg, %struct.Reg* %11383, i32 0, i32 0
  %R8.i321 = bitcast %union.anon* %11384 to i64*
  %11385 = load i64, i64* %PC.i320
  %11386 = add i64 %11385, 8
  store i64 %11386, i64* %PC.i320
  %11387 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11387, i64* %R8.i321, align 8
  store %struct.Memory* %loadMem_43437e, %struct.Memory** %MEMORY
  %loadMem_434386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11389 = getelementptr inbounds %struct.GPR, %struct.GPR* %11388, i32 0, i32 33
  %11390 = getelementptr inbounds %struct.Reg, %struct.Reg* %11389, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %11390 to i64*
  %11391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11392 = getelementptr inbounds %struct.GPR, %struct.GPR* %11391, i32 0, i32 9
  %11393 = getelementptr inbounds %struct.Reg, %struct.Reg* %11392, i32 0, i32 0
  %RSI.i318 = bitcast %union.anon* %11393 to i64*
  %11394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11395 = getelementptr inbounds %struct.GPR, %struct.GPR* %11394, i32 0, i32 17
  %11396 = getelementptr inbounds %struct.Reg, %struct.Reg* %11395, i32 0, i32 0
  %R8.i319 = bitcast %union.anon* %11396 to i64*
  %11397 = load i64, i64* %R8.i319
  %11398 = add i64 %11397, 60
  %11399 = load i64, i64* %PC.i317
  %11400 = add i64 %11399, 4
  store i64 %11400, i64* %PC.i317
  %11401 = inttoptr i64 %11398 to i32*
  %11402 = load i32, i32* %11401
  %11403 = zext i32 %11402 to i64
  store i64 %11403, i64* %RSI.i318, align 8
  store %struct.Memory* %loadMem_434386, %struct.Memory** %MEMORY
  %loadMem_43438a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11405 = getelementptr inbounds %struct.GPR, %struct.GPR* %11404, i32 0, i32 33
  %11406 = getelementptr inbounds %struct.Reg, %struct.Reg* %11405, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %11406 to i64*
  %11407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11408 = getelementptr inbounds %struct.GPR, %struct.GPR* %11407, i32 0, i32 1
  %11409 = getelementptr inbounds %struct.Reg, %struct.Reg* %11408, i32 0, i32 0
  %EAX.i315 = bitcast %union.anon* %11409 to i32*
  %11410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11411 = getelementptr inbounds %struct.GPR, %struct.GPR* %11410, i32 0, i32 15
  %11412 = getelementptr inbounds %struct.Reg, %struct.Reg* %11411, i32 0, i32 0
  %RBP.i316 = bitcast %union.anon* %11412 to i64*
  %11413 = load i64, i64* %RBP.i316
  %11414 = sub i64 %11413, 276
  %11415 = load i32, i32* %EAX.i315
  %11416 = zext i32 %11415 to i64
  %11417 = load i64, i64* %PC.i314
  %11418 = add i64 %11417, 6
  store i64 %11418, i64* %PC.i314
  %11419 = inttoptr i64 %11414 to i32*
  store i32 %11415, i32* %11419
  store %struct.Memory* %loadMem_43438a, %struct.Memory** %MEMORY
  %loadMem_434390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11421 = getelementptr inbounds %struct.GPR, %struct.GPR* %11420, i32 0, i32 33
  %11422 = getelementptr inbounds %struct.Reg, %struct.Reg* %11421, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %11422 to i64*
  %11423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11424 = getelementptr inbounds %struct.GPR, %struct.GPR* %11423, i32 0, i32 9
  %11425 = getelementptr inbounds %struct.Reg, %struct.Reg* %11424, i32 0, i32 0
  %ESI.i312 = bitcast %union.anon* %11425 to i32*
  %11426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11427 = getelementptr inbounds %struct.GPR, %struct.GPR* %11426, i32 0, i32 1
  %11428 = getelementptr inbounds %struct.Reg, %struct.Reg* %11427, i32 0, i32 0
  %RAX.i313 = bitcast %union.anon* %11428 to i64*
  %11429 = load i32, i32* %ESI.i312
  %11430 = zext i32 %11429 to i64
  %11431 = load i64, i64* %PC.i311
  %11432 = add i64 %11431, 2
  store i64 %11432, i64* %PC.i311
  %11433 = and i64 %11430, 4294967295
  store i64 %11433, i64* %RAX.i313, align 8
  store %struct.Memory* %loadMem_434390, %struct.Memory** %MEMORY
  %loadMem_434392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11435 = getelementptr inbounds %struct.GPR, %struct.GPR* %11434, i32 0, i32 33
  %11436 = getelementptr inbounds %struct.Reg, %struct.Reg* %11435, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %11436 to i64*
  %11437 = load i64, i64* %PC.i310
  %11438 = add i64 %11437, 1
  store i64 %11438, i64* %PC.i310
  %11439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %11440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11441 = bitcast %union.anon* %11440 to i32*
  %11442 = load i32, i32* %11441, align 8
  %11443 = sext i32 %11442 to i64
  %11444 = lshr i64 %11443, 32
  store i64 %11444, i64* %11439, align 8
  store %struct.Memory* %loadMem_434392, %struct.Memory** %MEMORY
  %loadMem_434393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11446 = getelementptr inbounds %struct.GPR, %struct.GPR* %11445, i32 0, i32 33
  %11447 = getelementptr inbounds %struct.Reg, %struct.Reg* %11446, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %11447 to i64*
  %11448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11449 = getelementptr inbounds %struct.GPR, %struct.GPR* %11448, i32 0, i32 5
  %11450 = getelementptr inbounds %struct.Reg, %struct.Reg* %11449, i32 0, i32 0
  %ECX.i305 = bitcast %union.anon* %11450 to i32*
  %11451 = load i32, i32* %ECX.i305
  %11452 = zext i32 %11451 to i64
  %11453 = load i64, i64* %PC.i304
  %11454 = add i64 %11453, 2
  store i64 %11454, i64* %PC.i304
  %11455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11456 = bitcast %union.anon* %11455 to i32*
  %11457 = load i32, i32* %11456, align 8
  %11458 = zext i32 %11457 to i64
  %11459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %11460 = bitcast %union.anon* %11459 to i32*
  %11461 = load i32, i32* %11460, align 8
  %11462 = zext i32 %11461 to i64
  %11463 = shl i64 %11452, 32
  %11464 = ashr exact i64 %11463, 32
  %11465 = shl i64 %11462, 32
  %11466 = or i64 %11465, %11458
  %11467 = sdiv i64 %11466, %11464
  %11468 = shl i64 %11467, 32
  %11469 = ashr exact i64 %11468, 32
  %11470 = icmp eq i64 %11467, %11469
  br i1 %11470, label %11475, label %11471

; <label>:11471:                                  ; preds = %routine_idivl__ecx.exit324
  %11472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11473 = load i64, i64* %11472, align 8
  %11474 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11473, %struct.Memory* %loadMem_434393)
  br label %routine_idivl__ecx.exit306

; <label>:11475:                                  ; preds = %routine_idivl__ecx.exit324
  %11476 = srem i64 %11466, %11464
  %11477 = getelementptr inbounds %union.anon, %union.anon* %11455, i64 0, i32 0
  %11478 = and i64 %11467, 4294967295
  store i64 %11478, i64* %11477, align 8
  %11479 = getelementptr inbounds %union.anon, %union.anon* %11459, i64 0, i32 0
  %11480 = and i64 %11476, 4294967295
  store i64 %11480, i64* %11479, align 8
  %11481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11481, align 1
  %11482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %11482, align 1
  %11483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11483, align 1
  %11484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11484, align 1
  %11485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11485, align 1
  %11486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11486, align 1
  br label %routine_idivl__ecx.exit306

routine_idivl__ecx.exit306:                       ; preds = %11471, %11475
  %11487 = phi %struct.Memory* [ %11474, %11471 ], [ %loadMem_434393, %11475 ]
  store %struct.Memory* %11487, %struct.Memory** %MEMORY
  %loadMem_434395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11489 = getelementptr inbounds %struct.GPR, %struct.GPR* %11488, i32 0, i32 33
  %11490 = getelementptr inbounds %struct.Reg, %struct.Reg* %11489, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %11490 to i64*
  %11491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11492 = getelementptr inbounds %struct.GPR, %struct.GPR* %11491, i32 0, i32 9
  %11493 = getelementptr inbounds %struct.Reg, %struct.Reg* %11492, i32 0, i32 0
  %RSI.i302 = bitcast %union.anon* %11493 to i64*
  %11494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11495 = getelementptr inbounds %struct.GPR, %struct.GPR* %11494, i32 0, i32 15
  %11496 = getelementptr inbounds %struct.Reg, %struct.Reg* %11495, i32 0, i32 0
  %RBP.i303 = bitcast %union.anon* %11496 to i64*
  %11497 = load i64, i64* %RBP.i303
  %11498 = sub i64 %11497, 276
  %11499 = load i64, i64* %PC.i301
  %11500 = add i64 %11499, 6
  store i64 %11500, i64* %PC.i301
  %11501 = inttoptr i64 %11498 to i32*
  %11502 = load i32, i32* %11501
  %11503 = zext i32 %11502 to i64
  store i64 %11503, i64* %RSI.i302, align 8
  store %struct.Memory* %loadMem_434395, %struct.Memory** %MEMORY
  %loadMem_43439b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11505 = getelementptr inbounds %struct.GPR, %struct.GPR* %11504, i32 0, i32 33
  %11506 = getelementptr inbounds %struct.Reg, %struct.Reg* %11505, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %11506 to i64*
  %11507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11508 = getelementptr inbounds %struct.GPR, %struct.GPR* %11507, i32 0, i32 1
  %11509 = getelementptr inbounds %struct.Reg, %struct.Reg* %11508, i32 0, i32 0
  %EAX.i299 = bitcast %union.anon* %11509 to i32*
  %11510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11511 = getelementptr inbounds %struct.GPR, %struct.GPR* %11510, i32 0, i32 7
  %11512 = getelementptr inbounds %struct.Reg, %struct.Reg* %11511, i32 0, i32 0
  %RDX.i300 = bitcast %union.anon* %11512 to i64*
  %11513 = load i32, i32* %EAX.i299
  %11514 = zext i32 %11513 to i64
  %11515 = load i64, i64* %PC.i298
  %11516 = add i64 %11515, 2
  store i64 %11516, i64* %PC.i298
  %11517 = and i64 %11514, 4294967295
  store i64 %11517, i64* %RDX.i300, align 8
  store %struct.Memory* %loadMem_43439b, %struct.Memory** %MEMORY
  %loadMem1_43439d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11519 = getelementptr inbounds %struct.GPR, %struct.GPR* %11518, i32 0, i32 33
  %11520 = getelementptr inbounds %struct.Reg, %struct.Reg* %11519, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %11520 to i64*
  %11521 = load i64, i64* %PC.i297
  %11522 = add i64 %11521, 152675
  %11523 = load i64, i64* %PC.i297
  %11524 = add i64 %11523, 5
  %11525 = load i64, i64* %PC.i297
  %11526 = add i64 %11525, 5
  store i64 %11526, i64* %PC.i297
  %11527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11528 = load i64, i64* %11527, align 8
  %11529 = add i64 %11528, -8
  %11530 = inttoptr i64 %11529 to i64*
  store i64 %11524, i64* %11530
  store i64 %11529, i64* %11527, align 8
  %11531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11522, i64* %11531, align 8
  store %struct.Memory* %loadMem1_43439d, %struct.Memory** %MEMORY
  %loadMem2_43439d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43439d = load i64, i64* %3
  %call2_43439d = call %struct.Memory* @sub_459800.get_mem2Dint(%struct.State* %0, i64 %loadPC_43439d, %struct.Memory* %loadMem2_43439d)
  store %struct.Memory* %call2_43439d, %struct.Memory** %MEMORY
  %loadMem_4343a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11533 = getelementptr inbounds %struct.GPR, %struct.GPR* %11532, i32 0, i32 33
  %11534 = getelementptr inbounds %struct.Reg, %struct.Reg* %11533, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %11534 to i64*
  %11535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11536 = getelementptr inbounds %struct.GPR, %struct.GPR* %11535, i32 0, i32 11
  %11537 = getelementptr inbounds %struct.Reg, %struct.Reg* %11536, i32 0, i32 0
  %RDI.i296 = bitcast %union.anon* %11537 to i64*
  %11538 = load i64, i64* %PC.i295
  %11539 = add i64 %11538, 10
  store i64 %11539, i64* %PC.i295
  store i64 ptrtoint (%G__0x721e00_type* @G__0x721e00 to i64), i64* %RDI.i296, align 8
  store %struct.Memory* %loadMem_4343a2, %struct.Memory** %MEMORY
  %loadMem_4343ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %11540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11541 = getelementptr inbounds %struct.GPR, %struct.GPR* %11540, i32 0, i32 33
  %11542 = getelementptr inbounds %struct.Reg, %struct.Reg* %11541, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %11542 to i64*
  %11543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11544 = getelementptr inbounds %struct.GPR, %struct.GPR* %11543, i32 0, i32 11
  %11545 = getelementptr inbounds %struct.Reg, %struct.Reg* %11544, i32 0, i32 0
  %RDI.i294 = bitcast %union.anon* %11545 to i64*
  %11546 = load i64, i64* %RDI.i294
  %11547 = load i64, i64* %PC.i293
  %11548 = add i64 %11547, 7
  store i64 %11548, i64* %PC.i293
  %11549 = add i64 3136, %11546
  store i64 %11549, i64* %RDI.i294, align 8
  %11550 = icmp ult i64 %11549, %11546
  %11551 = icmp ult i64 %11549, 3136
  %11552 = or i1 %11550, %11551
  %11553 = zext i1 %11552 to i8
  %11554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11553, i8* %11554, align 1
  %11555 = trunc i64 %11549 to i32
  %11556 = and i32 %11555, 255
  %11557 = call i32 @llvm.ctpop.i32(i32 %11556)
  %11558 = trunc i32 %11557 to i8
  %11559 = and i8 %11558, 1
  %11560 = xor i8 %11559, 1
  %11561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11560, i8* %11561, align 1
  %11562 = xor i64 3136, %11546
  %11563 = xor i64 %11562, %11549
  %11564 = lshr i64 %11563, 4
  %11565 = trunc i64 %11564 to i8
  %11566 = and i8 %11565, 1
  %11567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11566, i8* %11567, align 1
  %11568 = icmp eq i64 %11549, 0
  %11569 = zext i1 %11568 to i8
  %11570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11569, i8* %11570, align 1
  %11571 = lshr i64 %11549, 63
  %11572 = trunc i64 %11571 to i8
  %11573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11572, i8* %11573, align 1
  %11574 = lshr i64 %11546, 63
  %11575 = xor i64 %11571, %11574
  %11576 = add i64 %11575, %11571
  %11577 = icmp eq i64 %11576, 2
  %11578 = zext i1 %11577 to i8
  %11579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11578, i8* %11579, align 1
  store %struct.Memory* %loadMem_4343ac, %struct.Memory** %MEMORY
  %loadMem_4343b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11581 = getelementptr inbounds %struct.GPR, %struct.GPR* %11580, i32 0, i32 33
  %11582 = getelementptr inbounds %struct.Reg, %struct.Reg* %11581, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %11582 to i64*
  %11583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11584 = getelementptr inbounds %struct.GPR, %struct.GPR* %11583, i32 0, i32 5
  %11585 = getelementptr inbounds %struct.Reg, %struct.Reg* %11584, i32 0, i32 0
  %RCX.i292 = bitcast %union.anon* %11585 to i64*
  %11586 = load i64, i64* %PC.i291
  %11587 = add i64 %11586, 5
  store i64 %11587, i64* %PC.i291
  store i64 4, i64* %RCX.i292, align 8
  store %struct.Memory* %loadMem_4343b3, %struct.Memory** %MEMORY
  %loadMem_4343b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11589 = getelementptr inbounds %struct.GPR, %struct.GPR* %11588, i32 0, i32 33
  %11590 = getelementptr inbounds %struct.Reg, %struct.Reg* %11589, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %11590 to i64*
  %11591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11592 = getelementptr inbounds %struct.GPR, %struct.GPR* %11591, i32 0, i32 17
  %11593 = getelementptr inbounds %struct.Reg, %struct.Reg* %11592, i32 0, i32 0
  %R8.i290 = bitcast %union.anon* %11593 to i64*
  %11594 = load i64, i64* %PC.i289
  %11595 = add i64 %11594, 8
  store i64 %11595, i64* %PC.i289
  %11596 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11596, i64* %R8.i290, align 8
  store %struct.Memory* %loadMem_4343b8, %struct.Memory** %MEMORY
  %loadMem_4343c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11598 = getelementptr inbounds %struct.GPR, %struct.GPR* %11597, i32 0, i32 33
  %11599 = getelementptr inbounds %struct.Reg, %struct.Reg* %11598, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %11599 to i64*
  %11600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11601 = getelementptr inbounds %struct.GPR, %struct.GPR* %11600, i32 0, i32 7
  %11602 = getelementptr inbounds %struct.Reg, %struct.Reg* %11601, i32 0, i32 0
  %RDX.i287 = bitcast %union.anon* %11602 to i64*
  %11603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11604 = getelementptr inbounds %struct.GPR, %struct.GPR* %11603, i32 0, i32 17
  %11605 = getelementptr inbounds %struct.Reg, %struct.Reg* %11604, i32 0, i32 0
  %R8.i288 = bitcast %union.anon* %11605 to i64*
  %11606 = load i64, i64* %R8.i288
  %11607 = add i64 %11606, 52
  %11608 = load i64, i64* %PC.i286
  %11609 = add i64 %11608, 4
  store i64 %11609, i64* %PC.i286
  %11610 = inttoptr i64 %11607 to i32*
  %11611 = load i32, i32* %11610
  %11612 = zext i32 %11611 to i64
  store i64 %11612, i64* %RDX.i287, align 8
  store %struct.Memory* %loadMem_4343c0, %struct.Memory** %MEMORY
  %loadMem_4343c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11614 = getelementptr inbounds %struct.GPR, %struct.GPR* %11613, i32 0, i32 33
  %11615 = getelementptr inbounds %struct.Reg, %struct.Reg* %11614, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %11615 to i64*
  %11616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11617 = getelementptr inbounds %struct.GPR, %struct.GPR* %11616, i32 0, i32 1
  %11618 = getelementptr inbounds %struct.Reg, %struct.Reg* %11617, i32 0, i32 0
  %EAX.i284 = bitcast %union.anon* %11618 to i32*
  %11619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11620 = getelementptr inbounds %struct.GPR, %struct.GPR* %11619, i32 0, i32 15
  %11621 = getelementptr inbounds %struct.Reg, %struct.Reg* %11620, i32 0, i32 0
  %RBP.i285 = bitcast %union.anon* %11621 to i64*
  %11622 = load i64, i64* %RBP.i285
  %11623 = sub i64 %11622, 280
  %11624 = load i32, i32* %EAX.i284
  %11625 = zext i32 %11624 to i64
  %11626 = load i64, i64* %PC.i283
  %11627 = add i64 %11626, 6
  store i64 %11627, i64* %PC.i283
  %11628 = inttoptr i64 %11623 to i32*
  store i32 %11624, i32* %11628
  store %struct.Memory* %loadMem_4343c4, %struct.Memory** %MEMORY
  %loadMem_4343ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %11629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11630 = getelementptr inbounds %struct.GPR, %struct.GPR* %11629, i32 0, i32 33
  %11631 = getelementptr inbounds %struct.Reg, %struct.Reg* %11630, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %11631 to i64*
  %11632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11633 = getelementptr inbounds %struct.GPR, %struct.GPR* %11632, i32 0, i32 7
  %11634 = getelementptr inbounds %struct.Reg, %struct.Reg* %11633, i32 0, i32 0
  %EDX.i281 = bitcast %union.anon* %11634 to i32*
  %11635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11636 = getelementptr inbounds %struct.GPR, %struct.GPR* %11635, i32 0, i32 1
  %11637 = getelementptr inbounds %struct.Reg, %struct.Reg* %11636, i32 0, i32 0
  %RAX.i282 = bitcast %union.anon* %11637 to i64*
  %11638 = load i32, i32* %EDX.i281
  %11639 = zext i32 %11638 to i64
  %11640 = load i64, i64* %PC.i280
  %11641 = add i64 %11640, 2
  store i64 %11641, i64* %PC.i280
  %11642 = and i64 %11639, 4294967295
  store i64 %11642, i64* %RAX.i282, align 8
  store %struct.Memory* %loadMem_4343ca, %struct.Memory** %MEMORY
  %loadMem_4343cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11644 = getelementptr inbounds %struct.GPR, %struct.GPR* %11643, i32 0, i32 33
  %11645 = getelementptr inbounds %struct.Reg, %struct.Reg* %11644, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %11645 to i64*
  %11646 = load i64, i64* %PC.i279
  %11647 = add i64 %11646, 1
  store i64 %11647, i64* %PC.i279
  %11648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %11649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11650 = bitcast %union.anon* %11649 to i32*
  %11651 = load i32, i32* %11650, align 8
  %11652 = sext i32 %11651 to i64
  %11653 = lshr i64 %11652, 32
  store i64 %11653, i64* %11648, align 8
  store %struct.Memory* %loadMem_4343cc, %struct.Memory** %MEMORY
  %loadMem_4343cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11655 = getelementptr inbounds %struct.GPR, %struct.GPR* %11654, i32 0, i32 33
  %11656 = getelementptr inbounds %struct.Reg, %struct.Reg* %11655, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %11656 to i64*
  %11657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11658 = getelementptr inbounds %struct.GPR, %struct.GPR* %11657, i32 0, i32 5
  %11659 = getelementptr inbounds %struct.Reg, %struct.Reg* %11658, i32 0, i32 0
  %ECX.i275 = bitcast %union.anon* %11659 to i32*
  %11660 = load i32, i32* %ECX.i275
  %11661 = zext i32 %11660 to i64
  %11662 = load i64, i64* %PC.i274
  %11663 = add i64 %11662, 2
  store i64 %11663, i64* %PC.i274
  %11664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11665 = bitcast %union.anon* %11664 to i32*
  %11666 = load i32, i32* %11665, align 8
  %11667 = zext i32 %11666 to i64
  %11668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %11669 = bitcast %union.anon* %11668 to i32*
  %11670 = load i32, i32* %11669, align 8
  %11671 = zext i32 %11670 to i64
  %11672 = shl i64 %11661, 32
  %11673 = ashr exact i64 %11672, 32
  %11674 = shl i64 %11671, 32
  %11675 = or i64 %11674, %11667
  %11676 = sdiv i64 %11675, %11673
  %11677 = shl i64 %11676, 32
  %11678 = ashr exact i64 %11677, 32
  %11679 = icmp eq i64 %11676, %11678
  br i1 %11679, label %11684, label %11680

; <label>:11680:                                  ; preds = %routine_idivl__ecx.exit306
  %11681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11682 = load i64, i64* %11681, align 8
  %11683 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11682, %struct.Memory* %loadMem_4343cd)
  br label %routine_idivl__ecx.exit276

; <label>:11684:                                  ; preds = %routine_idivl__ecx.exit306
  %11685 = srem i64 %11675, %11673
  %11686 = getelementptr inbounds %union.anon, %union.anon* %11664, i64 0, i32 0
  %11687 = and i64 %11676, 4294967295
  store i64 %11687, i64* %11686, align 8
  %11688 = getelementptr inbounds %union.anon, %union.anon* %11668, i64 0, i32 0
  %11689 = and i64 %11685, 4294967295
  store i64 %11689, i64* %11688, align 8
  %11690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11690, align 1
  %11691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %11691, align 1
  %11692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11692, align 1
  %11693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11693, align 1
  %11694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11694, align 1
  %11695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11695, align 1
  br label %routine_idivl__ecx.exit276

routine_idivl__ecx.exit276:                       ; preds = %11680, %11684
  %11696 = phi %struct.Memory* [ %11683, %11680 ], [ %loadMem_4343cd, %11684 ]
  store %struct.Memory* %11696, %struct.Memory** %MEMORY
  %loadMem_4343cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11698 = getelementptr inbounds %struct.GPR, %struct.GPR* %11697, i32 0, i32 33
  %11699 = getelementptr inbounds %struct.Reg, %struct.Reg* %11698, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %11699 to i64*
  %11700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11701 = getelementptr inbounds %struct.GPR, %struct.GPR* %11700, i32 0, i32 17
  %11702 = getelementptr inbounds %struct.Reg, %struct.Reg* %11701, i32 0, i32 0
  %R8.i273 = bitcast %union.anon* %11702 to i64*
  %11703 = load i64, i64* %PC.i272
  %11704 = add i64 %11703, 8
  store i64 %11704, i64* %PC.i272
  %11705 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11705, i64* %R8.i273, align 8
  store %struct.Memory* %loadMem_4343cf, %struct.Memory** %MEMORY
  %loadMem_4343d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11707 = getelementptr inbounds %struct.GPR, %struct.GPR* %11706, i32 0, i32 33
  %11708 = getelementptr inbounds %struct.Reg, %struct.Reg* %11707, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %11708 to i64*
  %11709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11710 = getelementptr inbounds %struct.GPR, %struct.GPR* %11709, i32 0, i32 9
  %11711 = getelementptr inbounds %struct.Reg, %struct.Reg* %11710, i32 0, i32 0
  %RSI.i271 = bitcast %union.anon* %11711 to i64*
  %11712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11713 = getelementptr inbounds %struct.GPR, %struct.GPR* %11712, i32 0, i32 17
  %11714 = getelementptr inbounds %struct.Reg, %struct.Reg* %11713, i32 0, i32 0
  %R8.i = bitcast %union.anon* %11714 to i64*
  %11715 = load i64, i64* %R8.i
  %11716 = add i64 %11715, 60
  %11717 = load i64, i64* %PC.i270
  %11718 = add i64 %11717, 4
  store i64 %11718, i64* %PC.i270
  %11719 = inttoptr i64 %11716 to i32*
  %11720 = load i32, i32* %11719
  %11721 = zext i32 %11720 to i64
  store i64 %11721, i64* %RSI.i271, align 8
  store %struct.Memory* %loadMem_4343d7, %struct.Memory** %MEMORY
  %loadMem_4343db = load %struct.Memory*, %struct.Memory** %MEMORY
  %11722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11723 = getelementptr inbounds %struct.GPR, %struct.GPR* %11722, i32 0, i32 33
  %11724 = getelementptr inbounds %struct.Reg, %struct.Reg* %11723, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %11724 to i64*
  %11725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11726 = getelementptr inbounds %struct.GPR, %struct.GPR* %11725, i32 0, i32 1
  %11727 = getelementptr inbounds %struct.Reg, %struct.Reg* %11726, i32 0, i32 0
  %EAX.i268 = bitcast %union.anon* %11727 to i32*
  %11728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11729 = getelementptr inbounds %struct.GPR, %struct.GPR* %11728, i32 0, i32 15
  %11730 = getelementptr inbounds %struct.Reg, %struct.Reg* %11729, i32 0, i32 0
  %RBP.i269 = bitcast %union.anon* %11730 to i64*
  %11731 = load i64, i64* %RBP.i269
  %11732 = sub i64 %11731, 284
  %11733 = load i32, i32* %EAX.i268
  %11734 = zext i32 %11733 to i64
  %11735 = load i64, i64* %PC.i267
  %11736 = add i64 %11735, 6
  store i64 %11736, i64* %PC.i267
  %11737 = inttoptr i64 %11732 to i32*
  store i32 %11733, i32* %11737
  store %struct.Memory* %loadMem_4343db, %struct.Memory** %MEMORY
  %loadMem_4343e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11739 = getelementptr inbounds %struct.GPR, %struct.GPR* %11738, i32 0, i32 33
  %11740 = getelementptr inbounds %struct.Reg, %struct.Reg* %11739, i32 0, i32 0
  %PC.i264 = bitcast %union.anon* %11740 to i64*
  %11741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11742 = getelementptr inbounds %struct.GPR, %struct.GPR* %11741, i32 0, i32 9
  %11743 = getelementptr inbounds %struct.Reg, %struct.Reg* %11742, i32 0, i32 0
  %ESI.i265 = bitcast %union.anon* %11743 to i32*
  %11744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11745 = getelementptr inbounds %struct.GPR, %struct.GPR* %11744, i32 0, i32 1
  %11746 = getelementptr inbounds %struct.Reg, %struct.Reg* %11745, i32 0, i32 0
  %RAX.i266 = bitcast %union.anon* %11746 to i64*
  %11747 = load i32, i32* %ESI.i265
  %11748 = zext i32 %11747 to i64
  %11749 = load i64, i64* %PC.i264
  %11750 = add i64 %11749, 2
  store i64 %11750, i64* %PC.i264
  %11751 = and i64 %11748, 4294967295
  store i64 %11751, i64* %RAX.i266, align 8
  store %struct.Memory* %loadMem_4343e1, %struct.Memory** %MEMORY
  %loadMem_4343e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11753 = getelementptr inbounds %struct.GPR, %struct.GPR* %11752, i32 0, i32 33
  %11754 = getelementptr inbounds %struct.Reg, %struct.Reg* %11753, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %11754 to i64*
  %11755 = load i64, i64* %PC.i263
  %11756 = add i64 %11755, 1
  store i64 %11756, i64* %PC.i263
  %11757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %11758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11759 = bitcast %union.anon* %11758 to i32*
  %11760 = load i32, i32* %11759, align 8
  %11761 = sext i32 %11760 to i64
  %11762 = lshr i64 %11761, 32
  store i64 %11762, i64* %11757, align 8
  store %struct.Memory* %loadMem_4343e3, %struct.Memory** %MEMORY
  %loadMem_4343e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11764 = getelementptr inbounds %struct.GPR, %struct.GPR* %11763, i32 0, i32 33
  %11765 = getelementptr inbounds %struct.Reg, %struct.Reg* %11764, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %11765 to i64*
  %11766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11767 = getelementptr inbounds %struct.GPR, %struct.GPR* %11766, i32 0, i32 5
  %11768 = getelementptr inbounds %struct.Reg, %struct.Reg* %11767, i32 0, i32 0
  %ECX.i260 = bitcast %union.anon* %11768 to i32*
  %11769 = load i32, i32* %ECX.i260
  %11770 = zext i32 %11769 to i64
  %11771 = load i64, i64* %PC.i259
  %11772 = add i64 %11771, 2
  store i64 %11772, i64* %PC.i259
  %11773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11774 = bitcast %union.anon* %11773 to i32*
  %11775 = load i32, i32* %11774, align 8
  %11776 = zext i32 %11775 to i64
  %11777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %11778 = bitcast %union.anon* %11777 to i32*
  %11779 = load i32, i32* %11778, align 8
  %11780 = zext i32 %11779 to i64
  %11781 = shl i64 %11770, 32
  %11782 = ashr exact i64 %11781, 32
  %11783 = shl i64 %11780, 32
  %11784 = or i64 %11783, %11776
  %11785 = sdiv i64 %11784, %11782
  %11786 = shl i64 %11785, 32
  %11787 = ashr exact i64 %11786, 32
  %11788 = icmp eq i64 %11785, %11787
  br i1 %11788, label %11793, label %11789

; <label>:11789:                                  ; preds = %routine_idivl__ecx.exit276
  %11790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11791 = load i64, i64* %11790, align 8
  %11792 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11791, %struct.Memory* %loadMem_4343e4)
  br label %routine_idivl__ecx.exit

; <label>:11793:                                  ; preds = %routine_idivl__ecx.exit276
  %11794 = srem i64 %11784, %11782
  %11795 = getelementptr inbounds %union.anon, %union.anon* %11773, i64 0, i32 0
  %11796 = and i64 %11785, 4294967295
  store i64 %11796, i64* %11795, align 8
  %11797 = getelementptr inbounds %union.anon, %union.anon* %11777, i64 0, i32 0
  %11798 = and i64 %11794, 4294967295
  store i64 %11798, i64* %11797, align 8
  %11799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11799, align 1
  %11800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %11800, align 1
  %11801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11801, align 1
  %11802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11802, align 1
  %11803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11803, align 1
  %11804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11804, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %11789, %11793
  %11805 = phi %struct.Memory* [ %11792, %11789 ], [ %loadMem_4343e4, %11793 ]
  store %struct.Memory* %11805, %struct.Memory** %MEMORY
  %loadMem_4343e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11807 = getelementptr inbounds %struct.GPR, %struct.GPR* %11806, i32 0, i32 33
  %11808 = getelementptr inbounds %struct.Reg, %struct.Reg* %11807, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %11808 to i64*
  %11809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11810 = getelementptr inbounds %struct.GPR, %struct.GPR* %11809, i32 0, i32 9
  %11811 = getelementptr inbounds %struct.Reg, %struct.Reg* %11810, i32 0, i32 0
  %RSI.i257 = bitcast %union.anon* %11811 to i64*
  %11812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11813 = getelementptr inbounds %struct.GPR, %struct.GPR* %11812, i32 0, i32 15
  %11814 = getelementptr inbounds %struct.Reg, %struct.Reg* %11813, i32 0, i32 0
  %RBP.i258 = bitcast %union.anon* %11814 to i64*
  %11815 = load i64, i64* %RBP.i258
  %11816 = sub i64 %11815, 284
  %11817 = load i64, i64* %PC.i256
  %11818 = add i64 %11817, 6
  store i64 %11818, i64* %PC.i256
  %11819 = inttoptr i64 %11816 to i32*
  %11820 = load i32, i32* %11819
  %11821 = zext i32 %11820 to i64
  store i64 %11821, i64* %RSI.i257, align 8
  store %struct.Memory* %loadMem_4343e6, %struct.Memory** %MEMORY
  %loadMem_4343ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %11822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11823 = getelementptr inbounds %struct.GPR, %struct.GPR* %11822, i32 0, i32 33
  %11824 = getelementptr inbounds %struct.Reg, %struct.Reg* %11823, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %11824 to i64*
  %11825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11826 = getelementptr inbounds %struct.GPR, %struct.GPR* %11825, i32 0, i32 1
  %11827 = getelementptr inbounds %struct.Reg, %struct.Reg* %11826, i32 0, i32 0
  %EAX.i254 = bitcast %union.anon* %11827 to i32*
  %11828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11829 = getelementptr inbounds %struct.GPR, %struct.GPR* %11828, i32 0, i32 7
  %11830 = getelementptr inbounds %struct.Reg, %struct.Reg* %11829, i32 0, i32 0
  %RDX.i255 = bitcast %union.anon* %11830 to i64*
  %11831 = load i32, i32* %EAX.i254
  %11832 = zext i32 %11831 to i64
  %11833 = load i64, i64* %PC.i253
  %11834 = add i64 %11833, 2
  store i64 %11834, i64* %PC.i253
  %11835 = and i64 %11832, 4294967295
  store i64 %11835, i64* %RDX.i255, align 8
  store %struct.Memory* %loadMem_4343ec, %struct.Memory** %MEMORY
  %loadMem1_4343ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %11836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11837 = getelementptr inbounds %struct.GPR, %struct.GPR* %11836, i32 0, i32 33
  %11838 = getelementptr inbounds %struct.Reg, %struct.Reg* %11837, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %11838 to i64*
  %11839 = load i64, i64* %PC.i252
  %11840 = add i64 %11839, 152594
  %11841 = load i64, i64* %PC.i252
  %11842 = add i64 %11841, 5
  %11843 = load i64, i64* %PC.i252
  %11844 = add i64 %11843, 5
  store i64 %11844, i64* %PC.i252
  %11845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11846 = load i64, i64* %11845, align 8
  %11847 = add i64 %11846, -8
  %11848 = inttoptr i64 %11847 to i64*
  store i64 %11842, i64* %11848
  store i64 %11847, i64* %11845, align 8
  %11849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11840, i64* %11849, align 8
  store %struct.Memory* %loadMem1_4343ee, %struct.Memory** %MEMORY
  %loadMem2_4343ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4343ee = load i64, i64* %3
  %call2_4343ee = call %struct.Memory* @sub_459800.get_mem2Dint(%struct.State* %0, i64 %loadPC_4343ee, %struct.Memory* %loadMem2_4343ee)
  store %struct.Memory* %call2_4343ee, %struct.Memory** %MEMORY
  %loadMem_4343f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11851 = getelementptr inbounds %struct.GPR, %struct.GPR* %11850, i32 0, i32 33
  %11852 = getelementptr inbounds %struct.Reg, %struct.Reg* %11851, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %11852 to i64*
  %11853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11854 = getelementptr inbounds %struct.GPR, %struct.GPR* %11853, i32 0, i32 1
  %11855 = getelementptr inbounds %struct.Reg, %struct.Reg* %11854, i32 0, i32 0
  %EAX.i250 = bitcast %union.anon* %11855 to i32*
  %11856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11857 = getelementptr inbounds %struct.GPR, %struct.GPR* %11856, i32 0, i32 15
  %11858 = getelementptr inbounds %struct.Reg, %struct.Reg* %11857, i32 0, i32 0
  %RBP.i251 = bitcast %union.anon* %11858 to i64*
  %11859 = load i64, i64* %RBP.i251
  %11860 = sub i64 %11859, 288
  %11861 = load i32, i32* %EAX.i250
  %11862 = zext i32 %11861 to i64
  %11863 = load i64, i64* %PC.i249
  %11864 = add i64 %11863, 6
  store i64 %11864, i64* %PC.i249
  %11865 = inttoptr i64 %11860 to i32*
  store i32 %11861, i32* %11865
  store %struct.Memory* %loadMem_4343f3, %struct.Memory** %MEMORY
  br label %block_.L_4343f9

block_.L_4343f9:                                  ; preds = %routine_idivl__ecx.exit, %routine_idivl__esi.exit416
  %loadMem_4343f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11867 = getelementptr inbounds %struct.GPR, %struct.GPR* %11866, i32 0, i32 33
  %11868 = getelementptr inbounds %struct.Reg, %struct.Reg* %11867, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %11868 to i64*
  %11869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11870 = getelementptr inbounds %struct.GPR, %struct.GPR* %11869, i32 0, i32 7
  %11871 = getelementptr inbounds %struct.Reg, %struct.Reg* %11870, i32 0, i32 0
  %RDX.i248 = bitcast %union.anon* %11871 to i64*
  %11872 = load i64, i64* %PC.i247
  %11873 = add i64 %11872, 5
  store i64 %11873, i64* %PC.i247
  store i64 4, i64* %RDX.i248, align 8
  store %struct.Memory* %loadMem_4343f9, %struct.Memory** %MEMORY
  %loadMem_4343fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %11874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11875 = getelementptr inbounds %struct.GPR, %struct.GPR* %11874, i32 0, i32 33
  %11876 = getelementptr inbounds %struct.Reg, %struct.Reg* %11875, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %11876 to i64*
  %11877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11878 = getelementptr inbounds %struct.GPR, %struct.GPR* %11877, i32 0, i32 1
  %11879 = getelementptr inbounds %struct.Reg, %struct.Reg* %11878, i32 0, i32 0
  %RAX.i246 = bitcast %union.anon* %11879 to i64*
  %11880 = load i64, i64* %PC.i245
  %11881 = add i64 %11880, 8
  store i64 %11881, i64* %PC.i245
  %11882 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11882, i64* %RAX.i246, align 8
  store %struct.Memory* %loadMem_4343fe, %struct.Memory** %MEMORY
  %loadMem_434406 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11884 = getelementptr inbounds %struct.GPR, %struct.GPR* %11883, i32 0, i32 33
  %11885 = getelementptr inbounds %struct.Reg, %struct.Reg* %11884, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %11885 to i64*
  %11886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11887 = getelementptr inbounds %struct.GPR, %struct.GPR* %11886, i32 0, i32 1
  %11888 = getelementptr inbounds %struct.Reg, %struct.Reg* %11887, i32 0, i32 0
  %RAX.i244 = bitcast %union.anon* %11888 to i64*
  %11889 = load i64, i64* %RAX.i244
  %11890 = load i64, i64* %PC.i243
  %11891 = add i64 %11890, 6
  store i64 %11891, i64* %PC.i243
  %11892 = add i64 128, %11889
  store i64 %11892, i64* %RAX.i244, align 8
  %11893 = icmp ult i64 %11892, %11889
  %11894 = icmp ult i64 %11892, 128
  %11895 = or i1 %11893, %11894
  %11896 = zext i1 %11895 to i8
  %11897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11896, i8* %11897, align 1
  %11898 = trunc i64 %11892 to i32
  %11899 = and i32 %11898, 255
  %11900 = call i32 @llvm.ctpop.i32(i32 %11899)
  %11901 = trunc i32 %11900 to i8
  %11902 = and i8 %11901, 1
  %11903 = xor i8 %11902, 1
  %11904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11903, i8* %11904, align 1
  %11905 = xor i64 128, %11889
  %11906 = xor i64 %11905, %11892
  %11907 = lshr i64 %11906, 4
  %11908 = trunc i64 %11907 to i8
  %11909 = and i8 %11908, 1
  %11910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11909, i8* %11910, align 1
  %11911 = icmp eq i64 %11892, 0
  %11912 = zext i1 %11911 to i8
  %11913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11912, i8* %11913, align 1
  %11914 = lshr i64 %11892, 63
  %11915 = trunc i64 %11914 to i8
  %11916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11915, i8* %11916, align 1
  %11917 = lshr i64 %11889, 63
  %11918 = xor i64 %11914, %11917
  %11919 = add i64 %11918, %11914
  %11920 = icmp eq i64 %11919, 2
  %11921 = zext i1 %11920 to i8
  %11922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11921, i8* %11922, align 1
  store %struct.Memory* %loadMem_434406, %struct.Memory** %MEMORY
  %loadMem_43440c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11924 = getelementptr inbounds %struct.GPR, %struct.GPR* %11923, i32 0, i32 33
  %11925 = getelementptr inbounds %struct.Reg, %struct.Reg* %11924, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %11925 to i64*
  %11926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11927 = getelementptr inbounds %struct.GPR, %struct.GPR* %11926, i32 0, i32 5
  %11928 = getelementptr inbounds %struct.Reg, %struct.Reg* %11927, i32 0, i32 0
  %RCX.i242 = bitcast %union.anon* %11928 to i64*
  %11929 = load i64, i64* %PC.i241
  %11930 = add i64 %11929, 8
  store i64 %11930, i64* %PC.i241
  %11931 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11931, i64* %RCX.i242, align 8
  store %struct.Memory* %loadMem_43440c, %struct.Memory** %MEMORY
  %loadMem_434414 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11933 = getelementptr inbounds %struct.GPR, %struct.GPR* %11932, i32 0, i32 33
  %11934 = getelementptr inbounds %struct.Reg, %struct.Reg* %11933, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %11934 to i64*
  %11935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11936 = getelementptr inbounds %struct.GPR, %struct.GPR* %11935, i32 0, i32 5
  %11937 = getelementptr inbounds %struct.Reg, %struct.Reg* %11936, i32 0, i32 0
  %RCX.i239 = bitcast %union.anon* %11937 to i64*
  %11938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11939 = getelementptr inbounds %struct.GPR, %struct.GPR* %11938, i32 0, i32 9
  %11940 = getelementptr inbounds %struct.Reg, %struct.Reg* %11939, i32 0, i32 0
  %RSI.i240 = bitcast %union.anon* %11940 to i64*
  %11941 = load i64, i64* %RCX.i239
  %11942 = add i64 %11941, 72488
  %11943 = load i64, i64* %PC.i238
  %11944 = add i64 %11943, 6
  store i64 %11944, i64* %PC.i238
  %11945 = inttoptr i64 %11942 to i32*
  %11946 = load i32, i32* %11945
  %11947 = zext i32 %11946 to i64
  store i64 %11947, i64* %RSI.i240, align 8
  store %struct.Memory* %loadMem_434414, %struct.Memory** %MEMORY
  %loadMem_43441a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11949 = getelementptr inbounds %struct.GPR, %struct.GPR* %11948, i32 0, i32 33
  %11950 = getelementptr inbounds %struct.Reg, %struct.Reg* %11949, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %11950 to i64*
  %11951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11952 = getelementptr inbounds %struct.GPR, %struct.GPR* %11951, i32 0, i32 5
  %11953 = getelementptr inbounds %struct.Reg, %struct.Reg* %11952, i32 0, i32 0
  %RCX.i237 = bitcast %union.anon* %11953 to i64*
  %11954 = load i64, i64* %PC.i236
  %11955 = add i64 %11954, 8
  store i64 %11955, i64* %PC.i236
  %11956 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11956, i64* %RCX.i237, align 8
  store %struct.Memory* %loadMem_43441a, %struct.Memory** %MEMORY
  %loadMem_434422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11958 = getelementptr inbounds %struct.GPR, %struct.GPR* %11957, i32 0, i32 33
  %11959 = getelementptr inbounds %struct.Reg, %struct.Reg* %11958, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %11959 to i64*
  %11960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11961 = getelementptr inbounds %struct.GPR, %struct.GPR* %11960, i32 0, i32 5
  %11962 = getelementptr inbounds %struct.Reg, %struct.Reg* %11961, i32 0, i32 0
  %RCX.i234 = bitcast %union.anon* %11962 to i64*
  %11963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11964 = getelementptr inbounds %struct.GPR, %struct.GPR* %11963, i32 0, i32 11
  %11965 = getelementptr inbounds %struct.Reg, %struct.Reg* %11964, i32 0, i32 0
  %RDI.i235 = bitcast %union.anon* %11965 to i64*
  %11966 = load i64, i64* %RCX.i234
  %11967 = add i64 %11966, 72692
  %11968 = load i64, i64* %PC.i233
  %11969 = add i64 %11968, 6
  store i64 %11969, i64* %PC.i233
  %11970 = inttoptr i64 %11967 to i32*
  %11971 = load i32, i32* %11970
  %11972 = zext i32 %11971 to i64
  store i64 %11972, i64* %RDI.i235, align 8
  store %struct.Memory* %loadMem_434422, %struct.Memory** %MEMORY
  %loadMem_434428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11974 = getelementptr inbounds %struct.GPR, %struct.GPR* %11973, i32 0, i32 33
  %11975 = getelementptr inbounds %struct.Reg, %struct.Reg* %11974, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %11975 to i64*
  %11976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11977 = getelementptr inbounds %struct.GPR, %struct.GPR* %11976, i32 0, i32 11
  %11978 = getelementptr inbounds %struct.Reg, %struct.Reg* %11977, i32 0, i32 0
  %RDI.i232 = bitcast %union.anon* %11978 to i64*
  %11979 = load i64, i64* %RDI.i232
  %11980 = load i64, i64* %PC.i231
  %11981 = add i64 %11980, 3
  store i64 %11981, i64* %PC.i231
  %11982 = trunc i64 %11979 to i32
  %11983 = add i32 4, %11982
  %11984 = zext i32 %11983 to i64
  store i64 %11984, i64* %RDI.i232, align 8
  %11985 = icmp ult i32 %11983, %11982
  %11986 = icmp ult i32 %11983, 4
  %11987 = or i1 %11985, %11986
  %11988 = zext i1 %11987 to i8
  %11989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11988, i8* %11989, align 1
  %11990 = and i32 %11983, 255
  %11991 = call i32 @llvm.ctpop.i32(i32 %11990)
  %11992 = trunc i32 %11991 to i8
  %11993 = and i8 %11992, 1
  %11994 = xor i8 %11993, 1
  %11995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11994, i8* %11995, align 1
  %11996 = xor i64 4, %11979
  %11997 = trunc i64 %11996 to i32
  %11998 = xor i32 %11997, %11983
  %11999 = lshr i32 %11998, 4
  %12000 = trunc i32 %11999 to i8
  %12001 = and i8 %12000, 1
  %12002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12001, i8* %12002, align 1
  %12003 = icmp eq i32 %11983, 0
  %12004 = zext i1 %12003 to i8
  %12005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12004, i8* %12005, align 1
  %12006 = lshr i32 %11983, 31
  %12007 = trunc i32 %12006 to i8
  %12008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12007, i8* %12008, align 1
  %12009 = lshr i32 %11982, 31
  %12010 = xor i32 %12006, %12009
  %12011 = add i32 %12010, %12006
  %12012 = icmp eq i32 %12011, 2
  %12013 = zext i1 %12012 to i8
  %12014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12013, i8* %12014, align 1
  store %struct.Memory* %loadMem_434428, %struct.Memory** %MEMORY
  %loadMem_43442b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12016 = getelementptr inbounds %struct.GPR, %struct.GPR* %12015, i32 0, i32 33
  %12017 = getelementptr inbounds %struct.Reg, %struct.Reg* %12016, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %12017 to i64*
  %12018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12019 = getelementptr inbounds %struct.GPR, %struct.GPR* %12018, i32 0, i32 11
  %12020 = getelementptr inbounds %struct.Reg, %struct.Reg* %12019, i32 0, i32 0
  %EDI.i229 = bitcast %union.anon* %12020 to i32*
  %12021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12022 = getelementptr inbounds %struct.GPR, %struct.GPR* %12021, i32 0, i32 15
  %12023 = getelementptr inbounds %struct.Reg, %struct.Reg* %12022, i32 0, i32 0
  %RBP.i230 = bitcast %union.anon* %12023 to i64*
  %12024 = load i64, i64* %RBP.i230
  %12025 = sub i64 %12024, 292
  %12026 = load i32, i32* %EDI.i229
  %12027 = zext i32 %12026 to i64
  %12028 = load i64, i64* %PC.i228
  %12029 = add i64 %12028, 6
  store i64 %12029, i64* %PC.i228
  %12030 = inttoptr i64 %12025 to i32*
  store i32 %12026, i32* %12030
  store %struct.Memory* %loadMem_43442b, %struct.Memory** %MEMORY
  %loadMem_434431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12032 = getelementptr inbounds %struct.GPR, %struct.GPR* %12031, i32 0, i32 33
  %12033 = getelementptr inbounds %struct.Reg, %struct.Reg* %12032, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %12033 to i64*
  %12034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12035 = getelementptr inbounds %struct.GPR, %struct.GPR* %12034, i32 0, i32 1
  %12036 = getelementptr inbounds %struct.Reg, %struct.Reg* %12035, i32 0, i32 0
  %RAX.i226 = bitcast %union.anon* %12036 to i64*
  %12037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12038 = getelementptr inbounds %struct.GPR, %struct.GPR* %12037, i32 0, i32 11
  %12039 = getelementptr inbounds %struct.Reg, %struct.Reg* %12038, i32 0, i32 0
  %RDI.i227 = bitcast %union.anon* %12039 to i64*
  %12040 = load i64, i64* %RAX.i226
  %12041 = load i64, i64* %PC.i225
  %12042 = add i64 %12041, 3
  store i64 %12042, i64* %PC.i225
  store i64 %12040, i64* %RDI.i227, align 8
  store %struct.Memory* %loadMem_434431, %struct.Memory** %MEMORY
  %loadMem_434434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12044 = getelementptr inbounds %struct.GPR, %struct.GPR* %12043, i32 0, i32 33
  %12045 = getelementptr inbounds %struct.Reg, %struct.Reg* %12044, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %12045 to i64*
  %12046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12047 = getelementptr inbounds %struct.GPR, %struct.GPR* %12046, i32 0, i32 5
  %12048 = getelementptr inbounds %struct.Reg, %struct.Reg* %12047, i32 0, i32 0
  %RCX.i223 = bitcast %union.anon* %12048 to i64*
  %12049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12050 = getelementptr inbounds %struct.GPR, %struct.GPR* %12049, i32 0, i32 15
  %12051 = getelementptr inbounds %struct.Reg, %struct.Reg* %12050, i32 0, i32 0
  %RBP.i224 = bitcast %union.anon* %12051 to i64*
  %12052 = load i64, i64* %RBP.i224
  %12053 = sub i64 %12052, 292
  %12054 = load i64, i64* %PC.i222
  %12055 = add i64 %12054, 6
  store i64 %12055, i64* %PC.i222
  %12056 = inttoptr i64 %12053 to i32*
  %12057 = load i32, i32* %12056
  %12058 = zext i32 %12057 to i64
  store i64 %12058, i64* %RCX.i223, align 8
  store %struct.Memory* %loadMem_434434, %struct.Memory** %MEMORY
  %loadMem1_43443a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12060 = getelementptr inbounds %struct.GPR, %struct.GPR* %12059, i32 0, i32 33
  %12061 = getelementptr inbounds %struct.Reg, %struct.Reg* %12060, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %12061 to i64*
  %12062 = load i64, i64* %PC.i221
  %12063 = add i64 %12062, 153158
  %12064 = load i64, i64* %PC.i221
  %12065 = add i64 %12064, 5
  %12066 = load i64, i64* %PC.i221
  %12067 = add i64 %12066, 5
  store i64 %12067, i64* %PC.i221
  %12068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12069 = load i64, i64* %12068, align 8
  %12070 = add i64 %12069, -8
  %12071 = inttoptr i64 %12070 to i64*
  store i64 %12065, i64* %12071
  store i64 %12070, i64* %12068, align 8
  %12072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12063, i64* %12072, align 8
  store %struct.Memory* %loadMem1_43443a, %struct.Memory** %MEMORY
  %loadMem2_43443a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43443a = load i64, i64* %3
  %call2_43443a = call %struct.Memory* @sub_459a80.get_mem3Dint(%struct.State* %0, i64 %loadPC_43443a, %struct.Memory* %loadMem2_43443a)
  store %struct.Memory* %call2_43443a, %struct.Memory** %MEMORY
  %loadMem_43443f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12074 = getelementptr inbounds %struct.GPR, %struct.GPR* %12073, i32 0, i32 33
  %12075 = getelementptr inbounds %struct.Reg, %struct.Reg* %12074, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %12075 to i64*
  %12076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12077 = getelementptr inbounds %struct.GPR, %struct.GPR* %12076, i32 0, i32 1
  %12078 = getelementptr inbounds %struct.Reg, %struct.Reg* %12077, i32 0, i32 0
  %EAX.i219 = bitcast %union.anon* %12078 to i32*
  %12079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12080 = getelementptr inbounds %struct.GPR, %struct.GPR* %12079, i32 0, i32 15
  %12081 = getelementptr inbounds %struct.Reg, %struct.Reg* %12080, i32 0, i32 0
  %RBP.i220 = bitcast %union.anon* %12081 to i64*
  %12082 = load i64, i64* %RBP.i220
  %12083 = sub i64 %12082, 296
  %12084 = load i32, i32* %EAX.i219
  %12085 = zext i32 %12084 to i64
  %12086 = load i64, i64* %PC.i218
  %12087 = add i64 %12086, 6
  store i64 %12087, i64* %PC.i218
  %12088 = inttoptr i64 %12083 to i32*
  store i32 %12084, i32* %12088
  store %struct.Memory* %loadMem_43443f, %struct.Memory** %MEMORY
  %loadMem1_434445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12090 = getelementptr inbounds %struct.GPR, %struct.GPR* %12089, i32 0, i32 33
  %12091 = getelementptr inbounds %struct.Reg, %struct.Reg* %12090, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %12091 to i64*
  %12092 = load i64, i64* %PC.i217
  %12093 = add i64 %12092, 17419
  %12094 = load i64, i64* %PC.i217
  %12095 = add i64 %12094, 5
  %12096 = load i64, i64* %PC.i217
  %12097 = add i64 %12096, 5
  store i64 %12097, i64* %PC.i217
  %12098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12099 = load i64, i64* %12098, align 8
  %12100 = add i64 %12099, -8
  %12101 = inttoptr i64 %12100 to i64*
  store i64 %12095, i64* %12101
  store i64 %12100, i64* %12098, align 8
  %12102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12093, i64* %12102, align 8
  store %struct.Memory* %loadMem1_434445, %struct.Memory** %MEMORY
  %loadMem2_434445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_434445 = load i64, i64* %3
  %call2_434445 = call %struct.Memory* @sub_438850.CAVLC_init(%struct.State* %0, i64 %loadPC_434445, %struct.Memory* %loadMem2_434445)
  store %struct.Memory* %call2_434445, %struct.Memory** %MEMORY
  %loadMem_43444a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12104 = getelementptr inbounds %struct.GPR, %struct.GPR* %12103, i32 0, i32 33
  %12105 = getelementptr inbounds %struct.Reg, %struct.Reg* %12104, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %12105 to i64*
  %12106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12107 = getelementptr inbounds %struct.GPR, %struct.GPR* %12106, i32 0, i32 15
  %12108 = getelementptr inbounds %struct.Reg, %struct.Reg* %12107, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %12108 to i64*
  %12109 = load i64, i64* %RBP.i216
  %12110 = sub i64 %12109, 28
  %12111 = load i64, i64* %PC.i215
  %12112 = add i64 %12111, 7
  store i64 %12112, i64* %PC.i215
  %12113 = inttoptr i64 %12110 to i32*
  store i32 0, i32* %12113
  store %struct.Memory* %loadMem_43444a, %struct.Memory** %MEMORY
  br label %block_.L_434451

block_.L_434451:                                  ; preds = %block_.L_434501, %block_.L_4343f9
  %loadMem_434451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12115 = getelementptr inbounds %struct.GPR, %struct.GPR* %12114, i32 0, i32 33
  %12116 = getelementptr inbounds %struct.Reg, %struct.Reg* %12115, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %12116 to i64*
  %12117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12118 = getelementptr inbounds %struct.GPR, %struct.GPR* %12117, i32 0, i32 1
  %12119 = getelementptr inbounds %struct.Reg, %struct.Reg* %12118, i32 0, i32 0
  %RAX.i214 = bitcast %union.anon* %12119 to i64*
  %12120 = load i64, i64* %PC.i213
  %12121 = add i64 %12120, 5
  store i64 %12121, i64* %PC.i213
  store i64 4, i64* %RAX.i214, align 8
  store %struct.Memory* %loadMem_434451, %struct.Memory** %MEMORY
  %loadMem_434456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12123 = getelementptr inbounds %struct.GPR, %struct.GPR* %12122, i32 0, i32 33
  %12124 = getelementptr inbounds %struct.Reg, %struct.Reg* %12123, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %12124 to i64*
  %12125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12126 = getelementptr inbounds %struct.GPR, %struct.GPR* %12125, i32 0, i32 5
  %12127 = getelementptr inbounds %struct.Reg, %struct.Reg* %12126, i32 0, i32 0
  %RCX.i211 = bitcast %union.anon* %12127 to i64*
  %12128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12129 = getelementptr inbounds %struct.GPR, %struct.GPR* %12128, i32 0, i32 15
  %12130 = getelementptr inbounds %struct.Reg, %struct.Reg* %12129, i32 0, i32 0
  %RBP.i212 = bitcast %union.anon* %12130 to i64*
  %12131 = load i64, i64* %RBP.i212
  %12132 = sub i64 %12131, 28
  %12133 = load i64, i64* %PC.i210
  %12134 = add i64 %12133, 3
  store i64 %12134, i64* %PC.i210
  %12135 = inttoptr i64 %12132 to i32*
  %12136 = load i32, i32* %12135
  %12137 = zext i32 %12136 to i64
  store i64 %12137, i64* %RCX.i211, align 8
  store %struct.Memory* %loadMem_434456, %struct.Memory** %MEMORY
  %loadMem_434459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12139 = getelementptr inbounds %struct.GPR, %struct.GPR* %12138, i32 0, i32 33
  %12140 = getelementptr inbounds %struct.Reg, %struct.Reg* %12139, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %12140 to i64*
  %12141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12142 = getelementptr inbounds %struct.GPR, %struct.GPR* %12141, i32 0, i32 7
  %12143 = getelementptr inbounds %struct.Reg, %struct.Reg* %12142, i32 0, i32 0
  %RDX.i209 = bitcast %union.anon* %12143 to i64*
  %12144 = load i64, i64* %PC.i208
  %12145 = add i64 %12144, 8
  store i64 %12145, i64* %PC.i208
  %12146 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12146, i64* %RDX.i209, align 8
  store %struct.Memory* %loadMem_434459, %struct.Memory** %MEMORY
  %loadMem_434461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12148 = getelementptr inbounds %struct.GPR, %struct.GPR* %12147, i32 0, i32 33
  %12149 = getelementptr inbounds %struct.Reg, %struct.Reg* %12148, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %12149 to i64*
  %12150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12151 = getelementptr inbounds %struct.GPR, %struct.GPR* %12150, i32 0, i32 7
  %12152 = getelementptr inbounds %struct.Reg, %struct.Reg* %12151, i32 0, i32 0
  %RDX.i206 = bitcast %union.anon* %12152 to i64*
  %12153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12154 = getelementptr inbounds %struct.GPR, %struct.GPR* %12153, i32 0, i32 9
  %12155 = getelementptr inbounds %struct.Reg, %struct.Reg* %12154, i32 0, i32 0
  %RSI.i207 = bitcast %union.anon* %12155 to i64*
  %12156 = load i64, i64* %RDX.i206
  %12157 = add i64 %12156, 52
  %12158 = load i64, i64* %PC.i205
  %12159 = add i64 %12158, 3
  store i64 %12159, i64* %PC.i205
  %12160 = inttoptr i64 %12157 to i32*
  %12161 = load i32, i32* %12160
  %12162 = zext i32 %12161 to i64
  store i64 %12162, i64* %RSI.i207, align 8
  store %struct.Memory* %loadMem_434461, %struct.Memory** %MEMORY
  %loadMem_434464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12164 = getelementptr inbounds %struct.GPR, %struct.GPR* %12163, i32 0, i32 33
  %12165 = getelementptr inbounds %struct.Reg, %struct.Reg* %12164, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %12165 to i64*
  %12166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12167 = getelementptr inbounds %struct.GPR, %struct.GPR* %12166, i32 0, i32 1
  %12168 = getelementptr inbounds %struct.Reg, %struct.Reg* %12167, i32 0, i32 0
  %EAX.i203 = bitcast %union.anon* %12168 to i32*
  %12169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12170 = getelementptr inbounds %struct.GPR, %struct.GPR* %12169, i32 0, i32 15
  %12171 = getelementptr inbounds %struct.Reg, %struct.Reg* %12170, i32 0, i32 0
  %RBP.i204 = bitcast %union.anon* %12171 to i64*
  %12172 = load i64, i64* %RBP.i204
  %12173 = sub i64 %12172, 300
  %12174 = load i32, i32* %EAX.i203
  %12175 = zext i32 %12174 to i64
  %12176 = load i64, i64* %PC.i202
  %12177 = add i64 %12176, 6
  store i64 %12177, i64* %PC.i202
  %12178 = inttoptr i64 %12173 to i32*
  store i32 %12174, i32* %12178
  store %struct.Memory* %loadMem_434464, %struct.Memory** %MEMORY
  %loadMem_43446a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12180 = getelementptr inbounds %struct.GPR, %struct.GPR* %12179, i32 0, i32 33
  %12181 = getelementptr inbounds %struct.Reg, %struct.Reg* %12180, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %12181 to i64*
  %12182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12183 = getelementptr inbounds %struct.GPR, %struct.GPR* %12182, i32 0, i32 9
  %12184 = getelementptr inbounds %struct.Reg, %struct.Reg* %12183, i32 0, i32 0
  %ESI.i200 = bitcast %union.anon* %12184 to i32*
  %12185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12186 = getelementptr inbounds %struct.GPR, %struct.GPR* %12185, i32 0, i32 1
  %12187 = getelementptr inbounds %struct.Reg, %struct.Reg* %12186, i32 0, i32 0
  %RAX.i201 = bitcast %union.anon* %12187 to i64*
  %12188 = load i32, i32* %ESI.i200
  %12189 = zext i32 %12188 to i64
  %12190 = load i64, i64* %PC.i199
  %12191 = add i64 %12190, 2
  store i64 %12191, i64* %PC.i199
  %12192 = and i64 %12189, 4294967295
  store i64 %12192, i64* %RAX.i201, align 8
  store %struct.Memory* %loadMem_43446a, %struct.Memory** %MEMORY
  %loadMem_43446c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12194 = getelementptr inbounds %struct.GPR, %struct.GPR* %12193, i32 0, i32 33
  %12195 = getelementptr inbounds %struct.Reg, %struct.Reg* %12194, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %12195 to i64*
  %12196 = load i64, i64* %PC.i198
  %12197 = add i64 %12196, 1
  store i64 %12197, i64* %PC.i198
  %12198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %12199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12200 = bitcast %union.anon* %12199 to i32*
  %12201 = load i32, i32* %12200, align 8
  %12202 = sext i32 %12201 to i64
  %12203 = lshr i64 %12202, 32
  store i64 %12203, i64* %12198, align 8
  store %struct.Memory* %loadMem_43446c, %struct.Memory** %MEMORY
  %loadMem_43446d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12205 = getelementptr inbounds %struct.GPR, %struct.GPR* %12204, i32 0, i32 33
  %12206 = getelementptr inbounds %struct.Reg, %struct.Reg* %12205, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %12206 to i64*
  %12207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12208 = getelementptr inbounds %struct.GPR, %struct.GPR* %12207, i32 0, i32 9
  %12209 = getelementptr inbounds %struct.Reg, %struct.Reg* %12208, i32 0, i32 0
  %RSI.i196 = bitcast %union.anon* %12209 to i64*
  %12210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12211 = getelementptr inbounds %struct.GPR, %struct.GPR* %12210, i32 0, i32 15
  %12212 = getelementptr inbounds %struct.Reg, %struct.Reg* %12211, i32 0, i32 0
  %RBP.i197 = bitcast %union.anon* %12212 to i64*
  %12213 = load i64, i64* %RBP.i197
  %12214 = sub i64 %12213, 300
  %12215 = load i64, i64* %PC.i195
  %12216 = add i64 %12215, 6
  store i64 %12216, i64* %PC.i195
  %12217 = inttoptr i64 %12214 to i32*
  %12218 = load i32, i32* %12217
  %12219 = zext i32 %12218 to i64
  store i64 %12219, i64* %RSI.i196, align 8
  store %struct.Memory* %loadMem_43446d, %struct.Memory** %MEMORY
  %loadMem_434473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12221 = getelementptr inbounds %struct.GPR, %struct.GPR* %12220, i32 0, i32 33
  %12222 = getelementptr inbounds %struct.Reg, %struct.Reg* %12221, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %12222 to i64*
  %12223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12224 = getelementptr inbounds %struct.GPR, %struct.GPR* %12223, i32 0, i32 9
  %12225 = getelementptr inbounds %struct.Reg, %struct.Reg* %12224, i32 0, i32 0
  %ESI.i191 = bitcast %union.anon* %12225 to i32*
  %12226 = load i32, i32* %ESI.i191
  %12227 = zext i32 %12226 to i64
  %12228 = load i64, i64* %PC.i190
  %12229 = add i64 %12228, 2
  store i64 %12229, i64* %PC.i190
  %12230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12231 = bitcast %union.anon* %12230 to i32*
  %12232 = load i32, i32* %12231, align 8
  %12233 = zext i32 %12232 to i64
  %12234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %12235 = bitcast %union.anon* %12234 to i32*
  %12236 = load i32, i32* %12235, align 8
  %12237 = zext i32 %12236 to i64
  %12238 = shl i64 %12227, 32
  %12239 = ashr exact i64 %12238, 32
  %12240 = shl i64 %12237, 32
  %12241 = or i64 %12240, %12233
  %12242 = sdiv i64 %12241, %12239
  %12243 = shl i64 %12242, 32
  %12244 = ashr exact i64 %12243, 32
  %12245 = icmp eq i64 %12242, %12244
  br i1 %12245, label %12250, label %12246

; <label>:12246:                                  ; preds = %block_.L_434451
  %12247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12248 = load i64, i64* %12247, align 8
  %12249 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %12248, %struct.Memory* %loadMem_434473)
  br label %routine_idivl__esi.exit192

; <label>:12250:                                  ; preds = %block_.L_434451
  %12251 = srem i64 %12241, %12239
  %12252 = getelementptr inbounds %union.anon, %union.anon* %12230, i64 0, i32 0
  %12253 = and i64 %12242, 4294967295
  store i64 %12253, i64* %12252, align 8
  %12254 = getelementptr inbounds %union.anon, %union.anon* %12234, i64 0, i32 0
  %12255 = and i64 %12251, 4294967295
  store i64 %12255, i64* %12254, align 8
  %12256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12256, align 1
  %12257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %12257, align 1
  %12258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12258, align 1
  %12259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12259, align 1
  %12260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12260, align 1
  %12261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12261, align 1
  br label %routine_idivl__esi.exit192

routine_idivl__esi.exit192:                       ; preds = %12246, %12250
  %12262 = phi %struct.Memory* [ %12249, %12246 ], [ %loadMem_434473, %12250 ]
  store %struct.Memory* %12262, %struct.Memory** %MEMORY
  %loadMem_434475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12264 = getelementptr inbounds %struct.GPR, %struct.GPR* %12263, i32 0, i32 33
  %12265 = getelementptr inbounds %struct.Reg, %struct.Reg* %12264, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %12265 to i64*
  %12266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12267 = getelementptr inbounds %struct.GPR, %struct.GPR* %12266, i32 0, i32 1
  %12268 = getelementptr inbounds %struct.Reg, %struct.Reg* %12267, i32 0, i32 0
  %EAX.i188 = bitcast %union.anon* %12268 to i32*
  %12269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12270 = getelementptr inbounds %struct.GPR, %struct.GPR* %12269, i32 0, i32 5
  %12271 = getelementptr inbounds %struct.Reg, %struct.Reg* %12270, i32 0, i32 0
  %ECX.i189 = bitcast %union.anon* %12271 to i32*
  %12272 = load i32, i32* %ECX.i189
  %12273 = zext i32 %12272 to i64
  %12274 = load i32, i32* %EAX.i188
  %12275 = zext i32 %12274 to i64
  %12276 = load i64, i64* %PC.i187
  %12277 = add i64 %12276, 2
  store i64 %12277, i64* %PC.i187
  %12278 = sub i32 %12272, %12274
  %12279 = icmp ult i32 %12272, %12274
  %12280 = zext i1 %12279 to i8
  %12281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12280, i8* %12281, align 1
  %12282 = and i32 %12278, 255
  %12283 = call i32 @llvm.ctpop.i32(i32 %12282)
  %12284 = trunc i32 %12283 to i8
  %12285 = and i8 %12284, 1
  %12286 = xor i8 %12285, 1
  %12287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12286, i8* %12287, align 1
  %12288 = xor i64 %12275, %12273
  %12289 = trunc i64 %12288 to i32
  %12290 = xor i32 %12289, %12278
  %12291 = lshr i32 %12290, 4
  %12292 = trunc i32 %12291 to i8
  %12293 = and i8 %12292, 1
  %12294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12293, i8* %12294, align 1
  %12295 = icmp eq i32 %12278, 0
  %12296 = zext i1 %12295 to i8
  %12297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12296, i8* %12297, align 1
  %12298 = lshr i32 %12278, 31
  %12299 = trunc i32 %12298 to i8
  %12300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12299, i8* %12300, align 1
  %12301 = lshr i32 %12272, 31
  %12302 = lshr i32 %12274, 31
  %12303 = xor i32 %12302, %12301
  %12304 = xor i32 %12298, %12301
  %12305 = add i32 %12304, %12303
  %12306 = icmp eq i32 %12305, 2
  %12307 = zext i1 %12306 to i8
  %12308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12307, i8* %12308, align 1
  store %struct.Memory* %loadMem_434475, %struct.Memory** %MEMORY
  %loadMem_434477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12310 = getelementptr inbounds %struct.GPR, %struct.GPR* %12309, i32 0, i32 33
  %12311 = getelementptr inbounds %struct.Reg, %struct.Reg* %12310, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %12311 to i64*
  %12312 = load i64, i64* %PC.i186
  %12313 = add i64 %12312, 152
  %12314 = load i64, i64* %PC.i186
  %12315 = add i64 %12314, 6
  %12316 = load i64, i64* %PC.i186
  %12317 = add i64 %12316, 6
  store i64 %12317, i64* %PC.i186
  %12318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12319 = load i8, i8* %12318, align 1
  %12320 = icmp ne i8 %12319, 0
  %12321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12322 = load i8, i8* %12321, align 1
  %12323 = icmp ne i8 %12322, 0
  %12324 = xor i1 %12320, %12323
  %12325 = xor i1 %12324, true
  %12326 = zext i1 %12325 to i8
  store i8 %12326, i8* %BRANCH_TAKEN, align 1
  %12327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12328 = select i1 %12324, i64 %12315, i64 %12313
  store i64 %12328, i64* %12327, align 8
  store %struct.Memory* %loadMem_434477, %struct.Memory** %MEMORY
  %loadBr_434477 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_434477 = icmp eq i8 %loadBr_434477, 1
  br i1 %cmpBr_434477, label %block_.L_43450f, label %block_43447d

block_43447d:                                     ; preds = %routine_idivl__esi.exit192
  %loadMem_43447d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12330 = getelementptr inbounds %struct.GPR, %struct.GPR* %12329, i32 0, i32 33
  %12331 = getelementptr inbounds %struct.Reg, %struct.Reg* %12330, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %12331 to i64*
  %12332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12333 = getelementptr inbounds %struct.GPR, %struct.GPR* %12332, i32 0, i32 15
  %12334 = getelementptr inbounds %struct.Reg, %struct.Reg* %12333, i32 0, i32 0
  %RBP.i185 = bitcast %union.anon* %12334 to i64*
  %12335 = load i64, i64* %RBP.i185
  %12336 = sub i64 %12335, 32
  %12337 = load i64, i64* %PC.i184
  %12338 = add i64 %12337, 7
  store i64 %12338, i64* %PC.i184
  %12339 = inttoptr i64 %12336 to i32*
  store i32 0, i32* %12339
  store %struct.Memory* %loadMem_43447d, %struct.Memory** %MEMORY
  br label %block_.L_434484

block_.L_434484:                                  ; preds = %block_4344b0, %block_43447d
  %loadMem_434484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12341 = getelementptr inbounds %struct.GPR, %struct.GPR* %12340, i32 0, i32 33
  %12342 = getelementptr inbounds %struct.Reg, %struct.Reg* %12341, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %12342 to i64*
  %12343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12344 = getelementptr inbounds %struct.GPR, %struct.GPR* %12343, i32 0, i32 1
  %12345 = getelementptr inbounds %struct.Reg, %struct.Reg* %12344, i32 0, i32 0
  %RAX.i183 = bitcast %union.anon* %12345 to i64*
  %12346 = load i64, i64* %PC.i182
  %12347 = add i64 %12346, 5
  store i64 %12347, i64* %PC.i182
  store i64 4, i64* %RAX.i183, align 8
  store %struct.Memory* %loadMem_434484, %struct.Memory** %MEMORY
  %loadMem_434489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12349 = getelementptr inbounds %struct.GPR, %struct.GPR* %12348, i32 0, i32 33
  %12350 = getelementptr inbounds %struct.Reg, %struct.Reg* %12349, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %12350 to i64*
  %12351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12352 = getelementptr inbounds %struct.GPR, %struct.GPR* %12351, i32 0, i32 5
  %12353 = getelementptr inbounds %struct.Reg, %struct.Reg* %12352, i32 0, i32 0
  %RCX.i180 = bitcast %union.anon* %12353 to i64*
  %12354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12355 = getelementptr inbounds %struct.GPR, %struct.GPR* %12354, i32 0, i32 15
  %12356 = getelementptr inbounds %struct.Reg, %struct.Reg* %12355, i32 0, i32 0
  %RBP.i181 = bitcast %union.anon* %12356 to i64*
  %12357 = load i64, i64* %RBP.i181
  %12358 = sub i64 %12357, 32
  %12359 = load i64, i64* %PC.i179
  %12360 = add i64 %12359, 3
  store i64 %12360, i64* %PC.i179
  %12361 = inttoptr i64 %12358 to i32*
  %12362 = load i32, i32* %12361
  %12363 = zext i32 %12362 to i64
  store i64 %12363, i64* %RCX.i180, align 8
  store %struct.Memory* %loadMem_434489, %struct.Memory** %MEMORY
  %loadMem_43448c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12365 = getelementptr inbounds %struct.GPR, %struct.GPR* %12364, i32 0, i32 33
  %12366 = getelementptr inbounds %struct.Reg, %struct.Reg* %12365, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %12366 to i64*
  %12367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12368 = getelementptr inbounds %struct.GPR, %struct.GPR* %12367, i32 0, i32 7
  %12369 = getelementptr inbounds %struct.Reg, %struct.Reg* %12368, i32 0, i32 0
  %RDX.i178 = bitcast %union.anon* %12369 to i64*
  %12370 = load i64, i64* %PC.i177
  %12371 = add i64 %12370, 8
  store i64 %12371, i64* %PC.i177
  %12372 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12372, i64* %RDX.i178, align 8
  store %struct.Memory* %loadMem_43448c, %struct.Memory** %MEMORY
  %loadMem_434494 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12374 = getelementptr inbounds %struct.GPR, %struct.GPR* %12373, i32 0, i32 33
  %12375 = getelementptr inbounds %struct.Reg, %struct.Reg* %12374, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %12375 to i64*
  %12376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12377 = getelementptr inbounds %struct.GPR, %struct.GPR* %12376, i32 0, i32 7
  %12378 = getelementptr inbounds %struct.Reg, %struct.Reg* %12377, i32 0, i32 0
  %RDX.i175 = bitcast %union.anon* %12378 to i64*
  %12379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12380 = getelementptr inbounds %struct.GPR, %struct.GPR* %12379, i32 0, i32 9
  %12381 = getelementptr inbounds %struct.Reg, %struct.Reg* %12380, i32 0, i32 0
  %RSI.i176 = bitcast %union.anon* %12381 to i64*
  %12382 = load i64, i64* %RDX.i175
  %12383 = add i64 %12382, 60
  %12384 = load i64, i64* %PC.i174
  %12385 = add i64 %12384, 3
  store i64 %12385, i64* %PC.i174
  %12386 = inttoptr i64 %12383 to i32*
  %12387 = load i32, i32* %12386
  %12388 = zext i32 %12387 to i64
  store i64 %12388, i64* %RSI.i176, align 8
  store %struct.Memory* %loadMem_434494, %struct.Memory** %MEMORY
  %loadMem_434497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12390 = getelementptr inbounds %struct.GPR, %struct.GPR* %12389, i32 0, i32 33
  %12391 = getelementptr inbounds %struct.Reg, %struct.Reg* %12390, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %12391 to i64*
  %12392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12393 = getelementptr inbounds %struct.GPR, %struct.GPR* %12392, i32 0, i32 1
  %12394 = getelementptr inbounds %struct.Reg, %struct.Reg* %12393, i32 0, i32 0
  %EAX.i172 = bitcast %union.anon* %12394 to i32*
  %12395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12396 = getelementptr inbounds %struct.GPR, %struct.GPR* %12395, i32 0, i32 15
  %12397 = getelementptr inbounds %struct.Reg, %struct.Reg* %12396, i32 0, i32 0
  %RBP.i173 = bitcast %union.anon* %12397 to i64*
  %12398 = load i64, i64* %RBP.i173
  %12399 = sub i64 %12398, 304
  %12400 = load i32, i32* %EAX.i172
  %12401 = zext i32 %12400 to i64
  %12402 = load i64, i64* %PC.i171
  %12403 = add i64 %12402, 6
  store i64 %12403, i64* %PC.i171
  %12404 = inttoptr i64 %12399 to i32*
  store i32 %12400, i32* %12404
  store %struct.Memory* %loadMem_434497, %struct.Memory** %MEMORY
  %loadMem_43449d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12406 = getelementptr inbounds %struct.GPR, %struct.GPR* %12405, i32 0, i32 33
  %12407 = getelementptr inbounds %struct.Reg, %struct.Reg* %12406, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %12407 to i64*
  %12408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12409 = getelementptr inbounds %struct.GPR, %struct.GPR* %12408, i32 0, i32 9
  %12410 = getelementptr inbounds %struct.Reg, %struct.Reg* %12409, i32 0, i32 0
  %ESI.i169 = bitcast %union.anon* %12410 to i32*
  %12411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12412 = getelementptr inbounds %struct.GPR, %struct.GPR* %12411, i32 0, i32 1
  %12413 = getelementptr inbounds %struct.Reg, %struct.Reg* %12412, i32 0, i32 0
  %RAX.i170 = bitcast %union.anon* %12413 to i64*
  %12414 = load i32, i32* %ESI.i169
  %12415 = zext i32 %12414 to i64
  %12416 = load i64, i64* %PC.i168
  %12417 = add i64 %12416, 2
  store i64 %12417, i64* %PC.i168
  %12418 = and i64 %12415, 4294967295
  store i64 %12418, i64* %RAX.i170, align 8
  store %struct.Memory* %loadMem_43449d, %struct.Memory** %MEMORY
  %loadMem_43449f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12420 = getelementptr inbounds %struct.GPR, %struct.GPR* %12419, i32 0, i32 33
  %12421 = getelementptr inbounds %struct.Reg, %struct.Reg* %12420, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %12421 to i64*
  %12422 = load i64, i64* %PC.i167
  %12423 = add i64 %12422, 1
  store i64 %12423, i64* %PC.i167
  %12424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %12425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12426 = bitcast %union.anon* %12425 to i32*
  %12427 = load i32, i32* %12426, align 8
  %12428 = sext i32 %12427 to i64
  %12429 = lshr i64 %12428, 32
  store i64 %12429, i64* %12424, align 8
  store %struct.Memory* %loadMem_43449f, %struct.Memory** %MEMORY
  %loadMem_4344a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12431 = getelementptr inbounds %struct.GPR, %struct.GPR* %12430, i32 0, i32 33
  %12432 = getelementptr inbounds %struct.Reg, %struct.Reg* %12431, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %12432 to i64*
  %12433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12434 = getelementptr inbounds %struct.GPR, %struct.GPR* %12433, i32 0, i32 9
  %12435 = getelementptr inbounds %struct.Reg, %struct.Reg* %12434, i32 0, i32 0
  %RSI.i165 = bitcast %union.anon* %12435 to i64*
  %12436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12437 = getelementptr inbounds %struct.GPR, %struct.GPR* %12436, i32 0, i32 15
  %12438 = getelementptr inbounds %struct.Reg, %struct.Reg* %12437, i32 0, i32 0
  %RBP.i166 = bitcast %union.anon* %12438 to i64*
  %12439 = load i64, i64* %RBP.i166
  %12440 = sub i64 %12439, 304
  %12441 = load i64, i64* %PC.i164
  %12442 = add i64 %12441, 6
  store i64 %12442, i64* %PC.i164
  %12443 = inttoptr i64 %12440 to i32*
  %12444 = load i32, i32* %12443
  %12445 = zext i32 %12444 to i64
  store i64 %12445, i64* %RSI.i165, align 8
  store %struct.Memory* %loadMem_4344a0, %struct.Memory** %MEMORY
  %loadMem_4344a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12447 = getelementptr inbounds %struct.GPR, %struct.GPR* %12446, i32 0, i32 33
  %12448 = getelementptr inbounds %struct.Reg, %struct.Reg* %12447, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %12448 to i64*
  %12449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12450 = getelementptr inbounds %struct.GPR, %struct.GPR* %12449, i32 0, i32 9
  %12451 = getelementptr inbounds %struct.Reg, %struct.Reg* %12450, i32 0, i32 0
  %ESI.i160 = bitcast %union.anon* %12451 to i32*
  %12452 = load i32, i32* %ESI.i160
  %12453 = zext i32 %12452 to i64
  %12454 = load i64, i64* %PC.i159
  %12455 = add i64 %12454, 2
  store i64 %12455, i64* %PC.i159
  %12456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12457 = bitcast %union.anon* %12456 to i32*
  %12458 = load i32, i32* %12457, align 8
  %12459 = zext i32 %12458 to i64
  %12460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %12461 = bitcast %union.anon* %12460 to i32*
  %12462 = load i32, i32* %12461, align 8
  %12463 = zext i32 %12462 to i64
  %12464 = shl i64 %12453, 32
  %12465 = ashr exact i64 %12464, 32
  %12466 = shl i64 %12463, 32
  %12467 = or i64 %12466, %12459
  %12468 = sdiv i64 %12467, %12465
  %12469 = shl i64 %12468, 32
  %12470 = ashr exact i64 %12469, 32
  %12471 = icmp eq i64 %12468, %12470
  br i1 %12471, label %12476, label %12472

; <label>:12472:                                  ; preds = %block_.L_434484
  %12473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12474 = load i64, i64* %12473, align 8
  %12475 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %12474, %struct.Memory* %loadMem_4344a6)
  br label %routine_idivl__esi.exit161

; <label>:12476:                                  ; preds = %block_.L_434484
  %12477 = srem i64 %12467, %12465
  %12478 = getelementptr inbounds %union.anon, %union.anon* %12456, i64 0, i32 0
  %12479 = and i64 %12468, 4294967295
  store i64 %12479, i64* %12478, align 8
  %12480 = getelementptr inbounds %union.anon, %union.anon* %12460, i64 0, i32 0
  %12481 = and i64 %12477, 4294967295
  store i64 %12481, i64* %12480, align 8
  %12482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12482, align 1
  %12483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %12483, align 1
  %12484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12484, align 1
  %12485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12485, align 1
  %12486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12486, align 1
  %12487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12487, align 1
  br label %routine_idivl__esi.exit161

routine_idivl__esi.exit161:                       ; preds = %12472, %12476
  %12488 = phi %struct.Memory* [ %12475, %12472 ], [ %loadMem_4344a6, %12476 ]
  store %struct.Memory* %12488, %struct.Memory** %MEMORY
  %loadMem_4344a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12490 = getelementptr inbounds %struct.GPR, %struct.GPR* %12489, i32 0, i32 33
  %12491 = getelementptr inbounds %struct.Reg, %struct.Reg* %12490, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %12491 to i64*
  %12492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12493 = getelementptr inbounds %struct.GPR, %struct.GPR* %12492, i32 0, i32 1
  %12494 = getelementptr inbounds %struct.Reg, %struct.Reg* %12493, i32 0, i32 0
  %EAX.i157 = bitcast %union.anon* %12494 to i32*
  %12495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12496 = getelementptr inbounds %struct.GPR, %struct.GPR* %12495, i32 0, i32 5
  %12497 = getelementptr inbounds %struct.Reg, %struct.Reg* %12496, i32 0, i32 0
  %ECX.i158 = bitcast %union.anon* %12497 to i32*
  %12498 = load i32, i32* %ECX.i158
  %12499 = zext i32 %12498 to i64
  %12500 = load i32, i32* %EAX.i157
  %12501 = zext i32 %12500 to i64
  %12502 = load i64, i64* %PC.i156
  %12503 = add i64 %12502, 2
  store i64 %12503, i64* %PC.i156
  %12504 = sub i32 %12498, %12500
  %12505 = icmp ult i32 %12498, %12500
  %12506 = zext i1 %12505 to i8
  %12507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12506, i8* %12507, align 1
  %12508 = and i32 %12504, 255
  %12509 = call i32 @llvm.ctpop.i32(i32 %12508)
  %12510 = trunc i32 %12509 to i8
  %12511 = and i8 %12510, 1
  %12512 = xor i8 %12511, 1
  %12513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12512, i8* %12513, align 1
  %12514 = xor i64 %12501, %12499
  %12515 = trunc i64 %12514 to i32
  %12516 = xor i32 %12515, %12504
  %12517 = lshr i32 %12516, 4
  %12518 = trunc i32 %12517 to i8
  %12519 = and i8 %12518, 1
  %12520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12519, i8* %12520, align 1
  %12521 = icmp eq i32 %12504, 0
  %12522 = zext i1 %12521 to i8
  %12523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12522, i8* %12523, align 1
  %12524 = lshr i32 %12504, 31
  %12525 = trunc i32 %12524 to i8
  %12526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12525, i8* %12526, align 1
  %12527 = lshr i32 %12498, 31
  %12528 = lshr i32 %12500, 31
  %12529 = xor i32 %12528, %12527
  %12530 = xor i32 %12524, %12527
  %12531 = add i32 %12530, %12529
  %12532 = icmp eq i32 %12531, 2
  %12533 = zext i1 %12532 to i8
  %12534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12533, i8* %12534, align 1
  store %struct.Memory* %loadMem_4344a8, %struct.Memory** %MEMORY
  %loadMem_4344aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %12535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12536 = getelementptr inbounds %struct.GPR, %struct.GPR* %12535, i32 0, i32 33
  %12537 = getelementptr inbounds %struct.Reg, %struct.Reg* %12536, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %12537 to i64*
  %12538 = load i64, i64* %PC.i155
  %12539 = add i64 %12538, 82
  %12540 = load i64, i64* %PC.i155
  %12541 = add i64 %12540, 6
  %12542 = load i64, i64* %PC.i155
  %12543 = add i64 %12542, 6
  store i64 %12543, i64* %PC.i155
  %12544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12545 = load i8, i8* %12544, align 1
  %12546 = icmp ne i8 %12545, 0
  %12547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12548 = load i8, i8* %12547, align 1
  %12549 = icmp ne i8 %12548, 0
  %12550 = xor i1 %12546, %12549
  %12551 = xor i1 %12550, true
  %12552 = zext i1 %12551 to i8
  store i8 %12552, i8* %BRANCH_TAKEN, align 1
  %12553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12554 = select i1 %12550, i64 %12541, i64 %12539
  store i64 %12554, i64* %12553, align 8
  store %struct.Memory* %loadMem_4344aa, %struct.Memory** %MEMORY
  %loadBr_4344aa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4344aa = icmp eq i8 %loadBr_4344aa, 1
  br i1 %cmpBr_4344aa, label %block_.L_4344fc, label %block_4344b0

block_4344b0:                                     ; preds = %routine_idivl__esi.exit161
  %loadMem_4344b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12556 = getelementptr inbounds %struct.GPR, %struct.GPR* %12555, i32 0, i32 33
  %12557 = getelementptr inbounds %struct.Reg, %struct.Reg* %12556, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %12557 to i64*
  %12558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12559 = getelementptr inbounds %struct.GPR, %struct.GPR* %12558, i32 0, i32 1
  %12560 = getelementptr inbounds %struct.Reg, %struct.Reg* %12559, i32 0, i32 0
  %RAX.i154 = bitcast %union.anon* %12560 to i64*
  %12561 = load i64, i64* %PC.i153
  %12562 = add i64 %12561, 8
  store i64 %12562, i64* %PC.i153
  %12563 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12563, i64* %RAX.i154, align 8
  store %struct.Memory* %loadMem_4344b0, %struct.Memory** %MEMORY
  %loadMem_4344b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12565 = getelementptr inbounds %struct.GPR, %struct.GPR* %12564, i32 0, i32 33
  %12566 = getelementptr inbounds %struct.Reg, %struct.Reg* %12565, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %12566 to i64*
  %12567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12568 = getelementptr inbounds %struct.GPR, %struct.GPR* %12567, i32 0, i32 1
  %12569 = getelementptr inbounds %struct.Reg, %struct.Reg* %12568, i32 0, i32 0
  %RAX.i152 = bitcast %union.anon* %12569 to i64*
  %12570 = load i64, i64* %RAX.i152
  %12571 = add i64 %12570, 104
  %12572 = load i64, i64* %PC.i151
  %12573 = add i64 %12572, 4
  store i64 %12573, i64* %PC.i151
  %12574 = inttoptr i64 %12571 to i64*
  %12575 = load i64, i64* %12574
  store i64 %12575, i64* %RAX.i152, align 8
  store %struct.Memory* %loadMem_4344b8, %struct.Memory** %MEMORY
  %loadMem_4344bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12577 = getelementptr inbounds %struct.GPR, %struct.GPR* %12576, i32 0, i32 33
  %12578 = getelementptr inbounds %struct.Reg, %struct.Reg* %12577, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %12578 to i64*
  %12579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12580 = getelementptr inbounds %struct.GPR, %struct.GPR* %12579, i32 0, i32 5
  %12581 = getelementptr inbounds %struct.Reg, %struct.Reg* %12580, i32 0, i32 0
  %RCX.i149 = bitcast %union.anon* %12581 to i64*
  %12582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12583 = getelementptr inbounds %struct.GPR, %struct.GPR* %12582, i32 0, i32 15
  %12584 = getelementptr inbounds %struct.Reg, %struct.Reg* %12583, i32 0, i32 0
  %RBP.i150 = bitcast %union.anon* %12584 to i64*
  %12585 = load i64, i64* %RBP.i150
  %12586 = sub i64 %12585, 28
  %12587 = load i64, i64* %PC.i148
  %12588 = add i64 %12587, 4
  store i64 %12588, i64* %PC.i148
  %12589 = inttoptr i64 %12586 to i32*
  %12590 = load i32, i32* %12589
  %12591 = sext i32 %12590 to i64
  store i64 %12591, i64* %RCX.i149, align 8
  store %struct.Memory* %loadMem_4344bc, %struct.Memory** %MEMORY
  %loadMem_4344c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12593 = getelementptr inbounds %struct.GPR, %struct.GPR* %12592, i32 0, i32 33
  %12594 = getelementptr inbounds %struct.Reg, %struct.Reg* %12593, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %12594 to i64*
  %12595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12596 = getelementptr inbounds %struct.GPR, %struct.GPR* %12595, i32 0, i32 1
  %12597 = getelementptr inbounds %struct.Reg, %struct.Reg* %12596, i32 0, i32 0
  %RAX.i146 = bitcast %union.anon* %12597 to i64*
  %12598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12599 = getelementptr inbounds %struct.GPR, %struct.GPR* %12598, i32 0, i32 5
  %12600 = getelementptr inbounds %struct.Reg, %struct.Reg* %12599, i32 0, i32 0
  %RCX.i147 = bitcast %union.anon* %12600 to i64*
  %12601 = load i64, i64* %RAX.i146
  %12602 = load i64, i64* %RCX.i147
  %12603 = mul i64 %12602, 8
  %12604 = add i64 %12603, %12601
  %12605 = load i64, i64* %PC.i145
  %12606 = add i64 %12605, 4
  store i64 %12606, i64* %PC.i145
  %12607 = inttoptr i64 %12604 to i64*
  %12608 = load i64, i64* %12607
  store i64 %12608, i64* %RAX.i146, align 8
  store %struct.Memory* %loadMem_4344c0, %struct.Memory** %MEMORY
  %loadMem_4344c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12610 = getelementptr inbounds %struct.GPR, %struct.GPR* %12609, i32 0, i32 33
  %12611 = getelementptr inbounds %struct.Reg, %struct.Reg* %12610, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %12611 to i64*
  %12612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12613 = getelementptr inbounds %struct.GPR, %struct.GPR* %12612, i32 0, i32 5
  %12614 = getelementptr inbounds %struct.Reg, %struct.Reg* %12613, i32 0, i32 0
  %RCX.i143 = bitcast %union.anon* %12614 to i64*
  %12615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12616 = getelementptr inbounds %struct.GPR, %struct.GPR* %12615, i32 0, i32 15
  %12617 = getelementptr inbounds %struct.Reg, %struct.Reg* %12616, i32 0, i32 0
  %RBP.i144 = bitcast %union.anon* %12617 to i64*
  %12618 = load i64, i64* %RBP.i144
  %12619 = sub i64 %12618, 32
  %12620 = load i64, i64* %PC.i142
  %12621 = add i64 %12620, 4
  store i64 %12621, i64* %PC.i142
  %12622 = inttoptr i64 %12619 to i32*
  %12623 = load i32, i32* %12622
  %12624 = sext i32 %12623 to i64
  store i64 %12624, i64* %RCX.i143, align 8
  store %struct.Memory* %loadMem_4344c4, %struct.Memory** %MEMORY
  %loadMem_4344c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12626 = getelementptr inbounds %struct.GPR, %struct.GPR* %12625, i32 0, i32 33
  %12627 = getelementptr inbounds %struct.Reg, %struct.Reg* %12626, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %12627 to i64*
  %12628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12629 = getelementptr inbounds %struct.GPR, %struct.GPR* %12628, i32 0, i32 1
  %12630 = getelementptr inbounds %struct.Reg, %struct.Reg* %12629, i32 0, i32 0
  %RAX.i140 = bitcast %union.anon* %12630 to i64*
  %12631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12632 = getelementptr inbounds %struct.GPR, %struct.GPR* %12631, i32 0, i32 5
  %12633 = getelementptr inbounds %struct.Reg, %struct.Reg* %12632, i32 0, i32 0
  %RCX.i141 = bitcast %union.anon* %12633 to i64*
  %12634 = load i64, i64* %RAX.i140
  %12635 = load i64, i64* %RCX.i141
  %12636 = mul i64 %12635, 4
  %12637 = add i64 %12636, %12634
  %12638 = load i64, i64* %PC.i139
  %12639 = add i64 %12638, 7
  store i64 %12639, i64* %PC.i139
  %12640 = inttoptr i64 %12637 to i32*
  store i32 -1, i32* %12640
  store %struct.Memory* %loadMem_4344c8, %struct.Memory** %MEMORY
  %loadMem_4344cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12642 = getelementptr inbounds %struct.GPR, %struct.GPR* %12641, i32 0, i32 33
  %12643 = getelementptr inbounds %struct.Reg, %struct.Reg* %12642, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %12643 to i64*
  %12644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12645 = getelementptr inbounds %struct.GPR, %struct.GPR* %12644, i32 0, i32 1
  %12646 = getelementptr inbounds %struct.Reg, %struct.Reg* %12645, i32 0, i32 0
  %RAX.i138 = bitcast %union.anon* %12646 to i64*
  %12647 = load i64, i64* %PC.i137
  %12648 = add i64 %12647, 8
  store i64 %12648, i64* %PC.i137
  %12649 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12649, i64* %RAX.i138, align 8
  store %struct.Memory* %loadMem_4344cf, %struct.Memory** %MEMORY
  %loadMem_4344d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12651 = getelementptr inbounds %struct.GPR, %struct.GPR* %12650, i32 0, i32 33
  %12652 = getelementptr inbounds %struct.Reg, %struct.Reg* %12651, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %12652 to i64*
  %12653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12654 = getelementptr inbounds %struct.GPR, %struct.GPR* %12653, i32 0, i32 1
  %12655 = getelementptr inbounds %struct.Reg, %struct.Reg* %12654, i32 0, i32 0
  %RAX.i136 = bitcast %union.anon* %12655 to i64*
  %12656 = load i64, i64* %RAX.i136
  %12657 = add i64 %12656, 112
  %12658 = load i64, i64* %PC.i135
  %12659 = add i64 %12658, 4
  store i64 %12659, i64* %PC.i135
  %12660 = inttoptr i64 %12657 to i64*
  %12661 = load i64, i64* %12660
  store i64 %12661, i64* %RAX.i136, align 8
  store %struct.Memory* %loadMem_4344d7, %struct.Memory** %MEMORY
  %loadMem_4344db = load %struct.Memory*, %struct.Memory** %MEMORY
  %12662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12663 = getelementptr inbounds %struct.GPR, %struct.GPR* %12662, i32 0, i32 33
  %12664 = getelementptr inbounds %struct.Reg, %struct.Reg* %12663, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %12664 to i64*
  %12665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12666 = getelementptr inbounds %struct.GPR, %struct.GPR* %12665, i32 0, i32 5
  %12667 = getelementptr inbounds %struct.Reg, %struct.Reg* %12666, i32 0, i32 0
  %RCX.i133 = bitcast %union.anon* %12667 to i64*
  %12668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12669 = getelementptr inbounds %struct.GPR, %struct.GPR* %12668, i32 0, i32 15
  %12670 = getelementptr inbounds %struct.Reg, %struct.Reg* %12669, i32 0, i32 0
  %RBP.i134 = bitcast %union.anon* %12670 to i64*
  %12671 = load i64, i64* %RBP.i134
  %12672 = sub i64 %12671, 28
  %12673 = load i64, i64* %PC.i132
  %12674 = add i64 %12673, 4
  store i64 %12674, i64* %PC.i132
  %12675 = inttoptr i64 %12672 to i32*
  %12676 = load i32, i32* %12675
  %12677 = sext i32 %12676 to i64
  store i64 %12677, i64* %RCX.i133, align 8
  store %struct.Memory* %loadMem_4344db, %struct.Memory** %MEMORY
  %loadMem_4344df = load %struct.Memory*, %struct.Memory** %MEMORY
  %12678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12679 = getelementptr inbounds %struct.GPR, %struct.GPR* %12678, i32 0, i32 33
  %12680 = getelementptr inbounds %struct.Reg, %struct.Reg* %12679, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %12680 to i64*
  %12681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12682 = getelementptr inbounds %struct.GPR, %struct.GPR* %12681, i32 0, i32 1
  %12683 = getelementptr inbounds %struct.Reg, %struct.Reg* %12682, i32 0, i32 0
  %RAX.i130 = bitcast %union.anon* %12683 to i64*
  %12684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12685 = getelementptr inbounds %struct.GPR, %struct.GPR* %12684, i32 0, i32 5
  %12686 = getelementptr inbounds %struct.Reg, %struct.Reg* %12685, i32 0, i32 0
  %RCX.i131 = bitcast %union.anon* %12686 to i64*
  %12687 = load i64, i64* %RAX.i130
  %12688 = load i64, i64* %RCX.i131
  %12689 = mul i64 %12688, 8
  %12690 = add i64 %12689, %12687
  %12691 = load i64, i64* %PC.i129
  %12692 = add i64 %12691, 4
  store i64 %12692, i64* %PC.i129
  %12693 = inttoptr i64 %12690 to i64*
  %12694 = load i64, i64* %12693
  store i64 %12694, i64* %RAX.i130, align 8
  store %struct.Memory* %loadMem_4344df, %struct.Memory** %MEMORY
  %loadMem_4344e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12696 = getelementptr inbounds %struct.GPR, %struct.GPR* %12695, i32 0, i32 33
  %12697 = getelementptr inbounds %struct.Reg, %struct.Reg* %12696, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %12697 to i64*
  %12698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12699 = getelementptr inbounds %struct.GPR, %struct.GPR* %12698, i32 0, i32 5
  %12700 = getelementptr inbounds %struct.Reg, %struct.Reg* %12699, i32 0, i32 0
  %RCX.i127 = bitcast %union.anon* %12700 to i64*
  %12701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12702 = getelementptr inbounds %struct.GPR, %struct.GPR* %12701, i32 0, i32 15
  %12703 = getelementptr inbounds %struct.Reg, %struct.Reg* %12702, i32 0, i32 0
  %RBP.i128 = bitcast %union.anon* %12703 to i64*
  %12704 = load i64, i64* %RBP.i128
  %12705 = sub i64 %12704, 32
  %12706 = load i64, i64* %PC.i126
  %12707 = add i64 %12706, 4
  store i64 %12707, i64* %PC.i126
  %12708 = inttoptr i64 %12705 to i32*
  %12709 = load i32, i32* %12708
  %12710 = sext i32 %12709 to i64
  store i64 %12710, i64* %RCX.i127, align 8
  store %struct.Memory* %loadMem_4344e3, %struct.Memory** %MEMORY
  %loadMem_4344e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12712 = getelementptr inbounds %struct.GPR, %struct.GPR* %12711, i32 0, i32 33
  %12713 = getelementptr inbounds %struct.Reg, %struct.Reg* %12712, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %12713 to i64*
  %12714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12715 = getelementptr inbounds %struct.GPR, %struct.GPR* %12714, i32 0, i32 1
  %12716 = getelementptr inbounds %struct.Reg, %struct.Reg* %12715, i32 0, i32 0
  %RAX.i124 = bitcast %union.anon* %12716 to i64*
  %12717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12718 = getelementptr inbounds %struct.GPR, %struct.GPR* %12717, i32 0, i32 5
  %12719 = getelementptr inbounds %struct.Reg, %struct.Reg* %12718, i32 0, i32 0
  %RCX.i125 = bitcast %union.anon* %12719 to i64*
  %12720 = load i64, i64* %RAX.i124
  %12721 = load i64, i64* %RCX.i125
  %12722 = mul i64 %12721, 4
  %12723 = add i64 %12722, %12720
  %12724 = load i64, i64* %PC.i123
  %12725 = add i64 %12724, 7
  store i64 %12725, i64* %PC.i123
  %12726 = inttoptr i64 %12723 to i32*
  store i32 -1, i32* %12726
  store %struct.Memory* %loadMem_4344e7, %struct.Memory** %MEMORY
  %loadMem_4344ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %12727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12728 = getelementptr inbounds %struct.GPR, %struct.GPR* %12727, i32 0, i32 33
  %12729 = getelementptr inbounds %struct.Reg, %struct.Reg* %12728, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %12729 to i64*
  %12730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12731 = getelementptr inbounds %struct.GPR, %struct.GPR* %12730, i32 0, i32 1
  %12732 = getelementptr inbounds %struct.Reg, %struct.Reg* %12731, i32 0, i32 0
  %RAX.i121 = bitcast %union.anon* %12732 to i64*
  %12733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12734 = getelementptr inbounds %struct.GPR, %struct.GPR* %12733, i32 0, i32 15
  %12735 = getelementptr inbounds %struct.Reg, %struct.Reg* %12734, i32 0, i32 0
  %RBP.i122 = bitcast %union.anon* %12735 to i64*
  %12736 = load i64, i64* %RBP.i122
  %12737 = sub i64 %12736, 32
  %12738 = load i64, i64* %PC.i120
  %12739 = add i64 %12738, 3
  store i64 %12739, i64* %PC.i120
  %12740 = inttoptr i64 %12737 to i32*
  %12741 = load i32, i32* %12740
  %12742 = zext i32 %12741 to i64
  store i64 %12742, i64* %RAX.i121, align 8
  store %struct.Memory* %loadMem_4344ee, %struct.Memory** %MEMORY
  %loadMem_4344f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12744 = getelementptr inbounds %struct.GPR, %struct.GPR* %12743, i32 0, i32 33
  %12745 = getelementptr inbounds %struct.Reg, %struct.Reg* %12744, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %12745 to i64*
  %12746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12747 = getelementptr inbounds %struct.GPR, %struct.GPR* %12746, i32 0, i32 1
  %12748 = getelementptr inbounds %struct.Reg, %struct.Reg* %12747, i32 0, i32 0
  %RAX.i119 = bitcast %union.anon* %12748 to i64*
  %12749 = load i64, i64* %RAX.i119
  %12750 = load i64, i64* %PC.i118
  %12751 = add i64 %12750, 3
  store i64 %12751, i64* %PC.i118
  %12752 = trunc i64 %12749 to i32
  %12753 = add i32 1, %12752
  %12754 = zext i32 %12753 to i64
  store i64 %12754, i64* %RAX.i119, align 8
  %12755 = icmp ult i32 %12753, %12752
  %12756 = icmp ult i32 %12753, 1
  %12757 = or i1 %12755, %12756
  %12758 = zext i1 %12757 to i8
  %12759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12758, i8* %12759, align 1
  %12760 = and i32 %12753, 255
  %12761 = call i32 @llvm.ctpop.i32(i32 %12760)
  %12762 = trunc i32 %12761 to i8
  %12763 = and i8 %12762, 1
  %12764 = xor i8 %12763, 1
  %12765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12764, i8* %12765, align 1
  %12766 = xor i64 1, %12749
  %12767 = trunc i64 %12766 to i32
  %12768 = xor i32 %12767, %12753
  %12769 = lshr i32 %12768, 4
  %12770 = trunc i32 %12769 to i8
  %12771 = and i8 %12770, 1
  %12772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12771, i8* %12772, align 1
  %12773 = icmp eq i32 %12753, 0
  %12774 = zext i1 %12773 to i8
  %12775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12774, i8* %12775, align 1
  %12776 = lshr i32 %12753, 31
  %12777 = trunc i32 %12776 to i8
  %12778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12777, i8* %12778, align 1
  %12779 = lshr i32 %12752, 31
  %12780 = xor i32 %12776, %12779
  %12781 = add i32 %12780, %12776
  %12782 = icmp eq i32 %12781, 2
  %12783 = zext i1 %12782 to i8
  %12784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12783, i8* %12784, align 1
  store %struct.Memory* %loadMem_4344f1, %struct.Memory** %MEMORY
  %loadMem_4344f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12786 = getelementptr inbounds %struct.GPR, %struct.GPR* %12785, i32 0, i32 33
  %12787 = getelementptr inbounds %struct.Reg, %struct.Reg* %12786, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %12787 to i64*
  %12788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12789 = getelementptr inbounds %struct.GPR, %struct.GPR* %12788, i32 0, i32 1
  %12790 = getelementptr inbounds %struct.Reg, %struct.Reg* %12789, i32 0, i32 0
  %EAX.i116 = bitcast %union.anon* %12790 to i32*
  %12791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12792 = getelementptr inbounds %struct.GPR, %struct.GPR* %12791, i32 0, i32 15
  %12793 = getelementptr inbounds %struct.Reg, %struct.Reg* %12792, i32 0, i32 0
  %RBP.i117 = bitcast %union.anon* %12793 to i64*
  %12794 = load i64, i64* %RBP.i117
  %12795 = sub i64 %12794, 32
  %12796 = load i32, i32* %EAX.i116
  %12797 = zext i32 %12796 to i64
  %12798 = load i64, i64* %PC.i115
  %12799 = add i64 %12798, 3
  store i64 %12799, i64* %PC.i115
  %12800 = inttoptr i64 %12795 to i32*
  store i32 %12796, i32* %12800
  store %struct.Memory* %loadMem_4344f4, %struct.Memory** %MEMORY
  %loadMem_4344f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12802 = getelementptr inbounds %struct.GPR, %struct.GPR* %12801, i32 0, i32 33
  %12803 = getelementptr inbounds %struct.Reg, %struct.Reg* %12802, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %12803 to i64*
  %12804 = load i64, i64* %PC.i114
  %12805 = add i64 %12804, -115
  %12806 = load i64, i64* %PC.i114
  %12807 = add i64 %12806, 5
  store i64 %12807, i64* %PC.i114
  %12808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12805, i64* %12808, align 8
  store %struct.Memory* %loadMem_4344f7, %struct.Memory** %MEMORY
  br label %block_.L_434484

block_.L_4344fc:                                  ; preds = %routine_idivl__esi.exit161
  %loadMem_4344fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12810 = getelementptr inbounds %struct.GPR, %struct.GPR* %12809, i32 0, i32 33
  %12811 = getelementptr inbounds %struct.Reg, %struct.Reg* %12810, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %12811 to i64*
  %12812 = load i64, i64* %PC.i113
  %12813 = add i64 %12812, 5
  %12814 = load i64, i64* %PC.i113
  %12815 = add i64 %12814, 5
  store i64 %12815, i64* %PC.i113
  %12816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12813, i64* %12816, align 8
  store %struct.Memory* %loadMem_4344fc, %struct.Memory** %MEMORY
  br label %block_.L_434501

block_.L_434501:                                  ; preds = %block_.L_4344fc
  %loadMem_434501 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12818 = getelementptr inbounds %struct.GPR, %struct.GPR* %12817, i32 0, i32 33
  %12819 = getelementptr inbounds %struct.Reg, %struct.Reg* %12818, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %12819 to i64*
  %12820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12821 = getelementptr inbounds %struct.GPR, %struct.GPR* %12820, i32 0, i32 1
  %12822 = getelementptr inbounds %struct.Reg, %struct.Reg* %12821, i32 0, i32 0
  %RAX.i111 = bitcast %union.anon* %12822 to i64*
  %12823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12824 = getelementptr inbounds %struct.GPR, %struct.GPR* %12823, i32 0, i32 15
  %12825 = getelementptr inbounds %struct.Reg, %struct.Reg* %12824, i32 0, i32 0
  %RBP.i112 = bitcast %union.anon* %12825 to i64*
  %12826 = load i64, i64* %RBP.i112
  %12827 = sub i64 %12826, 28
  %12828 = load i64, i64* %PC.i110
  %12829 = add i64 %12828, 3
  store i64 %12829, i64* %PC.i110
  %12830 = inttoptr i64 %12827 to i32*
  %12831 = load i32, i32* %12830
  %12832 = zext i32 %12831 to i64
  store i64 %12832, i64* %RAX.i111, align 8
  store %struct.Memory* %loadMem_434501, %struct.Memory** %MEMORY
  %loadMem_434504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12834 = getelementptr inbounds %struct.GPR, %struct.GPR* %12833, i32 0, i32 33
  %12835 = getelementptr inbounds %struct.Reg, %struct.Reg* %12834, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %12835 to i64*
  %12836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12837 = getelementptr inbounds %struct.GPR, %struct.GPR* %12836, i32 0, i32 1
  %12838 = getelementptr inbounds %struct.Reg, %struct.Reg* %12837, i32 0, i32 0
  %RAX.i109 = bitcast %union.anon* %12838 to i64*
  %12839 = load i64, i64* %RAX.i109
  %12840 = load i64, i64* %PC.i108
  %12841 = add i64 %12840, 3
  store i64 %12841, i64* %PC.i108
  %12842 = trunc i64 %12839 to i32
  %12843 = add i32 1, %12842
  %12844 = zext i32 %12843 to i64
  store i64 %12844, i64* %RAX.i109, align 8
  %12845 = icmp ult i32 %12843, %12842
  %12846 = icmp ult i32 %12843, 1
  %12847 = or i1 %12845, %12846
  %12848 = zext i1 %12847 to i8
  %12849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12848, i8* %12849, align 1
  %12850 = and i32 %12843, 255
  %12851 = call i32 @llvm.ctpop.i32(i32 %12850)
  %12852 = trunc i32 %12851 to i8
  %12853 = and i8 %12852, 1
  %12854 = xor i8 %12853, 1
  %12855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12854, i8* %12855, align 1
  %12856 = xor i64 1, %12839
  %12857 = trunc i64 %12856 to i32
  %12858 = xor i32 %12857, %12843
  %12859 = lshr i32 %12858, 4
  %12860 = trunc i32 %12859 to i8
  %12861 = and i8 %12860, 1
  %12862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12861, i8* %12862, align 1
  %12863 = icmp eq i32 %12843, 0
  %12864 = zext i1 %12863 to i8
  %12865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12864, i8* %12865, align 1
  %12866 = lshr i32 %12843, 31
  %12867 = trunc i32 %12866 to i8
  %12868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12867, i8* %12868, align 1
  %12869 = lshr i32 %12842, 31
  %12870 = xor i32 %12866, %12869
  %12871 = add i32 %12870, %12866
  %12872 = icmp eq i32 %12871, 2
  %12873 = zext i1 %12872 to i8
  %12874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12873, i8* %12874, align 1
  store %struct.Memory* %loadMem_434504, %struct.Memory** %MEMORY
  %loadMem_434507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12876 = getelementptr inbounds %struct.GPR, %struct.GPR* %12875, i32 0, i32 33
  %12877 = getelementptr inbounds %struct.Reg, %struct.Reg* %12876, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %12877 to i64*
  %12878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12879 = getelementptr inbounds %struct.GPR, %struct.GPR* %12878, i32 0, i32 1
  %12880 = getelementptr inbounds %struct.Reg, %struct.Reg* %12879, i32 0, i32 0
  %EAX.i106 = bitcast %union.anon* %12880 to i32*
  %12881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12882 = getelementptr inbounds %struct.GPR, %struct.GPR* %12881, i32 0, i32 15
  %12883 = getelementptr inbounds %struct.Reg, %struct.Reg* %12882, i32 0, i32 0
  %RBP.i107 = bitcast %union.anon* %12883 to i64*
  %12884 = load i64, i64* %RBP.i107
  %12885 = sub i64 %12884, 28
  %12886 = load i32, i32* %EAX.i106
  %12887 = zext i32 %12886 to i64
  %12888 = load i64, i64* %PC.i105
  %12889 = add i64 %12888, 3
  store i64 %12889, i64* %PC.i105
  %12890 = inttoptr i64 %12885 to i32*
  store i32 %12886, i32* %12890
  store %struct.Memory* %loadMem_434507, %struct.Memory** %MEMORY
  %loadMem_43450a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12892 = getelementptr inbounds %struct.GPR, %struct.GPR* %12891, i32 0, i32 33
  %12893 = getelementptr inbounds %struct.Reg, %struct.Reg* %12892, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %12893 to i64*
  %12894 = load i64, i64* %PC.i104
  %12895 = add i64 %12894, -185
  %12896 = load i64, i64* %PC.i104
  %12897 = add i64 %12896, 5
  store i64 %12897, i64* %PC.i104
  %12898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12895, i64* %12898, align 8
  store %struct.Memory* %loadMem_43450a, %struct.Memory** %MEMORY
  br label %block_.L_434451

block_.L_43450f:                                  ; preds = %routine_idivl__esi.exit192
  %loadMem_43450f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12900 = getelementptr inbounds %struct.GPR, %struct.GPR* %12899, i32 0, i32 33
  %12901 = getelementptr inbounds %struct.Reg, %struct.Reg* %12900, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %12901 to i64*
  %12902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12903 = getelementptr inbounds %struct.GPR, %struct.GPR* %12902, i32 0, i32 1
  %12904 = getelementptr inbounds %struct.Reg, %struct.Reg* %12903, i32 0, i32 0
  %RAX.i103 = bitcast %union.anon* %12904 to i64*
  %12905 = load i64, i64* %PC.i102
  %12906 = add i64 %12905, 5
  store i64 %12906, i64* %PC.i102
  store i64 16, i64* %RAX.i103, align 8
  store %struct.Memory* %loadMem_43450f, %struct.Memory** %MEMORY
  %loadMem_434514 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12908 = getelementptr inbounds %struct.GPR, %struct.GPR* %12907, i32 0, i32 33
  %12909 = getelementptr inbounds %struct.Reg, %struct.Reg* %12908, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %12909 to i64*
  %12910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12911 = getelementptr inbounds %struct.GPR, %struct.GPR* %12910, i32 0, i32 5
  %12912 = getelementptr inbounds %struct.Reg, %struct.Reg* %12911, i32 0, i32 0
  %RCX.i101 = bitcast %union.anon* %12912 to i64*
  %12913 = load i64, i64* %PC.i100
  %12914 = add i64 %12913, 8
  store i64 %12914, i64* %PC.i100
  %12915 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12915, i64* %RCX.i101, align 8
  store %struct.Memory* %loadMem_434514, %struct.Memory** %MEMORY
  %loadMem_43451c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12917 = getelementptr inbounds %struct.GPR, %struct.GPR* %12916, i32 0, i32 33
  %12918 = getelementptr inbounds %struct.Reg, %struct.Reg* %12917, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %12918 to i64*
  %12919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12920 = getelementptr inbounds %struct.GPR, %struct.GPR* %12919, i32 0, i32 5
  %12921 = getelementptr inbounds %struct.Reg, %struct.Reg* %12920, i32 0, i32 0
  %RCX.i99 = bitcast %union.anon* %12921 to i64*
  %12922 = load i64, i64* %RCX.i99
  %12923 = add i64 %12922, 88
  %12924 = load i64, i64* %PC.i98
  %12925 = add i64 %12924, 7
  store i64 %12925, i64* %PC.i98
  %12926 = inttoptr i64 %12923 to i32*
  store i32 0, i32* %12926
  store %struct.Memory* %loadMem_43451c, %struct.Memory** %MEMORY
  %loadMem_434523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12928 = getelementptr inbounds %struct.GPR, %struct.GPR* %12927, i32 0, i32 33
  %12929 = getelementptr inbounds %struct.Reg, %struct.Reg* %12928, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %12929 to i64*
  %12930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12931 = getelementptr inbounds %struct.GPR, %struct.GPR* %12930, i32 0, i32 5
  %12932 = getelementptr inbounds %struct.Reg, %struct.Reg* %12931, i32 0, i32 0
  %RCX.i97 = bitcast %union.anon* %12932 to i64*
  %12933 = load i64, i64* %PC.i96
  %12934 = add i64 %12933, 8
  store i64 %12934, i64* %PC.i96
  %12935 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12935, i64* %RCX.i97, align 8
  store %struct.Memory* %loadMem_434523, %struct.Memory** %MEMORY
  %loadMem_43452b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12937 = getelementptr inbounds %struct.GPR, %struct.GPR* %12936, i32 0, i32 33
  %12938 = getelementptr inbounds %struct.Reg, %struct.Reg* %12937, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %12938 to i64*
  %12939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12940 = getelementptr inbounds %struct.GPR, %struct.GPR* %12939, i32 0, i32 5
  %12941 = getelementptr inbounds %struct.Reg, %struct.Reg* %12940, i32 0, i32 0
  %RCX.i94 = bitcast %union.anon* %12941 to i64*
  %12942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12943 = getelementptr inbounds %struct.GPR, %struct.GPR* %12942, i32 0, i32 7
  %12944 = getelementptr inbounds %struct.Reg, %struct.Reg* %12943, i32 0, i32 0
  %RDX.i95 = bitcast %union.anon* %12944 to i64*
  %12945 = load i64, i64* %RCX.i94
  %12946 = add i64 %12945, 52
  %12947 = load i64, i64* %PC.i93
  %12948 = add i64 %12947, 3
  store i64 %12948, i64* %PC.i93
  %12949 = inttoptr i64 %12946 to i32*
  %12950 = load i32, i32* %12949
  %12951 = zext i32 %12950 to i64
  store i64 %12951, i64* %RDX.i95, align 8
  store %struct.Memory* %loadMem_43452b, %struct.Memory** %MEMORY
  %loadMem_43452e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12953 = getelementptr inbounds %struct.GPR, %struct.GPR* %12952, i32 0, i32 33
  %12954 = getelementptr inbounds %struct.Reg, %struct.Reg* %12953, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %12954 to i64*
  %12955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12956 = getelementptr inbounds %struct.GPR, %struct.GPR* %12955, i32 0, i32 1
  %12957 = getelementptr inbounds %struct.Reg, %struct.Reg* %12956, i32 0, i32 0
  %EAX.i91 = bitcast %union.anon* %12957 to i32*
  %12958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12959 = getelementptr inbounds %struct.GPR, %struct.GPR* %12958, i32 0, i32 15
  %12960 = getelementptr inbounds %struct.Reg, %struct.Reg* %12959, i32 0, i32 0
  %RBP.i92 = bitcast %union.anon* %12960 to i64*
  %12961 = load i64, i64* %RBP.i92
  %12962 = sub i64 %12961, 308
  %12963 = load i32, i32* %EAX.i91
  %12964 = zext i32 %12963 to i64
  %12965 = load i64, i64* %PC.i90
  %12966 = add i64 %12965, 6
  store i64 %12966, i64* %PC.i90
  %12967 = inttoptr i64 %12962 to i32*
  store i32 %12963, i32* %12967
  store %struct.Memory* %loadMem_43452e, %struct.Memory** %MEMORY
  %loadMem_434534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12969 = getelementptr inbounds %struct.GPR, %struct.GPR* %12968, i32 0, i32 33
  %12970 = getelementptr inbounds %struct.Reg, %struct.Reg* %12969, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %12970 to i64*
  %12971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12972 = getelementptr inbounds %struct.GPR, %struct.GPR* %12971, i32 0, i32 7
  %12973 = getelementptr inbounds %struct.Reg, %struct.Reg* %12972, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %12973 to i32*
  %12974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12975 = getelementptr inbounds %struct.GPR, %struct.GPR* %12974, i32 0, i32 1
  %12976 = getelementptr inbounds %struct.Reg, %struct.Reg* %12975, i32 0, i32 0
  %RAX.i89 = bitcast %union.anon* %12976 to i64*
  %12977 = load i32, i32* %EDX.i
  %12978 = zext i32 %12977 to i64
  %12979 = load i64, i64* %PC.i88
  %12980 = add i64 %12979, 2
  store i64 %12980, i64* %PC.i88
  %12981 = and i64 %12978, 4294967295
  store i64 %12981, i64* %RAX.i89, align 8
  store %struct.Memory* %loadMem_434534, %struct.Memory** %MEMORY
  %loadMem_434536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12983 = getelementptr inbounds %struct.GPR, %struct.GPR* %12982, i32 0, i32 33
  %12984 = getelementptr inbounds %struct.Reg, %struct.Reg* %12983, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %12984 to i64*
  %12985 = load i64, i64* %PC.i87
  %12986 = add i64 %12985, 1
  store i64 %12986, i64* %PC.i87
  %12987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %12988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12989 = bitcast %union.anon* %12988 to i32*
  %12990 = load i32, i32* %12989, align 8
  %12991 = sext i32 %12990 to i64
  %12992 = lshr i64 %12991, 32
  store i64 %12992, i64* %12987, align 8
  store %struct.Memory* %loadMem_434536, %struct.Memory** %MEMORY
  %loadMem_434537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12994 = getelementptr inbounds %struct.GPR, %struct.GPR* %12993, i32 0, i32 33
  %12995 = getelementptr inbounds %struct.Reg, %struct.Reg* %12994, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %12995 to i64*
  %12996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12997 = getelementptr inbounds %struct.GPR, %struct.GPR* %12996, i32 0, i32 9
  %12998 = getelementptr inbounds %struct.Reg, %struct.Reg* %12997, i32 0, i32 0
  %RSI.i85 = bitcast %union.anon* %12998 to i64*
  %12999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13000 = getelementptr inbounds %struct.GPR, %struct.GPR* %12999, i32 0, i32 15
  %13001 = getelementptr inbounds %struct.Reg, %struct.Reg* %13000, i32 0, i32 0
  %RBP.i86 = bitcast %union.anon* %13001 to i64*
  %13002 = load i64, i64* %RBP.i86
  %13003 = sub i64 %13002, 308
  %13004 = load i64, i64* %PC.i84
  %13005 = add i64 %13004, 6
  store i64 %13005, i64* %PC.i84
  %13006 = inttoptr i64 %13003 to i32*
  %13007 = load i32, i32* %13006
  %13008 = zext i32 %13007 to i64
  store i64 %13008, i64* %RSI.i85, align 8
  store %struct.Memory* %loadMem_434537, %struct.Memory** %MEMORY
  %loadMem_43453d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13010 = getelementptr inbounds %struct.GPR, %struct.GPR* %13009, i32 0, i32 33
  %13011 = getelementptr inbounds %struct.Reg, %struct.Reg* %13010, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %13011 to i64*
  %13012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13013 = getelementptr inbounds %struct.GPR, %struct.GPR* %13012, i32 0, i32 9
  %13014 = getelementptr inbounds %struct.Reg, %struct.Reg* %13013, i32 0, i32 0
  %ESI.i80 = bitcast %union.anon* %13014 to i32*
  %13015 = load i32, i32* %ESI.i80
  %13016 = zext i32 %13015 to i64
  %13017 = load i64, i64* %PC.i79
  %13018 = add i64 %13017, 2
  store i64 %13018, i64* %PC.i79
  %13019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13020 = bitcast %union.anon* %13019 to i32*
  %13021 = load i32, i32* %13020, align 8
  %13022 = zext i32 %13021 to i64
  %13023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %13024 = bitcast %union.anon* %13023 to i32*
  %13025 = load i32, i32* %13024, align 8
  %13026 = zext i32 %13025 to i64
  %13027 = shl i64 %13016, 32
  %13028 = ashr exact i64 %13027, 32
  %13029 = shl i64 %13026, 32
  %13030 = or i64 %13029, %13022
  %13031 = sdiv i64 %13030, %13028
  %13032 = shl i64 %13031, 32
  %13033 = ashr exact i64 %13032, 32
  %13034 = icmp eq i64 %13031, %13033
  br i1 %13034, label %13039, label %13035

; <label>:13035:                                  ; preds = %block_.L_43450f
  %13036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13037 = load i64, i64* %13036, align 8
  %13038 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %13037, %struct.Memory* %loadMem_43453d)
  br label %routine_idivl__esi.exit81

; <label>:13039:                                  ; preds = %block_.L_43450f
  %13040 = srem i64 %13030, %13028
  %13041 = getelementptr inbounds %union.anon, %union.anon* %13019, i64 0, i32 0
  %13042 = and i64 %13031, 4294967295
  store i64 %13042, i64* %13041, align 8
  %13043 = getelementptr inbounds %union.anon, %union.anon* %13023, i64 0, i32 0
  %13044 = and i64 %13040, 4294967295
  store i64 %13044, i64* %13043, align 8
  %13045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13045, align 1
  %13046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %13046, align 1
  %13047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13047, align 1
  %13048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13048, align 1
  %13049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13049, align 1
  %13050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13050, align 1
  br label %routine_idivl__esi.exit81

routine_idivl__esi.exit81:                        ; preds = %13035, %13039
  %13051 = phi %struct.Memory* [ %13038, %13035 ], [ %loadMem_43453d, %13039 ]
  store %struct.Memory* %13051, %struct.Memory** %MEMORY
  %loadMem_43453f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13053 = getelementptr inbounds %struct.GPR, %struct.GPR* %13052, i32 0, i32 33
  %13054 = getelementptr inbounds %struct.Reg, %struct.Reg* %13053, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %13054 to i64*
  %13055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13056 = getelementptr inbounds %struct.GPR, %struct.GPR* %13055, i32 0, i32 5
  %13057 = getelementptr inbounds %struct.Reg, %struct.Reg* %13056, i32 0, i32 0
  %RCX.i78 = bitcast %union.anon* %13057 to i64*
  %13058 = load i64, i64* %PC.i77
  %13059 = add i64 %13058, 8
  store i64 %13059, i64* %PC.i77
  %13060 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13060, i64* %RCX.i78, align 8
  store %struct.Memory* %loadMem_43453f, %struct.Memory** %MEMORY
  %loadMem_434547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13062 = getelementptr inbounds %struct.GPR, %struct.GPR* %13061, i32 0, i32 33
  %13063 = getelementptr inbounds %struct.Reg, %struct.Reg* %13062, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %13063 to i64*
  %13064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13065 = getelementptr inbounds %struct.GPR, %struct.GPR* %13064, i32 0, i32 5
  %13066 = getelementptr inbounds %struct.Reg, %struct.Reg* %13065, i32 0, i32 0
  %RCX.i75 = bitcast %union.anon* %13066 to i64*
  %13067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13068 = getelementptr inbounds %struct.GPR, %struct.GPR* %13067, i32 0, i32 11
  %13069 = getelementptr inbounds %struct.Reg, %struct.Reg* %13068, i32 0, i32 0
  %RDI.i76 = bitcast %union.anon* %13069 to i64*
  %13070 = load i64, i64* %RCX.i75
  %13071 = add i64 %13070, 60
  %13072 = load i64, i64* %PC.i74
  %13073 = add i64 %13072, 3
  store i64 %13073, i64* %PC.i74
  %13074 = inttoptr i64 %13071 to i32*
  %13075 = load i32, i32* %13074
  %13076 = zext i32 %13075 to i64
  store i64 %13076, i64* %RDI.i76, align 8
  store %struct.Memory* %loadMem_434547, %struct.Memory** %MEMORY
  %loadMem_43454a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13078 = getelementptr inbounds %struct.GPR, %struct.GPR* %13077, i32 0, i32 33
  %13079 = getelementptr inbounds %struct.Reg, %struct.Reg* %13078, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %13079 to i64*
  %13080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13081 = getelementptr inbounds %struct.GPR, %struct.GPR* %13080, i32 0, i32 1
  %13082 = getelementptr inbounds %struct.Reg, %struct.Reg* %13081, i32 0, i32 0
  %EAX.i72 = bitcast %union.anon* %13082 to i32*
  %13083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13084 = getelementptr inbounds %struct.GPR, %struct.GPR* %13083, i32 0, i32 15
  %13085 = getelementptr inbounds %struct.Reg, %struct.Reg* %13084, i32 0, i32 0
  %RBP.i73 = bitcast %union.anon* %13085 to i64*
  %13086 = load i64, i64* %RBP.i73
  %13087 = sub i64 %13086, 312
  %13088 = load i32, i32* %EAX.i72
  %13089 = zext i32 %13088 to i64
  %13090 = load i64, i64* %PC.i71
  %13091 = add i64 %13090, 6
  store i64 %13091, i64* %PC.i71
  %13092 = inttoptr i64 %13087 to i32*
  store i32 %13088, i32* %13092
  store %struct.Memory* %loadMem_43454a, %struct.Memory** %MEMORY
  %loadMem_434550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13094 = getelementptr inbounds %struct.GPR, %struct.GPR* %13093, i32 0, i32 33
  %13095 = getelementptr inbounds %struct.Reg, %struct.Reg* %13094, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %13095 to i64*
  %13096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13097 = getelementptr inbounds %struct.GPR, %struct.GPR* %13096, i32 0, i32 11
  %13098 = getelementptr inbounds %struct.Reg, %struct.Reg* %13097, i32 0, i32 0
  %EDI.i69 = bitcast %union.anon* %13098 to i32*
  %13099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13100 = getelementptr inbounds %struct.GPR, %struct.GPR* %13099, i32 0, i32 1
  %13101 = getelementptr inbounds %struct.Reg, %struct.Reg* %13100, i32 0, i32 0
  %RAX.i70 = bitcast %union.anon* %13101 to i64*
  %13102 = load i32, i32* %EDI.i69
  %13103 = zext i32 %13102 to i64
  %13104 = load i64, i64* %PC.i68
  %13105 = add i64 %13104, 2
  store i64 %13105, i64* %PC.i68
  %13106 = and i64 %13103, 4294967295
  store i64 %13106, i64* %RAX.i70, align 8
  store %struct.Memory* %loadMem_434550, %struct.Memory** %MEMORY
  %loadMem_434552 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13108 = getelementptr inbounds %struct.GPR, %struct.GPR* %13107, i32 0, i32 33
  %13109 = getelementptr inbounds %struct.Reg, %struct.Reg* %13108, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %13109 to i64*
  %13110 = load i64, i64* %PC.i67
  %13111 = add i64 %13110, 1
  store i64 %13111, i64* %PC.i67
  %13112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %13113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13114 = bitcast %union.anon* %13113 to i32*
  %13115 = load i32, i32* %13114, align 8
  %13116 = sext i32 %13115 to i64
  %13117 = lshr i64 %13116, 32
  store i64 %13117, i64* %13112, align 8
  store %struct.Memory* %loadMem_434552, %struct.Memory** %MEMORY
  %loadMem_434553 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13119 = getelementptr inbounds %struct.GPR, %struct.GPR* %13118, i32 0, i32 33
  %13120 = getelementptr inbounds %struct.Reg, %struct.Reg* %13119, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %13120 to i64*
  %13121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13122 = getelementptr inbounds %struct.GPR, %struct.GPR* %13121, i32 0, i32 9
  %13123 = getelementptr inbounds %struct.Reg, %struct.Reg* %13122, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %13123 to i32*
  %13124 = load i32, i32* %ESI.i
  %13125 = zext i32 %13124 to i64
  %13126 = load i64, i64* %PC.i63
  %13127 = add i64 %13126, 2
  store i64 %13127, i64* %PC.i63
  %13128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13129 = bitcast %union.anon* %13128 to i32*
  %13130 = load i32, i32* %13129, align 8
  %13131 = zext i32 %13130 to i64
  %13132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %13133 = bitcast %union.anon* %13132 to i32*
  %13134 = load i32, i32* %13133, align 8
  %13135 = zext i32 %13134 to i64
  %13136 = shl i64 %13125, 32
  %13137 = ashr exact i64 %13136, 32
  %13138 = shl i64 %13135, 32
  %13139 = or i64 %13138, %13131
  %13140 = sdiv i64 %13139, %13137
  %13141 = shl i64 %13140, 32
  %13142 = ashr exact i64 %13141, 32
  %13143 = icmp eq i64 %13140, %13142
  br i1 %13143, label %13148, label %13144

; <label>:13144:                                  ; preds = %routine_idivl__esi.exit81
  %13145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13146 = load i64, i64* %13145, align 8
  %13147 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %13146, %struct.Memory* %loadMem_434553)
  br label %routine_idivl__esi.exit

; <label>:13148:                                  ; preds = %routine_idivl__esi.exit81
  %13149 = srem i64 %13139, %13137
  %13150 = getelementptr inbounds %union.anon, %union.anon* %13128, i64 0, i32 0
  %13151 = and i64 %13140, 4294967295
  store i64 %13151, i64* %13150, align 8
  %13152 = getelementptr inbounds %union.anon, %union.anon* %13132, i64 0, i32 0
  %13153 = and i64 %13149, 4294967295
  store i64 %13153, i64* %13152, align 8
  %13154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13154, align 1
  %13155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %13155, align 1
  %13156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13156, align 1
  %13157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13157, align 1
  %13158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13158, align 1
  %13159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13159, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %13144, %13148
  %13160 = phi %struct.Memory* [ %13147, %13144 ], [ %loadMem_434553, %13148 ]
  store %struct.Memory* %13160, %struct.Memory** %MEMORY
  %loadMem_434555 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13162 = getelementptr inbounds %struct.GPR, %struct.GPR* %13161, i32 0, i32 33
  %13163 = getelementptr inbounds %struct.Reg, %struct.Reg* %13162, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %13163 to i64*
  %13164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13165 = getelementptr inbounds %struct.GPR, %struct.GPR* %13164, i32 0, i32 5
  %13166 = getelementptr inbounds %struct.Reg, %struct.Reg* %13165, i32 0, i32 0
  %RCX.i62 = bitcast %union.anon* %13166 to i64*
  %13167 = load i64, i64* %PC.i61
  %13168 = add i64 %13167, 8
  store i64 %13168, i64* %PC.i61
  %13169 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %13169, i64* %RCX.i62, align 8
  store %struct.Memory* %loadMem_434555, %struct.Memory** %MEMORY
  %loadMem_43455d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13171 = getelementptr inbounds %struct.GPR, %struct.GPR* %13170, i32 0, i32 33
  %13172 = getelementptr inbounds %struct.Reg, %struct.Reg* %13171, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %13172 to i64*
  %13173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13174 = getelementptr inbounds %struct.GPR, %struct.GPR* %13173, i32 0, i32 5
  %13175 = getelementptr inbounds %struct.Reg, %struct.Reg* %13174, i32 0, i32 0
  %RCX.i59 = bitcast %union.anon* %13175 to i64*
  %13176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13177 = getelementptr inbounds %struct.GPR, %struct.GPR* %13176, i32 0, i32 11
  %13178 = getelementptr inbounds %struct.Reg, %struct.Reg* %13177, i32 0, i32 0
  %RDI.i60 = bitcast %union.anon* %13178 to i64*
  %13179 = load i64, i64* %RCX.i59
  %13180 = add i64 %13179, 2920
  %13181 = load i64, i64* %PC.i58
  %13182 = add i64 %13181, 6
  store i64 %13182, i64* %PC.i58
  %13183 = inttoptr i64 %13180 to i32*
  %13184 = load i32, i32* %13183
  %13185 = zext i32 %13184 to i64
  store i64 %13185, i64* %RDI.i60, align 8
  store %struct.Memory* %loadMem_43455d, %struct.Memory** %MEMORY
  %loadMem_434563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13187 = getelementptr inbounds %struct.GPR, %struct.GPR* %13186, i32 0, i32 33
  %13188 = getelementptr inbounds %struct.Reg, %struct.Reg* %13187, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %13188 to i64*
  %13189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13190 = getelementptr inbounds %struct.GPR, %struct.GPR* %13189, i32 0, i32 17
  %13191 = getelementptr inbounds %struct.Reg, %struct.Reg* %13190, i32 0, i32 0
  %R8D.i56 = bitcast %union.anon* %13191 to i32*
  %13192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13193 = getelementptr inbounds %struct.GPR, %struct.GPR* %13192, i32 0, i32 15
  %13194 = getelementptr inbounds %struct.Reg, %struct.Reg* %13193, i32 0, i32 0
  %RBP.i57 = bitcast %union.anon* %13194 to i64*
  %13195 = bitcast i32* %R8D.i56 to i64*
  %13196 = load i64, i64* %RBP.i57
  %13197 = sub i64 %13196, 312
  %13198 = load i64, i64* %PC.i55
  %13199 = add i64 %13198, 7
  store i64 %13199, i64* %PC.i55
  %13200 = inttoptr i64 %13197 to i32*
  %13201 = load i32, i32* %13200
  %13202 = zext i32 %13201 to i64
  store i64 %13202, i64* %13195, align 8
  store %struct.Memory* %loadMem_434563, %struct.Memory** %MEMORY
  %loadMem_43456a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13204 = getelementptr inbounds %struct.GPR, %struct.GPR* %13203, i32 0, i32 33
  %13205 = getelementptr inbounds %struct.Reg, %struct.Reg* %13204, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %13205 to i64*
  %13206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13207 = getelementptr inbounds %struct.GPR, %struct.GPR* %13206, i32 0, i32 11
  %13208 = getelementptr inbounds %struct.Reg, %struct.Reg* %13207, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %13208 to i32*
  %13209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13210 = getelementptr inbounds %struct.GPR, %struct.GPR* %13209, i32 0, i32 15
  %13211 = getelementptr inbounds %struct.Reg, %struct.Reg* %13210, i32 0, i32 0
  %RBP.i54 = bitcast %union.anon* %13211 to i64*
  %13212 = load i64, i64* %RBP.i54
  %13213 = sub i64 %13212, 316
  %13214 = load i32, i32* %EDI.i
  %13215 = zext i32 %13214 to i64
  %13216 = load i64, i64* %PC.i53
  %13217 = add i64 %13216, 6
  store i64 %13217, i64* %PC.i53
  %13218 = inttoptr i64 %13213 to i32*
  store i32 %13214, i32* %13218
  store %struct.Memory* %loadMem_43456a, %struct.Memory** %MEMORY
  %loadMem_434570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13220 = getelementptr inbounds %struct.GPR, %struct.GPR* %13219, i32 0, i32 33
  %13221 = getelementptr inbounds %struct.Reg, %struct.Reg* %13220, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %13221 to i64*
  %13222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13223 = getelementptr inbounds %struct.GPR, %struct.GPR* %13222, i32 0, i32 17
  %13224 = getelementptr inbounds %struct.Reg, %struct.Reg* %13223, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %13224 to i32*
  %13225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13226 = getelementptr inbounds %struct.GPR, %struct.GPR* %13225, i32 0, i32 11
  %13227 = getelementptr inbounds %struct.Reg, %struct.Reg* %13226, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %13227 to i64*
  %13228 = load i32, i32* %R8D.i
  %13229 = zext i32 %13228 to i64
  %13230 = load i64, i64* %PC.i52
  %13231 = add i64 %13230, 3
  store i64 %13231, i64* %PC.i52
  %13232 = and i64 %13229, 4294967295
  store i64 %13232, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_434570, %struct.Memory** %MEMORY
  %loadMem_434573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13234 = getelementptr inbounds %struct.GPR, %struct.GPR* %13233, i32 0, i32 33
  %13235 = getelementptr inbounds %struct.Reg, %struct.Reg* %13234, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %13235 to i64*
  %13236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13237 = getelementptr inbounds %struct.GPR, %struct.GPR* %13236, i32 0, i32 1
  %13238 = getelementptr inbounds %struct.Reg, %struct.Reg* %13237, i32 0, i32 0
  %EAX.i51 = bitcast %union.anon* %13238 to i32*
  %13239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13240 = getelementptr inbounds %struct.GPR, %struct.GPR* %13239, i32 0, i32 9
  %13241 = getelementptr inbounds %struct.Reg, %struct.Reg* %13240, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %13241 to i64*
  %13242 = load i32, i32* %EAX.i51
  %13243 = zext i32 %13242 to i64
  %13244 = load i64, i64* %PC.i50
  %13245 = add i64 %13244, 2
  store i64 %13245, i64* %PC.i50
  %13246 = and i64 %13243, 4294967295
  store i64 %13246, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_434573, %struct.Memory** %MEMORY
  %loadMem_434575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13248 = getelementptr inbounds %struct.GPR, %struct.GPR* %13247, i32 0, i32 33
  %13249 = getelementptr inbounds %struct.Reg, %struct.Reg* %13248, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %13249 to i64*
  %13250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13251 = getelementptr inbounds %struct.GPR, %struct.GPR* %13250, i32 0, i32 1
  %13252 = getelementptr inbounds %struct.Reg, %struct.Reg* %13251, i32 0, i32 0
  %RAX.i48 = bitcast %union.anon* %13252 to i64*
  %13253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13254 = getelementptr inbounds %struct.GPR, %struct.GPR* %13253, i32 0, i32 15
  %13255 = getelementptr inbounds %struct.Reg, %struct.Reg* %13254, i32 0, i32 0
  %RBP.i49 = bitcast %union.anon* %13255 to i64*
  %13256 = load i64, i64* %RBP.i49
  %13257 = sub i64 %13256, 316
  %13258 = load i64, i64* %PC.i47
  %13259 = add i64 %13258, 6
  store i64 %13259, i64* %PC.i47
  %13260 = inttoptr i64 %13257 to i32*
  %13261 = load i32, i32* %13260
  %13262 = zext i32 %13261 to i64
  store i64 %13262, i64* %RAX.i48, align 8
  store %struct.Memory* %loadMem_434575, %struct.Memory** %MEMORY
  %loadMem_43457b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13264 = getelementptr inbounds %struct.GPR, %struct.GPR* %13263, i32 0, i32 33
  %13265 = getelementptr inbounds %struct.Reg, %struct.Reg* %13264, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %13265 to i64*
  %13266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13267 = getelementptr inbounds %struct.GPR, %struct.GPR* %13266, i32 0, i32 1
  %13268 = getelementptr inbounds %struct.Reg, %struct.Reg* %13267, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %13268 to i32*
  %13269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13270 = getelementptr inbounds %struct.GPR, %struct.GPR* %13269, i32 0, i32 7
  %13271 = getelementptr inbounds %struct.Reg, %struct.Reg* %13270, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %13271 to i64*
  %13272 = load i32, i32* %EAX.i
  %13273 = zext i32 %13272 to i64
  %13274 = load i64, i64* %PC.i46
  %13275 = add i64 %13274, 2
  store i64 %13275, i64* %PC.i46
  %13276 = and i64 %13273, 4294967295
  store i64 %13276, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_43457b, %struct.Memory** %MEMORY
  %loadMem1_43457d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13278 = getelementptr inbounds %struct.GPR, %struct.GPR* %13277, i32 0, i32 33
  %13279 = getelementptr inbounds %struct.Reg, %struct.Reg* %13278, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %13279 to i64*
  %13280 = load i64, i64* %PC.i45
  %13281 = add i64 %13280, -11293
  %13282 = load i64, i64* %PC.i45
  %13283 = add i64 %13282, 5
  %13284 = load i64, i64* %PC.i45
  %13285 = add i64 %13284, 5
  store i64 %13285, i64* %PC.i45
  %13286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13287 = load i64, i64* %13286, align 8
  %13288 = add i64 %13287, -8
  %13289 = inttoptr i64 %13288 to i64*
  store i64 %13283, i64* %13289
  store i64 %13288, i64* %13286, align 8
  %13290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13281, i64* %13290, align 8
  store %struct.Memory* %loadMem1_43457d, %struct.Memory** %MEMORY
  %loadMem2_43457d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43457d = load i64, i64* %3
  %call2_43457d = call %struct.Memory* @sub_431960.RandomIntraInit(%struct.State* %0, i64 %loadPC_43457d, %struct.Memory* %loadMem2_43457d)
  store %struct.Memory* %call2_43457d, %struct.Memory** %MEMORY
  %loadMem_434582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13292 = getelementptr inbounds %struct.GPR, %struct.GPR* %13291, i32 0, i32 33
  %13293 = getelementptr inbounds %struct.Reg, %struct.Reg* %13292, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %13293 to i64*
  %13294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13295 = getelementptr inbounds %struct.GPR, %struct.GPR* %13294, i32 0, i32 1
  %13296 = getelementptr inbounds %struct.Reg, %struct.Reg* %13295, i32 0, i32 0
  %13297 = bitcast %union.anon* %13296 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13297, i32 0, i32 0
  %13298 = load i64, i64* %PC.i44
  %13299 = add i64 %13298, 2
  store i64 %13299, i64* %PC.i44
  store i8 0, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_434582, %struct.Memory** %MEMORY
  %loadMem1_434584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13301 = getelementptr inbounds %struct.GPR, %struct.GPR* %13300, i32 0, i32 33
  %13302 = getelementptr inbounds %struct.Reg, %struct.Reg* %13301, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %13302 to i64*
  %13303 = load i64, i64* %PC.i43
  %13304 = add i64 %13303, 436476
  %13305 = load i64, i64* %PC.i43
  %13306 = add i64 %13305, 5
  %13307 = load i64, i64* %PC.i43
  %13308 = add i64 %13307, 5
  store i64 %13308, i64* %PC.i43
  %13309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13310 = load i64, i64* %13309, align 8
  %13311 = add i64 %13310, -8
  %13312 = inttoptr i64 %13311 to i64*
  store i64 %13306, i64* %13312
  store i64 %13311, i64* %13309, align 8
  %13313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13304, i64* %13313, align 8
  store %struct.Memory* %loadMem1_434584, %struct.Memory** %MEMORY
  %loadMem2_434584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_434584 = load i64, i64* %3
  %call2_434584 = call %struct.Memory* @sub_49ee80.InitSEIMessages(%struct.State* %0, i64 %loadPC_434584, %struct.Memory* %loadMem2_434584)
  store %struct.Memory* %call2_434584, %struct.Memory** %MEMORY
  %loadMem_434589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13315 = getelementptr inbounds %struct.GPR, %struct.GPR* %13314, i32 0, i32 33
  %13316 = getelementptr inbounds %struct.Reg, %struct.Reg* %13315, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %13316 to i64*
  %13317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13318 = getelementptr inbounds %struct.GPR, %struct.GPR* %13317, i32 0, i32 5
  %13319 = getelementptr inbounds %struct.Reg, %struct.Reg* %13318, i32 0, i32 0
  %RCX.i42 = bitcast %union.anon* %13319 to i64*
  %13320 = load i64, i64* %PC.i41
  %13321 = add i64 %13320, 8
  store i64 %13321, i64* %PC.i41
  %13322 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %13322, i64* %RCX.i42, align 8
  store %struct.Memory* %loadMem_434589, %struct.Memory** %MEMORY
  %loadMem_434591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13324 = getelementptr inbounds %struct.GPR, %struct.GPR* %13323, i32 0, i32 33
  %13325 = getelementptr inbounds %struct.Reg, %struct.Reg* %13324, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %13325 to i64*
  %13326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13327 = getelementptr inbounds %struct.GPR, %struct.GPR* %13326, i32 0, i32 5
  %13328 = getelementptr inbounds %struct.Reg, %struct.Reg* %13327, i32 0, i32 0
  %RCX.i40 = bitcast %union.anon* %13328 to i64*
  %13329 = load i64, i64* %RCX.i40
  %13330 = add i64 %13329, 2924
  %13331 = load i64, i64* %PC.i39
  %13332 = add i64 %13331, 7
  store i64 %13332, i64* %PC.i39
  %13333 = inttoptr i64 %13330 to i32*
  %13334 = load i32, i32* %13333
  %13335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13335, align 1
  %13336 = and i32 %13334, 255
  %13337 = call i32 @llvm.ctpop.i32(i32 %13336)
  %13338 = trunc i32 %13337 to i8
  %13339 = and i8 %13338, 1
  %13340 = xor i8 %13339, 1
  %13341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13340, i8* %13341, align 1
  %13342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13342, align 1
  %13343 = icmp eq i32 %13334, 0
  %13344 = zext i1 %13343 to i8
  %13345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13344, i8* %13345, align 1
  %13346 = lshr i32 %13334, 31
  %13347 = trunc i32 %13346 to i8
  %13348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13347, i8* %13348, align 1
  %13349 = lshr i32 %13334, 31
  %13350 = xor i32 %13346, %13349
  %13351 = add i32 %13350, %13349
  %13352 = icmp eq i32 %13351, 2
  %13353 = zext i1 %13352 to i8
  %13354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13353, i8* %13354, align 1
  store %struct.Memory* %loadMem_434591, %struct.Memory** %MEMORY
  %loadMem_434598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13356 = getelementptr inbounds %struct.GPR, %struct.GPR* %13355, i32 0, i32 33
  %13357 = getelementptr inbounds %struct.Reg, %struct.Reg* %13356, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %13357 to i64*
  %13358 = load i64, i64* %PC.i38
  %13359 = add i64 %13358, 57
  %13360 = load i64, i64* %PC.i38
  %13361 = add i64 %13360, 6
  %13362 = load i64, i64* %PC.i38
  %13363 = add i64 %13362, 6
  store i64 %13363, i64* %PC.i38
  %13364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13365 = load i8, i8* %13364, align 1
  store i8 %13365, i8* %BRANCH_TAKEN, align 1
  %13366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13367 = icmp ne i8 %13365, 0
  %13368 = select i1 %13367, i64 %13359, i64 %13361
  store i64 %13368, i64* %13366, align 8
  store %struct.Memory* %loadMem_434598, %struct.Memory** %MEMORY
  %loadBr_434598 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_434598 = icmp eq i8 %loadBr_434598, 1
  br i1 %cmpBr_434598, label %block_.L_4345d1, label %block_43459e

block_43459e:                                     ; preds = %routine_idivl__esi.exit
  %loadMem_43459e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13370 = getelementptr inbounds %struct.GPR, %struct.GPR* %13369, i32 0, i32 33
  %13371 = getelementptr inbounds %struct.Reg, %struct.Reg* %13370, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %13371 to i64*
  %13372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13373 = getelementptr inbounds %struct.GPR, %struct.GPR* %13372, i32 0, i32 1
  %13374 = getelementptr inbounds %struct.Reg, %struct.Reg* %13373, i32 0, i32 0
  %RAX.i37 = bitcast %union.anon* %13374 to i64*
  %13375 = load i64, i64* %PC.i36
  %13376 = add i64 %13375, 8
  store i64 %13376, i64* %PC.i36
  %13377 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %13377, i64* %RAX.i37, align 8
  store %struct.Memory* %loadMem_43459e, %struct.Memory** %MEMORY
  %loadMem_4345a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13379 = getelementptr inbounds %struct.GPR, %struct.GPR* %13378, i32 0, i32 33
  %13380 = getelementptr inbounds %struct.Reg, %struct.Reg* %13379, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %13380 to i64*
  %13381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13382 = getelementptr inbounds %struct.GPR, %struct.GPR* %13381, i32 0, i32 1
  %13383 = getelementptr inbounds %struct.Reg, %struct.Reg* %13382, i32 0, i32 0
  %RAX.i34 = bitcast %union.anon* %13383 to i64*
  %13384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13385 = getelementptr inbounds %struct.GPR, %struct.GPR* %13384, i32 0, i32 5
  %13386 = getelementptr inbounds %struct.Reg, %struct.Reg* %13385, i32 0, i32 0
  %RCX.i35 = bitcast %union.anon* %13386 to i64*
  %13387 = load i64, i64* %RAX.i34
  %13388 = add i64 %13387, 2932
  %13389 = load i64, i64* %PC.i33
  %13390 = add i64 %13389, 6
  store i64 %13390, i64* %PC.i33
  %13391 = inttoptr i64 %13388 to i32*
  %13392 = load i32, i32* %13391
  %13393 = zext i32 %13392 to i64
  store i64 %13393, i64* %RCX.i35, align 8
  store %struct.Memory* %loadMem_4345a6, %struct.Memory** %MEMORY
  %loadMem_4345ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %13394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13395 = getelementptr inbounds %struct.GPR, %struct.GPR* %13394, i32 0, i32 33
  %13396 = getelementptr inbounds %struct.Reg, %struct.Reg* %13395, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %13396 to i64*
  %13397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13398 = getelementptr inbounds %struct.GPR, %struct.GPR* %13397, i32 0, i32 5
  %13399 = getelementptr inbounds %struct.Reg, %struct.Reg* %13398, i32 0, i32 0
  %RCX.i32 = bitcast %union.anon* %13399 to i64*
  %13400 = load i64, i64* %RCX.i32
  %13401 = load i64, i64* %PC.i31
  %13402 = add i64 %13401, 2
  store i64 %13402, i64* %PC.i31
  %13403 = trunc i64 %13400 to i32
  %13404 = shl i32 %13403, 1
  %13405 = icmp slt i32 %13403, 0
  %13406 = icmp slt i32 %13404, 0
  %13407 = xor i1 %13405, %13406
  %13408 = zext i32 %13404 to i64
  store i64 %13408, i64* %RCX.i32, align 8
  %13409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13410 = zext i1 %13405 to i8
  store i8 %13410, i8* %13409, align 1
  %13411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13412 = and i32 %13404, 254
  %13413 = call i32 @llvm.ctpop.i32(i32 %13412)
  %13414 = trunc i32 %13413 to i8
  %13415 = and i8 %13414, 1
  %13416 = xor i8 %13415, 1
  store i8 %13416, i8* %13411, align 1
  %13417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13417, align 1
  %13418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13419 = icmp eq i32 %13404, 0
  %13420 = zext i1 %13419 to i8
  store i8 %13420, i8* %13418, align 1
  %13421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13422 = lshr i32 %13404, 31
  %13423 = trunc i32 %13422 to i8
  store i8 %13423, i8* %13421, align 1
  %13424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13425 = zext i1 %13407 to i8
  store i8 %13425, i8* %13424, align 1
  store %struct.Memory* %loadMem_4345ac, %struct.Memory** %MEMORY
  %loadMem_4345af = load %struct.Memory*, %struct.Memory** %MEMORY
  %13426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13427 = getelementptr inbounds %struct.GPR, %struct.GPR* %13426, i32 0, i32 33
  %13428 = getelementptr inbounds %struct.Reg, %struct.Reg* %13427, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %13428 to i64*
  %13429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13430 = getelementptr inbounds %struct.GPR, %struct.GPR* %13429, i32 0, i32 5
  %13431 = getelementptr inbounds %struct.Reg, %struct.Reg* %13430, i32 0, i32 0
  %ECX.i29 = bitcast %union.anon* %13431 to i32*
  %13432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13433 = getelementptr inbounds %struct.GPR, %struct.GPR* %13432, i32 0, i32 1
  %13434 = getelementptr inbounds %struct.Reg, %struct.Reg* %13433, i32 0, i32 0
  %RAX.i30 = bitcast %union.anon* %13434 to i64*
  %13435 = load i64, i64* %RAX.i30
  %13436 = add i64 %13435, 2932
  %13437 = load i32, i32* %ECX.i29
  %13438 = zext i32 %13437 to i64
  %13439 = load i64, i64* %PC.i28
  %13440 = add i64 %13439, 6
  store i64 %13440, i64* %PC.i28
  %13441 = inttoptr i64 %13436 to i32*
  store i32 %13437, i32* %13441
  store %struct.Memory* %loadMem_4345af, %struct.Memory** %MEMORY
  %loadMem_4345b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13443 = getelementptr inbounds %struct.GPR, %struct.GPR* %13442, i32 0, i32 33
  %13444 = getelementptr inbounds %struct.Reg, %struct.Reg* %13443, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %13444 to i64*
  %13445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13446 = getelementptr inbounds %struct.GPR, %struct.GPR* %13445, i32 0, i32 1
  %13447 = getelementptr inbounds %struct.Reg, %struct.Reg* %13446, i32 0, i32 0
  %RAX.i27 = bitcast %union.anon* %13447 to i64*
  %13448 = load i64, i64* %PC.i26
  %13449 = add i64 %13448, 8
  store i64 %13449, i64* %PC.i26
  %13450 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %13450, i64* %RAX.i27, align 8
  store %struct.Memory* %loadMem_4345b5, %struct.Memory** %MEMORY
  %loadMem_4345bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13452 = getelementptr inbounds %struct.GPR, %struct.GPR* %13451, i32 0, i32 33
  %13453 = getelementptr inbounds %struct.Reg, %struct.Reg* %13452, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %13453 to i64*
  %13454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13455 = getelementptr inbounds %struct.GPR, %struct.GPR* %13454, i32 0, i32 1
  %13456 = getelementptr inbounds %struct.Reg, %struct.Reg* %13455, i32 0, i32 0
  %RAX.i24 = bitcast %union.anon* %13456 to i64*
  %13457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13458 = getelementptr inbounds %struct.GPR, %struct.GPR* %13457, i32 0, i32 5
  %13459 = getelementptr inbounds %struct.Reg, %struct.Reg* %13458, i32 0, i32 0
  %RCX.i25 = bitcast %union.anon* %13459 to i64*
  %13460 = load i64, i64* %RAX.i24
  %13461 = add i64 %13460, 2936
  %13462 = load i64, i64* %PC.i23
  %13463 = add i64 %13462, 6
  store i64 %13463, i64* %PC.i23
  %13464 = inttoptr i64 %13461 to i32*
  %13465 = load i32, i32* %13464
  %13466 = zext i32 %13465 to i64
  store i64 %13466, i64* %RCX.i25, align 8
  store %struct.Memory* %loadMem_4345bd, %struct.Memory** %MEMORY
  %loadMem_4345c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13468 = getelementptr inbounds %struct.GPR, %struct.GPR* %13467, i32 0, i32 33
  %13469 = getelementptr inbounds %struct.Reg, %struct.Reg* %13468, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %13469 to i64*
  %13470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13471 = getelementptr inbounds %struct.GPR, %struct.GPR* %13470, i32 0, i32 5
  %13472 = getelementptr inbounds %struct.Reg, %struct.Reg* %13471, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %13472 to i64*
  %13473 = load i64, i64* %RCX.i
  %13474 = load i64, i64* %PC.i22
  %13475 = add i64 %13474, 2
  store i64 %13475, i64* %PC.i22
  %13476 = trunc i64 %13473 to i32
  %13477 = shl i32 %13476, 1
  %13478 = icmp slt i32 %13476, 0
  %13479 = icmp slt i32 %13477, 0
  %13480 = xor i1 %13478, %13479
  %13481 = zext i32 %13477 to i64
  store i64 %13481, i64* %RCX.i, align 8
  %13482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13483 = zext i1 %13478 to i8
  store i8 %13483, i8* %13482, align 1
  %13484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13485 = and i32 %13477, 254
  %13486 = call i32 @llvm.ctpop.i32(i32 %13485)
  %13487 = trunc i32 %13486 to i8
  %13488 = and i8 %13487, 1
  %13489 = xor i8 %13488, 1
  store i8 %13489, i8* %13484, align 1
  %13490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13490, align 1
  %13491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13492 = icmp eq i32 %13477, 0
  %13493 = zext i1 %13492 to i8
  store i8 %13493, i8* %13491, align 1
  %13494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13495 = lshr i32 %13477, 31
  %13496 = trunc i32 %13495 to i8
  store i8 %13496, i8* %13494, align 1
  %13497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13498 = zext i1 %13480 to i8
  store i8 %13498, i8* %13497, align 1
  store %struct.Memory* %loadMem_4345c3, %struct.Memory** %MEMORY
  %loadMem_4345c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13500 = getelementptr inbounds %struct.GPR, %struct.GPR* %13499, i32 0, i32 33
  %13501 = getelementptr inbounds %struct.Reg, %struct.Reg* %13500, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %13501 to i64*
  %13502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13503 = getelementptr inbounds %struct.GPR, %struct.GPR* %13502, i32 0, i32 5
  %13504 = getelementptr inbounds %struct.Reg, %struct.Reg* %13503, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %13504 to i32*
  %13505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13506 = getelementptr inbounds %struct.GPR, %struct.GPR* %13505, i32 0, i32 1
  %13507 = getelementptr inbounds %struct.Reg, %struct.Reg* %13506, i32 0, i32 0
  %RAX.i21 = bitcast %union.anon* %13507 to i64*
  %13508 = load i64, i64* %RAX.i21
  %13509 = add i64 %13508, 2936
  %13510 = load i32, i32* %ECX.i
  %13511 = zext i32 %13510 to i64
  %13512 = load i64, i64* %PC.i20
  %13513 = add i64 %13512, 6
  store i64 %13513, i64* %PC.i20
  %13514 = inttoptr i64 %13509 to i32*
  store i32 %13510, i32* %13514
  store %struct.Memory* %loadMem_4345c6, %struct.Memory** %MEMORY
  %loadMem_4345cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13516 = getelementptr inbounds %struct.GPR, %struct.GPR* %13515, i32 0, i32 33
  %13517 = getelementptr inbounds %struct.Reg, %struct.Reg* %13516, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %13517 to i64*
  %13518 = load i64, i64* %PC.i19
  %13519 = add i64 %13518, 59
  %13520 = load i64, i64* %PC.i19
  %13521 = add i64 %13520, 5
  store i64 %13521, i64* %PC.i19
  %13522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13519, i64* %13522, align 8
  store %struct.Memory* %loadMem_4345cc, %struct.Memory** %MEMORY
  br label %block_.L_434607

block_.L_4345d1:                                  ; preds = %routine_idivl__esi.exit
  %loadMem_4345d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13524 = getelementptr inbounds %struct.GPR, %struct.GPR* %13523, i32 0, i32 33
  %13525 = getelementptr inbounds %struct.Reg, %struct.Reg* %13524, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %13525 to i64*
  %13526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13527 = getelementptr inbounds %struct.GPR, %struct.GPR* %13526, i32 0, i32 1
  %13528 = getelementptr inbounds %struct.Reg, %struct.Reg* %13527, i32 0, i32 0
  %RAX.i18 = bitcast %union.anon* %13528 to i64*
  %13529 = load i64, i64* %PC.i17
  %13530 = add i64 %13529, 8
  store i64 %13530, i64* %PC.i17
  %13531 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %13531, i64* %RAX.i18, align 8
  store %struct.Memory* %loadMem_4345d1, %struct.Memory** %MEMORY
  %loadMem_4345d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13533 = getelementptr inbounds %struct.GPR, %struct.GPR* %13532, i32 0, i32 33
  %13534 = getelementptr inbounds %struct.Reg, %struct.Reg* %13533, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %13534 to i64*
  %13535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13536 = getelementptr inbounds %struct.GPR, %struct.GPR* %13535, i32 0, i32 1
  %13537 = getelementptr inbounds %struct.Reg, %struct.Reg* %13536, i32 0, i32 0
  %RAX.i16 = bitcast %union.anon* %13537 to i64*
  %13538 = load i64, i64* %RAX.i16
  %13539 = add i64 %13538, 2928
  %13540 = load i64, i64* %PC.i15
  %13541 = add i64 %13540, 10
  store i64 %13541, i64* %PC.i15
  %13542 = inttoptr i64 %13539 to i32*
  store i32 0, i32* %13542
  store %struct.Memory* %loadMem_4345d9, %struct.Memory** %MEMORY
  %loadMem_4345e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13544 = getelementptr inbounds %struct.GPR, %struct.GPR* %13543, i32 0, i32 33
  %13545 = getelementptr inbounds %struct.Reg, %struct.Reg* %13544, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %13545 to i64*
  %13546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13547 = getelementptr inbounds %struct.GPR, %struct.GPR* %13546, i32 0, i32 1
  %13548 = getelementptr inbounds %struct.Reg, %struct.Reg* %13547, i32 0, i32 0
  %RAX.i14 = bitcast %union.anon* %13548 to i64*
  %13549 = load i64, i64* %PC.i13
  %13550 = add i64 %13549, 8
  store i64 %13550, i64* %PC.i13
  %13551 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %13551, i64* %RAX.i14, align 8
  store %struct.Memory* %loadMem_4345e3, %struct.Memory** %MEMORY
  %loadMem_4345eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13553 = getelementptr inbounds %struct.GPR, %struct.GPR* %13552, i32 0, i32 33
  %13554 = getelementptr inbounds %struct.Reg, %struct.Reg* %13553, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %13554 to i64*
  %13555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13556 = getelementptr inbounds %struct.GPR, %struct.GPR* %13555, i32 0, i32 1
  %13557 = getelementptr inbounds %struct.Reg, %struct.Reg* %13556, i32 0, i32 0
  %RAX.i12 = bitcast %union.anon* %13557 to i64*
  %13558 = load i64, i64* %RAX.i12
  %13559 = add i64 %13558, 2932
  %13560 = load i64, i64* %PC.i11
  %13561 = add i64 %13560, 10
  store i64 %13561, i64* %PC.i11
  %13562 = inttoptr i64 %13559 to i32*
  store i32 0, i32* %13562
  store %struct.Memory* %loadMem_4345eb, %struct.Memory** %MEMORY
  %loadMem_4345f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13564 = getelementptr inbounds %struct.GPR, %struct.GPR* %13563, i32 0, i32 33
  %13565 = getelementptr inbounds %struct.Reg, %struct.Reg* %13564, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %13565 to i64*
  %13566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13567 = getelementptr inbounds %struct.GPR, %struct.GPR* %13566, i32 0, i32 1
  %13568 = getelementptr inbounds %struct.Reg, %struct.Reg* %13567, i32 0, i32 0
  %RAX.i10 = bitcast %union.anon* %13568 to i64*
  %13569 = load i64, i64* %PC.i9
  %13570 = add i64 %13569, 8
  store i64 %13570, i64* %PC.i9
  %13571 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %13571, i64* %RAX.i10, align 8
  store %struct.Memory* %loadMem_4345f5, %struct.Memory** %MEMORY
  %loadMem_4345fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13573 = getelementptr inbounds %struct.GPR, %struct.GPR* %13572, i32 0, i32 33
  %13574 = getelementptr inbounds %struct.Reg, %struct.Reg* %13573, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %13574 to i64*
  %13575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13576 = getelementptr inbounds %struct.GPR, %struct.GPR* %13575, i32 0, i32 1
  %13577 = getelementptr inbounds %struct.Reg, %struct.Reg* %13576, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %13577 to i64*
  %13578 = load i64, i64* %RAX.i
  %13579 = add i64 %13578, 2936
  %13580 = load i64, i64* %PC.i8
  %13581 = add i64 %13580, 10
  store i64 %13581, i64* %PC.i8
  %13582 = inttoptr i64 %13579 to i32*
  store i32 0, i32* %13582
  store %struct.Memory* %loadMem_4345fd, %struct.Memory** %MEMORY
  br label %block_.L_434607

block_.L_434607:                                  ; preds = %block_.L_4345d1, %block_43459e
  %loadMem_434607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13584 = getelementptr inbounds %struct.GPR, %struct.GPR* %13583, i32 0, i32 33
  %13585 = getelementptr inbounds %struct.Reg, %struct.Reg* %13584, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %13585 to i64*
  %13586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13587 = getelementptr inbounds %struct.GPR, %struct.GPR* %13586, i32 0, i32 13
  %13588 = getelementptr inbounds %struct.Reg, %struct.Reg* %13587, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %13588 to i64*
  %13589 = load i64, i64* %RSP.i
  %13590 = load i64, i64* %PC.i7
  %13591 = add i64 %13590, 7
  store i64 %13591, i64* %PC.i7
  %13592 = add i64 296, %13589
  store i64 %13592, i64* %RSP.i, align 8
  %13593 = icmp ult i64 %13592, %13589
  %13594 = icmp ult i64 %13592, 296
  %13595 = or i1 %13593, %13594
  %13596 = zext i1 %13595 to i8
  %13597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13596, i8* %13597, align 1
  %13598 = trunc i64 %13592 to i32
  %13599 = and i32 %13598, 255
  %13600 = call i32 @llvm.ctpop.i32(i32 %13599)
  %13601 = trunc i32 %13600 to i8
  %13602 = and i8 %13601, 1
  %13603 = xor i8 %13602, 1
  %13604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13603, i8* %13604, align 1
  %13605 = xor i64 296, %13589
  %13606 = xor i64 %13605, %13592
  %13607 = lshr i64 %13606, 4
  %13608 = trunc i64 %13607 to i8
  %13609 = and i8 %13608, 1
  %13610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13609, i8* %13610, align 1
  %13611 = icmp eq i64 %13592, 0
  %13612 = zext i1 %13611 to i8
  %13613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13612, i8* %13613, align 1
  %13614 = lshr i64 %13592, 63
  %13615 = trunc i64 %13614 to i8
  %13616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13615, i8* %13616, align 1
  %13617 = lshr i64 %13589, 63
  %13618 = xor i64 %13614, %13617
  %13619 = add i64 %13618, %13614
  %13620 = icmp eq i64 %13619, 2
  %13621 = zext i1 %13620 to i8
  %13622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13621, i8* %13622, align 1
  store %struct.Memory* %loadMem_434607, %struct.Memory** %MEMORY
  %loadMem_43460e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13624 = getelementptr inbounds %struct.GPR, %struct.GPR* %13623, i32 0, i32 33
  %13625 = getelementptr inbounds %struct.Reg, %struct.Reg* %13624, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %13625 to i64*
  %13626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13627 = getelementptr inbounds %struct.GPR, %struct.GPR* %13626, i32 0, i32 3
  %13628 = getelementptr inbounds %struct.Reg, %struct.Reg* %13627, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %13628 to i64*
  %13629 = load i64, i64* %PC.i6
  %13630 = add i64 %13629, 1
  store i64 %13630, i64* %PC.i6
  %13631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13632 = load i64, i64* %13631, align 8
  %13633 = add i64 %13632, 8
  %13634 = inttoptr i64 %13632 to i64*
  %13635 = load i64, i64* %13634
  store i64 %13635, i64* %RBX.i, align 8
  store i64 %13633, i64* %13631, align 8
  store %struct.Memory* %loadMem_43460e, %struct.Memory** %MEMORY
  %loadMem_43460f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13637 = getelementptr inbounds %struct.GPR, %struct.GPR* %13636, i32 0, i32 33
  %13638 = getelementptr inbounds %struct.Reg, %struct.Reg* %13637, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %13638 to i64*
  %13639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13640 = getelementptr inbounds %struct.GPR, %struct.GPR* %13639, i32 0, i32 29
  %13641 = getelementptr inbounds %struct.Reg, %struct.Reg* %13640, i32 0, i32 0
  %R14.i = bitcast %union.anon* %13641 to i64*
  %13642 = load i64, i64* %PC.i5
  %13643 = add i64 %13642, 2
  store i64 %13643, i64* %PC.i5
  %13644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13645 = load i64, i64* %13644, align 8
  %13646 = add i64 %13645, 8
  %13647 = inttoptr i64 %13645 to i64*
  %13648 = load i64, i64* %13647
  store i64 %13648, i64* %R14.i, align 8
  store i64 %13646, i64* %13644, align 8
  store %struct.Memory* %loadMem_43460f, %struct.Memory** %MEMORY
  %loadMem_434611 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13650 = getelementptr inbounds %struct.GPR, %struct.GPR* %13649, i32 0, i32 33
  %13651 = getelementptr inbounds %struct.Reg, %struct.Reg* %13650, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %13651 to i64*
  %13652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13653 = getelementptr inbounds %struct.GPR, %struct.GPR* %13652, i32 0, i32 31
  %13654 = getelementptr inbounds %struct.Reg, %struct.Reg* %13653, i32 0, i32 0
  %R15.i = bitcast %union.anon* %13654 to i64*
  %13655 = load i64, i64* %PC.i4
  %13656 = add i64 %13655, 2
  store i64 %13656, i64* %PC.i4
  %13657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13658 = load i64, i64* %13657, align 8
  %13659 = add i64 %13658, 8
  %13660 = inttoptr i64 %13658 to i64*
  %13661 = load i64, i64* %13660
  store i64 %13661, i64* %R15.i, align 8
  store i64 %13659, i64* %13657, align 8
  store %struct.Memory* %loadMem_434611, %struct.Memory** %MEMORY
  %loadMem_434613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13663 = getelementptr inbounds %struct.GPR, %struct.GPR* %13662, i32 0, i32 33
  %13664 = getelementptr inbounds %struct.Reg, %struct.Reg* %13663, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %13664 to i64*
  %13665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13666 = getelementptr inbounds %struct.GPR, %struct.GPR* %13665, i32 0, i32 15
  %13667 = getelementptr inbounds %struct.Reg, %struct.Reg* %13666, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %13667 to i64*
  %13668 = load i64, i64* %PC.i2
  %13669 = add i64 %13668, 1
  store i64 %13669, i64* %PC.i2
  %13670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13671 = load i64, i64* %13670, align 8
  %13672 = add i64 %13671, 8
  %13673 = inttoptr i64 %13671 to i64*
  %13674 = load i64, i64* %13673
  store i64 %13674, i64* %RBP.i3, align 8
  store i64 %13672, i64* %13670, align 8
  store %struct.Memory* %loadMem_434613, %struct.Memory** %MEMORY
  %loadMem_434614 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13676 = getelementptr inbounds %struct.GPR, %struct.GPR* %13675, i32 0, i32 33
  %13677 = getelementptr inbounds %struct.Reg, %struct.Reg* %13676, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %13677 to i64*
  %13678 = load i64, i64* %PC.i1
  %13679 = add i64 %13678, 1
  store i64 %13679, i64* %PC.i1
  %13680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13682 = load i64, i64* %13681, align 8
  %13683 = inttoptr i64 %13682 to i64*
  %13684 = load i64, i64* %13683
  store i64 %13684, i64* %13680, align 8
  %13685 = add i64 %13682, 8
  store i64 %13685, i64* %13681, align 8
  store %struct.Memory* %loadMem_434614, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_434614
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r15(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R15
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R14
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x128___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 296
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 296
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 296, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x48__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x11bfc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72700
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xce0__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 3296
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x11bd4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72660
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bd4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72660
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x11bd8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 72664
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_43359c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11bfc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72700
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4335cb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x10___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__0x11bd4__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 72660
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovgl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20 = load i8, i8* %19, align 1
  %21 = icmp ne i8 %20, 0
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %23 = load i8, i8* %22, align 1
  %24 = icmp ne i8 %23, 0
  %25 = xor i1 %21, %24
  %26 = xor i1 %25, true
  %27 = and i1 %18, %26
  %28 = load i64, i64* %RAX, align 8
  %29 = select i1 %27, i64 %13, i64 %28
  %30 = and i64 %29, 4294967295
  store i64 %30, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x11bd0__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72656
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4335f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__0x11bd8__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 72664
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bd4__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72660
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x8___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 8
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 8
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 8, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__0x6___edx___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  %18 = mul i64 6, %17
  %19 = trunc i64 %18 to i32
  %20 = and i64 %18, 4294967295
  store i64 %20, i64* %RDX, align 8
  %21 = shl i64 %18, 32
  %22 = ashr exact i64 %21, 32
  %23 = icmp ne i64 %22, %18
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = lshr i32 %19, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24, i8* %37, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x11bdc__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72668
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x11be4__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72676
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x11be8__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 72680
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bd4__rsi____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 72660
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RAX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x11bec__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 72684
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11bfc__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 72700
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43384f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 1, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xce4__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 3300
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x11bd8__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72664
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bd8__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72664
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 9
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RSI = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RSI
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RSI, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x11bf0__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72688
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bfc__rdx____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72700
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0xfffffffe___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 -2, %9
  %13 = trunc i64 %12 to i32
  %14 = and i64 %12, 4294967295
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %13, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x11bf4__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72692
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bf4__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72692
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x11bf8__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72696
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x11bfc__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 72700
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x29__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 41
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_433755(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x11bfc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72700
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sete__cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x29__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 41
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x29__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 41
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 1, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x10___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x8___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 8, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_testb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RDX, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x11c04__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 72708
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__0x11bfc__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 72700
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x2a__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 42
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4337a4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x2a__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 42
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x8___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RCX, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x11c08__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 72712
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bd8__rsi____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 72664
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x8___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 8
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 8
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 8, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__0x6___ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  %18 = mul i64 6, %17
  %19 = trunc i64 %18 to i32
  %20 = and i64 %18, 4294967295
  store i64 %20, i64* %RCX, align 8
  %21 = shl i64 %18, 32
  %22 = ashr exact i64 %21, 32
  %23 = icmp ne i64 %22, %18
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = lshr i32 %19, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24, i8* %37, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x11be0__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 72672
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11c14__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_433812(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11be0__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72672
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x6___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 6, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 6
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 6, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x11be0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72672
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4690___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xd4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x11c0c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72716
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xd8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x11c10__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72720
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_433903(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11bd8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72664
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11bf0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72688
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11bf4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72692
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11bf8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72696
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11c04__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72708
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11c08__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72712
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11be0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72672
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11c0c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72716
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11c10__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72720
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722cb0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x722cb0_type* @G_0x722cb0 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x46c__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 1132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x20__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 32
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x47c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_433947(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43395b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x24__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x24__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x11ab8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72376
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11bbc__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 72636
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsd2ss_0x978__rcx____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 2424
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x i32>*
  %17 = load <2 x i32>, <2 x i32>* %16, align 1
  %18 = getelementptr inbounds i8, i8* %11, i64 8
  %19 = bitcast i8* %18 to <2 x i32>*
  %20 = load <2 x i32>, <2 x i32>* %19, align 1
  %21 = inttoptr i64 %13 to double*
  %22 = load double, double* %21
  %23 = fptrunc double %22 to float
  %24 = bitcast i8* %11 to float*
  store float %23, float* %24, align 1
  %25 = extractelement <2 x i32> %17, i32 1
  %26 = getelementptr inbounds i8, i8* %11, i64 4
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  %28 = extractelement <2 x i32> %20, i32 0
  %29 = bitcast i8* %18 to i32*
  store i32 %28, i32* %29, align 1
  %30 = extractelement <2 x i32> %20, i32 1
  %31 = getelementptr inbounds i8, i8* %11, i64 12
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__0x30__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RCX
  %12 = add i64 %11, 48
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x118f0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 71920, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 71920
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 71920, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.get_mem_mv(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x118f8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 71928, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 71928
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 71928, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x4e8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 1256
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_433a2a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x11900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 71936, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 71936
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 71936, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x11908___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 71944, %9
  store i64 %12, i64* %RDI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 71944
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 71944, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3738___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 14136, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 14136
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 14136, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.get_mem_ACcoeff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3740___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 14144, %9
  store i64 %12, i64* %RDI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 14144
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 14144, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.get_mem_DCcoeff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xb44__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 2884
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_433d00(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x710a60___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x710a60_type* @G__0x710a60 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xca0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 3232, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 3232
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 3232, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x710a60___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x710a60_type* @G__0x710a60 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xca8___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 3240, %9
  store i64 %12, i64* %RDI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 3240
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 3240, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6cd878___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6cd878_type* @G__0x6cd878 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xca0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 3232, %9
  store i64 %12, i64* %RDI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 3232
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 3232, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d2198___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d2198_type* @G__0x6d2198 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x721e00___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x721e00_type* @G__0x721e00 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x4e8__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 1256
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_433c1e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xcb0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 3248, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 3248
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 3248, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xcb8___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 3256, %9
  store i64 %12, i64* %RDI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 3256
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 3256, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xcb0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 3248, %9
  store i64 %12, i64* %RDI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 3248
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 3248, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xc08___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 3080, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 3080
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 3080, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xc10___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 3088, %9
  store i64 %12, i64* %RDI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 3088
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 3088, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xc08___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 3080, %9
  store i64 %12, i64* %RDI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 3080
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 3080, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x9c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x11bf0__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 72688
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_433d3e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_433d55(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.calloc_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x11860__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 71776
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12, align 1
  %13 = trunc i64 %9 to i32
  %14 = and i32 %13, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i64 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i64 %9, 63
  %25 = trunc i64 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %9, 63
  %28 = xor i64 %24, %27
  %29 = add i64 %28, %27
  %30 = icmp eq i64 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_433d8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4c16f1___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4c16f1_type* @G__0x4c16f1 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.no_mem_exit(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xac__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movq_0x11860__rsi____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 71776
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x2___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 1
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__0x11860__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 71776
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_433e36(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_MINUS0x1c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RCX, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x11860__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 71776
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rdx__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ECX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_433dcd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x40__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11c18__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 72728
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x34__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 52
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x44__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11c1c__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 72732
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x3c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 60
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_433feb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x10___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x34__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x11bfc__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 72700
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl_0x6cb920___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 7125280
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 7
  store i64 %13, i64* %PC
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %15 = bitcast %union.anon* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %19 = bitcast %union.anon* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = inttoptr i64 %11 to i32*
  %23 = load i32, i32* %22
  %24 = sext i32 %23 to i64
  %25 = shl i64 %21, 32
  %26 = or i64 %25, %17
  %27 = sdiv i64 %26, %24
  %28 = shl i64 %27, 32
  %29 = ashr exact i64 %28, 32
  %30 = icmp eq i64 %27, %29
  br i1 %30, label %35, label %31

; <label>:31:                                     ; preds = %block_400488
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %33, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:35:                                     ; preds = %block_400488
  %36 = srem i64 %26, %24
  %37 = getelementptr inbounds %union.anon, %union.anon* %14, i64 0, i32 0
  %38 = and i64 %27, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %40 = and i64 %36, 4294967295
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %46, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %31, %35
  %47 = phi %struct.Memory* [ %34, %31 ], [ %2, %35 ]
  ret %struct.Memory* %47
}

define %struct.Memory* @routine_movl_MINUS0xb8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__0x38__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 56
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3c__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb4__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 180
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl_0x6cb930___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 7125296
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 7
  store i64 %13, i64* %PC
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %15 = bitcast %union.anon* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %19 = bitcast %union.anon* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = inttoptr i64 %11 to i32*
  %23 = load i32, i32* %22
  %24 = sext i32 %23 to i64
  %25 = shl i64 %21, 32
  %26 = or i64 %25, %17
  %27 = sdiv i64 %26, %24
  %28 = shl i64 %27, 32
  %29 = ashr exact i64 %28, 32
  %30 = icmp eq i64 %27, %29
  br i1 %30, label %35, label %31

; <label>:31:                                     ; preds = %block_400488
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %33, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:35:                                     ; preds = %block_400488
  %36 = srem i64 %26, %24
  %37 = getelementptr inbounds %union.anon, %union.anon* %14, i64 0, i32 0
  %38 = and i64 %27, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %40 = and i64 %36, 4294967295
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %46, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %31, %35
  %47 = phi %struct.Memory* [ %34, %31 ], [ %2, %35 ]
  ret %struct.Memory* %47
}

define %struct.Memory* @routine_movl_MINUS0xc0__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 192
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc4__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 196
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R10D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__0x40__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x40__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc8__rbp____r11d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 200
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xcc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r11d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R11D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xcc__rbp____ebx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ebx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EBX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__0xcec__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 3308
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x44__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd0__rbp____r14d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R14D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 208
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r14d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R14D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd4__rbp____r15d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R15D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 212
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__r15d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R15D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__0xce8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 3304
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43402d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x38__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 56
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x40__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0xcec__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 3308
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0xce8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 3304
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x40__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x44__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 68
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11c18__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 72728
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x11b14__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72468
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11c1c__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 72732
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x11b1c__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72476
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b14__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72468
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x11b1c__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 72476
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RAX, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x11b28__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72488
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722cb0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x722cb0_type* @G_0x722cb0 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x47c__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 1148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_434103(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b1c__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72476
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xdc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43411a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shrl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = lshr i32 %12, 31
  %14 = trunc i32 %13 to i8
  %15 = trunc i64 %9 to i8
  %16 = and i8 %15, 1
  %17 = lshr i64 %9, 1
  %18 = trunc i64 %17 to i32
  %19 = and i32 %18, 2147483647
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RCX, align 8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  store i8 %27, i8* %22, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %30 = icmp eq i32 %19, 0
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xdc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x278___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 632, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x11b18__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72472
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b28__rdx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72488
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x3758__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 14168
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_434172(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4c1705___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4c1705_type* @G__0x4c1705 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xd8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 216
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4341d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b28__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72488
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x11868__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 71784
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4341cb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4c171c___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4c171c_type* @G__0x4c171c to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4341d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x68___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 104, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 104
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 104, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x34__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xe0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3c__rdi____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xe4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xe4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.get_mem2Dint(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x70___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 112, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x34__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xe8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 236
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xec__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xf0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xf0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x710a60___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x710a60_type* @G__0x710a60 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xc40___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 3136, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 3136
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 3136, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xf4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 244
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xf8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xfc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xfc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xb44__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 2884
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x100__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4343f9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6cd878___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6cd878_type* @G__0x6cd878 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xc40___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 3136, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 3136
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 3136, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x108__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3c__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x10c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x108__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xc40___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 3136, %9
  store i64 %12, i64* %RDI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 3136
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 3136, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x34__r8____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x110__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3c__r8____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x114__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 276
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x114__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 276
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x118__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x11c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x11c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x120__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x80___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 128, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 128
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 128, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b28__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72488
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bf4__rcx____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72692
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x4___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 4, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 4
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 4, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x124__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 292
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x124__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 292
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.get_mem3Dint(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x128__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.CAVLC_init(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x12c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x12c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43450f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3c__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x130__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x130__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4344fc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x68__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 -1, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_434484(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_434501(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_434451(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x58__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 88
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x134__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 308
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x134__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 308
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3c__rcx____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x138__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb68__rcx____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 2920
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x138__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 312
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x13c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x13c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.RandomIntraInit(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.InitSEIMessages(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xb6c__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 2924
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4345d1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb74__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 2932
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0xb74__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 2932
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb78__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 2936
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0xb78__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 2936
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_434607(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0xb70__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2928
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0xb74__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2932
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0xb78__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2936
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x128___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 296, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 296
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 296, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBX, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R14, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r15(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R15, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
