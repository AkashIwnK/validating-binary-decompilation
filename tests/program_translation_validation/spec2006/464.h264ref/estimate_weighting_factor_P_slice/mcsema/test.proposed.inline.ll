; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x278672__rip__type = type <{ [8 x i8] }>
%G_0x3857__rip__type = type <{ [8 x i8] }>
%G_0x395e__rip__type = type <{ [8 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6d4740_type = type <{ [8 x i8] }>
%G_0x6f9728_type = type <{ [8 x i8] }>
%G_0x70f6d0_type = type <{ [4 x i8] }>
%G_0x710790_type = type <{ [4 x i8] }>
%G_0x7107a0_type = type <{ [4 x i8] }>
%G_0x722b20_type = type <{ [8 x i8] }>
%G_0x7242a0_type = type <{ [4 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x278672__rip_ = global %G_0x278672__rip__type zeroinitializer
@G_0x3857__rip_ = global %G_0x3857__rip__type zeroinitializer
@G_0x395e__rip_ = global %G_0x395e__rip__type zeroinitializer
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6d4740 = global %G_0x6d4740_type zeroinitializer
@G_0x6f9728 = global %G_0x6f9728_type zeroinitializer
@G_0x70f6d0 = global %G_0x70f6d0_type zeroinitializer
@G_0x710790 = global %G_0x710790_type zeroinitializer
@G_0x7107a0 = global %G_0x7107a0_type zeroinitializer
@G_0x722b20 = global %G_0x722b20_type zeroinitializer
@G_0x7242a0 = global %G_0x7242a0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

; Function Attrs: alwaysinline
define %struct.Memory* @estimate_weighting_factor_P_slice(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_4adb10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_4adb10, %struct.Memory** %MEMORY
  %loadMem_4adb11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1155 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1156 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1155
  %27 = load i64, i64* %PC.i1154
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1154
  store i64 %26, i64* %RBP.i1156, align 8
  store %struct.Memory* %loadMem_4adb11, %struct.Memory** %MEMORY
  %loadMem_4adb14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1174 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1174
  %36 = load i64, i64* %PC.i1173
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1173
  %38 = sub i64 %35, 848
  store i64 %38, i64* %RSP.i1174, align 8
  %39 = icmp ult i64 %35, 848
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 848, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_4adb14, %struct.Memory** %MEMORY
  %loadMem_4adb1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1621 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %71 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %70, i64 0, i64 0
  %YMM0.i1622 = bitcast %union.VectorReg* %71 to %"class.std::bitset"*
  %72 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %73 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %72, i64 0, i64 0
  %XMM0.i1623 = bitcast %union.VectorReg* %73 to %union.vec128_t*
  %74 = bitcast %"class.std::bitset"* %YMM0.i1622 to i8*
  %75 = bitcast %"class.std::bitset"* %YMM0.i1622 to i8*
  %76 = bitcast %union.vec128_t* %XMM0.i1623 to i8*
  %77 = load i64, i64* %PC.i1621
  %78 = add i64 %77, 3
  store i64 %78, i64* %PC.i1621
  %79 = bitcast i8* %75 to i64*
  %80 = load i64, i64* %79, align 1
  %81 = getelementptr inbounds i8, i8* %75, i64 8
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 1
  %84 = bitcast i8* %76 to i64*
  %85 = load i64, i64* %84, align 1
  %86 = getelementptr inbounds i8, i8* %76, i64 8
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 1
  %89 = xor i64 %85, %80
  %90 = xor i64 %88, %83
  %91 = trunc i64 %89 to i32
  %92 = lshr i64 %89, 32
  %93 = trunc i64 %92 to i32
  %94 = bitcast i8* %74 to i32*
  store i32 %91, i32* %94, align 1
  %95 = getelementptr inbounds i8, i8* %74, i64 4
  %96 = bitcast i8* %95 to i32*
  store i32 %93, i32* %96, align 1
  %97 = trunc i64 %90 to i32
  %98 = getelementptr inbounds i8, i8* %74, i64 8
  %99 = bitcast i8* %98 to i32*
  store i32 %97, i32* %99, align 1
  %100 = lshr i64 %90, 32
  %101 = trunc i64 %100 to i32
  %102 = getelementptr inbounds i8, i8* %74, i64 12
  %103 = bitcast i8* %102 to i32*
  store i32 %101, i32* %103, align 1
  store %struct.Memory* %loadMem_4adb1b, %struct.Memory** %MEMORY
  %loadMem_4adb1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %105 = getelementptr inbounds %struct.GPR, %struct.GPR* %104, i32 0, i32 33
  %106 = getelementptr inbounds %struct.Reg, %struct.Reg* %105, i32 0, i32 0
  %PC.i1667 = bitcast %union.anon* %106 to i64*
  %107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %108 = getelementptr inbounds %struct.GPR, %struct.GPR* %107, i32 0, i32 11
  %109 = getelementptr inbounds %struct.Reg, %struct.Reg* %108, i32 0, i32 0
  %EDI.i1668 = bitcast %union.anon* %109 to i32*
  %110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %111 = getelementptr inbounds %struct.GPR, %struct.GPR* %110, i32 0, i32 15
  %112 = getelementptr inbounds %struct.Reg, %struct.Reg* %111, i32 0, i32 0
  %RBP.i1669 = bitcast %union.anon* %112 to i64*
  %113 = load i64, i64* %RBP.i1669
  %114 = sub i64 %113, 4
  %115 = load i32, i32* %EDI.i1668
  %116 = zext i32 %115 to i64
  %117 = load i64, i64* %PC.i1667
  %118 = add i64 %117, 3
  store i64 %118, i64* %PC.i1667
  %119 = inttoptr i64 %114 to i32*
  store i32 %115, i32* %119
  store %struct.Memory* %loadMem_4adb1e, %struct.Memory** %MEMORY
  %loadMem_4adb21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 33
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %PC.i1664 = bitcast %union.anon* %122 to i64*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 15
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %RBP.i1665 = bitcast %union.anon* %125 to i64*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %127 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %126, i64 0, i64 0
  %XMM0.i1666 = bitcast %union.VectorReg* %127 to %union.vec128_t*
  %128 = load i64, i64* %RBP.i1665
  %129 = sub i64 %128, 24
  %130 = bitcast %union.vec128_t* %XMM0.i1666 to i8*
  %131 = load i64, i64* %PC.i1664
  %132 = add i64 %131, 5
  store i64 %132, i64* %PC.i1664
  %133 = bitcast i8* %130 to double*
  %134 = load double, double* %133, align 1
  %135 = inttoptr i64 %129 to double*
  store double %134, double* %135
  store %struct.Memory* %loadMem_4adb21, %struct.Memory** %MEMORY
  %loadMem_4adb26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %137 = getelementptr inbounds %struct.GPR, %struct.GPR* %136, i32 0, i32 33
  %138 = getelementptr inbounds %struct.Reg, %struct.Reg* %137, i32 0, i32 0
  %PC.i1662 = bitcast %union.anon* %138 to i64*
  %139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %140 = getelementptr inbounds %struct.GPR, %struct.GPR* %139, i32 0, i32 1
  %141 = getelementptr inbounds %struct.Reg, %struct.Reg* %140, i32 0, i32 0
  %RAX.i1663 = bitcast %union.anon* %141 to i64*
  %142 = load i64, i64* %PC.i1662
  %143 = add i64 %142, 8
  store i64 %143, i64* %PC.i1662
  %144 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %144, i64* %RAX.i1663, align 8
  store %struct.Memory* %loadMem_4adb26, %struct.Memory** %MEMORY
  %loadMem_4adb2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %146 = getelementptr inbounds %struct.GPR, %struct.GPR* %145, i32 0, i32 33
  %147 = getelementptr inbounds %struct.Reg, %struct.Reg* %146, i32 0, i32 0
  %PC.i1660 = bitcast %union.anon* %147 to i64*
  %148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %149 = getelementptr inbounds %struct.GPR, %struct.GPR* %148, i32 0, i32 1
  %150 = getelementptr inbounds %struct.Reg, %struct.Reg* %149, i32 0, i32 0
  %RAX.i1661 = bitcast %union.anon* %150 to i64*
  %151 = load i64, i64* %RAX.i1661
  %152 = add i64 %151, 72400
  %153 = load i64, i64* %PC.i1660
  %154 = add i64 %153, 7
  store i64 %154, i64* %PC.i1660
  %155 = inttoptr i64 %152 to i32*
  %156 = load i32, i32* %155
  %157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %157, align 1
  %158 = and i32 %156, 255
  %159 = call i32 @llvm.ctpop.i32(i32 %158)
  %160 = trunc i32 %159 to i8
  %161 = and i8 %160, 1
  %162 = xor i8 %161, 1
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %162, i8* %163, align 1
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %164, align 1
  %165 = icmp eq i32 %156, 0
  %166 = zext i1 %165 to i8
  %167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %166, i8* %167, align 1
  %168 = lshr i32 %156, 31
  %169 = trunc i32 %168 to i8
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %169, i8* %170, align 1
  %171 = lshr i32 %156, 31
  %172 = xor i32 %168, %171
  %173 = add i32 %172, %171
  %174 = icmp eq i32 %173, 2
  %175 = zext i1 %174 to i8
  %176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %175, i8* %176, align 1
  store %struct.Memory* %loadMem_4adb2e, %struct.Memory** %MEMORY
  %loadMem_4adb35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 33
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %PC.i1659 = bitcast %union.anon* %179 to i64*
  %180 = load i64, i64* %PC.i1659
  %181 = add i64 %180, 111
  %182 = load i64, i64* %PC.i1659
  %183 = add i64 %182, 6
  %184 = load i64, i64* %PC.i1659
  %185 = add i64 %184, 6
  store i64 %185, i64* %PC.i1659
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %187 = load i8, i8* %186, align 1
  store i8 %187, i8* %BRANCH_TAKEN, align 1
  %188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %189 = icmp ne i8 %187, 0
  %190 = select i1 %189, i64 %181, i64 %183
  store i64 %190, i64* %188, align 8
  store %struct.Memory* %loadMem_4adb35, %struct.Memory** %MEMORY
  %loadBr_4adb35 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4adb35 = icmp eq i8 %loadBr_4adb35, 1
  br i1 %cmpBr_4adb35, label %block_.L_4adba4, label %block_4adb3b

block_4adb3b:                                     ; preds = %entry
  %loadMem_4adb3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %192 = getelementptr inbounds %struct.GPR, %struct.GPR* %191, i32 0, i32 33
  %193 = getelementptr inbounds %struct.Reg, %struct.Reg* %192, i32 0, i32 0
  %PC.i1657 = bitcast %union.anon* %193 to i64*
  %194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %195 = getelementptr inbounds %struct.GPR, %struct.GPR* %194, i32 0, i32 1
  %196 = getelementptr inbounds %struct.Reg, %struct.Reg* %195, i32 0, i32 0
  %RAX.i1658 = bitcast %union.anon* %196 to i64*
  %197 = load i64, i64* %PC.i1657
  %198 = add i64 %197, 8
  store i64 %198, i64* %PC.i1657
  %199 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %199, i64* %RAX.i1658, align 8
  store %struct.Memory* %loadMem_4adb3b, %struct.Memory** %MEMORY
  %loadMem_4adb43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %201 = getelementptr inbounds %struct.GPR, %struct.GPR* %200, i32 0, i32 33
  %202 = getelementptr inbounds %struct.Reg, %struct.Reg* %201, i32 0, i32 0
  %PC.i1655 = bitcast %union.anon* %202 to i64*
  %203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %204 = getelementptr inbounds %struct.GPR, %struct.GPR* %203, i32 0, i32 1
  %205 = getelementptr inbounds %struct.Reg, %struct.Reg* %204, i32 0, i32 0
  %RAX.i1656 = bitcast %union.anon* %205 to i64*
  %206 = load i64, i64* %RAX.i1656
  %207 = add i64 %206, 14168
  %208 = load i64, i64* %PC.i1655
  %209 = add i64 %208, 7
  store i64 %209, i64* %PC.i1655
  %210 = inttoptr i64 %207 to i64*
  %211 = load i64, i64* %210
  store i64 %211, i64* %RAX.i1656, align 8
  store %struct.Memory* %loadMem_4adb43, %struct.Memory** %MEMORY
  %loadMem_4adb4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %213 = getelementptr inbounds %struct.GPR, %struct.GPR* %212, i32 0, i32 33
  %214 = getelementptr inbounds %struct.Reg, %struct.Reg* %213, i32 0, i32 0
  %PC.i1653 = bitcast %union.anon* %214 to i64*
  %215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %216 = getelementptr inbounds %struct.GPR, %struct.GPR* %215, i32 0, i32 5
  %217 = getelementptr inbounds %struct.Reg, %struct.Reg* %216, i32 0, i32 0
  %RCX.i1654 = bitcast %union.anon* %217 to i64*
  %218 = load i64, i64* %PC.i1653
  %219 = add i64 %218, 8
  store i64 %219, i64* %PC.i1653
  %220 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %220, i64* %RCX.i1654, align 8
  store %struct.Memory* %loadMem_4adb4a, %struct.Memory** %MEMORY
  %loadMem_4adb52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 33
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %PC.i1651 = bitcast %union.anon* %223 to i64*
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %225 = getelementptr inbounds %struct.GPR, %struct.GPR* %224, i32 0, i32 5
  %226 = getelementptr inbounds %struct.Reg, %struct.Reg* %225, i32 0, i32 0
  %RCX.i1652 = bitcast %union.anon* %226 to i64*
  %227 = load i64, i64* %RCX.i1652
  %228 = add i64 %227, 12
  %229 = load i64, i64* %PC.i1651
  %230 = add i64 %229, 4
  store i64 %230, i64* %PC.i1651
  %231 = inttoptr i64 %228 to i32*
  %232 = load i32, i32* %231
  %233 = sext i32 %232 to i64
  store i64 %233, i64* %RCX.i1652, align 8
  store %struct.Memory* %loadMem_4adb52, %struct.Memory** %MEMORY
  %loadMem_4adb56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 33
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %PC.i1649 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 5
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RCX.i1650 = bitcast %union.anon* %239 to i64*
  %240 = load i64, i64* %RCX.i1650
  %241 = load i64, i64* %PC.i1649
  %242 = add i64 %241, 7
  store i64 %242, i64* %PC.i1649
  %243 = sext i64 %240 to i128
  %244 = and i128 %243, -18446744073709551616
  %245 = zext i64 %240 to i128
  %246 = or i128 %244, %245
  %247 = mul i128 632, %246
  %248 = trunc i128 %247 to i64
  store i64 %248, i64* %RCX.i1650, align 8
  %249 = sext i64 %248 to i128
  %250 = icmp ne i128 %249, %247
  %251 = zext i1 %250 to i8
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %251, i8* %252, align 1
  %253 = trunc i128 %247 to i32
  %254 = and i32 %253, 255
  %255 = call i32 @llvm.ctpop.i32(i32 %254)
  %256 = trunc i32 %255 to i8
  %257 = and i8 %256, 1
  %258 = xor i8 %257, 1
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %258, i8* %259, align 1
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %260, align 1
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %261, align 1
  %262 = lshr i64 %248, 63
  %263 = trunc i64 %262 to i8
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %263, i8* %264, align 1
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %251, i8* %265, align 1
  store %struct.Memory* %loadMem_4adb56, %struct.Memory** %MEMORY
  %loadMem_4adb5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %267 = getelementptr inbounds %struct.GPR, %struct.GPR* %266, i32 0, i32 33
  %268 = getelementptr inbounds %struct.Reg, %struct.Reg* %267, i32 0, i32 0
  %PC.i1646 = bitcast %union.anon* %268 to i64*
  %269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %270 = getelementptr inbounds %struct.GPR, %struct.GPR* %269, i32 0, i32 1
  %271 = getelementptr inbounds %struct.Reg, %struct.Reg* %270, i32 0, i32 0
  %RAX.i1647 = bitcast %union.anon* %271 to i64*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %273 = getelementptr inbounds %struct.GPR, %struct.GPR* %272, i32 0, i32 5
  %274 = getelementptr inbounds %struct.Reg, %struct.Reg* %273, i32 0, i32 0
  %RCX.i1648 = bitcast %union.anon* %274 to i64*
  %275 = load i64, i64* %RAX.i1647
  %276 = load i64, i64* %RCX.i1648
  %277 = load i64, i64* %PC.i1646
  %278 = add i64 %277, 3
  store i64 %278, i64* %PC.i1646
  %279 = add i64 %276, %275
  store i64 %279, i64* %RAX.i1647, align 8
  %280 = icmp ult i64 %279, %275
  %281 = icmp ult i64 %279, %276
  %282 = or i1 %280, %281
  %283 = zext i1 %282 to i8
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %283, i8* %284, align 1
  %285 = trunc i64 %279 to i32
  %286 = and i32 %285, 255
  %287 = call i32 @llvm.ctpop.i32(i32 %286)
  %288 = trunc i32 %287 to i8
  %289 = and i8 %288, 1
  %290 = xor i8 %289, 1
  %291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %290, i8* %291, align 1
  %292 = xor i64 %276, %275
  %293 = xor i64 %292, %279
  %294 = lshr i64 %293, 4
  %295 = trunc i64 %294 to i8
  %296 = and i8 %295, 1
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %296, i8* %297, align 1
  %298 = icmp eq i64 %279, 0
  %299 = zext i1 %298 to i8
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %299, i8* %300, align 1
  %301 = lshr i64 %279, 63
  %302 = trunc i64 %301 to i8
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %302, i8* %303, align 1
  %304 = lshr i64 %275, 63
  %305 = lshr i64 %276, 63
  %306 = xor i64 %301, %304
  %307 = xor i64 %301, %305
  %308 = add i64 %306, %307
  %309 = icmp eq i64 %308, 2
  %310 = zext i1 %309 to i8
  %311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %310, i8* %311, align 1
  store %struct.Memory* %loadMem_4adb5d, %struct.Memory** %MEMORY
  %loadMem_4adb60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %313 = getelementptr inbounds %struct.GPR, %struct.GPR* %312, i32 0, i32 33
  %314 = getelementptr inbounds %struct.Reg, %struct.Reg* %313, i32 0, i32 0
  %PC.i1644 = bitcast %union.anon* %314 to i64*
  %315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %316 = getelementptr inbounds %struct.GPR, %struct.GPR* %315, i32 0, i32 1
  %317 = getelementptr inbounds %struct.Reg, %struct.Reg* %316, i32 0, i32 0
  %RAX.i1645 = bitcast %union.anon* %317 to i64*
  %318 = load i64, i64* %RAX.i1645
  %319 = add i64 %318, 532
  %320 = load i64, i64* %PC.i1644
  %321 = add i64 %320, 7
  store i64 %321, i64* %PC.i1644
  %322 = inttoptr i64 %319 to i32*
  %323 = load i32, i32* %322
  %324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %324, align 1
  %325 = and i32 %323, 255
  %326 = call i32 @llvm.ctpop.i32(i32 %325)
  %327 = trunc i32 %326 to i8
  %328 = and i8 %327, 1
  %329 = xor i8 %328, 1
  %330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %329, i8* %330, align 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %331, align 1
  %332 = icmp eq i32 %323, 0
  %333 = zext i1 %332 to i8
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %333, i8* %334, align 1
  %335 = lshr i32 %323, 31
  %336 = trunc i32 %335 to i8
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %336, i8* %337, align 1
  %338 = lshr i32 %323, 31
  %339 = xor i32 %335, %338
  %340 = add i32 %339, %338
  %341 = icmp eq i32 %340, 2
  %342 = zext i1 %341 to i8
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %342, i8* %343, align 1
  store %struct.Memory* %loadMem_4adb60, %struct.Memory** %MEMORY
  %loadMem_4adb67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %345 = getelementptr inbounds %struct.GPR, %struct.GPR* %344, i32 0, i32 33
  %346 = getelementptr inbounds %struct.Reg, %struct.Reg* %345, i32 0, i32 0
  %PC.i1643 = bitcast %union.anon* %346 to i64*
  %347 = load i64, i64* %PC.i1643
  %348 = add i64 %347, 61
  %349 = load i64, i64* %PC.i1643
  %350 = add i64 %349, 6
  %351 = load i64, i64* %PC.i1643
  %352 = add i64 %351, 6
  store i64 %352, i64* %PC.i1643
  %353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %354 = load i8, i8* %353, align 1
  store i8 %354, i8* %BRANCH_TAKEN, align 1
  %355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %356 = icmp ne i8 %354, 0
  %357 = select i1 %356, i64 %348, i64 %350
  store i64 %357, i64* %355, align 8
  store %struct.Memory* %loadMem_4adb67, %struct.Memory** %MEMORY
  %loadBr_4adb67 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4adb67 = icmp eq i8 %loadBr_4adb67, 1
  br i1 %cmpBr_4adb67, label %block_.L_4adba4, label %block_4adb6d

block_4adb6d:                                     ; preds = %block_4adb3b
  %loadMem_4adb6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %359 = getelementptr inbounds %struct.GPR, %struct.GPR* %358, i32 0, i32 33
  %360 = getelementptr inbounds %struct.Reg, %struct.Reg* %359, i32 0, i32 0
  %PC.i1641 = bitcast %union.anon* %360 to i64*
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %362 = getelementptr inbounds %struct.GPR, %struct.GPR* %361, i32 0, i32 1
  %363 = getelementptr inbounds %struct.Reg, %struct.Reg* %362, i32 0, i32 0
  %RAX.i1642 = bitcast %union.anon* %363 to i64*
  %364 = load i64, i64* %PC.i1641
  %365 = add i64 %364, 5
  store i64 %365, i64* %PC.i1641
  store i64 2, i64* %RAX.i1642, align 8
  store %struct.Memory* %loadMem_4adb6d, %struct.Memory** %MEMORY
  %loadMem_4adb72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %367 = getelementptr inbounds %struct.GPR, %struct.GPR* %366, i32 0, i32 33
  %368 = getelementptr inbounds %struct.Reg, %struct.Reg* %367, i32 0, i32 0
  %PC.i1639 = bitcast %union.anon* %368 to i64*
  %369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %370 = getelementptr inbounds %struct.GPR, %struct.GPR* %369, i32 0, i32 5
  %371 = getelementptr inbounds %struct.Reg, %struct.Reg* %370, i32 0, i32 0
  %RCX.i1640 = bitcast %union.anon* %371 to i64*
  %372 = load i64, i64* %PC.i1639
  %373 = add i64 %372, 5
  store i64 %373, i64* %PC.i1639
  store i64 4, i64* %RCX.i1640, align 8
  store %struct.Memory* %loadMem_4adb72, %struct.Memory** %MEMORY
  %loadMem_4adb77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %375 = getelementptr inbounds %struct.GPR, %struct.GPR* %374, i32 0, i32 33
  %376 = getelementptr inbounds %struct.Reg, %struct.Reg* %375, i32 0, i32 0
  %PC.i1637 = bitcast %union.anon* %376 to i64*
  %377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %378 = getelementptr inbounds %struct.GPR, %struct.GPR* %377, i32 0, i32 7
  %379 = getelementptr inbounds %struct.Reg, %struct.Reg* %378, i32 0, i32 0
  %RDX.i1638 = bitcast %union.anon* %379 to i64*
  %380 = load i64, i64* %PC.i1637
  %381 = add i64 %380, 8
  store i64 %381, i64* %PC.i1637
  %382 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %382, i64* %RDX.i1638, align 8
  store %struct.Memory* %loadMem_4adb77, %struct.Memory** %MEMORY
  %loadMem_4adb7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %384 = getelementptr inbounds %struct.GPR, %struct.GPR* %383, i32 0, i32 33
  %385 = getelementptr inbounds %struct.Reg, %struct.Reg* %384, i32 0, i32 0
  %PC.i1634 = bitcast %union.anon* %385 to i64*
  %386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %387 = getelementptr inbounds %struct.GPR, %struct.GPR* %386, i32 0, i32 7
  %388 = getelementptr inbounds %struct.Reg, %struct.Reg* %387, i32 0, i32 0
  %RDX.i1635 = bitcast %union.anon* %388 to i64*
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %390 = getelementptr inbounds %struct.GPR, %struct.GPR* %389, i32 0, i32 9
  %391 = getelementptr inbounds %struct.Reg, %struct.Reg* %390, i32 0, i32 0
  %RSI.i1636 = bitcast %union.anon* %391 to i64*
  %392 = load i64, i64* %RDX.i1635
  %393 = add i64 %392, 12
  %394 = load i64, i64* %PC.i1634
  %395 = add i64 %394, 3
  store i64 %395, i64* %PC.i1634
  %396 = inttoptr i64 %393 to i32*
  %397 = load i32, i32* %396
  %398 = zext i32 %397 to i64
  store i64 %398, i64* %RSI.i1636, align 8
  store %struct.Memory* %loadMem_4adb7f, %struct.Memory** %MEMORY
  %loadMem_4adb82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %400 = getelementptr inbounds %struct.GPR, %struct.GPR* %399, i32 0, i32 33
  %401 = getelementptr inbounds %struct.Reg, %struct.Reg* %400, i32 0, i32 0
  %PC.i1631 = bitcast %union.anon* %401 to i64*
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %403 = getelementptr inbounds %struct.GPR, %struct.GPR* %402, i32 0, i32 1
  %404 = getelementptr inbounds %struct.Reg, %struct.Reg* %403, i32 0, i32 0
  %EAX.i1632 = bitcast %union.anon* %404 to i32*
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %406 = getelementptr inbounds %struct.GPR, %struct.GPR* %405, i32 0, i32 15
  %407 = getelementptr inbounds %struct.Reg, %struct.Reg* %406, i32 0, i32 0
  %RBP.i1633 = bitcast %union.anon* %407 to i64*
  %408 = load i64, i64* %RBP.i1633
  %409 = sub i64 %408, 936
  %410 = load i32, i32* %EAX.i1632
  %411 = zext i32 %410 to i64
  %412 = load i64, i64* %PC.i1631
  %413 = add i64 %412, 6
  store i64 %413, i64* %PC.i1631
  %414 = inttoptr i64 %409 to i32*
  store i32 %410, i32* %414
  store %struct.Memory* %loadMem_4adb82, %struct.Memory** %MEMORY
  %loadMem_4adb88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %416 = getelementptr inbounds %struct.GPR, %struct.GPR* %415, i32 0, i32 33
  %417 = getelementptr inbounds %struct.Reg, %struct.Reg* %416, i32 0, i32 0
  %PC.i1628 = bitcast %union.anon* %417 to i64*
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %419 = getelementptr inbounds %struct.GPR, %struct.GPR* %418, i32 0, i32 9
  %420 = getelementptr inbounds %struct.Reg, %struct.Reg* %419, i32 0, i32 0
  %ESI.i1629 = bitcast %union.anon* %420 to i32*
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %422 = getelementptr inbounds %struct.GPR, %struct.GPR* %421, i32 0, i32 1
  %423 = getelementptr inbounds %struct.Reg, %struct.Reg* %422, i32 0, i32 0
  %RAX.i1630 = bitcast %union.anon* %423 to i64*
  %424 = load i32, i32* %ESI.i1629
  %425 = zext i32 %424 to i64
  %426 = load i64, i64* %PC.i1628
  %427 = add i64 %426, 2
  store i64 %427, i64* %PC.i1628
  %428 = and i64 %425, 4294967295
  store i64 %428, i64* %RAX.i1630, align 8
  store %struct.Memory* %loadMem_4adb88, %struct.Memory** %MEMORY
  %loadMem_4adb8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %430 = getelementptr inbounds %struct.GPR, %struct.GPR* %429, i32 0, i32 33
  %431 = getelementptr inbounds %struct.Reg, %struct.Reg* %430, i32 0, i32 0
  %PC.i1627 = bitcast %union.anon* %431 to i64*
  %432 = load i64, i64* %PC.i1627
  %433 = add i64 %432, 1
  store i64 %433, i64* %PC.i1627
  %434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %436 = bitcast %union.anon* %435 to i32*
  %437 = load i32, i32* %436, align 8
  %438 = sext i32 %437 to i64
  %439 = lshr i64 %438, 32
  store i64 %439, i64* %434, align 8
  store %struct.Memory* %loadMem_4adb8a, %struct.Memory** %MEMORY
  %loadMem_4adb8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %441 = getelementptr inbounds %struct.GPR, %struct.GPR* %440, i32 0, i32 33
  %442 = getelementptr inbounds %struct.Reg, %struct.Reg* %441, i32 0, i32 0
  %PC.i1624 = bitcast %union.anon* %442 to i64*
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %444 = getelementptr inbounds %struct.GPR, %struct.GPR* %443, i32 0, i32 9
  %445 = getelementptr inbounds %struct.Reg, %struct.Reg* %444, i32 0, i32 0
  %RSI.i1625 = bitcast %union.anon* %445 to i64*
  %446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %447 = getelementptr inbounds %struct.GPR, %struct.GPR* %446, i32 0, i32 15
  %448 = getelementptr inbounds %struct.Reg, %struct.Reg* %447, i32 0, i32 0
  %RBP.i1626 = bitcast %union.anon* %448 to i64*
  %449 = load i64, i64* %RBP.i1626
  %450 = sub i64 %449, 936
  %451 = load i64, i64* %PC.i1624
  %452 = add i64 %451, 6
  store i64 %452, i64* %PC.i1624
  %453 = inttoptr i64 %450 to i32*
  %454 = load i32, i32* %453
  %455 = zext i32 %454 to i64
  store i64 %455, i64* %RSI.i1625, align 8
  store %struct.Memory* %loadMem_4adb8b, %struct.Memory** %MEMORY
  %loadMem_4adb91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %457 = getelementptr inbounds %struct.GPR, %struct.GPR* %456, i32 0, i32 33
  %458 = getelementptr inbounds %struct.Reg, %struct.Reg* %457, i32 0, i32 0
  %PC.i1619 = bitcast %union.anon* %458 to i64*
  %459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %460 = getelementptr inbounds %struct.GPR, %struct.GPR* %459, i32 0, i32 9
  %461 = getelementptr inbounds %struct.Reg, %struct.Reg* %460, i32 0, i32 0
  %ESI.i1620 = bitcast %union.anon* %461 to i32*
  %462 = load i32, i32* %ESI.i1620
  %463 = zext i32 %462 to i64
  %464 = load i64, i64* %PC.i1619
  %465 = add i64 %464, 2
  store i64 %465, i64* %PC.i1619
  %466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %467 = bitcast %union.anon* %466 to i32*
  %468 = load i32, i32* %467, align 8
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %471 = bitcast %union.anon* %470 to i32*
  %472 = load i32, i32* %471, align 8
  %473 = zext i32 %472 to i64
  %474 = shl i64 %463, 32
  %475 = ashr exact i64 %474, 32
  %476 = shl i64 %473, 32
  %477 = or i64 %476, %469
  %478 = sdiv i64 %477, %475
  %479 = shl i64 %478, 32
  %480 = ashr exact i64 %479, 32
  %481 = icmp eq i64 %478, %480
  br i1 %481, label %486, label %482

; <label>:482:                                    ; preds = %block_4adb6d
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %484 = load i64, i64* %483, align 8
  %485 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %484, %struct.Memory* %loadMem_4adb91)
  br label %routine_idivl__esi.exit

; <label>:486:                                    ; preds = %block_4adb6d
  %487 = srem i64 %477, %475
  %488 = getelementptr inbounds %union.anon, %union.anon* %466, i64 0, i32 0
  %489 = and i64 %478, 4294967295
  store i64 %489, i64* %488, align 8
  %490 = getelementptr inbounds %union.anon, %union.anon* %470, i64 0, i32 0
  %491 = and i64 %487, 4294967295
  store i64 %491, i64* %490, align 8
  %492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %492, align 1
  %493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %493, align 1
  %494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %494, align 1
  %495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %495, align 1
  %496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %496, align 1
  %497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %497, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %482, %486
  %498 = phi %struct.Memory* [ %485, %482 ], [ %loadMem_4adb91, %486 ]
  store %struct.Memory* %498, %struct.Memory** %MEMORY
  %loadMem_4adb93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %500 = getelementptr inbounds %struct.GPR, %struct.GPR* %499, i32 0, i32 33
  %501 = getelementptr inbounds %struct.Reg, %struct.Reg* %500, i32 0, i32 0
  %PC.i1617 = bitcast %union.anon* %501 to i64*
  %502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %503 = getelementptr inbounds %struct.GPR, %struct.GPR* %502, i32 0, i32 7
  %504 = getelementptr inbounds %struct.Reg, %struct.Reg* %503, i32 0, i32 0
  %EDX.i1618 = bitcast %union.anon* %504 to i32*
  %505 = load i32, i32* %EDX.i1618
  %506 = zext i32 %505 to i64
  %507 = load i64, i64* %PC.i1617
  %508 = add i64 %507, 3
  store i64 %508, i64* %PC.i1617
  %509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %509, align 1
  %510 = and i32 %505, 255
  %511 = call i32 @llvm.ctpop.i32(i32 %510)
  %512 = trunc i32 %511 to i8
  %513 = and i8 %512, 1
  %514 = xor i8 %513, 1
  %515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %514, i8* %515, align 1
  %516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %516, align 1
  %517 = icmp eq i32 %505, 0
  %518 = zext i1 %517 to i8
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %518, i8* %519, align 1
  %520 = lshr i32 %505, 31
  %521 = trunc i32 %520 to i8
  %522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %521, i8* %522, align 1
  %523 = lshr i32 %505, 31
  %524 = xor i32 %520, %523
  %525 = add i32 %524, %523
  %526 = icmp eq i32 %525, 2
  %527 = zext i1 %526 to i8
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %527, i8* %528, align 1
  store %struct.Memory* %loadMem_4adb93, %struct.Memory** %MEMORY
  %loadMem_4adb96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %530 = getelementptr inbounds %struct.GPR, %struct.GPR* %529, i32 0, i32 33
  %531 = getelementptr inbounds %struct.Reg, %struct.Reg* %530, i32 0, i32 0
  %PC.i1614 = bitcast %union.anon* %531 to i64*
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %533 = getelementptr inbounds %struct.GPR, %struct.GPR* %532, i32 0, i32 5
  %534 = getelementptr inbounds %struct.Reg, %struct.Reg* %533, i32 0, i32 0
  %ECX.i1615 = bitcast %union.anon* %534 to i32*
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %536 = getelementptr inbounds %struct.GPR, %struct.GPR* %535, i32 0, i32 9
  %537 = getelementptr inbounds %struct.Reg, %struct.Reg* %536, i32 0, i32 0
  %RSI.i1616 = bitcast %union.anon* %537 to i64*
  %538 = load i32, i32* %ECX.i1615
  %539 = zext i32 %538 to i64
  %540 = load i64, i64* %PC.i1614
  %541 = add i64 %540, 3
  store i64 %541, i64* %PC.i1614
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %543 = load i8, i8* %542, align 1
  %544 = icmp eq i8 %543, 0
  %545 = load i64, i64* %RSI.i1616, align 8
  %546 = select i1 %544, i64 %539, i64 %545
  %547 = and i64 %546, 4294967295
  store i64 %547, i64* %RSI.i1616, align 8
  store %struct.Memory* %loadMem_4adb96, %struct.Memory** %MEMORY
  %loadMem_4adb99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %549 = getelementptr inbounds %struct.GPR, %struct.GPR* %548, i32 0, i32 33
  %550 = getelementptr inbounds %struct.Reg, %struct.Reg* %549, i32 0, i32 0
  %PC.i1611 = bitcast %union.anon* %550 to i64*
  %551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %552 = getelementptr inbounds %struct.GPR, %struct.GPR* %551, i32 0, i32 9
  %553 = getelementptr inbounds %struct.Reg, %struct.Reg* %552, i32 0, i32 0
  %ESI.i1612 = bitcast %union.anon* %553 to i32*
  %554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %555 = getelementptr inbounds %struct.GPR, %struct.GPR* %554, i32 0, i32 15
  %556 = getelementptr inbounds %struct.Reg, %struct.Reg* %555, i32 0, i32 0
  %RBP.i1613 = bitcast %union.anon* %556 to i64*
  %557 = load i64, i64* %RBP.i1613
  %558 = sub i64 %557, 940
  %559 = load i32, i32* %ESI.i1612
  %560 = zext i32 %559 to i64
  %561 = load i64, i64* %PC.i1611
  %562 = add i64 %561, 6
  store i64 %562, i64* %PC.i1611
  %563 = inttoptr i64 %558 to i32*
  store i32 %559, i32* %563
  store %struct.Memory* %loadMem_4adb99, %struct.Memory** %MEMORY
  %loadMem_4adb9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %565 = getelementptr inbounds %struct.GPR, %struct.GPR* %564, i32 0, i32 33
  %566 = getelementptr inbounds %struct.Reg, %struct.Reg* %565, i32 0, i32 0
  %PC.i1610 = bitcast %union.anon* %566 to i64*
  %567 = load i64, i64* %PC.i1610
  %568 = add i64 %567, 18
  %569 = load i64, i64* %PC.i1610
  %570 = add i64 %569, 5
  store i64 %570, i64* %PC.i1610
  %571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %568, i64* %571, align 8
  store %struct.Memory* %loadMem_4adb9f, %struct.Memory** %MEMORY
  br label %block_.L_4adbb1

block_.L_4adba4:                                  ; preds = %block_4adb3b, %entry
  %loadMem_4adba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %573 = getelementptr inbounds %struct.GPR, %struct.GPR* %572, i32 0, i32 33
  %574 = getelementptr inbounds %struct.Reg, %struct.Reg* %573, i32 0, i32 0
  %PC.i1607 = bitcast %union.anon* %574 to i64*
  %575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %576 = getelementptr inbounds %struct.GPR, %struct.GPR* %575, i32 0, i32 1
  %577 = getelementptr inbounds %struct.Reg, %struct.Reg* %576, i32 0, i32 0
  %EAX.i1608 = bitcast %union.anon* %577 to i32*
  %578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %579 = getelementptr inbounds %struct.GPR, %struct.GPR* %578, i32 0, i32 1
  %580 = getelementptr inbounds %struct.Reg, %struct.Reg* %579, i32 0, i32 0
  %RAX.i1609 = bitcast %union.anon* %580 to i64*
  %581 = load i64, i64* %RAX.i1609
  %582 = load i32, i32* %EAX.i1608
  %583 = zext i32 %582 to i64
  %584 = load i64, i64* %PC.i1607
  %585 = add i64 %584, 2
  store i64 %585, i64* %PC.i1607
  %586 = xor i64 %583, %581
  %587 = trunc i64 %586 to i32
  %588 = and i64 %586, 4294967295
  store i64 %588, i64* %RAX.i1609, align 8
  %589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %589, align 1
  %590 = and i32 %587, 255
  %591 = call i32 @llvm.ctpop.i32(i32 %590)
  %592 = trunc i32 %591 to i8
  %593 = and i8 %592, 1
  %594 = xor i8 %593, 1
  %595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %594, i8* %595, align 1
  %596 = icmp eq i32 %587, 0
  %597 = zext i1 %596 to i8
  %598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %597, i8* %598, align 1
  %599 = lshr i32 %587, 31
  %600 = trunc i32 %599 to i8
  %601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %600, i8* %601, align 1
  %602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %602, align 1
  %603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %603, align 1
  store %struct.Memory* %loadMem_4adba4, %struct.Memory** %MEMORY
  %loadMem_4adba6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %605 = getelementptr inbounds %struct.GPR, %struct.GPR* %604, i32 0, i32 33
  %606 = getelementptr inbounds %struct.Reg, %struct.Reg* %605, i32 0, i32 0
  %PC.i1604 = bitcast %union.anon* %606 to i64*
  %607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %608 = getelementptr inbounds %struct.GPR, %struct.GPR* %607, i32 0, i32 1
  %609 = getelementptr inbounds %struct.Reg, %struct.Reg* %608, i32 0, i32 0
  %EAX.i1605 = bitcast %union.anon* %609 to i32*
  %610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %611 = getelementptr inbounds %struct.GPR, %struct.GPR* %610, i32 0, i32 15
  %612 = getelementptr inbounds %struct.Reg, %struct.Reg* %611, i32 0, i32 0
  %RBP.i1606 = bitcast %union.anon* %612 to i64*
  %613 = load i64, i64* %RBP.i1606
  %614 = sub i64 %613, 940
  %615 = load i32, i32* %EAX.i1605
  %616 = zext i32 %615 to i64
  %617 = load i64, i64* %PC.i1604
  %618 = add i64 %617, 6
  store i64 %618, i64* %PC.i1604
  %619 = inttoptr i64 %614 to i32*
  store i32 %615, i32* %619
  store %struct.Memory* %loadMem_4adba6, %struct.Memory** %MEMORY
  %loadMem_4adbac = load %struct.Memory*, %struct.Memory** %MEMORY
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %621 = getelementptr inbounds %struct.GPR, %struct.GPR* %620, i32 0, i32 33
  %622 = getelementptr inbounds %struct.Reg, %struct.Reg* %621, i32 0, i32 0
  %PC.i1603 = bitcast %union.anon* %622 to i64*
  %623 = load i64, i64* %PC.i1603
  %624 = add i64 %623, 5
  %625 = load i64, i64* %PC.i1603
  %626 = add i64 %625, 5
  store i64 %626, i64* %PC.i1603
  %627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %624, i64* %627, align 8
  store %struct.Memory* %loadMem_4adbac, %struct.Memory** %MEMORY
  br label %block_.L_4adbb1

block_.L_4adbb1:                                  ; preds = %block_.L_4adba4, %routine_idivl__esi.exit
  %loadMem_4adbb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %629 = getelementptr inbounds %struct.GPR, %struct.GPR* %628, i32 0, i32 33
  %630 = getelementptr inbounds %struct.Reg, %struct.Reg* %629, i32 0, i32 0
  %PC.i1600 = bitcast %union.anon* %630 to i64*
  %631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %632 = getelementptr inbounds %struct.GPR, %struct.GPR* %631, i32 0, i32 1
  %633 = getelementptr inbounds %struct.Reg, %struct.Reg* %632, i32 0, i32 0
  %RAX.i1601 = bitcast %union.anon* %633 to i64*
  %634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %635 = getelementptr inbounds %struct.GPR, %struct.GPR* %634, i32 0, i32 15
  %636 = getelementptr inbounds %struct.Reg, %struct.Reg* %635, i32 0, i32 0
  %RBP.i1602 = bitcast %union.anon* %636 to i64*
  %637 = load i64, i64* %RBP.i1602
  %638 = sub i64 %637, 940
  %639 = load i64, i64* %PC.i1600
  %640 = add i64 %639, 6
  store i64 %640, i64* %PC.i1600
  %641 = inttoptr i64 %638 to i32*
  %642 = load i32, i32* %641
  %643 = zext i32 %642 to i64
  store i64 %643, i64* %RAX.i1601, align 8
  store %struct.Memory* %loadMem_4adbb1, %struct.Memory** %MEMORY
  %loadMem_4adbb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %645 = getelementptr inbounds %struct.GPR, %struct.GPR* %644, i32 0, i32 33
  %646 = getelementptr inbounds %struct.Reg, %struct.Reg* %645, i32 0, i32 0
  %PC.i1598 = bitcast %union.anon* %646 to i64*
  %647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %648 = getelementptr inbounds %struct.GPR, %struct.GPR* %647, i32 0, i32 5
  %649 = getelementptr inbounds %struct.Reg, %struct.Reg* %648, i32 0, i32 0
  %RCX.i1599 = bitcast %union.anon* %649 to i64*
  %650 = load i64, i64* %PC.i1598
  %651 = add i64 %650, 5
  store i64 %651, i64* %PC.i1598
  store i64 1, i64* %RCX.i1599, align 8
  store %struct.Memory* %loadMem_4adbb7, %struct.Memory** %MEMORY
  %loadMem_4adbbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %653 = getelementptr inbounds %struct.GPR, %struct.GPR* %652, i32 0, i32 33
  %654 = getelementptr inbounds %struct.Reg, %struct.Reg* %653, i32 0, i32 0
  %PC.i1595 = bitcast %union.anon* %654 to i64*
  %655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %656 = getelementptr inbounds %struct.GPR, %struct.GPR* %655, i32 0, i32 1
  %657 = getelementptr inbounds %struct.Reg, %struct.Reg* %656, i32 0, i32 0
  %EAX.i1596 = bitcast %union.anon* %657 to i32*
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %659 = getelementptr inbounds %struct.GPR, %struct.GPR* %658, i32 0, i32 15
  %660 = getelementptr inbounds %struct.Reg, %struct.Reg* %659, i32 0, i32 0
  %RBP.i1597 = bitcast %union.anon* %660 to i64*
  %661 = load i64, i64* %RBP.i1597
  %662 = sub i64 %661, 192
  %663 = load i32, i32* %EAX.i1596
  %664 = zext i32 %663 to i64
  %665 = load i64, i64* %PC.i1595
  %666 = add i64 %665, 6
  store i64 %666, i64* %PC.i1595
  %667 = inttoptr i64 %662 to i32*
  store i32 %663, i32* %667
  store %struct.Memory* %loadMem_4adbbc, %struct.Memory** %MEMORY
  %loadMem_4adbc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %669 = getelementptr inbounds %struct.GPR, %struct.GPR* %668, i32 0, i32 33
  %670 = getelementptr inbounds %struct.Reg, %struct.Reg* %669, i32 0, i32 0
  %PC.i1594 = bitcast %union.anon* %670 to i64*
  %671 = load i64, i64* %PC.i1594
  %672 = add i64 %671, 11
  store i64 %672, i64* %PC.i1594
  store i32 5, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  store %struct.Memory* %loadMem_4adbc2, %struct.Memory** %MEMORY
  %loadMem_4adbcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %674 = getelementptr inbounds %struct.GPR, %struct.GPR* %673, i32 0, i32 33
  %675 = getelementptr inbounds %struct.Reg, %struct.Reg* %674, i32 0, i32 0
  %PC.i1593 = bitcast %union.anon* %675 to i64*
  %676 = load i64, i64* %PC.i1593
  %677 = add i64 %676, 11
  store i64 %677, i64* %PC.i1593
  store i32 5, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  store %struct.Memory* %loadMem_4adbcd, %struct.Memory** %MEMORY
  %loadMem_4adbd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %679 = getelementptr inbounds %struct.GPR, %struct.GPR* %678, i32 0, i32 33
  %680 = getelementptr inbounds %struct.Reg, %struct.Reg* %679, i32 0, i32 0
  %PC.i1591 = bitcast %union.anon* %680 to i64*
  %681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %682 = getelementptr inbounds %struct.GPR, %struct.GPR* %681, i32 0, i32 1
  %683 = getelementptr inbounds %struct.Reg, %struct.Reg* %682, i32 0, i32 0
  %RAX.i1592 = bitcast %union.anon* %683 to i64*
  %684 = load i64, i64* %PC.i1591
  %685 = add i64 %684, 7
  store i64 %685, i64* %PC.i1591
  %686 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %687 = zext i32 %686 to i64
  store i64 %687, i64* %RAX.i1592, align 8
  store %struct.Memory* %loadMem_4adbd8, %struct.Memory** %MEMORY
  %loadMem_4adbdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %689 = getelementptr inbounds %struct.GPR, %struct.GPR* %688, i32 0, i32 33
  %690 = getelementptr inbounds %struct.Reg, %struct.Reg* %689, i32 0, i32 0
  %PC.i1589 = bitcast %union.anon* %690 to i64*
  %691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %692 = getelementptr inbounds %struct.GPR, %struct.GPR* %691, i32 0, i32 1
  %693 = getelementptr inbounds %struct.Reg, %struct.Reg* %692, i32 0, i32 0
  %RAX.i1590 = bitcast %union.anon* %693 to i64*
  %694 = load i64, i64* %RAX.i1590
  %695 = load i64, i64* %PC.i1589
  %696 = add i64 %695, 3
  store i64 %696, i64* %PC.i1589
  %697 = trunc i64 %694 to i32
  %698 = sub i32 %697, 1
  %699 = zext i32 %698 to i64
  store i64 %699, i64* %RAX.i1590, align 8
  %700 = icmp ult i32 %697, 1
  %701 = zext i1 %700 to i8
  %702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %701, i8* %702, align 1
  %703 = and i32 %698, 255
  %704 = call i32 @llvm.ctpop.i32(i32 %703)
  %705 = trunc i32 %704 to i8
  %706 = and i8 %705, 1
  %707 = xor i8 %706, 1
  %708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %707, i8* %708, align 1
  %709 = xor i64 1, %694
  %710 = trunc i64 %709 to i32
  %711 = xor i32 %710, %698
  %712 = lshr i32 %711, 4
  %713 = trunc i32 %712 to i8
  %714 = and i8 %713, 1
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %714, i8* %715, align 1
  %716 = icmp eq i32 %698, 0
  %717 = zext i1 %716 to i8
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %717, i8* %718, align 1
  %719 = lshr i32 %698, 31
  %720 = trunc i32 %719 to i8
  %721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %720, i8* %721, align 1
  %722 = lshr i32 %697, 31
  %723 = xor i32 %719, %722
  %724 = add i32 %723, %722
  %725 = icmp eq i32 %724, 2
  %726 = zext i1 %725 to i8
  %727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %726, i8* %727, align 1
  store %struct.Memory* %loadMem_4adbdf, %struct.Memory** %MEMORY
  %loadMem_4adbe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %729 = getelementptr inbounds %struct.GPR, %struct.GPR* %728, i32 0, i32 33
  %730 = getelementptr inbounds %struct.Reg, %struct.Reg* %729, i32 0, i32 0
  %PC.i1586 = bitcast %union.anon* %730 to i64*
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %732 = getelementptr inbounds %struct.GPR, %struct.GPR* %731, i32 0, i32 5
  %733 = getelementptr inbounds %struct.Reg, %struct.Reg* %732, i32 0, i32 0
  %ECX.i1587 = bitcast %union.anon* %733 to i32*
  %734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %735 = getelementptr inbounds %struct.GPR, %struct.GPR* %734, i32 0, i32 15
  %736 = getelementptr inbounds %struct.Reg, %struct.Reg* %735, i32 0, i32 0
  %RBP.i1588 = bitcast %union.anon* %736 to i64*
  %737 = load i64, i64* %RBP.i1588
  %738 = sub i64 %737, 944
  %739 = load i32, i32* %ECX.i1587
  %740 = zext i32 %739 to i64
  %741 = load i64, i64* %PC.i1586
  %742 = add i64 %741, 6
  store i64 %742, i64* %PC.i1586
  %743 = inttoptr i64 %738 to i32*
  store i32 %739, i32* %743
  store %struct.Memory* %loadMem_4adbe2, %struct.Memory** %MEMORY
  %loadMem_4adbe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %745 = getelementptr inbounds %struct.GPR, %struct.GPR* %744, i32 0, i32 33
  %746 = getelementptr inbounds %struct.Reg, %struct.Reg* %745, i32 0, i32 0
  %PC.i1583 = bitcast %union.anon* %746 to i64*
  %747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %748 = getelementptr inbounds %struct.GPR, %struct.GPR* %747, i32 0, i32 1
  %749 = getelementptr inbounds %struct.Reg, %struct.Reg* %748, i32 0, i32 0
  %EAX.i1584 = bitcast %union.anon* %749 to i32*
  %750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %751 = getelementptr inbounds %struct.GPR, %struct.GPR* %750, i32 0, i32 5
  %752 = getelementptr inbounds %struct.Reg, %struct.Reg* %751, i32 0, i32 0
  %RCX.i1585 = bitcast %union.anon* %752 to i64*
  %753 = load i32, i32* %EAX.i1584
  %754 = zext i32 %753 to i64
  %755 = load i64, i64* %PC.i1583
  %756 = add i64 %755, 2
  store i64 %756, i64* %PC.i1583
  %757 = and i64 %754, 4294967295
  store i64 %757, i64* %RCX.i1585, align 8
  store %struct.Memory* %loadMem_4adbe8, %struct.Memory** %MEMORY
  %loadMem_4adbea = load %struct.Memory*, %struct.Memory** %MEMORY
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %759 = getelementptr inbounds %struct.GPR, %struct.GPR* %758, i32 0, i32 33
  %760 = getelementptr inbounds %struct.Reg, %struct.Reg* %759, i32 0, i32 0
  %PC.i1580 = bitcast %union.anon* %760 to i64*
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %762 = getelementptr inbounds %struct.GPR, %struct.GPR* %761, i32 0, i32 1
  %763 = getelementptr inbounds %struct.Reg, %struct.Reg* %762, i32 0, i32 0
  %RAX.i1581 = bitcast %union.anon* %763 to i64*
  %764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %765 = getelementptr inbounds %struct.GPR, %struct.GPR* %764, i32 0, i32 15
  %766 = getelementptr inbounds %struct.Reg, %struct.Reg* %765, i32 0, i32 0
  %RBP.i1582 = bitcast %union.anon* %766 to i64*
  %767 = load i64, i64* %RBP.i1582
  %768 = sub i64 %767, 944
  %769 = load i64, i64* %PC.i1580
  %770 = add i64 %769, 6
  store i64 %770, i64* %PC.i1580
  %771 = inttoptr i64 %768 to i32*
  %772 = load i32, i32* %771
  %773 = zext i32 %772 to i64
  store i64 %773, i64* %RAX.i1581, align 8
  store %struct.Memory* %loadMem_4adbea, %struct.Memory** %MEMORY
  %loadMem_4adbf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %775 = getelementptr inbounds %struct.GPR, %struct.GPR* %774, i32 0, i32 33
  %776 = getelementptr inbounds %struct.Reg, %struct.Reg* %775, i32 0, i32 0
  %PC.i1576 = bitcast %union.anon* %776 to i64*
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %778 = getelementptr inbounds %struct.GPR, %struct.GPR* %777, i32 0, i32 5
  %779 = getelementptr inbounds %struct.Reg, %struct.Reg* %778, i32 0, i32 0
  %780 = bitcast %union.anon* %779 to %struct.anon.2*
  %CL.i1577 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %780, i32 0, i32 0
  %781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %782 = getelementptr inbounds %struct.GPR, %struct.GPR* %781, i32 0, i32 1
  %783 = getelementptr inbounds %struct.Reg, %struct.Reg* %782, i32 0, i32 0
  %RAX.i1578 = bitcast %union.anon* %783 to i64*
  %784 = load i64, i64* %RAX.i1578
  %785 = load i8, i8* %CL.i1577
  %786 = zext i8 %785 to i64
  %787 = load i64, i64* %PC.i1576
  %788 = add i64 %787, 2
  store i64 %788, i64* %PC.i1576
  %789 = trunc i64 %786 to i5
  switch i5 %789, label %796 [
    i5 0, label %routine_shll__cl___eax.exit1579
    i5 1, label %790
  ]

; <label>:790:                                    ; preds = %block_.L_4adbb1
  %791 = trunc i64 %784 to i32
  %792 = shl i32 %791, 1
  %793 = icmp slt i32 %791, 0
  %794 = icmp slt i32 %792, 0
  %795 = xor i1 %793, %794
  br label %805

; <label>:796:                                    ; preds = %block_.L_4adbb1
  %797 = and i64 %786, 31
  %798 = add i64 %797, 4294967295
  %799 = and i64 %784, 4294967295
  %800 = and i64 %798, 4294967295
  %801 = shl i64 %799, %800
  %802 = trunc i64 %801 to i32
  %803 = icmp slt i32 %802, 0
  %804 = shl i32 %802, 1
  br label %805

; <label>:805:                                    ; preds = %796, %790
  %806 = phi i1 [ %793, %790 ], [ %803, %796 ]
  %807 = phi i1 [ %795, %790 ], [ false, %796 ]
  %808 = phi i32 [ %792, %790 ], [ %804, %796 ]
  %809 = zext i32 %808 to i64
  store i64 %809, i64* %RAX.i1578, align 8
  %810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %811 = zext i1 %806 to i8
  store i8 %811, i8* %810, align 1
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %813 = and i32 %808, 254
  %814 = call i32 @llvm.ctpop.i32(i32 %813)
  %815 = trunc i32 %814 to i8
  %816 = and i8 %815, 1
  %817 = xor i8 %816, 1
  store i8 %817, i8* %812, align 1
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %818, align 1
  %819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %820 = icmp eq i32 %808, 0
  %821 = zext i1 %820 to i8
  store i8 %821, i8* %819, align 1
  %822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %823 = lshr i32 %808, 31
  %824 = trunc i32 %823 to i8
  store i8 %824, i8* %822, align 1
  %825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %826 = zext i1 %807 to i8
  store i8 %826, i8* %825, align 1
  br label %routine_shll__cl___eax.exit1579

routine_shll__cl___eax.exit1579:                  ; preds = %block_.L_4adbb1, %805
  store %struct.Memory* %loadMem_4adbf0, %struct.Memory** %MEMORY
  %loadMem_4adbf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %828 = getelementptr inbounds %struct.GPR, %struct.GPR* %827, i32 0, i32 33
  %829 = getelementptr inbounds %struct.Reg, %struct.Reg* %828, i32 0, i32 0
  %PC.i1574 = bitcast %union.anon* %829 to i64*
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %831 = getelementptr inbounds %struct.GPR, %struct.GPR* %830, i32 0, i32 1
  %832 = getelementptr inbounds %struct.Reg, %struct.Reg* %831, i32 0, i32 0
  %EAX.i1575 = bitcast %union.anon* %832 to i32*
  %833 = load i32, i32* %EAX.i1575
  %834 = zext i32 %833 to i64
  %835 = load i64, i64* %PC.i1574
  %836 = add i64 %835, 7
  store i64 %836, i64* %PC.i1574
  store i32 %833, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  store %struct.Memory* %loadMem_4adbf2, %struct.Memory** %MEMORY
  %loadMem_4adbf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %838 = getelementptr inbounds %struct.GPR, %struct.GPR* %837, i32 0, i32 33
  %839 = getelementptr inbounds %struct.Reg, %struct.Reg* %838, i32 0, i32 0
  %PC.i1572 = bitcast %union.anon* %839 to i64*
  %840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %841 = getelementptr inbounds %struct.GPR, %struct.GPR* %840, i32 0, i32 1
  %842 = getelementptr inbounds %struct.Reg, %struct.Reg* %841, i32 0, i32 0
  %RAX.i1573 = bitcast %union.anon* %842 to i64*
  %843 = load i64, i64* %PC.i1572
  %844 = add i64 %843, 7
  store i64 %844, i64* %PC.i1572
  %845 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %846 = zext i32 %845 to i64
  store i64 %846, i64* %RAX.i1573, align 8
  store %struct.Memory* %loadMem_4adbf9, %struct.Memory** %MEMORY
  %loadMem_4adc00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %848 = getelementptr inbounds %struct.GPR, %struct.GPR* %847, i32 0, i32 33
  %849 = getelementptr inbounds %struct.Reg, %struct.Reg* %848, i32 0, i32 0
  %PC.i1570 = bitcast %union.anon* %849 to i64*
  %850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %851 = getelementptr inbounds %struct.GPR, %struct.GPR* %850, i32 0, i32 1
  %852 = getelementptr inbounds %struct.Reg, %struct.Reg* %851, i32 0, i32 0
  %RAX.i1571 = bitcast %union.anon* %852 to i64*
  %853 = load i64, i64* %RAX.i1571
  %854 = load i64, i64* %PC.i1570
  %855 = add i64 %854, 3
  store i64 %855, i64* %PC.i1570
  %856 = trunc i64 %853 to i32
  %857 = sub i32 %856, 1
  %858 = zext i32 %857 to i64
  store i64 %858, i64* %RAX.i1571, align 8
  %859 = icmp ult i32 %856, 1
  %860 = zext i1 %859 to i8
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %860, i8* %861, align 1
  %862 = and i32 %857, 255
  %863 = call i32 @llvm.ctpop.i32(i32 %862)
  %864 = trunc i32 %863 to i8
  %865 = and i8 %864, 1
  %866 = xor i8 %865, 1
  %867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %866, i8* %867, align 1
  %868 = xor i64 1, %853
  %869 = trunc i64 %868 to i32
  %870 = xor i32 %869, %857
  %871 = lshr i32 %870, 4
  %872 = trunc i32 %871 to i8
  %873 = and i8 %872, 1
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %873, i8* %874, align 1
  %875 = icmp eq i32 %857, 0
  %876 = zext i1 %875 to i8
  %877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %876, i8* %877, align 1
  %878 = lshr i32 %857, 31
  %879 = trunc i32 %878 to i8
  %880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %879, i8* %880, align 1
  %881 = lshr i32 %856, 31
  %882 = xor i32 %878, %881
  %883 = add i32 %882, %881
  %884 = icmp eq i32 %883, 2
  %885 = zext i1 %884 to i8
  %886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %885, i8* %886, align 1
  store %struct.Memory* %loadMem_4adc00, %struct.Memory** %MEMORY
  %loadMem_4adc03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %888 = getelementptr inbounds %struct.GPR, %struct.GPR* %887, i32 0, i32 33
  %889 = getelementptr inbounds %struct.Reg, %struct.Reg* %888, i32 0, i32 0
  %PC.i1567 = bitcast %union.anon* %889 to i64*
  %890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %891 = getelementptr inbounds %struct.GPR, %struct.GPR* %890, i32 0, i32 1
  %892 = getelementptr inbounds %struct.Reg, %struct.Reg* %891, i32 0, i32 0
  %EAX.i1568 = bitcast %union.anon* %892 to i32*
  %893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %894 = getelementptr inbounds %struct.GPR, %struct.GPR* %893, i32 0, i32 5
  %895 = getelementptr inbounds %struct.Reg, %struct.Reg* %894, i32 0, i32 0
  %RCX.i1569 = bitcast %union.anon* %895 to i64*
  %896 = load i32, i32* %EAX.i1568
  %897 = zext i32 %896 to i64
  %898 = load i64, i64* %PC.i1567
  %899 = add i64 %898, 2
  store i64 %899, i64* %PC.i1567
  %900 = and i64 %897, 4294967295
  store i64 %900, i64* %RCX.i1569, align 8
  store %struct.Memory* %loadMem_4adc03, %struct.Memory** %MEMORY
  %loadMem_4adc05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %902 = getelementptr inbounds %struct.GPR, %struct.GPR* %901, i32 0, i32 33
  %903 = getelementptr inbounds %struct.Reg, %struct.Reg* %902, i32 0, i32 0
  %PC.i1564 = bitcast %union.anon* %903 to i64*
  %904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %905 = getelementptr inbounds %struct.GPR, %struct.GPR* %904, i32 0, i32 1
  %906 = getelementptr inbounds %struct.Reg, %struct.Reg* %905, i32 0, i32 0
  %RAX.i1565 = bitcast %union.anon* %906 to i64*
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %908 = getelementptr inbounds %struct.GPR, %struct.GPR* %907, i32 0, i32 15
  %909 = getelementptr inbounds %struct.Reg, %struct.Reg* %908, i32 0, i32 0
  %RBP.i1566 = bitcast %union.anon* %909 to i64*
  %910 = load i64, i64* %RBP.i1566
  %911 = sub i64 %910, 944
  %912 = load i64, i64* %PC.i1564
  %913 = add i64 %912, 6
  store i64 %913, i64* %PC.i1564
  %914 = inttoptr i64 %911 to i32*
  %915 = load i32, i32* %914
  %916 = zext i32 %915 to i64
  store i64 %916, i64* %RAX.i1565, align 8
  store %struct.Memory* %loadMem_4adc05, %struct.Memory** %MEMORY
  %loadMem_4adc0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %918 = getelementptr inbounds %struct.GPR, %struct.GPR* %917, i32 0, i32 33
  %919 = getelementptr inbounds %struct.Reg, %struct.Reg* %918, i32 0, i32 0
  %PC.i1560 = bitcast %union.anon* %919 to i64*
  %920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %921 = getelementptr inbounds %struct.GPR, %struct.GPR* %920, i32 0, i32 5
  %922 = getelementptr inbounds %struct.Reg, %struct.Reg* %921, i32 0, i32 0
  %923 = bitcast %union.anon* %922 to %struct.anon.2*
  %CL.i1561 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %923, i32 0, i32 0
  %924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %925 = getelementptr inbounds %struct.GPR, %struct.GPR* %924, i32 0, i32 1
  %926 = getelementptr inbounds %struct.Reg, %struct.Reg* %925, i32 0, i32 0
  %RAX.i1562 = bitcast %union.anon* %926 to i64*
  %927 = load i64, i64* %RAX.i1562
  %928 = load i8, i8* %CL.i1561
  %929 = zext i8 %928 to i64
  %930 = load i64, i64* %PC.i1560
  %931 = add i64 %930, 2
  store i64 %931, i64* %PC.i1560
  %932 = trunc i64 %929 to i5
  switch i5 %932, label %939 [
    i5 0, label %routine_shll__cl___eax.exit1563
    i5 1, label %933
  ]

; <label>:933:                                    ; preds = %routine_shll__cl___eax.exit1579
  %934 = trunc i64 %927 to i32
  %935 = shl i32 %934, 1
  %936 = icmp slt i32 %934, 0
  %937 = icmp slt i32 %935, 0
  %938 = xor i1 %936, %937
  br label %948

; <label>:939:                                    ; preds = %routine_shll__cl___eax.exit1579
  %940 = and i64 %929, 31
  %941 = add i64 %940, 4294967295
  %942 = and i64 %927, 4294967295
  %943 = and i64 %941, 4294967295
  %944 = shl i64 %942, %943
  %945 = trunc i64 %944 to i32
  %946 = icmp slt i32 %945, 0
  %947 = shl i32 %945, 1
  br label %948

; <label>:948:                                    ; preds = %939, %933
  %949 = phi i1 [ %936, %933 ], [ %946, %939 ]
  %950 = phi i1 [ %938, %933 ], [ false, %939 ]
  %951 = phi i32 [ %935, %933 ], [ %947, %939 ]
  %952 = zext i32 %951 to i64
  store i64 %952, i64* %RAX.i1562, align 8
  %953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %954 = zext i1 %949 to i8
  store i8 %954, i8* %953, align 1
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %956 = and i32 %951, 254
  %957 = call i32 @llvm.ctpop.i32(i32 %956)
  %958 = trunc i32 %957 to i8
  %959 = and i8 %958, 1
  %960 = xor i8 %959, 1
  store i8 %960, i8* %955, align 1
  %961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %961, align 1
  %962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %963 = icmp eq i32 %951, 0
  %964 = zext i1 %963 to i8
  store i8 %964, i8* %962, align 1
  %965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %966 = lshr i32 %951, 31
  %967 = trunc i32 %966 to i8
  store i8 %967, i8* %965, align 1
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %969 = zext i1 %950 to i8
  store i8 %969, i8* %968, align 1
  br label %routine_shll__cl___eax.exit1563

routine_shll__cl___eax.exit1563:                  ; preds = %routine_shll__cl___eax.exit1579, %948
  store %struct.Memory* %loadMem_4adc0b, %struct.Memory** %MEMORY
  %loadMem_4adc0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %971 = getelementptr inbounds %struct.GPR, %struct.GPR* %970, i32 0, i32 33
  %972 = getelementptr inbounds %struct.Reg, %struct.Reg* %971, i32 0, i32 0
  %PC.i1558 = bitcast %union.anon* %972 to i64*
  %973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %974 = getelementptr inbounds %struct.GPR, %struct.GPR* %973, i32 0, i32 1
  %975 = getelementptr inbounds %struct.Reg, %struct.Reg* %974, i32 0, i32 0
  %EAX.i1559 = bitcast %union.anon* %975 to i32*
  %976 = load i32, i32* %EAX.i1559
  %977 = zext i32 %976 to i64
  %978 = load i64, i64* %PC.i1558
  %979 = add i64 %978, 7
  store i64 %979, i64* %PC.i1558
  store i32 %976, i32* bitcast (%G_0x710790_type* @G_0x710790 to i32*)
  store %struct.Memory* %loadMem_4adc0d, %struct.Memory** %MEMORY
  %loadMem_4adc14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %981 = getelementptr inbounds %struct.GPR, %struct.GPR* %980, i32 0, i32 33
  %982 = getelementptr inbounds %struct.Reg, %struct.Reg* %981, i32 0, i32 0
  %PC.i1556 = bitcast %union.anon* %982 to i64*
  %983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %984 = getelementptr inbounds %struct.GPR, %struct.GPR* %983, i32 0, i32 5
  %985 = getelementptr inbounds %struct.Reg, %struct.Reg* %984, i32 0, i32 0
  %RCX.i1557 = bitcast %union.anon* %985 to i64*
  %986 = load i64, i64* %PC.i1556
  %987 = add i64 %986, 7
  store i64 %987, i64* %PC.i1556
  %988 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %989 = zext i32 %988 to i64
  store i64 %989, i64* %RCX.i1557, align 8
  store %struct.Memory* %loadMem_4adc14, %struct.Memory** %MEMORY
  %loadMem_4adc1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %991 = getelementptr inbounds %struct.GPR, %struct.GPR* %990, i32 0, i32 33
  %992 = getelementptr inbounds %struct.Reg, %struct.Reg* %991, i32 0, i32 0
  %PC.i1553 = bitcast %union.anon* %992 to i64*
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %994 = getelementptr inbounds %struct.GPR, %struct.GPR* %993, i32 0, i32 1
  %995 = getelementptr inbounds %struct.Reg, %struct.Reg* %994, i32 0, i32 0
  %RAX.i1554 = bitcast %union.anon* %995 to i64*
  %996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %997 = getelementptr inbounds %struct.GPR, %struct.GPR* %996, i32 0, i32 15
  %998 = getelementptr inbounds %struct.Reg, %struct.Reg* %997, i32 0, i32 0
  %RBP.i1555 = bitcast %union.anon* %998 to i64*
  %999 = load i64, i64* %RBP.i1555
  %1000 = sub i64 %999, 944
  %1001 = load i64, i64* %PC.i1553
  %1002 = add i64 %1001, 6
  store i64 %1002, i64* %PC.i1553
  %1003 = inttoptr i64 %1000 to i32*
  %1004 = load i32, i32* %1003
  %1005 = zext i32 %1004 to i64
  store i64 %1005, i64* %RAX.i1554, align 8
  store %struct.Memory* %loadMem_4adc1b, %struct.Memory** %MEMORY
  %loadMem_4adc21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1007 = getelementptr inbounds %struct.GPR, %struct.GPR* %1006, i32 0, i32 33
  %1008 = getelementptr inbounds %struct.Reg, %struct.Reg* %1007, i32 0, i32 0
  %PC.i1549 = bitcast %union.anon* %1008 to i64*
  %1009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1010 = getelementptr inbounds %struct.GPR, %struct.GPR* %1009, i32 0, i32 5
  %1011 = getelementptr inbounds %struct.Reg, %struct.Reg* %1010, i32 0, i32 0
  %1012 = bitcast %union.anon* %1011 to %struct.anon.2*
  %CL.i1550 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1012, i32 0, i32 0
  %1013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1014 = getelementptr inbounds %struct.GPR, %struct.GPR* %1013, i32 0, i32 1
  %1015 = getelementptr inbounds %struct.Reg, %struct.Reg* %1014, i32 0, i32 0
  %RAX.i1551 = bitcast %union.anon* %1015 to i64*
  %1016 = load i64, i64* %RAX.i1551
  %1017 = load i8, i8* %CL.i1550
  %1018 = zext i8 %1017 to i64
  %1019 = load i64, i64* %PC.i1549
  %1020 = add i64 %1019, 2
  store i64 %1020, i64* %PC.i1549
  %1021 = trunc i64 %1018 to i5
  switch i5 %1021, label %1028 [
    i5 0, label %routine_shll__cl___eax.exit1552
    i5 1, label %1022
  ]

; <label>:1022:                                   ; preds = %routine_shll__cl___eax.exit1563
  %1023 = trunc i64 %1016 to i32
  %1024 = shl i32 %1023, 1
  %1025 = icmp slt i32 %1023, 0
  %1026 = icmp slt i32 %1024, 0
  %1027 = xor i1 %1025, %1026
  br label %1037

; <label>:1028:                                   ; preds = %routine_shll__cl___eax.exit1563
  %1029 = and i64 %1018, 31
  %1030 = add i64 %1029, 4294967295
  %1031 = and i64 %1016, 4294967295
  %1032 = and i64 %1030, 4294967295
  %1033 = shl i64 %1031, %1032
  %1034 = trunc i64 %1033 to i32
  %1035 = icmp slt i32 %1034, 0
  %1036 = shl i32 %1034, 1
  br label %1037

; <label>:1037:                                   ; preds = %1028, %1022
  %1038 = phi i1 [ %1025, %1022 ], [ %1035, %1028 ]
  %1039 = phi i1 [ %1027, %1022 ], [ false, %1028 ]
  %1040 = phi i32 [ %1024, %1022 ], [ %1036, %1028 ]
  %1041 = zext i32 %1040 to i64
  store i64 %1041, i64* %RAX.i1551, align 8
  %1042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1043 = zext i1 %1038 to i8
  store i8 %1043, i8* %1042, align 1
  %1044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1045 = and i32 %1040, 254
  %1046 = call i32 @llvm.ctpop.i32(i32 %1045)
  %1047 = trunc i32 %1046 to i8
  %1048 = and i8 %1047, 1
  %1049 = xor i8 %1048, 1
  store i8 %1049, i8* %1044, align 1
  %1050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1050, align 1
  %1051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1052 = icmp eq i32 %1040, 0
  %1053 = zext i1 %1052 to i8
  store i8 %1053, i8* %1051, align 1
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1055 = lshr i32 %1040, 31
  %1056 = trunc i32 %1055 to i8
  store i8 %1056, i8* %1054, align 1
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1058 = zext i1 %1039 to i8
  store i8 %1058, i8* %1057, align 1
  br label %routine_shll__cl___eax.exit1552

routine_shll__cl___eax.exit1552:                  ; preds = %routine_shll__cl___eax.exit1563, %1037
  store %struct.Memory* %loadMem_4adc21, %struct.Memory** %MEMORY
  %loadMem_4adc23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1060 = getelementptr inbounds %struct.GPR, %struct.GPR* %1059, i32 0, i32 33
  %1061 = getelementptr inbounds %struct.Reg, %struct.Reg* %1060, i32 0, i32 0
  %PC.i1546 = bitcast %union.anon* %1061 to i64*
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1063 = getelementptr inbounds %struct.GPR, %struct.GPR* %1062, i32 0, i32 1
  %1064 = getelementptr inbounds %struct.Reg, %struct.Reg* %1063, i32 0, i32 0
  %EAX.i1547 = bitcast %union.anon* %1064 to i32*
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1066 = getelementptr inbounds %struct.GPR, %struct.GPR* %1065, i32 0, i32 15
  %1067 = getelementptr inbounds %struct.Reg, %struct.Reg* %1066, i32 0, i32 0
  %RBP.i1548 = bitcast %union.anon* %1067 to i64*
  %1068 = load i64, i64* %RBP.i1548
  %1069 = sub i64 %1068, 188
  %1070 = load i32, i32* %EAX.i1547
  %1071 = zext i32 %1070 to i64
  %1072 = load i64, i64* %PC.i1546
  %1073 = add i64 %1072, 6
  store i64 %1073, i64* %PC.i1546
  %1074 = inttoptr i64 %1069 to i32*
  store i32 %1070, i32* %1074
  store %struct.Memory* %loadMem_4adc23, %struct.Memory** %MEMORY
  %loadMem_4adc29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1076 = getelementptr inbounds %struct.GPR, %struct.GPR* %1075, i32 0, i32 33
  %1077 = getelementptr inbounds %struct.Reg, %struct.Reg* %1076, i32 0, i32 0
  %PC.i1544 = bitcast %union.anon* %1077 to i64*
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1079 = getelementptr inbounds %struct.GPR, %struct.GPR* %1078, i32 0, i32 5
  %1080 = getelementptr inbounds %struct.Reg, %struct.Reg* %1079, i32 0, i32 0
  %RCX.i1545 = bitcast %union.anon* %1080 to i64*
  %1081 = load i64, i64* %PC.i1544
  %1082 = add i64 %1081, 7
  store i64 %1082, i64* %PC.i1544
  %1083 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %1084 = zext i32 %1083 to i64
  store i64 %1084, i64* %RCX.i1545, align 8
  store %struct.Memory* %loadMem_4adc29, %struct.Memory** %MEMORY
  %loadMem_4adc30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1086 = getelementptr inbounds %struct.GPR, %struct.GPR* %1085, i32 0, i32 33
  %1087 = getelementptr inbounds %struct.Reg, %struct.Reg* %1086, i32 0, i32 0
  %PC.i1541 = bitcast %union.anon* %1087 to i64*
  %1088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1089 = getelementptr inbounds %struct.GPR, %struct.GPR* %1088, i32 0, i32 1
  %1090 = getelementptr inbounds %struct.Reg, %struct.Reg* %1089, i32 0, i32 0
  %RAX.i1542 = bitcast %union.anon* %1090 to i64*
  %1091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1092 = getelementptr inbounds %struct.GPR, %struct.GPR* %1091, i32 0, i32 15
  %1093 = getelementptr inbounds %struct.Reg, %struct.Reg* %1092, i32 0, i32 0
  %RBP.i1543 = bitcast %union.anon* %1093 to i64*
  %1094 = load i64, i64* %RBP.i1543
  %1095 = sub i64 %1094, 944
  %1096 = load i64, i64* %PC.i1541
  %1097 = add i64 %1096, 6
  store i64 %1097, i64* %PC.i1541
  %1098 = inttoptr i64 %1095 to i32*
  %1099 = load i32, i32* %1098
  %1100 = zext i32 %1099 to i64
  store i64 %1100, i64* %RAX.i1542, align 8
  store %struct.Memory* %loadMem_4adc30, %struct.Memory** %MEMORY
  %loadMem_4adc36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1102 = getelementptr inbounds %struct.GPR, %struct.GPR* %1101, i32 0, i32 33
  %1103 = getelementptr inbounds %struct.Reg, %struct.Reg* %1102, i32 0, i32 0
  %PC.i1538 = bitcast %union.anon* %1103 to i64*
  %1104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1105 = getelementptr inbounds %struct.GPR, %struct.GPR* %1104, i32 0, i32 5
  %1106 = getelementptr inbounds %struct.Reg, %struct.Reg* %1105, i32 0, i32 0
  %1107 = bitcast %union.anon* %1106 to %struct.anon.2*
  %CL.i1539 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1107, i32 0, i32 0
  %1108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1109 = getelementptr inbounds %struct.GPR, %struct.GPR* %1108, i32 0, i32 1
  %1110 = getelementptr inbounds %struct.Reg, %struct.Reg* %1109, i32 0, i32 0
  %RAX.i1540 = bitcast %union.anon* %1110 to i64*
  %1111 = load i64, i64* %RAX.i1540
  %1112 = load i8, i8* %CL.i1539
  %1113 = zext i8 %1112 to i64
  %1114 = load i64, i64* %PC.i1538
  %1115 = add i64 %1114, 2
  store i64 %1115, i64* %PC.i1538
  %1116 = trunc i64 %1113 to i5
  switch i5 %1116, label %1123 [
    i5 0, label %routine_shll__cl___eax.exit
    i5 1, label %1117
  ]

; <label>:1117:                                   ; preds = %routine_shll__cl___eax.exit1552
  %1118 = trunc i64 %1111 to i32
  %1119 = shl i32 %1118, 1
  %1120 = icmp slt i32 %1118, 0
  %1121 = icmp slt i32 %1119, 0
  %1122 = xor i1 %1120, %1121
  br label %1132

; <label>:1123:                                   ; preds = %routine_shll__cl___eax.exit1552
  %1124 = and i64 %1113, 31
  %1125 = add i64 %1124, 4294967295
  %1126 = and i64 %1111, 4294967295
  %1127 = and i64 %1125, 4294967295
  %1128 = shl i64 %1126, %1127
  %1129 = trunc i64 %1128 to i32
  %1130 = icmp slt i32 %1129, 0
  %1131 = shl i32 %1129, 1
  br label %1132

; <label>:1132:                                   ; preds = %1123, %1117
  %1133 = phi i1 [ %1120, %1117 ], [ %1130, %1123 ]
  %1134 = phi i1 [ %1122, %1117 ], [ false, %1123 ]
  %1135 = phi i32 [ %1119, %1117 ], [ %1131, %1123 ]
  %1136 = zext i32 %1135 to i64
  store i64 %1136, i64* %RAX.i1540, align 8
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1138 = zext i1 %1133 to i8
  store i8 %1138, i8* %1137, align 1
  %1139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1140 = and i32 %1135, 254
  %1141 = call i32 @llvm.ctpop.i32(i32 %1140)
  %1142 = trunc i32 %1141 to i8
  %1143 = and i8 %1142, 1
  %1144 = xor i8 %1143, 1
  store i8 %1144, i8* %1139, align 1
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1145, align 1
  %1146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1147 = icmp eq i32 %1135, 0
  %1148 = zext i1 %1147 to i8
  store i8 %1148, i8* %1146, align 1
  %1149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1150 = lshr i32 %1135, 31
  %1151 = trunc i32 %1150 to i8
  store i8 %1151, i8* %1149, align 1
  %1152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1153 = zext i1 %1134 to i8
  store i8 %1153, i8* %1152, align 1
  br label %routine_shll__cl___eax.exit

routine_shll__cl___eax.exit:                      ; preds = %routine_shll__cl___eax.exit1552, %1132
  store %struct.Memory* %loadMem_4adc36, %struct.Memory** %MEMORY
  %loadMem_4adc38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1155 = getelementptr inbounds %struct.GPR, %struct.GPR* %1154, i32 0, i32 33
  %1156 = getelementptr inbounds %struct.Reg, %struct.Reg* %1155, i32 0, i32 0
  %PC.i1535 = bitcast %union.anon* %1156 to i64*
  %1157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1158 = getelementptr inbounds %struct.GPR, %struct.GPR* %1157, i32 0, i32 1
  %1159 = getelementptr inbounds %struct.Reg, %struct.Reg* %1158, i32 0, i32 0
  %EAX.i1536 = bitcast %union.anon* %1159 to i32*
  %1160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1161 = getelementptr inbounds %struct.GPR, %struct.GPR* %1160, i32 0, i32 15
  %1162 = getelementptr inbounds %struct.Reg, %struct.Reg* %1161, i32 0, i32 0
  %RBP.i1537 = bitcast %union.anon* %1162 to i64*
  %1163 = load i64, i64* %RBP.i1537
  %1164 = sub i64 %1163, 180
  %1165 = load i32, i32* %EAX.i1536
  %1166 = zext i32 %1165 to i64
  %1167 = load i64, i64* %PC.i1535
  %1168 = add i64 %1167, 6
  store i64 %1168, i64* %PC.i1535
  %1169 = inttoptr i64 %1164 to i32*
  store i32 %1165, i32* %1169
  store %struct.Memory* %loadMem_4adc38, %struct.Memory** %MEMORY
  %loadMem_4adc3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1171 = getelementptr inbounds %struct.GPR, %struct.GPR* %1170, i32 0, i32 33
  %1172 = getelementptr inbounds %struct.Reg, %struct.Reg* %1171, i32 0, i32 0
  %PC.i1532 = bitcast %union.anon* %1172 to i64*
  %1173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1174 = getelementptr inbounds %struct.GPR, %struct.GPR* %1173, i32 0, i32 1
  %1175 = getelementptr inbounds %struct.Reg, %struct.Reg* %1174, i32 0, i32 0
  %EAX.i1533 = bitcast %union.anon* %1175 to i32*
  %1176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1177 = getelementptr inbounds %struct.GPR, %struct.GPR* %1176, i32 0, i32 15
  %1178 = getelementptr inbounds %struct.Reg, %struct.Reg* %1177, i32 0, i32 0
  %RBP.i1534 = bitcast %union.anon* %1178 to i64*
  %1179 = load i64, i64* %RBP.i1534
  %1180 = sub i64 %1179, 184
  %1181 = load i32, i32* %EAX.i1533
  %1182 = zext i32 %1181 to i64
  %1183 = load i64, i64* %PC.i1532
  %1184 = add i64 %1183, 6
  store i64 %1184, i64* %PC.i1532
  %1185 = inttoptr i64 %1180 to i32*
  store i32 %1181, i32* %1185
  store %struct.Memory* %loadMem_4adc3e, %struct.Memory** %MEMORY
  %loadMem_4adc44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1187 = getelementptr inbounds %struct.GPR, %struct.GPR* %1186, i32 0, i32 33
  %1188 = getelementptr inbounds %struct.Reg, %struct.Reg* %1187, i32 0, i32 0
  %PC.i1530 = bitcast %union.anon* %1188 to i64*
  %1189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1190 = getelementptr inbounds %struct.GPR, %struct.GPR* %1189, i32 0, i32 15
  %1191 = getelementptr inbounds %struct.Reg, %struct.Reg* %1190, i32 0, i32 0
  %RBP.i1531 = bitcast %union.anon* %1191 to i64*
  %1192 = load i64, i64* %RBP.i1531
  %1193 = sub i64 %1192, 8
  %1194 = load i64, i64* %PC.i1530
  %1195 = add i64 %1194, 7
  store i64 %1195, i64* %PC.i1530
  %1196 = inttoptr i64 %1193 to i32*
  store i32 0, i32* %1196
  store %struct.Memory* %loadMem_4adc44, %struct.Memory** %MEMORY
  br label %block_.L_4adc4b

block_.L_4adc4b:                                  ; preds = %block_.L_4add5b, %routine_shll__cl___eax.exit
  %loadMem_4adc4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1198 = getelementptr inbounds %struct.GPR, %struct.GPR* %1197, i32 0, i32 33
  %1199 = getelementptr inbounds %struct.Reg, %struct.Reg* %1198, i32 0, i32 0
  %PC.i1527 = bitcast %union.anon* %1199 to i64*
  %1200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1201 = getelementptr inbounds %struct.GPR, %struct.GPR* %1200, i32 0, i32 1
  %1202 = getelementptr inbounds %struct.Reg, %struct.Reg* %1201, i32 0, i32 0
  %RAX.i1528 = bitcast %union.anon* %1202 to i64*
  %1203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1204 = getelementptr inbounds %struct.GPR, %struct.GPR* %1203, i32 0, i32 15
  %1205 = getelementptr inbounds %struct.Reg, %struct.Reg* %1204, i32 0, i32 0
  %RBP.i1529 = bitcast %union.anon* %1205 to i64*
  %1206 = load i64, i64* %RBP.i1529
  %1207 = sub i64 %1206, 8
  %1208 = load i64, i64* %PC.i1527
  %1209 = add i64 %1208, 3
  store i64 %1209, i64* %PC.i1527
  %1210 = inttoptr i64 %1207 to i32*
  %1211 = load i32, i32* %1210
  %1212 = zext i32 %1211 to i64
  store i64 %1212, i64* %RAX.i1528, align 8
  store %struct.Memory* %loadMem_4adc4b, %struct.Memory** %MEMORY
  %loadMem_4adc4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1214 = getelementptr inbounds %struct.GPR, %struct.GPR* %1213, i32 0, i32 33
  %1215 = getelementptr inbounds %struct.Reg, %struct.Reg* %1214, i32 0, i32 0
  %PC.i1524 = bitcast %union.anon* %1215 to i64*
  %1216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1217 = getelementptr inbounds %struct.GPR, %struct.GPR* %1216, i32 0, i32 5
  %1218 = getelementptr inbounds %struct.Reg, %struct.Reg* %1217, i32 0, i32 0
  %RCX.i1525 = bitcast %union.anon* %1218 to i64*
  %1219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1220 = getelementptr inbounds %struct.GPR, %struct.GPR* %1219, i32 0, i32 15
  %1221 = getelementptr inbounds %struct.Reg, %struct.Reg* %1220, i32 0, i32 0
  %RBP.i1526 = bitcast %union.anon* %1221 to i64*
  %1222 = load i64, i64* %RBP.i1526
  %1223 = sub i64 %1222, 192
  %1224 = load i64, i64* %PC.i1524
  %1225 = add i64 %1224, 6
  store i64 %1225, i64* %PC.i1524
  %1226 = inttoptr i64 %1223 to i32*
  %1227 = load i32, i32* %1226
  %1228 = zext i32 %1227 to i64
  store i64 %1228, i64* %RCX.i1525, align 8
  store %struct.Memory* %loadMem_4adc4e, %struct.Memory** %MEMORY
  %loadMem_4adc54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1230 = getelementptr inbounds %struct.GPR, %struct.GPR* %1229, i32 0, i32 33
  %1231 = getelementptr inbounds %struct.Reg, %struct.Reg* %1230, i32 0, i32 0
  %PC.i1522 = bitcast %union.anon* %1231 to i64*
  %1232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1233 = getelementptr inbounds %struct.GPR, %struct.GPR* %1232, i32 0, i32 5
  %1234 = getelementptr inbounds %struct.Reg, %struct.Reg* %1233, i32 0, i32 0
  %RCX.i1523 = bitcast %union.anon* %1234 to i64*
  %1235 = load i64, i64* %RCX.i1523
  %1236 = load i64, i64* %PC.i1522
  %1237 = add i64 %1236, 3
  store i64 %1237, i64* %PC.i1522
  %1238 = trunc i64 %1235 to i32
  %1239 = add i32 2, %1238
  %1240 = zext i32 %1239 to i64
  store i64 %1240, i64* %RCX.i1523, align 8
  %1241 = icmp ult i32 %1239, %1238
  %1242 = icmp ult i32 %1239, 2
  %1243 = or i1 %1241, %1242
  %1244 = zext i1 %1243 to i8
  %1245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1244, i8* %1245, align 1
  %1246 = and i32 %1239, 255
  %1247 = call i32 @llvm.ctpop.i32(i32 %1246)
  %1248 = trunc i32 %1247 to i8
  %1249 = and i8 %1248, 1
  %1250 = xor i8 %1249, 1
  %1251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1250, i8* %1251, align 1
  %1252 = xor i64 2, %1235
  %1253 = trunc i64 %1252 to i32
  %1254 = xor i32 %1253, %1239
  %1255 = lshr i32 %1254, 4
  %1256 = trunc i32 %1255 to i8
  %1257 = and i8 %1256, 1
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1257, i8* %1258, align 1
  %1259 = icmp eq i32 %1239, 0
  %1260 = zext i1 %1259 to i8
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1260, i8* %1261, align 1
  %1262 = lshr i32 %1239, 31
  %1263 = trunc i32 %1262 to i8
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1263, i8* %1264, align 1
  %1265 = lshr i32 %1238, 31
  %1266 = xor i32 %1262, %1265
  %1267 = add i32 %1266, %1262
  %1268 = icmp eq i32 %1267, 2
  %1269 = zext i1 %1268 to i8
  %1270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1269, i8* %1270, align 1
  store %struct.Memory* %loadMem_4adc54, %struct.Memory** %MEMORY
  %loadMem_4adc57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1272 = getelementptr inbounds %struct.GPR, %struct.GPR* %1271, i32 0, i32 33
  %1273 = getelementptr inbounds %struct.Reg, %struct.Reg* %1272, i32 0, i32 0
  %PC.i1519 = bitcast %union.anon* %1273 to i64*
  %1274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1275 = getelementptr inbounds %struct.GPR, %struct.GPR* %1274, i32 0, i32 1
  %1276 = getelementptr inbounds %struct.Reg, %struct.Reg* %1275, i32 0, i32 0
  %EAX.i1520 = bitcast %union.anon* %1276 to i32*
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1278 = getelementptr inbounds %struct.GPR, %struct.GPR* %1277, i32 0, i32 5
  %1279 = getelementptr inbounds %struct.Reg, %struct.Reg* %1278, i32 0, i32 0
  %ECX.i1521 = bitcast %union.anon* %1279 to i32*
  %1280 = load i32, i32* %EAX.i1520
  %1281 = zext i32 %1280 to i64
  %1282 = load i32, i32* %ECX.i1521
  %1283 = zext i32 %1282 to i64
  %1284 = load i64, i64* %PC.i1519
  %1285 = add i64 %1284, 2
  store i64 %1285, i64* %PC.i1519
  %1286 = sub i32 %1280, %1282
  %1287 = icmp ult i32 %1280, %1282
  %1288 = zext i1 %1287 to i8
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1288, i8* %1289, align 1
  %1290 = and i32 %1286, 255
  %1291 = call i32 @llvm.ctpop.i32(i32 %1290)
  %1292 = trunc i32 %1291 to i8
  %1293 = and i8 %1292, 1
  %1294 = xor i8 %1293, 1
  %1295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1294, i8* %1295, align 1
  %1296 = xor i64 %1283, %1281
  %1297 = trunc i64 %1296 to i32
  %1298 = xor i32 %1297, %1286
  %1299 = lshr i32 %1298, 4
  %1300 = trunc i32 %1299 to i8
  %1301 = and i8 %1300, 1
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1301, i8* %1302, align 1
  %1303 = icmp eq i32 %1286, 0
  %1304 = zext i1 %1303 to i8
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1304, i8* %1305, align 1
  %1306 = lshr i32 %1286, 31
  %1307 = trunc i32 %1306 to i8
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1307, i8* %1308, align 1
  %1309 = lshr i32 %1280, 31
  %1310 = lshr i32 %1282, 31
  %1311 = xor i32 %1310, %1309
  %1312 = xor i32 %1306, %1309
  %1313 = add i32 %1312, %1311
  %1314 = icmp eq i32 %1313, 2
  %1315 = zext i1 %1314 to i8
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1315, i8* %1316, align 1
  store %struct.Memory* %loadMem_4adc57, %struct.Memory** %MEMORY
  %loadMem_4adc59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1318 = getelementptr inbounds %struct.GPR, %struct.GPR* %1317, i32 0, i32 33
  %1319 = getelementptr inbounds %struct.Reg, %struct.Reg* %1318, i32 0, i32 0
  %PC.i1518 = bitcast %union.anon* %1319 to i64*
  %1320 = load i64, i64* %PC.i1518
  %1321 = add i64 %1320, 272
  %1322 = load i64, i64* %PC.i1518
  %1323 = add i64 %1322, 6
  %1324 = load i64, i64* %PC.i1518
  %1325 = add i64 %1324, 6
  store i64 %1325, i64* %PC.i1518
  %1326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1327 = load i8, i8* %1326, align 1
  %1328 = icmp ne i8 %1327, 0
  %1329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1330 = load i8, i8* %1329, align 1
  %1331 = icmp ne i8 %1330, 0
  %1332 = xor i1 %1328, %1331
  %1333 = xor i1 %1332, true
  %1334 = zext i1 %1333 to i8
  store i8 %1334, i8* %BRANCH_TAKEN, align 1
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1336 = select i1 %1332, i64 %1323, i64 %1321
  store i64 %1336, i64* %1335, align 8
  store %struct.Memory* %loadMem_4adc59, %struct.Memory** %MEMORY
  %loadBr_4adc59 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4adc59 = icmp eq i8 %loadBr_4adc59, 1
  br i1 %cmpBr_4adc59, label %block_.L_4add69, label %block_4adc5f

block_4adc5f:                                     ; preds = %block_.L_4adc4b
  %loadMem_4adc5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1338 = getelementptr inbounds %struct.GPR, %struct.GPR* %1337, i32 0, i32 33
  %1339 = getelementptr inbounds %struct.Reg, %struct.Reg* %1338, i32 0, i32 0
  %PC.i1516 = bitcast %union.anon* %1339 to i64*
  %1340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1341 = getelementptr inbounds %struct.GPR, %struct.GPR* %1340, i32 0, i32 15
  %1342 = getelementptr inbounds %struct.Reg, %struct.Reg* %1341, i32 0, i32 0
  %RBP.i1517 = bitcast %union.anon* %1342 to i64*
  %1343 = load i64, i64* %RBP.i1517
  %1344 = sub i64 %1343, 12
  %1345 = load i64, i64* %PC.i1516
  %1346 = add i64 %1345, 7
  store i64 %1346, i64* %PC.i1516
  %1347 = inttoptr i64 %1344 to i32*
  store i32 0, i32* %1347
  store %struct.Memory* %loadMem_4adc5f, %struct.Memory** %MEMORY
  br label %block_.L_4adc66

block_.L_4adc66:                                  ; preds = %block_.L_4add48, %block_4adc5f
  %loadMem_4adc66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1349 = getelementptr inbounds %struct.GPR, %struct.GPR* %1348, i32 0, i32 33
  %1350 = getelementptr inbounds %struct.Reg, %struct.Reg* %1349, i32 0, i32 0
  %PC.i1513 = bitcast %union.anon* %1350 to i64*
  %1351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1352 = getelementptr inbounds %struct.GPR, %struct.GPR* %1351, i32 0, i32 1
  %1353 = getelementptr inbounds %struct.Reg, %struct.Reg* %1352, i32 0, i32 0
  %RAX.i1514 = bitcast %union.anon* %1353 to i64*
  %1354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1355 = getelementptr inbounds %struct.GPR, %struct.GPR* %1354, i32 0, i32 15
  %1356 = getelementptr inbounds %struct.Reg, %struct.Reg* %1355, i32 0, i32 0
  %RBP.i1515 = bitcast %union.anon* %1356 to i64*
  %1357 = load i64, i64* %RBP.i1515
  %1358 = sub i64 %1357, 12
  %1359 = load i64, i64* %PC.i1513
  %1360 = add i64 %1359, 3
  store i64 %1360, i64* %PC.i1513
  %1361 = inttoptr i64 %1358 to i32*
  %1362 = load i32, i32* %1361
  %1363 = zext i32 %1362 to i64
  store i64 %1363, i64* %RAX.i1514, align 8
  store %struct.Memory* %loadMem_4adc66, %struct.Memory** %MEMORY
  %loadMem_4adc69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1365 = getelementptr inbounds %struct.GPR, %struct.GPR* %1364, i32 0, i32 33
  %1366 = getelementptr inbounds %struct.Reg, %struct.Reg* %1365, i32 0, i32 0
  %PC.i1510 = bitcast %union.anon* %1366 to i64*
  %1367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1368 = getelementptr inbounds %struct.GPR, %struct.GPR* %1367, i32 0, i32 5
  %1369 = getelementptr inbounds %struct.Reg, %struct.Reg* %1368, i32 0, i32 0
  %RCX.i1511 = bitcast %union.anon* %1369 to i64*
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1371 = getelementptr inbounds %struct.GPR, %struct.GPR* %1370, i32 0, i32 15
  %1372 = getelementptr inbounds %struct.Reg, %struct.Reg* %1371, i32 0, i32 0
  %RBP.i1512 = bitcast %union.anon* %1372 to i64*
  %1373 = load i64, i64* %RBP.i1512
  %1374 = sub i64 %1373, 8
  %1375 = load i64, i64* %PC.i1510
  %1376 = add i64 %1375, 4
  store i64 %1376, i64* %PC.i1510
  %1377 = inttoptr i64 %1374 to i32*
  %1378 = load i32, i32* %1377
  %1379 = sext i32 %1378 to i64
  store i64 %1379, i64* %RCX.i1511, align 8
  store %struct.Memory* %loadMem_4adc69, %struct.Memory** %MEMORY
  %loadMem_4adc6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1381 = getelementptr inbounds %struct.GPR, %struct.GPR* %1380, i32 0, i32 33
  %1382 = getelementptr inbounds %struct.Reg, %struct.Reg* %1381, i32 0, i32 0
  %PC.i1507 = bitcast %union.anon* %1382 to i64*
  %1383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1384 = getelementptr inbounds %struct.GPR, %struct.GPR* %1383, i32 0, i32 1
  %1385 = getelementptr inbounds %struct.Reg, %struct.Reg* %1384, i32 0, i32 0
  %EAX.i1508 = bitcast %union.anon* %1385 to i32*
  %1386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1387 = getelementptr inbounds %struct.GPR, %struct.GPR* %1386, i32 0, i32 5
  %1388 = getelementptr inbounds %struct.Reg, %struct.Reg* %1387, i32 0, i32 0
  %RCX.i1509 = bitcast %union.anon* %1388 to i64*
  %1389 = load i32, i32* %EAX.i1508
  %1390 = zext i32 %1389 to i64
  %1391 = load i64, i64* %RCX.i1509
  %1392 = mul i64 %1391, 4
  %1393 = add i64 %1392, 7489456
  %1394 = load i64, i64* %PC.i1507
  %1395 = add i64 %1394, 7
  store i64 %1395, i64* %PC.i1507
  %1396 = inttoptr i64 %1393 to i32*
  %1397 = load i32, i32* %1396
  %1398 = sub i32 %1389, %1397
  %1399 = icmp ult i32 %1389, %1397
  %1400 = zext i1 %1399 to i8
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1400, i8* %1401, align 1
  %1402 = and i32 %1398, 255
  %1403 = call i32 @llvm.ctpop.i32(i32 %1402)
  %1404 = trunc i32 %1403 to i8
  %1405 = and i8 %1404, 1
  %1406 = xor i8 %1405, 1
  %1407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1406, i8* %1407, align 1
  %1408 = xor i32 %1397, %1389
  %1409 = xor i32 %1408, %1398
  %1410 = lshr i32 %1409, 4
  %1411 = trunc i32 %1410 to i8
  %1412 = and i8 %1411, 1
  %1413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1412, i8* %1413, align 1
  %1414 = icmp eq i32 %1398, 0
  %1415 = zext i1 %1414 to i8
  %1416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1415, i8* %1416, align 1
  %1417 = lshr i32 %1398, 31
  %1418 = trunc i32 %1417 to i8
  %1419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1418, i8* %1419, align 1
  %1420 = lshr i32 %1389, 31
  %1421 = lshr i32 %1397, 31
  %1422 = xor i32 %1421, %1420
  %1423 = xor i32 %1417, %1420
  %1424 = add i32 %1423, %1422
  %1425 = icmp eq i32 %1424, 2
  %1426 = zext i1 %1425 to i8
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1426, i8* %1427, align 1
  store %struct.Memory* %loadMem_4adc6d, %struct.Memory** %MEMORY
  %loadMem_4adc74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1429 = getelementptr inbounds %struct.GPR, %struct.GPR* %1428, i32 0, i32 33
  %1430 = getelementptr inbounds %struct.Reg, %struct.Reg* %1429, i32 0, i32 0
  %PC.i1506 = bitcast %union.anon* %1430 to i64*
  %1431 = load i64, i64* %PC.i1506
  %1432 = add i64 %1431, 226
  %1433 = load i64, i64* %PC.i1506
  %1434 = add i64 %1433, 6
  %1435 = load i64, i64* %PC.i1506
  %1436 = add i64 %1435, 6
  store i64 %1436, i64* %PC.i1506
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1438 = load i8, i8* %1437, align 1
  %1439 = icmp ne i8 %1438, 0
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1441 = load i8, i8* %1440, align 1
  %1442 = icmp ne i8 %1441, 0
  %1443 = xor i1 %1439, %1442
  %1444 = xor i1 %1443, true
  %1445 = zext i1 %1444 to i8
  store i8 %1445, i8* %BRANCH_TAKEN, align 1
  %1446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1447 = select i1 %1443, i64 %1434, i64 %1432
  store i64 %1447, i64* %1446, align 8
  store %struct.Memory* %loadMem_4adc74, %struct.Memory** %MEMORY
  %loadBr_4adc74 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4adc74 = icmp eq i8 %loadBr_4adc74, 1
  br i1 %cmpBr_4adc74, label %block_.L_4add56, label %block_4adc7a

block_4adc7a:                                     ; preds = %block_.L_4adc66
  %loadMem_4adc7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1449 = getelementptr inbounds %struct.GPR, %struct.GPR* %1448, i32 0, i32 33
  %1450 = getelementptr inbounds %struct.Reg, %struct.Reg* %1449, i32 0, i32 0
  %PC.i1504 = bitcast %union.anon* %1450 to i64*
  %1451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1452 = getelementptr inbounds %struct.GPR, %struct.GPR* %1451, i32 0, i32 15
  %1453 = getelementptr inbounds %struct.Reg, %struct.Reg* %1452, i32 0, i32 0
  %RBP.i1505 = bitcast %union.anon* %1453 to i64*
  %1454 = load i64, i64* %RBP.i1505
  %1455 = sub i64 %1454, 16
  %1456 = load i64, i64* %PC.i1504
  %1457 = add i64 %1456, 7
  store i64 %1457, i64* %PC.i1504
  %1458 = inttoptr i64 %1455 to i32*
  store i32 0, i32* %1458
  store %struct.Memory* %loadMem_4adc7a, %struct.Memory** %MEMORY
  br label %block_.L_4adc81

block_.L_4adc81:                                  ; preds = %block_4adc8b, %block_4adc7a
  %loadMem_4adc81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1460 = getelementptr inbounds %struct.GPR, %struct.GPR* %1459, i32 0, i32 33
  %1461 = getelementptr inbounds %struct.Reg, %struct.Reg* %1460, i32 0, i32 0
  %PC.i1502 = bitcast %union.anon* %1461 to i64*
  %1462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1463 = getelementptr inbounds %struct.GPR, %struct.GPR* %1462, i32 0, i32 15
  %1464 = getelementptr inbounds %struct.Reg, %struct.Reg* %1463, i32 0, i32 0
  %RBP.i1503 = bitcast %union.anon* %1464 to i64*
  %1465 = load i64, i64* %RBP.i1503
  %1466 = sub i64 %1465, 16
  %1467 = load i64, i64* %PC.i1502
  %1468 = add i64 %1467, 4
  store i64 %1468, i64* %PC.i1502
  %1469 = inttoptr i64 %1466 to i32*
  %1470 = load i32, i32* %1469
  %1471 = sub i32 %1470, 3
  %1472 = icmp ult i32 %1470, 3
  %1473 = zext i1 %1472 to i8
  %1474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1473, i8* %1474, align 1
  %1475 = and i32 %1471, 255
  %1476 = call i32 @llvm.ctpop.i32(i32 %1475)
  %1477 = trunc i32 %1476 to i8
  %1478 = and i8 %1477, 1
  %1479 = xor i8 %1478, 1
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1479, i8* %1480, align 1
  %1481 = xor i32 %1470, 3
  %1482 = xor i32 %1481, %1471
  %1483 = lshr i32 %1482, 4
  %1484 = trunc i32 %1483 to i8
  %1485 = and i8 %1484, 1
  %1486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1485, i8* %1486, align 1
  %1487 = icmp eq i32 %1471, 0
  %1488 = zext i1 %1487 to i8
  %1489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1488, i8* %1489, align 1
  %1490 = lshr i32 %1471, 31
  %1491 = trunc i32 %1490 to i8
  %1492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1491, i8* %1492, align 1
  %1493 = lshr i32 %1470, 31
  %1494 = xor i32 %1490, %1493
  %1495 = add i32 %1494, %1493
  %1496 = icmp eq i32 %1495, 2
  %1497 = zext i1 %1496 to i8
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1497, i8* %1498, align 1
  store %struct.Memory* %loadMem_4adc81, %struct.Memory** %MEMORY
  %loadMem_4adc85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1500 = getelementptr inbounds %struct.GPR, %struct.GPR* %1499, i32 0, i32 33
  %1501 = getelementptr inbounds %struct.Reg, %struct.Reg* %1500, i32 0, i32 0
  %PC.i1501 = bitcast %union.anon* %1501 to i64*
  %1502 = load i64, i64* %PC.i1501
  %1503 = add i64 %1502, 190
  %1504 = load i64, i64* %PC.i1501
  %1505 = add i64 %1504, 6
  %1506 = load i64, i64* %PC.i1501
  %1507 = add i64 %1506, 6
  store i64 %1507, i64* %PC.i1501
  %1508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1509 = load i8, i8* %1508, align 1
  %1510 = icmp ne i8 %1509, 0
  %1511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1512 = load i8, i8* %1511, align 1
  %1513 = icmp ne i8 %1512, 0
  %1514 = xor i1 %1510, %1513
  %1515 = xor i1 %1514, true
  %1516 = zext i1 %1515 to i8
  store i8 %1516, i8* %BRANCH_TAKEN, align 1
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1518 = select i1 %1514, i64 %1505, i64 %1503
  store i64 %1518, i64* %1517, align 8
  store %struct.Memory* %loadMem_4adc85, %struct.Memory** %MEMORY
  %loadBr_4adc85 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4adc85 = icmp eq i8 %loadBr_4adc85, 1
  br i1 %cmpBr_4adc85, label %block_.L_4add43, label %block_4adc8b

block_4adc8b:                                     ; preds = %block_.L_4adc81
  %loadMem_4adc8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1520 = getelementptr inbounds %struct.GPR, %struct.GPR* %1519, i32 0, i32 33
  %1521 = getelementptr inbounds %struct.Reg, %struct.Reg* %1520, i32 0, i32 0
  %PC.i1498 = bitcast %union.anon* %1521 to i64*
  %1522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1523 = getelementptr inbounds %struct.GPR, %struct.GPR* %1522, i32 0, i32 1
  %1524 = getelementptr inbounds %struct.Reg, %struct.Reg* %1523, i32 0, i32 0
  %RAX.i1499 = bitcast %union.anon* %1524 to i64*
  %1525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1526 = getelementptr inbounds %struct.GPR, %struct.GPR* %1525, i32 0, i32 15
  %1527 = getelementptr inbounds %struct.Reg, %struct.Reg* %1526, i32 0, i32 0
  %RBP.i1500 = bitcast %union.anon* %1527 to i64*
  %1528 = load i64, i64* %RBP.i1500
  %1529 = sub i64 %1528, 928
  %1530 = load i64, i64* %PC.i1498
  %1531 = add i64 %1530, 7
  store i64 %1531, i64* %PC.i1498
  store i64 %1529, i64* %RAX.i1499, align 8
  store %struct.Memory* %loadMem_4adc8b, %struct.Memory** %MEMORY
  %loadMem_4adc92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1533 = getelementptr inbounds %struct.GPR, %struct.GPR* %1532, i32 0, i32 33
  %1534 = getelementptr inbounds %struct.Reg, %struct.Reg* %1533, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %1534 to i64*
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1536 = getelementptr inbounds %struct.GPR, %struct.GPR* %1535, i32 0, i32 5
  %1537 = getelementptr inbounds %struct.Reg, %struct.Reg* %1536, i32 0, i32 0
  %RCX.i1496 = bitcast %union.anon* %1537 to i64*
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1539 = getelementptr inbounds %struct.GPR, %struct.GPR* %1538, i32 0, i32 15
  %1540 = getelementptr inbounds %struct.Reg, %struct.Reg* %1539, i32 0, i32 0
  %RBP.i1497 = bitcast %union.anon* %1540 to i64*
  %1541 = load i64, i64* %RBP.i1497
  %1542 = sub i64 %1541, 560
  %1543 = load i64, i64* %PC.i1495
  %1544 = add i64 %1543, 7
  store i64 %1544, i64* %PC.i1495
  store i64 %1542, i64* %RCX.i1496, align 8
  store %struct.Memory* %loadMem_4adc92, %struct.Memory** %MEMORY
  %loadMem_4adc99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1546 = getelementptr inbounds %struct.GPR, %struct.GPR* %1545, i32 0, i32 33
  %1547 = getelementptr inbounds %struct.Reg, %struct.Reg* %1546, i32 0, i32 0
  %PC.i1492 = bitcast %union.anon* %1547 to i64*
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1549 = getelementptr inbounds %struct.GPR, %struct.GPR* %1548, i32 0, i32 7
  %1550 = getelementptr inbounds %struct.Reg, %struct.Reg* %1549, i32 0, i32 0
  %RDX.i1493 = bitcast %union.anon* %1550 to i64*
  %1551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1552 = getelementptr inbounds %struct.GPR, %struct.GPR* %1551, i32 0, i32 15
  %1553 = getelementptr inbounds %struct.Reg, %struct.Reg* %1552, i32 0, i32 0
  %RBP.i1494 = bitcast %union.anon* %1553 to i64*
  %1554 = load i64, i64* %RBP.i1494
  %1555 = sub i64 %1554, 16
  %1556 = load i64, i64* %PC.i1492
  %1557 = add i64 %1556, 4
  store i64 %1557, i64* %PC.i1492
  %1558 = inttoptr i64 %1555 to i32*
  %1559 = load i32, i32* %1558
  %1560 = sext i32 %1559 to i64
  store i64 %1560, i64* %RDX.i1493, align 8
  store %struct.Memory* %loadMem_4adc99, %struct.Memory** %MEMORY
  %loadMem_4adc9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1562 = getelementptr inbounds %struct.GPR, %struct.GPR* %1561, i32 0, i32 33
  %1563 = getelementptr inbounds %struct.Reg, %struct.Reg* %1562, i32 0, i32 0
  %PC.i1488 = bitcast %union.anon* %1563 to i64*
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1565 = getelementptr inbounds %struct.GPR, %struct.GPR* %1564, i32 0, i32 7
  %1566 = getelementptr inbounds %struct.Reg, %struct.Reg* %1565, i32 0, i32 0
  %RDX.i1489 = bitcast %union.anon* %1566 to i64*
  %1567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1568 = getelementptr inbounds %struct.GPR, %struct.GPR* %1567, i32 0, i32 9
  %1569 = getelementptr inbounds %struct.Reg, %struct.Reg* %1568, i32 0, i32 0
  %RSI.i1490 = bitcast %union.anon* %1569 to i64*
  %1570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1571 = getelementptr inbounds %struct.GPR, %struct.GPR* %1570, i32 0, i32 15
  %1572 = getelementptr inbounds %struct.Reg, %struct.Reg* %1571, i32 0, i32 0
  %RBP.i1491 = bitcast %union.anon* %1572 to i64*
  %1573 = load i64, i64* %RBP.i1491
  %1574 = load i64, i64* %RDX.i1489
  %1575 = mul i64 %1574, 4
  %1576 = add i64 %1573, -188
  %1577 = add i64 %1576, %1575
  %1578 = load i64, i64* %PC.i1488
  %1579 = add i64 %1578, 7
  store i64 %1579, i64* %PC.i1488
  %1580 = inttoptr i64 %1577 to i32*
  %1581 = load i32, i32* %1580
  %1582 = zext i32 %1581 to i64
  store i64 %1582, i64* %RSI.i1490, align 8
  store %struct.Memory* %loadMem_4adc9d, %struct.Memory** %MEMORY
  %loadMem_4adca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1584 = getelementptr inbounds %struct.GPR, %struct.GPR* %1583, i32 0, i32 33
  %1585 = getelementptr inbounds %struct.Reg, %struct.Reg* %1584, i32 0, i32 0
  %PC.i1485 = bitcast %union.anon* %1585 to i64*
  %1586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1587 = getelementptr inbounds %struct.GPR, %struct.GPR* %1586, i32 0, i32 7
  %1588 = getelementptr inbounds %struct.Reg, %struct.Reg* %1587, i32 0, i32 0
  %RDX.i1486 = bitcast %union.anon* %1588 to i64*
  %1589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1590 = getelementptr inbounds %struct.GPR, %struct.GPR* %1589, i32 0, i32 15
  %1591 = getelementptr inbounds %struct.Reg, %struct.Reg* %1590, i32 0, i32 0
  %RBP.i1487 = bitcast %union.anon* %1591 to i64*
  %1592 = load i64, i64* %RBP.i1487
  %1593 = sub i64 %1592, 8
  %1594 = load i64, i64* %PC.i1485
  %1595 = add i64 %1594, 4
  store i64 %1595, i64* %PC.i1485
  %1596 = inttoptr i64 %1593 to i32*
  %1597 = load i32, i32* %1596
  %1598 = sext i32 %1597 to i64
  store i64 %1598, i64* %RDX.i1486, align 8
  store %struct.Memory* %loadMem_4adca4, %struct.Memory** %MEMORY
  %loadMem_4adca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1600 = getelementptr inbounds %struct.GPR, %struct.GPR* %1599, i32 0, i32 33
  %1601 = getelementptr inbounds %struct.Reg, %struct.Reg* %1600, i32 0, i32 0
  %PC.i1483 = bitcast %union.anon* %1601 to i64*
  %1602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1603 = getelementptr inbounds %struct.GPR, %struct.GPR* %1602, i32 0, i32 7
  %1604 = getelementptr inbounds %struct.Reg, %struct.Reg* %1603, i32 0, i32 0
  %RDX.i1484 = bitcast %union.anon* %1604 to i64*
  %1605 = load i64, i64* %RDX.i1484
  %1606 = load i64, i64* %PC.i1483
  %1607 = add i64 %1606, 7
  store i64 %1607, i64* %PC.i1483
  %1608 = sext i64 %1605 to i128
  %1609 = and i128 %1608, -18446744073709551616
  %1610 = zext i64 %1605 to i128
  %1611 = or i128 %1609, %1610
  %1612 = mul i128 180, %1611
  %1613 = trunc i128 %1612 to i64
  store i64 %1613, i64* %RDX.i1484, align 8
  %1614 = sext i64 %1613 to i128
  %1615 = icmp ne i128 %1614, %1612
  %1616 = zext i1 %1615 to i8
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1616, i8* %1617, align 1
  %1618 = trunc i128 %1612 to i32
  %1619 = and i32 %1618, 255
  %1620 = call i32 @llvm.ctpop.i32(i32 %1619)
  %1621 = trunc i32 %1620 to i8
  %1622 = and i8 %1621, 1
  %1623 = xor i8 %1622, 1
  %1624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1623, i8* %1624, align 1
  %1625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1625, align 1
  %1626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1626, align 1
  %1627 = lshr i64 %1613, 63
  %1628 = trunc i64 %1627 to i8
  %1629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1628, i8* %1629, align 1
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1616, i8* %1630, align 1
  store %struct.Memory* %loadMem_4adca8, %struct.Memory** %MEMORY
  %loadMem_4adcaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1632 = getelementptr inbounds %struct.GPR, %struct.GPR* %1631, i32 0, i32 33
  %1633 = getelementptr inbounds %struct.Reg, %struct.Reg* %1632, i32 0, i32 0
  %PC.i1480 = bitcast %union.anon* %1633 to i64*
  %1634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1635 = getelementptr inbounds %struct.GPR, %struct.GPR* %1634, i32 0, i32 5
  %1636 = getelementptr inbounds %struct.Reg, %struct.Reg* %1635, i32 0, i32 0
  %RCX.i1481 = bitcast %union.anon* %1636 to i64*
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1638 = getelementptr inbounds %struct.GPR, %struct.GPR* %1637, i32 0, i32 7
  %1639 = getelementptr inbounds %struct.Reg, %struct.Reg* %1638, i32 0, i32 0
  %RDX.i1482 = bitcast %union.anon* %1639 to i64*
  %1640 = load i64, i64* %RCX.i1481
  %1641 = load i64, i64* %RDX.i1482
  %1642 = load i64, i64* %PC.i1480
  %1643 = add i64 %1642, 3
  store i64 %1643, i64* %PC.i1480
  %1644 = add i64 %1641, %1640
  store i64 %1644, i64* %RCX.i1481, align 8
  %1645 = icmp ult i64 %1644, %1640
  %1646 = icmp ult i64 %1644, %1641
  %1647 = or i1 %1645, %1646
  %1648 = zext i1 %1647 to i8
  %1649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1648, i8* %1649, align 1
  %1650 = trunc i64 %1644 to i32
  %1651 = and i32 %1650, 255
  %1652 = call i32 @llvm.ctpop.i32(i32 %1651)
  %1653 = trunc i32 %1652 to i8
  %1654 = and i8 %1653, 1
  %1655 = xor i8 %1654, 1
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1655, i8* %1656, align 1
  %1657 = xor i64 %1641, %1640
  %1658 = xor i64 %1657, %1644
  %1659 = lshr i64 %1658, 4
  %1660 = trunc i64 %1659 to i8
  %1661 = and i8 %1660, 1
  %1662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1661, i8* %1662, align 1
  %1663 = icmp eq i64 %1644, 0
  %1664 = zext i1 %1663 to i8
  %1665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1664, i8* %1665, align 1
  %1666 = lshr i64 %1644, 63
  %1667 = trunc i64 %1666 to i8
  %1668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1667, i8* %1668, align 1
  %1669 = lshr i64 %1640, 63
  %1670 = lshr i64 %1641, 63
  %1671 = xor i64 %1666, %1669
  %1672 = xor i64 %1666, %1670
  %1673 = add i64 %1671, %1672
  %1674 = icmp eq i64 %1673, 2
  %1675 = zext i1 %1674 to i8
  %1676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1675, i8* %1676, align 1
  store %struct.Memory* %loadMem_4adcaf, %struct.Memory** %MEMORY
  %loadMem_4adcb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1678 = getelementptr inbounds %struct.GPR, %struct.GPR* %1677, i32 0, i32 33
  %1679 = getelementptr inbounds %struct.Reg, %struct.Reg* %1678, i32 0, i32 0
  %PC.i1477 = bitcast %union.anon* %1679 to i64*
  %1680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1681 = getelementptr inbounds %struct.GPR, %struct.GPR* %1680, i32 0, i32 7
  %1682 = getelementptr inbounds %struct.Reg, %struct.Reg* %1681, i32 0, i32 0
  %RDX.i1478 = bitcast %union.anon* %1682 to i64*
  %1683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1684 = getelementptr inbounds %struct.GPR, %struct.GPR* %1683, i32 0, i32 15
  %1685 = getelementptr inbounds %struct.Reg, %struct.Reg* %1684, i32 0, i32 0
  %RBP.i1479 = bitcast %union.anon* %1685 to i64*
  %1686 = load i64, i64* %RBP.i1479
  %1687 = sub i64 %1686, 12
  %1688 = load i64, i64* %PC.i1477
  %1689 = add i64 %1688, 4
  store i64 %1689, i64* %PC.i1477
  %1690 = inttoptr i64 %1687 to i32*
  %1691 = load i32, i32* %1690
  %1692 = sext i32 %1691 to i64
  store i64 %1692, i64* %RDX.i1478, align 8
  store %struct.Memory* %loadMem_4adcb2, %struct.Memory** %MEMORY
  %loadMem_4adcb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1694 = getelementptr inbounds %struct.GPR, %struct.GPR* %1693, i32 0, i32 33
  %1695 = getelementptr inbounds %struct.Reg, %struct.Reg* %1694, i32 0, i32 0
  %PC.i1475 = bitcast %union.anon* %1695 to i64*
  %1696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1697 = getelementptr inbounds %struct.GPR, %struct.GPR* %1696, i32 0, i32 7
  %1698 = getelementptr inbounds %struct.Reg, %struct.Reg* %1697, i32 0, i32 0
  %RDX.i1476 = bitcast %union.anon* %1698 to i64*
  %1699 = load i64, i64* %RDX.i1476
  %1700 = load i64, i64* %PC.i1475
  %1701 = add i64 %1700, 4
  store i64 %1701, i64* %PC.i1475
  %1702 = sext i64 %1699 to i128
  %1703 = and i128 %1702, -18446744073709551616
  %1704 = zext i64 %1699 to i128
  %1705 = or i128 %1703, %1704
  %1706 = mul i128 12, %1705
  %1707 = trunc i128 %1706 to i64
  store i64 %1707, i64* %RDX.i1476, align 8
  %1708 = sext i64 %1707 to i128
  %1709 = icmp ne i128 %1708, %1706
  %1710 = zext i1 %1709 to i8
  %1711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1710, i8* %1711, align 1
  %1712 = trunc i128 %1706 to i32
  %1713 = and i32 %1712, 255
  %1714 = call i32 @llvm.ctpop.i32(i32 %1713)
  %1715 = trunc i32 %1714 to i8
  %1716 = and i8 %1715, 1
  %1717 = xor i8 %1716, 1
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1717, i8* %1718, align 1
  %1719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1719, align 1
  %1720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1720, align 1
  %1721 = lshr i64 %1707, 63
  %1722 = trunc i64 %1721 to i8
  %1723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1722, i8* %1723, align 1
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1710, i8* %1724, align 1
  store %struct.Memory* %loadMem_4adcb6, %struct.Memory** %MEMORY
  %loadMem_4adcba = load %struct.Memory*, %struct.Memory** %MEMORY
  %1725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1726 = getelementptr inbounds %struct.GPR, %struct.GPR* %1725, i32 0, i32 33
  %1727 = getelementptr inbounds %struct.Reg, %struct.Reg* %1726, i32 0, i32 0
  %PC.i1472 = bitcast %union.anon* %1727 to i64*
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1729 = getelementptr inbounds %struct.GPR, %struct.GPR* %1728, i32 0, i32 5
  %1730 = getelementptr inbounds %struct.Reg, %struct.Reg* %1729, i32 0, i32 0
  %RCX.i1473 = bitcast %union.anon* %1730 to i64*
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1732 = getelementptr inbounds %struct.GPR, %struct.GPR* %1731, i32 0, i32 7
  %1733 = getelementptr inbounds %struct.Reg, %struct.Reg* %1732, i32 0, i32 0
  %RDX.i1474 = bitcast %union.anon* %1733 to i64*
  %1734 = load i64, i64* %RCX.i1473
  %1735 = load i64, i64* %RDX.i1474
  %1736 = load i64, i64* %PC.i1472
  %1737 = add i64 %1736, 3
  store i64 %1737, i64* %PC.i1472
  %1738 = add i64 %1735, %1734
  store i64 %1738, i64* %RCX.i1473, align 8
  %1739 = icmp ult i64 %1738, %1734
  %1740 = icmp ult i64 %1738, %1735
  %1741 = or i1 %1739, %1740
  %1742 = zext i1 %1741 to i8
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1742, i8* %1743, align 1
  %1744 = trunc i64 %1738 to i32
  %1745 = and i32 %1744, 255
  %1746 = call i32 @llvm.ctpop.i32(i32 %1745)
  %1747 = trunc i32 %1746 to i8
  %1748 = and i8 %1747, 1
  %1749 = xor i8 %1748, 1
  %1750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1749, i8* %1750, align 1
  %1751 = xor i64 %1735, %1734
  %1752 = xor i64 %1751, %1738
  %1753 = lshr i64 %1752, 4
  %1754 = trunc i64 %1753 to i8
  %1755 = and i8 %1754, 1
  %1756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1755, i8* %1756, align 1
  %1757 = icmp eq i64 %1738, 0
  %1758 = zext i1 %1757 to i8
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1758, i8* %1759, align 1
  %1760 = lshr i64 %1738, 63
  %1761 = trunc i64 %1760 to i8
  %1762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1761, i8* %1762, align 1
  %1763 = lshr i64 %1734, 63
  %1764 = lshr i64 %1735, 63
  %1765 = xor i64 %1760, %1763
  %1766 = xor i64 %1760, %1764
  %1767 = add i64 %1765, %1766
  %1768 = icmp eq i64 %1767, 2
  %1769 = zext i1 %1768 to i8
  %1770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1769, i8* %1770, align 1
  store %struct.Memory* %loadMem_4adcba, %struct.Memory** %MEMORY
  %loadMem_4adcbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1772 = getelementptr inbounds %struct.GPR, %struct.GPR* %1771, i32 0, i32 33
  %1773 = getelementptr inbounds %struct.Reg, %struct.Reg* %1772, i32 0, i32 0
  %PC.i1469 = bitcast %union.anon* %1773 to i64*
  %1774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1775 = getelementptr inbounds %struct.GPR, %struct.GPR* %1774, i32 0, i32 7
  %1776 = getelementptr inbounds %struct.Reg, %struct.Reg* %1775, i32 0, i32 0
  %RDX.i1470 = bitcast %union.anon* %1776 to i64*
  %1777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1778 = getelementptr inbounds %struct.GPR, %struct.GPR* %1777, i32 0, i32 15
  %1779 = getelementptr inbounds %struct.Reg, %struct.Reg* %1778, i32 0, i32 0
  %RBP.i1471 = bitcast %union.anon* %1779 to i64*
  %1780 = load i64, i64* %RBP.i1471
  %1781 = sub i64 %1780, 16
  %1782 = load i64, i64* %PC.i1469
  %1783 = add i64 %1782, 4
  store i64 %1783, i64* %PC.i1469
  %1784 = inttoptr i64 %1781 to i32*
  %1785 = load i32, i32* %1784
  %1786 = sext i32 %1785 to i64
  store i64 %1786, i64* %RDX.i1470, align 8
  store %struct.Memory* %loadMem_4adcbd, %struct.Memory** %MEMORY
  %loadMem_4adcc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1788 = getelementptr inbounds %struct.GPR, %struct.GPR* %1787, i32 0, i32 33
  %1789 = getelementptr inbounds %struct.Reg, %struct.Reg* %1788, i32 0, i32 0
  %PC.i1465 = bitcast %union.anon* %1789 to i64*
  %1790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1791 = getelementptr inbounds %struct.GPR, %struct.GPR* %1790, i32 0, i32 9
  %1792 = getelementptr inbounds %struct.Reg, %struct.Reg* %1791, i32 0, i32 0
  %ESI.i1466 = bitcast %union.anon* %1792 to i32*
  %1793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1794 = getelementptr inbounds %struct.GPR, %struct.GPR* %1793, i32 0, i32 5
  %1795 = getelementptr inbounds %struct.Reg, %struct.Reg* %1794, i32 0, i32 0
  %RCX.i1467 = bitcast %union.anon* %1795 to i64*
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1797 = getelementptr inbounds %struct.GPR, %struct.GPR* %1796, i32 0, i32 7
  %1798 = getelementptr inbounds %struct.Reg, %struct.Reg* %1797, i32 0, i32 0
  %RDX.i1468 = bitcast %union.anon* %1798 to i64*
  %1799 = load i64, i64* %RCX.i1467
  %1800 = load i64, i64* %RDX.i1468
  %1801 = mul i64 %1800, 4
  %1802 = add i64 %1801, %1799
  %1803 = load i32, i32* %ESI.i1466
  %1804 = zext i32 %1803 to i64
  %1805 = load i64, i64* %PC.i1465
  %1806 = add i64 %1805, 3
  store i64 %1806, i64* %PC.i1465
  %1807 = inttoptr i64 %1802 to i32*
  store i32 %1803, i32* %1807
  store %struct.Memory* %loadMem_4adcc1, %struct.Memory** %MEMORY
  %loadMem_4adcc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1809 = getelementptr inbounds %struct.GPR, %struct.GPR* %1808, i32 0, i32 33
  %1810 = getelementptr inbounds %struct.Reg, %struct.Reg* %1809, i32 0, i32 0
  %PC.i1462 = bitcast %union.anon* %1810 to i64*
  %1811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1812 = getelementptr inbounds %struct.GPR, %struct.GPR* %1811, i32 0, i32 5
  %1813 = getelementptr inbounds %struct.Reg, %struct.Reg* %1812, i32 0, i32 0
  %RCX.i1463 = bitcast %union.anon* %1813 to i64*
  %1814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1815 = getelementptr inbounds %struct.GPR, %struct.GPR* %1814, i32 0, i32 15
  %1816 = getelementptr inbounds %struct.Reg, %struct.Reg* %1815, i32 0, i32 0
  %RBP.i1464 = bitcast %union.anon* %1816 to i64*
  %1817 = load i64, i64* %RBP.i1464
  %1818 = sub i64 %1817, 16
  %1819 = load i64, i64* %PC.i1462
  %1820 = add i64 %1819, 4
  store i64 %1820, i64* %PC.i1462
  %1821 = inttoptr i64 %1818 to i32*
  %1822 = load i32, i32* %1821
  %1823 = sext i32 %1822 to i64
  store i64 %1823, i64* %RCX.i1463, align 8
  store %struct.Memory* %loadMem_4adcc4, %struct.Memory** %MEMORY
  %loadMem_4adcc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1825 = getelementptr inbounds %struct.GPR, %struct.GPR* %1824, i32 0, i32 33
  %1826 = getelementptr inbounds %struct.Reg, %struct.Reg* %1825, i32 0, i32 0
  %PC.i1458 = bitcast %union.anon* %1826 to i64*
  %1827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1828 = getelementptr inbounds %struct.GPR, %struct.GPR* %1827, i32 0, i32 5
  %1829 = getelementptr inbounds %struct.Reg, %struct.Reg* %1828, i32 0, i32 0
  %RCX.i1459 = bitcast %union.anon* %1829 to i64*
  %1830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1831 = getelementptr inbounds %struct.GPR, %struct.GPR* %1830, i32 0, i32 9
  %1832 = getelementptr inbounds %struct.Reg, %struct.Reg* %1831, i32 0, i32 0
  %RSI.i1460 = bitcast %union.anon* %1832 to i64*
  %1833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1834 = getelementptr inbounds %struct.GPR, %struct.GPR* %1833, i32 0, i32 15
  %1835 = getelementptr inbounds %struct.Reg, %struct.Reg* %1834, i32 0, i32 0
  %RBP.i1461 = bitcast %union.anon* %1835 to i64*
  %1836 = load i64, i64* %RBP.i1461
  %1837 = load i64, i64* %RCX.i1459
  %1838 = mul i64 %1837, 4
  %1839 = add i64 %1836, -188
  %1840 = add i64 %1839, %1838
  %1841 = load i64, i64* %PC.i1458
  %1842 = add i64 %1841, 7
  store i64 %1842, i64* %PC.i1458
  %1843 = inttoptr i64 %1840 to i32*
  %1844 = load i32, i32* %1843
  %1845 = zext i32 %1844 to i64
  store i64 %1845, i64* %RSI.i1460, align 8
  store %struct.Memory* %loadMem_4adcc8, %struct.Memory** %MEMORY
  %loadMem_4adccf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1847 = getelementptr inbounds %struct.GPR, %struct.GPR* %1846, i32 0, i32 33
  %1848 = getelementptr inbounds %struct.Reg, %struct.Reg* %1847, i32 0, i32 0
  %PC.i1456 = bitcast %union.anon* %1848 to i64*
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1850 = getelementptr inbounds %struct.GPR, %struct.GPR* %1849, i32 0, i32 5
  %1851 = getelementptr inbounds %struct.Reg, %struct.Reg* %1850, i32 0, i32 0
  %RCX.i1457 = bitcast %union.anon* %1851 to i64*
  %1852 = load i64, i64* %PC.i1456
  %1853 = add i64 %1852, 8
  store i64 %1853, i64* %PC.i1456
  %1854 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %1854, i64* %RCX.i1457, align 8
  store %struct.Memory* %loadMem_4adccf, %struct.Memory** %MEMORY
  %loadMem_4adcd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1856 = getelementptr inbounds %struct.GPR, %struct.GPR* %1855, i32 0, i32 33
  %1857 = getelementptr inbounds %struct.Reg, %struct.Reg* %1856, i32 0, i32 0
  %PC.i1453 = bitcast %union.anon* %1857 to i64*
  %1858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1859 = getelementptr inbounds %struct.GPR, %struct.GPR* %1858, i32 0, i32 7
  %1860 = getelementptr inbounds %struct.Reg, %struct.Reg* %1859, i32 0, i32 0
  %RDX.i1454 = bitcast %union.anon* %1860 to i64*
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1862 = getelementptr inbounds %struct.GPR, %struct.GPR* %1861, i32 0, i32 15
  %1863 = getelementptr inbounds %struct.Reg, %struct.Reg* %1862, i32 0, i32 0
  %RBP.i1455 = bitcast %union.anon* %1863 to i64*
  %1864 = load i64, i64* %RBP.i1455
  %1865 = sub i64 %1864, 8
  %1866 = load i64, i64* %PC.i1453
  %1867 = add i64 %1866, 4
  store i64 %1867, i64* %PC.i1453
  %1868 = inttoptr i64 %1865 to i32*
  %1869 = load i32, i32* %1868
  %1870 = sext i32 %1869 to i64
  store i64 %1870, i64* %RDX.i1454, align 8
  store %struct.Memory* %loadMem_4adcd7, %struct.Memory** %MEMORY
  %loadMem_4adcdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1872 = getelementptr inbounds %struct.GPR, %struct.GPR* %1871, i32 0, i32 33
  %1873 = getelementptr inbounds %struct.Reg, %struct.Reg* %1872, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %1873 to i64*
  %1874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1875 = getelementptr inbounds %struct.GPR, %struct.GPR* %1874, i32 0, i32 5
  %1876 = getelementptr inbounds %struct.Reg, %struct.Reg* %1875, i32 0, i32 0
  %RCX.i1451 = bitcast %union.anon* %1876 to i64*
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1878 = getelementptr inbounds %struct.GPR, %struct.GPR* %1877, i32 0, i32 7
  %1879 = getelementptr inbounds %struct.Reg, %struct.Reg* %1878, i32 0, i32 0
  %RDX.i1452 = bitcast %union.anon* %1879 to i64*
  %1880 = load i64, i64* %RCX.i1451
  %1881 = load i64, i64* %RDX.i1452
  %1882 = mul i64 %1881, 8
  %1883 = add i64 %1882, %1880
  %1884 = load i64, i64* %PC.i1450
  %1885 = add i64 %1884, 4
  store i64 %1885, i64* %PC.i1450
  %1886 = inttoptr i64 %1883 to i64*
  %1887 = load i64, i64* %1886
  store i64 %1887, i64* %RCX.i1451, align 8
  store %struct.Memory* %loadMem_4adcdb, %struct.Memory** %MEMORY
  %loadMem_4adcdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1889 = getelementptr inbounds %struct.GPR, %struct.GPR* %1888, i32 0, i32 33
  %1890 = getelementptr inbounds %struct.Reg, %struct.Reg* %1889, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %1890 to i64*
  %1891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1892 = getelementptr inbounds %struct.GPR, %struct.GPR* %1891, i32 0, i32 7
  %1893 = getelementptr inbounds %struct.Reg, %struct.Reg* %1892, i32 0, i32 0
  %RDX.i1448 = bitcast %union.anon* %1893 to i64*
  %1894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1895 = getelementptr inbounds %struct.GPR, %struct.GPR* %1894, i32 0, i32 15
  %1896 = getelementptr inbounds %struct.Reg, %struct.Reg* %1895, i32 0, i32 0
  %RBP.i1449 = bitcast %union.anon* %1896 to i64*
  %1897 = load i64, i64* %RBP.i1449
  %1898 = sub i64 %1897, 12
  %1899 = load i64, i64* %PC.i1447
  %1900 = add i64 %1899, 4
  store i64 %1900, i64* %PC.i1447
  %1901 = inttoptr i64 %1898 to i32*
  %1902 = load i32, i32* %1901
  %1903 = sext i32 %1902 to i64
  store i64 %1903, i64* %RDX.i1448, align 8
  store %struct.Memory* %loadMem_4adcdf, %struct.Memory** %MEMORY
  %loadMem_4adce3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1905 = getelementptr inbounds %struct.GPR, %struct.GPR* %1904, i32 0, i32 33
  %1906 = getelementptr inbounds %struct.Reg, %struct.Reg* %1905, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %1906 to i64*
  %1907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1908 = getelementptr inbounds %struct.GPR, %struct.GPR* %1907, i32 0, i32 5
  %1909 = getelementptr inbounds %struct.Reg, %struct.Reg* %1908, i32 0, i32 0
  %RCX.i1445 = bitcast %union.anon* %1909 to i64*
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1911 = getelementptr inbounds %struct.GPR, %struct.GPR* %1910, i32 0, i32 7
  %1912 = getelementptr inbounds %struct.Reg, %struct.Reg* %1911, i32 0, i32 0
  %RDX.i1446 = bitcast %union.anon* %1912 to i64*
  %1913 = load i64, i64* %RCX.i1445
  %1914 = load i64, i64* %RDX.i1446
  %1915 = mul i64 %1914, 8
  %1916 = add i64 %1915, %1913
  %1917 = load i64, i64* %PC.i1444
  %1918 = add i64 %1917, 4
  store i64 %1918, i64* %PC.i1444
  %1919 = inttoptr i64 %1916 to i64*
  %1920 = load i64, i64* %1919
  store i64 %1920, i64* %RCX.i1445, align 8
  store %struct.Memory* %loadMem_4adce3, %struct.Memory** %MEMORY
  %loadMem_4adce7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1922 = getelementptr inbounds %struct.GPR, %struct.GPR* %1921, i32 0, i32 33
  %1923 = getelementptr inbounds %struct.Reg, %struct.Reg* %1922, i32 0, i32 0
  %PC.i1441 = bitcast %union.anon* %1923 to i64*
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1925 = getelementptr inbounds %struct.GPR, %struct.GPR* %1924, i32 0, i32 7
  %1926 = getelementptr inbounds %struct.Reg, %struct.Reg* %1925, i32 0, i32 0
  %RDX.i1442 = bitcast %union.anon* %1926 to i64*
  %1927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1928 = getelementptr inbounds %struct.GPR, %struct.GPR* %1927, i32 0, i32 15
  %1929 = getelementptr inbounds %struct.Reg, %struct.Reg* %1928, i32 0, i32 0
  %RBP.i1443 = bitcast %union.anon* %1929 to i64*
  %1930 = load i64, i64* %RBP.i1443
  %1931 = sub i64 %1930, 16
  %1932 = load i64, i64* %PC.i1441
  %1933 = add i64 %1932, 4
  store i64 %1933, i64* %PC.i1441
  %1934 = inttoptr i64 %1931 to i32*
  %1935 = load i32, i32* %1934
  %1936 = sext i32 %1935 to i64
  store i64 %1936, i64* %RDX.i1442, align 8
  store %struct.Memory* %loadMem_4adce7, %struct.Memory** %MEMORY
  %loadMem_4adceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1938 = getelementptr inbounds %struct.GPR, %struct.GPR* %1937, i32 0, i32 33
  %1939 = getelementptr inbounds %struct.Reg, %struct.Reg* %1938, i32 0, i32 0
  %PC.i1437 = bitcast %union.anon* %1939 to i64*
  %1940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1941 = getelementptr inbounds %struct.GPR, %struct.GPR* %1940, i32 0, i32 9
  %1942 = getelementptr inbounds %struct.Reg, %struct.Reg* %1941, i32 0, i32 0
  %ESI.i1438 = bitcast %union.anon* %1942 to i32*
  %1943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1944 = getelementptr inbounds %struct.GPR, %struct.GPR* %1943, i32 0, i32 5
  %1945 = getelementptr inbounds %struct.Reg, %struct.Reg* %1944, i32 0, i32 0
  %RCX.i1439 = bitcast %union.anon* %1945 to i64*
  %1946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1947 = getelementptr inbounds %struct.GPR, %struct.GPR* %1946, i32 0, i32 7
  %1948 = getelementptr inbounds %struct.Reg, %struct.Reg* %1947, i32 0, i32 0
  %RDX.i1440 = bitcast %union.anon* %1948 to i64*
  %1949 = load i64, i64* %RCX.i1439
  %1950 = load i64, i64* %RDX.i1440
  %1951 = mul i64 %1950, 4
  %1952 = add i64 %1951, %1949
  %1953 = load i32, i32* %ESI.i1438
  %1954 = zext i32 %1953 to i64
  %1955 = load i64, i64* %PC.i1437
  %1956 = add i64 %1955, 3
  store i64 %1956, i64* %PC.i1437
  %1957 = inttoptr i64 %1952 to i32*
  store i32 %1953, i32* %1957
  store %struct.Memory* %loadMem_4adceb, %struct.Memory** %MEMORY
  %loadMem_4adcee = load %struct.Memory*, %struct.Memory** %MEMORY
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1959 = getelementptr inbounds %struct.GPR, %struct.GPR* %1958, i32 0, i32 33
  %1960 = getelementptr inbounds %struct.Reg, %struct.Reg* %1959, i32 0, i32 0
  %PC.i1435 = bitcast %union.anon* %1960 to i64*
  %1961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1962 = getelementptr inbounds %struct.GPR, %struct.GPR* %1961, i32 0, i32 5
  %1963 = getelementptr inbounds %struct.Reg, %struct.Reg* %1962, i32 0, i32 0
  %RCX.i1436 = bitcast %union.anon* %1963 to i64*
  %1964 = load i64, i64* %PC.i1435
  %1965 = add i64 %1964, 8
  store i64 %1965, i64* %PC.i1435
  %1966 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %1966, i64* %RCX.i1436, align 8
  store %struct.Memory* %loadMem_4adcee, %struct.Memory** %MEMORY
  %loadMem_4adcf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1968 = getelementptr inbounds %struct.GPR, %struct.GPR* %1967, i32 0, i32 33
  %1969 = getelementptr inbounds %struct.Reg, %struct.Reg* %1968, i32 0, i32 0
  %PC.i1432 = bitcast %union.anon* %1969 to i64*
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1971 = getelementptr inbounds %struct.GPR, %struct.GPR* %1970, i32 0, i32 7
  %1972 = getelementptr inbounds %struct.Reg, %struct.Reg* %1971, i32 0, i32 0
  %RDX.i1433 = bitcast %union.anon* %1972 to i64*
  %1973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1974 = getelementptr inbounds %struct.GPR, %struct.GPR* %1973, i32 0, i32 15
  %1975 = getelementptr inbounds %struct.Reg, %struct.Reg* %1974, i32 0, i32 0
  %RBP.i1434 = bitcast %union.anon* %1975 to i64*
  %1976 = load i64, i64* %RBP.i1434
  %1977 = sub i64 %1976, 8
  %1978 = load i64, i64* %PC.i1432
  %1979 = add i64 %1978, 4
  store i64 %1979, i64* %PC.i1432
  %1980 = inttoptr i64 %1977 to i32*
  %1981 = load i32, i32* %1980
  %1982 = sext i32 %1981 to i64
  store i64 %1982, i64* %RDX.i1433, align 8
  store %struct.Memory* %loadMem_4adcf6, %struct.Memory** %MEMORY
  %loadMem_4adcfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1984 = getelementptr inbounds %struct.GPR, %struct.GPR* %1983, i32 0, i32 33
  %1985 = getelementptr inbounds %struct.Reg, %struct.Reg* %1984, i32 0, i32 0
  %PC.i1429 = bitcast %union.anon* %1985 to i64*
  %1986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1987 = getelementptr inbounds %struct.GPR, %struct.GPR* %1986, i32 0, i32 5
  %1988 = getelementptr inbounds %struct.Reg, %struct.Reg* %1987, i32 0, i32 0
  %RCX.i1430 = bitcast %union.anon* %1988 to i64*
  %1989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1990 = getelementptr inbounds %struct.GPR, %struct.GPR* %1989, i32 0, i32 7
  %1991 = getelementptr inbounds %struct.Reg, %struct.Reg* %1990, i32 0, i32 0
  %RDX.i1431 = bitcast %union.anon* %1991 to i64*
  %1992 = load i64, i64* %RCX.i1430
  %1993 = load i64, i64* %RDX.i1431
  %1994 = mul i64 %1993, 8
  %1995 = add i64 %1994, %1992
  %1996 = load i64, i64* %PC.i1429
  %1997 = add i64 %1996, 4
  store i64 %1997, i64* %PC.i1429
  %1998 = inttoptr i64 %1995 to i64*
  %1999 = load i64, i64* %1998
  store i64 %1999, i64* %RCX.i1430, align 8
  store %struct.Memory* %loadMem_4adcfa, %struct.Memory** %MEMORY
  %loadMem_4adcfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %2000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2001 = getelementptr inbounds %struct.GPR, %struct.GPR* %2000, i32 0, i32 33
  %2002 = getelementptr inbounds %struct.Reg, %struct.Reg* %2001, i32 0, i32 0
  %PC.i1426 = bitcast %union.anon* %2002 to i64*
  %2003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2004 = getelementptr inbounds %struct.GPR, %struct.GPR* %2003, i32 0, i32 7
  %2005 = getelementptr inbounds %struct.Reg, %struct.Reg* %2004, i32 0, i32 0
  %RDX.i1427 = bitcast %union.anon* %2005 to i64*
  %2006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2007 = getelementptr inbounds %struct.GPR, %struct.GPR* %2006, i32 0, i32 15
  %2008 = getelementptr inbounds %struct.Reg, %struct.Reg* %2007, i32 0, i32 0
  %RBP.i1428 = bitcast %union.anon* %2008 to i64*
  %2009 = load i64, i64* %RBP.i1428
  %2010 = sub i64 %2009, 12
  %2011 = load i64, i64* %PC.i1426
  %2012 = add i64 %2011, 4
  store i64 %2012, i64* %PC.i1426
  %2013 = inttoptr i64 %2010 to i32*
  %2014 = load i32, i32* %2013
  %2015 = sext i32 %2014 to i64
  store i64 %2015, i64* %RDX.i1427, align 8
  store %struct.Memory* %loadMem_4adcfe, %struct.Memory** %MEMORY
  %loadMem_4add02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2017 = getelementptr inbounds %struct.GPR, %struct.GPR* %2016, i32 0, i32 33
  %2018 = getelementptr inbounds %struct.Reg, %struct.Reg* %2017, i32 0, i32 0
  %PC.i1423 = bitcast %union.anon* %2018 to i64*
  %2019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2020 = getelementptr inbounds %struct.GPR, %struct.GPR* %2019, i32 0, i32 5
  %2021 = getelementptr inbounds %struct.Reg, %struct.Reg* %2020, i32 0, i32 0
  %RCX.i1424 = bitcast %union.anon* %2021 to i64*
  %2022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2023 = getelementptr inbounds %struct.GPR, %struct.GPR* %2022, i32 0, i32 7
  %2024 = getelementptr inbounds %struct.Reg, %struct.Reg* %2023, i32 0, i32 0
  %RDX.i1425 = bitcast %union.anon* %2024 to i64*
  %2025 = load i64, i64* %RCX.i1424
  %2026 = load i64, i64* %RDX.i1425
  %2027 = mul i64 %2026, 8
  %2028 = add i64 %2027, %2025
  %2029 = load i64, i64* %PC.i1423
  %2030 = add i64 %2029, 4
  store i64 %2030, i64* %PC.i1423
  %2031 = inttoptr i64 %2028 to i64*
  %2032 = load i64, i64* %2031
  store i64 %2032, i64* %RCX.i1424, align 8
  store %struct.Memory* %loadMem_4add02, %struct.Memory** %MEMORY
  %loadMem_4add06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2034 = getelementptr inbounds %struct.GPR, %struct.GPR* %2033, i32 0, i32 33
  %2035 = getelementptr inbounds %struct.Reg, %struct.Reg* %2034, i32 0, i32 0
  %PC.i1420 = bitcast %union.anon* %2035 to i64*
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2037 = getelementptr inbounds %struct.GPR, %struct.GPR* %2036, i32 0, i32 7
  %2038 = getelementptr inbounds %struct.Reg, %struct.Reg* %2037, i32 0, i32 0
  %RDX.i1421 = bitcast %union.anon* %2038 to i64*
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2040 = getelementptr inbounds %struct.GPR, %struct.GPR* %2039, i32 0, i32 15
  %2041 = getelementptr inbounds %struct.Reg, %struct.Reg* %2040, i32 0, i32 0
  %RBP.i1422 = bitcast %union.anon* %2041 to i64*
  %2042 = load i64, i64* %RBP.i1422
  %2043 = sub i64 %2042, 16
  %2044 = load i64, i64* %PC.i1420
  %2045 = add i64 %2044, 4
  store i64 %2045, i64* %PC.i1420
  %2046 = inttoptr i64 %2043 to i32*
  %2047 = load i32, i32* %2046
  %2048 = sext i32 %2047 to i64
  store i64 %2048, i64* %RDX.i1421, align 8
  store %struct.Memory* %loadMem_4add06, %struct.Memory** %MEMORY
  %loadMem_4add0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2050 = getelementptr inbounds %struct.GPR, %struct.GPR* %2049, i32 0, i32 33
  %2051 = getelementptr inbounds %struct.Reg, %struct.Reg* %2050, i32 0, i32 0
  %PC.i1417 = bitcast %union.anon* %2051 to i64*
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2053 = getelementptr inbounds %struct.GPR, %struct.GPR* %2052, i32 0, i32 5
  %2054 = getelementptr inbounds %struct.Reg, %struct.Reg* %2053, i32 0, i32 0
  %RCX.i1418 = bitcast %union.anon* %2054 to i64*
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2056 = getelementptr inbounds %struct.GPR, %struct.GPR* %2055, i32 0, i32 7
  %2057 = getelementptr inbounds %struct.Reg, %struct.Reg* %2056, i32 0, i32 0
  %RDX.i1419 = bitcast %union.anon* %2057 to i64*
  %2058 = load i64, i64* %RCX.i1418
  %2059 = load i64, i64* %RDX.i1419
  %2060 = mul i64 %2059, 4
  %2061 = add i64 %2060, %2058
  %2062 = load i64, i64* %PC.i1417
  %2063 = add i64 %2062, 7
  store i64 %2063, i64* %PC.i1417
  %2064 = inttoptr i64 %2061 to i32*
  store i32 0, i32* %2064
  store %struct.Memory* %loadMem_4add0a, %struct.Memory** %MEMORY
  %loadMem_4add11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2066 = getelementptr inbounds %struct.GPR, %struct.GPR* %2065, i32 0, i32 33
  %2067 = getelementptr inbounds %struct.Reg, %struct.Reg* %2066, i32 0, i32 0
  %PC.i1414 = bitcast %union.anon* %2067 to i64*
  %2068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2069 = getelementptr inbounds %struct.GPR, %struct.GPR* %2068, i32 0, i32 5
  %2070 = getelementptr inbounds %struct.Reg, %struct.Reg* %2069, i32 0, i32 0
  %RCX.i1415 = bitcast %union.anon* %2070 to i64*
  %2071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2072 = getelementptr inbounds %struct.GPR, %struct.GPR* %2071, i32 0, i32 15
  %2073 = getelementptr inbounds %struct.Reg, %struct.Reg* %2072, i32 0, i32 0
  %RBP.i1416 = bitcast %union.anon* %2073 to i64*
  %2074 = load i64, i64* %RBP.i1416
  %2075 = sub i64 %2074, 8
  %2076 = load i64, i64* %PC.i1414
  %2077 = add i64 %2076, 4
  store i64 %2077, i64* %PC.i1414
  %2078 = inttoptr i64 %2075 to i32*
  %2079 = load i32, i32* %2078
  %2080 = sext i32 %2079 to i64
  store i64 %2080, i64* %RCX.i1415, align 8
  store %struct.Memory* %loadMem_4add11, %struct.Memory** %MEMORY
  %loadMem_4add15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2082 = getelementptr inbounds %struct.GPR, %struct.GPR* %2081, i32 0, i32 33
  %2083 = getelementptr inbounds %struct.Reg, %struct.Reg* %2082, i32 0, i32 0
  %PC.i1412 = bitcast %union.anon* %2083 to i64*
  %2084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2085 = getelementptr inbounds %struct.GPR, %struct.GPR* %2084, i32 0, i32 5
  %2086 = getelementptr inbounds %struct.Reg, %struct.Reg* %2085, i32 0, i32 0
  %RCX.i1413 = bitcast %union.anon* %2086 to i64*
  %2087 = load i64, i64* %RCX.i1413
  %2088 = load i64, i64* %PC.i1412
  %2089 = add i64 %2088, 7
  store i64 %2089, i64* %PC.i1412
  %2090 = sext i64 %2087 to i128
  %2091 = and i128 %2090, -18446744073709551616
  %2092 = zext i64 %2087 to i128
  %2093 = or i128 %2091, %2092
  %2094 = mul i128 180, %2093
  %2095 = trunc i128 %2094 to i64
  store i64 %2095, i64* %RCX.i1413, align 8
  %2096 = sext i64 %2095 to i128
  %2097 = icmp ne i128 %2096, %2094
  %2098 = zext i1 %2097 to i8
  %2099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2098, i8* %2099, align 1
  %2100 = trunc i128 %2094 to i32
  %2101 = and i32 %2100, 255
  %2102 = call i32 @llvm.ctpop.i32(i32 %2101)
  %2103 = trunc i32 %2102 to i8
  %2104 = and i8 %2103, 1
  %2105 = xor i8 %2104, 1
  %2106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2105, i8* %2106, align 1
  %2107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2107, align 1
  %2108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2108, align 1
  %2109 = lshr i64 %2095, 63
  %2110 = trunc i64 %2109 to i8
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2110, i8* %2111, align 1
  %2112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2098, i8* %2112, align 1
  store %struct.Memory* %loadMem_4add15, %struct.Memory** %MEMORY
  %loadMem_4add1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2114 = getelementptr inbounds %struct.GPR, %struct.GPR* %2113, i32 0, i32 33
  %2115 = getelementptr inbounds %struct.Reg, %struct.Reg* %2114, i32 0, i32 0
  %PC.i1409 = bitcast %union.anon* %2115 to i64*
  %2116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2117 = getelementptr inbounds %struct.GPR, %struct.GPR* %2116, i32 0, i32 1
  %2118 = getelementptr inbounds %struct.Reg, %struct.Reg* %2117, i32 0, i32 0
  %RAX.i1410 = bitcast %union.anon* %2118 to i64*
  %2119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2120 = getelementptr inbounds %struct.GPR, %struct.GPR* %2119, i32 0, i32 5
  %2121 = getelementptr inbounds %struct.Reg, %struct.Reg* %2120, i32 0, i32 0
  %RCX.i1411 = bitcast %union.anon* %2121 to i64*
  %2122 = load i64, i64* %RAX.i1410
  %2123 = load i64, i64* %RCX.i1411
  %2124 = load i64, i64* %PC.i1409
  %2125 = add i64 %2124, 3
  store i64 %2125, i64* %PC.i1409
  %2126 = add i64 %2123, %2122
  store i64 %2126, i64* %RAX.i1410, align 8
  %2127 = icmp ult i64 %2126, %2122
  %2128 = icmp ult i64 %2126, %2123
  %2129 = or i1 %2127, %2128
  %2130 = zext i1 %2129 to i8
  %2131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2130, i8* %2131, align 1
  %2132 = trunc i64 %2126 to i32
  %2133 = and i32 %2132, 255
  %2134 = call i32 @llvm.ctpop.i32(i32 %2133)
  %2135 = trunc i32 %2134 to i8
  %2136 = and i8 %2135, 1
  %2137 = xor i8 %2136, 1
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2137, i8* %2138, align 1
  %2139 = xor i64 %2123, %2122
  %2140 = xor i64 %2139, %2126
  %2141 = lshr i64 %2140, 4
  %2142 = trunc i64 %2141 to i8
  %2143 = and i8 %2142, 1
  %2144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2143, i8* %2144, align 1
  %2145 = icmp eq i64 %2126, 0
  %2146 = zext i1 %2145 to i8
  %2147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2146, i8* %2147, align 1
  %2148 = lshr i64 %2126, 63
  %2149 = trunc i64 %2148 to i8
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2149, i8* %2150, align 1
  %2151 = lshr i64 %2122, 63
  %2152 = lshr i64 %2123, 63
  %2153 = xor i64 %2148, %2151
  %2154 = xor i64 %2148, %2152
  %2155 = add i64 %2153, %2154
  %2156 = icmp eq i64 %2155, 2
  %2157 = zext i1 %2156 to i8
  %2158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2157, i8* %2158, align 1
  store %struct.Memory* %loadMem_4add1c, %struct.Memory** %MEMORY
  %loadMem_4add1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2160 = getelementptr inbounds %struct.GPR, %struct.GPR* %2159, i32 0, i32 33
  %2161 = getelementptr inbounds %struct.Reg, %struct.Reg* %2160, i32 0, i32 0
  %PC.i1406 = bitcast %union.anon* %2161 to i64*
  %2162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2163 = getelementptr inbounds %struct.GPR, %struct.GPR* %2162, i32 0, i32 5
  %2164 = getelementptr inbounds %struct.Reg, %struct.Reg* %2163, i32 0, i32 0
  %RCX.i1407 = bitcast %union.anon* %2164 to i64*
  %2165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2166 = getelementptr inbounds %struct.GPR, %struct.GPR* %2165, i32 0, i32 15
  %2167 = getelementptr inbounds %struct.Reg, %struct.Reg* %2166, i32 0, i32 0
  %RBP.i1408 = bitcast %union.anon* %2167 to i64*
  %2168 = load i64, i64* %RBP.i1408
  %2169 = sub i64 %2168, 12
  %2170 = load i64, i64* %PC.i1406
  %2171 = add i64 %2170, 4
  store i64 %2171, i64* %PC.i1406
  %2172 = inttoptr i64 %2169 to i32*
  %2173 = load i32, i32* %2172
  %2174 = sext i32 %2173 to i64
  store i64 %2174, i64* %RCX.i1407, align 8
  store %struct.Memory* %loadMem_4add1f, %struct.Memory** %MEMORY
  %loadMem_4add23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2176 = getelementptr inbounds %struct.GPR, %struct.GPR* %2175, i32 0, i32 33
  %2177 = getelementptr inbounds %struct.Reg, %struct.Reg* %2176, i32 0, i32 0
  %PC.i1404 = bitcast %union.anon* %2177 to i64*
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2179 = getelementptr inbounds %struct.GPR, %struct.GPR* %2178, i32 0, i32 5
  %2180 = getelementptr inbounds %struct.Reg, %struct.Reg* %2179, i32 0, i32 0
  %RCX.i1405 = bitcast %union.anon* %2180 to i64*
  %2181 = load i64, i64* %RCX.i1405
  %2182 = load i64, i64* %PC.i1404
  %2183 = add i64 %2182, 4
  store i64 %2183, i64* %PC.i1404
  %2184 = sext i64 %2181 to i128
  %2185 = and i128 %2184, -18446744073709551616
  %2186 = zext i64 %2181 to i128
  %2187 = or i128 %2185, %2186
  %2188 = mul i128 12, %2187
  %2189 = trunc i128 %2188 to i64
  store i64 %2189, i64* %RCX.i1405, align 8
  %2190 = sext i64 %2189 to i128
  %2191 = icmp ne i128 %2190, %2188
  %2192 = zext i1 %2191 to i8
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2192, i8* %2193, align 1
  %2194 = trunc i128 %2188 to i32
  %2195 = and i32 %2194, 255
  %2196 = call i32 @llvm.ctpop.i32(i32 %2195)
  %2197 = trunc i32 %2196 to i8
  %2198 = and i8 %2197, 1
  %2199 = xor i8 %2198, 1
  %2200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2199, i8* %2200, align 1
  %2201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2201, align 1
  %2202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2202, align 1
  %2203 = lshr i64 %2189, 63
  %2204 = trunc i64 %2203 to i8
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2204, i8* %2205, align 1
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2192, i8* %2206, align 1
  store %struct.Memory* %loadMem_4add23, %struct.Memory** %MEMORY
  %loadMem_4add27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2208 = getelementptr inbounds %struct.GPR, %struct.GPR* %2207, i32 0, i32 33
  %2209 = getelementptr inbounds %struct.Reg, %struct.Reg* %2208, i32 0, i32 0
  %PC.i1401 = bitcast %union.anon* %2209 to i64*
  %2210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2211 = getelementptr inbounds %struct.GPR, %struct.GPR* %2210, i32 0, i32 1
  %2212 = getelementptr inbounds %struct.Reg, %struct.Reg* %2211, i32 0, i32 0
  %RAX.i1402 = bitcast %union.anon* %2212 to i64*
  %2213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2214 = getelementptr inbounds %struct.GPR, %struct.GPR* %2213, i32 0, i32 5
  %2215 = getelementptr inbounds %struct.Reg, %struct.Reg* %2214, i32 0, i32 0
  %RCX.i1403 = bitcast %union.anon* %2215 to i64*
  %2216 = load i64, i64* %RAX.i1402
  %2217 = load i64, i64* %RCX.i1403
  %2218 = load i64, i64* %PC.i1401
  %2219 = add i64 %2218, 3
  store i64 %2219, i64* %PC.i1401
  %2220 = add i64 %2217, %2216
  store i64 %2220, i64* %RAX.i1402, align 8
  %2221 = icmp ult i64 %2220, %2216
  %2222 = icmp ult i64 %2220, %2217
  %2223 = or i1 %2221, %2222
  %2224 = zext i1 %2223 to i8
  %2225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2224, i8* %2225, align 1
  %2226 = trunc i64 %2220 to i32
  %2227 = and i32 %2226, 255
  %2228 = call i32 @llvm.ctpop.i32(i32 %2227)
  %2229 = trunc i32 %2228 to i8
  %2230 = and i8 %2229, 1
  %2231 = xor i8 %2230, 1
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2231, i8* %2232, align 1
  %2233 = xor i64 %2217, %2216
  %2234 = xor i64 %2233, %2220
  %2235 = lshr i64 %2234, 4
  %2236 = trunc i64 %2235 to i8
  %2237 = and i8 %2236, 1
  %2238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2237, i8* %2238, align 1
  %2239 = icmp eq i64 %2220, 0
  %2240 = zext i1 %2239 to i8
  %2241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2240, i8* %2241, align 1
  %2242 = lshr i64 %2220, 63
  %2243 = trunc i64 %2242 to i8
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2243, i8* %2244, align 1
  %2245 = lshr i64 %2216, 63
  %2246 = lshr i64 %2217, 63
  %2247 = xor i64 %2242, %2245
  %2248 = xor i64 %2242, %2246
  %2249 = add i64 %2247, %2248
  %2250 = icmp eq i64 %2249, 2
  %2251 = zext i1 %2250 to i8
  %2252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2251, i8* %2252, align 1
  store %struct.Memory* %loadMem_4add27, %struct.Memory** %MEMORY
  %loadMem_4add2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2254 = getelementptr inbounds %struct.GPR, %struct.GPR* %2253, i32 0, i32 33
  %2255 = getelementptr inbounds %struct.Reg, %struct.Reg* %2254, i32 0, i32 0
  %PC.i1398 = bitcast %union.anon* %2255 to i64*
  %2256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2257 = getelementptr inbounds %struct.GPR, %struct.GPR* %2256, i32 0, i32 5
  %2258 = getelementptr inbounds %struct.Reg, %struct.Reg* %2257, i32 0, i32 0
  %RCX.i1399 = bitcast %union.anon* %2258 to i64*
  %2259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2260 = getelementptr inbounds %struct.GPR, %struct.GPR* %2259, i32 0, i32 15
  %2261 = getelementptr inbounds %struct.Reg, %struct.Reg* %2260, i32 0, i32 0
  %RBP.i1400 = bitcast %union.anon* %2261 to i64*
  %2262 = load i64, i64* %RBP.i1400
  %2263 = sub i64 %2262, 16
  %2264 = load i64, i64* %PC.i1398
  %2265 = add i64 %2264, 4
  store i64 %2265, i64* %PC.i1398
  %2266 = inttoptr i64 %2263 to i32*
  %2267 = load i32, i32* %2266
  %2268 = sext i32 %2267 to i64
  store i64 %2268, i64* %RCX.i1399, align 8
  store %struct.Memory* %loadMem_4add2a, %struct.Memory** %MEMORY
  %loadMem_4add2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2270 = getelementptr inbounds %struct.GPR, %struct.GPR* %2269, i32 0, i32 33
  %2271 = getelementptr inbounds %struct.Reg, %struct.Reg* %2270, i32 0, i32 0
  %PC.i1395 = bitcast %union.anon* %2271 to i64*
  %2272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2273 = getelementptr inbounds %struct.GPR, %struct.GPR* %2272, i32 0, i32 1
  %2274 = getelementptr inbounds %struct.Reg, %struct.Reg* %2273, i32 0, i32 0
  %RAX.i1396 = bitcast %union.anon* %2274 to i64*
  %2275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2276 = getelementptr inbounds %struct.GPR, %struct.GPR* %2275, i32 0, i32 5
  %2277 = getelementptr inbounds %struct.Reg, %struct.Reg* %2276, i32 0, i32 0
  %RCX.i1397 = bitcast %union.anon* %2277 to i64*
  %2278 = load i64, i64* %RAX.i1396
  %2279 = load i64, i64* %RCX.i1397
  %2280 = mul i64 %2279, 4
  %2281 = add i64 %2280, %2278
  %2282 = load i64, i64* %PC.i1395
  %2283 = add i64 %2282, 7
  store i64 %2283, i64* %PC.i1395
  %2284 = inttoptr i64 %2281 to i32*
  store i32 0, i32* %2284
  store %struct.Memory* %loadMem_4add2e, %struct.Memory** %MEMORY
  %loadMem_4add35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2286 = getelementptr inbounds %struct.GPR, %struct.GPR* %2285, i32 0, i32 33
  %2287 = getelementptr inbounds %struct.Reg, %struct.Reg* %2286, i32 0, i32 0
  %PC.i1392 = bitcast %union.anon* %2287 to i64*
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2289 = getelementptr inbounds %struct.GPR, %struct.GPR* %2288, i32 0, i32 1
  %2290 = getelementptr inbounds %struct.Reg, %struct.Reg* %2289, i32 0, i32 0
  %RAX.i1393 = bitcast %union.anon* %2290 to i64*
  %2291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2292 = getelementptr inbounds %struct.GPR, %struct.GPR* %2291, i32 0, i32 15
  %2293 = getelementptr inbounds %struct.Reg, %struct.Reg* %2292, i32 0, i32 0
  %RBP.i1394 = bitcast %union.anon* %2293 to i64*
  %2294 = load i64, i64* %RBP.i1394
  %2295 = sub i64 %2294, 16
  %2296 = load i64, i64* %PC.i1392
  %2297 = add i64 %2296, 3
  store i64 %2297, i64* %PC.i1392
  %2298 = inttoptr i64 %2295 to i32*
  %2299 = load i32, i32* %2298
  %2300 = zext i32 %2299 to i64
  store i64 %2300, i64* %RAX.i1393, align 8
  store %struct.Memory* %loadMem_4add35, %struct.Memory** %MEMORY
  %loadMem_4add38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2302 = getelementptr inbounds %struct.GPR, %struct.GPR* %2301, i32 0, i32 33
  %2303 = getelementptr inbounds %struct.Reg, %struct.Reg* %2302, i32 0, i32 0
  %PC.i1390 = bitcast %union.anon* %2303 to i64*
  %2304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2305 = getelementptr inbounds %struct.GPR, %struct.GPR* %2304, i32 0, i32 1
  %2306 = getelementptr inbounds %struct.Reg, %struct.Reg* %2305, i32 0, i32 0
  %RAX.i1391 = bitcast %union.anon* %2306 to i64*
  %2307 = load i64, i64* %RAX.i1391
  %2308 = load i64, i64* %PC.i1390
  %2309 = add i64 %2308, 3
  store i64 %2309, i64* %PC.i1390
  %2310 = trunc i64 %2307 to i32
  %2311 = add i32 1, %2310
  %2312 = zext i32 %2311 to i64
  store i64 %2312, i64* %RAX.i1391, align 8
  %2313 = icmp ult i32 %2311, %2310
  %2314 = icmp ult i32 %2311, 1
  %2315 = or i1 %2313, %2314
  %2316 = zext i1 %2315 to i8
  %2317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2316, i8* %2317, align 1
  %2318 = and i32 %2311, 255
  %2319 = call i32 @llvm.ctpop.i32(i32 %2318)
  %2320 = trunc i32 %2319 to i8
  %2321 = and i8 %2320, 1
  %2322 = xor i8 %2321, 1
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2322, i8* %2323, align 1
  %2324 = xor i64 1, %2307
  %2325 = trunc i64 %2324 to i32
  %2326 = xor i32 %2325, %2311
  %2327 = lshr i32 %2326, 4
  %2328 = trunc i32 %2327 to i8
  %2329 = and i8 %2328, 1
  %2330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2329, i8* %2330, align 1
  %2331 = icmp eq i32 %2311, 0
  %2332 = zext i1 %2331 to i8
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2332, i8* %2333, align 1
  %2334 = lshr i32 %2311, 31
  %2335 = trunc i32 %2334 to i8
  %2336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2335, i8* %2336, align 1
  %2337 = lshr i32 %2310, 31
  %2338 = xor i32 %2334, %2337
  %2339 = add i32 %2338, %2334
  %2340 = icmp eq i32 %2339, 2
  %2341 = zext i1 %2340 to i8
  %2342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2341, i8* %2342, align 1
  store %struct.Memory* %loadMem_4add38, %struct.Memory** %MEMORY
  %loadMem_4add3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2344 = getelementptr inbounds %struct.GPR, %struct.GPR* %2343, i32 0, i32 33
  %2345 = getelementptr inbounds %struct.Reg, %struct.Reg* %2344, i32 0, i32 0
  %PC.i1387 = bitcast %union.anon* %2345 to i64*
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2347 = getelementptr inbounds %struct.GPR, %struct.GPR* %2346, i32 0, i32 1
  %2348 = getelementptr inbounds %struct.Reg, %struct.Reg* %2347, i32 0, i32 0
  %EAX.i1388 = bitcast %union.anon* %2348 to i32*
  %2349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2350 = getelementptr inbounds %struct.GPR, %struct.GPR* %2349, i32 0, i32 15
  %2351 = getelementptr inbounds %struct.Reg, %struct.Reg* %2350, i32 0, i32 0
  %RBP.i1389 = bitcast %union.anon* %2351 to i64*
  %2352 = load i64, i64* %RBP.i1389
  %2353 = sub i64 %2352, 16
  %2354 = load i32, i32* %EAX.i1388
  %2355 = zext i32 %2354 to i64
  %2356 = load i64, i64* %PC.i1387
  %2357 = add i64 %2356, 3
  store i64 %2357, i64* %PC.i1387
  %2358 = inttoptr i64 %2353 to i32*
  store i32 %2354, i32* %2358
  store %struct.Memory* %loadMem_4add3b, %struct.Memory** %MEMORY
  %loadMem_4add3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2360 = getelementptr inbounds %struct.GPR, %struct.GPR* %2359, i32 0, i32 33
  %2361 = getelementptr inbounds %struct.Reg, %struct.Reg* %2360, i32 0, i32 0
  %PC.i1386 = bitcast %union.anon* %2361 to i64*
  %2362 = load i64, i64* %PC.i1386
  %2363 = add i64 %2362, -189
  %2364 = load i64, i64* %PC.i1386
  %2365 = add i64 %2364, 5
  store i64 %2365, i64* %PC.i1386
  %2366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2363, i64* %2366, align 8
  store %struct.Memory* %loadMem_4add3e, %struct.Memory** %MEMORY
  br label %block_.L_4adc81

block_.L_4add43:                                  ; preds = %block_.L_4adc81
  %loadMem_4add43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2368 = getelementptr inbounds %struct.GPR, %struct.GPR* %2367, i32 0, i32 33
  %2369 = getelementptr inbounds %struct.Reg, %struct.Reg* %2368, i32 0, i32 0
  %PC.i1385 = bitcast %union.anon* %2369 to i64*
  %2370 = load i64, i64* %PC.i1385
  %2371 = add i64 %2370, 5
  %2372 = load i64, i64* %PC.i1385
  %2373 = add i64 %2372, 5
  store i64 %2373, i64* %PC.i1385
  %2374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2371, i64* %2374, align 8
  store %struct.Memory* %loadMem_4add43, %struct.Memory** %MEMORY
  br label %block_.L_4add48

block_.L_4add48:                                  ; preds = %block_.L_4add43
  %loadMem_4add48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2376 = getelementptr inbounds %struct.GPR, %struct.GPR* %2375, i32 0, i32 33
  %2377 = getelementptr inbounds %struct.Reg, %struct.Reg* %2376, i32 0, i32 0
  %PC.i1382 = bitcast %union.anon* %2377 to i64*
  %2378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2379 = getelementptr inbounds %struct.GPR, %struct.GPR* %2378, i32 0, i32 1
  %2380 = getelementptr inbounds %struct.Reg, %struct.Reg* %2379, i32 0, i32 0
  %RAX.i1383 = bitcast %union.anon* %2380 to i64*
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2382 = getelementptr inbounds %struct.GPR, %struct.GPR* %2381, i32 0, i32 15
  %2383 = getelementptr inbounds %struct.Reg, %struct.Reg* %2382, i32 0, i32 0
  %RBP.i1384 = bitcast %union.anon* %2383 to i64*
  %2384 = load i64, i64* %RBP.i1384
  %2385 = sub i64 %2384, 12
  %2386 = load i64, i64* %PC.i1382
  %2387 = add i64 %2386, 3
  store i64 %2387, i64* %PC.i1382
  %2388 = inttoptr i64 %2385 to i32*
  %2389 = load i32, i32* %2388
  %2390 = zext i32 %2389 to i64
  store i64 %2390, i64* %RAX.i1383, align 8
  store %struct.Memory* %loadMem_4add48, %struct.Memory** %MEMORY
  %loadMem_4add4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2392 = getelementptr inbounds %struct.GPR, %struct.GPR* %2391, i32 0, i32 33
  %2393 = getelementptr inbounds %struct.Reg, %struct.Reg* %2392, i32 0, i32 0
  %PC.i1380 = bitcast %union.anon* %2393 to i64*
  %2394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2395 = getelementptr inbounds %struct.GPR, %struct.GPR* %2394, i32 0, i32 1
  %2396 = getelementptr inbounds %struct.Reg, %struct.Reg* %2395, i32 0, i32 0
  %RAX.i1381 = bitcast %union.anon* %2396 to i64*
  %2397 = load i64, i64* %RAX.i1381
  %2398 = load i64, i64* %PC.i1380
  %2399 = add i64 %2398, 3
  store i64 %2399, i64* %PC.i1380
  %2400 = trunc i64 %2397 to i32
  %2401 = add i32 1, %2400
  %2402 = zext i32 %2401 to i64
  store i64 %2402, i64* %RAX.i1381, align 8
  %2403 = icmp ult i32 %2401, %2400
  %2404 = icmp ult i32 %2401, 1
  %2405 = or i1 %2403, %2404
  %2406 = zext i1 %2405 to i8
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2406, i8* %2407, align 1
  %2408 = and i32 %2401, 255
  %2409 = call i32 @llvm.ctpop.i32(i32 %2408)
  %2410 = trunc i32 %2409 to i8
  %2411 = and i8 %2410, 1
  %2412 = xor i8 %2411, 1
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2412, i8* %2413, align 1
  %2414 = xor i64 1, %2397
  %2415 = trunc i64 %2414 to i32
  %2416 = xor i32 %2415, %2401
  %2417 = lshr i32 %2416, 4
  %2418 = trunc i32 %2417 to i8
  %2419 = and i8 %2418, 1
  %2420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2419, i8* %2420, align 1
  %2421 = icmp eq i32 %2401, 0
  %2422 = zext i1 %2421 to i8
  %2423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2422, i8* %2423, align 1
  %2424 = lshr i32 %2401, 31
  %2425 = trunc i32 %2424 to i8
  %2426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2425, i8* %2426, align 1
  %2427 = lshr i32 %2400, 31
  %2428 = xor i32 %2424, %2427
  %2429 = add i32 %2428, %2424
  %2430 = icmp eq i32 %2429, 2
  %2431 = zext i1 %2430 to i8
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2431, i8* %2432, align 1
  store %struct.Memory* %loadMem_4add4b, %struct.Memory** %MEMORY
  %loadMem_4add4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2434 = getelementptr inbounds %struct.GPR, %struct.GPR* %2433, i32 0, i32 33
  %2435 = getelementptr inbounds %struct.Reg, %struct.Reg* %2434, i32 0, i32 0
  %PC.i1377 = bitcast %union.anon* %2435 to i64*
  %2436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2437 = getelementptr inbounds %struct.GPR, %struct.GPR* %2436, i32 0, i32 1
  %2438 = getelementptr inbounds %struct.Reg, %struct.Reg* %2437, i32 0, i32 0
  %EAX.i1378 = bitcast %union.anon* %2438 to i32*
  %2439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2440 = getelementptr inbounds %struct.GPR, %struct.GPR* %2439, i32 0, i32 15
  %2441 = getelementptr inbounds %struct.Reg, %struct.Reg* %2440, i32 0, i32 0
  %RBP.i1379 = bitcast %union.anon* %2441 to i64*
  %2442 = load i64, i64* %RBP.i1379
  %2443 = sub i64 %2442, 12
  %2444 = load i32, i32* %EAX.i1378
  %2445 = zext i32 %2444 to i64
  %2446 = load i64, i64* %PC.i1377
  %2447 = add i64 %2446, 3
  store i64 %2447, i64* %PC.i1377
  %2448 = inttoptr i64 %2443 to i32*
  store i32 %2444, i32* %2448
  store %struct.Memory* %loadMem_4add4e, %struct.Memory** %MEMORY
  %loadMem_4add51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2450 = getelementptr inbounds %struct.GPR, %struct.GPR* %2449, i32 0, i32 33
  %2451 = getelementptr inbounds %struct.Reg, %struct.Reg* %2450, i32 0, i32 0
  %PC.i1376 = bitcast %union.anon* %2451 to i64*
  %2452 = load i64, i64* %PC.i1376
  %2453 = add i64 %2452, -235
  %2454 = load i64, i64* %PC.i1376
  %2455 = add i64 %2454, 5
  store i64 %2455, i64* %PC.i1376
  %2456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2453, i64* %2456, align 8
  store %struct.Memory* %loadMem_4add51, %struct.Memory** %MEMORY
  br label %block_.L_4adc66

block_.L_4add56:                                  ; preds = %block_.L_4adc66
  %loadMem_4add56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2458 = getelementptr inbounds %struct.GPR, %struct.GPR* %2457, i32 0, i32 33
  %2459 = getelementptr inbounds %struct.Reg, %struct.Reg* %2458, i32 0, i32 0
  %PC.i1375 = bitcast %union.anon* %2459 to i64*
  %2460 = load i64, i64* %PC.i1375
  %2461 = add i64 %2460, 5
  %2462 = load i64, i64* %PC.i1375
  %2463 = add i64 %2462, 5
  store i64 %2463, i64* %PC.i1375
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2461, i64* %2464, align 8
  store %struct.Memory* %loadMem_4add56, %struct.Memory** %MEMORY
  br label %block_.L_4add5b

block_.L_4add5b:                                  ; preds = %block_.L_4add56
  %loadMem_4add5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2466 = getelementptr inbounds %struct.GPR, %struct.GPR* %2465, i32 0, i32 33
  %2467 = getelementptr inbounds %struct.Reg, %struct.Reg* %2466, i32 0, i32 0
  %PC.i1372 = bitcast %union.anon* %2467 to i64*
  %2468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2469 = getelementptr inbounds %struct.GPR, %struct.GPR* %2468, i32 0, i32 1
  %2470 = getelementptr inbounds %struct.Reg, %struct.Reg* %2469, i32 0, i32 0
  %RAX.i1373 = bitcast %union.anon* %2470 to i64*
  %2471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2472 = getelementptr inbounds %struct.GPR, %struct.GPR* %2471, i32 0, i32 15
  %2473 = getelementptr inbounds %struct.Reg, %struct.Reg* %2472, i32 0, i32 0
  %RBP.i1374 = bitcast %union.anon* %2473 to i64*
  %2474 = load i64, i64* %RBP.i1374
  %2475 = sub i64 %2474, 8
  %2476 = load i64, i64* %PC.i1372
  %2477 = add i64 %2476, 3
  store i64 %2477, i64* %PC.i1372
  %2478 = inttoptr i64 %2475 to i32*
  %2479 = load i32, i32* %2478
  %2480 = zext i32 %2479 to i64
  store i64 %2480, i64* %RAX.i1373, align 8
  store %struct.Memory* %loadMem_4add5b, %struct.Memory** %MEMORY
  %loadMem_4add5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2482 = getelementptr inbounds %struct.GPR, %struct.GPR* %2481, i32 0, i32 33
  %2483 = getelementptr inbounds %struct.Reg, %struct.Reg* %2482, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %2483 to i64*
  %2484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2485 = getelementptr inbounds %struct.GPR, %struct.GPR* %2484, i32 0, i32 1
  %2486 = getelementptr inbounds %struct.Reg, %struct.Reg* %2485, i32 0, i32 0
  %RAX.i1371 = bitcast %union.anon* %2486 to i64*
  %2487 = load i64, i64* %RAX.i1371
  %2488 = load i64, i64* %PC.i1370
  %2489 = add i64 %2488, 3
  store i64 %2489, i64* %PC.i1370
  %2490 = trunc i64 %2487 to i32
  %2491 = add i32 1, %2490
  %2492 = zext i32 %2491 to i64
  store i64 %2492, i64* %RAX.i1371, align 8
  %2493 = icmp ult i32 %2491, %2490
  %2494 = icmp ult i32 %2491, 1
  %2495 = or i1 %2493, %2494
  %2496 = zext i1 %2495 to i8
  %2497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2496, i8* %2497, align 1
  %2498 = and i32 %2491, 255
  %2499 = call i32 @llvm.ctpop.i32(i32 %2498)
  %2500 = trunc i32 %2499 to i8
  %2501 = and i8 %2500, 1
  %2502 = xor i8 %2501, 1
  %2503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2502, i8* %2503, align 1
  %2504 = xor i64 1, %2487
  %2505 = trunc i64 %2504 to i32
  %2506 = xor i32 %2505, %2491
  %2507 = lshr i32 %2506, 4
  %2508 = trunc i32 %2507 to i8
  %2509 = and i8 %2508, 1
  %2510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2509, i8* %2510, align 1
  %2511 = icmp eq i32 %2491, 0
  %2512 = zext i1 %2511 to i8
  %2513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2512, i8* %2513, align 1
  %2514 = lshr i32 %2491, 31
  %2515 = trunc i32 %2514 to i8
  %2516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2515, i8* %2516, align 1
  %2517 = lshr i32 %2490, 31
  %2518 = xor i32 %2514, %2517
  %2519 = add i32 %2518, %2514
  %2520 = icmp eq i32 %2519, 2
  %2521 = zext i1 %2520 to i8
  %2522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2521, i8* %2522, align 1
  store %struct.Memory* %loadMem_4add5e, %struct.Memory** %MEMORY
  %loadMem_4add61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2524 = getelementptr inbounds %struct.GPR, %struct.GPR* %2523, i32 0, i32 33
  %2525 = getelementptr inbounds %struct.Reg, %struct.Reg* %2524, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %2525 to i64*
  %2526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2527 = getelementptr inbounds %struct.GPR, %struct.GPR* %2526, i32 0, i32 1
  %2528 = getelementptr inbounds %struct.Reg, %struct.Reg* %2527, i32 0, i32 0
  %EAX.i1368 = bitcast %union.anon* %2528 to i32*
  %2529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2530 = getelementptr inbounds %struct.GPR, %struct.GPR* %2529, i32 0, i32 15
  %2531 = getelementptr inbounds %struct.Reg, %struct.Reg* %2530, i32 0, i32 0
  %RBP.i1369 = bitcast %union.anon* %2531 to i64*
  %2532 = load i64, i64* %RBP.i1369
  %2533 = sub i64 %2532, 8
  %2534 = load i32, i32* %EAX.i1368
  %2535 = zext i32 %2534 to i64
  %2536 = load i64, i64* %PC.i1367
  %2537 = add i64 %2536, 3
  store i64 %2537, i64* %PC.i1367
  %2538 = inttoptr i64 %2533 to i32*
  store i32 %2534, i32* %2538
  store %struct.Memory* %loadMem_4add61, %struct.Memory** %MEMORY
  %loadMem_4add64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2540 = getelementptr inbounds %struct.GPR, %struct.GPR* %2539, i32 0, i32 33
  %2541 = getelementptr inbounds %struct.Reg, %struct.Reg* %2540, i32 0, i32 0
  %PC.i1366 = bitcast %union.anon* %2541 to i64*
  %2542 = load i64, i64* %PC.i1366
  %2543 = add i64 %2542, -281
  %2544 = load i64, i64* %PC.i1366
  %2545 = add i64 %2544, 5
  store i64 %2545, i64* %PC.i1366
  %2546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2543, i64* %2546, align 8
  store %struct.Memory* %loadMem_4add64, %struct.Memory** %MEMORY
  br label %block_.L_4adc4b

block_.L_4add69:                                  ; preds = %block_.L_4adc4b
  %loadMem_4add69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2548 = getelementptr inbounds %struct.GPR, %struct.GPR* %2547, i32 0, i32 33
  %2549 = getelementptr inbounds %struct.Reg, %struct.Reg* %2548, i32 0, i32 0
  %PC.i1364 = bitcast %union.anon* %2549 to i64*
  %2550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2551 = getelementptr inbounds %struct.GPR, %struct.GPR* %2550, i32 0, i32 15
  %2552 = getelementptr inbounds %struct.Reg, %struct.Reg* %2551, i32 0, i32 0
  %RBP.i1365 = bitcast %union.anon* %2552 to i64*
  %2553 = load i64, i64* %RBP.i1365
  %2554 = sub i64 %2553, 8
  %2555 = load i64, i64* %PC.i1364
  %2556 = add i64 %2555, 7
  store i64 %2556, i64* %PC.i1364
  %2557 = inttoptr i64 %2554 to i32*
  store i32 0, i32* %2557
  store %struct.Memory* %loadMem_4add69, %struct.Memory** %MEMORY
  br label %block_.L_4add70

block_.L_4add70:                                  ; preds = %block_.L_4addd7, %block_.L_4add69
  %loadMem_4add70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2559 = getelementptr inbounds %struct.GPR, %struct.GPR* %2558, i32 0, i32 33
  %2560 = getelementptr inbounds %struct.Reg, %struct.Reg* %2559, i32 0, i32 0
  %PC.i1361 = bitcast %union.anon* %2560 to i64*
  %2561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2562 = getelementptr inbounds %struct.GPR, %struct.GPR* %2561, i32 0, i32 1
  %2563 = getelementptr inbounds %struct.Reg, %struct.Reg* %2562, i32 0, i32 0
  %RAX.i1362 = bitcast %union.anon* %2563 to i64*
  %2564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2565 = getelementptr inbounds %struct.GPR, %struct.GPR* %2564, i32 0, i32 15
  %2566 = getelementptr inbounds %struct.Reg, %struct.Reg* %2565, i32 0, i32 0
  %RBP.i1363 = bitcast %union.anon* %2566 to i64*
  %2567 = load i64, i64* %RBP.i1363
  %2568 = sub i64 %2567, 8
  %2569 = load i64, i64* %PC.i1361
  %2570 = add i64 %2569, 3
  store i64 %2570, i64* %PC.i1361
  %2571 = inttoptr i64 %2568 to i32*
  %2572 = load i32, i32* %2571
  %2573 = zext i32 %2572 to i64
  store i64 %2573, i64* %RAX.i1362, align 8
  store %struct.Memory* %loadMem_4add70, %struct.Memory** %MEMORY
  %loadMem_4add73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2575 = getelementptr inbounds %struct.GPR, %struct.GPR* %2574, i32 0, i32 33
  %2576 = getelementptr inbounds %struct.Reg, %struct.Reg* %2575, i32 0, i32 0
  %PC.i1359 = bitcast %union.anon* %2576 to i64*
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2578 = getelementptr inbounds %struct.GPR, %struct.GPR* %2577, i32 0, i32 5
  %2579 = getelementptr inbounds %struct.Reg, %struct.Reg* %2578, i32 0, i32 0
  %RCX.i1360 = bitcast %union.anon* %2579 to i64*
  %2580 = load i64, i64* %PC.i1359
  %2581 = add i64 %2580, 8
  store i64 %2581, i64* %PC.i1359
  %2582 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2582, i64* %RCX.i1360, align 8
  store %struct.Memory* %loadMem_4add73, %struct.Memory** %MEMORY
  %loadMem_4add7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2584 = getelementptr inbounds %struct.GPR, %struct.GPR* %2583, i32 0, i32 33
  %2585 = getelementptr inbounds %struct.Reg, %struct.Reg* %2584, i32 0, i32 0
  %PC.i1356 = bitcast %union.anon* %2585 to i64*
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2587 = getelementptr inbounds %struct.GPR, %struct.GPR* %2586, i32 0, i32 1
  %2588 = getelementptr inbounds %struct.Reg, %struct.Reg* %2587, i32 0, i32 0
  %EAX.i1357 = bitcast %union.anon* %2588 to i32*
  %2589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2590 = getelementptr inbounds %struct.GPR, %struct.GPR* %2589, i32 0, i32 5
  %2591 = getelementptr inbounds %struct.Reg, %struct.Reg* %2590, i32 0, i32 0
  %RCX.i1358 = bitcast %union.anon* %2591 to i64*
  %2592 = load i32, i32* %EAX.i1357
  %2593 = zext i32 %2592 to i64
  %2594 = load i64, i64* %RCX.i1358
  %2595 = add i64 %2594, 60
  %2596 = load i64, i64* %PC.i1356
  %2597 = add i64 %2596, 3
  store i64 %2597, i64* %PC.i1356
  %2598 = inttoptr i64 %2595 to i32*
  %2599 = load i32, i32* %2598
  %2600 = sub i32 %2592, %2599
  %2601 = icmp ult i32 %2592, %2599
  %2602 = zext i1 %2601 to i8
  %2603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2602, i8* %2603, align 1
  %2604 = and i32 %2600, 255
  %2605 = call i32 @llvm.ctpop.i32(i32 %2604)
  %2606 = trunc i32 %2605 to i8
  %2607 = and i8 %2606, 1
  %2608 = xor i8 %2607, 1
  %2609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2608, i8* %2609, align 1
  %2610 = xor i32 %2599, %2592
  %2611 = xor i32 %2610, %2600
  %2612 = lshr i32 %2611, 4
  %2613 = trunc i32 %2612 to i8
  %2614 = and i8 %2613, 1
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2614, i8* %2615, align 1
  %2616 = icmp eq i32 %2600, 0
  %2617 = zext i1 %2616 to i8
  %2618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2617, i8* %2618, align 1
  %2619 = lshr i32 %2600, 31
  %2620 = trunc i32 %2619 to i8
  %2621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2620, i8* %2621, align 1
  %2622 = lshr i32 %2592, 31
  %2623 = lshr i32 %2599, 31
  %2624 = xor i32 %2623, %2622
  %2625 = xor i32 %2619, %2622
  %2626 = add i32 %2625, %2624
  %2627 = icmp eq i32 %2626, 2
  %2628 = zext i1 %2627 to i8
  %2629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2628, i8* %2629, align 1
  store %struct.Memory* %loadMem_4add7b, %struct.Memory** %MEMORY
  %loadMem_4add7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2631 = getelementptr inbounds %struct.GPR, %struct.GPR* %2630, i32 0, i32 33
  %2632 = getelementptr inbounds %struct.Reg, %struct.Reg* %2631, i32 0, i32 0
  %PC.i1355 = bitcast %union.anon* %2632 to i64*
  %2633 = load i64, i64* %PC.i1355
  %2634 = add i64 %2633, 103
  %2635 = load i64, i64* %PC.i1355
  %2636 = add i64 %2635, 6
  %2637 = load i64, i64* %PC.i1355
  %2638 = add i64 %2637, 6
  store i64 %2638, i64* %PC.i1355
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2640 = load i8, i8* %2639, align 1
  %2641 = icmp ne i8 %2640, 0
  %2642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2643 = load i8, i8* %2642, align 1
  %2644 = icmp ne i8 %2643, 0
  %2645 = xor i1 %2641, %2644
  %2646 = xor i1 %2645, true
  %2647 = zext i1 %2646 to i8
  store i8 %2647, i8* %BRANCH_TAKEN, align 1
  %2648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2649 = select i1 %2645, i64 %2636, i64 %2634
  store i64 %2649, i64* %2648, align 8
  store %struct.Memory* %loadMem_4add7e, %struct.Memory** %MEMORY
  %loadBr_4add7e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4add7e = icmp eq i8 %loadBr_4add7e, 1
  br i1 %cmpBr_4add7e, label %block_.L_4adde5, label %block_4add84

block_4add84:                                     ; preds = %block_.L_4add70
  %loadMem_4add84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2651 = getelementptr inbounds %struct.GPR, %struct.GPR* %2650, i32 0, i32 33
  %2652 = getelementptr inbounds %struct.Reg, %struct.Reg* %2651, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %2652 to i64*
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2654 = getelementptr inbounds %struct.GPR, %struct.GPR* %2653, i32 0, i32 15
  %2655 = getelementptr inbounds %struct.Reg, %struct.Reg* %2654, i32 0, i32 0
  %RBP.i1354 = bitcast %union.anon* %2655 to i64*
  %2656 = load i64, i64* %RBP.i1354
  %2657 = sub i64 %2656, 12
  %2658 = load i64, i64* %PC.i1353
  %2659 = add i64 %2658, 7
  store i64 %2659, i64* %PC.i1353
  %2660 = inttoptr i64 %2657 to i32*
  store i32 0, i32* %2660
  store %struct.Memory* %loadMem_4add84, %struct.Memory** %MEMORY
  br label %block_.L_4add8b

block_.L_4add8b:                                  ; preds = %block_4add9f, %block_4add84
  %loadMem_4add8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2662 = getelementptr inbounds %struct.GPR, %struct.GPR* %2661, i32 0, i32 33
  %2663 = getelementptr inbounds %struct.Reg, %struct.Reg* %2662, i32 0, i32 0
  %PC.i1350 = bitcast %union.anon* %2663 to i64*
  %2664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2665 = getelementptr inbounds %struct.GPR, %struct.GPR* %2664, i32 0, i32 1
  %2666 = getelementptr inbounds %struct.Reg, %struct.Reg* %2665, i32 0, i32 0
  %RAX.i1351 = bitcast %union.anon* %2666 to i64*
  %2667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2668 = getelementptr inbounds %struct.GPR, %struct.GPR* %2667, i32 0, i32 15
  %2669 = getelementptr inbounds %struct.Reg, %struct.Reg* %2668, i32 0, i32 0
  %RBP.i1352 = bitcast %union.anon* %2669 to i64*
  %2670 = load i64, i64* %RBP.i1352
  %2671 = sub i64 %2670, 12
  %2672 = load i64, i64* %PC.i1350
  %2673 = add i64 %2672, 3
  store i64 %2673, i64* %PC.i1350
  %2674 = inttoptr i64 %2671 to i32*
  %2675 = load i32, i32* %2674
  %2676 = zext i32 %2675 to i64
  store i64 %2676, i64* %RAX.i1351, align 8
  store %struct.Memory* %loadMem_4add8b, %struct.Memory** %MEMORY
  %loadMem_4add8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2678 = getelementptr inbounds %struct.GPR, %struct.GPR* %2677, i32 0, i32 33
  %2679 = getelementptr inbounds %struct.Reg, %struct.Reg* %2678, i32 0, i32 0
  %PC.i1348 = bitcast %union.anon* %2679 to i64*
  %2680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2681 = getelementptr inbounds %struct.GPR, %struct.GPR* %2680, i32 0, i32 5
  %2682 = getelementptr inbounds %struct.Reg, %struct.Reg* %2681, i32 0, i32 0
  %RCX.i1349 = bitcast %union.anon* %2682 to i64*
  %2683 = load i64, i64* %PC.i1348
  %2684 = add i64 %2683, 8
  store i64 %2684, i64* %PC.i1348
  %2685 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2685, i64* %RCX.i1349, align 8
  store %struct.Memory* %loadMem_4add8e, %struct.Memory** %MEMORY
  %loadMem_4add96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2687 = getelementptr inbounds %struct.GPR, %struct.GPR* %2686, i32 0, i32 33
  %2688 = getelementptr inbounds %struct.Reg, %struct.Reg* %2687, i32 0, i32 0
  %PC.i1345 = bitcast %union.anon* %2688 to i64*
  %2689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2690 = getelementptr inbounds %struct.GPR, %struct.GPR* %2689, i32 0, i32 1
  %2691 = getelementptr inbounds %struct.Reg, %struct.Reg* %2690, i32 0, i32 0
  %EAX.i1346 = bitcast %union.anon* %2691 to i32*
  %2692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2693 = getelementptr inbounds %struct.GPR, %struct.GPR* %2692, i32 0, i32 5
  %2694 = getelementptr inbounds %struct.Reg, %struct.Reg* %2693, i32 0, i32 0
  %RCX.i1347 = bitcast %union.anon* %2694 to i64*
  %2695 = load i32, i32* %EAX.i1346
  %2696 = zext i32 %2695 to i64
  %2697 = load i64, i64* %RCX.i1347
  %2698 = add i64 %2697, 52
  %2699 = load i64, i64* %PC.i1345
  %2700 = add i64 %2699, 3
  store i64 %2700, i64* %PC.i1345
  %2701 = inttoptr i64 %2698 to i32*
  %2702 = load i32, i32* %2701
  %2703 = sub i32 %2695, %2702
  %2704 = icmp ult i32 %2695, %2702
  %2705 = zext i1 %2704 to i8
  %2706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2705, i8* %2706, align 1
  %2707 = and i32 %2703, 255
  %2708 = call i32 @llvm.ctpop.i32(i32 %2707)
  %2709 = trunc i32 %2708 to i8
  %2710 = and i8 %2709, 1
  %2711 = xor i8 %2710, 1
  %2712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2711, i8* %2712, align 1
  %2713 = xor i32 %2702, %2695
  %2714 = xor i32 %2713, %2703
  %2715 = lshr i32 %2714, 4
  %2716 = trunc i32 %2715 to i8
  %2717 = and i8 %2716, 1
  %2718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2717, i8* %2718, align 1
  %2719 = icmp eq i32 %2703, 0
  %2720 = zext i1 %2719 to i8
  %2721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2720, i8* %2721, align 1
  %2722 = lshr i32 %2703, 31
  %2723 = trunc i32 %2722 to i8
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2723, i8* %2724, align 1
  %2725 = lshr i32 %2695, 31
  %2726 = lshr i32 %2702, 31
  %2727 = xor i32 %2726, %2725
  %2728 = xor i32 %2722, %2725
  %2729 = add i32 %2728, %2727
  %2730 = icmp eq i32 %2729, 2
  %2731 = zext i1 %2730 to i8
  %2732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2731, i8* %2732, align 1
  store %struct.Memory* %loadMem_4add96, %struct.Memory** %MEMORY
  %loadMem_4add99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2734 = getelementptr inbounds %struct.GPR, %struct.GPR* %2733, i32 0, i32 33
  %2735 = getelementptr inbounds %struct.Reg, %struct.Reg* %2734, i32 0, i32 0
  %PC.i1344 = bitcast %union.anon* %2735 to i64*
  %2736 = load i64, i64* %PC.i1344
  %2737 = add i64 %2736, 57
  %2738 = load i64, i64* %PC.i1344
  %2739 = add i64 %2738, 6
  %2740 = load i64, i64* %PC.i1344
  %2741 = add i64 %2740, 6
  store i64 %2741, i64* %PC.i1344
  %2742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2743 = load i8, i8* %2742, align 1
  %2744 = icmp ne i8 %2743, 0
  %2745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2746 = load i8, i8* %2745, align 1
  %2747 = icmp ne i8 %2746, 0
  %2748 = xor i1 %2744, %2747
  %2749 = xor i1 %2748, true
  %2750 = zext i1 %2749 to i8
  store i8 %2750, i8* %BRANCH_TAKEN, align 1
  %2751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2752 = select i1 %2748, i64 %2739, i64 %2737
  store i64 %2752, i64* %2751, align 8
  store %struct.Memory* %loadMem_4add99, %struct.Memory** %MEMORY
  %loadBr_4add99 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4add99 = icmp eq i8 %loadBr_4add99, 1
  br i1 %cmpBr_4add99, label %block_.L_4addd2, label %block_4add9f

block_4add9f:                                     ; preds = %block_.L_4add8b
  %loadMem_4add9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2754 = getelementptr inbounds %struct.GPR, %struct.GPR* %2753, i32 0, i32 33
  %2755 = getelementptr inbounds %struct.Reg, %struct.Reg* %2754, i32 0, i32 0
  %PC.i1342 = bitcast %union.anon* %2755 to i64*
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2757 = getelementptr inbounds %struct.GPR, %struct.GPR* %2756, i32 0, i32 1
  %2758 = getelementptr inbounds %struct.Reg, %struct.Reg* %2757, i32 0, i32 0
  %RAX.i1343 = bitcast %union.anon* %2758 to i64*
  %2759 = load i64, i64* %PC.i1342
  %2760 = add i64 %2759, ptrtoint (%G_0x278672__rip__type* @G_0x278672__rip_ to i64)
  %2761 = load i64, i64* %PC.i1342
  %2762 = add i64 %2761, 7
  store i64 %2762, i64* %PC.i1342
  %2763 = inttoptr i64 %2760 to i64*
  %2764 = load i64, i64* %2763
  store i64 %2764, i64* %RAX.i1343, align 8
  store %struct.Memory* %loadMem_4add9f, %struct.Memory** %MEMORY
  %loadMem_4adda6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2766 = getelementptr inbounds %struct.GPR, %struct.GPR* %2765, i32 0, i32 33
  %2767 = getelementptr inbounds %struct.Reg, %struct.Reg* %2766, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %2767 to i64*
  %2768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2769 = getelementptr inbounds %struct.GPR, %struct.GPR* %2768, i32 0, i32 5
  %2770 = getelementptr inbounds %struct.Reg, %struct.Reg* %2769, i32 0, i32 0
  %RCX.i1340 = bitcast %union.anon* %2770 to i64*
  %2771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2772 = getelementptr inbounds %struct.GPR, %struct.GPR* %2771, i32 0, i32 15
  %2773 = getelementptr inbounds %struct.Reg, %struct.Reg* %2772, i32 0, i32 0
  %RBP.i1341 = bitcast %union.anon* %2773 to i64*
  %2774 = load i64, i64* %RBP.i1341
  %2775 = sub i64 %2774, 8
  %2776 = load i64, i64* %PC.i1339
  %2777 = add i64 %2776, 4
  store i64 %2777, i64* %PC.i1339
  %2778 = inttoptr i64 %2775 to i32*
  %2779 = load i32, i32* %2778
  %2780 = sext i32 %2779 to i64
  store i64 %2780, i64* %RCX.i1340, align 8
  store %struct.Memory* %loadMem_4adda6, %struct.Memory** %MEMORY
  %loadMem_4addaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %2781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2782 = getelementptr inbounds %struct.GPR, %struct.GPR* %2781, i32 0, i32 33
  %2783 = getelementptr inbounds %struct.Reg, %struct.Reg* %2782, i32 0, i32 0
  %PC.i1336 = bitcast %union.anon* %2783 to i64*
  %2784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2785 = getelementptr inbounds %struct.GPR, %struct.GPR* %2784, i32 0, i32 1
  %2786 = getelementptr inbounds %struct.Reg, %struct.Reg* %2785, i32 0, i32 0
  %RAX.i1337 = bitcast %union.anon* %2786 to i64*
  %2787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2788 = getelementptr inbounds %struct.GPR, %struct.GPR* %2787, i32 0, i32 5
  %2789 = getelementptr inbounds %struct.Reg, %struct.Reg* %2788, i32 0, i32 0
  %RCX.i1338 = bitcast %union.anon* %2789 to i64*
  %2790 = load i64, i64* %RAX.i1337
  %2791 = load i64, i64* %RCX.i1338
  %2792 = mul i64 %2791, 8
  %2793 = add i64 %2792, %2790
  %2794 = load i64, i64* %PC.i1336
  %2795 = add i64 %2794, 4
  store i64 %2795, i64* %PC.i1336
  %2796 = inttoptr i64 %2793 to i64*
  %2797 = load i64, i64* %2796
  store i64 %2797, i64* %RAX.i1337, align 8
  store %struct.Memory* %loadMem_4addaa, %struct.Memory** %MEMORY
  %loadMem_4addae = load %struct.Memory*, %struct.Memory** %MEMORY
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2799 = getelementptr inbounds %struct.GPR, %struct.GPR* %2798, i32 0, i32 33
  %2800 = getelementptr inbounds %struct.Reg, %struct.Reg* %2799, i32 0, i32 0
  %PC.i1333 = bitcast %union.anon* %2800 to i64*
  %2801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2802 = getelementptr inbounds %struct.GPR, %struct.GPR* %2801, i32 0, i32 5
  %2803 = getelementptr inbounds %struct.Reg, %struct.Reg* %2802, i32 0, i32 0
  %RCX.i1334 = bitcast %union.anon* %2803 to i64*
  %2804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2805 = getelementptr inbounds %struct.GPR, %struct.GPR* %2804, i32 0, i32 15
  %2806 = getelementptr inbounds %struct.Reg, %struct.Reg* %2805, i32 0, i32 0
  %RBP.i1335 = bitcast %union.anon* %2806 to i64*
  %2807 = load i64, i64* %RBP.i1335
  %2808 = sub i64 %2807, 12
  %2809 = load i64, i64* %PC.i1333
  %2810 = add i64 %2809, 4
  store i64 %2810, i64* %PC.i1333
  %2811 = inttoptr i64 %2808 to i32*
  %2812 = load i32, i32* %2811
  %2813 = sext i32 %2812 to i64
  store i64 %2813, i64* %RCX.i1334, align 8
  store %struct.Memory* %loadMem_4addae, %struct.Memory** %MEMORY
  %loadMem_4addb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2815 = getelementptr inbounds %struct.GPR, %struct.GPR* %2814, i32 0, i32 33
  %2816 = getelementptr inbounds %struct.Reg, %struct.Reg* %2815, i32 0, i32 0
  %PC.i1329 = bitcast %union.anon* %2816 to i64*
  %2817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2818 = getelementptr inbounds %struct.GPR, %struct.GPR* %2817, i32 0, i32 1
  %2819 = getelementptr inbounds %struct.Reg, %struct.Reg* %2818, i32 0, i32 0
  %RAX.i1330 = bitcast %union.anon* %2819 to i64*
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2821 = getelementptr inbounds %struct.GPR, %struct.GPR* %2820, i32 0, i32 5
  %2822 = getelementptr inbounds %struct.Reg, %struct.Reg* %2821, i32 0, i32 0
  %RCX.i1331 = bitcast %union.anon* %2822 to i64*
  %2823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2824 = getelementptr inbounds %struct.GPR, %struct.GPR* %2823, i32 0, i32 7
  %2825 = getelementptr inbounds %struct.Reg, %struct.Reg* %2824, i32 0, i32 0
  %RDX.i1332 = bitcast %union.anon* %2825 to i64*
  %2826 = load i64, i64* %RAX.i1330
  %2827 = load i64, i64* %RCX.i1331
  %2828 = mul i64 %2827, 2
  %2829 = add i64 %2828, %2826
  %2830 = load i64, i64* %PC.i1329
  %2831 = add i64 %2830, 4
  store i64 %2831, i64* %PC.i1329
  %2832 = inttoptr i64 %2829 to i16*
  %2833 = load i16, i16* %2832
  %2834 = zext i16 %2833 to i64
  store i64 %2834, i64* %RDX.i1332, align 8
  store %struct.Memory* %loadMem_4addb2, %struct.Memory** %MEMORY
  %loadMem_4addb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2836 = getelementptr inbounds %struct.GPR, %struct.GPR* %2835, i32 0, i32 33
  %2837 = getelementptr inbounds %struct.Reg, %struct.Reg* %2836, i32 0, i32 0
  %PC.i1326 = bitcast %union.anon* %2837 to i64*
  %2838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2839 = getelementptr inbounds %struct.GPR, %struct.GPR* %2838, i32 0, i32 7
  %2840 = getelementptr inbounds %struct.Reg, %struct.Reg* %2839, i32 0, i32 0
  %EDX.i1327 = bitcast %union.anon* %2840 to i32*
  %2841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2842 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2841, i64 0, i64 0
  %YMM0.i1328 = bitcast %union.VectorReg* %2842 to %"class.std::bitset"*
  %2843 = bitcast %"class.std::bitset"* %YMM0.i1328 to i8*
  %2844 = load i32, i32* %EDX.i1327
  %2845 = zext i32 %2844 to i64
  %2846 = load i64, i64* %PC.i1326
  %2847 = add i64 %2846, 4
  store i64 %2847, i64* %PC.i1326
  %2848 = sitofp i32 %2844 to double
  %2849 = bitcast i8* %2843 to double*
  store double %2848, double* %2849, align 1
  store %struct.Memory* %loadMem_4addb6, %struct.Memory** %MEMORY
  %loadMem_4addba = load %struct.Memory*, %struct.Memory** %MEMORY
  %2850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2851 = getelementptr inbounds %struct.GPR, %struct.GPR* %2850, i32 0, i32 33
  %2852 = getelementptr inbounds %struct.Reg, %struct.Reg* %2851, i32 0, i32 0
  %PC.i1323 = bitcast %union.anon* %2852 to i64*
  %2853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2854 = getelementptr inbounds %struct.GPR, %struct.GPR* %2853, i32 0, i32 15
  %2855 = getelementptr inbounds %struct.Reg, %struct.Reg* %2854, i32 0, i32 0
  %RBP.i1324 = bitcast %union.anon* %2855 to i64*
  %2856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2857 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2856, i64 0, i64 0
  %YMM0.i1325 = bitcast %union.VectorReg* %2857 to %"class.std::bitset"*
  %2858 = bitcast %"class.std::bitset"* %YMM0.i1325 to i8*
  %2859 = bitcast %"class.std::bitset"* %YMM0.i1325 to i8*
  %2860 = load i64, i64* %RBP.i1324
  %2861 = sub i64 %2860, 24
  %2862 = load i64, i64* %PC.i1323
  %2863 = add i64 %2862, 5
  store i64 %2863, i64* %PC.i1323
  %2864 = bitcast i8* %2859 to double*
  %2865 = load double, double* %2864, align 1
  %2866 = getelementptr inbounds i8, i8* %2859, i64 8
  %2867 = bitcast i8* %2866 to i64*
  %2868 = load i64, i64* %2867, align 1
  %2869 = inttoptr i64 %2861 to double*
  %2870 = load double, double* %2869
  %2871 = fadd double %2865, %2870
  %2872 = bitcast i8* %2858 to double*
  store double %2871, double* %2872, align 1
  %2873 = getelementptr inbounds i8, i8* %2858, i64 8
  %2874 = bitcast i8* %2873 to i64*
  store i64 %2868, i64* %2874, align 1
  store %struct.Memory* %loadMem_4addba, %struct.Memory** %MEMORY
  %loadMem_4addbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2876 = getelementptr inbounds %struct.GPR, %struct.GPR* %2875, i32 0, i32 33
  %2877 = getelementptr inbounds %struct.Reg, %struct.Reg* %2876, i32 0, i32 0
  %PC.i1320 = bitcast %union.anon* %2877 to i64*
  %2878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2879 = getelementptr inbounds %struct.GPR, %struct.GPR* %2878, i32 0, i32 15
  %2880 = getelementptr inbounds %struct.Reg, %struct.Reg* %2879, i32 0, i32 0
  %RBP.i1321 = bitcast %union.anon* %2880 to i64*
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2882 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2881, i64 0, i64 0
  %XMM0.i1322 = bitcast %union.VectorReg* %2882 to %union.vec128_t*
  %2883 = load i64, i64* %RBP.i1321
  %2884 = sub i64 %2883, 24
  %2885 = bitcast %union.vec128_t* %XMM0.i1322 to i8*
  %2886 = load i64, i64* %PC.i1320
  %2887 = add i64 %2886, 5
  store i64 %2887, i64* %PC.i1320
  %2888 = bitcast i8* %2885 to double*
  %2889 = load double, double* %2888, align 1
  %2890 = inttoptr i64 %2884 to double*
  store double %2889, double* %2890
  store %struct.Memory* %loadMem_4addbf, %struct.Memory** %MEMORY
  %loadMem_4addc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2892 = getelementptr inbounds %struct.GPR, %struct.GPR* %2891, i32 0, i32 33
  %2893 = getelementptr inbounds %struct.Reg, %struct.Reg* %2892, i32 0, i32 0
  %PC.i1317 = bitcast %union.anon* %2893 to i64*
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2895 = getelementptr inbounds %struct.GPR, %struct.GPR* %2894, i32 0, i32 1
  %2896 = getelementptr inbounds %struct.Reg, %struct.Reg* %2895, i32 0, i32 0
  %RAX.i1318 = bitcast %union.anon* %2896 to i64*
  %2897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2898 = getelementptr inbounds %struct.GPR, %struct.GPR* %2897, i32 0, i32 15
  %2899 = getelementptr inbounds %struct.Reg, %struct.Reg* %2898, i32 0, i32 0
  %RBP.i1319 = bitcast %union.anon* %2899 to i64*
  %2900 = load i64, i64* %RBP.i1319
  %2901 = sub i64 %2900, 12
  %2902 = load i64, i64* %PC.i1317
  %2903 = add i64 %2902, 3
  store i64 %2903, i64* %PC.i1317
  %2904 = inttoptr i64 %2901 to i32*
  %2905 = load i32, i32* %2904
  %2906 = zext i32 %2905 to i64
  store i64 %2906, i64* %RAX.i1318, align 8
  store %struct.Memory* %loadMem_4addc4, %struct.Memory** %MEMORY
  %loadMem_4addc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2908 = getelementptr inbounds %struct.GPR, %struct.GPR* %2907, i32 0, i32 33
  %2909 = getelementptr inbounds %struct.Reg, %struct.Reg* %2908, i32 0, i32 0
  %PC.i1315 = bitcast %union.anon* %2909 to i64*
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2911 = getelementptr inbounds %struct.GPR, %struct.GPR* %2910, i32 0, i32 1
  %2912 = getelementptr inbounds %struct.Reg, %struct.Reg* %2911, i32 0, i32 0
  %RAX.i1316 = bitcast %union.anon* %2912 to i64*
  %2913 = load i64, i64* %RAX.i1316
  %2914 = load i64, i64* %PC.i1315
  %2915 = add i64 %2914, 3
  store i64 %2915, i64* %PC.i1315
  %2916 = trunc i64 %2913 to i32
  %2917 = add i32 1, %2916
  %2918 = zext i32 %2917 to i64
  store i64 %2918, i64* %RAX.i1316, align 8
  %2919 = icmp ult i32 %2917, %2916
  %2920 = icmp ult i32 %2917, 1
  %2921 = or i1 %2919, %2920
  %2922 = zext i1 %2921 to i8
  %2923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2922, i8* %2923, align 1
  %2924 = and i32 %2917, 255
  %2925 = call i32 @llvm.ctpop.i32(i32 %2924)
  %2926 = trunc i32 %2925 to i8
  %2927 = and i8 %2926, 1
  %2928 = xor i8 %2927, 1
  %2929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2928, i8* %2929, align 1
  %2930 = xor i64 1, %2913
  %2931 = trunc i64 %2930 to i32
  %2932 = xor i32 %2931, %2917
  %2933 = lshr i32 %2932, 4
  %2934 = trunc i32 %2933 to i8
  %2935 = and i8 %2934, 1
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2935, i8* %2936, align 1
  %2937 = icmp eq i32 %2917, 0
  %2938 = zext i1 %2937 to i8
  %2939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2938, i8* %2939, align 1
  %2940 = lshr i32 %2917, 31
  %2941 = trunc i32 %2940 to i8
  %2942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2941, i8* %2942, align 1
  %2943 = lshr i32 %2916, 31
  %2944 = xor i32 %2940, %2943
  %2945 = add i32 %2944, %2940
  %2946 = icmp eq i32 %2945, 2
  %2947 = zext i1 %2946 to i8
  %2948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2947, i8* %2948, align 1
  store %struct.Memory* %loadMem_4addc7, %struct.Memory** %MEMORY
  %loadMem_4addca = load %struct.Memory*, %struct.Memory** %MEMORY
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2950 = getelementptr inbounds %struct.GPR, %struct.GPR* %2949, i32 0, i32 33
  %2951 = getelementptr inbounds %struct.Reg, %struct.Reg* %2950, i32 0, i32 0
  %PC.i1312 = bitcast %union.anon* %2951 to i64*
  %2952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2953 = getelementptr inbounds %struct.GPR, %struct.GPR* %2952, i32 0, i32 1
  %2954 = getelementptr inbounds %struct.Reg, %struct.Reg* %2953, i32 0, i32 0
  %EAX.i1313 = bitcast %union.anon* %2954 to i32*
  %2955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2956 = getelementptr inbounds %struct.GPR, %struct.GPR* %2955, i32 0, i32 15
  %2957 = getelementptr inbounds %struct.Reg, %struct.Reg* %2956, i32 0, i32 0
  %RBP.i1314 = bitcast %union.anon* %2957 to i64*
  %2958 = load i64, i64* %RBP.i1314
  %2959 = sub i64 %2958, 12
  %2960 = load i32, i32* %EAX.i1313
  %2961 = zext i32 %2960 to i64
  %2962 = load i64, i64* %PC.i1312
  %2963 = add i64 %2962, 3
  store i64 %2963, i64* %PC.i1312
  %2964 = inttoptr i64 %2959 to i32*
  store i32 %2960, i32* %2964
  store %struct.Memory* %loadMem_4addca, %struct.Memory** %MEMORY
  %loadMem_4addcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2966 = getelementptr inbounds %struct.GPR, %struct.GPR* %2965, i32 0, i32 33
  %2967 = getelementptr inbounds %struct.Reg, %struct.Reg* %2966, i32 0, i32 0
  %PC.i1311 = bitcast %union.anon* %2967 to i64*
  %2968 = load i64, i64* %PC.i1311
  %2969 = add i64 %2968, -66
  %2970 = load i64, i64* %PC.i1311
  %2971 = add i64 %2970, 5
  store i64 %2971, i64* %PC.i1311
  %2972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2969, i64* %2972, align 8
  store %struct.Memory* %loadMem_4addcd, %struct.Memory** %MEMORY
  br label %block_.L_4add8b

block_.L_4addd2:                                  ; preds = %block_.L_4add8b
  %loadMem_4addd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2974 = getelementptr inbounds %struct.GPR, %struct.GPR* %2973, i32 0, i32 33
  %2975 = getelementptr inbounds %struct.Reg, %struct.Reg* %2974, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %2975 to i64*
  %2976 = load i64, i64* %PC.i1310
  %2977 = add i64 %2976, 5
  %2978 = load i64, i64* %PC.i1310
  %2979 = add i64 %2978, 5
  store i64 %2979, i64* %PC.i1310
  %2980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2977, i64* %2980, align 8
  store %struct.Memory* %loadMem_4addd2, %struct.Memory** %MEMORY
  br label %block_.L_4addd7

block_.L_4addd7:                                  ; preds = %block_.L_4addd2
  %loadMem_4addd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2982 = getelementptr inbounds %struct.GPR, %struct.GPR* %2981, i32 0, i32 33
  %2983 = getelementptr inbounds %struct.Reg, %struct.Reg* %2982, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %2983 to i64*
  %2984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2985 = getelementptr inbounds %struct.GPR, %struct.GPR* %2984, i32 0, i32 1
  %2986 = getelementptr inbounds %struct.Reg, %struct.Reg* %2985, i32 0, i32 0
  %RAX.i1308 = bitcast %union.anon* %2986 to i64*
  %2987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2988 = getelementptr inbounds %struct.GPR, %struct.GPR* %2987, i32 0, i32 15
  %2989 = getelementptr inbounds %struct.Reg, %struct.Reg* %2988, i32 0, i32 0
  %RBP.i1309 = bitcast %union.anon* %2989 to i64*
  %2990 = load i64, i64* %RBP.i1309
  %2991 = sub i64 %2990, 8
  %2992 = load i64, i64* %PC.i1307
  %2993 = add i64 %2992, 3
  store i64 %2993, i64* %PC.i1307
  %2994 = inttoptr i64 %2991 to i32*
  %2995 = load i32, i32* %2994
  %2996 = zext i32 %2995 to i64
  store i64 %2996, i64* %RAX.i1308, align 8
  store %struct.Memory* %loadMem_4addd7, %struct.Memory** %MEMORY
  %loadMem_4addda = load %struct.Memory*, %struct.Memory** %MEMORY
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2998 = getelementptr inbounds %struct.GPR, %struct.GPR* %2997, i32 0, i32 33
  %2999 = getelementptr inbounds %struct.Reg, %struct.Reg* %2998, i32 0, i32 0
  %PC.i1305 = bitcast %union.anon* %2999 to i64*
  %3000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3001 = getelementptr inbounds %struct.GPR, %struct.GPR* %3000, i32 0, i32 1
  %3002 = getelementptr inbounds %struct.Reg, %struct.Reg* %3001, i32 0, i32 0
  %RAX.i1306 = bitcast %union.anon* %3002 to i64*
  %3003 = load i64, i64* %RAX.i1306
  %3004 = load i64, i64* %PC.i1305
  %3005 = add i64 %3004, 3
  store i64 %3005, i64* %PC.i1305
  %3006 = trunc i64 %3003 to i32
  %3007 = add i32 1, %3006
  %3008 = zext i32 %3007 to i64
  store i64 %3008, i64* %RAX.i1306, align 8
  %3009 = icmp ult i32 %3007, %3006
  %3010 = icmp ult i32 %3007, 1
  %3011 = or i1 %3009, %3010
  %3012 = zext i1 %3011 to i8
  %3013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3012, i8* %3013, align 1
  %3014 = and i32 %3007, 255
  %3015 = call i32 @llvm.ctpop.i32(i32 %3014)
  %3016 = trunc i32 %3015 to i8
  %3017 = and i8 %3016, 1
  %3018 = xor i8 %3017, 1
  %3019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3018, i8* %3019, align 1
  %3020 = xor i64 1, %3003
  %3021 = trunc i64 %3020 to i32
  %3022 = xor i32 %3021, %3007
  %3023 = lshr i32 %3022, 4
  %3024 = trunc i32 %3023 to i8
  %3025 = and i8 %3024, 1
  %3026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3025, i8* %3026, align 1
  %3027 = icmp eq i32 %3007, 0
  %3028 = zext i1 %3027 to i8
  %3029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3028, i8* %3029, align 1
  %3030 = lshr i32 %3007, 31
  %3031 = trunc i32 %3030 to i8
  %3032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3031, i8* %3032, align 1
  %3033 = lshr i32 %3006, 31
  %3034 = xor i32 %3030, %3033
  %3035 = add i32 %3034, %3030
  %3036 = icmp eq i32 %3035, 2
  %3037 = zext i1 %3036 to i8
  %3038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3037, i8* %3038, align 1
  store %struct.Memory* %loadMem_4addda, %struct.Memory** %MEMORY
  %loadMem_4adddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3040 = getelementptr inbounds %struct.GPR, %struct.GPR* %3039, i32 0, i32 33
  %3041 = getelementptr inbounds %struct.Reg, %struct.Reg* %3040, i32 0, i32 0
  %PC.i1302 = bitcast %union.anon* %3041 to i64*
  %3042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3043 = getelementptr inbounds %struct.GPR, %struct.GPR* %3042, i32 0, i32 1
  %3044 = getelementptr inbounds %struct.Reg, %struct.Reg* %3043, i32 0, i32 0
  %EAX.i1303 = bitcast %union.anon* %3044 to i32*
  %3045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3046 = getelementptr inbounds %struct.GPR, %struct.GPR* %3045, i32 0, i32 15
  %3047 = getelementptr inbounds %struct.Reg, %struct.Reg* %3046, i32 0, i32 0
  %RBP.i1304 = bitcast %union.anon* %3047 to i64*
  %3048 = load i64, i64* %RBP.i1304
  %3049 = sub i64 %3048, 8
  %3050 = load i32, i32* %EAX.i1303
  %3051 = zext i32 %3050 to i64
  %3052 = load i64, i64* %PC.i1302
  %3053 = add i64 %3052, 3
  store i64 %3053, i64* %PC.i1302
  %3054 = inttoptr i64 %3049 to i32*
  store i32 %3050, i32* %3054
  store %struct.Memory* %loadMem_4adddd, %struct.Memory** %MEMORY
  %loadMem_4adde0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3056 = getelementptr inbounds %struct.GPR, %struct.GPR* %3055, i32 0, i32 33
  %3057 = getelementptr inbounds %struct.Reg, %struct.Reg* %3056, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %3057 to i64*
  %3058 = load i64, i64* %PC.i1301
  %3059 = add i64 %3058, -112
  %3060 = load i64, i64* %PC.i1301
  %3061 = add i64 %3060, 5
  store i64 %3061, i64* %PC.i1301
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3059, i64* %3062, align 8
  store %struct.Memory* %loadMem_4adde0, %struct.Memory** %MEMORY
  br label %block_.L_4add70

block_.L_4adde5:                                  ; preds = %block_.L_4add70
  %loadMem_4adde5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3064 = getelementptr inbounds %struct.GPR, %struct.GPR* %3063, i32 0, i32 33
  %3065 = getelementptr inbounds %struct.Reg, %struct.Reg* %3064, i32 0, i32 0
  %PC.i1299 = bitcast %union.anon* %3065 to i64*
  %3066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3067 = getelementptr inbounds %struct.GPR, %struct.GPR* %3066, i32 0, i32 15
  %3068 = getelementptr inbounds %struct.Reg, %struct.Reg* %3067, i32 0, i32 0
  %RBP.i1300 = bitcast %union.anon* %3068 to i64*
  %3069 = load i64, i64* %RBP.i1300
  %3070 = sub i64 %3069, 932
  %3071 = load i64, i64* %PC.i1299
  %3072 = add i64 %3071, 10
  store i64 %3072, i64* %PC.i1299
  %3073 = inttoptr i64 %3070 to i32*
  store i32 0, i32* %3073
  store %struct.Memory* %loadMem_4adde5, %struct.Memory** %MEMORY
  br label %block_.L_4addef

block_.L_4addef:                                  ; preds = %block_.L_4ae649, %block_.L_4adde5
  %loadMem_4addef = load %struct.Memory*, %struct.Memory** %MEMORY
  %3074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3075 = getelementptr inbounds %struct.GPR, %struct.GPR* %3074, i32 0, i32 33
  %3076 = getelementptr inbounds %struct.Reg, %struct.Reg* %3075, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %3076 to i64*
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3078 = getelementptr inbounds %struct.GPR, %struct.GPR* %3077, i32 0, i32 1
  %3079 = getelementptr inbounds %struct.Reg, %struct.Reg* %3078, i32 0, i32 0
  %RAX.i1297 = bitcast %union.anon* %3079 to i64*
  %3080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3081 = getelementptr inbounds %struct.GPR, %struct.GPR* %3080, i32 0, i32 15
  %3082 = getelementptr inbounds %struct.Reg, %struct.Reg* %3081, i32 0, i32 0
  %RBP.i1298 = bitcast %union.anon* %3082 to i64*
  %3083 = load i64, i64* %RBP.i1298
  %3084 = sub i64 %3083, 932
  %3085 = load i64, i64* %PC.i1296
  %3086 = add i64 %3085, 6
  store i64 %3086, i64* %PC.i1296
  %3087 = inttoptr i64 %3084 to i32*
  %3088 = load i32, i32* %3087
  %3089 = zext i32 %3088 to i64
  store i64 %3089, i64* %RAX.i1297, align 8
  store %struct.Memory* %loadMem_4addef, %struct.Memory** %MEMORY
  %loadMem_4addf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3091 = getelementptr inbounds %struct.GPR, %struct.GPR* %3090, i32 0, i32 33
  %3092 = getelementptr inbounds %struct.Reg, %struct.Reg* %3091, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %3092 to i64*
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3094 = getelementptr inbounds %struct.GPR, %struct.GPR* %3093, i32 0, i32 5
  %3095 = getelementptr inbounds %struct.Reg, %struct.Reg* %3094, i32 0, i32 0
  %RCX.i1294 = bitcast %union.anon* %3095 to i64*
  %3096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3097 = getelementptr inbounds %struct.GPR, %struct.GPR* %3096, i32 0, i32 15
  %3098 = getelementptr inbounds %struct.Reg, %struct.Reg* %3097, i32 0, i32 0
  %RBP.i1295 = bitcast %union.anon* %3098 to i64*
  %3099 = load i64, i64* %RBP.i1295
  %3100 = sub i64 %3099, 192
  %3101 = load i64, i64* %PC.i1293
  %3102 = add i64 %3101, 6
  store i64 %3102, i64* %PC.i1293
  %3103 = inttoptr i64 %3100 to i32*
  %3104 = load i32, i32* %3103
  %3105 = zext i32 %3104 to i64
  store i64 %3105, i64* %RCX.i1294, align 8
  store %struct.Memory* %loadMem_4addf5, %struct.Memory** %MEMORY
  %loadMem_4addfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3107 = getelementptr inbounds %struct.GPR, %struct.GPR* %3106, i32 0, i32 33
  %3108 = getelementptr inbounds %struct.Reg, %struct.Reg* %3107, i32 0, i32 0
  %PC.i1291 = bitcast %union.anon* %3108 to i64*
  %3109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3110 = getelementptr inbounds %struct.GPR, %struct.GPR* %3109, i32 0, i32 5
  %3111 = getelementptr inbounds %struct.Reg, %struct.Reg* %3110, i32 0, i32 0
  %RCX.i1292 = bitcast %union.anon* %3111 to i64*
  %3112 = load i64, i64* %RCX.i1292
  %3113 = load i64, i64* %PC.i1291
  %3114 = add i64 %3113, 3
  store i64 %3114, i64* %PC.i1291
  %3115 = trunc i64 %3112 to i32
  %3116 = add i32 2, %3115
  %3117 = zext i32 %3116 to i64
  store i64 %3117, i64* %RCX.i1292, align 8
  %3118 = icmp ult i32 %3116, %3115
  %3119 = icmp ult i32 %3116, 2
  %3120 = or i1 %3118, %3119
  %3121 = zext i1 %3120 to i8
  %3122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3121, i8* %3122, align 1
  %3123 = and i32 %3116, 255
  %3124 = call i32 @llvm.ctpop.i32(i32 %3123)
  %3125 = trunc i32 %3124 to i8
  %3126 = and i8 %3125, 1
  %3127 = xor i8 %3126, 1
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3127, i8* %3128, align 1
  %3129 = xor i64 2, %3112
  %3130 = trunc i64 %3129 to i32
  %3131 = xor i32 %3130, %3116
  %3132 = lshr i32 %3131, 4
  %3133 = trunc i32 %3132 to i8
  %3134 = and i8 %3133, 1
  %3135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3134, i8* %3135, align 1
  %3136 = icmp eq i32 %3116, 0
  %3137 = zext i1 %3136 to i8
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3137, i8* %3138, align 1
  %3139 = lshr i32 %3116, 31
  %3140 = trunc i32 %3139 to i8
  %3141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3140, i8* %3141, align 1
  %3142 = lshr i32 %3115, 31
  %3143 = xor i32 %3139, %3142
  %3144 = add i32 %3143, %3139
  %3145 = icmp eq i32 %3144, 2
  %3146 = zext i1 %3145 to i8
  %3147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3146, i8* %3147, align 1
  store %struct.Memory* %loadMem_4addfb, %struct.Memory** %MEMORY
  %loadMem_4addfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3149 = getelementptr inbounds %struct.GPR, %struct.GPR* %3148, i32 0, i32 33
  %3150 = getelementptr inbounds %struct.Reg, %struct.Reg* %3149, i32 0, i32 0
  %PC.i1288 = bitcast %union.anon* %3150 to i64*
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3152 = getelementptr inbounds %struct.GPR, %struct.GPR* %3151, i32 0, i32 1
  %3153 = getelementptr inbounds %struct.Reg, %struct.Reg* %3152, i32 0, i32 0
  %EAX.i1289 = bitcast %union.anon* %3153 to i32*
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3155 = getelementptr inbounds %struct.GPR, %struct.GPR* %3154, i32 0, i32 5
  %3156 = getelementptr inbounds %struct.Reg, %struct.Reg* %3155, i32 0, i32 0
  %ECX.i1290 = bitcast %union.anon* %3156 to i32*
  %3157 = load i32, i32* %EAX.i1289
  %3158 = zext i32 %3157 to i64
  %3159 = load i32, i32* %ECX.i1290
  %3160 = zext i32 %3159 to i64
  %3161 = load i64, i64* %PC.i1288
  %3162 = add i64 %3161, 2
  store i64 %3162, i64* %PC.i1288
  %3163 = sub i32 %3157, %3159
  %3164 = icmp ult i32 %3157, %3159
  %3165 = zext i1 %3164 to i8
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3165, i8* %3166, align 1
  %3167 = and i32 %3163, 255
  %3168 = call i32 @llvm.ctpop.i32(i32 %3167)
  %3169 = trunc i32 %3168 to i8
  %3170 = and i8 %3169, 1
  %3171 = xor i8 %3170, 1
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3171, i8* %3172, align 1
  %3173 = xor i64 %3160, %3158
  %3174 = trunc i64 %3173 to i32
  %3175 = xor i32 %3174, %3163
  %3176 = lshr i32 %3175, 4
  %3177 = trunc i32 %3176 to i8
  %3178 = and i8 %3177, 1
  %3179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3178, i8* %3179, align 1
  %3180 = icmp eq i32 %3163, 0
  %3181 = zext i1 %3180 to i8
  %3182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3181, i8* %3182, align 1
  %3183 = lshr i32 %3163, 31
  %3184 = trunc i32 %3183 to i8
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3184, i8* %3185, align 1
  %3186 = lshr i32 %3157, 31
  %3187 = lshr i32 %3159, 31
  %3188 = xor i32 %3187, %3186
  %3189 = xor i32 %3183, %3186
  %3190 = add i32 %3189, %3188
  %3191 = icmp eq i32 %3190, 2
  %3192 = zext i1 %3191 to i8
  %3193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3192, i8* %3193, align 1
  store %struct.Memory* %loadMem_4addfe, %struct.Memory** %MEMORY
  %loadMem_4ade00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3195 = getelementptr inbounds %struct.GPR, %struct.GPR* %3194, i32 0, i32 33
  %3196 = getelementptr inbounds %struct.Reg, %struct.Reg* %3195, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %3196 to i64*
  %3197 = load i64, i64* %PC.i1287
  %3198 = add i64 %3197, 2141
  %3199 = load i64, i64* %PC.i1287
  %3200 = add i64 %3199, 6
  %3201 = load i64, i64* %PC.i1287
  %3202 = add i64 %3201, 6
  store i64 %3202, i64* %PC.i1287
  %3203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3204 = load i8, i8* %3203, align 1
  %3205 = icmp ne i8 %3204, 0
  %3206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3207 = load i8, i8* %3206, align 1
  %3208 = icmp ne i8 %3207, 0
  %3209 = xor i1 %3205, %3208
  %3210 = xor i1 %3209, true
  %3211 = zext i1 %3210 to i8
  store i8 %3211, i8* %BRANCH_TAKEN, align 1
  %3212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3213 = select i1 %3209, i64 %3200, i64 %3198
  store i64 %3213, i64* %3212, align 8
  store %struct.Memory* %loadMem_4ade00, %struct.Memory** %MEMORY
  %loadBr_4ade00 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ade00 = icmp eq i8 %loadBr_4ade00, 1
  br i1 %cmpBr_4ade00, label %block_.L_4ae65d, label %block_4ade06

block_4ade06:                                     ; preds = %block_.L_4addef
  %loadMem_4ade06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3215 = getelementptr inbounds %struct.GPR, %struct.GPR* %3214, i32 0, i32 33
  %3216 = getelementptr inbounds %struct.Reg, %struct.Reg* %3215, i32 0, i32 0
  %PC.i1285 = bitcast %union.anon* %3216 to i64*
  %3217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3218 = getelementptr inbounds %struct.GPR, %struct.GPR* %3217, i32 0, i32 15
  %3219 = getelementptr inbounds %struct.Reg, %struct.Reg* %3218, i32 0, i32 0
  %RBP.i1286 = bitcast %union.anon* %3219 to i64*
  %3220 = load i64, i64* %RBP.i1286
  %3221 = sub i64 %3220, 16
  %3222 = load i64, i64* %PC.i1285
  %3223 = add i64 %3222, 7
  store i64 %3223, i64* %PC.i1285
  %3224 = inttoptr i64 %3221 to i32*
  store i32 0, i32* %3224
  store %struct.Memory* %loadMem_4ade06, %struct.Memory** %MEMORY
  br label %block_.L_4ade0d

block_.L_4ade0d:                                  ; preds = %block_.L_4ae636, %block_4ade06
  %loadMem_4ade0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3226 = getelementptr inbounds %struct.GPR, %struct.GPR* %3225, i32 0, i32 33
  %3227 = getelementptr inbounds %struct.Reg, %struct.Reg* %3226, i32 0, i32 0
  %PC.i1282 = bitcast %union.anon* %3227 to i64*
  %3228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3229 = getelementptr inbounds %struct.GPR, %struct.GPR* %3228, i32 0, i32 1
  %3230 = getelementptr inbounds %struct.Reg, %struct.Reg* %3229, i32 0, i32 0
  %RAX.i1283 = bitcast %union.anon* %3230 to i64*
  %3231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3232 = getelementptr inbounds %struct.GPR, %struct.GPR* %3231, i32 0, i32 15
  %3233 = getelementptr inbounds %struct.Reg, %struct.Reg* %3232, i32 0, i32 0
  %RBP.i1284 = bitcast %union.anon* %3233 to i64*
  %3234 = load i64, i64* %RBP.i1284
  %3235 = sub i64 %3234, 16
  %3236 = load i64, i64* %PC.i1282
  %3237 = add i64 %3236, 3
  store i64 %3237, i64* %PC.i1282
  %3238 = inttoptr i64 %3235 to i32*
  %3239 = load i32, i32* %3238
  %3240 = zext i32 %3239 to i64
  store i64 %3240, i64* %RAX.i1283, align 8
  store %struct.Memory* %loadMem_4ade0d, %struct.Memory** %MEMORY
  %loadMem_4ade10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3242 = getelementptr inbounds %struct.GPR, %struct.GPR* %3241, i32 0, i32 33
  %3243 = getelementptr inbounds %struct.Reg, %struct.Reg* %3242, i32 0, i32 0
  %PC.i1279 = bitcast %union.anon* %3243 to i64*
  %3244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3245 = getelementptr inbounds %struct.GPR, %struct.GPR* %3244, i32 0, i32 5
  %3246 = getelementptr inbounds %struct.Reg, %struct.Reg* %3245, i32 0, i32 0
  %RCX.i1280 = bitcast %union.anon* %3246 to i64*
  %3247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3248 = getelementptr inbounds %struct.GPR, %struct.GPR* %3247, i32 0, i32 15
  %3249 = getelementptr inbounds %struct.Reg, %struct.Reg* %3248, i32 0, i32 0
  %RBP.i1281 = bitcast %union.anon* %3249 to i64*
  %3250 = load i64, i64* %RBP.i1281
  %3251 = sub i64 %3250, 932
  %3252 = load i64, i64* %PC.i1279
  %3253 = add i64 %3252, 7
  store i64 %3253, i64* %PC.i1279
  %3254 = inttoptr i64 %3251 to i32*
  %3255 = load i32, i32* %3254
  %3256 = sext i32 %3255 to i64
  store i64 %3256, i64* %RCX.i1280, align 8
  store %struct.Memory* %loadMem_4ade10, %struct.Memory** %MEMORY
  %loadMem_4ade17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3258 = getelementptr inbounds %struct.GPR, %struct.GPR* %3257, i32 0, i32 33
  %3259 = getelementptr inbounds %struct.Reg, %struct.Reg* %3258, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %3259 to i64*
  %3260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3261 = getelementptr inbounds %struct.GPR, %struct.GPR* %3260, i32 0, i32 1
  %3262 = getelementptr inbounds %struct.Reg, %struct.Reg* %3261, i32 0, i32 0
  %EAX.i1277 = bitcast %union.anon* %3262 to i32*
  %3263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3264 = getelementptr inbounds %struct.GPR, %struct.GPR* %3263, i32 0, i32 5
  %3265 = getelementptr inbounds %struct.Reg, %struct.Reg* %3264, i32 0, i32 0
  %RCX.i1278 = bitcast %union.anon* %3265 to i64*
  %3266 = load i32, i32* %EAX.i1277
  %3267 = zext i32 %3266 to i64
  %3268 = load i64, i64* %RCX.i1278
  %3269 = mul i64 %3268, 4
  %3270 = add i64 %3269, 7489456
  %3271 = load i64, i64* %PC.i1276
  %3272 = add i64 %3271, 7
  store i64 %3272, i64* %PC.i1276
  %3273 = inttoptr i64 %3270 to i32*
  %3274 = load i32, i32* %3273
  %3275 = sub i32 %3266, %3274
  %3276 = icmp ult i32 %3266, %3274
  %3277 = zext i1 %3276 to i8
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3277, i8* %3278, align 1
  %3279 = and i32 %3275, 255
  %3280 = call i32 @llvm.ctpop.i32(i32 %3279)
  %3281 = trunc i32 %3280 to i8
  %3282 = and i8 %3281, 1
  %3283 = xor i8 %3282, 1
  %3284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3283, i8* %3284, align 1
  %3285 = xor i32 %3274, %3266
  %3286 = xor i32 %3285, %3275
  %3287 = lshr i32 %3286, 4
  %3288 = trunc i32 %3287 to i8
  %3289 = and i8 %3288, 1
  %3290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3289, i8* %3290, align 1
  %3291 = icmp eq i32 %3275, 0
  %3292 = zext i1 %3291 to i8
  %3293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3292, i8* %3293, align 1
  %3294 = lshr i32 %3275, 31
  %3295 = trunc i32 %3294 to i8
  %3296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3295, i8* %3296, align 1
  %3297 = lshr i32 %3266, 31
  %3298 = lshr i32 %3274, 31
  %3299 = xor i32 %3298, %3297
  %3300 = xor i32 %3294, %3297
  %3301 = add i32 %3300, %3299
  %3302 = icmp eq i32 %3301, 2
  %3303 = zext i1 %3302 to i8
  %3304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3303, i8* %3304, align 1
  store %struct.Memory* %loadMem_4ade17, %struct.Memory** %MEMORY
  %loadMem_4ade1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3306 = getelementptr inbounds %struct.GPR, %struct.GPR* %3305, i32 0, i32 33
  %3307 = getelementptr inbounds %struct.Reg, %struct.Reg* %3306, i32 0, i32 0
  %PC.i1275 = bitcast %union.anon* %3307 to i64*
  %3308 = load i64, i64* %PC.i1275
  %3309 = add i64 %3308, 2086
  %3310 = load i64, i64* %PC.i1275
  %3311 = add i64 %3310, 6
  %3312 = load i64, i64* %PC.i1275
  %3313 = add i64 %3312, 6
  store i64 %3313, i64* %PC.i1275
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3315 = load i8, i8* %3314, align 1
  %3316 = icmp ne i8 %3315, 0
  %3317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3318 = load i8, i8* %3317, align 1
  %3319 = icmp ne i8 %3318, 0
  %3320 = xor i1 %3316, %3319
  %3321 = xor i1 %3320, true
  %3322 = zext i1 %3321 to i8
  store i8 %3322, i8* %BRANCH_TAKEN, align 1
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3324 = select i1 %3320, i64 %3311, i64 %3309
  store i64 %3324, i64* %3323, align 8
  store %struct.Memory* %loadMem_4ade1e, %struct.Memory** %MEMORY
  %loadBr_4ade1e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ade1e = icmp eq i8 %loadBr_4ade1e, 1
  br i1 %cmpBr_4ade1e, label %block_.L_4ae644, label %block_4ade24

block_4ade24:                                     ; preds = %block_.L_4ade0d
  %loadMem_4ade24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3326 = getelementptr inbounds %struct.GPR, %struct.GPR* %3325, i32 0, i32 33
  %3327 = getelementptr inbounds %struct.Reg, %struct.Reg* %3326, i32 0, i32 0
  %PC.i1272 = bitcast %union.anon* %3327 to i64*
  %3328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3329 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3328, i64 0, i64 0
  %YMM0.i1273 = bitcast %union.VectorReg* %3329 to %"class.std::bitset"*
  %3330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3331 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3330, i64 0, i64 0
  %XMM0.i1274 = bitcast %union.VectorReg* %3331 to %union.vec128_t*
  %3332 = bitcast %"class.std::bitset"* %YMM0.i1273 to i8*
  %3333 = bitcast %"class.std::bitset"* %YMM0.i1273 to i8*
  %3334 = bitcast %union.vec128_t* %XMM0.i1274 to i8*
  %3335 = load i64, i64* %PC.i1272
  %3336 = add i64 %3335, 3
  store i64 %3336, i64* %PC.i1272
  %3337 = bitcast i8* %3333 to i64*
  %3338 = load i64, i64* %3337, align 1
  %3339 = getelementptr inbounds i8, i8* %3333, i64 8
  %3340 = bitcast i8* %3339 to i64*
  %3341 = load i64, i64* %3340, align 1
  %3342 = bitcast i8* %3334 to i64*
  %3343 = load i64, i64* %3342, align 1
  %3344 = getelementptr inbounds i8, i8* %3334, i64 8
  %3345 = bitcast i8* %3344 to i64*
  %3346 = load i64, i64* %3345, align 1
  %3347 = xor i64 %3343, %3338
  %3348 = xor i64 %3346, %3341
  %3349 = trunc i64 %3347 to i32
  %3350 = lshr i64 %3347, 32
  %3351 = trunc i64 %3350 to i32
  %3352 = bitcast i8* %3332 to i32*
  store i32 %3349, i32* %3352, align 1
  %3353 = getelementptr inbounds i8, i8* %3332, i64 4
  %3354 = bitcast i8* %3353 to i32*
  store i32 %3351, i32* %3354, align 1
  %3355 = trunc i64 %3348 to i32
  %3356 = getelementptr inbounds i8, i8* %3332, i64 8
  %3357 = bitcast i8* %3356 to i32*
  store i32 %3355, i32* %3357, align 1
  %3358 = lshr i64 %3348, 32
  %3359 = trunc i64 %3358 to i32
  %3360 = getelementptr inbounds i8, i8* %3332, i64 12
  %3361 = bitcast i8* %3360 to i32*
  store i32 %3359, i32* %3361, align 1
  store %struct.Memory* %loadMem_4ade24, %struct.Memory** %MEMORY
  %loadMem_4ade27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3363 = getelementptr inbounds %struct.GPR, %struct.GPR* %3362, i32 0, i32 33
  %3364 = getelementptr inbounds %struct.Reg, %struct.Reg* %3363, i32 0, i32 0
  %PC.i1269 = bitcast %union.anon* %3364 to i64*
  %3365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3366 = getelementptr inbounds %struct.GPR, %struct.GPR* %3365, i32 0, i32 1
  %3367 = getelementptr inbounds %struct.Reg, %struct.Reg* %3366, i32 0, i32 0
  %RAX.i1270 = bitcast %union.anon* %3367 to i64*
  %3368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3369 = getelementptr inbounds %struct.GPR, %struct.GPR* %3368, i32 0, i32 15
  %3370 = getelementptr inbounds %struct.Reg, %struct.Reg* %3369, i32 0, i32 0
  %RBP.i1271 = bitcast %union.anon* %3370 to i64*
  %3371 = load i64, i64* %RBP.i1271
  %3372 = sub i64 %3371, 16
  %3373 = load i64, i64* %PC.i1269
  %3374 = add i64 %3373, 4
  store i64 %3374, i64* %PC.i1269
  %3375 = inttoptr i64 %3372 to i32*
  %3376 = load i32, i32* %3375
  %3377 = sext i32 %3376 to i64
  store i64 %3377, i64* %RAX.i1270, align 8
  store %struct.Memory* %loadMem_4ade27, %struct.Memory** %MEMORY
  %loadMem_4ade2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3379 = getelementptr inbounds %struct.GPR, %struct.GPR* %3378, i32 0, i32 33
  %3380 = getelementptr inbounds %struct.Reg, %struct.Reg* %3379, i32 0, i32 0
  %PC.i1265 = bitcast %union.anon* %3380 to i64*
  %3381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3382 = getelementptr inbounds %struct.GPR, %struct.GPR* %3381, i32 0, i32 1
  %3383 = getelementptr inbounds %struct.Reg, %struct.Reg* %3382, i32 0, i32 0
  %RAX.i1266 = bitcast %union.anon* %3383 to i64*
  %3384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3385 = getelementptr inbounds %struct.GPR, %struct.GPR* %3384, i32 0, i32 15
  %3386 = getelementptr inbounds %struct.Reg, %struct.Reg* %3385, i32 0, i32 0
  %RBP.i1267 = bitcast %union.anon* %3386 to i64*
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3388 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3387, i64 0, i64 0
  %XMM0.i1268 = bitcast %union.VectorReg* %3388 to %union.vec128_t*
  %3389 = load i64, i64* %RBP.i1267
  %3390 = load i64, i64* %RAX.i1266
  %3391 = mul i64 %3390, 8
  %3392 = add i64 %3389, -160
  %3393 = add i64 %3392, %3391
  %3394 = bitcast %union.vec128_t* %XMM0.i1268 to i8*
  %3395 = load i64, i64* %PC.i1265
  %3396 = add i64 %3395, 9
  store i64 %3396, i64* %PC.i1265
  %3397 = bitcast i8* %3394 to double*
  %3398 = load double, double* %3397, align 1
  %3399 = inttoptr i64 %3393 to double*
  store double %3398, double* %3399
  store %struct.Memory* %loadMem_4ade2b, %struct.Memory** %MEMORY
  %loadMem_4ade34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3401 = getelementptr inbounds %struct.GPR, %struct.GPR* %3400, i32 0, i32 33
  %3402 = getelementptr inbounds %struct.Reg, %struct.Reg* %3401, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %3402 to i64*
  %3403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3404 = getelementptr inbounds %struct.GPR, %struct.GPR* %3403, i32 0, i32 1
  %3405 = getelementptr inbounds %struct.Reg, %struct.Reg* %3404, i32 0, i32 0
  %RAX.i1263 = bitcast %union.anon* %3405 to i64*
  %3406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3407 = getelementptr inbounds %struct.GPR, %struct.GPR* %3406, i32 0, i32 15
  %3408 = getelementptr inbounds %struct.Reg, %struct.Reg* %3407, i32 0, i32 0
  %RBP.i1264 = bitcast %union.anon* %3408 to i64*
  %3409 = load i64, i64* %RBP.i1264
  %3410 = sub i64 %3409, 932
  %3411 = load i64, i64* %PC.i1262
  %3412 = add i64 %3411, 7
  store i64 %3412, i64* %PC.i1262
  %3413 = inttoptr i64 %3410 to i32*
  %3414 = load i32, i32* %3413
  %3415 = sext i32 %3414 to i64
  store i64 %3415, i64* %RAX.i1263, align 8
  store %struct.Memory* %loadMem_4ade34, %struct.Memory** %MEMORY
  %loadMem_4ade3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3417 = getelementptr inbounds %struct.GPR, %struct.GPR* %3416, i32 0, i32 33
  %3418 = getelementptr inbounds %struct.Reg, %struct.Reg* %3417, i32 0, i32 0
  %PC.i1260 = bitcast %union.anon* %3418 to i64*
  %3419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3420 = getelementptr inbounds %struct.GPR, %struct.GPR* %3419, i32 0, i32 1
  %3421 = getelementptr inbounds %struct.Reg, %struct.Reg* %3420, i32 0, i32 0
  %RAX.i1261 = bitcast %union.anon* %3421 to i64*
  %3422 = load i64, i64* %RAX.i1261
  %3423 = mul i64 %3422, 8
  %3424 = add i64 %3423, 7482144
  %3425 = load i64, i64* %PC.i1260
  %3426 = add i64 %3425, 8
  store i64 %3426, i64* %PC.i1260
  %3427 = inttoptr i64 %3424 to i64*
  %3428 = load i64, i64* %3427
  store i64 %3428, i64* %RAX.i1261, align 8
  store %struct.Memory* %loadMem_4ade3b, %struct.Memory** %MEMORY
  %loadMem_4ade43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3430 = getelementptr inbounds %struct.GPR, %struct.GPR* %3429, i32 0, i32 33
  %3431 = getelementptr inbounds %struct.Reg, %struct.Reg* %3430, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %3431 to i64*
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3433 = getelementptr inbounds %struct.GPR, %struct.GPR* %3432, i32 0, i32 5
  %3434 = getelementptr inbounds %struct.Reg, %struct.Reg* %3433, i32 0, i32 0
  %RCX.i1258 = bitcast %union.anon* %3434 to i64*
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3436 = getelementptr inbounds %struct.GPR, %struct.GPR* %3435, i32 0, i32 15
  %3437 = getelementptr inbounds %struct.Reg, %struct.Reg* %3436, i32 0, i32 0
  %RBP.i1259 = bitcast %union.anon* %3437 to i64*
  %3438 = load i64, i64* %RBP.i1259
  %3439 = sub i64 %3438, 16
  %3440 = load i64, i64* %PC.i1257
  %3441 = add i64 %3440, 4
  store i64 %3441, i64* %PC.i1257
  %3442 = inttoptr i64 %3439 to i32*
  %3443 = load i32, i32* %3442
  %3444 = sext i32 %3443 to i64
  store i64 %3444, i64* %RCX.i1258, align 8
  store %struct.Memory* %loadMem_4ade43, %struct.Memory** %MEMORY
  %loadMem_4ade47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3446 = getelementptr inbounds %struct.GPR, %struct.GPR* %3445, i32 0, i32 33
  %3447 = getelementptr inbounds %struct.Reg, %struct.Reg* %3446, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %3447 to i64*
  %3448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3449 = getelementptr inbounds %struct.GPR, %struct.GPR* %3448, i32 0, i32 1
  %3450 = getelementptr inbounds %struct.Reg, %struct.Reg* %3449, i32 0, i32 0
  %RAX.i1255 = bitcast %union.anon* %3450 to i64*
  %3451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3452 = getelementptr inbounds %struct.GPR, %struct.GPR* %3451, i32 0, i32 5
  %3453 = getelementptr inbounds %struct.Reg, %struct.Reg* %3452, i32 0, i32 0
  %RCX.i1256 = bitcast %union.anon* %3453 to i64*
  %3454 = load i64, i64* %RAX.i1255
  %3455 = load i64, i64* %RCX.i1256
  %3456 = mul i64 %3455, 8
  %3457 = add i64 %3456, %3454
  %3458 = load i64, i64* %PC.i1254
  %3459 = add i64 %3458, 4
  store i64 %3459, i64* %PC.i1254
  %3460 = inttoptr i64 %3457 to i64*
  %3461 = load i64, i64* %3460
  store i64 %3461, i64* %RAX.i1255, align 8
  store %struct.Memory* %loadMem_4ade47, %struct.Memory** %MEMORY
  %loadMem_4ade4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3463 = getelementptr inbounds %struct.GPR, %struct.GPR* %3462, i32 0, i32 33
  %3464 = getelementptr inbounds %struct.Reg, %struct.Reg* %3463, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %3464 to i64*
  %3465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3466 = getelementptr inbounds %struct.GPR, %struct.GPR* %3465, i32 0, i32 1
  %3467 = getelementptr inbounds %struct.Reg, %struct.Reg* %3466, i32 0, i32 0
  %RAX.i1253 = bitcast %union.anon* %3467 to i64*
  %3468 = load i64, i64* %RAX.i1253
  %3469 = add i64 %3468, 6432
  %3470 = load i64, i64* %PC.i1252
  %3471 = add i64 %3470, 7
  store i64 %3471, i64* %PC.i1252
  %3472 = inttoptr i64 %3469 to i64*
  %3473 = load i64, i64* %3472
  store i64 %3473, i64* %RAX.i1253, align 8
  store %struct.Memory* %loadMem_4ade4b, %struct.Memory** %MEMORY
  %loadMem_4ade52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3475 = getelementptr inbounds %struct.GPR, %struct.GPR* %3474, i32 0, i32 33
  %3476 = getelementptr inbounds %struct.Reg, %struct.Reg* %3475, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %3476 to i64*
  %3477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3478 = getelementptr inbounds %struct.GPR, %struct.GPR* %3477, i32 0, i32 1
  %3479 = getelementptr inbounds %struct.Reg, %struct.Reg* %3478, i32 0, i32 0
  %RAX.i1250 = bitcast %union.anon* %3479 to i64*
  %3480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3481 = getelementptr inbounds %struct.GPR, %struct.GPR* %3480, i32 0, i32 15
  %3482 = getelementptr inbounds %struct.Reg, %struct.Reg* %3481, i32 0, i32 0
  %RBP.i1251 = bitcast %union.anon* %3482 to i64*
  %3483 = load i64, i64* %RBP.i1251
  %3484 = sub i64 %3483, 168
  %3485 = load i64, i64* %RAX.i1250
  %3486 = load i64, i64* %PC.i1249
  %3487 = add i64 %3486, 7
  store i64 %3487, i64* %PC.i1249
  %3488 = inttoptr i64 %3484 to i64*
  store i64 %3485, i64* %3488
  store %struct.Memory* %loadMem_4ade52, %struct.Memory** %MEMORY
  %loadMem_4ade59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3490 = getelementptr inbounds %struct.GPR, %struct.GPR* %3489, i32 0, i32 33
  %3491 = getelementptr inbounds %struct.Reg, %struct.Reg* %3490, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %3491 to i64*
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3493 = getelementptr inbounds %struct.GPR, %struct.GPR* %3492, i32 0, i32 1
  %3494 = getelementptr inbounds %struct.Reg, %struct.Reg* %3493, i32 0, i32 0
  %RAX.i1247 = bitcast %union.anon* %3494 to i64*
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3496 = getelementptr inbounds %struct.GPR, %struct.GPR* %3495, i32 0, i32 15
  %3497 = getelementptr inbounds %struct.Reg, %struct.Reg* %3496, i32 0, i32 0
  %RBP.i1248 = bitcast %union.anon* %3497 to i64*
  %3498 = load i64, i64* %RBP.i1248
  %3499 = sub i64 %3498, 932
  %3500 = load i64, i64* %PC.i1246
  %3501 = add i64 %3500, 7
  store i64 %3501, i64* %PC.i1246
  %3502 = inttoptr i64 %3499 to i32*
  %3503 = load i32, i32* %3502
  %3504 = sext i32 %3503 to i64
  store i64 %3504, i64* %RAX.i1247, align 8
  store %struct.Memory* %loadMem_4ade59, %struct.Memory** %MEMORY
  %loadMem_4ade60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3506 = getelementptr inbounds %struct.GPR, %struct.GPR* %3505, i32 0, i32 33
  %3507 = getelementptr inbounds %struct.Reg, %struct.Reg* %3506, i32 0, i32 0
  %PC.i1244 = bitcast %union.anon* %3507 to i64*
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3509 = getelementptr inbounds %struct.GPR, %struct.GPR* %3508, i32 0, i32 1
  %3510 = getelementptr inbounds %struct.Reg, %struct.Reg* %3509, i32 0, i32 0
  %RAX.i1245 = bitcast %union.anon* %3510 to i64*
  %3511 = load i64, i64* %RAX.i1245
  %3512 = mul i64 %3511, 8
  %3513 = add i64 %3512, 7482144
  %3514 = load i64, i64* %PC.i1244
  %3515 = add i64 %3514, 8
  store i64 %3515, i64* %PC.i1244
  %3516 = inttoptr i64 %3513 to i64*
  %3517 = load i64, i64* %3516
  store i64 %3517, i64* %RAX.i1245, align 8
  store %struct.Memory* %loadMem_4ade60, %struct.Memory** %MEMORY
  %loadMem_4ade68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3519 = getelementptr inbounds %struct.GPR, %struct.GPR* %3518, i32 0, i32 33
  %3520 = getelementptr inbounds %struct.Reg, %struct.Reg* %3519, i32 0, i32 0
  %PC.i1241 = bitcast %union.anon* %3520 to i64*
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3522 = getelementptr inbounds %struct.GPR, %struct.GPR* %3521, i32 0, i32 5
  %3523 = getelementptr inbounds %struct.Reg, %struct.Reg* %3522, i32 0, i32 0
  %RCX.i1242 = bitcast %union.anon* %3523 to i64*
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3525 = getelementptr inbounds %struct.GPR, %struct.GPR* %3524, i32 0, i32 15
  %3526 = getelementptr inbounds %struct.Reg, %struct.Reg* %3525, i32 0, i32 0
  %RBP.i1243 = bitcast %union.anon* %3526 to i64*
  %3527 = load i64, i64* %RBP.i1243
  %3528 = sub i64 %3527, 16
  %3529 = load i64, i64* %PC.i1241
  %3530 = add i64 %3529, 4
  store i64 %3530, i64* %PC.i1241
  %3531 = inttoptr i64 %3528 to i32*
  %3532 = load i32, i32* %3531
  %3533 = sext i32 %3532 to i64
  store i64 %3533, i64* %RCX.i1242, align 8
  store %struct.Memory* %loadMem_4ade68, %struct.Memory** %MEMORY
  %loadMem_4ade6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3535 = getelementptr inbounds %struct.GPR, %struct.GPR* %3534, i32 0, i32 33
  %3536 = getelementptr inbounds %struct.Reg, %struct.Reg* %3535, i32 0, i32 0
  %PC.i1238 = bitcast %union.anon* %3536 to i64*
  %3537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3538 = getelementptr inbounds %struct.GPR, %struct.GPR* %3537, i32 0, i32 1
  %3539 = getelementptr inbounds %struct.Reg, %struct.Reg* %3538, i32 0, i32 0
  %RAX.i1239 = bitcast %union.anon* %3539 to i64*
  %3540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3541 = getelementptr inbounds %struct.GPR, %struct.GPR* %3540, i32 0, i32 5
  %3542 = getelementptr inbounds %struct.Reg, %struct.Reg* %3541, i32 0, i32 0
  %RCX.i1240 = bitcast %union.anon* %3542 to i64*
  %3543 = load i64, i64* %RAX.i1239
  %3544 = load i64, i64* %RCX.i1240
  %3545 = mul i64 %3544, 8
  %3546 = add i64 %3545, %3543
  %3547 = load i64, i64* %PC.i1238
  %3548 = add i64 %3547, 4
  store i64 %3548, i64* %PC.i1238
  %3549 = inttoptr i64 %3546 to i64*
  %3550 = load i64, i64* %3549
  store i64 %3550, i64* %RAX.i1239, align 8
  store %struct.Memory* %loadMem_4ade6c, %struct.Memory** %MEMORY
  %loadMem_4ade70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3552 = getelementptr inbounds %struct.GPR, %struct.GPR* %3551, i32 0, i32 33
  %3553 = getelementptr inbounds %struct.Reg, %struct.Reg* %3552, i32 0, i32 0
  %PC.i1236 = bitcast %union.anon* %3553 to i64*
  %3554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3555 = getelementptr inbounds %struct.GPR, %struct.GPR* %3554, i32 0, i32 1
  %3556 = getelementptr inbounds %struct.Reg, %struct.Reg* %3555, i32 0, i32 0
  %RAX.i1237 = bitcast %union.anon* %3556 to i64*
  %3557 = load i64, i64* %RAX.i1237
  %3558 = add i64 %3557, 6440
  %3559 = load i64, i64* %PC.i1236
  %3560 = add i64 %3559, 7
  store i64 %3560, i64* %PC.i1236
  %3561 = inttoptr i64 %3558 to i64*
  %3562 = load i64, i64* %3561
  store i64 %3562, i64* %RAX.i1237, align 8
  store %struct.Memory* %loadMem_4ade70, %struct.Memory** %MEMORY
  %loadMem_4ade77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3564 = getelementptr inbounds %struct.GPR, %struct.GPR* %3563, i32 0, i32 33
  %3565 = getelementptr inbounds %struct.Reg, %struct.Reg* %3564, i32 0, i32 0
  %PC.i1233 = bitcast %union.anon* %3565 to i64*
  %3566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3567 = getelementptr inbounds %struct.GPR, %struct.GPR* %3566, i32 0, i32 1
  %3568 = getelementptr inbounds %struct.Reg, %struct.Reg* %3567, i32 0, i32 0
  %RAX.i1234 = bitcast %union.anon* %3568 to i64*
  %3569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3570 = getelementptr inbounds %struct.GPR, %struct.GPR* %3569, i32 0, i32 15
  %3571 = getelementptr inbounds %struct.Reg, %struct.Reg* %3570, i32 0, i32 0
  %RBP.i1235 = bitcast %union.anon* %3571 to i64*
  %3572 = load i64, i64* %RBP.i1235
  %3573 = sub i64 %3572, 176
  %3574 = load i64, i64* %RAX.i1234
  %3575 = load i64, i64* %PC.i1233
  %3576 = add i64 %3575, 7
  store i64 %3576, i64* %PC.i1233
  %3577 = inttoptr i64 %3573 to i64*
  store i64 %3574, i64* %3577
  store %struct.Memory* %loadMem_4ade77, %struct.Memory** %MEMORY
  %loadMem_4ade7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3579 = getelementptr inbounds %struct.GPR, %struct.GPR* %3578, i32 0, i32 33
  %3580 = getelementptr inbounds %struct.Reg, %struct.Reg* %3579, i32 0, i32 0
  %PC.i1231 = bitcast %union.anon* %3580 to i64*
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3582 = getelementptr inbounds %struct.GPR, %struct.GPR* %3581, i32 0, i32 15
  %3583 = getelementptr inbounds %struct.Reg, %struct.Reg* %3582, i32 0, i32 0
  %RBP.i1232 = bitcast %union.anon* %3583 to i64*
  %3584 = load i64, i64* %RBP.i1232
  %3585 = sub i64 %3584, 8
  %3586 = load i64, i64* %PC.i1231
  %3587 = add i64 %3586, 7
  store i64 %3587, i64* %PC.i1231
  %3588 = inttoptr i64 %3585 to i32*
  store i32 0, i32* %3588
  store %struct.Memory* %loadMem_4ade7e, %struct.Memory** %MEMORY
  br label %block_.L_4ade85

block_.L_4ade85:                                  ; preds = %block_4adea7, %block_4ade24
  %loadMem_4ade85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3590 = getelementptr inbounds %struct.GPR, %struct.GPR* %3589, i32 0, i32 33
  %3591 = getelementptr inbounds %struct.Reg, %struct.Reg* %3590, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %3591 to i64*
  %3592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3593 = getelementptr inbounds %struct.GPR, %struct.GPR* %3592, i32 0, i32 1
  %3594 = getelementptr inbounds %struct.Reg, %struct.Reg* %3593, i32 0, i32 0
  %RAX.i1229 = bitcast %union.anon* %3594 to i64*
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3596 = getelementptr inbounds %struct.GPR, %struct.GPR* %3595, i32 0, i32 15
  %3597 = getelementptr inbounds %struct.Reg, %struct.Reg* %3596, i32 0, i32 0
  %RBP.i1230 = bitcast %union.anon* %3597 to i64*
  %3598 = load i64, i64* %RBP.i1230
  %3599 = sub i64 %3598, 8
  %3600 = load i64, i64* %PC.i1228
  %3601 = add i64 %3600, 3
  store i64 %3601, i64* %PC.i1228
  %3602 = inttoptr i64 %3599 to i32*
  %3603 = load i32, i32* %3602
  %3604 = zext i32 %3603 to i64
  store i64 %3604, i64* %RAX.i1229, align 8
  store %struct.Memory* %loadMem_4ade85, %struct.Memory** %MEMORY
  %loadMem_4ade88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3606 = getelementptr inbounds %struct.GPR, %struct.GPR* %3605, i32 0, i32 33
  %3607 = getelementptr inbounds %struct.Reg, %struct.Reg* %3606, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %3607 to i64*
  %3608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3609 = getelementptr inbounds %struct.GPR, %struct.GPR* %3608, i32 0, i32 5
  %3610 = getelementptr inbounds %struct.Reg, %struct.Reg* %3609, i32 0, i32 0
  %RCX.i1227 = bitcast %union.anon* %3610 to i64*
  %3611 = load i64, i64* %PC.i1226
  %3612 = add i64 %3611, 8
  store i64 %3612, i64* %PC.i1226
  %3613 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3613, i64* %RCX.i1227, align 8
  store %struct.Memory* %loadMem_4ade88, %struct.Memory** %MEMORY
  %loadMem_4ade90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3615 = getelementptr inbounds %struct.GPR, %struct.GPR* %3614, i32 0, i32 33
  %3616 = getelementptr inbounds %struct.Reg, %struct.Reg* %3615, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %3616 to i64*
  %3617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3618 = getelementptr inbounds %struct.GPR, %struct.GPR* %3617, i32 0, i32 5
  %3619 = getelementptr inbounds %struct.Reg, %struct.Reg* %3618, i32 0, i32 0
  %RCX.i1224 = bitcast %union.anon* %3619 to i64*
  %3620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3621 = getelementptr inbounds %struct.GPR, %struct.GPR* %3620, i32 0, i32 7
  %3622 = getelementptr inbounds %struct.Reg, %struct.Reg* %3621, i32 0, i32 0
  %RDX.i1225 = bitcast %union.anon* %3622 to i64*
  %3623 = load i64, i64* %RCX.i1224
  %3624 = add i64 %3623, 60
  %3625 = load i64, i64* %PC.i1223
  %3626 = add i64 %3625, 3
  store i64 %3626, i64* %PC.i1223
  %3627 = inttoptr i64 %3624 to i32*
  %3628 = load i32, i32* %3627
  %3629 = zext i32 %3628 to i64
  store i64 %3629, i64* %RDX.i1225, align 8
  store %struct.Memory* %loadMem_4ade90, %struct.Memory** %MEMORY
  %loadMem_4ade93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3631 = getelementptr inbounds %struct.GPR, %struct.GPR* %3630, i32 0, i32 33
  %3632 = getelementptr inbounds %struct.Reg, %struct.Reg* %3631, i32 0, i32 0
  %PC.i1221 = bitcast %union.anon* %3632 to i64*
  %3633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3634 = getelementptr inbounds %struct.GPR, %struct.GPR* %3633, i32 0, i32 5
  %3635 = getelementptr inbounds %struct.Reg, %struct.Reg* %3634, i32 0, i32 0
  %RCX.i1222 = bitcast %union.anon* %3635 to i64*
  %3636 = load i64, i64* %PC.i1221
  %3637 = add i64 %3636, 8
  store i64 %3637, i64* %PC.i1221
  %3638 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3638, i64* %RCX.i1222, align 8
  store %struct.Memory* %loadMem_4ade93, %struct.Memory** %MEMORY
  %loadMem_4ade9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3640 = getelementptr inbounds %struct.GPR, %struct.GPR* %3639, i32 0, i32 33
  %3641 = getelementptr inbounds %struct.Reg, %struct.Reg* %3640, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %3641 to i64*
  %3642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3643 = getelementptr inbounds %struct.GPR, %struct.GPR* %3642, i32 0, i32 5
  %3644 = getelementptr inbounds %struct.Reg, %struct.Reg* %3643, i32 0, i32 0
  %RCX.i1219 = bitcast %union.anon* %3644 to i64*
  %3645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3646 = getelementptr inbounds %struct.GPR, %struct.GPR* %3645, i32 0, i32 7
  %3647 = getelementptr inbounds %struct.Reg, %struct.Reg* %3646, i32 0, i32 0
  %RDX.i1220 = bitcast %union.anon* %3647 to i64*
  %3648 = load i64, i64* %RDX.i1220
  %3649 = load i64, i64* %RCX.i1219
  %3650 = add i64 %3649, 52
  %3651 = load i64, i64* %PC.i1218
  %3652 = add i64 %3651, 4
  store i64 %3652, i64* %PC.i1218
  %3653 = inttoptr i64 %3650 to i32*
  %3654 = load i32, i32* %3653
  %3655 = shl i64 %3648, 32
  %3656 = ashr exact i64 %3655, 32
  %3657 = sext i32 %3654 to i64
  %3658 = mul i64 %3657, %3656
  %3659 = trunc i64 %3658 to i32
  %3660 = and i64 %3658, 4294967295
  store i64 %3660, i64* %RDX.i1220, align 8
  %3661 = shl i64 %3658, 32
  %3662 = ashr exact i64 %3661, 32
  %3663 = icmp ne i64 %3662, %3658
  %3664 = zext i1 %3663 to i8
  %3665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3664, i8* %3665, align 1
  %3666 = and i32 %3659, 255
  %3667 = call i32 @llvm.ctpop.i32(i32 %3666)
  %3668 = trunc i32 %3667 to i8
  %3669 = and i8 %3668, 1
  %3670 = xor i8 %3669, 1
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3670, i8* %3671, align 1
  %3672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3672, align 1
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3673, align 1
  %3674 = lshr i32 %3659, 31
  %3675 = trunc i32 %3674 to i8
  %3676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3675, i8* %3676, align 1
  %3677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3664, i8* %3677, align 1
  store %struct.Memory* %loadMem_4ade9b, %struct.Memory** %MEMORY
  %loadMem_4ade9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3679 = getelementptr inbounds %struct.GPR, %struct.GPR* %3678, i32 0, i32 33
  %3680 = getelementptr inbounds %struct.Reg, %struct.Reg* %3679, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %3680 to i64*
  %3681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3682 = getelementptr inbounds %struct.GPR, %struct.GPR* %3681, i32 0, i32 1
  %3683 = getelementptr inbounds %struct.Reg, %struct.Reg* %3682, i32 0, i32 0
  %EAX.i1216 = bitcast %union.anon* %3683 to i32*
  %3684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3685 = getelementptr inbounds %struct.GPR, %struct.GPR* %3684, i32 0, i32 7
  %3686 = getelementptr inbounds %struct.Reg, %struct.Reg* %3685, i32 0, i32 0
  %EDX.i1217 = bitcast %union.anon* %3686 to i32*
  %3687 = load i32, i32* %EAX.i1216
  %3688 = zext i32 %3687 to i64
  %3689 = load i32, i32* %EDX.i1217
  %3690 = zext i32 %3689 to i64
  %3691 = load i64, i64* %PC.i1215
  %3692 = add i64 %3691, 2
  store i64 %3692, i64* %PC.i1215
  %3693 = sub i32 %3687, %3689
  %3694 = icmp ult i32 %3687, %3689
  %3695 = zext i1 %3694 to i8
  %3696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3695, i8* %3696, align 1
  %3697 = and i32 %3693, 255
  %3698 = call i32 @llvm.ctpop.i32(i32 %3697)
  %3699 = trunc i32 %3698 to i8
  %3700 = and i8 %3699, 1
  %3701 = xor i8 %3700, 1
  %3702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3701, i8* %3702, align 1
  %3703 = xor i64 %3690, %3688
  %3704 = trunc i64 %3703 to i32
  %3705 = xor i32 %3704, %3693
  %3706 = lshr i32 %3705, 4
  %3707 = trunc i32 %3706 to i8
  %3708 = and i8 %3707, 1
  %3709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3708, i8* %3709, align 1
  %3710 = icmp eq i32 %3693, 0
  %3711 = zext i1 %3710 to i8
  %3712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3711, i8* %3712, align 1
  %3713 = lshr i32 %3693, 31
  %3714 = trunc i32 %3713 to i8
  %3715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3714, i8* %3715, align 1
  %3716 = lshr i32 %3687, 31
  %3717 = lshr i32 %3689, 31
  %3718 = xor i32 %3717, %3716
  %3719 = xor i32 %3713, %3716
  %3720 = add i32 %3719, %3718
  %3721 = icmp eq i32 %3720, 2
  %3722 = zext i1 %3721 to i8
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3722, i8* %3723, align 1
  store %struct.Memory* %loadMem_4ade9f, %struct.Memory** %MEMORY
  %loadMem_4adea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3725 = getelementptr inbounds %struct.GPR, %struct.GPR* %3724, i32 0, i32 33
  %3726 = getelementptr inbounds %struct.Reg, %struct.Reg* %3725, i32 0, i32 0
  %PC.i1214 = bitcast %union.anon* %3726 to i64*
  %3727 = load i64, i64* %PC.i1214
  %3728 = add i64 %3727, 61
  %3729 = load i64, i64* %PC.i1214
  %3730 = add i64 %3729, 6
  %3731 = load i64, i64* %PC.i1214
  %3732 = add i64 %3731, 6
  store i64 %3732, i64* %PC.i1214
  %3733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3734 = load i8, i8* %3733, align 1
  %3735 = icmp ne i8 %3734, 0
  %3736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3737 = load i8, i8* %3736, align 1
  %3738 = icmp ne i8 %3737, 0
  %3739 = xor i1 %3735, %3738
  %3740 = xor i1 %3739, true
  %3741 = zext i1 %3740 to i8
  store i8 %3741, i8* %BRANCH_TAKEN, align 1
  %3742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3743 = select i1 %3739, i64 %3730, i64 %3728
  store i64 %3743, i64* %3742, align 8
  store %struct.Memory* %loadMem_4adea1, %struct.Memory** %MEMORY
  %loadBr_4adea1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4adea1 = icmp eq i8 %loadBr_4adea1, 1
  br i1 %cmpBr_4adea1, label %block_.L_4adede, label %block_4adea7

block_4adea7:                                     ; preds = %block_.L_4ade85
  %loadMem_4adea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3745 = getelementptr inbounds %struct.GPR, %struct.GPR* %3744, i32 0, i32 33
  %3746 = getelementptr inbounds %struct.Reg, %struct.Reg* %3745, i32 0, i32 0
  %PC.i1211 = bitcast %union.anon* %3746 to i64*
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3748 = getelementptr inbounds %struct.GPR, %struct.GPR* %3747, i32 0, i32 1
  %3749 = getelementptr inbounds %struct.Reg, %struct.Reg* %3748, i32 0, i32 0
  %RAX.i1212 = bitcast %union.anon* %3749 to i64*
  %3750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3751 = getelementptr inbounds %struct.GPR, %struct.GPR* %3750, i32 0, i32 15
  %3752 = getelementptr inbounds %struct.Reg, %struct.Reg* %3751, i32 0, i32 0
  %RBP.i1213 = bitcast %union.anon* %3752 to i64*
  %3753 = load i64, i64* %RBP.i1213
  %3754 = sub i64 %3753, 168
  %3755 = load i64, i64* %PC.i1211
  %3756 = add i64 %3755, 7
  store i64 %3756, i64* %PC.i1211
  %3757 = inttoptr i64 %3754 to i64*
  %3758 = load i64, i64* %3757
  store i64 %3758, i64* %RAX.i1212, align 8
  store %struct.Memory* %loadMem_4adea7, %struct.Memory** %MEMORY
  %loadMem_4adeae = load %struct.Memory*, %struct.Memory** %MEMORY
  %3759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3760 = getelementptr inbounds %struct.GPR, %struct.GPR* %3759, i32 0, i32 33
  %3761 = getelementptr inbounds %struct.Reg, %struct.Reg* %3760, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %3761 to i64*
  %3762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3763 = getelementptr inbounds %struct.GPR, %struct.GPR* %3762, i32 0, i32 5
  %3764 = getelementptr inbounds %struct.Reg, %struct.Reg* %3763, i32 0, i32 0
  %RCX.i1209 = bitcast %union.anon* %3764 to i64*
  %3765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3766 = getelementptr inbounds %struct.GPR, %struct.GPR* %3765, i32 0, i32 15
  %3767 = getelementptr inbounds %struct.Reg, %struct.Reg* %3766, i32 0, i32 0
  %RBP.i1210 = bitcast %union.anon* %3767 to i64*
  %3768 = load i64, i64* %RBP.i1210
  %3769 = sub i64 %3768, 8
  %3770 = load i64, i64* %PC.i1208
  %3771 = add i64 %3770, 4
  store i64 %3771, i64* %PC.i1208
  %3772 = inttoptr i64 %3769 to i32*
  %3773 = load i32, i32* %3772
  %3774 = sext i32 %3773 to i64
  store i64 %3774, i64* %RCX.i1209, align 8
  store %struct.Memory* %loadMem_4adeae, %struct.Memory** %MEMORY
  %loadMem_4adeb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3776 = getelementptr inbounds %struct.GPR, %struct.GPR* %3775, i32 0, i32 33
  %3777 = getelementptr inbounds %struct.Reg, %struct.Reg* %3776, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %3777 to i64*
  %3778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3779 = getelementptr inbounds %struct.GPR, %struct.GPR* %3778, i32 0, i32 1
  %3780 = getelementptr inbounds %struct.Reg, %struct.Reg* %3779, i32 0, i32 0
  %RAX.i1205 = bitcast %union.anon* %3780 to i64*
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3782 = getelementptr inbounds %struct.GPR, %struct.GPR* %3781, i32 0, i32 5
  %3783 = getelementptr inbounds %struct.Reg, %struct.Reg* %3782, i32 0, i32 0
  %RCX.i1206 = bitcast %union.anon* %3783 to i64*
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3785 = getelementptr inbounds %struct.GPR, %struct.GPR* %3784, i32 0, i32 7
  %3786 = getelementptr inbounds %struct.Reg, %struct.Reg* %3785, i32 0, i32 0
  %RDX.i1207 = bitcast %union.anon* %3786 to i64*
  %3787 = load i64, i64* %RAX.i1205
  %3788 = load i64, i64* %RCX.i1206
  %3789 = mul i64 %3788, 2
  %3790 = add i64 %3789, %3787
  %3791 = load i64, i64* %PC.i1204
  %3792 = add i64 %3791, 4
  store i64 %3792, i64* %PC.i1204
  %3793 = inttoptr i64 %3790 to i16*
  %3794 = load i16, i16* %3793
  %3795 = zext i16 %3794 to i64
  store i64 %3795, i64* %RDX.i1207, align 8
  store %struct.Memory* %loadMem_4adeb2, %struct.Memory** %MEMORY
  %loadMem_4adeb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3797 = getelementptr inbounds %struct.GPR, %struct.GPR* %3796, i32 0, i32 33
  %3798 = getelementptr inbounds %struct.Reg, %struct.Reg* %3797, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %3798 to i64*
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3800 = getelementptr inbounds %struct.GPR, %struct.GPR* %3799, i32 0, i32 7
  %3801 = getelementptr inbounds %struct.Reg, %struct.Reg* %3800, i32 0, i32 0
  %EDX.i1202 = bitcast %union.anon* %3801 to i32*
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3803 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3802, i64 0, i64 0
  %YMM0.i1203 = bitcast %union.VectorReg* %3803 to %"class.std::bitset"*
  %3804 = bitcast %"class.std::bitset"* %YMM0.i1203 to i8*
  %3805 = load i32, i32* %EDX.i1202
  %3806 = zext i32 %3805 to i64
  %3807 = load i64, i64* %PC.i1201
  %3808 = add i64 %3807, 4
  store i64 %3808, i64* %PC.i1201
  %3809 = sitofp i32 %3805 to double
  %3810 = bitcast i8* %3804 to double*
  store double %3809, double* %3810, align 1
  store %struct.Memory* %loadMem_4adeb6, %struct.Memory** %MEMORY
  %loadMem_4adeba = load %struct.Memory*, %struct.Memory** %MEMORY
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3812 = getelementptr inbounds %struct.GPR, %struct.GPR* %3811, i32 0, i32 33
  %3813 = getelementptr inbounds %struct.Reg, %struct.Reg* %3812, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %3813 to i64*
  %3814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3815 = getelementptr inbounds %struct.GPR, %struct.GPR* %3814, i32 0, i32 1
  %3816 = getelementptr inbounds %struct.Reg, %struct.Reg* %3815, i32 0, i32 0
  %RAX.i1199 = bitcast %union.anon* %3816 to i64*
  %3817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3818 = getelementptr inbounds %struct.GPR, %struct.GPR* %3817, i32 0, i32 15
  %3819 = getelementptr inbounds %struct.Reg, %struct.Reg* %3818, i32 0, i32 0
  %RBP.i1200 = bitcast %union.anon* %3819 to i64*
  %3820 = load i64, i64* %RBP.i1200
  %3821 = sub i64 %3820, 16
  %3822 = load i64, i64* %PC.i1198
  %3823 = add i64 %3822, 4
  store i64 %3823, i64* %PC.i1198
  %3824 = inttoptr i64 %3821 to i32*
  %3825 = load i32, i32* %3824
  %3826 = sext i32 %3825 to i64
  store i64 %3826, i64* %RAX.i1199, align 8
  store %struct.Memory* %loadMem_4adeba, %struct.Memory** %MEMORY
  %loadMem_4adebe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3828 = getelementptr inbounds %struct.GPR, %struct.GPR* %3827, i32 0, i32 33
  %3829 = getelementptr inbounds %struct.Reg, %struct.Reg* %3828, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %3829 to i64*
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3831 = getelementptr inbounds %struct.GPR, %struct.GPR* %3830, i32 0, i32 1
  %3832 = getelementptr inbounds %struct.Reg, %struct.Reg* %3831, i32 0, i32 0
  %RAX.i1195 = bitcast %union.anon* %3832 to i64*
  %3833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3834 = getelementptr inbounds %struct.GPR, %struct.GPR* %3833, i32 0, i32 15
  %3835 = getelementptr inbounds %struct.Reg, %struct.Reg* %3834, i32 0, i32 0
  %RBP.i1196 = bitcast %union.anon* %3835 to i64*
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3837 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3836, i64 0, i64 0
  %YMM0.i1197 = bitcast %union.VectorReg* %3837 to %"class.std::bitset"*
  %3838 = bitcast %"class.std::bitset"* %YMM0.i1197 to i8*
  %3839 = bitcast %"class.std::bitset"* %YMM0.i1197 to i8*
  %3840 = load i64, i64* %RBP.i1196
  %3841 = load i64, i64* %RAX.i1195
  %3842 = mul i64 %3841, 8
  %3843 = add i64 %3840, -160
  %3844 = add i64 %3843, %3842
  %3845 = load i64, i64* %PC.i1194
  %3846 = add i64 %3845, 9
  store i64 %3846, i64* %PC.i1194
  %3847 = bitcast i8* %3839 to double*
  %3848 = load double, double* %3847, align 1
  %3849 = getelementptr inbounds i8, i8* %3839, i64 8
  %3850 = bitcast i8* %3849 to i64*
  %3851 = load i64, i64* %3850, align 1
  %3852 = inttoptr i64 %3844 to double*
  %3853 = load double, double* %3852
  %3854 = fadd double %3848, %3853
  %3855 = bitcast i8* %3838 to double*
  store double %3854, double* %3855, align 1
  %3856 = getelementptr inbounds i8, i8* %3838, i64 8
  %3857 = bitcast i8* %3856 to i64*
  store i64 %3851, i64* %3857, align 1
  store %struct.Memory* %loadMem_4adebe, %struct.Memory** %MEMORY
  %loadMem_4adec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3859 = getelementptr inbounds %struct.GPR, %struct.GPR* %3858, i32 0, i32 33
  %3860 = getelementptr inbounds %struct.Reg, %struct.Reg* %3859, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %3860 to i64*
  %3861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3862 = getelementptr inbounds %struct.GPR, %struct.GPR* %3861, i32 0, i32 1
  %3863 = getelementptr inbounds %struct.Reg, %struct.Reg* %3862, i32 0, i32 0
  %RAX.i1191 = bitcast %union.anon* %3863 to i64*
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3865 = getelementptr inbounds %struct.GPR, %struct.GPR* %3864, i32 0, i32 15
  %3866 = getelementptr inbounds %struct.Reg, %struct.Reg* %3865, i32 0, i32 0
  %RBP.i1192 = bitcast %union.anon* %3866 to i64*
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3868 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3867, i64 0, i64 0
  %XMM0.i1193 = bitcast %union.VectorReg* %3868 to %union.vec128_t*
  %3869 = load i64, i64* %RBP.i1192
  %3870 = load i64, i64* %RAX.i1191
  %3871 = mul i64 %3870, 8
  %3872 = add i64 %3869, -160
  %3873 = add i64 %3872, %3871
  %3874 = bitcast %union.vec128_t* %XMM0.i1193 to i8*
  %3875 = load i64, i64* %PC.i1190
  %3876 = add i64 %3875, 9
  store i64 %3876, i64* %PC.i1190
  %3877 = bitcast i8* %3874 to double*
  %3878 = load double, double* %3877, align 1
  %3879 = inttoptr i64 %3873 to double*
  store double %3878, double* %3879
  store %struct.Memory* %loadMem_4adec7, %struct.Memory** %MEMORY
  %loadMem_4aded0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3881 = getelementptr inbounds %struct.GPR, %struct.GPR* %3880, i32 0, i32 33
  %3882 = getelementptr inbounds %struct.Reg, %struct.Reg* %3881, i32 0, i32 0
  %PC.i1187 = bitcast %union.anon* %3882 to i64*
  %3883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3884 = getelementptr inbounds %struct.GPR, %struct.GPR* %3883, i32 0, i32 1
  %3885 = getelementptr inbounds %struct.Reg, %struct.Reg* %3884, i32 0, i32 0
  %RAX.i1188 = bitcast %union.anon* %3885 to i64*
  %3886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3887 = getelementptr inbounds %struct.GPR, %struct.GPR* %3886, i32 0, i32 15
  %3888 = getelementptr inbounds %struct.Reg, %struct.Reg* %3887, i32 0, i32 0
  %RBP.i1189 = bitcast %union.anon* %3888 to i64*
  %3889 = load i64, i64* %RBP.i1189
  %3890 = sub i64 %3889, 8
  %3891 = load i64, i64* %PC.i1187
  %3892 = add i64 %3891, 3
  store i64 %3892, i64* %PC.i1187
  %3893 = inttoptr i64 %3890 to i32*
  %3894 = load i32, i32* %3893
  %3895 = zext i32 %3894 to i64
  store i64 %3895, i64* %RAX.i1188, align 8
  store %struct.Memory* %loadMem_4aded0, %struct.Memory** %MEMORY
  %loadMem_4aded3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3897 = getelementptr inbounds %struct.GPR, %struct.GPR* %3896, i32 0, i32 33
  %3898 = getelementptr inbounds %struct.Reg, %struct.Reg* %3897, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %3898 to i64*
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3900 = getelementptr inbounds %struct.GPR, %struct.GPR* %3899, i32 0, i32 1
  %3901 = getelementptr inbounds %struct.Reg, %struct.Reg* %3900, i32 0, i32 0
  %RAX.i1186 = bitcast %union.anon* %3901 to i64*
  %3902 = load i64, i64* %RAX.i1186
  %3903 = load i64, i64* %PC.i1185
  %3904 = add i64 %3903, 3
  store i64 %3904, i64* %PC.i1185
  %3905 = trunc i64 %3902 to i32
  %3906 = add i32 1, %3905
  %3907 = zext i32 %3906 to i64
  store i64 %3907, i64* %RAX.i1186, align 8
  %3908 = icmp ult i32 %3906, %3905
  %3909 = icmp ult i32 %3906, 1
  %3910 = or i1 %3908, %3909
  %3911 = zext i1 %3910 to i8
  %3912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3911, i8* %3912, align 1
  %3913 = and i32 %3906, 255
  %3914 = call i32 @llvm.ctpop.i32(i32 %3913)
  %3915 = trunc i32 %3914 to i8
  %3916 = and i8 %3915, 1
  %3917 = xor i8 %3916, 1
  %3918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3917, i8* %3918, align 1
  %3919 = xor i64 1, %3902
  %3920 = trunc i64 %3919 to i32
  %3921 = xor i32 %3920, %3906
  %3922 = lshr i32 %3921, 4
  %3923 = trunc i32 %3922 to i8
  %3924 = and i8 %3923, 1
  %3925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3924, i8* %3925, align 1
  %3926 = icmp eq i32 %3906, 0
  %3927 = zext i1 %3926 to i8
  %3928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3927, i8* %3928, align 1
  %3929 = lshr i32 %3906, 31
  %3930 = trunc i32 %3929 to i8
  %3931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3930, i8* %3931, align 1
  %3932 = lshr i32 %3905, 31
  %3933 = xor i32 %3929, %3932
  %3934 = add i32 %3933, %3929
  %3935 = icmp eq i32 %3934, 2
  %3936 = zext i1 %3935 to i8
  %3937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3936, i8* %3937, align 1
  store %struct.Memory* %loadMem_4aded3, %struct.Memory** %MEMORY
  %loadMem_4aded6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3939 = getelementptr inbounds %struct.GPR, %struct.GPR* %3938, i32 0, i32 33
  %3940 = getelementptr inbounds %struct.Reg, %struct.Reg* %3939, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %3940 to i64*
  %3941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3942 = getelementptr inbounds %struct.GPR, %struct.GPR* %3941, i32 0, i32 1
  %3943 = getelementptr inbounds %struct.Reg, %struct.Reg* %3942, i32 0, i32 0
  %EAX.i1183 = bitcast %union.anon* %3943 to i32*
  %3944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3945 = getelementptr inbounds %struct.GPR, %struct.GPR* %3944, i32 0, i32 15
  %3946 = getelementptr inbounds %struct.Reg, %struct.Reg* %3945, i32 0, i32 0
  %RBP.i1184 = bitcast %union.anon* %3946 to i64*
  %3947 = load i64, i64* %RBP.i1184
  %3948 = sub i64 %3947, 8
  %3949 = load i32, i32* %EAX.i1183
  %3950 = zext i32 %3949 to i64
  %3951 = load i64, i64* %PC.i1182
  %3952 = add i64 %3951, 3
  store i64 %3952, i64* %PC.i1182
  %3953 = inttoptr i64 %3948 to i32*
  store i32 %3949, i32* %3953
  store %struct.Memory* %loadMem_4aded6, %struct.Memory** %MEMORY
  %loadMem_4aded9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3955 = getelementptr inbounds %struct.GPR, %struct.GPR* %3954, i32 0, i32 33
  %3956 = getelementptr inbounds %struct.Reg, %struct.Reg* %3955, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %3956 to i64*
  %3957 = load i64, i64* %PC.i1181
  %3958 = add i64 %3957, -84
  %3959 = load i64, i64* %PC.i1181
  %3960 = add i64 %3959, 5
  store i64 %3960, i64* %PC.i1181
  %3961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3958, i64* %3961, align 8
  store %struct.Memory* %loadMem_4aded9, %struct.Memory** %MEMORY
  br label %block_.L_4ade85

block_.L_4adede:                                  ; preds = %block_.L_4ade85
  %loadMem_4adede = load %struct.Memory*, %struct.Memory** %MEMORY
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3963 = getelementptr inbounds %struct.GPR, %struct.GPR* %3962, i32 0, i32 33
  %3964 = getelementptr inbounds %struct.Reg, %struct.Reg* %3963, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %3964 to i64*
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3966 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3965, i64 0, i64 0
  %YMM0.i1179 = bitcast %union.VectorReg* %3966 to %"class.std::bitset"*
  %3967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3968 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3967, i64 0, i64 0
  %XMM0.i1180 = bitcast %union.VectorReg* %3968 to %union.vec128_t*
  %3969 = bitcast %"class.std::bitset"* %YMM0.i1179 to i8*
  %3970 = bitcast %"class.std::bitset"* %YMM0.i1179 to i8*
  %3971 = bitcast %union.vec128_t* %XMM0.i1180 to i8*
  %3972 = load i64, i64* %PC.i1178
  %3973 = add i64 %3972, 3
  store i64 %3973, i64* %PC.i1178
  %3974 = bitcast i8* %3970 to i64*
  %3975 = load i64, i64* %3974, align 1
  %3976 = getelementptr inbounds i8, i8* %3970, i64 8
  %3977 = bitcast i8* %3976 to i64*
  %3978 = load i64, i64* %3977, align 1
  %3979 = bitcast i8* %3971 to i64*
  %3980 = load i64, i64* %3979, align 1
  %3981 = getelementptr inbounds i8, i8* %3971, i64 8
  %3982 = bitcast i8* %3981 to i64*
  %3983 = load i64, i64* %3982, align 1
  %3984 = xor i64 %3980, %3975
  %3985 = xor i64 %3983, %3978
  %3986 = trunc i64 %3984 to i32
  %3987 = lshr i64 %3984, 32
  %3988 = trunc i64 %3987 to i32
  %3989 = bitcast i8* %3969 to i32*
  store i32 %3986, i32* %3989, align 1
  %3990 = getelementptr inbounds i8, i8* %3969, i64 4
  %3991 = bitcast i8* %3990 to i32*
  store i32 %3988, i32* %3991, align 1
  %3992 = trunc i64 %3985 to i32
  %3993 = getelementptr inbounds i8, i8* %3969, i64 8
  %3994 = bitcast i8* %3993 to i32*
  store i32 %3992, i32* %3994, align 1
  %3995 = lshr i64 %3985, 32
  %3996 = trunc i64 %3995 to i32
  %3997 = getelementptr inbounds i8, i8* %3969, i64 12
  %3998 = bitcast i8* %3997 to i32*
  store i32 %3996, i32* %3998, align 1
  store %struct.Memory* %loadMem_4adede, %struct.Memory** %MEMORY
  %loadMem_4adee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4000 = getelementptr inbounds %struct.GPR, %struct.GPR* %3999, i32 0, i32 33
  %4001 = getelementptr inbounds %struct.Reg, %struct.Reg* %4000, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %4001 to i64*
  %4002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4003 = getelementptr inbounds %struct.GPR, %struct.GPR* %4002, i32 0, i32 15
  %4004 = getelementptr inbounds %struct.Reg, %struct.Reg* %4003, i32 0, i32 0
  %RBP.i1176 = bitcast %union.anon* %4004 to i64*
  %4005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4006 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4005, i64 0, i64 1
  %YMM1.i1177 = bitcast %union.VectorReg* %4006 to %"class.std::bitset"*
  %4007 = bitcast %"class.std::bitset"* %YMM1.i1177 to i8*
  %4008 = load i64, i64* %RBP.i1176
  %4009 = sub i64 %4008, 4
  %4010 = load i64, i64* %PC.i1175
  %4011 = add i64 %4010, 5
  store i64 %4011, i64* %PC.i1175
  %4012 = inttoptr i64 %4009 to i32*
  %4013 = load i32, i32* %4012
  %4014 = sitofp i32 %4013 to double
  %4015 = bitcast i8* %4007 to double*
  store double %4014, double* %4015, align 1
  store %struct.Memory* %loadMem_4adee1, %struct.Memory** %MEMORY
  %loadMem_4adee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4017 = getelementptr inbounds %struct.GPR, %struct.GPR* %4016, i32 0, i32 33
  %4018 = getelementptr inbounds %struct.Reg, %struct.Reg* %4017, i32 0, i32 0
  %PC.i1169 = bitcast %union.anon* %4018 to i64*
  %4019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4020 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4019, i64 0, i64 0
  %XMM0.i1170 = bitcast %union.VectorReg* %4020 to %union.vec128_t*
  %4021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4022 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4021, i64 0, i64 1
  %XMM1.i1171 = bitcast %union.VectorReg* %4022 to %union.vec128_t*
  %4023 = bitcast %union.vec128_t* %XMM1.i1171 to i8*
  %4024 = bitcast %union.vec128_t* %XMM0.i1170 to i8*
  %4025 = load i64, i64* %PC.i1169
  %4026 = add i64 %4025, 4
  store i64 %4026, i64* %PC.i1169
  %4027 = bitcast i8* %4023 to double*
  %4028 = load double, double* %4027, align 1
  %4029 = bitcast i8* %4024 to double*
  %4030 = load double, double* %4029, align 1
  %4031 = fcmp uno double %4028, %4030
  br i1 %4031, label %4032, label %4044

; <label>:4032:                                   ; preds = %block_.L_4adede
  %4033 = fadd double %4028, %4030
  %4034 = bitcast double %4033 to i64
  %4035 = and i64 %4034, 9221120237041090560
  %4036 = icmp eq i64 %4035, 9218868437227405312
  %4037 = and i64 %4034, 2251799813685247
  %4038 = icmp ne i64 %4037, 0
  %4039 = and i1 %4036, %4038
  br i1 %4039, label %4040, label %4050

; <label>:4040:                                   ; preds = %4032
  %4041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4042 = load i64, i64* %4041, align 8
  %4043 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4042, %struct.Memory* %loadMem_4adee6)
  br label %routine_ucomisd__xmm0___xmm1.exit1172

; <label>:4044:                                   ; preds = %block_.L_4adede
  %4045 = fcmp ogt double %4028, %4030
  br i1 %4045, label %4050, label %4046

; <label>:4046:                                   ; preds = %4044
  %4047 = fcmp olt double %4028, %4030
  br i1 %4047, label %4050, label %4048

; <label>:4048:                                   ; preds = %4046
  %4049 = fcmp oeq double %4028, %4030
  br i1 %4049, label %4050, label %4057

; <label>:4050:                                   ; preds = %4048, %4046, %4044, %4032
  %4051 = phi i8 [ 0, %4044 ], [ 0, %4046 ], [ 1, %4048 ], [ 1, %4032 ]
  %4052 = phi i8 [ 0, %4044 ], [ 0, %4046 ], [ 0, %4048 ], [ 1, %4032 ]
  %4053 = phi i8 [ 0, %4044 ], [ 1, %4046 ], [ 0, %4048 ], [ 1, %4032 ]
  %4054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4051, i8* %4054, align 1
  %4055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4052, i8* %4055, align 1
  %4056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4053, i8* %4056, align 1
  br label %4057

; <label>:4057:                                   ; preds = %4050, %4048
  %4058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4058, align 1
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4059, align 1
  %4060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4060, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit1172

routine_ucomisd__xmm0___xmm1.exit1172:            ; preds = %4040, %4057
  %4061 = phi %struct.Memory* [ %4043, %4040 ], [ %loadMem_4adee6, %4057 ]
  store %struct.Memory* %4061, %struct.Memory** %MEMORY
  %loadMem_4adeea = load %struct.Memory*, %struct.Memory** %MEMORY
  %4062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4063 = getelementptr inbounds %struct.GPR, %struct.GPR* %4062, i32 0, i32 33
  %4064 = getelementptr inbounds %struct.Reg, %struct.Reg* %4063, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %4064 to i64*
  %4065 = load i64, i64* %PC.i1168
  %4066 = add i64 %4065, 312
  %4067 = load i64, i64* %PC.i1168
  %4068 = add i64 %4067, 6
  %4069 = load i64, i64* %PC.i1168
  %4070 = add i64 %4069, 6
  store i64 %4070, i64* %PC.i1168
  %4071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4072 = load i8, i8* %4071, align 1
  %4073 = icmp eq i8 %4072, 0
  %4074 = zext i1 %4073 to i8
  store i8 %4074, i8* %BRANCH_TAKEN, align 1
  %4075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4076 = select i1 %4073, i64 %4066, i64 %4068
  store i64 %4076, i64* %4075, align 8
  store %struct.Memory* %loadMem_4adeea, %struct.Memory** %MEMORY
  %loadBr_4adeea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4adeea = icmp eq i8 %loadBr_4adeea, 1
  br i1 %cmpBr_4adeea, label %block_.L_4ae022, label %block_4adef0

block_4adef0:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit1172
  %loadMem_4adef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4078 = getelementptr inbounds %struct.GPR, %struct.GPR* %4077, i32 0, i32 33
  %4079 = getelementptr inbounds %struct.Reg, %struct.Reg* %4078, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %4079 to i64*
  %4080 = load i64, i64* %PC.i1167
  %4081 = add i64 %4080, 306
  %4082 = load i64, i64* %PC.i1167
  %4083 = add i64 %4082, 6
  %4084 = load i64, i64* %PC.i1167
  %4085 = add i64 %4084, 6
  store i64 %4085, i64* %PC.i1167
  %4086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4087 = load i8, i8* %4086, align 1
  store i8 %4087, i8* %BRANCH_TAKEN, align 1
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4089 = icmp ne i8 %4087, 0
  %4090 = select i1 %4089, i64 %4081, i64 %4083
  store i64 %4090, i64* %4088, align 8
  store %struct.Memory* %loadMem_4adef0, %struct.Memory** %MEMORY
  %loadBr_4adef0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4adef0 = icmp eq i8 %loadBr_4adef0, 1
  br i1 %cmpBr_4adef0, label %block_.L_4ae022, label %block_4adef6

block_4adef6:                                     ; preds = %block_4adef0
  %loadMem_4adef6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4092 = getelementptr inbounds %struct.GPR, %struct.GPR* %4091, i32 0, i32 33
  %4093 = getelementptr inbounds %struct.Reg, %struct.Reg* %4092, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %4093 to i64*
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4095 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4094, i64 0, i64 0
  %YMM0.i1165 = bitcast %union.VectorReg* %4095 to %"class.std::bitset"*
  %4096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4097 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4096, i64 0, i64 0
  %XMM0.i1166 = bitcast %union.VectorReg* %4097 to %union.vec128_t*
  %4098 = bitcast %"class.std::bitset"* %YMM0.i1165 to i8*
  %4099 = bitcast %"class.std::bitset"* %YMM0.i1165 to i8*
  %4100 = bitcast %union.vec128_t* %XMM0.i1166 to i8*
  %4101 = load i64, i64* %PC.i1164
  %4102 = add i64 %4101, 3
  store i64 %4102, i64* %PC.i1164
  %4103 = bitcast i8* %4099 to i64*
  %4104 = load i64, i64* %4103, align 1
  %4105 = getelementptr inbounds i8, i8* %4099, i64 8
  %4106 = bitcast i8* %4105 to i64*
  %4107 = load i64, i64* %4106, align 1
  %4108 = bitcast i8* %4100 to i64*
  %4109 = load i64, i64* %4108, align 1
  %4110 = getelementptr inbounds i8, i8* %4100, i64 8
  %4111 = bitcast i8* %4110 to i64*
  %4112 = load i64, i64* %4111, align 1
  %4113 = xor i64 %4109, %4104
  %4114 = xor i64 %4112, %4107
  %4115 = trunc i64 %4113 to i32
  %4116 = lshr i64 %4113, 32
  %4117 = trunc i64 %4116 to i32
  %4118 = bitcast i8* %4098 to i32*
  store i32 %4115, i32* %4118, align 1
  %4119 = getelementptr inbounds i8, i8* %4098, i64 4
  %4120 = bitcast i8* %4119 to i32*
  store i32 %4117, i32* %4120, align 1
  %4121 = trunc i64 %4114 to i32
  %4122 = getelementptr inbounds i8, i8* %4098, i64 8
  %4123 = bitcast i8* %4122 to i32*
  store i32 %4121, i32* %4123, align 1
  %4124 = lshr i64 %4114, 32
  %4125 = trunc i64 %4124 to i32
  %4126 = getelementptr inbounds i8, i8* %4098, i64 12
  %4127 = bitcast i8* %4126 to i32*
  store i32 %4125, i32* %4127, align 1
  store %struct.Memory* %loadMem_4adef6, %struct.Memory** %MEMORY
  %loadMem_4adef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4129 = getelementptr inbounds %struct.GPR, %struct.GPR* %4128, i32 0, i32 33
  %4130 = getelementptr inbounds %struct.Reg, %struct.Reg* %4129, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %4130 to i64*
  %4131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4132 = getelementptr inbounds %struct.GPR, %struct.GPR* %4131, i32 0, i32 1
  %4133 = getelementptr inbounds %struct.Reg, %struct.Reg* %4132, i32 0, i32 0
  %RAX.i1162 = bitcast %union.anon* %4133 to i64*
  %4134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4135 = getelementptr inbounds %struct.GPR, %struct.GPR* %4134, i32 0, i32 15
  %4136 = getelementptr inbounds %struct.Reg, %struct.Reg* %4135, i32 0, i32 0
  %RBP.i1163 = bitcast %union.anon* %4136 to i64*
  %4137 = load i64, i64* %RBP.i1163
  %4138 = sub i64 %4137, 16
  %4139 = load i64, i64* %PC.i1161
  %4140 = add i64 %4139, 4
  store i64 %4140, i64* %PC.i1161
  %4141 = inttoptr i64 %4138 to i32*
  %4142 = load i32, i32* %4141
  %4143 = sext i32 %4142 to i64
  store i64 %4143, i64* %RAX.i1162, align 8
  store %struct.Memory* %loadMem_4adef9, %struct.Memory** %MEMORY
  %loadMem_4adefd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4145 = getelementptr inbounds %struct.GPR, %struct.GPR* %4144, i32 0, i32 33
  %4146 = getelementptr inbounds %struct.Reg, %struct.Reg* %4145, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %4146 to i64*
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4148 = getelementptr inbounds %struct.GPR, %struct.GPR* %4147, i32 0, i32 1
  %4149 = getelementptr inbounds %struct.Reg, %struct.Reg* %4148, i32 0, i32 0
  %RAX.i1158 = bitcast %union.anon* %4149 to i64*
  %4150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4151 = getelementptr inbounds %struct.GPR, %struct.GPR* %4150, i32 0, i32 15
  %4152 = getelementptr inbounds %struct.Reg, %struct.Reg* %4151, i32 0, i32 0
  %RBP.i1159 = bitcast %union.anon* %4152 to i64*
  %4153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4154 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4153, i64 0, i64 1
  %YMM1.i1160 = bitcast %union.VectorReg* %4154 to %"class.std::bitset"*
  %4155 = bitcast %"class.std::bitset"* %YMM1.i1160 to i8*
  %4156 = load i64, i64* %RBP.i1159
  %4157 = load i64, i64* %RAX.i1158
  %4158 = mul i64 %4157, 8
  %4159 = add i64 %4156, -160
  %4160 = add i64 %4159, %4158
  %4161 = load i64, i64* %PC.i1157
  %4162 = add i64 %4161, 9
  store i64 %4162, i64* %PC.i1157
  %4163 = inttoptr i64 %4160 to double*
  %4164 = load double, double* %4163
  %4165 = bitcast i8* %4155 to double*
  store double %4164, double* %4165, align 1
  %4166 = getelementptr inbounds i8, i8* %4155, i64 8
  %4167 = bitcast i8* %4166 to double*
  store double 0.000000e+00, double* %4167, align 1
  store %struct.Memory* %loadMem_4adefd, %struct.Memory** %MEMORY
  %loadMem_4adf06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4169 = getelementptr inbounds %struct.GPR, %struct.GPR* %4168, i32 0, i32 33
  %4170 = getelementptr inbounds %struct.Reg, %struct.Reg* %4169, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %4170 to i64*
  %4171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4172 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4171, i64 0, i64 0
  %XMM0.i1152 = bitcast %union.VectorReg* %4172 to %union.vec128_t*
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4174 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4173, i64 0, i64 1
  %XMM1.i1153 = bitcast %union.VectorReg* %4174 to %union.vec128_t*
  %4175 = bitcast %union.vec128_t* %XMM1.i1153 to i8*
  %4176 = bitcast %union.vec128_t* %XMM0.i1152 to i8*
  %4177 = load i64, i64* %PC.i1151
  %4178 = add i64 %4177, 4
  store i64 %4178, i64* %PC.i1151
  %4179 = bitcast i8* %4175 to double*
  %4180 = load double, double* %4179, align 1
  %4181 = bitcast i8* %4176 to double*
  %4182 = load double, double* %4181, align 1
  %4183 = fcmp uno double %4180, %4182
  br i1 %4183, label %4184, label %4196

; <label>:4184:                                   ; preds = %block_4adef6
  %4185 = fadd double %4180, %4182
  %4186 = bitcast double %4185 to i64
  %4187 = and i64 %4186, 9221120237041090560
  %4188 = icmp eq i64 %4187, 9218868437227405312
  %4189 = and i64 %4186, 2251799813685247
  %4190 = icmp ne i64 %4189, 0
  %4191 = and i1 %4188, %4190
  br i1 %4191, label %4192, label %4202

; <label>:4192:                                   ; preds = %4184
  %4193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4194 = load i64, i64* %4193, align 8
  %4195 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4194, %struct.Memory* %loadMem_4adf06)
  br label %routine_ucomisd__xmm0___xmm1.exit

; <label>:4196:                                   ; preds = %block_4adef6
  %4197 = fcmp ogt double %4180, %4182
  br i1 %4197, label %4202, label %4198

; <label>:4198:                                   ; preds = %4196
  %4199 = fcmp olt double %4180, %4182
  br i1 %4199, label %4202, label %4200

; <label>:4200:                                   ; preds = %4198
  %4201 = fcmp oeq double %4180, %4182
  br i1 %4201, label %4202, label %4209

; <label>:4202:                                   ; preds = %4200, %4198, %4196, %4184
  %4203 = phi i8 [ 0, %4196 ], [ 0, %4198 ], [ 1, %4200 ], [ 1, %4184 ]
  %4204 = phi i8 [ 0, %4196 ], [ 0, %4198 ], [ 0, %4200 ], [ 1, %4184 ]
  %4205 = phi i8 [ 0, %4196 ], [ 1, %4198 ], [ 0, %4200 ], [ 1, %4184 ]
  %4206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4203, i8* %4206, align 1
  %4207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4204, i8* %4207, align 1
  %4208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4205, i8* %4208, align 1
  br label %4209

; <label>:4209:                                   ; preds = %4202, %4200
  %4210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4210, align 1
  %4211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4211, align 1
  %4212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4212, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit

routine_ucomisd__xmm0___xmm1.exit:                ; preds = %4192, %4209
  %4213 = phi %struct.Memory* [ %4195, %4192 ], [ %loadMem_4adf06, %4209 ]
  store %struct.Memory* %4213, %struct.Memory** %MEMORY
  %loadMem_4adf0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4215 = getelementptr inbounds %struct.GPR, %struct.GPR* %4214, i32 0, i32 33
  %4216 = getelementptr inbounds %struct.Reg, %struct.Reg* %4215, i32 0, i32 0
  %PC.i1150 = bitcast %union.anon* %4216 to i64*
  %4217 = load i64, i64* %PC.i1150
  %4218 = add i64 %4217, 17
  %4219 = load i64, i64* %PC.i1150
  %4220 = add i64 %4219, 6
  %4221 = load i64, i64* %PC.i1150
  %4222 = add i64 %4221, 6
  store i64 %4222, i64* %PC.i1150
  %4223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4224 = load i8, i8* %4223, align 1
  %4225 = icmp eq i8 %4224, 0
  %4226 = zext i1 %4225 to i8
  store i8 %4226, i8* %BRANCH_TAKEN, align 1
  %4227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4228 = select i1 %4225, i64 %4218, i64 %4220
  store i64 %4228, i64* %4227, align 8
  store %struct.Memory* %loadMem_4adf0a, %struct.Memory** %MEMORY
  %loadBr_4adf0a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4adf0a = icmp eq i8 %loadBr_4adf0a, 1
  br i1 %cmpBr_4adf0a, label %block_.L_4adf1b, label %block_4adf10

block_4adf10:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit
  %loadMem_4adf10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4230 = getelementptr inbounds %struct.GPR, %struct.GPR* %4229, i32 0, i32 33
  %4231 = getelementptr inbounds %struct.Reg, %struct.Reg* %4230, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %4231 to i64*
  %4232 = load i64, i64* %PC.i1149
  %4233 = add i64 %4232, 11
  %4234 = load i64, i64* %PC.i1149
  %4235 = add i64 %4234, 6
  %4236 = load i64, i64* %PC.i1149
  %4237 = add i64 %4236, 6
  store i64 %4237, i64* %PC.i1149
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4239 = load i8, i8* %4238, align 1
  store i8 %4239, i8* %BRANCH_TAKEN, align 1
  %4240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4241 = icmp ne i8 %4239, 0
  %4242 = select i1 %4241, i64 %4233, i64 %4235
  store i64 %4242, i64* %4240, align 8
  store %struct.Memory* %loadMem_4adf10, %struct.Memory** %MEMORY
  %loadBr_4adf10 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4adf10 = icmp eq i8 %loadBr_4adf10, 1
  br i1 %cmpBr_4adf10, label %block_.L_4adf1b, label %block_4adf16

block_4adf16:                                     ; preds = %block_4adf10
  %loadMem_4adf16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4244 = getelementptr inbounds %struct.GPR, %struct.GPR* %4243, i32 0, i32 33
  %4245 = getelementptr inbounds %struct.Reg, %struct.Reg* %4244, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %4245 to i64*
  %4246 = load i64, i64* %PC.i1148
  %4247 = add i64 %4246, 89
  %4248 = load i64, i64* %PC.i1148
  %4249 = add i64 %4248, 5
  store i64 %4249, i64* %PC.i1148
  %4250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4247, i64* %4250, align 8
  store %struct.Memory* %loadMem_4adf16, %struct.Memory** %MEMORY
  br label %block_.L_4adf6f

block_.L_4adf1b:                                  ; preds = %block_4adf10, %routine_ucomisd__xmm0___xmm1.exit
  %loadMem_4adf1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4252 = getelementptr inbounds %struct.GPR, %struct.GPR* %4251, i32 0, i32 33
  %4253 = getelementptr inbounds %struct.Reg, %struct.Reg* %4252, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %4253 to i64*
  %4254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4255 = getelementptr inbounds %struct.GPR, %struct.GPR* %4254, i32 0, i32 1
  %4256 = getelementptr inbounds %struct.Reg, %struct.Reg* %4255, i32 0, i32 0
  %RAX.i1146 = bitcast %union.anon* %4256 to i64*
  %4257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4258 = getelementptr inbounds %struct.GPR, %struct.GPR* %4257, i32 0, i32 15
  %4259 = getelementptr inbounds %struct.Reg, %struct.Reg* %4258, i32 0, i32 0
  %RBP.i1147 = bitcast %union.anon* %4259 to i64*
  %4260 = load i64, i64* %RBP.i1147
  %4261 = sub i64 %4260, 560
  %4262 = load i64, i64* %PC.i1145
  %4263 = add i64 %4262, 7
  store i64 %4263, i64* %PC.i1145
  store i64 %4261, i64* %RAX.i1146, align 8
  store %struct.Memory* %loadMem_4adf1b, %struct.Memory** %MEMORY
  %loadMem_4adf22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4265 = getelementptr inbounds %struct.GPR, %struct.GPR* %4264, i32 0, i32 33
  %4266 = getelementptr inbounds %struct.Reg, %struct.Reg* %4265, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %4266 to i64*
  %4267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4268 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4267, i64 0, i64 0
  %YMM0.i1144 = bitcast %union.VectorReg* %4268 to %"class.std::bitset"*
  %4269 = bitcast %"class.std::bitset"* %YMM0.i1144 to i8*
  %4270 = load i64, i64* %PC.i1143
  %4271 = add i64 %4270, ptrtoint (%G_0x395e__rip__type* @G_0x395e__rip_ to i64)
  %4272 = load i64, i64* %PC.i1143
  %4273 = add i64 %4272, 8
  store i64 %4273, i64* %PC.i1143
  %4274 = inttoptr i64 %4271 to double*
  %4275 = load double, double* %4274
  %4276 = bitcast i8* %4269 to double*
  store double %4275, double* %4276, align 1
  %4277 = getelementptr inbounds i8, i8* %4269, i64 8
  %4278 = bitcast i8* %4277 to double*
  store double 0.000000e+00, double* %4278, align 1
  store %struct.Memory* %loadMem_4adf22, %struct.Memory** %MEMORY
  %loadMem_4adf2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4280 = getelementptr inbounds %struct.GPR, %struct.GPR* %4279, i32 0, i32 33
  %4281 = getelementptr inbounds %struct.Reg, %struct.Reg* %4280, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %4281 to i64*
  %4282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4283 = getelementptr inbounds %struct.GPR, %struct.GPR* %4282, i32 0, i32 15
  %4284 = getelementptr inbounds %struct.Reg, %struct.Reg* %4283, i32 0, i32 0
  %RBP.i1141 = bitcast %union.anon* %4284 to i64*
  %4285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4286 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4285, i64 0, i64 1
  %YMM1.i1142 = bitcast %union.VectorReg* %4286 to %"class.std::bitset"*
  %4287 = bitcast %"class.std::bitset"* %YMM1.i1142 to i8*
  %4288 = load i64, i64* %RBP.i1141
  %4289 = sub i64 %4288, 188
  %4290 = load i64, i64* %PC.i1140
  %4291 = add i64 %4290, 8
  store i64 %4291, i64* %PC.i1140
  %4292 = inttoptr i64 %4289 to i32*
  %4293 = load i32, i32* %4292
  %4294 = sitofp i32 %4293 to double
  %4295 = bitcast i8* %4287 to double*
  store double %4294, double* %4295, align 1
  store %struct.Memory* %loadMem_4adf2a, %struct.Memory** %MEMORY
  %loadMem_4adf32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4297 = getelementptr inbounds %struct.GPR, %struct.GPR* %4296, i32 0, i32 33
  %4298 = getelementptr inbounds %struct.Reg, %struct.Reg* %4297, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %4298 to i64*
  %4299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4300 = getelementptr inbounds %struct.GPR, %struct.GPR* %4299, i32 0, i32 15
  %4301 = getelementptr inbounds %struct.Reg, %struct.Reg* %4300, i32 0, i32 0
  %RBP.i1138 = bitcast %union.anon* %4301 to i64*
  %4302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4302, i64 0, i64 1
  %YMM1.i1139 = bitcast %union.VectorReg* %4303 to %"class.std::bitset"*
  %4304 = bitcast %"class.std::bitset"* %YMM1.i1139 to i8*
  %4305 = bitcast %"class.std::bitset"* %YMM1.i1139 to i8*
  %4306 = load i64, i64* %RBP.i1138
  %4307 = sub i64 %4306, 24
  %4308 = load i64, i64* %PC.i1137
  %4309 = add i64 %4308, 5
  store i64 %4309, i64* %PC.i1137
  %4310 = bitcast i8* %4305 to double*
  %4311 = load double, double* %4310, align 1
  %4312 = getelementptr inbounds i8, i8* %4305, i64 8
  %4313 = bitcast i8* %4312 to i64*
  %4314 = load i64, i64* %4313, align 1
  %4315 = inttoptr i64 %4307 to double*
  %4316 = load double, double* %4315
  %4317 = fmul double %4311, %4316
  %4318 = bitcast i8* %4304 to double*
  store double %4317, double* %4318, align 1
  %4319 = getelementptr inbounds i8, i8* %4304, i64 8
  %4320 = bitcast i8* %4319 to i64*
  store i64 %4314, i64* %4320, align 1
  store %struct.Memory* %loadMem_4adf32, %struct.Memory** %MEMORY
  %loadMem_4adf37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4322 = getelementptr inbounds %struct.GPR, %struct.GPR* %4321, i32 0, i32 33
  %4323 = getelementptr inbounds %struct.Reg, %struct.Reg* %4322, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %4323 to i64*
  %4324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4325 = getelementptr inbounds %struct.GPR, %struct.GPR* %4324, i32 0, i32 5
  %4326 = getelementptr inbounds %struct.Reg, %struct.Reg* %4325, i32 0, i32 0
  %RCX.i1135 = bitcast %union.anon* %4326 to i64*
  %4327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4328 = getelementptr inbounds %struct.GPR, %struct.GPR* %4327, i32 0, i32 15
  %4329 = getelementptr inbounds %struct.Reg, %struct.Reg* %4328, i32 0, i32 0
  %RBP.i1136 = bitcast %union.anon* %4329 to i64*
  %4330 = load i64, i64* %RBP.i1136
  %4331 = sub i64 %4330, 16
  %4332 = load i64, i64* %PC.i1134
  %4333 = add i64 %4332, 4
  store i64 %4333, i64* %PC.i1134
  %4334 = inttoptr i64 %4331 to i32*
  %4335 = load i32, i32* %4334
  %4336 = sext i32 %4335 to i64
  store i64 %4336, i64* %RCX.i1135, align 8
  store %struct.Memory* %loadMem_4adf37, %struct.Memory** %MEMORY
  %loadMem_4adf3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4338 = getelementptr inbounds %struct.GPR, %struct.GPR* %4337, i32 0, i32 33
  %4339 = getelementptr inbounds %struct.Reg, %struct.Reg* %4338, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %4339 to i64*
  %4340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4341 = getelementptr inbounds %struct.GPR, %struct.GPR* %4340, i32 0, i32 5
  %4342 = getelementptr inbounds %struct.Reg, %struct.Reg* %4341, i32 0, i32 0
  %RCX.i1131 = bitcast %union.anon* %4342 to i64*
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4344 = getelementptr inbounds %struct.GPR, %struct.GPR* %4343, i32 0, i32 15
  %4345 = getelementptr inbounds %struct.Reg, %struct.Reg* %4344, i32 0, i32 0
  %RBP.i1132 = bitcast %union.anon* %4345 to i64*
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4347 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4346, i64 0, i64 1
  %YMM1.i1133 = bitcast %union.VectorReg* %4347 to %"class.std::bitset"*
  %4348 = bitcast %"class.std::bitset"* %YMM1.i1133 to i8*
  %4349 = bitcast %"class.std::bitset"* %YMM1.i1133 to i8*
  %4350 = load i64, i64* %RBP.i1132
  %4351 = load i64, i64* %RCX.i1131
  %4352 = mul i64 %4351, 8
  %4353 = add i64 %4350, -160
  %4354 = add i64 %4353, %4352
  %4355 = load i64, i64* %PC.i1130
  %4356 = add i64 %4355, 9
  store i64 %4356, i64* %PC.i1130
  %4357 = bitcast i8* %4349 to double*
  %4358 = load double, double* %4357, align 1
  %4359 = getelementptr inbounds i8, i8* %4349, i64 8
  %4360 = bitcast i8* %4359 to i64*
  %4361 = load i64, i64* %4360, align 1
  %4362 = inttoptr i64 %4354 to double*
  %4363 = load double, double* %4362
  %4364 = fdiv double %4358, %4363
  %4365 = bitcast i8* %4348 to double*
  store double %4364, double* %4365, align 1
  %4366 = getelementptr inbounds i8, i8* %4348, i64 8
  %4367 = bitcast i8* %4366 to i64*
  store i64 %4361, i64* %4367, align 1
  store %struct.Memory* %loadMem_4adf3b, %struct.Memory** %MEMORY
  %loadMem_4adf44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4369 = getelementptr inbounds %struct.GPR, %struct.GPR* %4368, i32 0, i32 33
  %4370 = getelementptr inbounds %struct.Reg, %struct.Reg* %4369, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %4370 to i64*
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4372 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4371, i64 0, i64 1
  %YMM1.i1128 = bitcast %union.VectorReg* %4372 to %"class.std::bitset"*
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4374 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4373, i64 0, i64 0
  %XMM0.i1129 = bitcast %union.VectorReg* %4374 to %union.vec128_t*
  %4375 = bitcast %"class.std::bitset"* %YMM1.i1128 to i8*
  %4376 = bitcast %"class.std::bitset"* %YMM1.i1128 to i8*
  %4377 = bitcast %union.vec128_t* %XMM0.i1129 to i8*
  %4378 = load i64, i64* %PC.i1127
  %4379 = add i64 %4378, 4
  store i64 %4379, i64* %PC.i1127
  %4380 = bitcast i8* %4376 to double*
  %4381 = load double, double* %4380, align 1
  %4382 = getelementptr inbounds i8, i8* %4376, i64 8
  %4383 = bitcast i8* %4382 to i64*
  %4384 = load i64, i64* %4383, align 1
  %4385 = bitcast i8* %4377 to double*
  %4386 = load double, double* %4385, align 1
  %4387 = fadd double %4381, %4386
  %4388 = bitcast i8* %4375 to double*
  store double %4387, double* %4388, align 1
  %4389 = getelementptr inbounds i8, i8* %4375, i64 8
  %4390 = bitcast i8* %4389 to i64*
  store i64 %4384, i64* %4390, align 1
  store %struct.Memory* %loadMem_4adf44, %struct.Memory** %MEMORY
  %loadMem_4adf48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4392 = getelementptr inbounds %struct.GPR, %struct.GPR* %4391, i32 0, i32 33
  %4393 = getelementptr inbounds %struct.Reg, %struct.Reg* %4392, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %4393 to i64*
  %4394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4395 = getelementptr inbounds %struct.GPR, %struct.GPR* %4394, i32 0, i32 7
  %4396 = getelementptr inbounds %struct.Reg, %struct.Reg* %4395, i32 0, i32 0
  %RDX.i1125 = bitcast %union.anon* %4396 to i64*
  %4397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4398 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4397, i64 0, i64 1
  %XMM1.i1126 = bitcast %union.VectorReg* %4398 to %union.vec128_t*
  %4399 = bitcast %union.vec128_t* %XMM1.i1126 to i8*
  %4400 = load i64, i64* %PC.i1124
  %4401 = add i64 %4400, 4
  store i64 %4401, i64* %PC.i1124
  %4402 = bitcast i8* %4399 to double*
  %4403 = load double, double* %4402, align 1
  %4404 = call double @llvm.trunc.f64(double %4403)
  %4405 = call double @llvm.fabs.f64(double %4404)
  %4406 = fcmp ogt double %4405, 0x41DFFFFFFFC00000
  %4407 = fptosi double %4404 to i32
  %4408 = zext i32 %4407 to i64
  %4409 = select i1 %4406, i64 2147483648, i64 %4408
  store i64 %4409, i64* %RDX.i1125, align 8
  store %struct.Memory* %loadMem_4adf48, %struct.Memory** %MEMORY
  %loadMem_4adf4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4411 = getelementptr inbounds %struct.GPR, %struct.GPR* %4410, i32 0, i32 33
  %4412 = getelementptr inbounds %struct.Reg, %struct.Reg* %4411, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %4412 to i64*
  %4413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4414 = getelementptr inbounds %struct.GPR, %struct.GPR* %4413, i32 0, i32 5
  %4415 = getelementptr inbounds %struct.Reg, %struct.Reg* %4414, i32 0, i32 0
  %RCX.i1122 = bitcast %union.anon* %4415 to i64*
  %4416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4417 = getelementptr inbounds %struct.GPR, %struct.GPR* %4416, i32 0, i32 15
  %4418 = getelementptr inbounds %struct.Reg, %struct.Reg* %4417, i32 0, i32 0
  %RBP.i1123 = bitcast %union.anon* %4418 to i64*
  %4419 = load i64, i64* %RBP.i1123
  %4420 = sub i64 %4419, 932
  %4421 = load i64, i64* %PC.i1121
  %4422 = add i64 %4421, 7
  store i64 %4422, i64* %PC.i1121
  %4423 = inttoptr i64 %4420 to i32*
  %4424 = load i32, i32* %4423
  %4425 = sext i32 %4424 to i64
  store i64 %4425, i64* %RCX.i1122, align 8
  store %struct.Memory* %loadMem_4adf4c, %struct.Memory** %MEMORY
  %loadMem_4adf53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4427 = getelementptr inbounds %struct.GPR, %struct.GPR* %4426, i32 0, i32 33
  %4428 = getelementptr inbounds %struct.Reg, %struct.Reg* %4427, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %4428 to i64*
  %4429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4430 = getelementptr inbounds %struct.GPR, %struct.GPR* %4429, i32 0, i32 5
  %4431 = getelementptr inbounds %struct.Reg, %struct.Reg* %4430, i32 0, i32 0
  %RCX.i1120 = bitcast %union.anon* %4431 to i64*
  %4432 = load i64, i64* %RCX.i1120
  %4433 = load i64, i64* %PC.i1119
  %4434 = add i64 %4433, 7
  store i64 %4434, i64* %PC.i1119
  %4435 = sext i64 %4432 to i128
  %4436 = and i128 %4435, -18446744073709551616
  %4437 = zext i64 %4432 to i128
  %4438 = or i128 %4436, %4437
  %4439 = mul i128 180, %4438
  %4440 = trunc i128 %4439 to i64
  store i64 %4440, i64* %RCX.i1120, align 8
  %4441 = sext i64 %4440 to i128
  %4442 = icmp ne i128 %4441, %4439
  %4443 = zext i1 %4442 to i8
  %4444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4443, i8* %4444, align 1
  %4445 = trunc i128 %4439 to i32
  %4446 = and i32 %4445, 255
  %4447 = call i32 @llvm.ctpop.i32(i32 %4446)
  %4448 = trunc i32 %4447 to i8
  %4449 = and i8 %4448, 1
  %4450 = xor i8 %4449, 1
  %4451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4450, i8* %4451, align 1
  %4452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4452, align 1
  %4453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4453, align 1
  %4454 = lshr i64 %4440, 63
  %4455 = trunc i64 %4454 to i8
  %4456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4455, i8* %4456, align 1
  %4457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4443, i8* %4457, align 1
  store %struct.Memory* %loadMem_4adf53, %struct.Memory** %MEMORY
  %loadMem_4adf5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4459 = getelementptr inbounds %struct.GPR, %struct.GPR* %4458, i32 0, i32 33
  %4460 = getelementptr inbounds %struct.Reg, %struct.Reg* %4459, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %4460 to i64*
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4462 = getelementptr inbounds %struct.GPR, %struct.GPR* %4461, i32 0, i32 1
  %4463 = getelementptr inbounds %struct.Reg, %struct.Reg* %4462, i32 0, i32 0
  %RAX.i1117 = bitcast %union.anon* %4463 to i64*
  %4464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4465 = getelementptr inbounds %struct.GPR, %struct.GPR* %4464, i32 0, i32 5
  %4466 = getelementptr inbounds %struct.Reg, %struct.Reg* %4465, i32 0, i32 0
  %RCX.i1118 = bitcast %union.anon* %4466 to i64*
  %4467 = load i64, i64* %RAX.i1117
  %4468 = load i64, i64* %RCX.i1118
  %4469 = load i64, i64* %PC.i1116
  %4470 = add i64 %4469, 3
  store i64 %4470, i64* %PC.i1116
  %4471 = add i64 %4468, %4467
  store i64 %4471, i64* %RAX.i1117, align 8
  %4472 = icmp ult i64 %4471, %4467
  %4473 = icmp ult i64 %4471, %4468
  %4474 = or i1 %4472, %4473
  %4475 = zext i1 %4474 to i8
  %4476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4475, i8* %4476, align 1
  %4477 = trunc i64 %4471 to i32
  %4478 = and i32 %4477, 255
  %4479 = call i32 @llvm.ctpop.i32(i32 %4478)
  %4480 = trunc i32 %4479 to i8
  %4481 = and i8 %4480, 1
  %4482 = xor i8 %4481, 1
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4482, i8* %4483, align 1
  %4484 = xor i64 %4468, %4467
  %4485 = xor i64 %4484, %4471
  %4486 = lshr i64 %4485, 4
  %4487 = trunc i64 %4486 to i8
  %4488 = and i8 %4487, 1
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4488, i8* %4489, align 1
  %4490 = icmp eq i64 %4471, 0
  %4491 = zext i1 %4490 to i8
  %4492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4491, i8* %4492, align 1
  %4493 = lshr i64 %4471, 63
  %4494 = trunc i64 %4493 to i8
  %4495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4494, i8* %4495, align 1
  %4496 = lshr i64 %4467, 63
  %4497 = lshr i64 %4468, 63
  %4498 = xor i64 %4493, %4496
  %4499 = xor i64 %4493, %4497
  %4500 = add i64 %4498, %4499
  %4501 = icmp eq i64 %4500, 2
  %4502 = zext i1 %4501 to i8
  %4503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4502, i8* %4503, align 1
  store %struct.Memory* %loadMem_4adf5a, %struct.Memory** %MEMORY
  %loadMem_4adf5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4505 = getelementptr inbounds %struct.GPR, %struct.GPR* %4504, i32 0, i32 33
  %4506 = getelementptr inbounds %struct.Reg, %struct.Reg* %4505, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %4506 to i64*
  %4507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4508 = getelementptr inbounds %struct.GPR, %struct.GPR* %4507, i32 0, i32 5
  %4509 = getelementptr inbounds %struct.Reg, %struct.Reg* %4508, i32 0, i32 0
  %RCX.i1114 = bitcast %union.anon* %4509 to i64*
  %4510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4511 = getelementptr inbounds %struct.GPR, %struct.GPR* %4510, i32 0, i32 15
  %4512 = getelementptr inbounds %struct.Reg, %struct.Reg* %4511, i32 0, i32 0
  %RBP.i1115 = bitcast %union.anon* %4512 to i64*
  %4513 = load i64, i64* %RBP.i1115
  %4514 = sub i64 %4513, 16
  %4515 = load i64, i64* %PC.i1113
  %4516 = add i64 %4515, 4
  store i64 %4516, i64* %PC.i1113
  %4517 = inttoptr i64 %4514 to i32*
  %4518 = load i32, i32* %4517
  %4519 = sext i32 %4518 to i64
  store i64 %4519, i64* %RCX.i1114, align 8
  store %struct.Memory* %loadMem_4adf5d, %struct.Memory** %MEMORY
  %loadMem_4adf61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4521 = getelementptr inbounds %struct.GPR, %struct.GPR* %4520, i32 0, i32 33
  %4522 = getelementptr inbounds %struct.Reg, %struct.Reg* %4521, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %4522 to i64*
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4524 = getelementptr inbounds %struct.GPR, %struct.GPR* %4523, i32 0, i32 5
  %4525 = getelementptr inbounds %struct.Reg, %struct.Reg* %4524, i32 0, i32 0
  %RCX.i1112 = bitcast %union.anon* %4525 to i64*
  %4526 = load i64, i64* %RCX.i1112
  %4527 = load i64, i64* %PC.i1111
  %4528 = add i64 %4527, 4
  store i64 %4528, i64* %PC.i1111
  %4529 = sext i64 %4526 to i128
  %4530 = and i128 %4529, -18446744073709551616
  %4531 = zext i64 %4526 to i128
  %4532 = or i128 %4530, %4531
  %4533 = mul i128 12, %4532
  %4534 = trunc i128 %4533 to i64
  store i64 %4534, i64* %RCX.i1112, align 8
  %4535 = sext i64 %4534 to i128
  %4536 = icmp ne i128 %4535, %4533
  %4537 = zext i1 %4536 to i8
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4537, i8* %4538, align 1
  %4539 = trunc i128 %4533 to i32
  %4540 = and i32 %4539, 255
  %4541 = call i32 @llvm.ctpop.i32(i32 %4540)
  %4542 = trunc i32 %4541 to i8
  %4543 = and i8 %4542, 1
  %4544 = xor i8 %4543, 1
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4544, i8* %4545, align 1
  %4546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4546, align 1
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4547, align 1
  %4548 = lshr i64 %4534, 63
  %4549 = trunc i64 %4548 to i8
  %4550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4549, i8* %4550, align 1
  %4551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4537, i8* %4551, align 1
  store %struct.Memory* %loadMem_4adf61, %struct.Memory** %MEMORY
  %loadMem_4adf65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4553 = getelementptr inbounds %struct.GPR, %struct.GPR* %4552, i32 0, i32 33
  %4554 = getelementptr inbounds %struct.Reg, %struct.Reg* %4553, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %4554 to i64*
  %4555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4556 = getelementptr inbounds %struct.GPR, %struct.GPR* %4555, i32 0, i32 1
  %4557 = getelementptr inbounds %struct.Reg, %struct.Reg* %4556, i32 0, i32 0
  %RAX.i1109 = bitcast %union.anon* %4557 to i64*
  %4558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4559 = getelementptr inbounds %struct.GPR, %struct.GPR* %4558, i32 0, i32 5
  %4560 = getelementptr inbounds %struct.Reg, %struct.Reg* %4559, i32 0, i32 0
  %RCX.i1110 = bitcast %union.anon* %4560 to i64*
  %4561 = load i64, i64* %RAX.i1109
  %4562 = load i64, i64* %RCX.i1110
  %4563 = load i64, i64* %PC.i1108
  %4564 = add i64 %4563, 3
  store i64 %4564, i64* %PC.i1108
  %4565 = add i64 %4562, %4561
  store i64 %4565, i64* %RAX.i1109, align 8
  %4566 = icmp ult i64 %4565, %4561
  %4567 = icmp ult i64 %4565, %4562
  %4568 = or i1 %4566, %4567
  %4569 = zext i1 %4568 to i8
  %4570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4569, i8* %4570, align 1
  %4571 = trunc i64 %4565 to i32
  %4572 = and i32 %4571, 255
  %4573 = call i32 @llvm.ctpop.i32(i32 %4572)
  %4574 = trunc i32 %4573 to i8
  %4575 = and i8 %4574, 1
  %4576 = xor i8 %4575, 1
  %4577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4576, i8* %4577, align 1
  %4578 = xor i64 %4562, %4561
  %4579 = xor i64 %4578, %4565
  %4580 = lshr i64 %4579, 4
  %4581 = trunc i64 %4580 to i8
  %4582 = and i8 %4581, 1
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4582, i8* %4583, align 1
  %4584 = icmp eq i64 %4565, 0
  %4585 = zext i1 %4584 to i8
  %4586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4585, i8* %4586, align 1
  %4587 = lshr i64 %4565, 63
  %4588 = trunc i64 %4587 to i8
  %4589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4588, i8* %4589, align 1
  %4590 = lshr i64 %4561, 63
  %4591 = lshr i64 %4562, 63
  %4592 = xor i64 %4587, %4590
  %4593 = xor i64 %4587, %4591
  %4594 = add i64 %4592, %4593
  %4595 = icmp eq i64 %4594, 2
  %4596 = zext i1 %4595 to i8
  %4597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4596, i8* %4597, align 1
  store %struct.Memory* %loadMem_4adf65, %struct.Memory** %MEMORY
  %loadMem_4adf68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4599 = getelementptr inbounds %struct.GPR, %struct.GPR* %4598, i32 0, i32 33
  %4600 = getelementptr inbounds %struct.Reg, %struct.Reg* %4599, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %4600 to i64*
  %4601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4602 = getelementptr inbounds %struct.GPR, %struct.GPR* %4601, i32 0, i32 7
  %4603 = getelementptr inbounds %struct.Reg, %struct.Reg* %4602, i32 0, i32 0
  %EDX.i1106 = bitcast %union.anon* %4603 to i32*
  %4604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4605 = getelementptr inbounds %struct.GPR, %struct.GPR* %4604, i32 0, i32 1
  %4606 = getelementptr inbounds %struct.Reg, %struct.Reg* %4605, i32 0, i32 0
  %RAX.i1107 = bitcast %union.anon* %4606 to i64*
  %4607 = load i64, i64* %RAX.i1107
  %4608 = load i32, i32* %EDX.i1106
  %4609 = zext i32 %4608 to i64
  %4610 = load i64, i64* %PC.i1105
  %4611 = add i64 %4610, 2
  store i64 %4611, i64* %PC.i1105
  %4612 = inttoptr i64 %4607 to i32*
  store i32 %4608, i32* %4612
  store %struct.Memory* %loadMem_4adf68, %struct.Memory** %MEMORY
  %loadMem_4adf6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4614 = getelementptr inbounds %struct.GPR, %struct.GPR* %4613, i32 0, i32 33
  %4615 = getelementptr inbounds %struct.Reg, %struct.Reg* %4614, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %4615 to i64*
  %4616 = load i64, i64* %PC.i1104
  %4617 = add i64 %4616, 48
  %4618 = load i64, i64* %PC.i1104
  %4619 = add i64 %4618, 5
  store i64 %4619, i64* %PC.i1104
  %4620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4617, i64* %4620, align 8
  store %struct.Memory* %loadMem_4adf6a, %struct.Memory** %MEMORY
  br label %block_.L_4adf9a

block_.L_4adf6f:                                  ; preds = %block_4adf16
  %loadMem_4adf6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4622 = getelementptr inbounds %struct.GPR, %struct.GPR* %4621, i32 0, i32 33
  %4623 = getelementptr inbounds %struct.Reg, %struct.Reg* %4622, i32 0, i32 0
  %PC.i1101 = bitcast %union.anon* %4623 to i64*
  %4624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4625 = getelementptr inbounds %struct.GPR, %struct.GPR* %4624, i32 0, i32 1
  %4626 = getelementptr inbounds %struct.Reg, %struct.Reg* %4625, i32 0, i32 0
  %RAX.i1102 = bitcast %union.anon* %4626 to i64*
  %4627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4628 = getelementptr inbounds %struct.GPR, %struct.GPR* %4627, i32 0, i32 15
  %4629 = getelementptr inbounds %struct.Reg, %struct.Reg* %4628, i32 0, i32 0
  %RBP.i1103 = bitcast %union.anon* %4629 to i64*
  %4630 = load i64, i64* %RBP.i1103
  %4631 = sub i64 %4630, 560
  %4632 = load i64, i64* %PC.i1101
  %4633 = add i64 %4632, 7
  store i64 %4633, i64* %PC.i1101
  store i64 %4631, i64* %RAX.i1102, align 8
  store %struct.Memory* %loadMem_4adf6f, %struct.Memory** %MEMORY
  %loadMem_4adf76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4635 = getelementptr inbounds %struct.GPR, %struct.GPR* %4634, i32 0, i32 33
  %4636 = getelementptr inbounds %struct.Reg, %struct.Reg* %4635, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %4636 to i64*
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4638 = getelementptr inbounds %struct.GPR, %struct.GPR* %4637, i32 0, i32 5
  %4639 = getelementptr inbounds %struct.Reg, %struct.Reg* %4638, i32 0, i32 0
  %RCX.i1099 = bitcast %union.anon* %4639 to i64*
  %4640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4641 = getelementptr inbounds %struct.GPR, %struct.GPR* %4640, i32 0, i32 15
  %4642 = getelementptr inbounds %struct.Reg, %struct.Reg* %4641, i32 0, i32 0
  %RBP.i1100 = bitcast %union.anon* %4642 to i64*
  %4643 = load i64, i64* %RBP.i1100
  %4644 = sub i64 %4643, 188
  %4645 = load i64, i64* %PC.i1098
  %4646 = add i64 %4645, 6
  store i64 %4646, i64* %PC.i1098
  %4647 = inttoptr i64 %4644 to i32*
  %4648 = load i32, i32* %4647
  %4649 = zext i32 %4648 to i64
  store i64 %4649, i64* %RCX.i1099, align 8
  store %struct.Memory* %loadMem_4adf76, %struct.Memory** %MEMORY
  %loadMem_4adf7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4651 = getelementptr inbounds %struct.GPR, %struct.GPR* %4650, i32 0, i32 33
  %4652 = getelementptr inbounds %struct.Reg, %struct.Reg* %4651, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %4652 to i64*
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4654 = getelementptr inbounds %struct.GPR, %struct.GPR* %4653, i32 0, i32 7
  %4655 = getelementptr inbounds %struct.Reg, %struct.Reg* %4654, i32 0, i32 0
  %RDX.i1096 = bitcast %union.anon* %4655 to i64*
  %4656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4657 = getelementptr inbounds %struct.GPR, %struct.GPR* %4656, i32 0, i32 15
  %4658 = getelementptr inbounds %struct.Reg, %struct.Reg* %4657, i32 0, i32 0
  %RBP.i1097 = bitcast %union.anon* %4658 to i64*
  %4659 = load i64, i64* %RBP.i1097
  %4660 = sub i64 %4659, 932
  %4661 = load i64, i64* %PC.i1095
  %4662 = add i64 %4661, 7
  store i64 %4662, i64* %PC.i1095
  %4663 = inttoptr i64 %4660 to i32*
  %4664 = load i32, i32* %4663
  %4665 = sext i32 %4664 to i64
  store i64 %4665, i64* %RDX.i1096, align 8
  store %struct.Memory* %loadMem_4adf7c, %struct.Memory** %MEMORY
  %loadMem_4adf83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4667 = getelementptr inbounds %struct.GPR, %struct.GPR* %4666, i32 0, i32 33
  %4668 = getelementptr inbounds %struct.Reg, %struct.Reg* %4667, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %4668 to i64*
  %4669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4670 = getelementptr inbounds %struct.GPR, %struct.GPR* %4669, i32 0, i32 7
  %4671 = getelementptr inbounds %struct.Reg, %struct.Reg* %4670, i32 0, i32 0
  %RDX.i1094 = bitcast %union.anon* %4671 to i64*
  %4672 = load i64, i64* %RDX.i1094
  %4673 = load i64, i64* %PC.i1093
  %4674 = add i64 %4673, 7
  store i64 %4674, i64* %PC.i1093
  %4675 = sext i64 %4672 to i128
  %4676 = and i128 %4675, -18446744073709551616
  %4677 = zext i64 %4672 to i128
  %4678 = or i128 %4676, %4677
  %4679 = mul i128 180, %4678
  %4680 = trunc i128 %4679 to i64
  store i64 %4680, i64* %RDX.i1094, align 8
  %4681 = sext i64 %4680 to i128
  %4682 = icmp ne i128 %4681, %4679
  %4683 = zext i1 %4682 to i8
  %4684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4683, i8* %4684, align 1
  %4685 = trunc i128 %4679 to i32
  %4686 = and i32 %4685, 255
  %4687 = call i32 @llvm.ctpop.i32(i32 %4686)
  %4688 = trunc i32 %4687 to i8
  %4689 = and i8 %4688, 1
  %4690 = xor i8 %4689, 1
  %4691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4690, i8* %4691, align 1
  %4692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4692, align 1
  %4693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4693, align 1
  %4694 = lshr i64 %4680, 63
  %4695 = trunc i64 %4694 to i8
  %4696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4695, i8* %4696, align 1
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4683, i8* %4697, align 1
  store %struct.Memory* %loadMem_4adf83, %struct.Memory** %MEMORY
  %loadMem_4adf8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4699 = getelementptr inbounds %struct.GPR, %struct.GPR* %4698, i32 0, i32 33
  %4700 = getelementptr inbounds %struct.Reg, %struct.Reg* %4699, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %4700 to i64*
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4702 = getelementptr inbounds %struct.GPR, %struct.GPR* %4701, i32 0, i32 1
  %4703 = getelementptr inbounds %struct.Reg, %struct.Reg* %4702, i32 0, i32 0
  %RAX.i1091 = bitcast %union.anon* %4703 to i64*
  %4704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4705 = getelementptr inbounds %struct.GPR, %struct.GPR* %4704, i32 0, i32 7
  %4706 = getelementptr inbounds %struct.Reg, %struct.Reg* %4705, i32 0, i32 0
  %RDX.i1092 = bitcast %union.anon* %4706 to i64*
  %4707 = load i64, i64* %RAX.i1091
  %4708 = load i64, i64* %RDX.i1092
  %4709 = load i64, i64* %PC.i1090
  %4710 = add i64 %4709, 3
  store i64 %4710, i64* %PC.i1090
  %4711 = add i64 %4708, %4707
  store i64 %4711, i64* %RAX.i1091, align 8
  %4712 = icmp ult i64 %4711, %4707
  %4713 = icmp ult i64 %4711, %4708
  %4714 = or i1 %4712, %4713
  %4715 = zext i1 %4714 to i8
  %4716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4715, i8* %4716, align 1
  %4717 = trunc i64 %4711 to i32
  %4718 = and i32 %4717, 255
  %4719 = call i32 @llvm.ctpop.i32(i32 %4718)
  %4720 = trunc i32 %4719 to i8
  %4721 = and i8 %4720, 1
  %4722 = xor i8 %4721, 1
  %4723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4722, i8* %4723, align 1
  %4724 = xor i64 %4708, %4707
  %4725 = xor i64 %4724, %4711
  %4726 = lshr i64 %4725, 4
  %4727 = trunc i64 %4726 to i8
  %4728 = and i8 %4727, 1
  %4729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4728, i8* %4729, align 1
  %4730 = icmp eq i64 %4711, 0
  %4731 = zext i1 %4730 to i8
  %4732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4731, i8* %4732, align 1
  %4733 = lshr i64 %4711, 63
  %4734 = trunc i64 %4733 to i8
  %4735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4734, i8* %4735, align 1
  %4736 = lshr i64 %4707, 63
  %4737 = lshr i64 %4708, 63
  %4738 = xor i64 %4733, %4736
  %4739 = xor i64 %4733, %4737
  %4740 = add i64 %4738, %4739
  %4741 = icmp eq i64 %4740, 2
  %4742 = zext i1 %4741 to i8
  %4743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4742, i8* %4743, align 1
  store %struct.Memory* %loadMem_4adf8a, %struct.Memory** %MEMORY
  %loadMem_4adf8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4745 = getelementptr inbounds %struct.GPR, %struct.GPR* %4744, i32 0, i32 33
  %4746 = getelementptr inbounds %struct.Reg, %struct.Reg* %4745, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %4746 to i64*
  %4747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4748 = getelementptr inbounds %struct.GPR, %struct.GPR* %4747, i32 0, i32 7
  %4749 = getelementptr inbounds %struct.Reg, %struct.Reg* %4748, i32 0, i32 0
  %RDX.i1088 = bitcast %union.anon* %4749 to i64*
  %4750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4751 = getelementptr inbounds %struct.GPR, %struct.GPR* %4750, i32 0, i32 15
  %4752 = getelementptr inbounds %struct.Reg, %struct.Reg* %4751, i32 0, i32 0
  %RBP.i1089 = bitcast %union.anon* %4752 to i64*
  %4753 = load i64, i64* %RBP.i1089
  %4754 = sub i64 %4753, 16
  %4755 = load i64, i64* %PC.i1087
  %4756 = add i64 %4755, 4
  store i64 %4756, i64* %PC.i1087
  %4757 = inttoptr i64 %4754 to i32*
  %4758 = load i32, i32* %4757
  %4759 = sext i32 %4758 to i64
  store i64 %4759, i64* %RDX.i1088, align 8
  store %struct.Memory* %loadMem_4adf8d, %struct.Memory** %MEMORY
  %loadMem_4adf91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4761 = getelementptr inbounds %struct.GPR, %struct.GPR* %4760, i32 0, i32 33
  %4762 = getelementptr inbounds %struct.Reg, %struct.Reg* %4761, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %4762 to i64*
  %4763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4764 = getelementptr inbounds %struct.GPR, %struct.GPR* %4763, i32 0, i32 7
  %4765 = getelementptr inbounds %struct.Reg, %struct.Reg* %4764, i32 0, i32 0
  %RDX.i1086 = bitcast %union.anon* %4765 to i64*
  %4766 = load i64, i64* %RDX.i1086
  %4767 = load i64, i64* %PC.i1085
  %4768 = add i64 %4767, 4
  store i64 %4768, i64* %PC.i1085
  %4769 = sext i64 %4766 to i128
  %4770 = and i128 %4769, -18446744073709551616
  %4771 = zext i64 %4766 to i128
  %4772 = or i128 %4770, %4771
  %4773 = mul i128 12, %4772
  %4774 = trunc i128 %4773 to i64
  store i64 %4774, i64* %RDX.i1086, align 8
  %4775 = sext i64 %4774 to i128
  %4776 = icmp ne i128 %4775, %4773
  %4777 = zext i1 %4776 to i8
  %4778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4777, i8* %4778, align 1
  %4779 = trunc i128 %4773 to i32
  %4780 = and i32 %4779, 255
  %4781 = call i32 @llvm.ctpop.i32(i32 %4780)
  %4782 = trunc i32 %4781 to i8
  %4783 = and i8 %4782, 1
  %4784 = xor i8 %4783, 1
  %4785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4784, i8* %4785, align 1
  %4786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4786, align 1
  %4787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4787, align 1
  %4788 = lshr i64 %4774, 63
  %4789 = trunc i64 %4788 to i8
  %4790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4789, i8* %4790, align 1
  %4791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4777, i8* %4791, align 1
  store %struct.Memory* %loadMem_4adf91, %struct.Memory** %MEMORY
  %loadMem_4adf95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4793 = getelementptr inbounds %struct.GPR, %struct.GPR* %4792, i32 0, i32 33
  %4794 = getelementptr inbounds %struct.Reg, %struct.Reg* %4793, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %4794 to i64*
  %4795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4796 = getelementptr inbounds %struct.GPR, %struct.GPR* %4795, i32 0, i32 1
  %4797 = getelementptr inbounds %struct.Reg, %struct.Reg* %4796, i32 0, i32 0
  %RAX.i1083 = bitcast %union.anon* %4797 to i64*
  %4798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4799 = getelementptr inbounds %struct.GPR, %struct.GPR* %4798, i32 0, i32 7
  %4800 = getelementptr inbounds %struct.Reg, %struct.Reg* %4799, i32 0, i32 0
  %RDX.i1084 = bitcast %union.anon* %4800 to i64*
  %4801 = load i64, i64* %RAX.i1083
  %4802 = load i64, i64* %RDX.i1084
  %4803 = load i64, i64* %PC.i1082
  %4804 = add i64 %4803, 3
  store i64 %4804, i64* %PC.i1082
  %4805 = add i64 %4802, %4801
  store i64 %4805, i64* %RAX.i1083, align 8
  %4806 = icmp ult i64 %4805, %4801
  %4807 = icmp ult i64 %4805, %4802
  %4808 = or i1 %4806, %4807
  %4809 = zext i1 %4808 to i8
  %4810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4809, i8* %4810, align 1
  %4811 = trunc i64 %4805 to i32
  %4812 = and i32 %4811, 255
  %4813 = call i32 @llvm.ctpop.i32(i32 %4812)
  %4814 = trunc i32 %4813 to i8
  %4815 = and i8 %4814, 1
  %4816 = xor i8 %4815, 1
  %4817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4816, i8* %4817, align 1
  %4818 = xor i64 %4802, %4801
  %4819 = xor i64 %4818, %4805
  %4820 = lshr i64 %4819, 4
  %4821 = trunc i64 %4820 to i8
  %4822 = and i8 %4821, 1
  %4823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4822, i8* %4823, align 1
  %4824 = icmp eq i64 %4805, 0
  %4825 = zext i1 %4824 to i8
  %4826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4825, i8* %4826, align 1
  %4827 = lshr i64 %4805, 63
  %4828 = trunc i64 %4827 to i8
  %4829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4828, i8* %4829, align 1
  %4830 = lshr i64 %4801, 63
  %4831 = lshr i64 %4802, 63
  %4832 = xor i64 %4827, %4830
  %4833 = xor i64 %4827, %4831
  %4834 = add i64 %4832, %4833
  %4835 = icmp eq i64 %4834, 2
  %4836 = zext i1 %4835 to i8
  %4837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4836, i8* %4837, align 1
  store %struct.Memory* %loadMem_4adf95, %struct.Memory** %MEMORY
  %loadMem_4adf98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4839 = getelementptr inbounds %struct.GPR, %struct.GPR* %4838, i32 0, i32 33
  %4840 = getelementptr inbounds %struct.Reg, %struct.Reg* %4839, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %4840 to i64*
  %4841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4842 = getelementptr inbounds %struct.GPR, %struct.GPR* %4841, i32 0, i32 5
  %4843 = getelementptr inbounds %struct.Reg, %struct.Reg* %4842, i32 0, i32 0
  %ECX.i1080 = bitcast %union.anon* %4843 to i32*
  %4844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4845 = getelementptr inbounds %struct.GPR, %struct.GPR* %4844, i32 0, i32 1
  %4846 = getelementptr inbounds %struct.Reg, %struct.Reg* %4845, i32 0, i32 0
  %RAX.i1081 = bitcast %union.anon* %4846 to i64*
  %4847 = load i64, i64* %RAX.i1081
  %4848 = load i32, i32* %ECX.i1080
  %4849 = zext i32 %4848 to i64
  %4850 = load i64, i64* %PC.i1079
  %4851 = add i64 %4850, 2
  store i64 %4851, i64* %PC.i1079
  %4852 = inttoptr i64 %4847 to i32*
  store i32 %4848, i32* %4852
  store %struct.Memory* %loadMem_4adf98, %struct.Memory** %MEMORY
  br label %block_.L_4adf9a

block_.L_4adf9a:                                  ; preds = %block_.L_4adf6f, %block_.L_4adf1b
  %loadMem_4adf9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4854 = getelementptr inbounds %struct.GPR, %struct.GPR* %4853, i32 0, i32 33
  %4855 = getelementptr inbounds %struct.Reg, %struct.Reg* %4854, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %4855 to i64*
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4857 = getelementptr inbounds %struct.GPR, %struct.GPR* %4856, i32 0, i32 1
  %4858 = getelementptr inbounds %struct.Reg, %struct.Reg* %4857, i32 0, i32 0
  %RAX.i1077 = bitcast %union.anon* %4858 to i64*
  %4859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4860 = getelementptr inbounds %struct.GPR, %struct.GPR* %4859, i32 0, i32 15
  %4861 = getelementptr inbounds %struct.Reg, %struct.Reg* %4860, i32 0, i32 0
  %RBP.i1078 = bitcast %union.anon* %4861 to i64*
  %4862 = load i64, i64* %RBP.i1078
  %4863 = sub i64 %4862, 560
  %4864 = load i64, i64* %PC.i1076
  %4865 = add i64 %4864, 7
  store i64 %4865, i64* %PC.i1076
  store i64 %4863, i64* %RAX.i1077, align 8
  store %struct.Memory* %loadMem_4adf9a, %struct.Memory** %MEMORY
  %loadMem_4adfa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4867 = getelementptr inbounds %struct.GPR, %struct.GPR* %4866, i32 0, i32 33
  %4868 = getelementptr inbounds %struct.Reg, %struct.Reg* %4867, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %4868 to i64*
  %4869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4870 = getelementptr inbounds %struct.GPR, %struct.GPR* %4869, i32 0, i32 5
  %4871 = getelementptr inbounds %struct.Reg, %struct.Reg* %4870, i32 0, i32 0
  %RCX.i1074 = bitcast %union.anon* %4871 to i64*
  %4872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4873 = getelementptr inbounds %struct.GPR, %struct.GPR* %4872, i32 0, i32 15
  %4874 = getelementptr inbounds %struct.Reg, %struct.Reg* %4873, i32 0, i32 0
  %RBP.i1075 = bitcast %union.anon* %4874 to i64*
  %4875 = load i64, i64* %RBP.i1075
  %4876 = sub i64 %4875, 932
  %4877 = load i64, i64* %PC.i1073
  %4878 = add i64 %4877, 7
  store i64 %4878, i64* %PC.i1073
  %4879 = inttoptr i64 %4876 to i32*
  %4880 = load i32, i32* %4879
  %4881 = sext i32 %4880 to i64
  store i64 %4881, i64* %RCX.i1074, align 8
  store %struct.Memory* %loadMem_4adfa1, %struct.Memory** %MEMORY
  %loadMem_4adfa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4883 = getelementptr inbounds %struct.GPR, %struct.GPR* %4882, i32 0, i32 33
  %4884 = getelementptr inbounds %struct.Reg, %struct.Reg* %4883, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %4884 to i64*
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4886 = getelementptr inbounds %struct.GPR, %struct.GPR* %4885, i32 0, i32 5
  %4887 = getelementptr inbounds %struct.Reg, %struct.Reg* %4886, i32 0, i32 0
  %RCX.i1072 = bitcast %union.anon* %4887 to i64*
  %4888 = load i64, i64* %RCX.i1072
  %4889 = load i64, i64* %PC.i1071
  %4890 = add i64 %4889, 7
  store i64 %4890, i64* %PC.i1071
  %4891 = sext i64 %4888 to i128
  %4892 = and i128 %4891, -18446744073709551616
  %4893 = zext i64 %4888 to i128
  %4894 = or i128 %4892, %4893
  %4895 = mul i128 180, %4894
  %4896 = trunc i128 %4895 to i64
  store i64 %4896, i64* %RCX.i1072, align 8
  %4897 = sext i64 %4896 to i128
  %4898 = icmp ne i128 %4897, %4895
  %4899 = zext i1 %4898 to i8
  %4900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4899, i8* %4900, align 1
  %4901 = trunc i128 %4895 to i32
  %4902 = and i32 %4901, 255
  %4903 = call i32 @llvm.ctpop.i32(i32 %4902)
  %4904 = trunc i32 %4903 to i8
  %4905 = and i8 %4904, 1
  %4906 = xor i8 %4905, 1
  %4907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4906, i8* %4907, align 1
  %4908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4908, align 1
  %4909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4909, align 1
  %4910 = lshr i64 %4896, 63
  %4911 = trunc i64 %4910 to i8
  %4912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4911, i8* %4912, align 1
  %4913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4899, i8* %4913, align 1
  store %struct.Memory* %loadMem_4adfa8, %struct.Memory** %MEMORY
  %loadMem_4adfaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4915 = getelementptr inbounds %struct.GPR, %struct.GPR* %4914, i32 0, i32 33
  %4916 = getelementptr inbounds %struct.Reg, %struct.Reg* %4915, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %4916 to i64*
  %4917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4918 = getelementptr inbounds %struct.GPR, %struct.GPR* %4917, i32 0, i32 1
  %4919 = getelementptr inbounds %struct.Reg, %struct.Reg* %4918, i32 0, i32 0
  %RAX.i1069 = bitcast %union.anon* %4919 to i64*
  %4920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4921 = getelementptr inbounds %struct.GPR, %struct.GPR* %4920, i32 0, i32 5
  %4922 = getelementptr inbounds %struct.Reg, %struct.Reg* %4921, i32 0, i32 0
  %RCX.i1070 = bitcast %union.anon* %4922 to i64*
  %4923 = load i64, i64* %RAX.i1069
  %4924 = load i64, i64* %RCX.i1070
  %4925 = load i64, i64* %PC.i1068
  %4926 = add i64 %4925, 3
  store i64 %4926, i64* %PC.i1068
  %4927 = add i64 %4924, %4923
  store i64 %4927, i64* %RAX.i1069, align 8
  %4928 = icmp ult i64 %4927, %4923
  %4929 = icmp ult i64 %4927, %4924
  %4930 = or i1 %4928, %4929
  %4931 = zext i1 %4930 to i8
  %4932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4931, i8* %4932, align 1
  %4933 = trunc i64 %4927 to i32
  %4934 = and i32 %4933, 255
  %4935 = call i32 @llvm.ctpop.i32(i32 %4934)
  %4936 = trunc i32 %4935 to i8
  %4937 = and i8 %4936, 1
  %4938 = xor i8 %4937, 1
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4938, i8* %4939, align 1
  %4940 = xor i64 %4924, %4923
  %4941 = xor i64 %4940, %4927
  %4942 = lshr i64 %4941, 4
  %4943 = trunc i64 %4942 to i8
  %4944 = and i8 %4943, 1
  %4945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4944, i8* %4945, align 1
  %4946 = icmp eq i64 %4927, 0
  %4947 = zext i1 %4946 to i8
  %4948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4947, i8* %4948, align 1
  %4949 = lshr i64 %4927, 63
  %4950 = trunc i64 %4949 to i8
  %4951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4950, i8* %4951, align 1
  %4952 = lshr i64 %4923, 63
  %4953 = lshr i64 %4924, 63
  %4954 = xor i64 %4949, %4952
  %4955 = xor i64 %4949, %4953
  %4956 = add i64 %4954, %4955
  %4957 = icmp eq i64 %4956, 2
  %4958 = zext i1 %4957 to i8
  %4959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4958, i8* %4959, align 1
  store %struct.Memory* %loadMem_4adfaf, %struct.Memory** %MEMORY
  %loadMem_4adfb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4961 = getelementptr inbounds %struct.GPR, %struct.GPR* %4960, i32 0, i32 33
  %4962 = getelementptr inbounds %struct.Reg, %struct.Reg* %4961, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %4962 to i64*
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4964 = getelementptr inbounds %struct.GPR, %struct.GPR* %4963, i32 0, i32 5
  %4965 = getelementptr inbounds %struct.Reg, %struct.Reg* %4964, i32 0, i32 0
  %RCX.i1066 = bitcast %union.anon* %4965 to i64*
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4967 = getelementptr inbounds %struct.GPR, %struct.GPR* %4966, i32 0, i32 15
  %4968 = getelementptr inbounds %struct.Reg, %struct.Reg* %4967, i32 0, i32 0
  %RBP.i1067 = bitcast %union.anon* %4968 to i64*
  %4969 = load i64, i64* %RBP.i1067
  %4970 = sub i64 %4969, 16
  %4971 = load i64, i64* %PC.i1065
  %4972 = add i64 %4971, 4
  store i64 %4972, i64* %PC.i1065
  %4973 = inttoptr i64 %4970 to i32*
  %4974 = load i32, i32* %4973
  %4975 = sext i32 %4974 to i64
  store i64 %4975, i64* %RCX.i1066, align 8
  store %struct.Memory* %loadMem_4adfb2, %struct.Memory** %MEMORY
  %loadMem_4adfb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4977 = getelementptr inbounds %struct.GPR, %struct.GPR* %4976, i32 0, i32 33
  %4978 = getelementptr inbounds %struct.Reg, %struct.Reg* %4977, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %4978 to i64*
  %4979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4980 = getelementptr inbounds %struct.GPR, %struct.GPR* %4979, i32 0, i32 5
  %4981 = getelementptr inbounds %struct.Reg, %struct.Reg* %4980, i32 0, i32 0
  %RCX.i1064 = bitcast %union.anon* %4981 to i64*
  %4982 = load i64, i64* %RCX.i1064
  %4983 = load i64, i64* %PC.i1063
  %4984 = add i64 %4983, 4
  store i64 %4984, i64* %PC.i1063
  %4985 = sext i64 %4982 to i128
  %4986 = and i128 %4985, -18446744073709551616
  %4987 = zext i64 %4982 to i128
  %4988 = or i128 %4986, %4987
  %4989 = mul i128 12, %4988
  %4990 = trunc i128 %4989 to i64
  store i64 %4990, i64* %RCX.i1064, align 8
  %4991 = sext i64 %4990 to i128
  %4992 = icmp ne i128 %4991, %4989
  %4993 = zext i1 %4992 to i8
  %4994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4993, i8* %4994, align 1
  %4995 = trunc i128 %4989 to i32
  %4996 = and i32 %4995, 255
  %4997 = call i32 @llvm.ctpop.i32(i32 %4996)
  %4998 = trunc i32 %4997 to i8
  %4999 = and i8 %4998, 1
  %5000 = xor i8 %4999, 1
  %5001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5000, i8* %5001, align 1
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5002, align 1
  %5003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5003, align 1
  %5004 = lshr i64 %4990, 63
  %5005 = trunc i64 %5004 to i8
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5005, i8* %5006, align 1
  %5007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4993, i8* %5007, align 1
  store %struct.Memory* %loadMem_4adfb6, %struct.Memory** %MEMORY
  %loadMem_4adfba = load %struct.Memory*, %struct.Memory** %MEMORY
  %5008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5009 = getelementptr inbounds %struct.GPR, %struct.GPR* %5008, i32 0, i32 33
  %5010 = getelementptr inbounds %struct.Reg, %struct.Reg* %5009, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %5010 to i64*
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5012 = getelementptr inbounds %struct.GPR, %struct.GPR* %5011, i32 0, i32 1
  %5013 = getelementptr inbounds %struct.Reg, %struct.Reg* %5012, i32 0, i32 0
  %RAX.i1061 = bitcast %union.anon* %5013 to i64*
  %5014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5015 = getelementptr inbounds %struct.GPR, %struct.GPR* %5014, i32 0, i32 5
  %5016 = getelementptr inbounds %struct.Reg, %struct.Reg* %5015, i32 0, i32 0
  %RCX.i1062 = bitcast %union.anon* %5016 to i64*
  %5017 = load i64, i64* %RAX.i1061
  %5018 = load i64, i64* %RCX.i1062
  %5019 = load i64, i64* %PC.i1060
  %5020 = add i64 %5019, 3
  store i64 %5020, i64* %PC.i1060
  %5021 = add i64 %5018, %5017
  store i64 %5021, i64* %RAX.i1061, align 8
  %5022 = icmp ult i64 %5021, %5017
  %5023 = icmp ult i64 %5021, %5018
  %5024 = or i1 %5022, %5023
  %5025 = zext i1 %5024 to i8
  %5026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5025, i8* %5026, align 1
  %5027 = trunc i64 %5021 to i32
  %5028 = and i32 %5027, 255
  %5029 = call i32 @llvm.ctpop.i32(i32 %5028)
  %5030 = trunc i32 %5029 to i8
  %5031 = and i8 %5030, 1
  %5032 = xor i8 %5031, 1
  %5033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5032, i8* %5033, align 1
  %5034 = xor i64 %5018, %5017
  %5035 = xor i64 %5034, %5021
  %5036 = lshr i64 %5035, 4
  %5037 = trunc i64 %5036 to i8
  %5038 = and i8 %5037, 1
  %5039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5038, i8* %5039, align 1
  %5040 = icmp eq i64 %5021, 0
  %5041 = zext i1 %5040 to i8
  %5042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5041, i8* %5042, align 1
  %5043 = lshr i64 %5021, 63
  %5044 = trunc i64 %5043 to i8
  %5045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5044, i8* %5045, align 1
  %5046 = lshr i64 %5017, 63
  %5047 = lshr i64 %5018, 63
  %5048 = xor i64 %5043, %5046
  %5049 = xor i64 %5043, %5047
  %5050 = add i64 %5048, %5049
  %5051 = icmp eq i64 %5050, 2
  %5052 = zext i1 %5051 to i8
  %5053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5052, i8* %5053, align 1
  store %struct.Memory* %loadMem_4adfba, %struct.Memory** %MEMORY
  %loadMem_4adfbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5055 = getelementptr inbounds %struct.GPR, %struct.GPR* %5054, i32 0, i32 33
  %5056 = getelementptr inbounds %struct.Reg, %struct.Reg* %5055, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %5056 to i64*
  %5057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5058 = getelementptr inbounds %struct.GPR, %struct.GPR* %5057, i32 0, i32 1
  %5059 = getelementptr inbounds %struct.Reg, %struct.Reg* %5058, i32 0, i32 0
  %RAX.i1059 = bitcast %union.anon* %5059 to i64*
  %5060 = load i64, i64* %RAX.i1059
  %5061 = load i64, i64* %PC.i1058
  %5062 = add i64 %5061, 3
  store i64 %5062, i64* %PC.i1058
  %5063 = inttoptr i64 %5060 to i32*
  %5064 = load i32, i32* %5063
  %5065 = sub i32 %5064, -64
  %5066 = icmp ult i32 %5064, -64
  %5067 = zext i1 %5066 to i8
  %5068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5067, i8* %5068, align 1
  %5069 = and i32 %5065, 255
  %5070 = call i32 @llvm.ctpop.i32(i32 %5069)
  %5071 = trunc i32 %5070 to i8
  %5072 = and i8 %5071, 1
  %5073 = xor i8 %5072, 1
  %5074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5073, i8* %5074, align 1
  %5075 = xor i32 %5064, -64
  %5076 = xor i32 %5075, %5065
  %5077 = lshr i32 %5076, 4
  %5078 = trunc i32 %5077 to i8
  %5079 = and i8 %5078, 1
  %5080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5079, i8* %5080, align 1
  %5081 = icmp eq i32 %5065, 0
  %5082 = zext i1 %5081 to i8
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5082, i8* %5083, align 1
  %5084 = lshr i32 %5065, 31
  %5085 = trunc i32 %5084 to i8
  %5086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5085, i8* %5086, align 1
  %5087 = lshr i32 %5064, 31
  %5088 = xor i32 %5087, 1
  %5089 = xor i32 %5084, %5087
  %5090 = add i32 %5089, %5088
  %5091 = icmp eq i32 %5090, 2
  %5092 = zext i1 %5091 to i8
  %5093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5092, i8* %5093, align 1
  store %struct.Memory* %loadMem_4adfbd, %struct.Memory** %MEMORY
  %loadMem_4adfc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5095 = getelementptr inbounds %struct.GPR, %struct.GPR* %5094, i32 0, i32 33
  %5096 = getelementptr inbounds %struct.Reg, %struct.Reg* %5095, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %5096 to i64*
  %5097 = load i64, i64* %PC.i1057
  %5098 = add i64 %5097, 50
  %5099 = load i64, i64* %PC.i1057
  %5100 = add i64 %5099, 6
  %5101 = load i64, i64* %PC.i1057
  %5102 = add i64 %5101, 6
  store i64 %5102, i64* %PC.i1057
  %5103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5104 = load i8, i8* %5103, align 1
  %5105 = icmp ne i8 %5104, 0
  %5106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5107 = load i8, i8* %5106, align 1
  %5108 = icmp ne i8 %5107, 0
  %5109 = xor i1 %5105, %5108
  %5110 = zext i1 %5109 to i8
  store i8 %5110, i8* %BRANCH_TAKEN, align 1
  %5111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5112 = select i1 %5109, i64 %5098, i64 %5100
  store i64 %5112, i64* %5111, align 8
  store %struct.Memory* %loadMem_4adfc0, %struct.Memory** %MEMORY
  %loadBr_4adfc0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4adfc0 = icmp eq i8 %loadBr_4adfc0, 1
  br i1 %cmpBr_4adfc0, label %block_.L_4adff2, label %block_4adfc6

block_4adfc6:                                     ; preds = %block_.L_4adf9a
  %loadMem_4adfc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5114 = getelementptr inbounds %struct.GPR, %struct.GPR* %5113, i32 0, i32 33
  %5115 = getelementptr inbounds %struct.Reg, %struct.Reg* %5114, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %5115 to i64*
  %5116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5117 = getelementptr inbounds %struct.GPR, %struct.GPR* %5116, i32 0, i32 1
  %5118 = getelementptr inbounds %struct.Reg, %struct.Reg* %5117, i32 0, i32 0
  %RAX.i1055 = bitcast %union.anon* %5118 to i64*
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5120 = getelementptr inbounds %struct.GPR, %struct.GPR* %5119, i32 0, i32 15
  %5121 = getelementptr inbounds %struct.Reg, %struct.Reg* %5120, i32 0, i32 0
  %RBP.i1056 = bitcast %union.anon* %5121 to i64*
  %5122 = load i64, i64* %RBP.i1056
  %5123 = sub i64 %5122, 560
  %5124 = load i64, i64* %PC.i1054
  %5125 = add i64 %5124, 7
  store i64 %5125, i64* %PC.i1054
  store i64 %5123, i64* %RAX.i1055, align 8
  store %struct.Memory* %loadMem_4adfc6, %struct.Memory** %MEMORY
  %loadMem_4adfcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5127 = getelementptr inbounds %struct.GPR, %struct.GPR* %5126, i32 0, i32 33
  %5128 = getelementptr inbounds %struct.Reg, %struct.Reg* %5127, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %5128 to i64*
  %5129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5130 = getelementptr inbounds %struct.GPR, %struct.GPR* %5129, i32 0, i32 5
  %5131 = getelementptr inbounds %struct.Reg, %struct.Reg* %5130, i32 0, i32 0
  %RCX.i1052 = bitcast %union.anon* %5131 to i64*
  %5132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5133 = getelementptr inbounds %struct.GPR, %struct.GPR* %5132, i32 0, i32 15
  %5134 = getelementptr inbounds %struct.Reg, %struct.Reg* %5133, i32 0, i32 0
  %RBP.i1053 = bitcast %union.anon* %5134 to i64*
  %5135 = load i64, i64* %RBP.i1053
  %5136 = sub i64 %5135, 932
  %5137 = load i64, i64* %PC.i1051
  %5138 = add i64 %5137, 7
  store i64 %5138, i64* %PC.i1051
  %5139 = inttoptr i64 %5136 to i32*
  %5140 = load i32, i32* %5139
  %5141 = sext i32 %5140 to i64
  store i64 %5141, i64* %RCX.i1052, align 8
  store %struct.Memory* %loadMem_4adfcd, %struct.Memory** %MEMORY
  %loadMem_4adfd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5143 = getelementptr inbounds %struct.GPR, %struct.GPR* %5142, i32 0, i32 33
  %5144 = getelementptr inbounds %struct.Reg, %struct.Reg* %5143, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %5144 to i64*
  %5145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5146 = getelementptr inbounds %struct.GPR, %struct.GPR* %5145, i32 0, i32 5
  %5147 = getelementptr inbounds %struct.Reg, %struct.Reg* %5146, i32 0, i32 0
  %RCX.i1050 = bitcast %union.anon* %5147 to i64*
  %5148 = load i64, i64* %RCX.i1050
  %5149 = load i64, i64* %PC.i1049
  %5150 = add i64 %5149, 7
  store i64 %5150, i64* %PC.i1049
  %5151 = sext i64 %5148 to i128
  %5152 = and i128 %5151, -18446744073709551616
  %5153 = zext i64 %5148 to i128
  %5154 = or i128 %5152, %5153
  %5155 = mul i128 180, %5154
  %5156 = trunc i128 %5155 to i64
  store i64 %5156, i64* %RCX.i1050, align 8
  %5157 = sext i64 %5156 to i128
  %5158 = icmp ne i128 %5157, %5155
  %5159 = zext i1 %5158 to i8
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5159, i8* %5160, align 1
  %5161 = trunc i128 %5155 to i32
  %5162 = and i32 %5161, 255
  %5163 = call i32 @llvm.ctpop.i32(i32 %5162)
  %5164 = trunc i32 %5163 to i8
  %5165 = and i8 %5164, 1
  %5166 = xor i8 %5165, 1
  %5167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5166, i8* %5167, align 1
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5168, align 1
  %5169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5169, align 1
  %5170 = lshr i64 %5156, 63
  %5171 = trunc i64 %5170 to i8
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5171, i8* %5172, align 1
  %5173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5159, i8* %5173, align 1
  store %struct.Memory* %loadMem_4adfd4, %struct.Memory** %MEMORY
  %loadMem_4adfdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5175 = getelementptr inbounds %struct.GPR, %struct.GPR* %5174, i32 0, i32 33
  %5176 = getelementptr inbounds %struct.Reg, %struct.Reg* %5175, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %5176 to i64*
  %5177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5178 = getelementptr inbounds %struct.GPR, %struct.GPR* %5177, i32 0, i32 1
  %5179 = getelementptr inbounds %struct.Reg, %struct.Reg* %5178, i32 0, i32 0
  %RAX.i1047 = bitcast %union.anon* %5179 to i64*
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5181 = getelementptr inbounds %struct.GPR, %struct.GPR* %5180, i32 0, i32 5
  %5182 = getelementptr inbounds %struct.Reg, %struct.Reg* %5181, i32 0, i32 0
  %RCX.i1048 = bitcast %union.anon* %5182 to i64*
  %5183 = load i64, i64* %RAX.i1047
  %5184 = load i64, i64* %RCX.i1048
  %5185 = load i64, i64* %PC.i1046
  %5186 = add i64 %5185, 3
  store i64 %5186, i64* %PC.i1046
  %5187 = add i64 %5184, %5183
  store i64 %5187, i64* %RAX.i1047, align 8
  %5188 = icmp ult i64 %5187, %5183
  %5189 = icmp ult i64 %5187, %5184
  %5190 = or i1 %5188, %5189
  %5191 = zext i1 %5190 to i8
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5191, i8* %5192, align 1
  %5193 = trunc i64 %5187 to i32
  %5194 = and i32 %5193, 255
  %5195 = call i32 @llvm.ctpop.i32(i32 %5194)
  %5196 = trunc i32 %5195 to i8
  %5197 = and i8 %5196, 1
  %5198 = xor i8 %5197, 1
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5198, i8* %5199, align 1
  %5200 = xor i64 %5184, %5183
  %5201 = xor i64 %5200, %5187
  %5202 = lshr i64 %5201, 4
  %5203 = trunc i64 %5202 to i8
  %5204 = and i8 %5203, 1
  %5205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5204, i8* %5205, align 1
  %5206 = icmp eq i64 %5187, 0
  %5207 = zext i1 %5206 to i8
  %5208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5207, i8* %5208, align 1
  %5209 = lshr i64 %5187, 63
  %5210 = trunc i64 %5209 to i8
  %5211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5210, i8* %5211, align 1
  %5212 = lshr i64 %5183, 63
  %5213 = lshr i64 %5184, 63
  %5214 = xor i64 %5209, %5212
  %5215 = xor i64 %5209, %5213
  %5216 = add i64 %5214, %5215
  %5217 = icmp eq i64 %5216, 2
  %5218 = zext i1 %5217 to i8
  %5219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5218, i8* %5219, align 1
  store %struct.Memory* %loadMem_4adfdb, %struct.Memory** %MEMORY
  %loadMem_4adfde = load %struct.Memory*, %struct.Memory** %MEMORY
  %5220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5221 = getelementptr inbounds %struct.GPR, %struct.GPR* %5220, i32 0, i32 33
  %5222 = getelementptr inbounds %struct.Reg, %struct.Reg* %5221, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %5222 to i64*
  %5223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5224 = getelementptr inbounds %struct.GPR, %struct.GPR* %5223, i32 0, i32 5
  %5225 = getelementptr inbounds %struct.Reg, %struct.Reg* %5224, i32 0, i32 0
  %RCX.i1044 = bitcast %union.anon* %5225 to i64*
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5227 = getelementptr inbounds %struct.GPR, %struct.GPR* %5226, i32 0, i32 15
  %5228 = getelementptr inbounds %struct.Reg, %struct.Reg* %5227, i32 0, i32 0
  %RBP.i1045 = bitcast %union.anon* %5228 to i64*
  %5229 = load i64, i64* %RBP.i1045
  %5230 = sub i64 %5229, 16
  %5231 = load i64, i64* %PC.i1043
  %5232 = add i64 %5231, 4
  store i64 %5232, i64* %PC.i1043
  %5233 = inttoptr i64 %5230 to i32*
  %5234 = load i32, i32* %5233
  %5235 = sext i32 %5234 to i64
  store i64 %5235, i64* %RCX.i1044, align 8
  store %struct.Memory* %loadMem_4adfde, %struct.Memory** %MEMORY
  %loadMem_4adfe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5237 = getelementptr inbounds %struct.GPR, %struct.GPR* %5236, i32 0, i32 33
  %5238 = getelementptr inbounds %struct.Reg, %struct.Reg* %5237, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %5238 to i64*
  %5239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5240 = getelementptr inbounds %struct.GPR, %struct.GPR* %5239, i32 0, i32 5
  %5241 = getelementptr inbounds %struct.Reg, %struct.Reg* %5240, i32 0, i32 0
  %RCX.i1042 = bitcast %union.anon* %5241 to i64*
  %5242 = load i64, i64* %RCX.i1042
  %5243 = load i64, i64* %PC.i1041
  %5244 = add i64 %5243, 4
  store i64 %5244, i64* %PC.i1041
  %5245 = sext i64 %5242 to i128
  %5246 = and i128 %5245, -18446744073709551616
  %5247 = zext i64 %5242 to i128
  %5248 = or i128 %5246, %5247
  %5249 = mul i128 12, %5248
  %5250 = trunc i128 %5249 to i64
  store i64 %5250, i64* %RCX.i1042, align 8
  %5251 = sext i64 %5250 to i128
  %5252 = icmp ne i128 %5251, %5249
  %5253 = zext i1 %5252 to i8
  %5254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5253, i8* %5254, align 1
  %5255 = trunc i128 %5249 to i32
  %5256 = and i32 %5255, 255
  %5257 = call i32 @llvm.ctpop.i32(i32 %5256)
  %5258 = trunc i32 %5257 to i8
  %5259 = and i8 %5258, 1
  %5260 = xor i8 %5259, 1
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5260, i8* %5261, align 1
  %5262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5262, align 1
  %5263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5263, align 1
  %5264 = lshr i64 %5250, 63
  %5265 = trunc i64 %5264 to i8
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5265, i8* %5266, align 1
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5253, i8* %5267, align 1
  store %struct.Memory* %loadMem_4adfe2, %struct.Memory** %MEMORY
  %loadMem_4adfe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5269 = getelementptr inbounds %struct.GPR, %struct.GPR* %5268, i32 0, i32 33
  %5270 = getelementptr inbounds %struct.Reg, %struct.Reg* %5269, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %5270 to i64*
  %5271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5272 = getelementptr inbounds %struct.GPR, %struct.GPR* %5271, i32 0, i32 1
  %5273 = getelementptr inbounds %struct.Reg, %struct.Reg* %5272, i32 0, i32 0
  %RAX.i1039 = bitcast %union.anon* %5273 to i64*
  %5274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5275 = getelementptr inbounds %struct.GPR, %struct.GPR* %5274, i32 0, i32 5
  %5276 = getelementptr inbounds %struct.Reg, %struct.Reg* %5275, i32 0, i32 0
  %RCX.i1040 = bitcast %union.anon* %5276 to i64*
  %5277 = load i64, i64* %RAX.i1039
  %5278 = load i64, i64* %RCX.i1040
  %5279 = load i64, i64* %PC.i1038
  %5280 = add i64 %5279, 3
  store i64 %5280, i64* %PC.i1038
  %5281 = add i64 %5278, %5277
  store i64 %5281, i64* %RAX.i1039, align 8
  %5282 = icmp ult i64 %5281, %5277
  %5283 = icmp ult i64 %5281, %5278
  %5284 = or i1 %5282, %5283
  %5285 = zext i1 %5284 to i8
  %5286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5285, i8* %5286, align 1
  %5287 = trunc i64 %5281 to i32
  %5288 = and i32 %5287, 255
  %5289 = call i32 @llvm.ctpop.i32(i32 %5288)
  %5290 = trunc i32 %5289 to i8
  %5291 = and i8 %5290, 1
  %5292 = xor i8 %5291, 1
  %5293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5292, i8* %5293, align 1
  %5294 = xor i64 %5278, %5277
  %5295 = xor i64 %5294, %5281
  %5296 = lshr i64 %5295, 4
  %5297 = trunc i64 %5296 to i8
  %5298 = and i8 %5297, 1
  %5299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5298, i8* %5299, align 1
  %5300 = icmp eq i64 %5281, 0
  %5301 = zext i1 %5300 to i8
  %5302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5301, i8* %5302, align 1
  %5303 = lshr i64 %5281, 63
  %5304 = trunc i64 %5303 to i8
  %5305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5304, i8* %5305, align 1
  %5306 = lshr i64 %5277, 63
  %5307 = lshr i64 %5278, 63
  %5308 = xor i64 %5303, %5306
  %5309 = xor i64 %5303, %5307
  %5310 = add i64 %5308, %5309
  %5311 = icmp eq i64 %5310, 2
  %5312 = zext i1 %5311 to i8
  %5313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5312, i8* %5313, align 1
  store %struct.Memory* %loadMem_4adfe6, %struct.Memory** %MEMORY
  %loadMem_4adfe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5315 = getelementptr inbounds %struct.GPR, %struct.GPR* %5314, i32 0, i32 33
  %5316 = getelementptr inbounds %struct.Reg, %struct.Reg* %5315, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %5316 to i64*
  %5317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5318 = getelementptr inbounds %struct.GPR, %struct.GPR* %5317, i32 0, i32 1
  %5319 = getelementptr inbounds %struct.Reg, %struct.Reg* %5318, i32 0, i32 0
  %RAX.i1037 = bitcast %union.anon* %5319 to i64*
  %5320 = load i64, i64* %RAX.i1037
  %5321 = load i64, i64* %PC.i1036
  %5322 = add i64 %5321, 3
  store i64 %5322, i64* %PC.i1036
  %5323 = inttoptr i64 %5320 to i32*
  %5324 = load i32, i32* %5323
  %5325 = sub i32 %5324, 127
  %5326 = icmp ult i32 %5324, 127
  %5327 = zext i1 %5326 to i8
  %5328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5327, i8* %5328, align 1
  %5329 = and i32 %5325, 255
  %5330 = call i32 @llvm.ctpop.i32(i32 %5329)
  %5331 = trunc i32 %5330 to i8
  %5332 = and i8 %5331, 1
  %5333 = xor i8 %5332, 1
  %5334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5333, i8* %5334, align 1
  %5335 = xor i32 %5324, 127
  %5336 = xor i32 %5335, %5325
  %5337 = lshr i32 %5336, 4
  %5338 = trunc i32 %5337 to i8
  %5339 = and i8 %5338, 1
  %5340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5339, i8* %5340, align 1
  %5341 = icmp eq i32 %5325, 0
  %5342 = zext i1 %5341 to i8
  %5343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5342, i8* %5343, align 1
  %5344 = lshr i32 %5325, 31
  %5345 = trunc i32 %5344 to i8
  %5346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5345, i8* %5346, align 1
  %5347 = lshr i32 %5324, 31
  %5348 = xor i32 %5344, %5347
  %5349 = add i32 %5348, %5347
  %5350 = icmp eq i32 %5349, 2
  %5351 = zext i1 %5350 to i8
  %5352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5351, i8* %5352, align 1
  store %struct.Memory* %loadMem_4adfe9, %struct.Memory** %MEMORY
  %loadMem_4adfec = load %struct.Memory*, %struct.Memory** %MEMORY
  %5353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5354 = getelementptr inbounds %struct.GPR, %struct.GPR* %5353, i32 0, i32 33
  %5355 = getelementptr inbounds %struct.Reg, %struct.Reg* %5354, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %5355 to i64*
  %5356 = load i64, i64* %PC.i1035
  %5357 = add i64 %5356, 49
  %5358 = load i64, i64* %PC.i1035
  %5359 = add i64 %5358, 6
  %5360 = load i64, i64* %PC.i1035
  %5361 = add i64 %5360, 6
  store i64 %5361, i64* %PC.i1035
  %5362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5363 = load i8, i8* %5362, align 1
  %5364 = icmp ne i8 %5363, 0
  %5365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5366 = load i8, i8* %5365, align 1
  %5367 = icmp ne i8 %5366, 0
  %5368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5369 = load i8, i8* %5368, align 1
  %5370 = icmp ne i8 %5369, 0
  %5371 = xor i1 %5367, %5370
  %5372 = or i1 %5364, %5371
  %5373 = zext i1 %5372 to i8
  store i8 %5373, i8* %BRANCH_TAKEN, align 1
  %5374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5375 = select i1 %5372, i64 %5357, i64 %5359
  store i64 %5375, i64* %5374, align 8
  store %struct.Memory* %loadMem_4adfec, %struct.Memory** %MEMORY
  %loadBr_4adfec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4adfec = icmp eq i8 %loadBr_4adfec, 1
  br i1 %cmpBr_4adfec, label %block_.L_4ae01d, label %block_.L_4adff2

block_.L_4adff2:                                  ; preds = %block_4adfc6, %block_.L_4adf9a
  %loadMem_4adff2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5377 = getelementptr inbounds %struct.GPR, %struct.GPR* %5376, i32 0, i32 33
  %5378 = getelementptr inbounds %struct.Reg, %struct.Reg* %5377, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %5378 to i64*
  %5379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5380 = getelementptr inbounds %struct.GPR, %struct.GPR* %5379, i32 0, i32 1
  %5381 = getelementptr inbounds %struct.Reg, %struct.Reg* %5380, i32 0, i32 0
  %RAX.i1033 = bitcast %union.anon* %5381 to i64*
  %5382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5383 = getelementptr inbounds %struct.GPR, %struct.GPR* %5382, i32 0, i32 15
  %5384 = getelementptr inbounds %struct.Reg, %struct.Reg* %5383, i32 0, i32 0
  %RBP.i1034 = bitcast %union.anon* %5384 to i64*
  %5385 = load i64, i64* %RBP.i1034
  %5386 = sub i64 %5385, 560
  %5387 = load i64, i64* %PC.i1032
  %5388 = add i64 %5387, 7
  store i64 %5388, i64* %PC.i1032
  store i64 %5386, i64* %RAX.i1033, align 8
  store %struct.Memory* %loadMem_4adff2, %struct.Memory** %MEMORY
  %loadMem_4adff9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5390 = getelementptr inbounds %struct.GPR, %struct.GPR* %5389, i32 0, i32 33
  %5391 = getelementptr inbounds %struct.Reg, %struct.Reg* %5390, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %5391 to i64*
  %5392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5393 = getelementptr inbounds %struct.GPR, %struct.GPR* %5392, i32 0, i32 5
  %5394 = getelementptr inbounds %struct.Reg, %struct.Reg* %5393, i32 0, i32 0
  %RCX.i1030 = bitcast %union.anon* %5394 to i64*
  %5395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5396 = getelementptr inbounds %struct.GPR, %struct.GPR* %5395, i32 0, i32 15
  %5397 = getelementptr inbounds %struct.Reg, %struct.Reg* %5396, i32 0, i32 0
  %RBP.i1031 = bitcast %union.anon* %5397 to i64*
  %5398 = load i64, i64* %RBP.i1031
  %5399 = sub i64 %5398, 188
  %5400 = load i64, i64* %PC.i1029
  %5401 = add i64 %5400, 6
  store i64 %5401, i64* %PC.i1029
  %5402 = inttoptr i64 %5399 to i32*
  %5403 = load i32, i32* %5402
  %5404 = zext i32 %5403 to i64
  store i64 %5404, i64* %RCX.i1030, align 8
  store %struct.Memory* %loadMem_4adff9, %struct.Memory** %MEMORY
  %loadMem_4adfff = load %struct.Memory*, %struct.Memory** %MEMORY
  %5405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5406 = getelementptr inbounds %struct.GPR, %struct.GPR* %5405, i32 0, i32 33
  %5407 = getelementptr inbounds %struct.Reg, %struct.Reg* %5406, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %5407 to i64*
  %5408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5409 = getelementptr inbounds %struct.GPR, %struct.GPR* %5408, i32 0, i32 7
  %5410 = getelementptr inbounds %struct.Reg, %struct.Reg* %5409, i32 0, i32 0
  %RDX.i1027 = bitcast %union.anon* %5410 to i64*
  %5411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5412 = getelementptr inbounds %struct.GPR, %struct.GPR* %5411, i32 0, i32 15
  %5413 = getelementptr inbounds %struct.Reg, %struct.Reg* %5412, i32 0, i32 0
  %RBP.i1028 = bitcast %union.anon* %5413 to i64*
  %5414 = load i64, i64* %RBP.i1028
  %5415 = sub i64 %5414, 932
  %5416 = load i64, i64* %PC.i1026
  %5417 = add i64 %5416, 7
  store i64 %5417, i64* %PC.i1026
  %5418 = inttoptr i64 %5415 to i32*
  %5419 = load i32, i32* %5418
  %5420 = sext i32 %5419 to i64
  store i64 %5420, i64* %RDX.i1027, align 8
  store %struct.Memory* %loadMem_4adfff, %struct.Memory** %MEMORY
  %loadMem_4ae006 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5422 = getelementptr inbounds %struct.GPR, %struct.GPR* %5421, i32 0, i32 33
  %5423 = getelementptr inbounds %struct.Reg, %struct.Reg* %5422, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %5423 to i64*
  %5424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5425 = getelementptr inbounds %struct.GPR, %struct.GPR* %5424, i32 0, i32 7
  %5426 = getelementptr inbounds %struct.Reg, %struct.Reg* %5425, i32 0, i32 0
  %RDX.i1025 = bitcast %union.anon* %5426 to i64*
  %5427 = load i64, i64* %RDX.i1025
  %5428 = load i64, i64* %PC.i1024
  %5429 = add i64 %5428, 7
  store i64 %5429, i64* %PC.i1024
  %5430 = sext i64 %5427 to i128
  %5431 = and i128 %5430, -18446744073709551616
  %5432 = zext i64 %5427 to i128
  %5433 = or i128 %5431, %5432
  %5434 = mul i128 180, %5433
  %5435 = trunc i128 %5434 to i64
  store i64 %5435, i64* %RDX.i1025, align 8
  %5436 = sext i64 %5435 to i128
  %5437 = icmp ne i128 %5436, %5434
  %5438 = zext i1 %5437 to i8
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5438, i8* %5439, align 1
  %5440 = trunc i128 %5434 to i32
  %5441 = and i32 %5440, 255
  %5442 = call i32 @llvm.ctpop.i32(i32 %5441)
  %5443 = trunc i32 %5442 to i8
  %5444 = and i8 %5443, 1
  %5445 = xor i8 %5444, 1
  %5446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5445, i8* %5446, align 1
  %5447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5447, align 1
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5448, align 1
  %5449 = lshr i64 %5435, 63
  %5450 = trunc i64 %5449 to i8
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5450, i8* %5451, align 1
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5438, i8* %5452, align 1
  store %struct.Memory* %loadMem_4ae006, %struct.Memory** %MEMORY
  %loadMem_4ae00d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5454 = getelementptr inbounds %struct.GPR, %struct.GPR* %5453, i32 0, i32 33
  %5455 = getelementptr inbounds %struct.Reg, %struct.Reg* %5454, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %5455 to i64*
  %5456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5457 = getelementptr inbounds %struct.GPR, %struct.GPR* %5456, i32 0, i32 1
  %5458 = getelementptr inbounds %struct.Reg, %struct.Reg* %5457, i32 0, i32 0
  %RAX.i1022 = bitcast %union.anon* %5458 to i64*
  %5459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5460 = getelementptr inbounds %struct.GPR, %struct.GPR* %5459, i32 0, i32 7
  %5461 = getelementptr inbounds %struct.Reg, %struct.Reg* %5460, i32 0, i32 0
  %RDX.i1023 = bitcast %union.anon* %5461 to i64*
  %5462 = load i64, i64* %RAX.i1022
  %5463 = load i64, i64* %RDX.i1023
  %5464 = load i64, i64* %PC.i1021
  %5465 = add i64 %5464, 3
  store i64 %5465, i64* %PC.i1021
  %5466 = add i64 %5463, %5462
  store i64 %5466, i64* %RAX.i1022, align 8
  %5467 = icmp ult i64 %5466, %5462
  %5468 = icmp ult i64 %5466, %5463
  %5469 = or i1 %5467, %5468
  %5470 = zext i1 %5469 to i8
  %5471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5470, i8* %5471, align 1
  %5472 = trunc i64 %5466 to i32
  %5473 = and i32 %5472, 255
  %5474 = call i32 @llvm.ctpop.i32(i32 %5473)
  %5475 = trunc i32 %5474 to i8
  %5476 = and i8 %5475, 1
  %5477 = xor i8 %5476, 1
  %5478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5477, i8* %5478, align 1
  %5479 = xor i64 %5463, %5462
  %5480 = xor i64 %5479, %5466
  %5481 = lshr i64 %5480, 4
  %5482 = trunc i64 %5481 to i8
  %5483 = and i8 %5482, 1
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5483, i8* %5484, align 1
  %5485 = icmp eq i64 %5466, 0
  %5486 = zext i1 %5485 to i8
  %5487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5486, i8* %5487, align 1
  %5488 = lshr i64 %5466, 63
  %5489 = trunc i64 %5488 to i8
  %5490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5489, i8* %5490, align 1
  %5491 = lshr i64 %5462, 63
  %5492 = lshr i64 %5463, 63
  %5493 = xor i64 %5488, %5491
  %5494 = xor i64 %5488, %5492
  %5495 = add i64 %5493, %5494
  %5496 = icmp eq i64 %5495, 2
  %5497 = zext i1 %5496 to i8
  %5498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5497, i8* %5498, align 1
  store %struct.Memory* %loadMem_4ae00d, %struct.Memory** %MEMORY
  %loadMem_4ae010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5500 = getelementptr inbounds %struct.GPR, %struct.GPR* %5499, i32 0, i32 33
  %5501 = getelementptr inbounds %struct.Reg, %struct.Reg* %5500, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %5501 to i64*
  %5502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5503 = getelementptr inbounds %struct.GPR, %struct.GPR* %5502, i32 0, i32 7
  %5504 = getelementptr inbounds %struct.Reg, %struct.Reg* %5503, i32 0, i32 0
  %RDX.i1019 = bitcast %union.anon* %5504 to i64*
  %5505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5506 = getelementptr inbounds %struct.GPR, %struct.GPR* %5505, i32 0, i32 15
  %5507 = getelementptr inbounds %struct.Reg, %struct.Reg* %5506, i32 0, i32 0
  %RBP.i1020 = bitcast %union.anon* %5507 to i64*
  %5508 = load i64, i64* %RBP.i1020
  %5509 = sub i64 %5508, 16
  %5510 = load i64, i64* %PC.i1018
  %5511 = add i64 %5510, 4
  store i64 %5511, i64* %PC.i1018
  %5512 = inttoptr i64 %5509 to i32*
  %5513 = load i32, i32* %5512
  %5514 = sext i32 %5513 to i64
  store i64 %5514, i64* %RDX.i1019, align 8
  store %struct.Memory* %loadMem_4ae010, %struct.Memory** %MEMORY
  %loadMem_4ae014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5516 = getelementptr inbounds %struct.GPR, %struct.GPR* %5515, i32 0, i32 33
  %5517 = getelementptr inbounds %struct.Reg, %struct.Reg* %5516, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %5517 to i64*
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5519 = getelementptr inbounds %struct.GPR, %struct.GPR* %5518, i32 0, i32 7
  %5520 = getelementptr inbounds %struct.Reg, %struct.Reg* %5519, i32 0, i32 0
  %RDX.i1017 = bitcast %union.anon* %5520 to i64*
  %5521 = load i64, i64* %RDX.i1017
  %5522 = load i64, i64* %PC.i1016
  %5523 = add i64 %5522, 4
  store i64 %5523, i64* %PC.i1016
  %5524 = sext i64 %5521 to i128
  %5525 = and i128 %5524, -18446744073709551616
  %5526 = zext i64 %5521 to i128
  %5527 = or i128 %5525, %5526
  %5528 = mul i128 12, %5527
  %5529 = trunc i128 %5528 to i64
  store i64 %5529, i64* %RDX.i1017, align 8
  %5530 = sext i64 %5529 to i128
  %5531 = icmp ne i128 %5530, %5528
  %5532 = zext i1 %5531 to i8
  %5533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5532, i8* %5533, align 1
  %5534 = trunc i128 %5528 to i32
  %5535 = and i32 %5534, 255
  %5536 = call i32 @llvm.ctpop.i32(i32 %5535)
  %5537 = trunc i32 %5536 to i8
  %5538 = and i8 %5537, 1
  %5539 = xor i8 %5538, 1
  %5540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5539, i8* %5540, align 1
  %5541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5541, align 1
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5542, align 1
  %5543 = lshr i64 %5529, 63
  %5544 = trunc i64 %5543 to i8
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5544, i8* %5545, align 1
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5532, i8* %5546, align 1
  store %struct.Memory* %loadMem_4ae014, %struct.Memory** %MEMORY
  %loadMem_4ae018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5548 = getelementptr inbounds %struct.GPR, %struct.GPR* %5547, i32 0, i32 33
  %5549 = getelementptr inbounds %struct.Reg, %struct.Reg* %5548, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %5549 to i64*
  %5550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5551 = getelementptr inbounds %struct.GPR, %struct.GPR* %5550, i32 0, i32 1
  %5552 = getelementptr inbounds %struct.Reg, %struct.Reg* %5551, i32 0, i32 0
  %RAX.i1014 = bitcast %union.anon* %5552 to i64*
  %5553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5554 = getelementptr inbounds %struct.GPR, %struct.GPR* %5553, i32 0, i32 7
  %5555 = getelementptr inbounds %struct.Reg, %struct.Reg* %5554, i32 0, i32 0
  %RDX.i1015 = bitcast %union.anon* %5555 to i64*
  %5556 = load i64, i64* %RAX.i1014
  %5557 = load i64, i64* %RDX.i1015
  %5558 = load i64, i64* %PC.i1013
  %5559 = add i64 %5558, 3
  store i64 %5559, i64* %PC.i1013
  %5560 = add i64 %5557, %5556
  store i64 %5560, i64* %RAX.i1014, align 8
  %5561 = icmp ult i64 %5560, %5556
  %5562 = icmp ult i64 %5560, %5557
  %5563 = or i1 %5561, %5562
  %5564 = zext i1 %5563 to i8
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5564, i8* %5565, align 1
  %5566 = trunc i64 %5560 to i32
  %5567 = and i32 %5566, 255
  %5568 = call i32 @llvm.ctpop.i32(i32 %5567)
  %5569 = trunc i32 %5568 to i8
  %5570 = and i8 %5569, 1
  %5571 = xor i8 %5570, 1
  %5572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5571, i8* %5572, align 1
  %5573 = xor i64 %5557, %5556
  %5574 = xor i64 %5573, %5560
  %5575 = lshr i64 %5574, 4
  %5576 = trunc i64 %5575 to i8
  %5577 = and i8 %5576, 1
  %5578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5577, i8* %5578, align 1
  %5579 = icmp eq i64 %5560, 0
  %5580 = zext i1 %5579 to i8
  %5581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5580, i8* %5581, align 1
  %5582 = lshr i64 %5560, 63
  %5583 = trunc i64 %5582 to i8
  %5584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5583, i8* %5584, align 1
  %5585 = lshr i64 %5556, 63
  %5586 = lshr i64 %5557, 63
  %5587 = xor i64 %5582, %5585
  %5588 = xor i64 %5582, %5586
  %5589 = add i64 %5587, %5588
  %5590 = icmp eq i64 %5589, 2
  %5591 = zext i1 %5590 to i8
  %5592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5591, i8* %5592, align 1
  store %struct.Memory* %loadMem_4ae018, %struct.Memory** %MEMORY
  %loadMem_4ae01b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5594 = getelementptr inbounds %struct.GPR, %struct.GPR* %5593, i32 0, i32 33
  %5595 = getelementptr inbounds %struct.Reg, %struct.Reg* %5594, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %5595 to i64*
  %5596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5597 = getelementptr inbounds %struct.GPR, %struct.GPR* %5596, i32 0, i32 5
  %5598 = getelementptr inbounds %struct.Reg, %struct.Reg* %5597, i32 0, i32 0
  %ECX.i1011 = bitcast %union.anon* %5598 to i32*
  %5599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5600 = getelementptr inbounds %struct.GPR, %struct.GPR* %5599, i32 0, i32 1
  %5601 = getelementptr inbounds %struct.Reg, %struct.Reg* %5600, i32 0, i32 0
  %RAX.i1012 = bitcast %union.anon* %5601 to i64*
  %5602 = load i64, i64* %RAX.i1012
  %5603 = load i32, i32* %ECX.i1011
  %5604 = zext i32 %5603 to i64
  %5605 = load i64, i64* %PC.i1010
  %5606 = add i64 %5605, 2
  store i64 %5606, i64* %PC.i1010
  %5607 = inttoptr i64 %5602 to i32*
  store i32 %5603, i32* %5607
  store %struct.Memory* %loadMem_4ae01b, %struct.Memory** %MEMORY
  br label %block_.L_4ae01d

block_.L_4ae01d:                                  ; preds = %block_.L_4adff2, %block_4adfc6
  %loadMem_4ae01d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5609 = getelementptr inbounds %struct.GPR, %struct.GPR* %5608, i32 0, i32 33
  %5610 = getelementptr inbounds %struct.Reg, %struct.Reg* %5609, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %5610 to i64*
  %5611 = load i64, i64* %PC.i1009
  %5612 = add i64 %5611, 364
  %5613 = load i64, i64* %PC.i1009
  %5614 = add i64 %5613, 5
  store i64 %5614, i64* %PC.i1009
  %5615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5612, i64* %5615, align 8
  store %struct.Memory* %loadMem_4ae01d, %struct.Memory** %MEMORY
  br label %block_.L_4ae189

block_.L_4ae022:                                  ; preds = %block_4adef0, %routine_ucomisd__xmm0___xmm1.exit1172
  %loadMem_4ae022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5617 = getelementptr inbounds %struct.GPR, %struct.GPR* %5616, i32 0, i32 33
  %5618 = getelementptr inbounds %struct.Reg, %struct.Reg* %5617, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %5618 to i64*
  %5619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5620 = getelementptr inbounds %struct.GPR, %struct.GPR* %5619, i32 0, i32 1
  %5621 = getelementptr inbounds %struct.Reg, %struct.Reg* %5620, i32 0, i32 0
  %RAX.i1007 = bitcast %union.anon* %5621 to i64*
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5623 = getelementptr inbounds %struct.GPR, %struct.GPR* %5622, i32 0, i32 15
  %5624 = getelementptr inbounds %struct.Reg, %struct.Reg* %5623, i32 0, i32 0
  %RBP.i1008 = bitcast %union.anon* %5624 to i64*
  %5625 = load i64, i64* %RBP.i1008
  %5626 = sub i64 %5625, 928
  %5627 = load i64, i64* %PC.i1006
  %5628 = add i64 %5627, 7
  store i64 %5628, i64* %PC.i1006
  store i64 %5626, i64* %RAX.i1007, align 8
  store %struct.Memory* %loadMem_4ae022, %struct.Memory** %MEMORY
  %loadMem_4ae029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5630 = getelementptr inbounds %struct.GPR, %struct.GPR* %5629, i32 0, i32 33
  %5631 = getelementptr inbounds %struct.Reg, %struct.Reg* %5630, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %5631 to i64*
  %5632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5633 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5632, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %5633 to %"class.std::bitset"*
  %5634 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %5635 = load i64, i64* %PC.i1005
  %5636 = add i64 %5635, ptrtoint (%G_0x3857__rip__type* @G_0x3857__rip_ to i64)
  %5637 = load i64, i64* %PC.i1005
  %5638 = add i64 %5637, 8
  store i64 %5638, i64* %PC.i1005
  %5639 = inttoptr i64 %5636 to double*
  %5640 = load double, double* %5639
  %5641 = bitcast i8* %5634 to double*
  store double %5640, double* %5641, align 1
  %5642 = getelementptr inbounds i8, i8* %5634, i64 8
  %5643 = bitcast i8* %5642 to double*
  store double 0.000000e+00, double* %5643, align 1
  store %struct.Memory* %loadMem_4ae029, %struct.Memory** %MEMORY
  %loadMem_4ae031 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5645 = getelementptr inbounds %struct.GPR, %struct.GPR* %5644, i32 0, i32 33
  %5646 = getelementptr inbounds %struct.Reg, %struct.Reg* %5645, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %5646 to i64*
  %5647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5648 = getelementptr inbounds %struct.GPR, %struct.GPR* %5647, i32 0, i32 15
  %5649 = getelementptr inbounds %struct.Reg, %struct.Reg* %5648, i32 0, i32 0
  %RBP.i1003 = bitcast %union.anon* %5649 to i64*
  %5650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5651 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5650, i64 0, i64 1
  %YMM1.i1004 = bitcast %union.VectorReg* %5651 to %"class.std::bitset"*
  %5652 = bitcast %"class.std::bitset"* %YMM1.i1004 to i8*
  %5653 = load i64, i64* %RBP.i1003
  %5654 = sub i64 %5653, 24
  %5655 = load i64, i64* %PC.i1002
  %5656 = add i64 %5655, 5
  store i64 %5656, i64* %PC.i1002
  %5657 = inttoptr i64 %5654 to double*
  %5658 = load double, double* %5657
  %5659 = bitcast i8* %5652 to double*
  store double %5658, double* %5659, align 1
  %5660 = getelementptr inbounds i8, i8* %5652, i64 8
  %5661 = bitcast i8* %5660 to double*
  store double 0.000000e+00, double* %5661, align 1
  store %struct.Memory* %loadMem_4ae031, %struct.Memory** %MEMORY
  %loadMem_4ae036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5663 = getelementptr inbounds %struct.GPR, %struct.GPR* %5662, i32 0, i32 33
  %5664 = getelementptr inbounds %struct.Reg, %struct.Reg* %5663, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %5664 to i64*
  %5665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5666 = getelementptr inbounds %struct.GPR, %struct.GPR* %5665, i32 0, i32 5
  %5667 = getelementptr inbounds %struct.Reg, %struct.Reg* %5666, i32 0, i32 0
  %RCX.i1000 = bitcast %union.anon* %5667 to i64*
  %5668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5669 = getelementptr inbounds %struct.GPR, %struct.GPR* %5668, i32 0, i32 15
  %5670 = getelementptr inbounds %struct.Reg, %struct.Reg* %5669, i32 0, i32 0
  %RBP.i1001 = bitcast %union.anon* %5670 to i64*
  %5671 = load i64, i64* %RBP.i1001
  %5672 = sub i64 %5671, 16
  %5673 = load i64, i64* %PC.i999
  %5674 = add i64 %5673, 4
  store i64 %5674, i64* %PC.i999
  %5675 = inttoptr i64 %5672 to i32*
  %5676 = load i32, i32* %5675
  %5677 = sext i32 %5676 to i64
  store i64 %5677, i64* %RCX.i1000, align 8
  store %struct.Memory* %loadMem_4ae036, %struct.Memory** %MEMORY
  %loadMem_4ae03a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5679 = getelementptr inbounds %struct.GPR, %struct.GPR* %5678, i32 0, i32 33
  %5680 = getelementptr inbounds %struct.Reg, %struct.Reg* %5679, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %5680 to i64*
  %5681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5682 = getelementptr inbounds %struct.GPR, %struct.GPR* %5681, i32 0, i32 5
  %5683 = getelementptr inbounds %struct.Reg, %struct.Reg* %5682, i32 0, i32 0
  %RCX.i996 = bitcast %union.anon* %5683 to i64*
  %5684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5685 = getelementptr inbounds %struct.GPR, %struct.GPR* %5684, i32 0, i32 15
  %5686 = getelementptr inbounds %struct.Reg, %struct.Reg* %5685, i32 0, i32 0
  %RBP.i997 = bitcast %union.anon* %5686 to i64*
  %5687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5688 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5687, i64 0, i64 1
  %YMM1.i998 = bitcast %union.VectorReg* %5688 to %"class.std::bitset"*
  %5689 = bitcast %"class.std::bitset"* %YMM1.i998 to i8*
  %5690 = bitcast %"class.std::bitset"* %YMM1.i998 to i8*
  %5691 = load i64, i64* %RBP.i997
  %5692 = load i64, i64* %RCX.i996
  %5693 = mul i64 %5692, 8
  %5694 = add i64 %5691, -160
  %5695 = add i64 %5694, %5693
  %5696 = load i64, i64* %PC.i995
  %5697 = add i64 %5696, 9
  store i64 %5697, i64* %PC.i995
  %5698 = bitcast i8* %5690 to double*
  %5699 = load double, double* %5698, align 1
  %5700 = getelementptr inbounds i8, i8* %5690, i64 8
  %5701 = bitcast i8* %5700 to i64*
  %5702 = load i64, i64* %5701, align 1
  %5703 = inttoptr i64 %5695 to double*
  %5704 = load double, double* %5703
  %5705 = fsub double %5699, %5704
  %5706 = bitcast i8* %5689 to double*
  store double %5705, double* %5706, align 1
  %5707 = getelementptr inbounds i8, i8* %5689, i64 8
  %5708 = bitcast i8* %5707 to i64*
  store i64 %5702, i64* %5708, align 1
  store %struct.Memory* %loadMem_4ae03a, %struct.Memory** %MEMORY
  %loadMem_4ae043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5710 = getelementptr inbounds %struct.GPR, %struct.GPR* %5709, i32 0, i32 33
  %5711 = getelementptr inbounds %struct.Reg, %struct.Reg* %5710, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %5711 to i64*
  %5712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5713 = getelementptr inbounds %struct.GPR, %struct.GPR* %5712, i32 0, i32 5
  %5714 = getelementptr inbounds %struct.Reg, %struct.Reg* %5713, i32 0, i32 0
  %RCX.i994 = bitcast %union.anon* %5714 to i64*
  %5715 = load i64, i64* %PC.i993
  %5716 = add i64 %5715, 8
  store i64 %5716, i64* %PC.i993
  %5717 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5717, i64* %RCX.i994, align 8
  store %struct.Memory* %loadMem_4ae043, %struct.Memory** %MEMORY
  %loadMem_4ae04b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5719 = getelementptr inbounds %struct.GPR, %struct.GPR* %5718, i32 0, i32 33
  %5720 = getelementptr inbounds %struct.Reg, %struct.Reg* %5719, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %5720 to i64*
  %5721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5722 = getelementptr inbounds %struct.GPR, %struct.GPR* %5721, i32 0, i32 5
  %5723 = getelementptr inbounds %struct.Reg, %struct.Reg* %5722, i32 0, i32 0
  %RCX.i991 = bitcast %union.anon* %5723 to i64*
  %5724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5725 = getelementptr inbounds %struct.GPR, %struct.GPR* %5724, i32 0, i32 7
  %5726 = getelementptr inbounds %struct.Reg, %struct.Reg* %5725, i32 0, i32 0
  %RDX.i992 = bitcast %union.anon* %5726 to i64*
  %5727 = load i64, i64* %RCX.i991
  %5728 = add i64 %5727, 60
  %5729 = load i64, i64* %PC.i990
  %5730 = add i64 %5729, 3
  store i64 %5730, i64* %PC.i990
  %5731 = inttoptr i64 %5728 to i32*
  %5732 = load i32, i32* %5731
  %5733 = zext i32 %5732 to i64
  store i64 %5733, i64* %RDX.i992, align 8
  store %struct.Memory* %loadMem_4ae04b, %struct.Memory** %MEMORY
  %loadMem_4ae04e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5735 = getelementptr inbounds %struct.GPR, %struct.GPR* %5734, i32 0, i32 33
  %5736 = getelementptr inbounds %struct.Reg, %struct.Reg* %5735, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %5736 to i64*
  %5737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5738 = getelementptr inbounds %struct.GPR, %struct.GPR* %5737, i32 0, i32 5
  %5739 = getelementptr inbounds %struct.Reg, %struct.Reg* %5738, i32 0, i32 0
  %RCX.i989 = bitcast %union.anon* %5739 to i64*
  %5740 = load i64, i64* %PC.i988
  %5741 = add i64 %5740, 8
  store i64 %5741, i64* %PC.i988
  %5742 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5742, i64* %RCX.i989, align 8
  store %struct.Memory* %loadMem_4ae04e, %struct.Memory** %MEMORY
  %loadMem_4ae056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5744 = getelementptr inbounds %struct.GPR, %struct.GPR* %5743, i32 0, i32 33
  %5745 = getelementptr inbounds %struct.Reg, %struct.Reg* %5744, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %5745 to i64*
  %5746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5747 = getelementptr inbounds %struct.GPR, %struct.GPR* %5746, i32 0, i32 5
  %5748 = getelementptr inbounds %struct.Reg, %struct.Reg* %5747, i32 0, i32 0
  %RCX.i986 = bitcast %union.anon* %5748 to i64*
  %5749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5750 = getelementptr inbounds %struct.GPR, %struct.GPR* %5749, i32 0, i32 7
  %5751 = getelementptr inbounds %struct.Reg, %struct.Reg* %5750, i32 0, i32 0
  %RDX.i987 = bitcast %union.anon* %5751 to i64*
  %5752 = load i64, i64* %RDX.i987
  %5753 = load i64, i64* %RCX.i986
  %5754 = add i64 %5753, 52
  %5755 = load i64, i64* %PC.i985
  %5756 = add i64 %5755, 4
  store i64 %5756, i64* %PC.i985
  %5757 = inttoptr i64 %5754 to i32*
  %5758 = load i32, i32* %5757
  %5759 = shl i64 %5752, 32
  %5760 = ashr exact i64 %5759, 32
  %5761 = sext i32 %5758 to i64
  %5762 = mul i64 %5761, %5760
  %5763 = trunc i64 %5762 to i32
  %5764 = and i64 %5762, 4294967295
  store i64 %5764, i64* %RDX.i987, align 8
  %5765 = shl i64 %5762, 32
  %5766 = ashr exact i64 %5765, 32
  %5767 = icmp ne i64 %5766, %5762
  %5768 = zext i1 %5767 to i8
  %5769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5768, i8* %5769, align 1
  %5770 = and i32 %5763, 255
  %5771 = call i32 @llvm.ctpop.i32(i32 %5770)
  %5772 = trunc i32 %5771 to i8
  %5773 = and i8 %5772, 1
  %5774 = xor i8 %5773, 1
  %5775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5774, i8* %5775, align 1
  %5776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5776, align 1
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5777, align 1
  %5778 = lshr i32 %5763, 31
  %5779 = trunc i32 %5778 to i8
  %5780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5779, i8* %5780, align 1
  %5781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5768, i8* %5781, align 1
  store %struct.Memory* %loadMem_4ae056, %struct.Memory** %MEMORY
  %loadMem_4ae05a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5783 = getelementptr inbounds %struct.GPR, %struct.GPR* %5782, i32 0, i32 33
  %5784 = getelementptr inbounds %struct.Reg, %struct.Reg* %5783, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %5784 to i64*
  %5785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5786 = getelementptr inbounds %struct.GPR, %struct.GPR* %5785, i32 0, i32 7
  %5787 = getelementptr inbounds %struct.Reg, %struct.Reg* %5786, i32 0, i32 0
  %EDX.i984 = bitcast %union.anon* %5787 to i32*
  %5788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5789 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5788, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %5789 to %"class.std::bitset"*
  %5790 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %5791 = load i32, i32* %EDX.i984
  %5792 = zext i32 %5791 to i64
  %5793 = load i64, i64* %PC.i983
  %5794 = add i64 %5793, 4
  store i64 %5794, i64* %PC.i983
  %5795 = sitofp i32 %5791 to double
  %5796 = bitcast i8* %5790 to double*
  store double %5795, double* %5796, align 1
  store %struct.Memory* %loadMem_4ae05a, %struct.Memory** %MEMORY
  %loadMem_4ae05e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5798 = getelementptr inbounds %struct.GPR, %struct.GPR* %5797, i32 0, i32 33
  %5799 = getelementptr inbounds %struct.Reg, %struct.Reg* %5798, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %5799 to i64*
  %5800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5801 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5800, i64 0, i64 1
  %YMM1.i982 = bitcast %union.VectorReg* %5801 to %"class.std::bitset"*
  %5802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5803 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5802, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %5803 to %union.vec128_t*
  %5804 = bitcast %"class.std::bitset"* %YMM1.i982 to i8*
  %5805 = bitcast %"class.std::bitset"* %YMM1.i982 to i8*
  %5806 = bitcast %union.vec128_t* %XMM2.i to i8*
  %5807 = load i64, i64* %PC.i981
  %5808 = add i64 %5807, 4
  store i64 %5808, i64* %PC.i981
  %5809 = bitcast i8* %5805 to double*
  %5810 = load double, double* %5809, align 1
  %5811 = getelementptr inbounds i8, i8* %5805, i64 8
  %5812 = bitcast i8* %5811 to i64*
  %5813 = load i64, i64* %5812, align 1
  %5814 = bitcast i8* %5806 to double*
  %5815 = load double, double* %5814, align 1
  %5816 = fdiv double %5810, %5815
  %5817 = bitcast i8* %5804 to double*
  store double %5816, double* %5817, align 1
  %5818 = getelementptr inbounds i8, i8* %5804, i64 8
  %5819 = bitcast i8* %5818 to i64*
  store i64 %5813, i64* %5819, align 1
  store %struct.Memory* %loadMem_4ae05e, %struct.Memory** %MEMORY
  %loadMem_4ae062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5821 = getelementptr inbounds %struct.GPR, %struct.GPR* %5820, i32 0, i32 33
  %5822 = getelementptr inbounds %struct.Reg, %struct.Reg* %5821, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %5822 to i64*
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5824 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5823, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %5824 to %"class.std::bitset"*
  %5825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5826 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5825, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %5826 to %union.vec128_t*
  %5827 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %5828 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %5829 = bitcast %union.vec128_t* %XMM0.i to i8*
  %5830 = load i64, i64* %PC.i980
  %5831 = add i64 %5830, 4
  store i64 %5831, i64* %PC.i980
  %5832 = bitcast i8* %5828 to double*
  %5833 = load double, double* %5832, align 1
  %5834 = getelementptr inbounds i8, i8* %5828, i64 8
  %5835 = bitcast i8* %5834 to i64*
  %5836 = load i64, i64* %5835, align 1
  %5837 = bitcast i8* %5829 to double*
  %5838 = load double, double* %5837, align 1
  %5839 = fadd double %5833, %5838
  %5840 = bitcast i8* %5827 to double*
  store double %5839, double* %5840, align 1
  %5841 = getelementptr inbounds i8, i8* %5827, i64 8
  %5842 = bitcast i8* %5841 to i64*
  store i64 %5836, i64* %5842, align 1
  store %struct.Memory* %loadMem_4ae062, %struct.Memory** %MEMORY
  %loadMem_4ae066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5844 = getelementptr inbounds %struct.GPR, %struct.GPR* %5843, i32 0, i32 33
  %5845 = getelementptr inbounds %struct.Reg, %struct.Reg* %5844, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %5845 to i64*
  %5846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5847 = getelementptr inbounds %struct.GPR, %struct.GPR* %5846, i32 0, i32 7
  %5848 = getelementptr inbounds %struct.Reg, %struct.Reg* %5847, i32 0, i32 0
  %RDX.i979 = bitcast %union.anon* %5848 to i64*
  %5849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5850 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5849, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %5850 to %union.vec128_t*
  %5851 = bitcast %union.vec128_t* %XMM1.i to i8*
  %5852 = load i64, i64* %PC.i978
  %5853 = add i64 %5852, 4
  store i64 %5853, i64* %PC.i978
  %5854 = bitcast i8* %5851 to double*
  %5855 = load double, double* %5854, align 1
  %5856 = call double @llvm.trunc.f64(double %5855)
  %5857 = call double @llvm.fabs.f64(double %5856)
  %5858 = fcmp ogt double %5857, 0x41DFFFFFFFC00000
  %5859 = fptosi double %5856 to i32
  %5860 = zext i32 %5859 to i64
  %5861 = select i1 %5858, i64 2147483648, i64 %5860
  store i64 %5861, i64* %RDX.i979, align 8
  store %struct.Memory* %loadMem_4ae066, %struct.Memory** %MEMORY
  %loadMem_4ae06a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5863 = getelementptr inbounds %struct.GPR, %struct.GPR* %5862, i32 0, i32 33
  %5864 = getelementptr inbounds %struct.Reg, %struct.Reg* %5863, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %5864 to i64*
  %5865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5866 = getelementptr inbounds %struct.GPR, %struct.GPR* %5865, i32 0, i32 5
  %5867 = getelementptr inbounds %struct.Reg, %struct.Reg* %5866, i32 0, i32 0
  %RCX.i976 = bitcast %union.anon* %5867 to i64*
  %5868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5869 = getelementptr inbounds %struct.GPR, %struct.GPR* %5868, i32 0, i32 15
  %5870 = getelementptr inbounds %struct.Reg, %struct.Reg* %5869, i32 0, i32 0
  %RBP.i977 = bitcast %union.anon* %5870 to i64*
  %5871 = load i64, i64* %RBP.i977
  %5872 = sub i64 %5871, 932
  %5873 = load i64, i64* %PC.i975
  %5874 = add i64 %5873, 7
  store i64 %5874, i64* %PC.i975
  %5875 = inttoptr i64 %5872 to i32*
  %5876 = load i32, i32* %5875
  %5877 = sext i32 %5876 to i64
  store i64 %5877, i64* %RCX.i976, align 8
  store %struct.Memory* %loadMem_4ae06a, %struct.Memory** %MEMORY
  %loadMem_4ae071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5879 = getelementptr inbounds %struct.GPR, %struct.GPR* %5878, i32 0, i32 33
  %5880 = getelementptr inbounds %struct.Reg, %struct.Reg* %5879, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %5880 to i64*
  %5881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5882 = getelementptr inbounds %struct.GPR, %struct.GPR* %5881, i32 0, i32 5
  %5883 = getelementptr inbounds %struct.Reg, %struct.Reg* %5882, i32 0, i32 0
  %RCX.i974 = bitcast %union.anon* %5883 to i64*
  %5884 = load i64, i64* %RCX.i974
  %5885 = load i64, i64* %PC.i973
  %5886 = add i64 %5885, 7
  store i64 %5886, i64* %PC.i973
  %5887 = sext i64 %5884 to i128
  %5888 = and i128 %5887, -18446744073709551616
  %5889 = zext i64 %5884 to i128
  %5890 = or i128 %5888, %5889
  %5891 = mul i128 180, %5890
  %5892 = trunc i128 %5891 to i64
  store i64 %5892, i64* %RCX.i974, align 8
  %5893 = sext i64 %5892 to i128
  %5894 = icmp ne i128 %5893, %5891
  %5895 = zext i1 %5894 to i8
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5895, i8* %5896, align 1
  %5897 = trunc i128 %5891 to i32
  %5898 = and i32 %5897, 255
  %5899 = call i32 @llvm.ctpop.i32(i32 %5898)
  %5900 = trunc i32 %5899 to i8
  %5901 = and i8 %5900, 1
  %5902 = xor i8 %5901, 1
  %5903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5902, i8* %5903, align 1
  %5904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5904, align 1
  %5905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5905, align 1
  %5906 = lshr i64 %5892, 63
  %5907 = trunc i64 %5906 to i8
  %5908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5907, i8* %5908, align 1
  %5909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5895, i8* %5909, align 1
  store %struct.Memory* %loadMem_4ae071, %struct.Memory** %MEMORY
  %loadMem_4ae078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5911 = getelementptr inbounds %struct.GPR, %struct.GPR* %5910, i32 0, i32 33
  %5912 = getelementptr inbounds %struct.Reg, %struct.Reg* %5911, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %5912 to i64*
  %5913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5914 = getelementptr inbounds %struct.GPR, %struct.GPR* %5913, i32 0, i32 1
  %5915 = getelementptr inbounds %struct.Reg, %struct.Reg* %5914, i32 0, i32 0
  %RAX.i971 = bitcast %union.anon* %5915 to i64*
  %5916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5917 = getelementptr inbounds %struct.GPR, %struct.GPR* %5916, i32 0, i32 9
  %5918 = getelementptr inbounds %struct.Reg, %struct.Reg* %5917, i32 0, i32 0
  %RSI.i972 = bitcast %union.anon* %5918 to i64*
  %5919 = load i64, i64* %RAX.i971
  %5920 = load i64, i64* %PC.i970
  %5921 = add i64 %5920, 3
  store i64 %5921, i64* %PC.i970
  store i64 %5919, i64* %RSI.i972, align 8
  store %struct.Memory* %loadMem_4ae078, %struct.Memory** %MEMORY
  %loadMem_4ae07b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5923 = getelementptr inbounds %struct.GPR, %struct.GPR* %5922, i32 0, i32 33
  %5924 = getelementptr inbounds %struct.Reg, %struct.Reg* %5923, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %5924 to i64*
  %5925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5926 = getelementptr inbounds %struct.GPR, %struct.GPR* %5925, i32 0, i32 5
  %5927 = getelementptr inbounds %struct.Reg, %struct.Reg* %5926, i32 0, i32 0
  %RCX.i968 = bitcast %union.anon* %5927 to i64*
  %5928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5929 = getelementptr inbounds %struct.GPR, %struct.GPR* %5928, i32 0, i32 9
  %5930 = getelementptr inbounds %struct.Reg, %struct.Reg* %5929, i32 0, i32 0
  %RSI.i969 = bitcast %union.anon* %5930 to i64*
  %5931 = load i64, i64* %RSI.i969
  %5932 = load i64, i64* %RCX.i968
  %5933 = load i64, i64* %PC.i967
  %5934 = add i64 %5933, 3
  store i64 %5934, i64* %PC.i967
  %5935 = add i64 %5932, %5931
  store i64 %5935, i64* %RSI.i969, align 8
  %5936 = icmp ult i64 %5935, %5931
  %5937 = icmp ult i64 %5935, %5932
  %5938 = or i1 %5936, %5937
  %5939 = zext i1 %5938 to i8
  %5940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5939, i8* %5940, align 1
  %5941 = trunc i64 %5935 to i32
  %5942 = and i32 %5941, 255
  %5943 = call i32 @llvm.ctpop.i32(i32 %5942)
  %5944 = trunc i32 %5943 to i8
  %5945 = and i8 %5944, 1
  %5946 = xor i8 %5945, 1
  %5947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5946, i8* %5947, align 1
  %5948 = xor i64 %5932, %5931
  %5949 = xor i64 %5948, %5935
  %5950 = lshr i64 %5949, 4
  %5951 = trunc i64 %5950 to i8
  %5952 = and i8 %5951, 1
  %5953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5952, i8* %5953, align 1
  %5954 = icmp eq i64 %5935, 0
  %5955 = zext i1 %5954 to i8
  %5956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5955, i8* %5956, align 1
  %5957 = lshr i64 %5935, 63
  %5958 = trunc i64 %5957 to i8
  %5959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5958, i8* %5959, align 1
  %5960 = lshr i64 %5931, 63
  %5961 = lshr i64 %5932, 63
  %5962 = xor i64 %5957, %5960
  %5963 = xor i64 %5957, %5961
  %5964 = add i64 %5962, %5963
  %5965 = icmp eq i64 %5964, 2
  %5966 = zext i1 %5965 to i8
  %5967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5966, i8* %5967, align 1
  store %struct.Memory* %loadMem_4ae07b, %struct.Memory** %MEMORY
  %loadMem_4ae07e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5969 = getelementptr inbounds %struct.GPR, %struct.GPR* %5968, i32 0, i32 33
  %5970 = getelementptr inbounds %struct.Reg, %struct.Reg* %5969, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %5970 to i64*
  %5971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5972 = getelementptr inbounds %struct.GPR, %struct.GPR* %5971, i32 0, i32 5
  %5973 = getelementptr inbounds %struct.Reg, %struct.Reg* %5972, i32 0, i32 0
  %RCX.i965 = bitcast %union.anon* %5973 to i64*
  %5974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5975 = getelementptr inbounds %struct.GPR, %struct.GPR* %5974, i32 0, i32 15
  %5976 = getelementptr inbounds %struct.Reg, %struct.Reg* %5975, i32 0, i32 0
  %RBP.i966 = bitcast %union.anon* %5976 to i64*
  %5977 = load i64, i64* %RBP.i966
  %5978 = sub i64 %5977, 16
  %5979 = load i64, i64* %PC.i964
  %5980 = add i64 %5979, 4
  store i64 %5980, i64* %PC.i964
  %5981 = inttoptr i64 %5978 to i32*
  %5982 = load i32, i32* %5981
  %5983 = sext i32 %5982 to i64
  store i64 %5983, i64* %RCX.i965, align 8
  store %struct.Memory* %loadMem_4ae07e, %struct.Memory** %MEMORY
  %loadMem_4ae082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5985 = getelementptr inbounds %struct.GPR, %struct.GPR* %5984, i32 0, i32 33
  %5986 = getelementptr inbounds %struct.Reg, %struct.Reg* %5985, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %5986 to i64*
  %5987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5988 = getelementptr inbounds %struct.GPR, %struct.GPR* %5987, i32 0, i32 5
  %5989 = getelementptr inbounds %struct.Reg, %struct.Reg* %5988, i32 0, i32 0
  %RCX.i963 = bitcast %union.anon* %5989 to i64*
  %5990 = load i64, i64* %RCX.i963
  %5991 = load i64, i64* %PC.i962
  %5992 = add i64 %5991, 4
  store i64 %5992, i64* %PC.i962
  %5993 = sext i64 %5990 to i128
  %5994 = and i128 %5993, -18446744073709551616
  %5995 = zext i64 %5990 to i128
  %5996 = or i128 %5994, %5995
  %5997 = mul i128 12, %5996
  %5998 = trunc i128 %5997 to i64
  store i64 %5998, i64* %RCX.i963, align 8
  %5999 = sext i64 %5998 to i128
  %6000 = icmp ne i128 %5999, %5997
  %6001 = zext i1 %6000 to i8
  %6002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6001, i8* %6002, align 1
  %6003 = trunc i128 %5997 to i32
  %6004 = and i32 %6003, 255
  %6005 = call i32 @llvm.ctpop.i32(i32 %6004)
  %6006 = trunc i32 %6005 to i8
  %6007 = and i8 %6006, 1
  %6008 = xor i8 %6007, 1
  %6009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6008, i8* %6009, align 1
  %6010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6010, align 1
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6011, align 1
  %6012 = lshr i64 %5998, 63
  %6013 = trunc i64 %6012 to i8
  %6014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6013, i8* %6014, align 1
  %6015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6001, i8* %6015, align 1
  store %struct.Memory* %loadMem_4ae082, %struct.Memory** %MEMORY
  %loadMem_4ae086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6017 = getelementptr inbounds %struct.GPR, %struct.GPR* %6016, i32 0, i32 33
  %6018 = getelementptr inbounds %struct.Reg, %struct.Reg* %6017, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %6018 to i64*
  %6019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6020 = getelementptr inbounds %struct.GPR, %struct.GPR* %6019, i32 0, i32 5
  %6021 = getelementptr inbounds %struct.Reg, %struct.Reg* %6020, i32 0, i32 0
  %RCX.i960 = bitcast %union.anon* %6021 to i64*
  %6022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6023 = getelementptr inbounds %struct.GPR, %struct.GPR* %6022, i32 0, i32 9
  %6024 = getelementptr inbounds %struct.Reg, %struct.Reg* %6023, i32 0, i32 0
  %RSI.i961 = bitcast %union.anon* %6024 to i64*
  %6025 = load i64, i64* %RSI.i961
  %6026 = load i64, i64* %RCX.i960
  %6027 = load i64, i64* %PC.i959
  %6028 = add i64 %6027, 3
  store i64 %6028, i64* %PC.i959
  %6029 = add i64 %6026, %6025
  store i64 %6029, i64* %RSI.i961, align 8
  %6030 = icmp ult i64 %6029, %6025
  %6031 = icmp ult i64 %6029, %6026
  %6032 = or i1 %6030, %6031
  %6033 = zext i1 %6032 to i8
  %6034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6033, i8* %6034, align 1
  %6035 = trunc i64 %6029 to i32
  %6036 = and i32 %6035, 255
  %6037 = call i32 @llvm.ctpop.i32(i32 %6036)
  %6038 = trunc i32 %6037 to i8
  %6039 = and i8 %6038, 1
  %6040 = xor i8 %6039, 1
  %6041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6040, i8* %6041, align 1
  %6042 = xor i64 %6026, %6025
  %6043 = xor i64 %6042, %6029
  %6044 = lshr i64 %6043, 4
  %6045 = trunc i64 %6044 to i8
  %6046 = and i8 %6045, 1
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6046, i8* %6047, align 1
  %6048 = icmp eq i64 %6029, 0
  %6049 = zext i1 %6048 to i8
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6049, i8* %6050, align 1
  %6051 = lshr i64 %6029, 63
  %6052 = trunc i64 %6051 to i8
  %6053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6052, i8* %6053, align 1
  %6054 = lshr i64 %6025, 63
  %6055 = lshr i64 %6026, 63
  %6056 = xor i64 %6051, %6054
  %6057 = xor i64 %6051, %6055
  %6058 = add i64 %6056, %6057
  %6059 = icmp eq i64 %6058, 2
  %6060 = zext i1 %6059 to i8
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6060, i8* %6061, align 1
  store %struct.Memory* %loadMem_4ae086, %struct.Memory** %MEMORY
  %loadMem_4ae089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6063 = getelementptr inbounds %struct.GPR, %struct.GPR* %6062, i32 0, i32 33
  %6064 = getelementptr inbounds %struct.Reg, %struct.Reg* %6063, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %6064 to i64*
  %6065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6066 = getelementptr inbounds %struct.GPR, %struct.GPR* %6065, i32 0, i32 7
  %6067 = getelementptr inbounds %struct.Reg, %struct.Reg* %6066, i32 0, i32 0
  %EDX.i957 = bitcast %union.anon* %6067 to i32*
  %6068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6069 = getelementptr inbounds %struct.GPR, %struct.GPR* %6068, i32 0, i32 9
  %6070 = getelementptr inbounds %struct.Reg, %struct.Reg* %6069, i32 0, i32 0
  %RSI.i958 = bitcast %union.anon* %6070 to i64*
  %6071 = load i64, i64* %RSI.i958
  %6072 = load i32, i32* %EDX.i957
  %6073 = zext i32 %6072 to i64
  %6074 = load i64, i64* %PC.i956
  %6075 = add i64 %6074, 2
  store i64 %6075, i64* %PC.i956
  %6076 = inttoptr i64 %6071 to i32*
  store i32 %6072, i32* %6076
  store %struct.Memory* %loadMem_4ae089, %struct.Memory** %MEMORY
  %loadMem_4ae08b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6078 = getelementptr inbounds %struct.GPR, %struct.GPR* %6077, i32 0, i32 33
  %6079 = getelementptr inbounds %struct.Reg, %struct.Reg* %6078, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %6079 to i64*
  %6080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6081 = getelementptr inbounds %struct.GPR, %struct.GPR* %6080, i32 0, i32 5
  %6082 = getelementptr inbounds %struct.Reg, %struct.Reg* %6081, i32 0, i32 0
  %RCX.i954 = bitcast %union.anon* %6082 to i64*
  %6083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6084 = getelementptr inbounds %struct.GPR, %struct.GPR* %6083, i32 0, i32 15
  %6085 = getelementptr inbounds %struct.Reg, %struct.Reg* %6084, i32 0, i32 0
  %RBP.i955 = bitcast %union.anon* %6085 to i64*
  %6086 = load i64, i64* %RBP.i955
  %6087 = sub i64 %6086, 932
  %6088 = load i64, i64* %PC.i953
  %6089 = add i64 %6088, 7
  store i64 %6089, i64* %PC.i953
  %6090 = inttoptr i64 %6087 to i32*
  %6091 = load i32, i32* %6090
  %6092 = sext i32 %6091 to i64
  store i64 %6092, i64* %RCX.i954, align 8
  store %struct.Memory* %loadMem_4ae08b, %struct.Memory** %MEMORY
  %loadMem_4ae092 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6094 = getelementptr inbounds %struct.GPR, %struct.GPR* %6093, i32 0, i32 33
  %6095 = getelementptr inbounds %struct.Reg, %struct.Reg* %6094, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %6095 to i64*
  %6096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6097 = getelementptr inbounds %struct.GPR, %struct.GPR* %6096, i32 0, i32 5
  %6098 = getelementptr inbounds %struct.Reg, %struct.Reg* %6097, i32 0, i32 0
  %RCX.i952 = bitcast %union.anon* %6098 to i64*
  %6099 = load i64, i64* %RCX.i952
  %6100 = load i64, i64* %PC.i951
  %6101 = add i64 %6100, 7
  store i64 %6101, i64* %PC.i951
  %6102 = sext i64 %6099 to i128
  %6103 = and i128 %6102, -18446744073709551616
  %6104 = zext i64 %6099 to i128
  %6105 = or i128 %6103, %6104
  %6106 = mul i128 180, %6105
  %6107 = trunc i128 %6106 to i64
  store i64 %6107, i64* %RCX.i952, align 8
  %6108 = sext i64 %6107 to i128
  %6109 = icmp ne i128 %6108, %6106
  %6110 = zext i1 %6109 to i8
  %6111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6110, i8* %6111, align 1
  %6112 = trunc i128 %6106 to i32
  %6113 = and i32 %6112, 255
  %6114 = call i32 @llvm.ctpop.i32(i32 %6113)
  %6115 = trunc i32 %6114 to i8
  %6116 = and i8 %6115, 1
  %6117 = xor i8 %6116, 1
  %6118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6117, i8* %6118, align 1
  %6119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6119, align 1
  %6120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6120, align 1
  %6121 = lshr i64 %6107, 63
  %6122 = trunc i64 %6121 to i8
  %6123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6122, i8* %6123, align 1
  %6124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6110, i8* %6124, align 1
  store %struct.Memory* %loadMem_4ae092, %struct.Memory** %MEMORY
  %loadMem_4ae099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6126 = getelementptr inbounds %struct.GPR, %struct.GPR* %6125, i32 0, i32 33
  %6127 = getelementptr inbounds %struct.Reg, %struct.Reg* %6126, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %6127 to i64*
  %6128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6129 = getelementptr inbounds %struct.GPR, %struct.GPR* %6128, i32 0, i32 1
  %6130 = getelementptr inbounds %struct.Reg, %struct.Reg* %6129, i32 0, i32 0
  %RAX.i949 = bitcast %union.anon* %6130 to i64*
  %6131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6132 = getelementptr inbounds %struct.GPR, %struct.GPR* %6131, i32 0, i32 5
  %6133 = getelementptr inbounds %struct.Reg, %struct.Reg* %6132, i32 0, i32 0
  %RCX.i950 = bitcast %union.anon* %6133 to i64*
  %6134 = load i64, i64* %RAX.i949
  %6135 = load i64, i64* %RCX.i950
  %6136 = load i64, i64* %PC.i948
  %6137 = add i64 %6136, 3
  store i64 %6137, i64* %PC.i948
  %6138 = add i64 %6135, %6134
  store i64 %6138, i64* %RAX.i949, align 8
  %6139 = icmp ult i64 %6138, %6134
  %6140 = icmp ult i64 %6138, %6135
  %6141 = or i1 %6139, %6140
  %6142 = zext i1 %6141 to i8
  %6143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6142, i8* %6143, align 1
  %6144 = trunc i64 %6138 to i32
  %6145 = and i32 %6144, 255
  %6146 = call i32 @llvm.ctpop.i32(i32 %6145)
  %6147 = trunc i32 %6146 to i8
  %6148 = and i8 %6147, 1
  %6149 = xor i8 %6148, 1
  %6150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6149, i8* %6150, align 1
  %6151 = xor i64 %6135, %6134
  %6152 = xor i64 %6151, %6138
  %6153 = lshr i64 %6152, 4
  %6154 = trunc i64 %6153 to i8
  %6155 = and i8 %6154, 1
  %6156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6155, i8* %6156, align 1
  %6157 = icmp eq i64 %6138, 0
  %6158 = zext i1 %6157 to i8
  %6159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6158, i8* %6159, align 1
  %6160 = lshr i64 %6138, 63
  %6161 = trunc i64 %6160 to i8
  %6162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6161, i8* %6162, align 1
  %6163 = lshr i64 %6134, 63
  %6164 = lshr i64 %6135, 63
  %6165 = xor i64 %6160, %6163
  %6166 = xor i64 %6160, %6164
  %6167 = add i64 %6165, %6166
  %6168 = icmp eq i64 %6167, 2
  %6169 = zext i1 %6168 to i8
  %6170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6169, i8* %6170, align 1
  store %struct.Memory* %loadMem_4ae099, %struct.Memory** %MEMORY
  %loadMem_4ae09c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6172 = getelementptr inbounds %struct.GPR, %struct.GPR* %6171, i32 0, i32 33
  %6173 = getelementptr inbounds %struct.Reg, %struct.Reg* %6172, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %6173 to i64*
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6175 = getelementptr inbounds %struct.GPR, %struct.GPR* %6174, i32 0, i32 5
  %6176 = getelementptr inbounds %struct.Reg, %struct.Reg* %6175, i32 0, i32 0
  %RCX.i946 = bitcast %union.anon* %6176 to i64*
  %6177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6178 = getelementptr inbounds %struct.GPR, %struct.GPR* %6177, i32 0, i32 15
  %6179 = getelementptr inbounds %struct.Reg, %struct.Reg* %6178, i32 0, i32 0
  %RBP.i947 = bitcast %union.anon* %6179 to i64*
  %6180 = load i64, i64* %RBP.i947
  %6181 = sub i64 %6180, 16
  %6182 = load i64, i64* %PC.i945
  %6183 = add i64 %6182, 4
  store i64 %6183, i64* %PC.i945
  %6184 = inttoptr i64 %6181 to i32*
  %6185 = load i32, i32* %6184
  %6186 = sext i32 %6185 to i64
  store i64 %6186, i64* %RCX.i946, align 8
  store %struct.Memory* %loadMem_4ae09c, %struct.Memory** %MEMORY
  %loadMem_4ae0a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6188 = getelementptr inbounds %struct.GPR, %struct.GPR* %6187, i32 0, i32 33
  %6189 = getelementptr inbounds %struct.Reg, %struct.Reg* %6188, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %6189 to i64*
  %6190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6191 = getelementptr inbounds %struct.GPR, %struct.GPR* %6190, i32 0, i32 5
  %6192 = getelementptr inbounds %struct.Reg, %struct.Reg* %6191, i32 0, i32 0
  %RCX.i944 = bitcast %union.anon* %6192 to i64*
  %6193 = load i64, i64* %RCX.i944
  %6194 = load i64, i64* %PC.i943
  %6195 = add i64 %6194, 4
  store i64 %6195, i64* %PC.i943
  %6196 = sext i64 %6193 to i128
  %6197 = and i128 %6196, -18446744073709551616
  %6198 = zext i64 %6193 to i128
  %6199 = or i128 %6197, %6198
  %6200 = mul i128 12, %6199
  %6201 = trunc i128 %6200 to i64
  store i64 %6201, i64* %RCX.i944, align 8
  %6202 = sext i64 %6201 to i128
  %6203 = icmp ne i128 %6202, %6200
  %6204 = zext i1 %6203 to i8
  %6205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6204, i8* %6205, align 1
  %6206 = trunc i128 %6200 to i32
  %6207 = and i32 %6206, 255
  %6208 = call i32 @llvm.ctpop.i32(i32 %6207)
  %6209 = trunc i32 %6208 to i8
  %6210 = and i8 %6209, 1
  %6211 = xor i8 %6210, 1
  %6212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6211, i8* %6212, align 1
  %6213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6213, align 1
  %6214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6214, align 1
  %6215 = lshr i64 %6201, 63
  %6216 = trunc i64 %6215 to i8
  %6217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6216, i8* %6217, align 1
  %6218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6204, i8* %6218, align 1
  store %struct.Memory* %loadMem_4ae0a0, %struct.Memory** %MEMORY
  %loadMem_4ae0a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6220 = getelementptr inbounds %struct.GPR, %struct.GPR* %6219, i32 0, i32 33
  %6221 = getelementptr inbounds %struct.Reg, %struct.Reg* %6220, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %6221 to i64*
  %6222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6223 = getelementptr inbounds %struct.GPR, %struct.GPR* %6222, i32 0, i32 1
  %6224 = getelementptr inbounds %struct.Reg, %struct.Reg* %6223, i32 0, i32 0
  %RAX.i941 = bitcast %union.anon* %6224 to i64*
  %6225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6226 = getelementptr inbounds %struct.GPR, %struct.GPR* %6225, i32 0, i32 5
  %6227 = getelementptr inbounds %struct.Reg, %struct.Reg* %6226, i32 0, i32 0
  %RCX.i942 = bitcast %union.anon* %6227 to i64*
  %6228 = load i64, i64* %RAX.i941
  %6229 = load i64, i64* %RCX.i942
  %6230 = load i64, i64* %PC.i940
  %6231 = add i64 %6230, 3
  store i64 %6231, i64* %PC.i940
  %6232 = add i64 %6229, %6228
  store i64 %6232, i64* %RAX.i941, align 8
  %6233 = icmp ult i64 %6232, %6228
  %6234 = icmp ult i64 %6232, %6229
  %6235 = or i1 %6233, %6234
  %6236 = zext i1 %6235 to i8
  %6237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6236, i8* %6237, align 1
  %6238 = trunc i64 %6232 to i32
  %6239 = and i32 %6238, 255
  %6240 = call i32 @llvm.ctpop.i32(i32 %6239)
  %6241 = trunc i32 %6240 to i8
  %6242 = and i8 %6241, 1
  %6243 = xor i8 %6242, 1
  %6244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6243, i8* %6244, align 1
  %6245 = xor i64 %6229, %6228
  %6246 = xor i64 %6245, %6232
  %6247 = lshr i64 %6246, 4
  %6248 = trunc i64 %6247 to i8
  %6249 = and i8 %6248, 1
  %6250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6249, i8* %6250, align 1
  %6251 = icmp eq i64 %6232, 0
  %6252 = zext i1 %6251 to i8
  %6253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6252, i8* %6253, align 1
  %6254 = lshr i64 %6232, 63
  %6255 = trunc i64 %6254 to i8
  %6256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6255, i8* %6256, align 1
  %6257 = lshr i64 %6228, 63
  %6258 = lshr i64 %6229, 63
  %6259 = xor i64 %6254, %6257
  %6260 = xor i64 %6254, %6258
  %6261 = add i64 %6259, %6260
  %6262 = icmp eq i64 %6261, 2
  %6263 = zext i1 %6262 to i8
  %6264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6263, i8* %6264, align 1
  store %struct.Memory* %loadMem_4ae0a4, %struct.Memory** %MEMORY
  %loadMem_4ae0a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6266 = getelementptr inbounds %struct.GPR, %struct.GPR* %6265, i32 0, i32 33
  %6267 = getelementptr inbounds %struct.Reg, %struct.Reg* %6266, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %6267 to i64*
  %6268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6269 = getelementptr inbounds %struct.GPR, %struct.GPR* %6268, i32 0, i32 1
  %6270 = getelementptr inbounds %struct.Reg, %struct.Reg* %6269, i32 0, i32 0
  %RAX.i939 = bitcast %union.anon* %6270 to i64*
  %6271 = load i64, i64* %RAX.i939
  %6272 = load i64, i64* %PC.i938
  %6273 = add i64 %6272, 3
  store i64 %6273, i64* %PC.i938
  %6274 = inttoptr i64 %6271 to i32*
  %6275 = load i32, i32* %6274
  %6276 = sub i32 %6275, -128
  %6277 = icmp ult i32 %6275, -128
  %6278 = zext i1 %6277 to i8
  %6279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6278, i8* %6279, align 1
  %6280 = and i32 %6276, 255
  %6281 = call i32 @llvm.ctpop.i32(i32 %6280)
  %6282 = trunc i32 %6281 to i8
  %6283 = and i8 %6282, 1
  %6284 = xor i8 %6283, 1
  %6285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6284, i8* %6285, align 1
  %6286 = xor i32 %6275, -128
  %6287 = xor i32 %6286, %6276
  %6288 = lshr i32 %6287, 4
  %6289 = trunc i32 %6288 to i8
  %6290 = and i8 %6289, 1
  %6291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6290, i8* %6291, align 1
  %6292 = icmp eq i32 %6276, 0
  %6293 = zext i1 %6292 to i8
  %6294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6293, i8* %6294, align 1
  %6295 = lshr i32 %6276, 31
  %6296 = trunc i32 %6295 to i8
  %6297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6296, i8* %6297, align 1
  %6298 = lshr i32 %6275, 31
  %6299 = xor i32 %6298, 1
  %6300 = xor i32 %6295, %6298
  %6301 = add i32 %6300, %6299
  %6302 = icmp eq i32 %6301, 2
  %6303 = zext i1 %6302 to i8
  %6304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6303, i8* %6304, align 1
  store %struct.Memory* %loadMem_4ae0a7, %struct.Memory** %MEMORY
  %loadMem_4ae0aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6306 = getelementptr inbounds %struct.GPR, %struct.GPR* %6305, i32 0, i32 33
  %6307 = getelementptr inbounds %struct.Reg, %struct.Reg* %6306, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %6307 to i64*
  %6308 = load i64, i64* %PC.i937
  %6309 = add i64 %6308, 22
  %6310 = load i64, i64* %PC.i937
  %6311 = add i64 %6310, 6
  %6312 = load i64, i64* %PC.i937
  %6313 = add i64 %6312, 6
  store i64 %6313, i64* %PC.i937
  %6314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6315 = load i8, i8* %6314, align 1
  %6316 = icmp ne i8 %6315, 0
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6318 = load i8, i8* %6317, align 1
  %6319 = icmp ne i8 %6318, 0
  %6320 = xor i1 %6316, %6319
  %6321 = xor i1 %6320, true
  %6322 = zext i1 %6321 to i8
  store i8 %6322, i8* %BRANCH_TAKEN, align 1
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6324 = select i1 %6320, i64 %6311, i64 %6309
  store i64 %6324, i64* %6323, align 8
  store %struct.Memory* %loadMem_4ae0aa, %struct.Memory** %MEMORY
  %loadBr_4ae0aa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae0aa = icmp eq i8 %loadBr_4ae0aa, 1
  br i1 %cmpBr_4ae0aa, label %block_.L_4ae0c0, label %block_4ae0b0

block_4ae0b0:                                     ; preds = %block_.L_4ae022
  %loadMem_4ae0b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6326 = getelementptr inbounds %struct.GPR, %struct.GPR* %6325, i32 0, i32 33
  %6327 = getelementptr inbounds %struct.Reg, %struct.Reg* %6326, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %6327 to i64*
  %6328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6329 = getelementptr inbounds %struct.GPR, %struct.GPR* %6328, i32 0, i32 1
  %6330 = getelementptr inbounds %struct.Reg, %struct.Reg* %6329, i32 0, i32 0
  %RAX.i936 = bitcast %union.anon* %6330 to i64*
  %6331 = load i64, i64* %PC.i935
  %6332 = add i64 %6331, 5
  store i64 %6332, i64* %PC.i935
  store i64 4294967168, i64* %RAX.i936, align 8
  store %struct.Memory* %loadMem_4ae0b0, %struct.Memory** %MEMORY
  %loadMem_4ae0b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6334 = getelementptr inbounds %struct.GPR, %struct.GPR* %6333, i32 0, i32 33
  %6335 = getelementptr inbounds %struct.Reg, %struct.Reg* %6334, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %6335 to i64*
  %6336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6337 = getelementptr inbounds %struct.GPR, %struct.GPR* %6336, i32 0, i32 1
  %6338 = getelementptr inbounds %struct.Reg, %struct.Reg* %6337, i32 0, i32 0
  %EAX.i933 = bitcast %union.anon* %6338 to i32*
  %6339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6340 = getelementptr inbounds %struct.GPR, %struct.GPR* %6339, i32 0, i32 15
  %6341 = getelementptr inbounds %struct.Reg, %struct.Reg* %6340, i32 0, i32 0
  %RBP.i934 = bitcast %union.anon* %6341 to i64*
  %6342 = load i64, i64* %RBP.i934
  %6343 = sub i64 %6342, 948
  %6344 = load i32, i32* %EAX.i933
  %6345 = zext i32 %6344 to i64
  %6346 = load i64, i64* %PC.i932
  %6347 = add i64 %6346, 6
  store i64 %6347, i64* %PC.i932
  %6348 = inttoptr i64 %6343 to i32*
  store i32 %6344, i32* %6348
  store %struct.Memory* %loadMem_4ae0b5, %struct.Memory** %MEMORY
  %loadMem_4ae0bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6350 = getelementptr inbounds %struct.GPR, %struct.GPR* %6349, i32 0, i32 33
  %6351 = getelementptr inbounds %struct.Reg, %struct.Reg* %6350, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %6351 to i64*
  %6352 = load i64, i64* %PC.i931
  %6353 = add i64 %6352, 120
  %6354 = load i64, i64* %PC.i931
  %6355 = add i64 %6354, 5
  store i64 %6355, i64* %PC.i931
  %6356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6353, i64* %6356, align 8
  store %struct.Memory* %loadMem_4ae0bb, %struct.Memory** %MEMORY
  br label %block_.L_4ae133

block_.L_4ae0c0:                                  ; preds = %block_.L_4ae022
  %loadMem_4ae0c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6358 = getelementptr inbounds %struct.GPR, %struct.GPR* %6357, i32 0, i32 33
  %6359 = getelementptr inbounds %struct.Reg, %struct.Reg* %6358, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %6359 to i64*
  %6360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6361 = getelementptr inbounds %struct.GPR, %struct.GPR* %6360, i32 0, i32 1
  %6362 = getelementptr inbounds %struct.Reg, %struct.Reg* %6361, i32 0, i32 0
  %RAX.i929 = bitcast %union.anon* %6362 to i64*
  %6363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6364 = getelementptr inbounds %struct.GPR, %struct.GPR* %6363, i32 0, i32 15
  %6365 = getelementptr inbounds %struct.Reg, %struct.Reg* %6364, i32 0, i32 0
  %RBP.i930 = bitcast %union.anon* %6365 to i64*
  %6366 = load i64, i64* %RBP.i930
  %6367 = sub i64 %6366, 928
  %6368 = load i64, i64* %PC.i928
  %6369 = add i64 %6368, 7
  store i64 %6369, i64* %PC.i928
  store i64 %6367, i64* %RAX.i929, align 8
  store %struct.Memory* %loadMem_4ae0c0, %struct.Memory** %MEMORY
  %loadMem_4ae0c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6371 = getelementptr inbounds %struct.GPR, %struct.GPR* %6370, i32 0, i32 33
  %6372 = getelementptr inbounds %struct.Reg, %struct.Reg* %6371, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %6372 to i64*
  %6373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6374 = getelementptr inbounds %struct.GPR, %struct.GPR* %6373, i32 0, i32 5
  %6375 = getelementptr inbounds %struct.Reg, %struct.Reg* %6374, i32 0, i32 0
  %RCX.i926 = bitcast %union.anon* %6375 to i64*
  %6376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6377 = getelementptr inbounds %struct.GPR, %struct.GPR* %6376, i32 0, i32 15
  %6378 = getelementptr inbounds %struct.Reg, %struct.Reg* %6377, i32 0, i32 0
  %RBP.i927 = bitcast %union.anon* %6378 to i64*
  %6379 = load i64, i64* %RBP.i927
  %6380 = sub i64 %6379, 932
  %6381 = load i64, i64* %PC.i925
  %6382 = add i64 %6381, 7
  store i64 %6382, i64* %PC.i925
  %6383 = inttoptr i64 %6380 to i32*
  %6384 = load i32, i32* %6383
  %6385 = sext i32 %6384 to i64
  store i64 %6385, i64* %RCX.i926, align 8
  store %struct.Memory* %loadMem_4ae0c7, %struct.Memory** %MEMORY
  %loadMem_4ae0ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %6386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6387 = getelementptr inbounds %struct.GPR, %struct.GPR* %6386, i32 0, i32 33
  %6388 = getelementptr inbounds %struct.Reg, %struct.Reg* %6387, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %6388 to i64*
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6390 = getelementptr inbounds %struct.GPR, %struct.GPR* %6389, i32 0, i32 5
  %6391 = getelementptr inbounds %struct.Reg, %struct.Reg* %6390, i32 0, i32 0
  %RCX.i924 = bitcast %union.anon* %6391 to i64*
  %6392 = load i64, i64* %RCX.i924
  %6393 = load i64, i64* %PC.i923
  %6394 = add i64 %6393, 7
  store i64 %6394, i64* %PC.i923
  %6395 = sext i64 %6392 to i128
  %6396 = and i128 %6395, -18446744073709551616
  %6397 = zext i64 %6392 to i128
  %6398 = or i128 %6396, %6397
  %6399 = mul i128 180, %6398
  %6400 = trunc i128 %6399 to i64
  store i64 %6400, i64* %RCX.i924, align 8
  %6401 = sext i64 %6400 to i128
  %6402 = icmp ne i128 %6401, %6399
  %6403 = zext i1 %6402 to i8
  %6404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6403, i8* %6404, align 1
  %6405 = trunc i128 %6399 to i32
  %6406 = and i32 %6405, 255
  %6407 = call i32 @llvm.ctpop.i32(i32 %6406)
  %6408 = trunc i32 %6407 to i8
  %6409 = and i8 %6408, 1
  %6410 = xor i8 %6409, 1
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6410, i8* %6411, align 1
  %6412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6412, align 1
  %6413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6413, align 1
  %6414 = lshr i64 %6400, 63
  %6415 = trunc i64 %6414 to i8
  %6416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6415, i8* %6416, align 1
  %6417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6403, i8* %6417, align 1
  store %struct.Memory* %loadMem_4ae0ce, %struct.Memory** %MEMORY
  %loadMem_4ae0d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6419 = getelementptr inbounds %struct.GPR, %struct.GPR* %6418, i32 0, i32 33
  %6420 = getelementptr inbounds %struct.Reg, %struct.Reg* %6419, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %6420 to i64*
  %6421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6422 = getelementptr inbounds %struct.GPR, %struct.GPR* %6421, i32 0, i32 1
  %6423 = getelementptr inbounds %struct.Reg, %struct.Reg* %6422, i32 0, i32 0
  %RAX.i921 = bitcast %union.anon* %6423 to i64*
  %6424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6425 = getelementptr inbounds %struct.GPR, %struct.GPR* %6424, i32 0, i32 5
  %6426 = getelementptr inbounds %struct.Reg, %struct.Reg* %6425, i32 0, i32 0
  %RCX.i922 = bitcast %union.anon* %6426 to i64*
  %6427 = load i64, i64* %RAX.i921
  %6428 = load i64, i64* %RCX.i922
  %6429 = load i64, i64* %PC.i920
  %6430 = add i64 %6429, 3
  store i64 %6430, i64* %PC.i920
  %6431 = add i64 %6428, %6427
  store i64 %6431, i64* %RAX.i921, align 8
  %6432 = icmp ult i64 %6431, %6427
  %6433 = icmp ult i64 %6431, %6428
  %6434 = or i1 %6432, %6433
  %6435 = zext i1 %6434 to i8
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6435, i8* %6436, align 1
  %6437 = trunc i64 %6431 to i32
  %6438 = and i32 %6437, 255
  %6439 = call i32 @llvm.ctpop.i32(i32 %6438)
  %6440 = trunc i32 %6439 to i8
  %6441 = and i8 %6440, 1
  %6442 = xor i8 %6441, 1
  %6443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6442, i8* %6443, align 1
  %6444 = xor i64 %6428, %6427
  %6445 = xor i64 %6444, %6431
  %6446 = lshr i64 %6445, 4
  %6447 = trunc i64 %6446 to i8
  %6448 = and i8 %6447, 1
  %6449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6448, i8* %6449, align 1
  %6450 = icmp eq i64 %6431, 0
  %6451 = zext i1 %6450 to i8
  %6452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6451, i8* %6452, align 1
  %6453 = lshr i64 %6431, 63
  %6454 = trunc i64 %6453 to i8
  %6455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6454, i8* %6455, align 1
  %6456 = lshr i64 %6427, 63
  %6457 = lshr i64 %6428, 63
  %6458 = xor i64 %6453, %6456
  %6459 = xor i64 %6453, %6457
  %6460 = add i64 %6458, %6459
  %6461 = icmp eq i64 %6460, 2
  %6462 = zext i1 %6461 to i8
  %6463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6462, i8* %6463, align 1
  store %struct.Memory* %loadMem_4ae0d5, %struct.Memory** %MEMORY
  %loadMem_4ae0d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6465 = getelementptr inbounds %struct.GPR, %struct.GPR* %6464, i32 0, i32 33
  %6466 = getelementptr inbounds %struct.Reg, %struct.Reg* %6465, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %6466 to i64*
  %6467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6468 = getelementptr inbounds %struct.GPR, %struct.GPR* %6467, i32 0, i32 5
  %6469 = getelementptr inbounds %struct.Reg, %struct.Reg* %6468, i32 0, i32 0
  %RCX.i918 = bitcast %union.anon* %6469 to i64*
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6471 = getelementptr inbounds %struct.GPR, %struct.GPR* %6470, i32 0, i32 15
  %6472 = getelementptr inbounds %struct.Reg, %struct.Reg* %6471, i32 0, i32 0
  %RBP.i919 = bitcast %union.anon* %6472 to i64*
  %6473 = load i64, i64* %RBP.i919
  %6474 = sub i64 %6473, 16
  %6475 = load i64, i64* %PC.i917
  %6476 = add i64 %6475, 4
  store i64 %6476, i64* %PC.i917
  %6477 = inttoptr i64 %6474 to i32*
  %6478 = load i32, i32* %6477
  %6479 = sext i32 %6478 to i64
  store i64 %6479, i64* %RCX.i918, align 8
  store %struct.Memory* %loadMem_4ae0d8, %struct.Memory** %MEMORY
  %loadMem_4ae0dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6481 = getelementptr inbounds %struct.GPR, %struct.GPR* %6480, i32 0, i32 33
  %6482 = getelementptr inbounds %struct.Reg, %struct.Reg* %6481, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %6482 to i64*
  %6483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6484 = getelementptr inbounds %struct.GPR, %struct.GPR* %6483, i32 0, i32 5
  %6485 = getelementptr inbounds %struct.Reg, %struct.Reg* %6484, i32 0, i32 0
  %RCX.i916 = bitcast %union.anon* %6485 to i64*
  %6486 = load i64, i64* %RCX.i916
  %6487 = load i64, i64* %PC.i915
  %6488 = add i64 %6487, 4
  store i64 %6488, i64* %PC.i915
  %6489 = sext i64 %6486 to i128
  %6490 = and i128 %6489, -18446744073709551616
  %6491 = zext i64 %6486 to i128
  %6492 = or i128 %6490, %6491
  %6493 = mul i128 12, %6492
  %6494 = trunc i128 %6493 to i64
  store i64 %6494, i64* %RCX.i916, align 8
  %6495 = sext i64 %6494 to i128
  %6496 = icmp ne i128 %6495, %6493
  %6497 = zext i1 %6496 to i8
  %6498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6497, i8* %6498, align 1
  %6499 = trunc i128 %6493 to i32
  %6500 = and i32 %6499, 255
  %6501 = call i32 @llvm.ctpop.i32(i32 %6500)
  %6502 = trunc i32 %6501 to i8
  %6503 = and i8 %6502, 1
  %6504 = xor i8 %6503, 1
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6504, i8* %6505, align 1
  %6506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6506, align 1
  %6507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6507, align 1
  %6508 = lshr i64 %6494, 63
  %6509 = trunc i64 %6508 to i8
  %6510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6509, i8* %6510, align 1
  %6511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6497, i8* %6511, align 1
  store %struct.Memory* %loadMem_4ae0dc, %struct.Memory** %MEMORY
  %loadMem_4ae0e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6513 = getelementptr inbounds %struct.GPR, %struct.GPR* %6512, i32 0, i32 33
  %6514 = getelementptr inbounds %struct.Reg, %struct.Reg* %6513, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %6514 to i64*
  %6515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6516 = getelementptr inbounds %struct.GPR, %struct.GPR* %6515, i32 0, i32 1
  %6517 = getelementptr inbounds %struct.Reg, %struct.Reg* %6516, i32 0, i32 0
  %RAX.i913 = bitcast %union.anon* %6517 to i64*
  %6518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6519 = getelementptr inbounds %struct.GPR, %struct.GPR* %6518, i32 0, i32 5
  %6520 = getelementptr inbounds %struct.Reg, %struct.Reg* %6519, i32 0, i32 0
  %RCX.i914 = bitcast %union.anon* %6520 to i64*
  %6521 = load i64, i64* %RAX.i913
  %6522 = load i64, i64* %RCX.i914
  %6523 = load i64, i64* %PC.i912
  %6524 = add i64 %6523, 3
  store i64 %6524, i64* %PC.i912
  %6525 = add i64 %6522, %6521
  store i64 %6525, i64* %RAX.i913, align 8
  %6526 = icmp ult i64 %6525, %6521
  %6527 = icmp ult i64 %6525, %6522
  %6528 = or i1 %6526, %6527
  %6529 = zext i1 %6528 to i8
  %6530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6529, i8* %6530, align 1
  %6531 = trunc i64 %6525 to i32
  %6532 = and i32 %6531, 255
  %6533 = call i32 @llvm.ctpop.i32(i32 %6532)
  %6534 = trunc i32 %6533 to i8
  %6535 = and i8 %6534, 1
  %6536 = xor i8 %6535, 1
  %6537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6536, i8* %6537, align 1
  %6538 = xor i64 %6522, %6521
  %6539 = xor i64 %6538, %6525
  %6540 = lshr i64 %6539, 4
  %6541 = trunc i64 %6540 to i8
  %6542 = and i8 %6541, 1
  %6543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6542, i8* %6543, align 1
  %6544 = icmp eq i64 %6525, 0
  %6545 = zext i1 %6544 to i8
  %6546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6545, i8* %6546, align 1
  %6547 = lshr i64 %6525, 63
  %6548 = trunc i64 %6547 to i8
  %6549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6548, i8* %6549, align 1
  %6550 = lshr i64 %6521, 63
  %6551 = lshr i64 %6522, 63
  %6552 = xor i64 %6547, %6550
  %6553 = xor i64 %6547, %6551
  %6554 = add i64 %6552, %6553
  %6555 = icmp eq i64 %6554, 2
  %6556 = zext i1 %6555 to i8
  %6557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6556, i8* %6557, align 1
  store %struct.Memory* %loadMem_4ae0e0, %struct.Memory** %MEMORY
  %loadMem_4ae0e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6559 = getelementptr inbounds %struct.GPR, %struct.GPR* %6558, i32 0, i32 33
  %6560 = getelementptr inbounds %struct.Reg, %struct.Reg* %6559, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %6560 to i64*
  %6561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6562 = getelementptr inbounds %struct.GPR, %struct.GPR* %6561, i32 0, i32 1
  %6563 = getelementptr inbounds %struct.Reg, %struct.Reg* %6562, i32 0, i32 0
  %RAX.i911 = bitcast %union.anon* %6563 to i64*
  %6564 = load i64, i64* %RAX.i911
  %6565 = load i64, i64* %PC.i910
  %6566 = add i64 %6565, 3
  store i64 %6566, i64* %PC.i910
  %6567 = inttoptr i64 %6564 to i32*
  %6568 = load i32, i32* %6567
  %6569 = sub i32 %6568, 127
  %6570 = icmp ult i32 %6568, 127
  %6571 = zext i1 %6570 to i8
  %6572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6571, i8* %6572, align 1
  %6573 = and i32 %6569, 255
  %6574 = call i32 @llvm.ctpop.i32(i32 %6573)
  %6575 = trunc i32 %6574 to i8
  %6576 = and i8 %6575, 1
  %6577 = xor i8 %6576, 1
  %6578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6577, i8* %6578, align 1
  %6579 = xor i32 %6568, 127
  %6580 = xor i32 %6579, %6569
  %6581 = lshr i32 %6580, 4
  %6582 = trunc i32 %6581 to i8
  %6583 = and i8 %6582, 1
  %6584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6583, i8* %6584, align 1
  %6585 = icmp eq i32 %6569, 0
  %6586 = zext i1 %6585 to i8
  %6587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6586, i8* %6587, align 1
  %6588 = lshr i32 %6569, 31
  %6589 = trunc i32 %6588 to i8
  %6590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6589, i8* %6590, align 1
  %6591 = lshr i32 %6568, 31
  %6592 = xor i32 %6588, %6591
  %6593 = add i32 %6592, %6591
  %6594 = icmp eq i32 %6593, 2
  %6595 = zext i1 %6594 to i8
  %6596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6595, i8* %6596, align 1
  store %struct.Memory* %loadMem_4ae0e3, %struct.Memory** %MEMORY
  %loadMem_4ae0e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6598 = getelementptr inbounds %struct.GPR, %struct.GPR* %6597, i32 0, i32 33
  %6599 = getelementptr inbounds %struct.Reg, %struct.Reg* %6598, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %6599 to i64*
  %6600 = load i64, i64* %PC.i909
  %6601 = add i64 %6600, 22
  %6602 = load i64, i64* %PC.i909
  %6603 = add i64 %6602, 6
  %6604 = load i64, i64* %PC.i909
  %6605 = add i64 %6604, 6
  store i64 %6605, i64* %PC.i909
  %6606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6607 = load i8, i8* %6606, align 1
  %6608 = icmp ne i8 %6607, 0
  %6609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6610 = load i8, i8* %6609, align 1
  %6611 = icmp ne i8 %6610, 0
  %6612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6613 = load i8, i8* %6612, align 1
  %6614 = icmp ne i8 %6613, 0
  %6615 = xor i1 %6611, %6614
  %6616 = or i1 %6608, %6615
  %6617 = zext i1 %6616 to i8
  store i8 %6617, i8* %BRANCH_TAKEN, align 1
  %6618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6619 = select i1 %6616, i64 %6601, i64 %6603
  store i64 %6619, i64* %6618, align 8
  store %struct.Memory* %loadMem_4ae0e6, %struct.Memory** %MEMORY
  %loadBr_4ae0e6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae0e6 = icmp eq i8 %loadBr_4ae0e6, 1
  br i1 %cmpBr_4ae0e6, label %block_.L_4ae0fc, label %block_4ae0ec

block_4ae0ec:                                     ; preds = %block_.L_4ae0c0
  %loadMem_4ae0ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %6620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6621 = getelementptr inbounds %struct.GPR, %struct.GPR* %6620, i32 0, i32 33
  %6622 = getelementptr inbounds %struct.Reg, %struct.Reg* %6621, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %6622 to i64*
  %6623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6624 = getelementptr inbounds %struct.GPR, %struct.GPR* %6623, i32 0, i32 1
  %6625 = getelementptr inbounds %struct.Reg, %struct.Reg* %6624, i32 0, i32 0
  %RAX.i908 = bitcast %union.anon* %6625 to i64*
  %6626 = load i64, i64* %PC.i907
  %6627 = add i64 %6626, 5
  store i64 %6627, i64* %PC.i907
  store i64 127, i64* %RAX.i908, align 8
  store %struct.Memory* %loadMem_4ae0ec, %struct.Memory** %MEMORY
  %loadMem_4ae0f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6629 = getelementptr inbounds %struct.GPR, %struct.GPR* %6628, i32 0, i32 33
  %6630 = getelementptr inbounds %struct.Reg, %struct.Reg* %6629, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %6630 to i64*
  %6631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6632 = getelementptr inbounds %struct.GPR, %struct.GPR* %6631, i32 0, i32 1
  %6633 = getelementptr inbounds %struct.Reg, %struct.Reg* %6632, i32 0, i32 0
  %EAX.i905 = bitcast %union.anon* %6633 to i32*
  %6634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6635 = getelementptr inbounds %struct.GPR, %struct.GPR* %6634, i32 0, i32 15
  %6636 = getelementptr inbounds %struct.Reg, %struct.Reg* %6635, i32 0, i32 0
  %RBP.i906 = bitcast %union.anon* %6636 to i64*
  %6637 = load i64, i64* %RBP.i906
  %6638 = sub i64 %6637, 952
  %6639 = load i32, i32* %EAX.i905
  %6640 = zext i32 %6639 to i64
  %6641 = load i64, i64* %PC.i904
  %6642 = add i64 %6641, 6
  store i64 %6642, i64* %PC.i904
  %6643 = inttoptr i64 %6638 to i32*
  store i32 %6639, i32* %6643
  store %struct.Memory* %loadMem_4ae0f1, %struct.Memory** %MEMORY
  %loadMem_4ae0f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6645 = getelementptr inbounds %struct.GPR, %struct.GPR* %6644, i32 0, i32 33
  %6646 = getelementptr inbounds %struct.Reg, %struct.Reg* %6645, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %6646 to i64*
  %6647 = load i64, i64* %PC.i903
  %6648 = add i64 %6647, 48
  %6649 = load i64, i64* %PC.i903
  %6650 = add i64 %6649, 5
  store i64 %6650, i64* %PC.i903
  %6651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6648, i64* %6651, align 8
  store %struct.Memory* %loadMem_4ae0f7, %struct.Memory** %MEMORY
  br label %block_.L_4ae127

block_.L_4ae0fc:                                  ; preds = %block_.L_4ae0c0
  %loadMem_4ae0fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6653 = getelementptr inbounds %struct.GPR, %struct.GPR* %6652, i32 0, i32 33
  %6654 = getelementptr inbounds %struct.Reg, %struct.Reg* %6653, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %6654 to i64*
  %6655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6656 = getelementptr inbounds %struct.GPR, %struct.GPR* %6655, i32 0, i32 1
  %6657 = getelementptr inbounds %struct.Reg, %struct.Reg* %6656, i32 0, i32 0
  %RAX.i901 = bitcast %union.anon* %6657 to i64*
  %6658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6659 = getelementptr inbounds %struct.GPR, %struct.GPR* %6658, i32 0, i32 15
  %6660 = getelementptr inbounds %struct.Reg, %struct.Reg* %6659, i32 0, i32 0
  %RBP.i902 = bitcast %union.anon* %6660 to i64*
  %6661 = load i64, i64* %RBP.i902
  %6662 = sub i64 %6661, 928
  %6663 = load i64, i64* %PC.i900
  %6664 = add i64 %6663, 7
  store i64 %6664, i64* %PC.i900
  store i64 %6662, i64* %RAX.i901, align 8
  store %struct.Memory* %loadMem_4ae0fc, %struct.Memory** %MEMORY
  %loadMem_4ae103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6666 = getelementptr inbounds %struct.GPR, %struct.GPR* %6665, i32 0, i32 33
  %6667 = getelementptr inbounds %struct.Reg, %struct.Reg* %6666, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %6667 to i64*
  %6668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6669 = getelementptr inbounds %struct.GPR, %struct.GPR* %6668, i32 0, i32 5
  %6670 = getelementptr inbounds %struct.Reg, %struct.Reg* %6669, i32 0, i32 0
  %RCX.i898 = bitcast %union.anon* %6670 to i64*
  %6671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6672 = getelementptr inbounds %struct.GPR, %struct.GPR* %6671, i32 0, i32 15
  %6673 = getelementptr inbounds %struct.Reg, %struct.Reg* %6672, i32 0, i32 0
  %RBP.i899 = bitcast %union.anon* %6673 to i64*
  %6674 = load i64, i64* %RBP.i899
  %6675 = sub i64 %6674, 932
  %6676 = load i64, i64* %PC.i897
  %6677 = add i64 %6676, 7
  store i64 %6677, i64* %PC.i897
  %6678 = inttoptr i64 %6675 to i32*
  %6679 = load i32, i32* %6678
  %6680 = sext i32 %6679 to i64
  store i64 %6680, i64* %RCX.i898, align 8
  store %struct.Memory* %loadMem_4ae103, %struct.Memory** %MEMORY
  %loadMem_4ae10a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6682 = getelementptr inbounds %struct.GPR, %struct.GPR* %6681, i32 0, i32 33
  %6683 = getelementptr inbounds %struct.Reg, %struct.Reg* %6682, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %6683 to i64*
  %6684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6685 = getelementptr inbounds %struct.GPR, %struct.GPR* %6684, i32 0, i32 5
  %6686 = getelementptr inbounds %struct.Reg, %struct.Reg* %6685, i32 0, i32 0
  %RCX.i896 = bitcast %union.anon* %6686 to i64*
  %6687 = load i64, i64* %RCX.i896
  %6688 = load i64, i64* %PC.i895
  %6689 = add i64 %6688, 7
  store i64 %6689, i64* %PC.i895
  %6690 = sext i64 %6687 to i128
  %6691 = and i128 %6690, -18446744073709551616
  %6692 = zext i64 %6687 to i128
  %6693 = or i128 %6691, %6692
  %6694 = mul i128 180, %6693
  %6695 = trunc i128 %6694 to i64
  store i64 %6695, i64* %RCX.i896, align 8
  %6696 = sext i64 %6695 to i128
  %6697 = icmp ne i128 %6696, %6694
  %6698 = zext i1 %6697 to i8
  %6699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6698, i8* %6699, align 1
  %6700 = trunc i128 %6694 to i32
  %6701 = and i32 %6700, 255
  %6702 = call i32 @llvm.ctpop.i32(i32 %6701)
  %6703 = trunc i32 %6702 to i8
  %6704 = and i8 %6703, 1
  %6705 = xor i8 %6704, 1
  %6706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6705, i8* %6706, align 1
  %6707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6707, align 1
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6708, align 1
  %6709 = lshr i64 %6695, 63
  %6710 = trunc i64 %6709 to i8
  %6711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6710, i8* %6711, align 1
  %6712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6698, i8* %6712, align 1
  store %struct.Memory* %loadMem_4ae10a, %struct.Memory** %MEMORY
  %loadMem_4ae111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6714 = getelementptr inbounds %struct.GPR, %struct.GPR* %6713, i32 0, i32 33
  %6715 = getelementptr inbounds %struct.Reg, %struct.Reg* %6714, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %6715 to i64*
  %6716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6717 = getelementptr inbounds %struct.GPR, %struct.GPR* %6716, i32 0, i32 1
  %6718 = getelementptr inbounds %struct.Reg, %struct.Reg* %6717, i32 0, i32 0
  %RAX.i893 = bitcast %union.anon* %6718 to i64*
  %6719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6720 = getelementptr inbounds %struct.GPR, %struct.GPR* %6719, i32 0, i32 5
  %6721 = getelementptr inbounds %struct.Reg, %struct.Reg* %6720, i32 0, i32 0
  %RCX.i894 = bitcast %union.anon* %6721 to i64*
  %6722 = load i64, i64* %RAX.i893
  %6723 = load i64, i64* %RCX.i894
  %6724 = load i64, i64* %PC.i892
  %6725 = add i64 %6724, 3
  store i64 %6725, i64* %PC.i892
  %6726 = add i64 %6723, %6722
  store i64 %6726, i64* %RAX.i893, align 8
  %6727 = icmp ult i64 %6726, %6722
  %6728 = icmp ult i64 %6726, %6723
  %6729 = or i1 %6727, %6728
  %6730 = zext i1 %6729 to i8
  %6731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6730, i8* %6731, align 1
  %6732 = trunc i64 %6726 to i32
  %6733 = and i32 %6732, 255
  %6734 = call i32 @llvm.ctpop.i32(i32 %6733)
  %6735 = trunc i32 %6734 to i8
  %6736 = and i8 %6735, 1
  %6737 = xor i8 %6736, 1
  %6738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6737, i8* %6738, align 1
  %6739 = xor i64 %6723, %6722
  %6740 = xor i64 %6739, %6726
  %6741 = lshr i64 %6740, 4
  %6742 = trunc i64 %6741 to i8
  %6743 = and i8 %6742, 1
  %6744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6743, i8* %6744, align 1
  %6745 = icmp eq i64 %6726, 0
  %6746 = zext i1 %6745 to i8
  %6747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6746, i8* %6747, align 1
  %6748 = lshr i64 %6726, 63
  %6749 = trunc i64 %6748 to i8
  %6750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6749, i8* %6750, align 1
  %6751 = lshr i64 %6722, 63
  %6752 = lshr i64 %6723, 63
  %6753 = xor i64 %6748, %6751
  %6754 = xor i64 %6748, %6752
  %6755 = add i64 %6753, %6754
  %6756 = icmp eq i64 %6755, 2
  %6757 = zext i1 %6756 to i8
  %6758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6757, i8* %6758, align 1
  store %struct.Memory* %loadMem_4ae111, %struct.Memory** %MEMORY
  %loadMem_4ae114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6760 = getelementptr inbounds %struct.GPR, %struct.GPR* %6759, i32 0, i32 33
  %6761 = getelementptr inbounds %struct.Reg, %struct.Reg* %6760, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %6761 to i64*
  %6762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6763 = getelementptr inbounds %struct.GPR, %struct.GPR* %6762, i32 0, i32 5
  %6764 = getelementptr inbounds %struct.Reg, %struct.Reg* %6763, i32 0, i32 0
  %RCX.i890 = bitcast %union.anon* %6764 to i64*
  %6765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6766 = getelementptr inbounds %struct.GPR, %struct.GPR* %6765, i32 0, i32 15
  %6767 = getelementptr inbounds %struct.Reg, %struct.Reg* %6766, i32 0, i32 0
  %RBP.i891 = bitcast %union.anon* %6767 to i64*
  %6768 = load i64, i64* %RBP.i891
  %6769 = sub i64 %6768, 16
  %6770 = load i64, i64* %PC.i889
  %6771 = add i64 %6770, 4
  store i64 %6771, i64* %PC.i889
  %6772 = inttoptr i64 %6769 to i32*
  %6773 = load i32, i32* %6772
  %6774 = sext i32 %6773 to i64
  store i64 %6774, i64* %RCX.i890, align 8
  store %struct.Memory* %loadMem_4ae114, %struct.Memory** %MEMORY
  %loadMem_4ae118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6776 = getelementptr inbounds %struct.GPR, %struct.GPR* %6775, i32 0, i32 33
  %6777 = getelementptr inbounds %struct.Reg, %struct.Reg* %6776, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %6777 to i64*
  %6778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6779 = getelementptr inbounds %struct.GPR, %struct.GPR* %6778, i32 0, i32 5
  %6780 = getelementptr inbounds %struct.Reg, %struct.Reg* %6779, i32 0, i32 0
  %RCX.i888 = bitcast %union.anon* %6780 to i64*
  %6781 = load i64, i64* %RCX.i888
  %6782 = load i64, i64* %PC.i887
  %6783 = add i64 %6782, 4
  store i64 %6783, i64* %PC.i887
  %6784 = sext i64 %6781 to i128
  %6785 = and i128 %6784, -18446744073709551616
  %6786 = zext i64 %6781 to i128
  %6787 = or i128 %6785, %6786
  %6788 = mul i128 12, %6787
  %6789 = trunc i128 %6788 to i64
  store i64 %6789, i64* %RCX.i888, align 8
  %6790 = sext i64 %6789 to i128
  %6791 = icmp ne i128 %6790, %6788
  %6792 = zext i1 %6791 to i8
  %6793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6792, i8* %6793, align 1
  %6794 = trunc i128 %6788 to i32
  %6795 = and i32 %6794, 255
  %6796 = call i32 @llvm.ctpop.i32(i32 %6795)
  %6797 = trunc i32 %6796 to i8
  %6798 = and i8 %6797, 1
  %6799 = xor i8 %6798, 1
  %6800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6799, i8* %6800, align 1
  %6801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6801, align 1
  %6802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6802, align 1
  %6803 = lshr i64 %6789, 63
  %6804 = trunc i64 %6803 to i8
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6804, i8* %6805, align 1
  %6806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6792, i8* %6806, align 1
  store %struct.Memory* %loadMem_4ae118, %struct.Memory** %MEMORY
  %loadMem_4ae11c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6808 = getelementptr inbounds %struct.GPR, %struct.GPR* %6807, i32 0, i32 33
  %6809 = getelementptr inbounds %struct.Reg, %struct.Reg* %6808, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %6809 to i64*
  %6810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6811 = getelementptr inbounds %struct.GPR, %struct.GPR* %6810, i32 0, i32 1
  %6812 = getelementptr inbounds %struct.Reg, %struct.Reg* %6811, i32 0, i32 0
  %RAX.i885 = bitcast %union.anon* %6812 to i64*
  %6813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6814 = getelementptr inbounds %struct.GPR, %struct.GPR* %6813, i32 0, i32 5
  %6815 = getelementptr inbounds %struct.Reg, %struct.Reg* %6814, i32 0, i32 0
  %RCX.i886 = bitcast %union.anon* %6815 to i64*
  %6816 = load i64, i64* %RAX.i885
  %6817 = load i64, i64* %RCX.i886
  %6818 = load i64, i64* %PC.i884
  %6819 = add i64 %6818, 3
  store i64 %6819, i64* %PC.i884
  %6820 = add i64 %6817, %6816
  store i64 %6820, i64* %RAX.i885, align 8
  %6821 = icmp ult i64 %6820, %6816
  %6822 = icmp ult i64 %6820, %6817
  %6823 = or i1 %6821, %6822
  %6824 = zext i1 %6823 to i8
  %6825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6824, i8* %6825, align 1
  %6826 = trunc i64 %6820 to i32
  %6827 = and i32 %6826, 255
  %6828 = call i32 @llvm.ctpop.i32(i32 %6827)
  %6829 = trunc i32 %6828 to i8
  %6830 = and i8 %6829, 1
  %6831 = xor i8 %6830, 1
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6831, i8* %6832, align 1
  %6833 = xor i64 %6817, %6816
  %6834 = xor i64 %6833, %6820
  %6835 = lshr i64 %6834, 4
  %6836 = trunc i64 %6835 to i8
  %6837 = and i8 %6836, 1
  %6838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6837, i8* %6838, align 1
  %6839 = icmp eq i64 %6820, 0
  %6840 = zext i1 %6839 to i8
  %6841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6840, i8* %6841, align 1
  %6842 = lshr i64 %6820, 63
  %6843 = trunc i64 %6842 to i8
  %6844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6843, i8* %6844, align 1
  %6845 = lshr i64 %6816, 63
  %6846 = lshr i64 %6817, 63
  %6847 = xor i64 %6842, %6845
  %6848 = xor i64 %6842, %6846
  %6849 = add i64 %6847, %6848
  %6850 = icmp eq i64 %6849, 2
  %6851 = zext i1 %6850 to i8
  %6852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6851, i8* %6852, align 1
  store %struct.Memory* %loadMem_4ae11c, %struct.Memory** %MEMORY
  %loadMem_4ae11f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6854 = getelementptr inbounds %struct.GPR, %struct.GPR* %6853, i32 0, i32 33
  %6855 = getelementptr inbounds %struct.Reg, %struct.Reg* %6854, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %6855 to i64*
  %6856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6857 = getelementptr inbounds %struct.GPR, %struct.GPR* %6856, i32 0, i32 1
  %6858 = getelementptr inbounds %struct.Reg, %struct.Reg* %6857, i32 0, i32 0
  %RAX.i882 = bitcast %union.anon* %6858 to i64*
  %6859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6860 = getelementptr inbounds %struct.GPR, %struct.GPR* %6859, i32 0, i32 7
  %6861 = getelementptr inbounds %struct.Reg, %struct.Reg* %6860, i32 0, i32 0
  %RDX.i883 = bitcast %union.anon* %6861 to i64*
  %6862 = load i64, i64* %RAX.i882
  %6863 = load i64, i64* %PC.i881
  %6864 = add i64 %6863, 2
  store i64 %6864, i64* %PC.i881
  %6865 = inttoptr i64 %6862 to i32*
  %6866 = load i32, i32* %6865
  %6867 = zext i32 %6866 to i64
  store i64 %6867, i64* %RDX.i883, align 8
  store %struct.Memory* %loadMem_4ae11f, %struct.Memory** %MEMORY
  %loadMem_4ae121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6869 = getelementptr inbounds %struct.GPR, %struct.GPR* %6868, i32 0, i32 33
  %6870 = getelementptr inbounds %struct.Reg, %struct.Reg* %6869, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %6870 to i64*
  %6871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6872 = getelementptr inbounds %struct.GPR, %struct.GPR* %6871, i32 0, i32 7
  %6873 = getelementptr inbounds %struct.Reg, %struct.Reg* %6872, i32 0, i32 0
  %EDX.i879 = bitcast %union.anon* %6873 to i32*
  %6874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6875 = getelementptr inbounds %struct.GPR, %struct.GPR* %6874, i32 0, i32 15
  %6876 = getelementptr inbounds %struct.Reg, %struct.Reg* %6875, i32 0, i32 0
  %RBP.i880 = bitcast %union.anon* %6876 to i64*
  %6877 = load i64, i64* %RBP.i880
  %6878 = sub i64 %6877, 952
  %6879 = load i32, i32* %EDX.i879
  %6880 = zext i32 %6879 to i64
  %6881 = load i64, i64* %PC.i878
  %6882 = add i64 %6881, 6
  store i64 %6882, i64* %PC.i878
  %6883 = inttoptr i64 %6878 to i32*
  store i32 %6879, i32* %6883
  store %struct.Memory* %loadMem_4ae121, %struct.Memory** %MEMORY
  br label %block_.L_4ae127

block_.L_4ae127:                                  ; preds = %block_.L_4ae0fc, %block_4ae0ec
  %loadMem_4ae127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6885 = getelementptr inbounds %struct.GPR, %struct.GPR* %6884, i32 0, i32 33
  %6886 = getelementptr inbounds %struct.Reg, %struct.Reg* %6885, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %6886 to i64*
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6888 = getelementptr inbounds %struct.GPR, %struct.GPR* %6887, i32 0, i32 1
  %6889 = getelementptr inbounds %struct.Reg, %struct.Reg* %6888, i32 0, i32 0
  %RAX.i876 = bitcast %union.anon* %6889 to i64*
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6891 = getelementptr inbounds %struct.GPR, %struct.GPR* %6890, i32 0, i32 15
  %6892 = getelementptr inbounds %struct.Reg, %struct.Reg* %6891, i32 0, i32 0
  %RBP.i877 = bitcast %union.anon* %6892 to i64*
  %6893 = load i64, i64* %RBP.i877
  %6894 = sub i64 %6893, 952
  %6895 = load i64, i64* %PC.i875
  %6896 = add i64 %6895, 6
  store i64 %6896, i64* %PC.i875
  %6897 = inttoptr i64 %6894 to i32*
  %6898 = load i32, i32* %6897
  %6899 = zext i32 %6898 to i64
  store i64 %6899, i64* %RAX.i876, align 8
  store %struct.Memory* %loadMem_4ae127, %struct.Memory** %MEMORY
  %loadMem_4ae12d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6901 = getelementptr inbounds %struct.GPR, %struct.GPR* %6900, i32 0, i32 33
  %6902 = getelementptr inbounds %struct.Reg, %struct.Reg* %6901, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %6902 to i64*
  %6903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6904 = getelementptr inbounds %struct.GPR, %struct.GPR* %6903, i32 0, i32 1
  %6905 = getelementptr inbounds %struct.Reg, %struct.Reg* %6904, i32 0, i32 0
  %EAX.i873 = bitcast %union.anon* %6905 to i32*
  %6906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6907 = getelementptr inbounds %struct.GPR, %struct.GPR* %6906, i32 0, i32 15
  %6908 = getelementptr inbounds %struct.Reg, %struct.Reg* %6907, i32 0, i32 0
  %RBP.i874 = bitcast %union.anon* %6908 to i64*
  %6909 = load i64, i64* %RBP.i874
  %6910 = sub i64 %6909, 948
  %6911 = load i32, i32* %EAX.i873
  %6912 = zext i32 %6911 to i64
  %6913 = load i64, i64* %PC.i872
  %6914 = add i64 %6913, 6
  store i64 %6914, i64* %PC.i872
  %6915 = inttoptr i64 %6910 to i32*
  store i32 %6911, i32* %6915
  store %struct.Memory* %loadMem_4ae12d, %struct.Memory** %MEMORY
  br label %block_.L_4ae133

block_.L_4ae133:                                  ; preds = %block_.L_4ae127, %block_4ae0b0
  %loadMem_4ae133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6917 = getelementptr inbounds %struct.GPR, %struct.GPR* %6916, i32 0, i32 33
  %6918 = getelementptr inbounds %struct.Reg, %struct.Reg* %6917, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %6918 to i64*
  %6919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6920 = getelementptr inbounds %struct.GPR, %struct.GPR* %6919, i32 0, i32 1
  %6921 = getelementptr inbounds %struct.Reg, %struct.Reg* %6920, i32 0, i32 0
  %RAX.i870 = bitcast %union.anon* %6921 to i64*
  %6922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6923 = getelementptr inbounds %struct.GPR, %struct.GPR* %6922, i32 0, i32 15
  %6924 = getelementptr inbounds %struct.Reg, %struct.Reg* %6923, i32 0, i32 0
  %RBP.i871 = bitcast %union.anon* %6924 to i64*
  %6925 = load i64, i64* %RBP.i871
  %6926 = sub i64 %6925, 948
  %6927 = load i64, i64* %PC.i869
  %6928 = add i64 %6927, 6
  store i64 %6928, i64* %PC.i869
  %6929 = inttoptr i64 %6926 to i32*
  %6930 = load i32, i32* %6929
  %6931 = zext i32 %6930 to i64
  store i64 %6931, i64* %RAX.i870, align 8
  store %struct.Memory* %loadMem_4ae133, %struct.Memory** %MEMORY
  %loadMem_4ae139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6933 = getelementptr inbounds %struct.GPR, %struct.GPR* %6932, i32 0, i32 33
  %6934 = getelementptr inbounds %struct.Reg, %struct.Reg* %6933, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %6934 to i64*
  %6935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6936 = getelementptr inbounds %struct.GPR, %struct.GPR* %6935, i32 0, i32 5
  %6937 = getelementptr inbounds %struct.Reg, %struct.Reg* %6936, i32 0, i32 0
  %RCX.i867 = bitcast %union.anon* %6937 to i64*
  %6938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6939 = getelementptr inbounds %struct.GPR, %struct.GPR* %6938, i32 0, i32 15
  %6940 = getelementptr inbounds %struct.Reg, %struct.Reg* %6939, i32 0, i32 0
  %RBP.i868 = bitcast %union.anon* %6940 to i64*
  %6941 = load i64, i64* %RBP.i868
  %6942 = sub i64 %6941, 560
  %6943 = load i64, i64* %PC.i866
  %6944 = add i64 %6943, 7
  store i64 %6944, i64* %PC.i866
  store i64 %6942, i64* %RCX.i867, align 8
  store %struct.Memory* %loadMem_4ae139, %struct.Memory** %MEMORY
  %loadMem_4ae140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6946 = getelementptr inbounds %struct.GPR, %struct.GPR* %6945, i32 0, i32 33
  %6947 = getelementptr inbounds %struct.Reg, %struct.Reg* %6946, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %6947 to i64*
  %6948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6949 = getelementptr inbounds %struct.GPR, %struct.GPR* %6948, i32 0, i32 7
  %6950 = getelementptr inbounds %struct.Reg, %struct.Reg* %6949, i32 0, i32 0
  %RDX.i864 = bitcast %union.anon* %6950 to i64*
  %6951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6952 = getelementptr inbounds %struct.GPR, %struct.GPR* %6951, i32 0, i32 15
  %6953 = getelementptr inbounds %struct.Reg, %struct.Reg* %6952, i32 0, i32 0
  %RBP.i865 = bitcast %union.anon* %6953 to i64*
  %6954 = load i64, i64* %RBP.i865
  %6955 = sub i64 %6954, 928
  %6956 = load i64, i64* %PC.i863
  %6957 = add i64 %6956, 7
  store i64 %6957, i64* %PC.i863
  store i64 %6955, i64* %RDX.i864, align 8
  store %struct.Memory* %loadMem_4ae140, %struct.Memory** %MEMORY
  %loadMem_4ae147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6959 = getelementptr inbounds %struct.GPR, %struct.GPR* %6958, i32 0, i32 33
  %6960 = getelementptr inbounds %struct.Reg, %struct.Reg* %6959, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %6960 to i64*
  %6961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6962 = getelementptr inbounds %struct.GPR, %struct.GPR* %6961, i32 0, i32 9
  %6963 = getelementptr inbounds %struct.Reg, %struct.Reg* %6962, i32 0, i32 0
  %RSI.i861 = bitcast %union.anon* %6963 to i64*
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6965 = getelementptr inbounds %struct.GPR, %struct.GPR* %6964, i32 0, i32 15
  %6966 = getelementptr inbounds %struct.Reg, %struct.Reg* %6965, i32 0, i32 0
  %RBP.i862 = bitcast %union.anon* %6966 to i64*
  %6967 = load i64, i64* %RBP.i862
  %6968 = sub i64 %6967, 932
  %6969 = load i64, i64* %PC.i860
  %6970 = add i64 %6969, 7
  store i64 %6970, i64* %PC.i860
  %6971 = inttoptr i64 %6968 to i32*
  %6972 = load i32, i32* %6971
  %6973 = sext i32 %6972 to i64
  store i64 %6973, i64* %RSI.i861, align 8
  store %struct.Memory* %loadMem_4ae147, %struct.Memory** %MEMORY
  %loadMem_4ae14e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6975 = getelementptr inbounds %struct.GPR, %struct.GPR* %6974, i32 0, i32 33
  %6976 = getelementptr inbounds %struct.Reg, %struct.Reg* %6975, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %6976 to i64*
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6978 = getelementptr inbounds %struct.GPR, %struct.GPR* %6977, i32 0, i32 9
  %6979 = getelementptr inbounds %struct.Reg, %struct.Reg* %6978, i32 0, i32 0
  %RSI.i859 = bitcast %union.anon* %6979 to i64*
  %6980 = load i64, i64* %RSI.i859
  %6981 = load i64, i64* %PC.i858
  %6982 = add i64 %6981, 7
  store i64 %6982, i64* %PC.i858
  %6983 = sext i64 %6980 to i128
  %6984 = and i128 %6983, -18446744073709551616
  %6985 = zext i64 %6980 to i128
  %6986 = or i128 %6984, %6985
  %6987 = mul i128 180, %6986
  %6988 = trunc i128 %6987 to i64
  store i64 %6988, i64* %RSI.i859, align 8
  %6989 = sext i64 %6988 to i128
  %6990 = icmp ne i128 %6989, %6987
  %6991 = zext i1 %6990 to i8
  %6992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6991, i8* %6992, align 1
  %6993 = trunc i128 %6987 to i32
  %6994 = and i32 %6993, 255
  %6995 = call i32 @llvm.ctpop.i32(i32 %6994)
  %6996 = trunc i32 %6995 to i8
  %6997 = and i8 %6996, 1
  %6998 = xor i8 %6997, 1
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6998, i8* %6999, align 1
  %7000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7000, align 1
  %7001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7001, align 1
  %7002 = lshr i64 %6988, 63
  %7003 = trunc i64 %7002 to i8
  %7004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7003, i8* %7004, align 1
  %7005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6991, i8* %7005, align 1
  store %struct.Memory* %loadMem_4ae14e, %struct.Memory** %MEMORY
  %loadMem_4ae155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7007 = getelementptr inbounds %struct.GPR, %struct.GPR* %7006, i32 0, i32 33
  %7008 = getelementptr inbounds %struct.Reg, %struct.Reg* %7007, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %7008 to i64*
  %7009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7010 = getelementptr inbounds %struct.GPR, %struct.GPR* %7009, i32 0, i32 7
  %7011 = getelementptr inbounds %struct.Reg, %struct.Reg* %7010, i32 0, i32 0
  %RDX.i856 = bitcast %union.anon* %7011 to i64*
  %7012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7013 = getelementptr inbounds %struct.GPR, %struct.GPR* %7012, i32 0, i32 9
  %7014 = getelementptr inbounds %struct.Reg, %struct.Reg* %7013, i32 0, i32 0
  %RSI.i857 = bitcast %union.anon* %7014 to i64*
  %7015 = load i64, i64* %RDX.i856
  %7016 = load i64, i64* %RSI.i857
  %7017 = load i64, i64* %PC.i855
  %7018 = add i64 %7017, 3
  store i64 %7018, i64* %PC.i855
  %7019 = add i64 %7016, %7015
  store i64 %7019, i64* %RDX.i856, align 8
  %7020 = icmp ult i64 %7019, %7015
  %7021 = icmp ult i64 %7019, %7016
  %7022 = or i1 %7020, %7021
  %7023 = zext i1 %7022 to i8
  %7024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7023, i8* %7024, align 1
  %7025 = trunc i64 %7019 to i32
  %7026 = and i32 %7025, 255
  %7027 = call i32 @llvm.ctpop.i32(i32 %7026)
  %7028 = trunc i32 %7027 to i8
  %7029 = and i8 %7028, 1
  %7030 = xor i8 %7029, 1
  %7031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7030, i8* %7031, align 1
  %7032 = xor i64 %7016, %7015
  %7033 = xor i64 %7032, %7019
  %7034 = lshr i64 %7033, 4
  %7035 = trunc i64 %7034 to i8
  %7036 = and i8 %7035, 1
  %7037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7036, i8* %7037, align 1
  %7038 = icmp eq i64 %7019, 0
  %7039 = zext i1 %7038 to i8
  %7040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7039, i8* %7040, align 1
  %7041 = lshr i64 %7019, 63
  %7042 = trunc i64 %7041 to i8
  %7043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7042, i8* %7043, align 1
  %7044 = lshr i64 %7015, 63
  %7045 = lshr i64 %7016, 63
  %7046 = xor i64 %7041, %7044
  %7047 = xor i64 %7041, %7045
  %7048 = add i64 %7046, %7047
  %7049 = icmp eq i64 %7048, 2
  %7050 = zext i1 %7049 to i8
  %7051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7050, i8* %7051, align 1
  store %struct.Memory* %loadMem_4ae155, %struct.Memory** %MEMORY
  %loadMem_4ae158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7053 = getelementptr inbounds %struct.GPR, %struct.GPR* %7052, i32 0, i32 33
  %7054 = getelementptr inbounds %struct.Reg, %struct.Reg* %7053, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %7054 to i64*
  %7055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7056 = getelementptr inbounds %struct.GPR, %struct.GPR* %7055, i32 0, i32 9
  %7057 = getelementptr inbounds %struct.Reg, %struct.Reg* %7056, i32 0, i32 0
  %RSI.i853 = bitcast %union.anon* %7057 to i64*
  %7058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7059 = getelementptr inbounds %struct.GPR, %struct.GPR* %7058, i32 0, i32 15
  %7060 = getelementptr inbounds %struct.Reg, %struct.Reg* %7059, i32 0, i32 0
  %RBP.i854 = bitcast %union.anon* %7060 to i64*
  %7061 = load i64, i64* %RBP.i854
  %7062 = sub i64 %7061, 16
  %7063 = load i64, i64* %PC.i852
  %7064 = add i64 %7063, 4
  store i64 %7064, i64* %PC.i852
  %7065 = inttoptr i64 %7062 to i32*
  %7066 = load i32, i32* %7065
  %7067 = sext i32 %7066 to i64
  store i64 %7067, i64* %RSI.i853, align 8
  store %struct.Memory* %loadMem_4ae158, %struct.Memory** %MEMORY
  %loadMem_4ae15c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7069 = getelementptr inbounds %struct.GPR, %struct.GPR* %7068, i32 0, i32 33
  %7070 = getelementptr inbounds %struct.Reg, %struct.Reg* %7069, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %7070 to i64*
  %7071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7072 = getelementptr inbounds %struct.GPR, %struct.GPR* %7071, i32 0, i32 9
  %7073 = getelementptr inbounds %struct.Reg, %struct.Reg* %7072, i32 0, i32 0
  %RSI.i851 = bitcast %union.anon* %7073 to i64*
  %7074 = load i64, i64* %RSI.i851
  %7075 = load i64, i64* %PC.i850
  %7076 = add i64 %7075, 4
  store i64 %7076, i64* %PC.i850
  %7077 = sext i64 %7074 to i128
  %7078 = and i128 %7077, -18446744073709551616
  %7079 = zext i64 %7074 to i128
  %7080 = or i128 %7078, %7079
  %7081 = mul i128 12, %7080
  %7082 = trunc i128 %7081 to i64
  store i64 %7082, i64* %RSI.i851, align 8
  %7083 = sext i64 %7082 to i128
  %7084 = icmp ne i128 %7083, %7081
  %7085 = zext i1 %7084 to i8
  %7086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7085, i8* %7086, align 1
  %7087 = trunc i128 %7081 to i32
  %7088 = and i32 %7087, 255
  %7089 = call i32 @llvm.ctpop.i32(i32 %7088)
  %7090 = trunc i32 %7089 to i8
  %7091 = and i8 %7090, 1
  %7092 = xor i8 %7091, 1
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7092, i8* %7093, align 1
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7094, align 1
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7095, align 1
  %7096 = lshr i64 %7082, 63
  %7097 = trunc i64 %7096 to i8
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7097, i8* %7098, align 1
  %7099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7085, i8* %7099, align 1
  store %struct.Memory* %loadMem_4ae15c, %struct.Memory** %MEMORY
  %loadMem_4ae160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7101 = getelementptr inbounds %struct.GPR, %struct.GPR* %7100, i32 0, i32 33
  %7102 = getelementptr inbounds %struct.Reg, %struct.Reg* %7101, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %7102 to i64*
  %7103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7104 = getelementptr inbounds %struct.GPR, %struct.GPR* %7103, i32 0, i32 7
  %7105 = getelementptr inbounds %struct.Reg, %struct.Reg* %7104, i32 0, i32 0
  %RDX.i848 = bitcast %union.anon* %7105 to i64*
  %7106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7107 = getelementptr inbounds %struct.GPR, %struct.GPR* %7106, i32 0, i32 9
  %7108 = getelementptr inbounds %struct.Reg, %struct.Reg* %7107, i32 0, i32 0
  %RSI.i849 = bitcast %union.anon* %7108 to i64*
  %7109 = load i64, i64* %RDX.i848
  %7110 = load i64, i64* %RSI.i849
  %7111 = load i64, i64* %PC.i847
  %7112 = add i64 %7111, 3
  store i64 %7112, i64* %PC.i847
  %7113 = add i64 %7110, %7109
  store i64 %7113, i64* %RDX.i848, align 8
  %7114 = icmp ult i64 %7113, %7109
  %7115 = icmp ult i64 %7113, %7110
  %7116 = or i1 %7114, %7115
  %7117 = zext i1 %7116 to i8
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7117, i8* %7118, align 1
  %7119 = trunc i64 %7113 to i32
  %7120 = and i32 %7119, 255
  %7121 = call i32 @llvm.ctpop.i32(i32 %7120)
  %7122 = trunc i32 %7121 to i8
  %7123 = and i8 %7122, 1
  %7124 = xor i8 %7123, 1
  %7125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7124, i8* %7125, align 1
  %7126 = xor i64 %7110, %7109
  %7127 = xor i64 %7126, %7113
  %7128 = lshr i64 %7127, 4
  %7129 = trunc i64 %7128 to i8
  %7130 = and i8 %7129, 1
  %7131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7130, i8* %7131, align 1
  %7132 = icmp eq i64 %7113, 0
  %7133 = zext i1 %7132 to i8
  %7134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7133, i8* %7134, align 1
  %7135 = lshr i64 %7113, 63
  %7136 = trunc i64 %7135 to i8
  %7137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7136, i8* %7137, align 1
  %7138 = lshr i64 %7109, 63
  %7139 = lshr i64 %7110, 63
  %7140 = xor i64 %7135, %7138
  %7141 = xor i64 %7135, %7139
  %7142 = add i64 %7140, %7141
  %7143 = icmp eq i64 %7142, 2
  %7144 = zext i1 %7143 to i8
  %7145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7144, i8* %7145, align 1
  store %struct.Memory* %loadMem_4ae160, %struct.Memory** %MEMORY
  %loadMem_4ae163 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7147 = getelementptr inbounds %struct.GPR, %struct.GPR* %7146, i32 0, i32 33
  %7148 = getelementptr inbounds %struct.Reg, %struct.Reg* %7147, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %7148 to i64*
  %7149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7150 = getelementptr inbounds %struct.GPR, %struct.GPR* %7149, i32 0, i32 1
  %7151 = getelementptr inbounds %struct.Reg, %struct.Reg* %7150, i32 0, i32 0
  %EAX.i845 = bitcast %union.anon* %7151 to i32*
  %7152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7153 = getelementptr inbounds %struct.GPR, %struct.GPR* %7152, i32 0, i32 7
  %7154 = getelementptr inbounds %struct.Reg, %struct.Reg* %7153, i32 0, i32 0
  %RDX.i846 = bitcast %union.anon* %7154 to i64*
  %7155 = load i64, i64* %RDX.i846
  %7156 = load i32, i32* %EAX.i845
  %7157 = zext i32 %7156 to i64
  %7158 = load i64, i64* %PC.i844
  %7159 = add i64 %7158, 2
  store i64 %7159, i64* %PC.i844
  %7160 = inttoptr i64 %7155 to i32*
  store i32 %7156, i32* %7160
  store %struct.Memory* %loadMem_4ae163, %struct.Memory** %MEMORY
  %loadMem_4ae165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7162 = getelementptr inbounds %struct.GPR, %struct.GPR* %7161, i32 0, i32 33
  %7163 = getelementptr inbounds %struct.Reg, %struct.Reg* %7162, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %7163 to i64*
  %7164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7165 = getelementptr inbounds %struct.GPR, %struct.GPR* %7164, i32 0, i32 1
  %7166 = getelementptr inbounds %struct.Reg, %struct.Reg* %7165, i32 0, i32 0
  %RAX.i842 = bitcast %union.anon* %7166 to i64*
  %7167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7168 = getelementptr inbounds %struct.GPR, %struct.GPR* %7167, i32 0, i32 15
  %7169 = getelementptr inbounds %struct.Reg, %struct.Reg* %7168, i32 0, i32 0
  %RBP.i843 = bitcast %union.anon* %7169 to i64*
  %7170 = load i64, i64* %RBP.i843
  %7171 = sub i64 %7170, 188
  %7172 = load i64, i64* %PC.i841
  %7173 = add i64 %7172, 6
  store i64 %7173, i64* %PC.i841
  %7174 = inttoptr i64 %7171 to i32*
  %7175 = load i32, i32* %7174
  %7176 = zext i32 %7175 to i64
  store i64 %7176, i64* %RAX.i842, align 8
  store %struct.Memory* %loadMem_4ae165, %struct.Memory** %MEMORY
  %loadMem_4ae16b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7178 = getelementptr inbounds %struct.GPR, %struct.GPR* %7177, i32 0, i32 33
  %7179 = getelementptr inbounds %struct.Reg, %struct.Reg* %7178, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %7179 to i64*
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7181 = getelementptr inbounds %struct.GPR, %struct.GPR* %7180, i32 0, i32 7
  %7182 = getelementptr inbounds %struct.Reg, %struct.Reg* %7181, i32 0, i32 0
  %RDX.i839 = bitcast %union.anon* %7182 to i64*
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7184 = getelementptr inbounds %struct.GPR, %struct.GPR* %7183, i32 0, i32 15
  %7185 = getelementptr inbounds %struct.Reg, %struct.Reg* %7184, i32 0, i32 0
  %RBP.i840 = bitcast %union.anon* %7185 to i64*
  %7186 = load i64, i64* %RBP.i840
  %7187 = sub i64 %7186, 932
  %7188 = load i64, i64* %PC.i838
  %7189 = add i64 %7188, 7
  store i64 %7189, i64* %PC.i838
  %7190 = inttoptr i64 %7187 to i32*
  %7191 = load i32, i32* %7190
  %7192 = sext i32 %7191 to i64
  store i64 %7192, i64* %RDX.i839, align 8
  store %struct.Memory* %loadMem_4ae16b, %struct.Memory** %MEMORY
  %loadMem_4ae172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7194 = getelementptr inbounds %struct.GPR, %struct.GPR* %7193, i32 0, i32 33
  %7195 = getelementptr inbounds %struct.Reg, %struct.Reg* %7194, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %7195 to i64*
  %7196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7197 = getelementptr inbounds %struct.GPR, %struct.GPR* %7196, i32 0, i32 7
  %7198 = getelementptr inbounds %struct.Reg, %struct.Reg* %7197, i32 0, i32 0
  %RDX.i837 = bitcast %union.anon* %7198 to i64*
  %7199 = load i64, i64* %RDX.i837
  %7200 = load i64, i64* %PC.i836
  %7201 = add i64 %7200, 7
  store i64 %7201, i64* %PC.i836
  %7202 = sext i64 %7199 to i128
  %7203 = and i128 %7202, -18446744073709551616
  %7204 = zext i64 %7199 to i128
  %7205 = or i128 %7203, %7204
  %7206 = mul i128 180, %7205
  %7207 = trunc i128 %7206 to i64
  store i64 %7207, i64* %RDX.i837, align 8
  %7208 = sext i64 %7207 to i128
  %7209 = icmp ne i128 %7208, %7206
  %7210 = zext i1 %7209 to i8
  %7211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7210, i8* %7211, align 1
  %7212 = trunc i128 %7206 to i32
  %7213 = and i32 %7212, 255
  %7214 = call i32 @llvm.ctpop.i32(i32 %7213)
  %7215 = trunc i32 %7214 to i8
  %7216 = and i8 %7215, 1
  %7217 = xor i8 %7216, 1
  %7218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7217, i8* %7218, align 1
  %7219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7219, align 1
  %7220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7220, align 1
  %7221 = lshr i64 %7207, 63
  %7222 = trunc i64 %7221 to i8
  %7223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7222, i8* %7223, align 1
  %7224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7210, i8* %7224, align 1
  store %struct.Memory* %loadMem_4ae172, %struct.Memory** %MEMORY
  %loadMem_4ae179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7226 = getelementptr inbounds %struct.GPR, %struct.GPR* %7225, i32 0, i32 33
  %7227 = getelementptr inbounds %struct.Reg, %struct.Reg* %7226, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %7227 to i64*
  %7228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7229 = getelementptr inbounds %struct.GPR, %struct.GPR* %7228, i32 0, i32 5
  %7230 = getelementptr inbounds %struct.Reg, %struct.Reg* %7229, i32 0, i32 0
  %RCX.i834 = bitcast %union.anon* %7230 to i64*
  %7231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7232 = getelementptr inbounds %struct.GPR, %struct.GPR* %7231, i32 0, i32 7
  %7233 = getelementptr inbounds %struct.Reg, %struct.Reg* %7232, i32 0, i32 0
  %RDX.i835 = bitcast %union.anon* %7233 to i64*
  %7234 = load i64, i64* %RCX.i834
  %7235 = load i64, i64* %RDX.i835
  %7236 = load i64, i64* %PC.i833
  %7237 = add i64 %7236, 3
  store i64 %7237, i64* %PC.i833
  %7238 = add i64 %7235, %7234
  store i64 %7238, i64* %RCX.i834, align 8
  %7239 = icmp ult i64 %7238, %7234
  %7240 = icmp ult i64 %7238, %7235
  %7241 = or i1 %7239, %7240
  %7242 = zext i1 %7241 to i8
  %7243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7242, i8* %7243, align 1
  %7244 = trunc i64 %7238 to i32
  %7245 = and i32 %7244, 255
  %7246 = call i32 @llvm.ctpop.i32(i32 %7245)
  %7247 = trunc i32 %7246 to i8
  %7248 = and i8 %7247, 1
  %7249 = xor i8 %7248, 1
  %7250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7249, i8* %7250, align 1
  %7251 = xor i64 %7235, %7234
  %7252 = xor i64 %7251, %7238
  %7253 = lshr i64 %7252, 4
  %7254 = trunc i64 %7253 to i8
  %7255 = and i8 %7254, 1
  %7256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7255, i8* %7256, align 1
  %7257 = icmp eq i64 %7238, 0
  %7258 = zext i1 %7257 to i8
  %7259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7258, i8* %7259, align 1
  %7260 = lshr i64 %7238, 63
  %7261 = trunc i64 %7260 to i8
  %7262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7261, i8* %7262, align 1
  %7263 = lshr i64 %7234, 63
  %7264 = lshr i64 %7235, 63
  %7265 = xor i64 %7260, %7263
  %7266 = xor i64 %7260, %7264
  %7267 = add i64 %7265, %7266
  %7268 = icmp eq i64 %7267, 2
  %7269 = zext i1 %7268 to i8
  %7270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7269, i8* %7270, align 1
  store %struct.Memory* %loadMem_4ae179, %struct.Memory** %MEMORY
  %loadMem_4ae17c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7272 = getelementptr inbounds %struct.GPR, %struct.GPR* %7271, i32 0, i32 33
  %7273 = getelementptr inbounds %struct.Reg, %struct.Reg* %7272, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %7273 to i64*
  %7274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7275 = getelementptr inbounds %struct.GPR, %struct.GPR* %7274, i32 0, i32 7
  %7276 = getelementptr inbounds %struct.Reg, %struct.Reg* %7275, i32 0, i32 0
  %RDX.i831 = bitcast %union.anon* %7276 to i64*
  %7277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7278 = getelementptr inbounds %struct.GPR, %struct.GPR* %7277, i32 0, i32 15
  %7279 = getelementptr inbounds %struct.Reg, %struct.Reg* %7278, i32 0, i32 0
  %RBP.i832 = bitcast %union.anon* %7279 to i64*
  %7280 = load i64, i64* %RBP.i832
  %7281 = sub i64 %7280, 16
  %7282 = load i64, i64* %PC.i830
  %7283 = add i64 %7282, 4
  store i64 %7283, i64* %PC.i830
  %7284 = inttoptr i64 %7281 to i32*
  %7285 = load i32, i32* %7284
  %7286 = sext i32 %7285 to i64
  store i64 %7286, i64* %RDX.i831, align 8
  store %struct.Memory* %loadMem_4ae17c, %struct.Memory** %MEMORY
  %loadMem_4ae180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7288 = getelementptr inbounds %struct.GPR, %struct.GPR* %7287, i32 0, i32 33
  %7289 = getelementptr inbounds %struct.Reg, %struct.Reg* %7288, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %7289 to i64*
  %7290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7291 = getelementptr inbounds %struct.GPR, %struct.GPR* %7290, i32 0, i32 7
  %7292 = getelementptr inbounds %struct.Reg, %struct.Reg* %7291, i32 0, i32 0
  %RDX.i829 = bitcast %union.anon* %7292 to i64*
  %7293 = load i64, i64* %RDX.i829
  %7294 = load i64, i64* %PC.i828
  %7295 = add i64 %7294, 4
  store i64 %7295, i64* %PC.i828
  %7296 = sext i64 %7293 to i128
  %7297 = and i128 %7296, -18446744073709551616
  %7298 = zext i64 %7293 to i128
  %7299 = or i128 %7297, %7298
  %7300 = mul i128 12, %7299
  %7301 = trunc i128 %7300 to i64
  store i64 %7301, i64* %RDX.i829, align 8
  %7302 = sext i64 %7301 to i128
  %7303 = icmp ne i128 %7302, %7300
  %7304 = zext i1 %7303 to i8
  %7305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7304, i8* %7305, align 1
  %7306 = trunc i128 %7300 to i32
  %7307 = and i32 %7306, 255
  %7308 = call i32 @llvm.ctpop.i32(i32 %7307)
  %7309 = trunc i32 %7308 to i8
  %7310 = and i8 %7309, 1
  %7311 = xor i8 %7310, 1
  %7312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7311, i8* %7312, align 1
  %7313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7313, align 1
  %7314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7314, align 1
  %7315 = lshr i64 %7301, 63
  %7316 = trunc i64 %7315 to i8
  %7317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7316, i8* %7317, align 1
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7304, i8* %7318, align 1
  store %struct.Memory* %loadMem_4ae180, %struct.Memory** %MEMORY
  %loadMem_4ae184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7320 = getelementptr inbounds %struct.GPR, %struct.GPR* %7319, i32 0, i32 33
  %7321 = getelementptr inbounds %struct.Reg, %struct.Reg* %7320, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %7321 to i64*
  %7322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7323 = getelementptr inbounds %struct.GPR, %struct.GPR* %7322, i32 0, i32 5
  %7324 = getelementptr inbounds %struct.Reg, %struct.Reg* %7323, i32 0, i32 0
  %RCX.i826 = bitcast %union.anon* %7324 to i64*
  %7325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7326 = getelementptr inbounds %struct.GPR, %struct.GPR* %7325, i32 0, i32 7
  %7327 = getelementptr inbounds %struct.Reg, %struct.Reg* %7326, i32 0, i32 0
  %RDX.i827 = bitcast %union.anon* %7327 to i64*
  %7328 = load i64, i64* %RCX.i826
  %7329 = load i64, i64* %RDX.i827
  %7330 = load i64, i64* %PC.i825
  %7331 = add i64 %7330, 3
  store i64 %7331, i64* %PC.i825
  %7332 = add i64 %7329, %7328
  store i64 %7332, i64* %RCX.i826, align 8
  %7333 = icmp ult i64 %7332, %7328
  %7334 = icmp ult i64 %7332, %7329
  %7335 = or i1 %7333, %7334
  %7336 = zext i1 %7335 to i8
  %7337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7336, i8* %7337, align 1
  %7338 = trunc i64 %7332 to i32
  %7339 = and i32 %7338, 255
  %7340 = call i32 @llvm.ctpop.i32(i32 %7339)
  %7341 = trunc i32 %7340 to i8
  %7342 = and i8 %7341, 1
  %7343 = xor i8 %7342, 1
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7343, i8* %7344, align 1
  %7345 = xor i64 %7329, %7328
  %7346 = xor i64 %7345, %7332
  %7347 = lshr i64 %7346, 4
  %7348 = trunc i64 %7347 to i8
  %7349 = and i8 %7348, 1
  %7350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7349, i8* %7350, align 1
  %7351 = icmp eq i64 %7332, 0
  %7352 = zext i1 %7351 to i8
  %7353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7352, i8* %7353, align 1
  %7354 = lshr i64 %7332, 63
  %7355 = trunc i64 %7354 to i8
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7355, i8* %7356, align 1
  %7357 = lshr i64 %7328, 63
  %7358 = lshr i64 %7329, 63
  %7359 = xor i64 %7354, %7357
  %7360 = xor i64 %7354, %7358
  %7361 = add i64 %7359, %7360
  %7362 = icmp eq i64 %7361, 2
  %7363 = zext i1 %7362 to i8
  %7364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7363, i8* %7364, align 1
  store %struct.Memory* %loadMem_4ae184, %struct.Memory** %MEMORY
  %loadMem_4ae187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7366 = getelementptr inbounds %struct.GPR, %struct.GPR* %7365, i32 0, i32 33
  %7367 = getelementptr inbounds %struct.Reg, %struct.Reg* %7366, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %7367 to i64*
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7369 = getelementptr inbounds %struct.GPR, %struct.GPR* %7368, i32 0, i32 1
  %7370 = getelementptr inbounds %struct.Reg, %struct.Reg* %7369, i32 0, i32 0
  %EAX.i823 = bitcast %union.anon* %7370 to i32*
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7372 = getelementptr inbounds %struct.GPR, %struct.GPR* %7371, i32 0, i32 5
  %7373 = getelementptr inbounds %struct.Reg, %struct.Reg* %7372, i32 0, i32 0
  %RCX.i824 = bitcast %union.anon* %7373 to i64*
  %7374 = load i64, i64* %RCX.i824
  %7375 = load i32, i32* %EAX.i823
  %7376 = zext i32 %7375 to i64
  %7377 = load i64, i64* %PC.i822
  %7378 = add i64 %7377, 2
  store i64 %7378, i64* %PC.i822
  %7379 = inttoptr i64 %7374 to i32*
  store i32 %7375, i32* %7379
  store %struct.Memory* %loadMem_4ae187, %struct.Memory** %MEMORY
  br label %block_.L_4ae189

block_.L_4ae189:                                  ; preds = %block_.L_4ae133, %block_.L_4ae01d
  %loadMem_4ae189 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7381 = getelementptr inbounds %struct.GPR, %struct.GPR* %7380, i32 0, i32 33
  %7382 = getelementptr inbounds %struct.Reg, %struct.Reg* %7381, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %7382 to i64*
  %7383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7384 = getelementptr inbounds %struct.GPR, %struct.GPR* %7383, i32 0, i32 1
  %7385 = getelementptr inbounds %struct.Reg, %struct.Reg* %7384, i32 0, i32 0
  %RAX.i820 = bitcast %union.anon* %7385 to i64*
  %7386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7387 = getelementptr inbounds %struct.GPR, %struct.GPR* %7386, i32 0, i32 15
  %7388 = getelementptr inbounds %struct.Reg, %struct.Reg* %7387, i32 0, i32 0
  %RBP.i821 = bitcast %union.anon* %7388 to i64*
  %7389 = load i64, i64* %RBP.i821
  %7390 = sub i64 %7389, 560
  %7391 = load i64, i64* %PC.i819
  %7392 = add i64 %7391, 7
  store i64 %7392, i64* %PC.i819
  store i64 %7390, i64* %RAX.i820, align 8
  store %struct.Memory* %loadMem_4ae189, %struct.Memory** %MEMORY
  %loadMem_4ae190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7394 = getelementptr inbounds %struct.GPR, %struct.GPR* %7393, i32 0, i32 33
  %7395 = getelementptr inbounds %struct.Reg, %struct.Reg* %7394, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %7395 to i64*
  %7396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7397 = getelementptr inbounds %struct.GPR, %struct.GPR* %7396, i32 0, i32 5
  %7398 = getelementptr inbounds %struct.Reg, %struct.Reg* %7397, i32 0, i32 0
  %RCX.i817 = bitcast %union.anon* %7398 to i64*
  %7399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7400 = getelementptr inbounds %struct.GPR, %struct.GPR* %7399, i32 0, i32 15
  %7401 = getelementptr inbounds %struct.Reg, %struct.Reg* %7400, i32 0, i32 0
  %RBP.i818 = bitcast %union.anon* %7401 to i64*
  %7402 = load i64, i64* %RBP.i818
  %7403 = sub i64 %7402, 184
  %7404 = load i64, i64* %PC.i816
  %7405 = add i64 %7404, 6
  store i64 %7405, i64* %PC.i816
  %7406 = inttoptr i64 %7403 to i32*
  %7407 = load i32, i32* %7406
  %7408 = zext i32 %7407 to i64
  store i64 %7408, i64* %RCX.i817, align 8
  store %struct.Memory* %loadMem_4ae190, %struct.Memory** %MEMORY
  %loadMem_4ae196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7410 = getelementptr inbounds %struct.GPR, %struct.GPR* %7409, i32 0, i32 33
  %7411 = getelementptr inbounds %struct.Reg, %struct.Reg* %7410, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %7411 to i64*
  %7412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7413 = getelementptr inbounds %struct.GPR, %struct.GPR* %7412, i32 0, i32 7
  %7414 = getelementptr inbounds %struct.Reg, %struct.Reg* %7413, i32 0, i32 0
  %RDX.i814 = bitcast %union.anon* %7414 to i64*
  %7415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7416 = getelementptr inbounds %struct.GPR, %struct.GPR* %7415, i32 0, i32 15
  %7417 = getelementptr inbounds %struct.Reg, %struct.Reg* %7416, i32 0, i32 0
  %RBP.i815 = bitcast %union.anon* %7417 to i64*
  %7418 = load i64, i64* %RBP.i815
  %7419 = sub i64 %7418, 932
  %7420 = load i64, i64* %PC.i813
  %7421 = add i64 %7420, 7
  store i64 %7421, i64* %PC.i813
  %7422 = inttoptr i64 %7419 to i32*
  %7423 = load i32, i32* %7422
  %7424 = sext i32 %7423 to i64
  store i64 %7424, i64* %RDX.i814, align 8
  store %struct.Memory* %loadMem_4ae196, %struct.Memory** %MEMORY
  %loadMem_4ae19d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7426 = getelementptr inbounds %struct.GPR, %struct.GPR* %7425, i32 0, i32 33
  %7427 = getelementptr inbounds %struct.Reg, %struct.Reg* %7426, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %7427 to i64*
  %7428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7429 = getelementptr inbounds %struct.GPR, %struct.GPR* %7428, i32 0, i32 7
  %7430 = getelementptr inbounds %struct.Reg, %struct.Reg* %7429, i32 0, i32 0
  %RDX.i812 = bitcast %union.anon* %7430 to i64*
  %7431 = load i64, i64* %RDX.i812
  %7432 = load i64, i64* %PC.i811
  %7433 = add i64 %7432, 7
  store i64 %7433, i64* %PC.i811
  %7434 = sext i64 %7431 to i128
  %7435 = and i128 %7434, -18446744073709551616
  %7436 = zext i64 %7431 to i128
  %7437 = or i128 %7435, %7436
  %7438 = mul i128 180, %7437
  %7439 = trunc i128 %7438 to i64
  store i64 %7439, i64* %RDX.i812, align 8
  %7440 = sext i64 %7439 to i128
  %7441 = icmp ne i128 %7440, %7438
  %7442 = zext i1 %7441 to i8
  %7443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7442, i8* %7443, align 1
  %7444 = trunc i128 %7438 to i32
  %7445 = and i32 %7444, 255
  %7446 = call i32 @llvm.ctpop.i32(i32 %7445)
  %7447 = trunc i32 %7446 to i8
  %7448 = and i8 %7447, 1
  %7449 = xor i8 %7448, 1
  %7450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7449, i8* %7450, align 1
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7451, align 1
  %7452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7452, align 1
  %7453 = lshr i64 %7439, 63
  %7454 = trunc i64 %7453 to i8
  %7455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7454, i8* %7455, align 1
  %7456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7442, i8* %7456, align 1
  store %struct.Memory* %loadMem_4ae19d, %struct.Memory** %MEMORY
  %loadMem_4ae1a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7458 = getelementptr inbounds %struct.GPR, %struct.GPR* %7457, i32 0, i32 33
  %7459 = getelementptr inbounds %struct.Reg, %struct.Reg* %7458, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %7459 to i64*
  %7460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7461 = getelementptr inbounds %struct.GPR, %struct.GPR* %7460, i32 0, i32 1
  %7462 = getelementptr inbounds %struct.Reg, %struct.Reg* %7461, i32 0, i32 0
  %RAX.i809 = bitcast %union.anon* %7462 to i64*
  %7463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7464 = getelementptr inbounds %struct.GPR, %struct.GPR* %7463, i32 0, i32 9
  %7465 = getelementptr inbounds %struct.Reg, %struct.Reg* %7464, i32 0, i32 0
  %RSI.i810 = bitcast %union.anon* %7465 to i64*
  %7466 = load i64, i64* %RAX.i809
  %7467 = load i64, i64* %PC.i808
  %7468 = add i64 %7467, 3
  store i64 %7468, i64* %PC.i808
  store i64 %7466, i64* %RSI.i810, align 8
  store %struct.Memory* %loadMem_4ae1a4, %struct.Memory** %MEMORY
  %loadMem_4ae1a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7470 = getelementptr inbounds %struct.GPR, %struct.GPR* %7469, i32 0, i32 33
  %7471 = getelementptr inbounds %struct.Reg, %struct.Reg* %7470, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %7471 to i64*
  %7472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7473 = getelementptr inbounds %struct.GPR, %struct.GPR* %7472, i32 0, i32 7
  %7474 = getelementptr inbounds %struct.Reg, %struct.Reg* %7473, i32 0, i32 0
  %RDX.i806 = bitcast %union.anon* %7474 to i64*
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7476 = getelementptr inbounds %struct.GPR, %struct.GPR* %7475, i32 0, i32 9
  %7477 = getelementptr inbounds %struct.Reg, %struct.Reg* %7476, i32 0, i32 0
  %RSI.i807 = bitcast %union.anon* %7477 to i64*
  %7478 = load i64, i64* %RSI.i807
  %7479 = load i64, i64* %RDX.i806
  %7480 = load i64, i64* %PC.i805
  %7481 = add i64 %7480, 3
  store i64 %7481, i64* %PC.i805
  %7482 = add i64 %7479, %7478
  store i64 %7482, i64* %RSI.i807, align 8
  %7483 = icmp ult i64 %7482, %7478
  %7484 = icmp ult i64 %7482, %7479
  %7485 = or i1 %7483, %7484
  %7486 = zext i1 %7485 to i8
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7486, i8* %7487, align 1
  %7488 = trunc i64 %7482 to i32
  %7489 = and i32 %7488, 255
  %7490 = call i32 @llvm.ctpop.i32(i32 %7489)
  %7491 = trunc i32 %7490 to i8
  %7492 = and i8 %7491, 1
  %7493 = xor i8 %7492, 1
  %7494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7493, i8* %7494, align 1
  %7495 = xor i64 %7479, %7478
  %7496 = xor i64 %7495, %7482
  %7497 = lshr i64 %7496, 4
  %7498 = trunc i64 %7497 to i8
  %7499 = and i8 %7498, 1
  %7500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7499, i8* %7500, align 1
  %7501 = icmp eq i64 %7482, 0
  %7502 = zext i1 %7501 to i8
  %7503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7502, i8* %7503, align 1
  %7504 = lshr i64 %7482, 63
  %7505 = trunc i64 %7504 to i8
  %7506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7505, i8* %7506, align 1
  %7507 = lshr i64 %7478, 63
  %7508 = lshr i64 %7479, 63
  %7509 = xor i64 %7504, %7507
  %7510 = xor i64 %7504, %7508
  %7511 = add i64 %7509, %7510
  %7512 = icmp eq i64 %7511, 2
  %7513 = zext i1 %7512 to i8
  %7514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7513, i8* %7514, align 1
  store %struct.Memory* %loadMem_4ae1a7, %struct.Memory** %MEMORY
  %loadMem_4ae1aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7516 = getelementptr inbounds %struct.GPR, %struct.GPR* %7515, i32 0, i32 33
  %7517 = getelementptr inbounds %struct.Reg, %struct.Reg* %7516, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %7517 to i64*
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7519 = getelementptr inbounds %struct.GPR, %struct.GPR* %7518, i32 0, i32 7
  %7520 = getelementptr inbounds %struct.Reg, %struct.Reg* %7519, i32 0, i32 0
  %RDX.i803 = bitcast %union.anon* %7520 to i64*
  %7521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7522 = getelementptr inbounds %struct.GPR, %struct.GPR* %7521, i32 0, i32 15
  %7523 = getelementptr inbounds %struct.Reg, %struct.Reg* %7522, i32 0, i32 0
  %RBP.i804 = bitcast %union.anon* %7523 to i64*
  %7524 = load i64, i64* %RBP.i804
  %7525 = sub i64 %7524, 16
  %7526 = load i64, i64* %PC.i802
  %7527 = add i64 %7526, 4
  store i64 %7527, i64* %PC.i802
  %7528 = inttoptr i64 %7525 to i32*
  %7529 = load i32, i32* %7528
  %7530 = sext i32 %7529 to i64
  store i64 %7530, i64* %RDX.i803, align 8
  store %struct.Memory* %loadMem_4ae1aa, %struct.Memory** %MEMORY
  %loadMem_4ae1ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %7531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7532 = getelementptr inbounds %struct.GPR, %struct.GPR* %7531, i32 0, i32 33
  %7533 = getelementptr inbounds %struct.Reg, %struct.Reg* %7532, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %7533 to i64*
  %7534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7535 = getelementptr inbounds %struct.GPR, %struct.GPR* %7534, i32 0, i32 7
  %7536 = getelementptr inbounds %struct.Reg, %struct.Reg* %7535, i32 0, i32 0
  %RDX.i801 = bitcast %union.anon* %7536 to i64*
  %7537 = load i64, i64* %RDX.i801
  %7538 = load i64, i64* %PC.i800
  %7539 = add i64 %7538, 4
  store i64 %7539, i64* %PC.i800
  %7540 = sext i64 %7537 to i128
  %7541 = and i128 %7540, -18446744073709551616
  %7542 = zext i64 %7537 to i128
  %7543 = or i128 %7541, %7542
  %7544 = mul i128 12, %7543
  %7545 = trunc i128 %7544 to i64
  store i64 %7545, i64* %RDX.i801, align 8
  %7546 = sext i64 %7545 to i128
  %7547 = icmp ne i128 %7546, %7544
  %7548 = zext i1 %7547 to i8
  %7549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7548, i8* %7549, align 1
  %7550 = trunc i128 %7544 to i32
  %7551 = and i32 %7550, 255
  %7552 = call i32 @llvm.ctpop.i32(i32 %7551)
  %7553 = trunc i32 %7552 to i8
  %7554 = and i8 %7553, 1
  %7555 = xor i8 %7554, 1
  %7556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7555, i8* %7556, align 1
  %7557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7557, align 1
  %7558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7558, align 1
  %7559 = lshr i64 %7545, 63
  %7560 = trunc i64 %7559 to i8
  %7561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7560, i8* %7561, align 1
  %7562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7548, i8* %7562, align 1
  store %struct.Memory* %loadMem_4ae1ae, %struct.Memory** %MEMORY
  %loadMem_4ae1b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7564 = getelementptr inbounds %struct.GPR, %struct.GPR* %7563, i32 0, i32 33
  %7565 = getelementptr inbounds %struct.Reg, %struct.Reg* %7564, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %7565 to i64*
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7567 = getelementptr inbounds %struct.GPR, %struct.GPR* %7566, i32 0, i32 7
  %7568 = getelementptr inbounds %struct.Reg, %struct.Reg* %7567, i32 0, i32 0
  %RDX.i798 = bitcast %union.anon* %7568 to i64*
  %7569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7570 = getelementptr inbounds %struct.GPR, %struct.GPR* %7569, i32 0, i32 9
  %7571 = getelementptr inbounds %struct.Reg, %struct.Reg* %7570, i32 0, i32 0
  %RSI.i799 = bitcast %union.anon* %7571 to i64*
  %7572 = load i64, i64* %RSI.i799
  %7573 = load i64, i64* %RDX.i798
  %7574 = load i64, i64* %PC.i797
  %7575 = add i64 %7574, 3
  store i64 %7575, i64* %PC.i797
  %7576 = add i64 %7573, %7572
  store i64 %7576, i64* %RSI.i799, align 8
  %7577 = icmp ult i64 %7576, %7572
  %7578 = icmp ult i64 %7576, %7573
  %7579 = or i1 %7577, %7578
  %7580 = zext i1 %7579 to i8
  %7581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7580, i8* %7581, align 1
  %7582 = trunc i64 %7576 to i32
  %7583 = and i32 %7582, 255
  %7584 = call i32 @llvm.ctpop.i32(i32 %7583)
  %7585 = trunc i32 %7584 to i8
  %7586 = and i8 %7585, 1
  %7587 = xor i8 %7586, 1
  %7588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7587, i8* %7588, align 1
  %7589 = xor i64 %7573, %7572
  %7590 = xor i64 %7589, %7576
  %7591 = lshr i64 %7590, 4
  %7592 = trunc i64 %7591 to i8
  %7593 = and i8 %7592, 1
  %7594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7593, i8* %7594, align 1
  %7595 = icmp eq i64 %7576, 0
  %7596 = zext i1 %7595 to i8
  %7597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7596, i8* %7597, align 1
  %7598 = lshr i64 %7576, 63
  %7599 = trunc i64 %7598 to i8
  %7600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7599, i8* %7600, align 1
  %7601 = lshr i64 %7572, 63
  %7602 = lshr i64 %7573, 63
  %7603 = xor i64 %7598, %7601
  %7604 = xor i64 %7598, %7602
  %7605 = add i64 %7603, %7604
  %7606 = icmp eq i64 %7605, 2
  %7607 = zext i1 %7606 to i8
  %7608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7607, i8* %7608, align 1
  store %struct.Memory* %loadMem_4ae1b2, %struct.Memory** %MEMORY
  %loadMem_4ae1b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7610 = getelementptr inbounds %struct.GPR, %struct.GPR* %7609, i32 0, i32 33
  %7611 = getelementptr inbounds %struct.Reg, %struct.Reg* %7610, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %7611 to i64*
  %7612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7613 = getelementptr inbounds %struct.GPR, %struct.GPR* %7612, i32 0, i32 5
  %7614 = getelementptr inbounds %struct.Reg, %struct.Reg* %7613, i32 0, i32 0
  %ECX.i795 = bitcast %union.anon* %7614 to i32*
  %7615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7616 = getelementptr inbounds %struct.GPR, %struct.GPR* %7615, i32 0, i32 9
  %7617 = getelementptr inbounds %struct.Reg, %struct.Reg* %7616, i32 0, i32 0
  %RSI.i796 = bitcast %union.anon* %7617 to i64*
  %7618 = load i64, i64* %RSI.i796
  %7619 = add i64 %7618, 4
  %7620 = load i32, i32* %ECX.i795
  %7621 = zext i32 %7620 to i64
  %7622 = load i64, i64* %PC.i794
  %7623 = add i64 %7622, 3
  store i64 %7623, i64* %PC.i794
  %7624 = inttoptr i64 %7619 to i32*
  store i32 %7620, i32* %7624
  store %struct.Memory* %loadMem_4ae1b5, %struct.Memory** %MEMORY
  %loadMem_4ae1b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7626 = getelementptr inbounds %struct.GPR, %struct.GPR* %7625, i32 0, i32 33
  %7627 = getelementptr inbounds %struct.Reg, %struct.Reg* %7626, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %7627 to i64*
  %7628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7629 = getelementptr inbounds %struct.GPR, %struct.GPR* %7628, i32 0, i32 5
  %7630 = getelementptr inbounds %struct.Reg, %struct.Reg* %7629, i32 0, i32 0
  %RCX.i792 = bitcast %union.anon* %7630 to i64*
  %7631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7632 = getelementptr inbounds %struct.GPR, %struct.GPR* %7631, i32 0, i32 15
  %7633 = getelementptr inbounds %struct.Reg, %struct.Reg* %7632, i32 0, i32 0
  %RBP.i793 = bitcast %union.anon* %7633 to i64*
  %7634 = load i64, i64* %RBP.i793
  %7635 = sub i64 %7634, 180
  %7636 = load i64, i64* %PC.i791
  %7637 = add i64 %7636, 6
  store i64 %7637, i64* %PC.i791
  %7638 = inttoptr i64 %7635 to i32*
  %7639 = load i32, i32* %7638
  %7640 = zext i32 %7639 to i64
  store i64 %7640, i64* %RCX.i792, align 8
  store %struct.Memory* %loadMem_4ae1b8, %struct.Memory** %MEMORY
  %loadMem_4ae1be = load %struct.Memory*, %struct.Memory** %MEMORY
  %7641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7642 = getelementptr inbounds %struct.GPR, %struct.GPR* %7641, i32 0, i32 33
  %7643 = getelementptr inbounds %struct.Reg, %struct.Reg* %7642, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %7643 to i64*
  %7644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7645 = getelementptr inbounds %struct.GPR, %struct.GPR* %7644, i32 0, i32 7
  %7646 = getelementptr inbounds %struct.Reg, %struct.Reg* %7645, i32 0, i32 0
  %RDX.i789 = bitcast %union.anon* %7646 to i64*
  %7647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7648 = getelementptr inbounds %struct.GPR, %struct.GPR* %7647, i32 0, i32 15
  %7649 = getelementptr inbounds %struct.Reg, %struct.Reg* %7648, i32 0, i32 0
  %RBP.i790 = bitcast %union.anon* %7649 to i64*
  %7650 = load i64, i64* %RBP.i790
  %7651 = sub i64 %7650, 932
  %7652 = load i64, i64* %PC.i788
  %7653 = add i64 %7652, 7
  store i64 %7653, i64* %PC.i788
  %7654 = inttoptr i64 %7651 to i32*
  %7655 = load i32, i32* %7654
  %7656 = sext i32 %7655 to i64
  store i64 %7656, i64* %RDX.i789, align 8
  store %struct.Memory* %loadMem_4ae1be, %struct.Memory** %MEMORY
  %loadMem_4ae1c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7658 = getelementptr inbounds %struct.GPR, %struct.GPR* %7657, i32 0, i32 33
  %7659 = getelementptr inbounds %struct.Reg, %struct.Reg* %7658, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %7659 to i64*
  %7660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7661 = getelementptr inbounds %struct.GPR, %struct.GPR* %7660, i32 0, i32 7
  %7662 = getelementptr inbounds %struct.Reg, %struct.Reg* %7661, i32 0, i32 0
  %RDX.i787 = bitcast %union.anon* %7662 to i64*
  %7663 = load i64, i64* %RDX.i787
  %7664 = load i64, i64* %PC.i786
  %7665 = add i64 %7664, 7
  store i64 %7665, i64* %PC.i786
  %7666 = sext i64 %7663 to i128
  %7667 = and i128 %7666, -18446744073709551616
  %7668 = zext i64 %7663 to i128
  %7669 = or i128 %7667, %7668
  %7670 = mul i128 180, %7669
  %7671 = trunc i128 %7670 to i64
  store i64 %7671, i64* %RDX.i787, align 8
  %7672 = sext i64 %7671 to i128
  %7673 = icmp ne i128 %7672, %7670
  %7674 = zext i1 %7673 to i8
  %7675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7674, i8* %7675, align 1
  %7676 = trunc i128 %7670 to i32
  %7677 = and i32 %7676, 255
  %7678 = call i32 @llvm.ctpop.i32(i32 %7677)
  %7679 = trunc i32 %7678 to i8
  %7680 = and i8 %7679, 1
  %7681 = xor i8 %7680, 1
  %7682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7681, i8* %7682, align 1
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7683, align 1
  %7684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7684, align 1
  %7685 = lshr i64 %7671, 63
  %7686 = trunc i64 %7685 to i8
  %7687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7686, i8* %7687, align 1
  %7688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7674, i8* %7688, align 1
  store %struct.Memory* %loadMem_4ae1c5, %struct.Memory** %MEMORY
  %loadMem_4ae1cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7690 = getelementptr inbounds %struct.GPR, %struct.GPR* %7689, i32 0, i32 33
  %7691 = getelementptr inbounds %struct.Reg, %struct.Reg* %7690, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %7691 to i64*
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7693 = getelementptr inbounds %struct.GPR, %struct.GPR* %7692, i32 0, i32 1
  %7694 = getelementptr inbounds %struct.Reg, %struct.Reg* %7693, i32 0, i32 0
  %RAX.i784 = bitcast %union.anon* %7694 to i64*
  %7695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7696 = getelementptr inbounds %struct.GPR, %struct.GPR* %7695, i32 0, i32 7
  %7697 = getelementptr inbounds %struct.Reg, %struct.Reg* %7696, i32 0, i32 0
  %RDX.i785 = bitcast %union.anon* %7697 to i64*
  %7698 = load i64, i64* %RAX.i784
  %7699 = load i64, i64* %RDX.i785
  %7700 = load i64, i64* %PC.i783
  %7701 = add i64 %7700, 3
  store i64 %7701, i64* %PC.i783
  %7702 = add i64 %7699, %7698
  store i64 %7702, i64* %RAX.i784, align 8
  %7703 = icmp ult i64 %7702, %7698
  %7704 = icmp ult i64 %7702, %7699
  %7705 = or i1 %7703, %7704
  %7706 = zext i1 %7705 to i8
  %7707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7706, i8* %7707, align 1
  %7708 = trunc i64 %7702 to i32
  %7709 = and i32 %7708, 255
  %7710 = call i32 @llvm.ctpop.i32(i32 %7709)
  %7711 = trunc i32 %7710 to i8
  %7712 = and i8 %7711, 1
  %7713 = xor i8 %7712, 1
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7713, i8* %7714, align 1
  %7715 = xor i64 %7699, %7698
  %7716 = xor i64 %7715, %7702
  %7717 = lshr i64 %7716, 4
  %7718 = trunc i64 %7717 to i8
  %7719 = and i8 %7718, 1
  %7720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7719, i8* %7720, align 1
  %7721 = icmp eq i64 %7702, 0
  %7722 = zext i1 %7721 to i8
  %7723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7722, i8* %7723, align 1
  %7724 = lshr i64 %7702, 63
  %7725 = trunc i64 %7724 to i8
  %7726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7725, i8* %7726, align 1
  %7727 = lshr i64 %7698, 63
  %7728 = lshr i64 %7699, 63
  %7729 = xor i64 %7724, %7727
  %7730 = xor i64 %7724, %7728
  %7731 = add i64 %7729, %7730
  %7732 = icmp eq i64 %7731, 2
  %7733 = zext i1 %7732 to i8
  %7734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7733, i8* %7734, align 1
  store %struct.Memory* %loadMem_4ae1cc, %struct.Memory** %MEMORY
  %loadMem_4ae1cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7736 = getelementptr inbounds %struct.GPR, %struct.GPR* %7735, i32 0, i32 33
  %7737 = getelementptr inbounds %struct.Reg, %struct.Reg* %7736, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %7737 to i64*
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7739 = getelementptr inbounds %struct.GPR, %struct.GPR* %7738, i32 0, i32 7
  %7740 = getelementptr inbounds %struct.Reg, %struct.Reg* %7739, i32 0, i32 0
  %RDX.i781 = bitcast %union.anon* %7740 to i64*
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7742 = getelementptr inbounds %struct.GPR, %struct.GPR* %7741, i32 0, i32 15
  %7743 = getelementptr inbounds %struct.Reg, %struct.Reg* %7742, i32 0, i32 0
  %RBP.i782 = bitcast %union.anon* %7743 to i64*
  %7744 = load i64, i64* %RBP.i782
  %7745 = sub i64 %7744, 16
  %7746 = load i64, i64* %PC.i780
  %7747 = add i64 %7746, 4
  store i64 %7747, i64* %PC.i780
  %7748 = inttoptr i64 %7745 to i32*
  %7749 = load i32, i32* %7748
  %7750 = sext i32 %7749 to i64
  store i64 %7750, i64* %RDX.i781, align 8
  store %struct.Memory* %loadMem_4ae1cf, %struct.Memory** %MEMORY
  %loadMem_4ae1d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7752 = getelementptr inbounds %struct.GPR, %struct.GPR* %7751, i32 0, i32 33
  %7753 = getelementptr inbounds %struct.Reg, %struct.Reg* %7752, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %7753 to i64*
  %7754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7755 = getelementptr inbounds %struct.GPR, %struct.GPR* %7754, i32 0, i32 7
  %7756 = getelementptr inbounds %struct.Reg, %struct.Reg* %7755, i32 0, i32 0
  %RDX.i779 = bitcast %union.anon* %7756 to i64*
  %7757 = load i64, i64* %RDX.i779
  %7758 = load i64, i64* %PC.i778
  %7759 = add i64 %7758, 4
  store i64 %7759, i64* %PC.i778
  %7760 = sext i64 %7757 to i128
  %7761 = and i128 %7760, -18446744073709551616
  %7762 = zext i64 %7757 to i128
  %7763 = or i128 %7761, %7762
  %7764 = mul i128 12, %7763
  %7765 = trunc i128 %7764 to i64
  store i64 %7765, i64* %RDX.i779, align 8
  %7766 = sext i64 %7765 to i128
  %7767 = icmp ne i128 %7766, %7764
  %7768 = zext i1 %7767 to i8
  %7769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7768, i8* %7769, align 1
  %7770 = trunc i128 %7764 to i32
  %7771 = and i32 %7770, 255
  %7772 = call i32 @llvm.ctpop.i32(i32 %7771)
  %7773 = trunc i32 %7772 to i8
  %7774 = and i8 %7773, 1
  %7775 = xor i8 %7774, 1
  %7776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7775, i8* %7776, align 1
  %7777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7777, align 1
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7778, align 1
  %7779 = lshr i64 %7765, 63
  %7780 = trunc i64 %7779 to i8
  %7781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7780, i8* %7781, align 1
  %7782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7768, i8* %7782, align 1
  store %struct.Memory* %loadMem_4ae1d3, %struct.Memory** %MEMORY
  %loadMem_4ae1d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7784 = getelementptr inbounds %struct.GPR, %struct.GPR* %7783, i32 0, i32 33
  %7785 = getelementptr inbounds %struct.Reg, %struct.Reg* %7784, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %7785 to i64*
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7787 = getelementptr inbounds %struct.GPR, %struct.GPR* %7786, i32 0, i32 1
  %7788 = getelementptr inbounds %struct.Reg, %struct.Reg* %7787, i32 0, i32 0
  %RAX.i776 = bitcast %union.anon* %7788 to i64*
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7790 = getelementptr inbounds %struct.GPR, %struct.GPR* %7789, i32 0, i32 7
  %7791 = getelementptr inbounds %struct.Reg, %struct.Reg* %7790, i32 0, i32 0
  %RDX.i777 = bitcast %union.anon* %7791 to i64*
  %7792 = load i64, i64* %RAX.i776
  %7793 = load i64, i64* %RDX.i777
  %7794 = load i64, i64* %PC.i775
  %7795 = add i64 %7794, 3
  store i64 %7795, i64* %PC.i775
  %7796 = add i64 %7793, %7792
  store i64 %7796, i64* %RAX.i776, align 8
  %7797 = icmp ult i64 %7796, %7792
  %7798 = icmp ult i64 %7796, %7793
  %7799 = or i1 %7797, %7798
  %7800 = zext i1 %7799 to i8
  %7801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7800, i8* %7801, align 1
  %7802 = trunc i64 %7796 to i32
  %7803 = and i32 %7802, 255
  %7804 = call i32 @llvm.ctpop.i32(i32 %7803)
  %7805 = trunc i32 %7804 to i8
  %7806 = and i8 %7805, 1
  %7807 = xor i8 %7806, 1
  %7808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7807, i8* %7808, align 1
  %7809 = xor i64 %7793, %7792
  %7810 = xor i64 %7809, %7796
  %7811 = lshr i64 %7810, 4
  %7812 = trunc i64 %7811 to i8
  %7813 = and i8 %7812, 1
  %7814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7813, i8* %7814, align 1
  %7815 = icmp eq i64 %7796, 0
  %7816 = zext i1 %7815 to i8
  %7817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7816, i8* %7817, align 1
  %7818 = lshr i64 %7796, 63
  %7819 = trunc i64 %7818 to i8
  %7820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7819, i8* %7820, align 1
  %7821 = lshr i64 %7792, 63
  %7822 = lshr i64 %7793, 63
  %7823 = xor i64 %7818, %7821
  %7824 = xor i64 %7818, %7822
  %7825 = add i64 %7823, %7824
  %7826 = icmp eq i64 %7825, 2
  %7827 = zext i1 %7826 to i8
  %7828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7827, i8* %7828, align 1
  store %struct.Memory* %loadMem_4ae1d7, %struct.Memory** %MEMORY
  %loadMem_4ae1da = load %struct.Memory*, %struct.Memory** %MEMORY
  %7829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7830 = getelementptr inbounds %struct.GPR, %struct.GPR* %7829, i32 0, i32 33
  %7831 = getelementptr inbounds %struct.Reg, %struct.Reg* %7830, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %7831 to i64*
  %7832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7833 = getelementptr inbounds %struct.GPR, %struct.GPR* %7832, i32 0, i32 5
  %7834 = getelementptr inbounds %struct.Reg, %struct.Reg* %7833, i32 0, i32 0
  %ECX.i773 = bitcast %union.anon* %7834 to i32*
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7836 = getelementptr inbounds %struct.GPR, %struct.GPR* %7835, i32 0, i32 1
  %7837 = getelementptr inbounds %struct.Reg, %struct.Reg* %7836, i32 0, i32 0
  %RAX.i774 = bitcast %union.anon* %7837 to i64*
  %7838 = load i64, i64* %RAX.i774
  %7839 = add i64 %7838, 8
  %7840 = load i32, i32* %ECX.i773
  %7841 = zext i32 %7840 to i64
  %7842 = load i64, i64* %PC.i772
  %7843 = add i64 %7842, 3
  store i64 %7843, i64* %PC.i772
  %7844 = inttoptr i64 %7839 to i32*
  store i32 %7840, i32* %7844
  store %struct.Memory* %loadMem_4ae1da, %struct.Memory** %MEMORY
  %loadMem_4ae1dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7846 = getelementptr inbounds %struct.GPR, %struct.GPR* %7845, i32 0, i32 33
  %7847 = getelementptr inbounds %struct.Reg, %struct.Reg* %7846, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %7847 to i64*
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7849 = getelementptr inbounds %struct.GPR, %struct.GPR* %7848, i32 0, i32 15
  %7850 = getelementptr inbounds %struct.Reg, %struct.Reg* %7849, i32 0, i32 0
  %RBP.i771 = bitcast %union.anon* %7850 to i64*
  %7851 = load i64, i64* %RBP.i771
  %7852 = sub i64 %7851, 8
  %7853 = load i64, i64* %PC.i770
  %7854 = add i64 %7853, 7
  store i64 %7854, i64* %PC.i770
  %7855 = inttoptr i64 %7852 to i32*
  store i32 0, i32* %7855
  store %struct.Memory* %loadMem_4ae1dd, %struct.Memory** %MEMORY
  br label %block_.L_4ae1e4

block_.L_4ae1e4:                                  ; preds = %block_.L_4ae399, %block_.L_4ae189
  %loadMem_4ae1e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7857 = getelementptr inbounds %struct.GPR, %struct.GPR* %7856, i32 0, i32 33
  %7858 = getelementptr inbounds %struct.Reg, %struct.Reg* %7857, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %7858 to i64*
  %7859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7860 = getelementptr inbounds %struct.GPR, %struct.GPR* %7859, i32 0, i32 1
  %7861 = getelementptr inbounds %struct.Reg, %struct.Reg* %7860, i32 0, i32 0
  %RAX.i768 = bitcast %union.anon* %7861 to i64*
  %7862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7863 = getelementptr inbounds %struct.GPR, %struct.GPR* %7862, i32 0, i32 15
  %7864 = getelementptr inbounds %struct.Reg, %struct.Reg* %7863, i32 0, i32 0
  %RBP.i769 = bitcast %union.anon* %7864 to i64*
  %7865 = load i64, i64* %RBP.i769
  %7866 = sub i64 %7865, 8
  %7867 = load i64, i64* %PC.i767
  %7868 = add i64 %7867, 3
  store i64 %7868, i64* %PC.i767
  %7869 = inttoptr i64 %7866 to i32*
  %7870 = load i32, i32* %7869
  %7871 = zext i32 %7870 to i64
  store i64 %7871, i64* %RAX.i768, align 8
  store %struct.Memory* %loadMem_4ae1e4, %struct.Memory** %MEMORY
  %loadMem_4ae1e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7873 = getelementptr inbounds %struct.GPR, %struct.GPR* %7872, i32 0, i32 33
  %7874 = getelementptr inbounds %struct.Reg, %struct.Reg* %7873, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %7874 to i64*
  %7875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7876 = getelementptr inbounds %struct.GPR, %struct.GPR* %7875, i32 0, i32 5
  %7877 = getelementptr inbounds %struct.Reg, %struct.Reg* %7876, i32 0, i32 0
  %RCX.i766 = bitcast %union.anon* %7877 to i64*
  %7878 = load i64, i64* %PC.i765
  %7879 = add i64 %7878, 8
  store i64 %7879, i64* %PC.i765
  %7880 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7880, i64* %RCX.i766, align 8
  store %struct.Memory* %loadMem_4ae1e7, %struct.Memory** %MEMORY
  %loadMem_4ae1ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %7881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7882 = getelementptr inbounds %struct.GPR, %struct.GPR* %7881, i32 0, i32 33
  %7883 = getelementptr inbounds %struct.Reg, %struct.Reg* %7882, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %7883 to i64*
  %7884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7885 = getelementptr inbounds %struct.GPR, %struct.GPR* %7884, i32 0, i32 5
  %7886 = getelementptr inbounds %struct.Reg, %struct.Reg* %7885, i32 0, i32 0
  %RCX.i763 = bitcast %union.anon* %7886 to i64*
  %7887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7888 = getelementptr inbounds %struct.GPR, %struct.GPR* %7887, i32 0, i32 7
  %7889 = getelementptr inbounds %struct.Reg, %struct.Reg* %7888, i32 0, i32 0
  %RDX.i764 = bitcast %union.anon* %7889 to i64*
  %7890 = load i64, i64* %RCX.i763
  %7891 = add i64 %7890, 60
  %7892 = load i64, i64* %PC.i762
  %7893 = add i64 %7892, 3
  store i64 %7893, i64* %PC.i762
  %7894 = inttoptr i64 %7891 to i32*
  %7895 = load i32, i32* %7894
  %7896 = zext i32 %7895 to i64
  store i64 %7896, i64* %RDX.i764, align 8
  store %struct.Memory* %loadMem_4ae1ef, %struct.Memory** %MEMORY
  %loadMem_4ae1f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7898 = getelementptr inbounds %struct.GPR, %struct.GPR* %7897, i32 0, i32 33
  %7899 = getelementptr inbounds %struct.Reg, %struct.Reg* %7898, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %7899 to i64*
  %7900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7901 = getelementptr inbounds %struct.GPR, %struct.GPR* %7900, i32 0, i32 5
  %7902 = getelementptr inbounds %struct.Reg, %struct.Reg* %7901, i32 0, i32 0
  %RCX.i761 = bitcast %union.anon* %7902 to i64*
  %7903 = load i64, i64* %PC.i760
  %7904 = add i64 %7903, 8
  store i64 %7904, i64* %PC.i760
  %7905 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7905, i64* %RCX.i761, align 8
  store %struct.Memory* %loadMem_4ae1f2, %struct.Memory** %MEMORY
  %loadMem_4ae1fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7907 = getelementptr inbounds %struct.GPR, %struct.GPR* %7906, i32 0, i32 33
  %7908 = getelementptr inbounds %struct.Reg, %struct.Reg* %7907, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %7908 to i64*
  %7909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7910 = getelementptr inbounds %struct.GPR, %struct.GPR* %7909, i32 0, i32 5
  %7911 = getelementptr inbounds %struct.Reg, %struct.Reg* %7910, i32 0, i32 0
  %RCX.i758 = bitcast %union.anon* %7911 to i64*
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7913 = getelementptr inbounds %struct.GPR, %struct.GPR* %7912, i32 0, i32 7
  %7914 = getelementptr inbounds %struct.Reg, %struct.Reg* %7913, i32 0, i32 0
  %RDX.i759 = bitcast %union.anon* %7914 to i64*
  %7915 = load i64, i64* %RDX.i759
  %7916 = load i64, i64* %RCX.i758
  %7917 = add i64 %7916, 52
  %7918 = load i64, i64* %PC.i757
  %7919 = add i64 %7918, 4
  store i64 %7919, i64* %PC.i757
  %7920 = inttoptr i64 %7917 to i32*
  %7921 = load i32, i32* %7920
  %7922 = shl i64 %7915, 32
  %7923 = ashr exact i64 %7922, 32
  %7924 = sext i32 %7921 to i64
  %7925 = mul i64 %7924, %7923
  %7926 = trunc i64 %7925 to i32
  %7927 = and i64 %7925, 4294967295
  store i64 %7927, i64* %RDX.i759, align 8
  %7928 = shl i64 %7925, 32
  %7929 = ashr exact i64 %7928, 32
  %7930 = icmp ne i64 %7929, %7925
  %7931 = zext i1 %7930 to i8
  %7932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7931, i8* %7932, align 1
  %7933 = and i32 %7926, 255
  %7934 = call i32 @llvm.ctpop.i32(i32 %7933)
  %7935 = trunc i32 %7934 to i8
  %7936 = and i8 %7935, 1
  %7937 = xor i8 %7936, 1
  %7938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7937, i8* %7938, align 1
  %7939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7939, align 1
  %7940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7940, align 1
  %7941 = lshr i32 %7926, 31
  %7942 = trunc i32 %7941 to i8
  %7943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7942, i8* %7943, align 1
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7931, i8* %7944, align 1
  store %struct.Memory* %loadMem_4ae1fa, %struct.Memory** %MEMORY
  %loadMem_4ae1fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %7945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7946 = getelementptr inbounds %struct.GPR, %struct.GPR* %7945, i32 0, i32 33
  %7947 = getelementptr inbounds %struct.Reg, %struct.Reg* %7946, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %7947 to i64*
  %7948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7949 = getelementptr inbounds %struct.GPR, %struct.GPR* %7948, i32 0, i32 1
  %7950 = getelementptr inbounds %struct.Reg, %struct.Reg* %7949, i32 0, i32 0
  %EAX.i755 = bitcast %union.anon* %7950 to i32*
  %7951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7952 = getelementptr inbounds %struct.GPR, %struct.GPR* %7951, i32 0, i32 7
  %7953 = getelementptr inbounds %struct.Reg, %struct.Reg* %7952, i32 0, i32 0
  %EDX.i756 = bitcast %union.anon* %7953 to i32*
  %7954 = load i32, i32* %EAX.i755
  %7955 = zext i32 %7954 to i64
  %7956 = load i32, i32* %EDX.i756
  %7957 = zext i32 %7956 to i64
  %7958 = load i64, i64* %PC.i754
  %7959 = add i64 %7958, 2
  store i64 %7959, i64* %PC.i754
  %7960 = sub i32 %7954, %7956
  %7961 = icmp ult i32 %7954, %7956
  %7962 = zext i1 %7961 to i8
  %7963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7962, i8* %7963, align 1
  %7964 = and i32 %7960, 255
  %7965 = call i32 @llvm.ctpop.i32(i32 %7964)
  %7966 = trunc i32 %7965 to i8
  %7967 = and i8 %7966, 1
  %7968 = xor i8 %7967, 1
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7968, i8* %7969, align 1
  %7970 = xor i64 %7957, %7955
  %7971 = trunc i64 %7970 to i32
  %7972 = xor i32 %7971, %7960
  %7973 = lshr i32 %7972, 4
  %7974 = trunc i32 %7973 to i8
  %7975 = and i8 %7974, 1
  %7976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7975, i8* %7976, align 1
  %7977 = icmp eq i32 %7960, 0
  %7978 = zext i1 %7977 to i8
  %7979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7978, i8* %7979, align 1
  %7980 = lshr i32 %7960, 31
  %7981 = trunc i32 %7980 to i8
  %7982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7981, i8* %7982, align 1
  %7983 = lshr i32 %7954, 31
  %7984 = lshr i32 %7956, 31
  %7985 = xor i32 %7984, %7983
  %7986 = xor i32 %7980, %7983
  %7987 = add i32 %7986, %7985
  %7988 = icmp eq i32 %7987, 2
  %7989 = zext i1 %7988 to i8
  %7990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7989, i8* %7990, align 1
  store %struct.Memory* %loadMem_4ae1fe, %struct.Memory** %MEMORY
  %loadMem_4ae200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7992 = getelementptr inbounds %struct.GPR, %struct.GPR* %7991, i32 0, i32 33
  %7993 = getelementptr inbounds %struct.Reg, %struct.Reg* %7992, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %7993 to i64*
  %7994 = load i64, i64* %PC.i753
  %7995 = add i64 %7994, 447
  %7996 = load i64, i64* %PC.i753
  %7997 = add i64 %7996, 6
  %7998 = load i64, i64* %PC.i753
  %7999 = add i64 %7998, 6
  store i64 %7999, i64* %PC.i753
  %8000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8001 = load i8, i8* %8000, align 1
  %8002 = icmp ne i8 %8001, 0
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8004 = load i8, i8* %8003, align 1
  %8005 = icmp ne i8 %8004, 0
  %8006 = xor i1 %8002, %8005
  %8007 = xor i1 %8006, true
  %8008 = zext i1 %8007 to i8
  store i8 %8008, i8* %BRANCH_TAKEN, align 1
  %8009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8010 = select i1 %8006, i64 %7997, i64 %7995
  store i64 %8010, i64* %8009, align 8
  store %struct.Memory* %loadMem_4ae200, %struct.Memory** %MEMORY
  %loadBr_4ae200 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae200 = icmp eq i8 %loadBr_4ae200, 1
  br i1 %cmpBr_4ae200, label %block_.L_4ae3bf, label %block_4ae206

block_4ae206:                                     ; preds = %block_.L_4ae1e4
  %loadMem_4ae206 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8012 = getelementptr inbounds %struct.GPR, %struct.GPR* %8011, i32 0, i32 33
  %8013 = getelementptr inbounds %struct.Reg, %struct.Reg* %8012, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %8013 to i64*
  %8014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8015 = getelementptr inbounds %struct.GPR, %struct.GPR* %8014, i32 0, i32 1
  %8016 = getelementptr inbounds %struct.Reg, %struct.Reg* %8015, i32 0, i32 0
  %RAX.i751 = bitcast %union.anon* %8016 to i64*
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8018 = getelementptr inbounds %struct.GPR, %struct.GPR* %8017, i32 0, i32 15
  %8019 = getelementptr inbounds %struct.Reg, %struct.Reg* %8018, i32 0, i32 0
  %RBP.i752 = bitcast %union.anon* %8019 to i64*
  %8020 = load i64, i64* %RBP.i752
  %8021 = sub i64 %8020, 928
  %8022 = load i64, i64* %PC.i750
  %8023 = add i64 %8022, 7
  store i64 %8023, i64* %PC.i750
  store i64 %8021, i64* %RAX.i751, align 8
  store %struct.Memory* %loadMem_4ae206, %struct.Memory** %MEMORY
  %loadMem_4ae20d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8025 = getelementptr inbounds %struct.GPR, %struct.GPR* %8024, i32 0, i32 33
  %8026 = getelementptr inbounds %struct.Reg, %struct.Reg* %8025, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %8026 to i64*
  %8027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8028 = getelementptr inbounds %struct.GPR, %struct.GPR* %8027, i32 0, i32 5
  %8029 = getelementptr inbounds %struct.Reg, %struct.Reg* %8028, i32 0, i32 0
  %RCX.i748 = bitcast %union.anon* %8029 to i64*
  %8030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8031 = getelementptr inbounds %struct.GPR, %struct.GPR* %8030, i32 0, i32 15
  %8032 = getelementptr inbounds %struct.Reg, %struct.Reg* %8031, i32 0, i32 0
  %RBP.i749 = bitcast %union.anon* %8032 to i64*
  %8033 = load i64, i64* %RBP.i749
  %8034 = sub i64 %8033, 560
  %8035 = load i64, i64* %PC.i747
  %8036 = add i64 %8035, 7
  store i64 %8036, i64* %PC.i747
  store i64 %8034, i64* %RCX.i748, align 8
  store %struct.Memory* %loadMem_4ae20d, %struct.Memory** %MEMORY
  %loadMem_4ae214 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8038 = getelementptr inbounds %struct.GPR, %struct.GPR* %8037, i32 0, i32 33
  %8039 = getelementptr inbounds %struct.Reg, %struct.Reg* %8038, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %8039 to i64*
  %8040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8041 = getelementptr inbounds %struct.GPR, %struct.GPR* %8040, i32 0, i32 7
  %8042 = getelementptr inbounds %struct.Reg, %struct.Reg* %8041, i32 0, i32 0
  %RDX.i745 = bitcast %union.anon* %8042 to i64*
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8044 = getelementptr inbounds %struct.GPR, %struct.GPR* %8043, i32 0, i32 15
  %8045 = getelementptr inbounds %struct.Reg, %struct.Reg* %8044, i32 0, i32 0
  %RBP.i746 = bitcast %union.anon* %8045 to i64*
  %8046 = load i64, i64* %RBP.i746
  %8047 = sub i64 %8046, 168
  %8048 = load i64, i64* %PC.i744
  %8049 = add i64 %8048, 7
  store i64 %8049, i64* %PC.i744
  %8050 = inttoptr i64 %8047 to i64*
  %8051 = load i64, i64* %8050
  store i64 %8051, i64* %RDX.i745, align 8
  store %struct.Memory* %loadMem_4ae214, %struct.Memory** %MEMORY
  %loadMem_4ae21b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8053 = getelementptr inbounds %struct.GPR, %struct.GPR* %8052, i32 0, i32 33
  %8054 = getelementptr inbounds %struct.Reg, %struct.Reg* %8053, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %8054 to i64*
  %8055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8056 = getelementptr inbounds %struct.GPR, %struct.GPR* %8055, i32 0, i32 9
  %8057 = getelementptr inbounds %struct.Reg, %struct.Reg* %8056, i32 0, i32 0
  %RSI.i742 = bitcast %union.anon* %8057 to i64*
  %8058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8059 = getelementptr inbounds %struct.GPR, %struct.GPR* %8058, i32 0, i32 15
  %8060 = getelementptr inbounds %struct.Reg, %struct.Reg* %8059, i32 0, i32 0
  %RBP.i743 = bitcast %union.anon* %8060 to i64*
  %8061 = load i64, i64* %RBP.i743
  %8062 = sub i64 %8061, 8
  %8063 = load i64, i64* %PC.i741
  %8064 = add i64 %8063, 4
  store i64 %8064, i64* %PC.i741
  %8065 = inttoptr i64 %8062 to i32*
  %8066 = load i32, i32* %8065
  %8067 = sext i32 %8066 to i64
  store i64 %8067, i64* %RSI.i742, align 8
  store %struct.Memory* %loadMem_4ae21b, %struct.Memory** %MEMORY
  %loadMem_4ae21f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8069 = getelementptr inbounds %struct.GPR, %struct.GPR* %8068, i32 0, i32 33
  %8070 = getelementptr inbounds %struct.Reg, %struct.Reg* %8069, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %8070 to i64*
  %8071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8072 = getelementptr inbounds %struct.GPR, %struct.GPR* %8071, i32 0, i32 7
  %8073 = getelementptr inbounds %struct.Reg, %struct.Reg* %8072, i32 0, i32 0
  %RDX.i738 = bitcast %union.anon* %8073 to i64*
  %8074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8075 = getelementptr inbounds %struct.GPR, %struct.GPR* %8074, i32 0, i32 9
  %8076 = getelementptr inbounds %struct.Reg, %struct.Reg* %8075, i32 0, i32 0
  %RSI.i739 = bitcast %union.anon* %8076 to i64*
  %8077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8078 = getelementptr inbounds %struct.GPR, %struct.GPR* %8077, i32 0, i32 11
  %8079 = getelementptr inbounds %struct.Reg, %struct.Reg* %8078, i32 0, i32 0
  %RDI.i740 = bitcast %union.anon* %8079 to i64*
  %8080 = load i64, i64* %RDX.i738
  %8081 = load i64, i64* %RSI.i739
  %8082 = mul i64 %8081, 2
  %8083 = add i64 %8082, %8080
  %8084 = load i64, i64* %PC.i737
  %8085 = add i64 %8084, 4
  store i64 %8085, i64* %PC.i737
  %8086 = inttoptr i64 %8083 to i16*
  %8087 = load i16, i16* %8086
  %8088 = zext i16 %8087 to i64
  store i64 %8088, i64* %RDI.i740, align 8
  store %struct.Memory* %loadMem_4ae21f, %struct.Memory** %MEMORY
  %loadMem_4ae223 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8090 = getelementptr inbounds %struct.GPR, %struct.GPR* %8089, i32 0, i32 33
  %8091 = getelementptr inbounds %struct.Reg, %struct.Reg* %8090, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %8091 to i64*
  %8092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8093 = getelementptr inbounds %struct.GPR, %struct.GPR* %8092, i32 0, i32 7
  %8094 = getelementptr inbounds %struct.Reg, %struct.Reg* %8093, i32 0, i32 0
  %RDX.i735 = bitcast %union.anon* %8094 to i64*
  %8095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8096 = getelementptr inbounds %struct.GPR, %struct.GPR* %8095, i32 0, i32 15
  %8097 = getelementptr inbounds %struct.Reg, %struct.Reg* %8096, i32 0, i32 0
  %RBP.i736 = bitcast %union.anon* %8097 to i64*
  %8098 = load i64, i64* %RBP.i736
  %8099 = sub i64 %8098, 932
  %8100 = load i64, i64* %PC.i734
  %8101 = add i64 %8100, 7
  store i64 %8101, i64* %PC.i734
  %8102 = inttoptr i64 %8099 to i32*
  %8103 = load i32, i32* %8102
  %8104 = sext i32 %8103 to i64
  store i64 %8104, i64* %RDX.i735, align 8
  store %struct.Memory* %loadMem_4ae223, %struct.Memory** %MEMORY
  %loadMem_4ae22a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8106 = getelementptr inbounds %struct.GPR, %struct.GPR* %8105, i32 0, i32 33
  %8107 = getelementptr inbounds %struct.Reg, %struct.Reg* %8106, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %8107 to i64*
  %8108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8109 = getelementptr inbounds %struct.GPR, %struct.GPR* %8108, i32 0, i32 7
  %8110 = getelementptr inbounds %struct.Reg, %struct.Reg* %8109, i32 0, i32 0
  %RDX.i733 = bitcast %union.anon* %8110 to i64*
  %8111 = load i64, i64* %RDX.i733
  %8112 = load i64, i64* %PC.i732
  %8113 = add i64 %8112, 7
  store i64 %8113, i64* %PC.i732
  %8114 = sext i64 %8111 to i128
  %8115 = and i128 %8114, -18446744073709551616
  %8116 = zext i64 %8111 to i128
  %8117 = or i128 %8115, %8116
  %8118 = mul i128 180, %8117
  %8119 = trunc i128 %8118 to i64
  store i64 %8119, i64* %RDX.i733, align 8
  %8120 = sext i64 %8119 to i128
  %8121 = icmp ne i128 %8120, %8118
  %8122 = zext i1 %8121 to i8
  %8123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8122, i8* %8123, align 1
  %8124 = trunc i128 %8118 to i32
  %8125 = and i32 %8124, 255
  %8126 = call i32 @llvm.ctpop.i32(i32 %8125)
  %8127 = trunc i32 %8126 to i8
  %8128 = and i8 %8127, 1
  %8129 = xor i8 %8128, 1
  %8130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8129, i8* %8130, align 1
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8131, align 1
  %8132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8132, align 1
  %8133 = lshr i64 %8119, 63
  %8134 = trunc i64 %8133 to i8
  %8135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8134, i8* %8135, align 1
  %8136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8122, i8* %8136, align 1
  store %struct.Memory* %loadMem_4ae22a, %struct.Memory** %MEMORY
  %loadMem_4ae231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8138 = getelementptr inbounds %struct.GPR, %struct.GPR* %8137, i32 0, i32 33
  %8139 = getelementptr inbounds %struct.Reg, %struct.Reg* %8138, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %8139 to i64*
  %8140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8141 = getelementptr inbounds %struct.GPR, %struct.GPR* %8140, i32 0, i32 5
  %8142 = getelementptr inbounds %struct.Reg, %struct.Reg* %8141, i32 0, i32 0
  %RCX.i730 = bitcast %union.anon* %8142 to i64*
  %8143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8144 = getelementptr inbounds %struct.GPR, %struct.GPR* %8143, i32 0, i32 7
  %8145 = getelementptr inbounds %struct.Reg, %struct.Reg* %8144, i32 0, i32 0
  %RDX.i731 = bitcast %union.anon* %8145 to i64*
  %8146 = load i64, i64* %RCX.i730
  %8147 = load i64, i64* %RDX.i731
  %8148 = load i64, i64* %PC.i729
  %8149 = add i64 %8148, 3
  store i64 %8149, i64* %PC.i729
  %8150 = add i64 %8147, %8146
  store i64 %8150, i64* %RCX.i730, align 8
  %8151 = icmp ult i64 %8150, %8146
  %8152 = icmp ult i64 %8150, %8147
  %8153 = or i1 %8151, %8152
  %8154 = zext i1 %8153 to i8
  %8155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8154, i8* %8155, align 1
  %8156 = trunc i64 %8150 to i32
  %8157 = and i32 %8156, 255
  %8158 = call i32 @llvm.ctpop.i32(i32 %8157)
  %8159 = trunc i32 %8158 to i8
  %8160 = and i8 %8159, 1
  %8161 = xor i8 %8160, 1
  %8162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8161, i8* %8162, align 1
  %8163 = xor i64 %8147, %8146
  %8164 = xor i64 %8163, %8150
  %8165 = lshr i64 %8164, 4
  %8166 = trunc i64 %8165 to i8
  %8167 = and i8 %8166, 1
  %8168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8167, i8* %8168, align 1
  %8169 = icmp eq i64 %8150, 0
  %8170 = zext i1 %8169 to i8
  %8171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8170, i8* %8171, align 1
  %8172 = lshr i64 %8150, 63
  %8173 = trunc i64 %8172 to i8
  %8174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8173, i8* %8174, align 1
  %8175 = lshr i64 %8146, 63
  %8176 = lshr i64 %8147, 63
  %8177 = xor i64 %8172, %8175
  %8178 = xor i64 %8172, %8176
  %8179 = add i64 %8177, %8178
  %8180 = icmp eq i64 %8179, 2
  %8181 = zext i1 %8180 to i8
  %8182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8181, i8* %8182, align 1
  store %struct.Memory* %loadMem_4ae231, %struct.Memory** %MEMORY
  %loadMem_4ae234 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8184 = getelementptr inbounds %struct.GPR, %struct.GPR* %8183, i32 0, i32 33
  %8185 = getelementptr inbounds %struct.Reg, %struct.Reg* %8184, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %8185 to i64*
  %8186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8187 = getelementptr inbounds %struct.GPR, %struct.GPR* %8186, i32 0, i32 7
  %8188 = getelementptr inbounds %struct.Reg, %struct.Reg* %8187, i32 0, i32 0
  %RDX.i727 = bitcast %union.anon* %8188 to i64*
  %8189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8190 = getelementptr inbounds %struct.GPR, %struct.GPR* %8189, i32 0, i32 15
  %8191 = getelementptr inbounds %struct.Reg, %struct.Reg* %8190, i32 0, i32 0
  %RBP.i728 = bitcast %union.anon* %8191 to i64*
  %8192 = load i64, i64* %RBP.i728
  %8193 = sub i64 %8192, 16
  %8194 = load i64, i64* %PC.i726
  %8195 = add i64 %8194, 4
  store i64 %8195, i64* %PC.i726
  %8196 = inttoptr i64 %8193 to i32*
  %8197 = load i32, i32* %8196
  %8198 = sext i32 %8197 to i64
  store i64 %8198, i64* %RDX.i727, align 8
  store %struct.Memory* %loadMem_4ae234, %struct.Memory** %MEMORY
  %loadMem_4ae238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8200 = getelementptr inbounds %struct.GPR, %struct.GPR* %8199, i32 0, i32 33
  %8201 = getelementptr inbounds %struct.Reg, %struct.Reg* %8200, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %8201 to i64*
  %8202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8203 = getelementptr inbounds %struct.GPR, %struct.GPR* %8202, i32 0, i32 7
  %8204 = getelementptr inbounds %struct.Reg, %struct.Reg* %8203, i32 0, i32 0
  %RDX.i725 = bitcast %union.anon* %8204 to i64*
  %8205 = load i64, i64* %RDX.i725
  %8206 = load i64, i64* %PC.i724
  %8207 = add i64 %8206, 4
  store i64 %8207, i64* %PC.i724
  %8208 = sext i64 %8205 to i128
  %8209 = and i128 %8208, -18446744073709551616
  %8210 = zext i64 %8205 to i128
  %8211 = or i128 %8209, %8210
  %8212 = mul i128 12, %8211
  %8213 = trunc i128 %8212 to i64
  store i64 %8213, i64* %RDX.i725, align 8
  %8214 = sext i64 %8213 to i128
  %8215 = icmp ne i128 %8214, %8212
  %8216 = zext i1 %8215 to i8
  %8217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8216, i8* %8217, align 1
  %8218 = trunc i128 %8212 to i32
  %8219 = and i32 %8218, 255
  %8220 = call i32 @llvm.ctpop.i32(i32 %8219)
  %8221 = trunc i32 %8220 to i8
  %8222 = and i8 %8221, 1
  %8223 = xor i8 %8222, 1
  %8224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8223, i8* %8224, align 1
  %8225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8225, align 1
  %8226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8226, align 1
  %8227 = lshr i64 %8213, 63
  %8228 = trunc i64 %8227 to i8
  %8229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8228, i8* %8229, align 1
  %8230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8216, i8* %8230, align 1
  store %struct.Memory* %loadMem_4ae238, %struct.Memory** %MEMORY
  %loadMem_4ae23c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8232 = getelementptr inbounds %struct.GPR, %struct.GPR* %8231, i32 0, i32 33
  %8233 = getelementptr inbounds %struct.Reg, %struct.Reg* %8232, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %8233 to i64*
  %8234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8235 = getelementptr inbounds %struct.GPR, %struct.GPR* %8234, i32 0, i32 5
  %8236 = getelementptr inbounds %struct.Reg, %struct.Reg* %8235, i32 0, i32 0
  %RCX.i722 = bitcast %union.anon* %8236 to i64*
  %8237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8238 = getelementptr inbounds %struct.GPR, %struct.GPR* %8237, i32 0, i32 7
  %8239 = getelementptr inbounds %struct.Reg, %struct.Reg* %8238, i32 0, i32 0
  %RDX.i723 = bitcast %union.anon* %8239 to i64*
  %8240 = load i64, i64* %RCX.i722
  %8241 = load i64, i64* %RDX.i723
  %8242 = load i64, i64* %PC.i721
  %8243 = add i64 %8242, 3
  store i64 %8243, i64* %PC.i721
  %8244 = add i64 %8241, %8240
  store i64 %8244, i64* %RCX.i722, align 8
  %8245 = icmp ult i64 %8244, %8240
  %8246 = icmp ult i64 %8244, %8241
  %8247 = or i1 %8245, %8246
  %8248 = zext i1 %8247 to i8
  %8249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8248, i8* %8249, align 1
  %8250 = trunc i64 %8244 to i32
  %8251 = and i32 %8250, 255
  %8252 = call i32 @llvm.ctpop.i32(i32 %8251)
  %8253 = trunc i32 %8252 to i8
  %8254 = and i8 %8253, 1
  %8255 = xor i8 %8254, 1
  %8256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8255, i8* %8256, align 1
  %8257 = xor i64 %8241, %8240
  %8258 = xor i64 %8257, %8244
  %8259 = lshr i64 %8258, 4
  %8260 = trunc i64 %8259 to i8
  %8261 = and i8 %8260, 1
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8261, i8* %8262, align 1
  %8263 = icmp eq i64 %8244, 0
  %8264 = zext i1 %8263 to i8
  %8265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8264, i8* %8265, align 1
  %8266 = lshr i64 %8244, 63
  %8267 = trunc i64 %8266 to i8
  %8268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8267, i8* %8268, align 1
  %8269 = lshr i64 %8240, 63
  %8270 = lshr i64 %8241, 63
  %8271 = xor i64 %8266, %8269
  %8272 = xor i64 %8266, %8270
  %8273 = add i64 %8271, %8272
  %8274 = icmp eq i64 %8273, 2
  %8275 = zext i1 %8274 to i8
  %8276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8275, i8* %8276, align 1
  store %struct.Memory* %loadMem_4ae23c, %struct.Memory** %MEMORY
  %loadMem_4ae23f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8278 = getelementptr inbounds %struct.GPR, %struct.GPR* %8277, i32 0, i32 33
  %8279 = getelementptr inbounds %struct.Reg, %struct.Reg* %8278, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %8279 to i64*
  %8280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8281 = getelementptr inbounds %struct.GPR, %struct.GPR* %8280, i32 0, i32 5
  %8282 = getelementptr inbounds %struct.Reg, %struct.Reg* %8281, i32 0, i32 0
  %RCX.i719 = bitcast %union.anon* %8282 to i64*
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8284 = getelementptr inbounds %struct.GPR, %struct.GPR* %8283, i32 0, i32 11
  %8285 = getelementptr inbounds %struct.Reg, %struct.Reg* %8284, i32 0, i32 0
  %RDI.i720 = bitcast %union.anon* %8285 to i64*
  %8286 = load i64, i64* %RDI.i720
  %8287 = load i64, i64* %RCX.i719
  %8288 = load i64, i64* %PC.i718
  %8289 = add i64 %8288, 3
  store i64 %8289, i64* %PC.i718
  %8290 = inttoptr i64 %8287 to i32*
  %8291 = load i32, i32* %8290
  %8292 = shl i64 %8286, 32
  %8293 = ashr exact i64 %8292, 32
  %8294 = sext i32 %8291 to i64
  %8295 = mul i64 %8294, %8293
  %8296 = trunc i64 %8295 to i32
  %8297 = and i64 %8295, 4294967295
  store i64 %8297, i64* %RDI.i720, align 8
  %8298 = shl i64 %8295, 32
  %8299 = ashr exact i64 %8298, 32
  %8300 = icmp ne i64 %8299, %8295
  %8301 = zext i1 %8300 to i8
  %8302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8301, i8* %8302, align 1
  %8303 = and i32 %8296, 255
  %8304 = call i32 @llvm.ctpop.i32(i32 %8303)
  %8305 = trunc i32 %8304 to i8
  %8306 = and i8 %8305, 1
  %8307 = xor i8 %8306, 1
  %8308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8307, i8* %8308, align 1
  %8309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8309, align 1
  %8310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8310, align 1
  %8311 = lshr i32 %8296, 31
  %8312 = trunc i32 %8311 to i8
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8312, i8* %8313, align 1
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8301, i8* %8314, align 1
  store %struct.Memory* %loadMem_4ae23f, %struct.Memory** %MEMORY
  %loadMem_4ae242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8316 = getelementptr inbounds %struct.GPR, %struct.GPR* %8315, i32 0, i32 33
  %8317 = getelementptr inbounds %struct.Reg, %struct.Reg* %8316, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %8317 to i64*
  %8318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8319 = getelementptr inbounds %struct.GPR, %struct.GPR* %8318, i32 0, i32 11
  %8320 = getelementptr inbounds %struct.Reg, %struct.Reg* %8319, i32 0, i32 0
  %RDI.i717 = bitcast %union.anon* %8320 to i64*
  %8321 = load i64, i64* %RDI.i717
  %8322 = load i64, i64* %PC.i716
  %8323 = add i64 %8322, 7
  store i64 %8323, i64* %PC.i716
  %8324 = trunc i64 %8321 to i32
  %8325 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %8326 = add i32 %8325, %8324
  %8327 = zext i32 %8326 to i64
  store i64 %8327, i64* %RDI.i717, align 8
  %8328 = icmp ult i32 %8326, %8324
  %8329 = icmp ult i32 %8326, %8325
  %8330 = or i1 %8328, %8329
  %8331 = zext i1 %8330 to i8
  %8332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8331, i8* %8332, align 1
  %8333 = and i32 %8326, 255
  %8334 = call i32 @llvm.ctpop.i32(i32 %8333)
  %8335 = trunc i32 %8334 to i8
  %8336 = and i8 %8335, 1
  %8337 = xor i8 %8336, 1
  %8338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8337, i8* %8338, align 1
  %8339 = xor i32 %8325, %8324
  %8340 = xor i32 %8339, %8326
  %8341 = lshr i32 %8340, 4
  %8342 = trunc i32 %8341 to i8
  %8343 = and i8 %8342, 1
  %8344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8343, i8* %8344, align 1
  %8345 = icmp eq i32 %8326, 0
  %8346 = zext i1 %8345 to i8
  %8347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8346, i8* %8347, align 1
  %8348 = lshr i32 %8326, 31
  %8349 = trunc i32 %8348 to i8
  %8350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8349, i8* %8350, align 1
  %8351 = lshr i32 %8324, 31
  %8352 = lshr i32 %8325, 31
  %8353 = xor i32 %8348, %8351
  %8354 = xor i32 %8348, %8352
  %8355 = add i32 %8353, %8354
  %8356 = icmp eq i32 %8355, 2
  %8357 = zext i1 %8356 to i8
  %8358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8357, i8* %8358, align 1
  store %struct.Memory* %loadMem_4ae242, %struct.Memory** %MEMORY
  %loadMem_4ae249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8360 = getelementptr inbounds %struct.GPR, %struct.GPR* %8359, i32 0, i32 33
  %8361 = getelementptr inbounds %struct.Reg, %struct.Reg* %8360, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %8361 to i64*
  %8362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8363 = getelementptr inbounds %struct.GPR, %struct.GPR* %8362, i32 0, i32 5
  %8364 = getelementptr inbounds %struct.Reg, %struct.Reg* %8363, i32 0, i32 0
  %RCX.i715 = bitcast %union.anon* %8364 to i64*
  %8365 = load i64, i64* %PC.i714
  %8366 = add i64 %8365, 7
  store i64 %8366, i64* %PC.i714
  %8367 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %8368 = zext i32 %8367 to i64
  store i64 %8368, i64* %RCX.i715, align 8
  store %struct.Memory* %loadMem_4ae249, %struct.Memory** %MEMORY
  %loadMem_4ae250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8370 = getelementptr inbounds %struct.GPR, %struct.GPR* %8369, i32 0, i32 33
  %8371 = getelementptr inbounds %struct.Reg, %struct.Reg* %8370, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %8371 to i64*
  %8372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8373 = getelementptr inbounds %struct.GPR, %struct.GPR* %8372, i32 0, i32 5
  %8374 = getelementptr inbounds %struct.Reg, %struct.Reg* %8373, i32 0, i32 0
  %8375 = bitcast %union.anon* %8374 to %struct.anon.2*
  %CL.i711 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8375, i32 0, i32 0
  %8376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8377 = getelementptr inbounds %struct.GPR, %struct.GPR* %8376, i32 0, i32 11
  %8378 = getelementptr inbounds %struct.Reg, %struct.Reg* %8377, i32 0, i32 0
  %RDI.i712 = bitcast %union.anon* %8378 to i64*
  %8379 = load i64, i64* %RDI.i712
  %8380 = load i8, i8* %CL.i711
  %8381 = zext i8 %8380 to i64
  %8382 = load i64, i64* %PC.i710
  %8383 = add i64 %8382, 2
  store i64 %8383, i64* %PC.i710
  %8384 = trunc i64 %8381 to i5
  switch i5 %8384, label %8388 [
    i5 0, label %routine_sarl__cl___edi.exit713
    i5 1, label %8385
  ]

; <label>:8385:                                   ; preds = %block_4ae206
  %8386 = shl i64 %8379, 32
  %8387 = ashr i64 %8386, 33
  br label %8395

; <label>:8388:                                   ; preds = %block_4ae206
  %8389 = and i64 %8381, 31
  %8390 = add i64 %8389, -1
  %8391 = shl i64 %8379, 32
  %8392 = ashr exact i64 %8391, 32
  %8393 = ashr i64 %8392, %8390
  %8394 = lshr i64 %8393, 1
  br label %8395

; <label>:8395:                                   ; preds = %8388, %8385
  %8396 = phi i64 [ %8394, %8388 ], [ %8387, %8385 ]
  %8397 = phi i64 [ %8393, %8388 ], [ %8379, %8385 ]
  %8398 = trunc i64 %8397 to i8
  %8399 = and i8 %8398, 1
  %8400 = trunc i64 %8396 to i32
  %8401 = and i64 %8396, 4294967295
  store i64 %8401, i64* %RDI.i712, align 8
  %8402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8399, i8* %8402, align 1
  %8403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8404 = and i32 %8400, 255
  %8405 = call i32 @llvm.ctpop.i32(i32 %8404)
  %8406 = trunc i32 %8405 to i8
  %8407 = and i8 %8406, 1
  %8408 = xor i8 %8407, 1
  store i8 %8408, i8* %8403, align 1
  %8409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8409, align 1
  %8410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8411 = icmp eq i32 %8400, 0
  %8412 = zext i1 %8411 to i8
  store i8 %8412, i8* %8410, align 1
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8414 = lshr i32 %8400, 31
  %8415 = trunc i32 %8414 to i8
  store i8 %8415, i8* %8413, align 1
  %8416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8416, align 1
  br label %routine_sarl__cl___edi.exit713

routine_sarl__cl___edi.exit713:                   ; preds = %block_4ae206, %8395
  store %struct.Memory* %loadMem_4ae250, %struct.Memory** %MEMORY
  %loadMem_4ae252 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8418 = getelementptr inbounds %struct.GPR, %struct.GPR* %8417, i32 0, i32 33
  %8419 = getelementptr inbounds %struct.Reg, %struct.Reg* %8418, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %8419 to i64*
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8421 = getelementptr inbounds %struct.GPR, %struct.GPR* %8420, i32 0, i32 7
  %8422 = getelementptr inbounds %struct.Reg, %struct.Reg* %8421, i32 0, i32 0
  %RDX.i708 = bitcast %union.anon* %8422 to i64*
  %8423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8424 = getelementptr inbounds %struct.GPR, %struct.GPR* %8423, i32 0, i32 15
  %8425 = getelementptr inbounds %struct.Reg, %struct.Reg* %8424, i32 0, i32 0
  %RBP.i709 = bitcast %union.anon* %8425 to i64*
  %8426 = load i64, i64* %RBP.i709
  %8427 = sub i64 %8426, 932
  %8428 = load i64, i64* %PC.i707
  %8429 = add i64 %8428, 7
  store i64 %8429, i64* %PC.i707
  %8430 = inttoptr i64 %8427 to i32*
  %8431 = load i32, i32* %8430
  %8432 = sext i32 %8431 to i64
  store i64 %8432, i64* %RDX.i708, align 8
  store %struct.Memory* %loadMem_4ae252, %struct.Memory** %MEMORY
  %loadMem_4ae259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8434 = getelementptr inbounds %struct.GPR, %struct.GPR* %8433, i32 0, i32 33
  %8435 = getelementptr inbounds %struct.Reg, %struct.Reg* %8434, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %8435 to i64*
  %8436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8437 = getelementptr inbounds %struct.GPR, %struct.GPR* %8436, i32 0, i32 7
  %8438 = getelementptr inbounds %struct.Reg, %struct.Reg* %8437, i32 0, i32 0
  %RDX.i706 = bitcast %union.anon* %8438 to i64*
  %8439 = load i64, i64* %RDX.i706
  %8440 = load i64, i64* %PC.i705
  %8441 = add i64 %8440, 7
  store i64 %8441, i64* %PC.i705
  %8442 = sext i64 %8439 to i128
  %8443 = and i128 %8442, -18446744073709551616
  %8444 = zext i64 %8439 to i128
  %8445 = or i128 %8443, %8444
  %8446 = mul i128 180, %8445
  %8447 = trunc i128 %8446 to i64
  store i64 %8447, i64* %RDX.i706, align 8
  %8448 = sext i64 %8447 to i128
  %8449 = icmp ne i128 %8448, %8446
  %8450 = zext i1 %8449 to i8
  %8451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8450, i8* %8451, align 1
  %8452 = trunc i128 %8446 to i32
  %8453 = and i32 %8452, 255
  %8454 = call i32 @llvm.ctpop.i32(i32 %8453)
  %8455 = trunc i32 %8454 to i8
  %8456 = and i8 %8455, 1
  %8457 = xor i8 %8456, 1
  %8458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8457, i8* %8458, align 1
  %8459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8459, align 1
  %8460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8460, align 1
  %8461 = lshr i64 %8447, 63
  %8462 = trunc i64 %8461 to i8
  %8463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8462, i8* %8463, align 1
  %8464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8450, i8* %8464, align 1
  store %struct.Memory* %loadMem_4ae259, %struct.Memory** %MEMORY
  %loadMem_4ae260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8466 = getelementptr inbounds %struct.GPR, %struct.GPR* %8465, i32 0, i32 33
  %8467 = getelementptr inbounds %struct.Reg, %struct.Reg* %8466, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %8467 to i64*
  %8468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8469 = getelementptr inbounds %struct.GPR, %struct.GPR* %8468, i32 0, i32 1
  %8470 = getelementptr inbounds %struct.Reg, %struct.Reg* %8469, i32 0, i32 0
  %RAX.i703 = bitcast %union.anon* %8470 to i64*
  %8471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8472 = getelementptr inbounds %struct.GPR, %struct.GPR* %8471, i32 0, i32 7
  %8473 = getelementptr inbounds %struct.Reg, %struct.Reg* %8472, i32 0, i32 0
  %RDX.i704 = bitcast %union.anon* %8473 to i64*
  %8474 = load i64, i64* %RAX.i703
  %8475 = load i64, i64* %RDX.i704
  %8476 = load i64, i64* %PC.i702
  %8477 = add i64 %8476, 3
  store i64 %8477, i64* %PC.i702
  %8478 = add i64 %8475, %8474
  store i64 %8478, i64* %RAX.i703, align 8
  %8479 = icmp ult i64 %8478, %8474
  %8480 = icmp ult i64 %8478, %8475
  %8481 = or i1 %8479, %8480
  %8482 = zext i1 %8481 to i8
  %8483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8482, i8* %8483, align 1
  %8484 = trunc i64 %8478 to i32
  %8485 = and i32 %8484, 255
  %8486 = call i32 @llvm.ctpop.i32(i32 %8485)
  %8487 = trunc i32 %8486 to i8
  %8488 = and i8 %8487, 1
  %8489 = xor i8 %8488, 1
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8489, i8* %8490, align 1
  %8491 = xor i64 %8475, %8474
  %8492 = xor i64 %8491, %8478
  %8493 = lshr i64 %8492, 4
  %8494 = trunc i64 %8493 to i8
  %8495 = and i8 %8494, 1
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8495, i8* %8496, align 1
  %8497 = icmp eq i64 %8478, 0
  %8498 = zext i1 %8497 to i8
  %8499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8498, i8* %8499, align 1
  %8500 = lshr i64 %8478, 63
  %8501 = trunc i64 %8500 to i8
  %8502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8501, i8* %8502, align 1
  %8503 = lshr i64 %8474, 63
  %8504 = lshr i64 %8475, 63
  %8505 = xor i64 %8500, %8503
  %8506 = xor i64 %8500, %8504
  %8507 = add i64 %8505, %8506
  %8508 = icmp eq i64 %8507, 2
  %8509 = zext i1 %8508 to i8
  %8510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8509, i8* %8510, align 1
  store %struct.Memory* %loadMem_4ae260, %struct.Memory** %MEMORY
  %loadMem_4ae263 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8512 = getelementptr inbounds %struct.GPR, %struct.GPR* %8511, i32 0, i32 33
  %8513 = getelementptr inbounds %struct.Reg, %struct.Reg* %8512, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %8513 to i64*
  %8514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8515 = getelementptr inbounds %struct.GPR, %struct.GPR* %8514, i32 0, i32 7
  %8516 = getelementptr inbounds %struct.Reg, %struct.Reg* %8515, i32 0, i32 0
  %RDX.i700 = bitcast %union.anon* %8516 to i64*
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8518 = getelementptr inbounds %struct.GPR, %struct.GPR* %8517, i32 0, i32 15
  %8519 = getelementptr inbounds %struct.Reg, %struct.Reg* %8518, i32 0, i32 0
  %RBP.i701 = bitcast %union.anon* %8519 to i64*
  %8520 = load i64, i64* %RBP.i701
  %8521 = sub i64 %8520, 16
  %8522 = load i64, i64* %PC.i699
  %8523 = add i64 %8522, 4
  store i64 %8523, i64* %PC.i699
  %8524 = inttoptr i64 %8521 to i32*
  %8525 = load i32, i32* %8524
  %8526 = sext i32 %8525 to i64
  store i64 %8526, i64* %RDX.i700, align 8
  store %struct.Memory* %loadMem_4ae263, %struct.Memory** %MEMORY
  %loadMem_4ae267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8528 = getelementptr inbounds %struct.GPR, %struct.GPR* %8527, i32 0, i32 33
  %8529 = getelementptr inbounds %struct.Reg, %struct.Reg* %8528, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %8529 to i64*
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8531 = getelementptr inbounds %struct.GPR, %struct.GPR* %8530, i32 0, i32 7
  %8532 = getelementptr inbounds %struct.Reg, %struct.Reg* %8531, i32 0, i32 0
  %RDX.i698 = bitcast %union.anon* %8532 to i64*
  %8533 = load i64, i64* %RDX.i698
  %8534 = load i64, i64* %PC.i697
  %8535 = add i64 %8534, 4
  store i64 %8535, i64* %PC.i697
  %8536 = sext i64 %8533 to i128
  %8537 = and i128 %8536, -18446744073709551616
  %8538 = zext i64 %8533 to i128
  %8539 = or i128 %8537, %8538
  %8540 = mul i128 12, %8539
  %8541 = trunc i128 %8540 to i64
  store i64 %8541, i64* %RDX.i698, align 8
  %8542 = sext i64 %8541 to i128
  %8543 = icmp ne i128 %8542, %8540
  %8544 = zext i1 %8543 to i8
  %8545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8544, i8* %8545, align 1
  %8546 = trunc i128 %8540 to i32
  %8547 = and i32 %8546, 255
  %8548 = call i32 @llvm.ctpop.i32(i32 %8547)
  %8549 = trunc i32 %8548 to i8
  %8550 = and i8 %8549, 1
  %8551 = xor i8 %8550, 1
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8551, i8* %8552, align 1
  %8553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8553, align 1
  %8554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8554, align 1
  %8555 = lshr i64 %8541, 63
  %8556 = trunc i64 %8555 to i8
  %8557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8556, i8* %8557, align 1
  %8558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8544, i8* %8558, align 1
  store %struct.Memory* %loadMem_4ae267, %struct.Memory** %MEMORY
  %loadMem_4ae26b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8560 = getelementptr inbounds %struct.GPR, %struct.GPR* %8559, i32 0, i32 33
  %8561 = getelementptr inbounds %struct.Reg, %struct.Reg* %8560, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %8561 to i64*
  %8562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8563 = getelementptr inbounds %struct.GPR, %struct.GPR* %8562, i32 0, i32 1
  %8564 = getelementptr inbounds %struct.Reg, %struct.Reg* %8563, i32 0, i32 0
  %RAX.i695 = bitcast %union.anon* %8564 to i64*
  %8565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8566 = getelementptr inbounds %struct.GPR, %struct.GPR* %8565, i32 0, i32 7
  %8567 = getelementptr inbounds %struct.Reg, %struct.Reg* %8566, i32 0, i32 0
  %RDX.i696 = bitcast %union.anon* %8567 to i64*
  %8568 = load i64, i64* %RAX.i695
  %8569 = load i64, i64* %RDX.i696
  %8570 = load i64, i64* %PC.i694
  %8571 = add i64 %8570, 3
  store i64 %8571, i64* %PC.i694
  %8572 = add i64 %8569, %8568
  store i64 %8572, i64* %RAX.i695, align 8
  %8573 = icmp ult i64 %8572, %8568
  %8574 = icmp ult i64 %8572, %8569
  %8575 = or i1 %8573, %8574
  %8576 = zext i1 %8575 to i8
  %8577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8576, i8* %8577, align 1
  %8578 = trunc i64 %8572 to i32
  %8579 = and i32 %8578, 255
  %8580 = call i32 @llvm.ctpop.i32(i32 %8579)
  %8581 = trunc i32 %8580 to i8
  %8582 = and i8 %8581, 1
  %8583 = xor i8 %8582, 1
  %8584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8583, i8* %8584, align 1
  %8585 = xor i64 %8569, %8568
  %8586 = xor i64 %8585, %8572
  %8587 = lshr i64 %8586, 4
  %8588 = trunc i64 %8587 to i8
  %8589 = and i8 %8588, 1
  %8590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8589, i8* %8590, align 1
  %8591 = icmp eq i64 %8572, 0
  %8592 = zext i1 %8591 to i8
  %8593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8592, i8* %8593, align 1
  %8594 = lshr i64 %8572, 63
  %8595 = trunc i64 %8594 to i8
  %8596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8595, i8* %8596, align 1
  %8597 = lshr i64 %8568, 63
  %8598 = lshr i64 %8569, 63
  %8599 = xor i64 %8594, %8597
  %8600 = xor i64 %8594, %8598
  %8601 = add i64 %8599, %8600
  %8602 = icmp eq i64 %8601, 2
  %8603 = zext i1 %8602 to i8
  %8604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8603, i8* %8604, align 1
  store %struct.Memory* %loadMem_4ae26b, %struct.Memory** %MEMORY
  %loadMem_4ae26e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8606 = getelementptr inbounds %struct.GPR, %struct.GPR* %8605, i32 0, i32 33
  %8607 = getelementptr inbounds %struct.Reg, %struct.Reg* %8606, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %8607 to i64*
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8609 = getelementptr inbounds %struct.GPR, %struct.GPR* %8608, i32 0, i32 1
  %8610 = getelementptr inbounds %struct.Reg, %struct.Reg* %8609, i32 0, i32 0
  %RAX.i692 = bitcast %union.anon* %8610 to i64*
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8612 = getelementptr inbounds %struct.GPR, %struct.GPR* %8611, i32 0, i32 11
  %8613 = getelementptr inbounds %struct.Reg, %struct.Reg* %8612, i32 0, i32 0
  %RDI.i693 = bitcast %union.anon* %8613 to i64*
  %8614 = load i64, i64* %RDI.i693
  %8615 = load i64, i64* %RAX.i692
  %8616 = load i64, i64* %PC.i691
  %8617 = add i64 %8616, 2
  store i64 %8617, i64* %PC.i691
  %8618 = trunc i64 %8614 to i32
  %8619 = inttoptr i64 %8615 to i32*
  %8620 = load i32, i32* %8619
  %8621 = add i32 %8620, %8618
  %8622 = zext i32 %8621 to i64
  store i64 %8622, i64* %RDI.i693, align 8
  %8623 = icmp ult i32 %8621, %8618
  %8624 = icmp ult i32 %8621, %8620
  %8625 = or i1 %8623, %8624
  %8626 = zext i1 %8625 to i8
  %8627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8626, i8* %8627, align 1
  %8628 = and i32 %8621, 255
  %8629 = call i32 @llvm.ctpop.i32(i32 %8628)
  %8630 = trunc i32 %8629 to i8
  %8631 = and i8 %8630, 1
  %8632 = xor i8 %8631, 1
  %8633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8632, i8* %8633, align 1
  %8634 = xor i32 %8620, %8618
  %8635 = xor i32 %8634, %8621
  %8636 = lshr i32 %8635, 4
  %8637 = trunc i32 %8636 to i8
  %8638 = and i8 %8637, 1
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8638, i8* %8639, align 1
  %8640 = icmp eq i32 %8621, 0
  %8641 = zext i1 %8640 to i8
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8641, i8* %8642, align 1
  %8643 = lshr i32 %8621, 31
  %8644 = trunc i32 %8643 to i8
  %8645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8644, i8* %8645, align 1
  %8646 = lshr i32 %8618, 31
  %8647 = lshr i32 %8620, 31
  %8648 = xor i32 %8643, %8646
  %8649 = xor i32 %8643, %8647
  %8650 = add i32 %8648, %8649
  %8651 = icmp eq i32 %8650, 2
  %8652 = zext i1 %8651 to i8
  %8653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8652, i8* %8653, align 1
  store %struct.Memory* %loadMem_4ae26e, %struct.Memory** %MEMORY
  %loadMem_4ae270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8655 = getelementptr inbounds %struct.GPR, %struct.GPR* %8654, i32 0, i32 33
  %8656 = getelementptr inbounds %struct.Reg, %struct.Reg* %8655, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %8656 to i64*
  %8657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8658 = getelementptr inbounds %struct.GPR, %struct.GPR* %8657, i32 0, i32 11
  %8659 = getelementptr inbounds %struct.Reg, %struct.Reg* %8658, i32 0, i32 0
  %EDI.i690 = bitcast %union.anon* %8659 to i32*
  %8660 = load i32, i32* %EDI.i690
  %8661 = zext i32 %8660 to i64
  %8662 = load i64, i64* %PC.i689
  %8663 = add i64 %8662, 3
  store i64 %8663, i64* %PC.i689
  %8664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8664, align 1
  %8665 = and i32 %8660, 255
  %8666 = call i32 @llvm.ctpop.i32(i32 %8665)
  %8667 = trunc i32 %8666 to i8
  %8668 = and i8 %8667, 1
  %8669 = xor i8 %8668, 1
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8669, i8* %8670, align 1
  %8671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8671, align 1
  %8672 = icmp eq i32 %8660, 0
  %8673 = zext i1 %8672 to i8
  %8674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8673, i8* %8674, align 1
  %8675 = lshr i32 %8660, 31
  %8676 = trunc i32 %8675 to i8
  %8677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8676, i8* %8677, align 1
  %8678 = lshr i32 %8660, 31
  %8679 = xor i32 %8675, %8678
  %8680 = add i32 %8679, %8678
  %8681 = icmp eq i32 %8680, 2
  %8682 = zext i1 %8681 to i8
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8682, i8* %8683, align 1
  store %struct.Memory* %loadMem_4ae270, %struct.Memory** %MEMORY
  %loadMem_4ae273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8685 = getelementptr inbounds %struct.GPR, %struct.GPR* %8684, i32 0, i32 33
  %8686 = getelementptr inbounds %struct.Reg, %struct.Reg* %8685, i32 0, i32 0
  %PC.i688 = bitcast %union.anon* %8686 to i64*
  %8687 = load i64, i64* %PC.i688
  %8688 = add i64 %8687, 19
  %8689 = load i64, i64* %PC.i688
  %8690 = add i64 %8689, 6
  %8691 = load i64, i64* %PC.i688
  %8692 = add i64 %8691, 6
  store i64 %8692, i64* %PC.i688
  %8693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8694 = load i8, i8* %8693, align 1
  %8695 = icmp ne i8 %8694, 0
  %8696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8697 = load i8, i8* %8696, align 1
  %8698 = icmp ne i8 %8697, 0
  %8699 = xor i1 %8695, %8698
  %8700 = xor i1 %8699, true
  %8701 = zext i1 %8700 to i8
  store i8 %8701, i8* %BRANCH_TAKEN, align 1
  %8702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8703 = select i1 %8699, i64 %8690, i64 %8688
  store i64 %8703, i64* %8702, align 8
  store %struct.Memory* %loadMem_4ae273, %struct.Memory** %MEMORY
  %loadBr_4ae273 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae273 = icmp eq i8 %loadBr_4ae273, 1
  br i1 %cmpBr_4ae273, label %block_.L_4ae286, label %block_4ae279

block_4ae279:                                     ; preds = %routine_sarl__cl___edi.exit713
  %loadMem_4ae279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8705 = getelementptr inbounds %struct.GPR, %struct.GPR* %8704, i32 0, i32 33
  %8706 = getelementptr inbounds %struct.Reg, %struct.Reg* %8705, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %8706 to i64*
  %8707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8708 = getelementptr inbounds %struct.GPR, %struct.GPR* %8707, i32 0, i32 1
  %8709 = getelementptr inbounds %struct.Reg, %struct.Reg* %8708, i32 0, i32 0
  %EAX.i686 = bitcast %union.anon* %8709 to i32*
  %8710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8711 = getelementptr inbounds %struct.GPR, %struct.GPR* %8710, i32 0, i32 1
  %8712 = getelementptr inbounds %struct.Reg, %struct.Reg* %8711, i32 0, i32 0
  %RAX.i687 = bitcast %union.anon* %8712 to i64*
  %8713 = load i64, i64* %RAX.i687
  %8714 = load i32, i32* %EAX.i686
  %8715 = zext i32 %8714 to i64
  %8716 = load i64, i64* %PC.i685
  %8717 = add i64 %8716, 2
  store i64 %8717, i64* %PC.i685
  %8718 = xor i64 %8715, %8713
  %8719 = trunc i64 %8718 to i32
  %8720 = and i64 %8718, 4294967295
  store i64 %8720, i64* %RAX.i687, align 8
  %8721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8721, align 1
  %8722 = and i32 %8719, 255
  %8723 = call i32 @llvm.ctpop.i32(i32 %8722)
  %8724 = trunc i32 %8723 to i8
  %8725 = and i8 %8724, 1
  %8726 = xor i8 %8725, 1
  %8727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8726, i8* %8727, align 1
  %8728 = icmp eq i32 %8719, 0
  %8729 = zext i1 %8728 to i8
  %8730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8729, i8* %8730, align 1
  %8731 = lshr i32 %8719, 31
  %8732 = trunc i32 %8731 to i8
  %8733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8732, i8* %8733, align 1
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8734, align 1
  %8735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8735, align 1
  store %struct.Memory* %loadMem_4ae279, %struct.Memory** %MEMORY
  %loadMem_4ae27b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8737 = getelementptr inbounds %struct.GPR, %struct.GPR* %8736, i32 0, i32 33
  %8738 = getelementptr inbounds %struct.Reg, %struct.Reg* %8737, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %8738 to i64*
  %8739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8740 = getelementptr inbounds %struct.GPR, %struct.GPR* %8739, i32 0, i32 1
  %8741 = getelementptr inbounds %struct.Reg, %struct.Reg* %8740, i32 0, i32 0
  %EAX.i683 = bitcast %union.anon* %8741 to i32*
  %8742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8743 = getelementptr inbounds %struct.GPR, %struct.GPR* %8742, i32 0, i32 15
  %8744 = getelementptr inbounds %struct.Reg, %struct.Reg* %8743, i32 0, i32 0
  %RBP.i684 = bitcast %union.anon* %8744 to i64*
  %8745 = load i64, i64* %RBP.i684
  %8746 = sub i64 %8745, 956
  %8747 = load i32, i32* %EAX.i683
  %8748 = zext i32 %8747 to i64
  %8749 = load i64, i64* %PC.i682
  %8750 = add i64 %8749, 6
  store i64 %8750, i64* %PC.i682
  %8751 = inttoptr i64 %8746 to i32*
  store i32 %8747, i32* %8751
  store %struct.Memory* %loadMem_4ae27b, %struct.Memory** %MEMORY
  %loadMem_4ae281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8753 = getelementptr inbounds %struct.GPR, %struct.GPR* %8752, i32 0, i32 33
  %8754 = getelementptr inbounds %struct.Reg, %struct.Reg* %8753, i32 0, i32 0
  %PC.i681 = bitcast %union.anon* %8754 to i64*
  %8755 = load i64, i64* %PC.i681
  %8756 = add i64 %8755, 280
  %8757 = load i64, i64* %PC.i681
  %8758 = add i64 %8757, 5
  store i64 %8758, i64* %PC.i681
  %8759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8756, i64* %8759, align 8
  store %struct.Memory* %loadMem_4ae281, %struct.Memory** %MEMORY
  br label %block_.L_4ae399

block_.L_4ae286:                                  ; preds = %routine_sarl__cl___edi.exit713
  %loadMem_4ae286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8761 = getelementptr inbounds %struct.GPR, %struct.GPR* %8760, i32 0, i32 33
  %8762 = getelementptr inbounds %struct.Reg, %struct.Reg* %8761, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %8762 to i64*
  %8763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8764 = getelementptr inbounds %struct.GPR, %struct.GPR* %8763, i32 0, i32 1
  %8765 = getelementptr inbounds %struct.Reg, %struct.Reg* %8764, i32 0, i32 0
  %RAX.i679 = bitcast %union.anon* %8765 to i64*
  %8766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8767 = getelementptr inbounds %struct.GPR, %struct.GPR* %8766, i32 0, i32 15
  %8768 = getelementptr inbounds %struct.Reg, %struct.Reg* %8767, i32 0, i32 0
  %RBP.i680 = bitcast %union.anon* %8768 to i64*
  %8769 = load i64, i64* %RBP.i680
  %8770 = sub i64 %8769, 928
  %8771 = load i64, i64* %PC.i678
  %8772 = add i64 %8771, 7
  store i64 %8772, i64* %PC.i678
  store i64 %8770, i64* %RAX.i679, align 8
  store %struct.Memory* %loadMem_4ae286, %struct.Memory** %MEMORY
  %loadMem_4ae28d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8774 = getelementptr inbounds %struct.GPR, %struct.GPR* %8773, i32 0, i32 33
  %8775 = getelementptr inbounds %struct.Reg, %struct.Reg* %8774, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %8775 to i64*
  %8776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8777 = getelementptr inbounds %struct.GPR, %struct.GPR* %8776, i32 0, i32 5
  %8778 = getelementptr inbounds %struct.Reg, %struct.Reg* %8777, i32 0, i32 0
  %RCX.i676 = bitcast %union.anon* %8778 to i64*
  %8779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8780 = getelementptr inbounds %struct.GPR, %struct.GPR* %8779, i32 0, i32 15
  %8781 = getelementptr inbounds %struct.Reg, %struct.Reg* %8780, i32 0, i32 0
  %RBP.i677 = bitcast %union.anon* %8781 to i64*
  %8782 = load i64, i64* %RBP.i677
  %8783 = sub i64 %8782, 560
  %8784 = load i64, i64* %PC.i675
  %8785 = add i64 %8784, 7
  store i64 %8785, i64* %PC.i675
  store i64 %8783, i64* %RCX.i676, align 8
  store %struct.Memory* %loadMem_4ae28d, %struct.Memory** %MEMORY
  %loadMem_4ae294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8787 = getelementptr inbounds %struct.GPR, %struct.GPR* %8786, i32 0, i32 33
  %8788 = getelementptr inbounds %struct.Reg, %struct.Reg* %8787, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %8788 to i64*
  %8789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8790 = getelementptr inbounds %struct.GPR, %struct.GPR* %8789, i32 0, i32 7
  %8791 = getelementptr inbounds %struct.Reg, %struct.Reg* %8790, i32 0, i32 0
  %RDX.i673 = bitcast %union.anon* %8791 to i64*
  %8792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8793 = getelementptr inbounds %struct.GPR, %struct.GPR* %8792, i32 0, i32 15
  %8794 = getelementptr inbounds %struct.Reg, %struct.Reg* %8793, i32 0, i32 0
  %RBP.i674 = bitcast %union.anon* %8794 to i64*
  %8795 = load i64, i64* %RBP.i674
  %8796 = sub i64 %8795, 168
  %8797 = load i64, i64* %PC.i672
  %8798 = add i64 %8797, 7
  store i64 %8798, i64* %PC.i672
  %8799 = inttoptr i64 %8796 to i64*
  %8800 = load i64, i64* %8799
  store i64 %8800, i64* %RDX.i673, align 8
  store %struct.Memory* %loadMem_4ae294, %struct.Memory** %MEMORY
  %loadMem_4ae29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8802 = getelementptr inbounds %struct.GPR, %struct.GPR* %8801, i32 0, i32 33
  %8803 = getelementptr inbounds %struct.Reg, %struct.Reg* %8802, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %8803 to i64*
  %8804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8805 = getelementptr inbounds %struct.GPR, %struct.GPR* %8804, i32 0, i32 9
  %8806 = getelementptr inbounds %struct.Reg, %struct.Reg* %8805, i32 0, i32 0
  %RSI.i670 = bitcast %union.anon* %8806 to i64*
  %8807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8808 = getelementptr inbounds %struct.GPR, %struct.GPR* %8807, i32 0, i32 15
  %8809 = getelementptr inbounds %struct.Reg, %struct.Reg* %8808, i32 0, i32 0
  %RBP.i671 = bitcast %union.anon* %8809 to i64*
  %8810 = load i64, i64* %RBP.i671
  %8811 = sub i64 %8810, 8
  %8812 = load i64, i64* %PC.i669
  %8813 = add i64 %8812, 4
  store i64 %8813, i64* %PC.i669
  %8814 = inttoptr i64 %8811 to i32*
  %8815 = load i32, i32* %8814
  %8816 = sext i32 %8815 to i64
  store i64 %8816, i64* %RSI.i670, align 8
  store %struct.Memory* %loadMem_4ae29b, %struct.Memory** %MEMORY
  %loadMem_4ae29f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8818 = getelementptr inbounds %struct.GPR, %struct.GPR* %8817, i32 0, i32 33
  %8819 = getelementptr inbounds %struct.Reg, %struct.Reg* %8818, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %8819 to i64*
  %8820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8821 = getelementptr inbounds %struct.GPR, %struct.GPR* %8820, i32 0, i32 7
  %8822 = getelementptr inbounds %struct.Reg, %struct.Reg* %8821, i32 0, i32 0
  %RDX.i666 = bitcast %union.anon* %8822 to i64*
  %8823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8824 = getelementptr inbounds %struct.GPR, %struct.GPR* %8823, i32 0, i32 9
  %8825 = getelementptr inbounds %struct.Reg, %struct.Reg* %8824, i32 0, i32 0
  %RSI.i667 = bitcast %union.anon* %8825 to i64*
  %8826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8827 = getelementptr inbounds %struct.GPR, %struct.GPR* %8826, i32 0, i32 11
  %8828 = getelementptr inbounds %struct.Reg, %struct.Reg* %8827, i32 0, i32 0
  %RDI.i668 = bitcast %union.anon* %8828 to i64*
  %8829 = load i64, i64* %RDX.i666
  %8830 = load i64, i64* %RSI.i667
  %8831 = mul i64 %8830, 2
  %8832 = add i64 %8831, %8829
  %8833 = load i64, i64* %PC.i665
  %8834 = add i64 %8833, 4
  store i64 %8834, i64* %PC.i665
  %8835 = inttoptr i64 %8832 to i16*
  %8836 = load i16, i16* %8835
  %8837 = zext i16 %8836 to i64
  store i64 %8837, i64* %RDI.i668, align 8
  store %struct.Memory* %loadMem_4ae29f, %struct.Memory** %MEMORY
  %loadMem_4ae2a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8839 = getelementptr inbounds %struct.GPR, %struct.GPR* %8838, i32 0, i32 33
  %8840 = getelementptr inbounds %struct.Reg, %struct.Reg* %8839, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %8840 to i64*
  %8841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8842 = getelementptr inbounds %struct.GPR, %struct.GPR* %8841, i32 0, i32 7
  %8843 = getelementptr inbounds %struct.Reg, %struct.Reg* %8842, i32 0, i32 0
  %RDX.i663 = bitcast %union.anon* %8843 to i64*
  %8844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8845 = getelementptr inbounds %struct.GPR, %struct.GPR* %8844, i32 0, i32 15
  %8846 = getelementptr inbounds %struct.Reg, %struct.Reg* %8845, i32 0, i32 0
  %RBP.i664 = bitcast %union.anon* %8846 to i64*
  %8847 = load i64, i64* %RBP.i664
  %8848 = sub i64 %8847, 932
  %8849 = load i64, i64* %PC.i662
  %8850 = add i64 %8849, 7
  store i64 %8850, i64* %PC.i662
  %8851 = inttoptr i64 %8848 to i32*
  %8852 = load i32, i32* %8851
  %8853 = sext i32 %8852 to i64
  store i64 %8853, i64* %RDX.i663, align 8
  store %struct.Memory* %loadMem_4ae2a3, %struct.Memory** %MEMORY
  %loadMem_4ae2aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8855 = getelementptr inbounds %struct.GPR, %struct.GPR* %8854, i32 0, i32 33
  %8856 = getelementptr inbounds %struct.Reg, %struct.Reg* %8855, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %8856 to i64*
  %8857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8858 = getelementptr inbounds %struct.GPR, %struct.GPR* %8857, i32 0, i32 7
  %8859 = getelementptr inbounds %struct.Reg, %struct.Reg* %8858, i32 0, i32 0
  %RDX.i661 = bitcast %union.anon* %8859 to i64*
  %8860 = load i64, i64* %RDX.i661
  %8861 = load i64, i64* %PC.i660
  %8862 = add i64 %8861, 7
  store i64 %8862, i64* %PC.i660
  %8863 = sext i64 %8860 to i128
  %8864 = and i128 %8863, -18446744073709551616
  %8865 = zext i64 %8860 to i128
  %8866 = or i128 %8864, %8865
  %8867 = mul i128 180, %8866
  %8868 = trunc i128 %8867 to i64
  store i64 %8868, i64* %RDX.i661, align 8
  %8869 = sext i64 %8868 to i128
  %8870 = icmp ne i128 %8869, %8867
  %8871 = zext i1 %8870 to i8
  %8872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8871, i8* %8872, align 1
  %8873 = trunc i128 %8867 to i32
  %8874 = and i32 %8873, 255
  %8875 = call i32 @llvm.ctpop.i32(i32 %8874)
  %8876 = trunc i32 %8875 to i8
  %8877 = and i8 %8876, 1
  %8878 = xor i8 %8877, 1
  %8879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8878, i8* %8879, align 1
  %8880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8880, align 1
  %8881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8881, align 1
  %8882 = lshr i64 %8868, 63
  %8883 = trunc i64 %8882 to i8
  %8884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8883, i8* %8884, align 1
  %8885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8871, i8* %8885, align 1
  store %struct.Memory* %loadMem_4ae2aa, %struct.Memory** %MEMORY
  %loadMem_4ae2b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8887 = getelementptr inbounds %struct.GPR, %struct.GPR* %8886, i32 0, i32 33
  %8888 = getelementptr inbounds %struct.Reg, %struct.Reg* %8887, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %8888 to i64*
  %8889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8890 = getelementptr inbounds %struct.GPR, %struct.GPR* %8889, i32 0, i32 5
  %8891 = getelementptr inbounds %struct.Reg, %struct.Reg* %8890, i32 0, i32 0
  %RCX.i658 = bitcast %union.anon* %8891 to i64*
  %8892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8893 = getelementptr inbounds %struct.GPR, %struct.GPR* %8892, i32 0, i32 7
  %8894 = getelementptr inbounds %struct.Reg, %struct.Reg* %8893, i32 0, i32 0
  %RDX.i659 = bitcast %union.anon* %8894 to i64*
  %8895 = load i64, i64* %RCX.i658
  %8896 = load i64, i64* %RDX.i659
  %8897 = load i64, i64* %PC.i657
  %8898 = add i64 %8897, 3
  store i64 %8898, i64* %PC.i657
  %8899 = add i64 %8896, %8895
  store i64 %8899, i64* %RCX.i658, align 8
  %8900 = icmp ult i64 %8899, %8895
  %8901 = icmp ult i64 %8899, %8896
  %8902 = or i1 %8900, %8901
  %8903 = zext i1 %8902 to i8
  %8904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8903, i8* %8904, align 1
  %8905 = trunc i64 %8899 to i32
  %8906 = and i32 %8905, 255
  %8907 = call i32 @llvm.ctpop.i32(i32 %8906)
  %8908 = trunc i32 %8907 to i8
  %8909 = and i8 %8908, 1
  %8910 = xor i8 %8909, 1
  %8911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8910, i8* %8911, align 1
  %8912 = xor i64 %8896, %8895
  %8913 = xor i64 %8912, %8899
  %8914 = lshr i64 %8913, 4
  %8915 = trunc i64 %8914 to i8
  %8916 = and i8 %8915, 1
  %8917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8916, i8* %8917, align 1
  %8918 = icmp eq i64 %8899, 0
  %8919 = zext i1 %8918 to i8
  %8920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8919, i8* %8920, align 1
  %8921 = lshr i64 %8899, 63
  %8922 = trunc i64 %8921 to i8
  %8923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8922, i8* %8923, align 1
  %8924 = lshr i64 %8895, 63
  %8925 = lshr i64 %8896, 63
  %8926 = xor i64 %8921, %8924
  %8927 = xor i64 %8921, %8925
  %8928 = add i64 %8926, %8927
  %8929 = icmp eq i64 %8928, 2
  %8930 = zext i1 %8929 to i8
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8930, i8* %8931, align 1
  store %struct.Memory* %loadMem_4ae2b1, %struct.Memory** %MEMORY
  %loadMem_4ae2b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8933 = getelementptr inbounds %struct.GPR, %struct.GPR* %8932, i32 0, i32 33
  %8934 = getelementptr inbounds %struct.Reg, %struct.Reg* %8933, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %8934 to i64*
  %8935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8936 = getelementptr inbounds %struct.GPR, %struct.GPR* %8935, i32 0, i32 7
  %8937 = getelementptr inbounds %struct.Reg, %struct.Reg* %8936, i32 0, i32 0
  %RDX.i655 = bitcast %union.anon* %8937 to i64*
  %8938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8939 = getelementptr inbounds %struct.GPR, %struct.GPR* %8938, i32 0, i32 15
  %8940 = getelementptr inbounds %struct.Reg, %struct.Reg* %8939, i32 0, i32 0
  %RBP.i656 = bitcast %union.anon* %8940 to i64*
  %8941 = load i64, i64* %RBP.i656
  %8942 = sub i64 %8941, 16
  %8943 = load i64, i64* %PC.i654
  %8944 = add i64 %8943, 4
  store i64 %8944, i64* %PC.i654
  %8945 = inttoptr i64 %8942 to i32*
  %8946 = load i32, i32* %8945
  %8947 = sext i32 %8946 to i64
  store i64 %8947, i64* %RDX.i655, align 8
  store %struct.Memory* %loadMem_4ae2b4, %struct.Memory** %MEMORY
  %loadMem_4ae2b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8949 = getelementptr inbounds %struct.GPR, %struct.GPR* %8948, i32 0, i32 33
  %8950 = getelementptr inbounds %struct.Reg, %struct.Reg* %8949, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %8950 to i64*
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8952 = getelementptr inbounds %struct.GPR, %struct.GPR* %8951, i32 0, i32 7
  %8953 = getelementptr inbounds %struct.Reg, %struct.Reg* %8952, i32 0, i32 0
  %RDX.i653 = bitcast %union.anon* %8953 to i64*
  %8954 = load i64, i64* %RDX.i653
  %8955 = load i64, i64* %PC.i652
  %8956 = add i64 %8955, 4
  store i64 %8956, i64* %PC.i652
  %8957 = sext i64 %8954 to i128
  %8958 = and i128 %8957, -18446744073709551616
  %8959 = zext i64 %8954 to i128
  %8960 = or i128 %8958, %8959
  %8961 = mul i128 12, %8960
  %8962 = trunc i128 %8961 to i64
  store i64 %8962, i64* %RDX.i653, align 8
  %8963 = sext i64 %8962 to i128
  %8964 = icmp ne i128 %8963, %8961
  %8965 = zext i1 %8964 to i8
  %8966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8965, i8* %8966, align 1
  %8967 = trunc i128 %8961 to i32
  %8968 = and i32 %8967, 255
  %8969 = call i32 @llvm.ctpop.i32(i32 %8968)
  %8970 = trunc i32 %8969 to i8
  %8971 = and i8 %8970, 1
  %8972 = xor i8 %8971, 1
  %8973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8972, i8* %8973, align 1
  %8974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8974, align 1
  %8975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8975, align 1
  %8976 = lshr i64 %8962, 63
  %8977 = trunc i64 %8976 to i8
  %8978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8977, i8* %8978, align 1
  %8979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8965, i8* %8979, align 1
  store %struct.Memory* %loadMem_4ae2b8, %struct.Memory** %MEMORY
  %loadMem_4ae2bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8981 = getelementptr inbounds %struct.GPR, %struct.GPR* %8980, i32 0, i32 33
  %8982 = getelementptr inbounds %struct.Reg, %struct.Reg* %8981, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %8982 to i64*
  %8983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8984 = getelementptr inbounds %struct.GPR, %struct.GPR* %8983, i32 0, i32 5
  %8985 = getelementptr inbounds %struct.Reg, %struct.Reg* %8984, i32 0, i32 0
  %RCX.i650 = bitcast %union.anon* %8985 to i64*
  %8986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8987 = getelementptr inbounds %struct.GPR, %struct.GPR* %8986, i32 0, i32 7
  %8988 = getelementptr inbounds %struct.Reg, %struct.Reg* %8987, i32 0, i32 0
  %RDX.i651 = bitcast %union.anon* %8988 to i64*
  %8989 = load i64, i64* %RCX.i650
  %8990 = load i64, i64* %RDX.i651
  %8991 = load i64, i64* %PC.i649
  %8992 = add i64 %8991, 3
  store i64 %8992, i64* %PC.i649
  %8993 = add i64 %8990, %8989
  store i64 %8993, i64* %RCX.i650, align 8
  %8994 = icmp ult i64 %8993, %8989
  %8995 = icmp ult i64 %8993, %8990
  %8996 = or i1 %8994, %8995
  %8997 = zext i1 %8996 to i8
  %8998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8997, i8* %8998, align 1
  %8999 = trunc i64 %8993 to i32
  %9000 = and i32 %8999, 255
  %9001 = call i32 @llvm.ctpop.i32(i32 %9000)
  %9002 = trunc i32 %9001 to i8
  %9003 = and i8 %9002, 1
  %9004 = xor i8 %9003, 1
  %9005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9004, i8* %9005, align 1
  %9006 = xor i64 %8990, %8989
  %9007 = xor i64 %9006, %8993
  %9008 = lshr i64 %9007, 4
  %9009 = trunc i64 %9008 to i8
  %9010 = and i8 %9009, 1
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9010, i8* %9011, align 1
  %9012 = icmp eq i64 %8993, 0
  %9013 = zext i1 %9012 to i8
  %9014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9013, i8* %9014, align 1
  %9015 = lshr i64 %8993, 63
  %9016 = trunc i64 %9015 to i8
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9016, i8* %9017, align 1
  %9018 = lshr i64 %8989, 63
  %9019 = lshr i64 %8990, 63
  %9020 = xor i64 %9015, %9018
  %9021 = xor i64 %9015, %9019
  %9022 = add i64 %9020, %9021
  %9023 = icmp eq i64 %9022, 2
  %9024 = zext i1 %9023 to i8
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9024, i8* %9025, align 1
  store %struct.Memory* %loadMem_4ae2bc, %struct.Memory** %MEMORY
  %loadMem_4ae2bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9027 = getelementptr inbounds %struct.GPR, %struct.GPR* %9026, i32 0, i32 33
  %9028 = getelementptr inbounds %struct.Reg, %struct.Reg* %9027, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %9028 to i64*
  %9029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9030 = getelementptr inbounds %struct.GPR, %struct.GPR* %9029, i32 0, i32 5
  %9031 = getelementptr inbounds %struct.Reg, %struct.Reg* %9030, i32 0, i32 0
  %RCX.i647 = bitcast %union.anon* %9031 to i64*
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9033 = getelementptr inbounds %struct.GPR, %struct.GPR* %9032, i32 0, i32 11
  %9034 = getelementptr inbounds %struct.Reg, %struct.Reg* %9033, i32 0, i32 0
  %RDI.i648 = bitcast %union.anon* %9034 to i64*
  %9035 = load i64, i64* %RDI.i648
  %9036 = load i64, i64* %RCX.i647
  %9037 = load i64, i64* %PC.i646
  %9038 = add i64 %9037, 3
  store i64 %9038, i64* %PC.i646
  %9039 = inttoptr i64 %9036 to i32*
  %9040 = load i32, i32* %9039
  %9041 = shl i64 %9035, 32
  %9042 = ashr exact i64 %9041, 32
  %9043 = sext i32 %9040 to i64
  %9044 = mul i64 %9043, %9042
  %9045 = trunc i64 %9044 to i32
  %9046 = and i64 %9044, 4294967295
  store i64 %9046, i64* %RDI.i648, align 8
  %9047 = shl i64 %9044, 32
  %9048 = ashr exact i64 %9047, 32
  %9049 = icmp ne i64 %9048, %9044
  %9050 = zext i1 %9049 to i8
  %9051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9050, i8* %9051, align 1
  %9052 = and i32 %9045, 255
  %9053 = call i32 @llvm.ctpop.i32(i32 %9052)
  %9054 = trunc i32 %9053 to i8
  %9055 = and i8 %9054, 1
  %9056 = xor i8 %9055, 1
  %9057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9056, i8* %9057, align 1
  %9058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9058, align 1
  %9059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9059, align 1
  %9060 = lshr i32 %9045, 31
  %9061 = trunc i32 %9060 to i8
  %9062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9061, i8* %9062, align 1
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9050, i8* %9063, align 1
  store %struct.Memory* %loadMem_4ae2bf, %struct.Memory** %MEMORY
  %loadMem_4ae2c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9065 = getelementptr inbounds %struct.GPR, %struct.GPR* %9064, i32 0, i32 33
  %9066 = getelementptr inbounds %struct.Reg, %struct.Reg* %9065, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %9066 to i64*
  %9067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9068 = getelementptr inbounds %struct.GPR, %struct.GPR* %9067, i32 0, i32 11
  %9069 = getelementptr inbounds %struct.Reg, %struct.Reg* %9068, i32 0, i32 0
  %RDI.i645 = bitcast %union.anon* %9069 to i64*
  %9070 = load i64, i64* %RDI.i645
  %9071 = load i64, i64* %PC.i644
  %9072 = add i64 %9071, 7
  store i64 %9072, i64* %PC.i644
  %9073 = trunc i64 %9070 to i32
  %9074 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %9075 = add i32 %9074, %9073
  %9076 = zext i32 %9075 to i64
  store i64 %9076, i64* %RDI.i645, align 8
  %9077 = icmp ult i32 %9075, %9073
  %9078 = icmp ult i32 %9075, %9074
  %9079 = or i1 %9077, %9078
  %9080 = zext i1 %9079 to i8
  %9081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9080, i8* %9081, align 1
  %9082 = and i32 %9075, 255
  %9083 = call i32 @llvm.ctpop.i32(i32 %9082)
  %9084 = trunc i32 %9083 to i8
  %9085 = and i8 %9084, 1
  %9086 = xor i8 %9085, 1
  %9087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9086, i8* %9087, align 1
  %9088 = xor i32 %9074, %9073
  %9089 = xor i32 %9088, %9075
  %9090 = lshr i32 %9089, 4
  %9091 = trunc i32 %9090 to i8
  %9092 = and i8 %9091, 1
  %9093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9092, i8* %9093, align 1
  %9094 = icmp eq i32 %9075, 0
  %9095 = zext i1 %9094 to i8
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9095, i8* %9096, align 1
  %9097 = lshr i32 %9075, 31
  %9098 = trunc i32 %9097 to i8
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9098, i8* %9099, align 1
  %9100 = lshr i32 %9073, 31
  %9101 = lshr i32 %9074, 31
  %9102 = xor i32 %9097, %9100
  %9103 = xor i32 %9097, %9101
  %9104 = add i32 %9102, %9103
  %9105 = icmp eq i32 %9104, 2
  %9106 = zext i1 %9105 to i8
  %9107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9106, i8* %9107, align 1
  store %struct.Memory* %loadMem_4ae2c2, %struct.Memory** %MEMORY
  %loadMem_4ae2c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9109 = getelementptr inbounds %struct.GPR, %struct.GPR* %9108, i32 0, i32 33
  %9110 = getelementptr inbounds %struct.Reg, %struct.Reg* %9109, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %9110 to i64*
  %9111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9112 = getelementptr inbounds %struct.GPR, %struct.GPR* %9111, i32 0, i32 5
  %9113 = getelementptr inbounds %struct.Reg, %struct.Reg* %9112, i32 0, i32 0
  %RCX.i643 = bitcast %union.anon* %9113 to i64*
  %9114 = load i64, i64* %PC.i642
  %9115 = add i64 %9114, 7
  store i64 %9115, i64* %PC.i642
  %9116 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %9117 = zext i32 %9116 to i64
  store i64 %9117, i64* %RCX.i643, align 8
  store %struct.Memory* %loadMem_4ae2c9, %struct.Memory** %MEMORY
  %loadMem_4ae2d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9119 = getelementptr inbounds %struct.GPR, %struct.GPR* %9118, i32 0, i32 33
  %9120 = getelementptr inbounds %struct.Reg, %struct.Reg* %9119, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %9120 to i64*
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9122 = getelementptr inbounds %struct.GPR, %struct.GPR* %9121, i32 0, i32 5
  %9123 = getelementptr inbounds %struct.Reg, %struct.Reg* %9122, i32 0, i32 0
  %9124 = bitcast %union.anon* %9123 to %struct.anon.2*
  %CL.i639 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9124, i32 0, i32 0
  %9125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9126 = getelementptr inbounds %struct.GPR, %struct.GPR* %9125, i32 0, i32 11
  %9127 = getelementptr inbounds %struct.Reg, %struct.Reg* %9126, i32 0, i32 0
  %RDI.i640 = bitcast %union.anon* %9127 to i64*
  %9128 = load i64, i64* %RDI.i640
  %9129 = load i8, i8* %CL.i639
  %9130 = zext i8 %9129 to i64
  %9131 = load i64, i64* %PC.i638
  %9132 = add i64 %9131, 2
  store i64 %9132, i64* %PC.i638
  %9133 = trunc i64 %9130 to i5
  switch i5 %9133, label %9137 [
    i5 0, label %routine_sarl__cl___edi.exit641
    i5 1, label %9134
  ]

; <label>:9134:                                   ; preds = %block_.L_4ae286
  %9135 = shl i64 %9128, 32
  %9136 = ashr i64 %9135, 33
  br label %9144

; <label>:9137:                                   ; preds = %block_.L_4ae286
  %9138 = and i64 %9130, 31
  %9139 = add i64 %9138, -1
  %9140 = shl i64 %9128, 32
  %9141 = ashr exact i64 %9140, 32
  %9142 = ashr i64 %9141, %9139
  %9143 = lshr i64 %9142, 1
  br label %9144

; <label>:9144:                                   ; preds = %9137, %9134
  %9145 = phi i64 [ %9143, %9137 ], [ %9136, %9134 ]
  %9146 = phi i64 [ %9142, %9137 ], [ %9128, %9134 ]
  %9147 = trunc i64 %9146 to i8
  %9148 = and i8 %9147, 1
  %9149 = trunc i64 %9145 to i32
  %9150 = and i64 %9145, 4294967295
  store i64 %9150, i64* %RDI.i640, align 8
  %9151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9148, i8* %9151, align 1
  %9152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9153 = and i32 %9149, 255
  %9154 = call i32 @llvm.ctpop.i32(i32 %9153)
  %9155 = trunc i32 %9154 to i8
  %9156 = and i8 %9155, 1
  %9157 = xor i8 %9156, 1
  store i8 %9157, i8* %9152, align 1
  %9158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9158, align 1
  %9159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9160 = icmp eq i32 %9149, 0
  %9161 = zext i1 %9160 to i8
  store i8 %9161, i8* %9159, align 1
  %9162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9163 = lshr i32 %9149, 31
  %9164 = trunc i32 %9163 to i8
  store i8 %9164, i8* %9162, align 1
  %9165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9165, align 1
  br label %routine_sarl__cl___edi.exit641

routine_sarl__cl___edi.exit641:                   ; preds = %block_.L_4ae286, %9144
  store %struct.Memory* %loadMem_4ae2d0, %struct.Memory** %MEMORY
  %loadMem_4ae2d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9167 = getelementptr inbounds %struct.GPR, %struct.GPR* %9166, i32 0, i32 33
  %9168 = getelementptr inbounds %struct.Reg, %struct.Reg* %9167, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %9168 to i64*
  %9169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9170 = getelementptr inbounds %struct.GPR, %struct.GPR* %9169, i32 0, i32 7
  %9171 = getelementptr inbounds %struct.Reg, %struct.Reg* %9170, i32 0, i32 0
  %RDX.i636 = bitcast %union.anon* %9171 to i64*
  %9172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9173 = getelementptr inbounds %struct.GPR, %struct.GPR* %9172, i32 0, i32 15
  %9174 = getelementptr inbounds %struct.Reg, %struct.Reg* %9173, i32 0, i32 0
  %RBP.i637 = bitcast %union.anon* %9174 to i64*
  %9175 = load i64, i64* %RBP.i637
  %9176 = sub i64 %9175, 932
  %9177 = load i64, i64* %PC.i635
  %9178 = add i64 %9177, 7
  store i64 %9178, i64* %PC.i635
  %9179 = inttoptr i64 %9176 to i32*
  %9180 = load i32, i32* %9179
  %9181 = sext i32 %9180 to i64
  store i64 %9181, i64* %RDX.i636, align 8
  store %struct.Memory* %loadMem_4ae2d2, %struct.Memory** %MEMORY
  %loadMem_4ae2d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9183 = getelementptr inbounds %struct.GPR, %struct.GPR* %9182, i32 0, i32 33
  %9184 = getelementptr inbounds %struct.Reg, %struct.Reg* %9183, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %9184 to i64*
  %9185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9186 = getelementptr inbounds %struct.GPR, %struct.GPR* %9185, i32 0, i32 7
  %9187 = getelementptr inbounds %struct.Reg, %struct.Reg* %9186, i32 0, i32 0
  %RDX.i634 = bitcast %union.anon* %9187 to i64*
  %9188 = load i64, i64* %RDX.i634
  %9189 = load i64, i64* %PC.i633
  %9190 = add i64 %9189, 7
  store i64 %9190, i64* %PC.i633
  %9191 = sext i64 %9188 to i128
  %9192 = and i128 %9191, -18446744073709551616
  %9193 = zext i64 %9188 to i128
  %9194 = or i128 %9192, %9193
  %9195 = mul i128 180, %9194
  %9196 = trunc i128 %9195 to i64
  store i64 %9196, i64* %RDX.i634, align 8
  %9197 = sext i64 %9196 to i128
  %9198 = icmp ne i128 %9197, %9195
  %9199 = zext i1 %9198 to i8
  %9200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9199, i8* %9200, align 1
  %9201 = trunc i128 %9195 to i32
  %9202 = and i32 %9201, 255
  %9203 = call i32 @llvm.ctpop.i32(i32 %9202)
  %9204 = trunc i32 %9203 to i8
  %9205 = and i8 %9204, 1
  %9206 = xor i8 %9205, 1
  %9207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9206, i8* %9207, align 1
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9208, align 1
  %9209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9209, align 1
  %9210 = lshr i64 %9196, 63
  %9211 = trunc i64 %9210 to i8
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9211, i8* %9212, align 1
  %9213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9199, i8* %9213, align 1
  store %struct.Memory* %loadMem_4ae2d9, %struct.Memory** %MEMORY
  %loadMem_4ae2e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9215 = getelementptr inbounds %struct.GPR, %struct.GPR* %9214, i32 0, i32 33
  %9216 = getelementptr inbounds %struct.Reg, %struct.Reg* %9215, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %9216 to i64*
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9218 = getelementptr inbounds %struct.GPR, %struct.GPR* %9217, i32 0, i32 1
  %9219 = getelementptr inbounds %struct.Reg, %struct.Reg* %9218, i32 0, i32 0
  %RAX.i631 = bitcast %union.anon* %9219 to i64*
  %9220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9221 = getelementptr inbounds %struct.GPR, %struct.GPR* %9220, i32 0, i32 7
  %9222 = getelementptr inbounds %struct.Reg, %struct.Reg* %9221, i32 0, i32 0
  %RDX.i632 = bitcast %union.anon* %9222 to i64*
  %9223 = load i64, i64* %RAX.i631
  %9224 = load i64, i64* %RDX.i632
  %9225 = load i64, i64* %PC.i630
  %9226 = add i64 %9225, 3
  store i64 %9226, i64* %PC.i630
  %9227 = add i64 %9224, %9223
  store i64 %9227, i64* %RAX.i631, align 8
  %9228 = icmp ult i64 %9227, %9223
  %9229 = icmp ult i64 %9227, %9224
  %9230 = or i1 %9228, %9229
  %9231 = zext i1 %9230 to i8
  %9232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9231, i8* %9232, align 1
  %9233 = trunc i64 %9227 to i32
  %9234 = and i32 %9233, 255
  %9235 = call i32 @llvm.ctpop.i32(i32 %9234)
  %9236 = trunc i32 %9235 to i8
  %9237 = and i8 %9236, 1
  %9238 = xor i8 %9237, 1
  %9239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9238, i8* %9239, align 1
  %9240 = xor i64 %9224, %9223
  %9241 = xor i64 %9240, %9227
  %9242 = lshr i64 %9241, 4
  %9243 = trunc i64 %9242 to i8
  %9244 = and i8 %9243, 1
  %9245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9244, i8* %9245, align 1
  %9246 = icmp eq i64 %9227, 0
  %9247 = zext i1 %9246 to i8
  %9248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9247, i8* %9248, align 1
  %9249 = lshr i64 %9227, 63
  %9250 = trunc i64 %9249 to i8
  %9251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9250, i8* %9251, align 1
  %9252 = lshr i64 %9223, 63
  %9253 = lshr i64 %9224, 63
  %9254 = xor i64 %9249, %9252
  %9255 = xor i64 %9249, %9253
  %9256 = add i64 %9254, %9255
  %9257 = icmp eq i64 %9256, 2
  %9258 = zext i1 %9257 to i8
  %9259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9258, i8* %9259, align 1
  store %struct.Memory* %loadMem_4ae2e0, %struct.Memory** %MEMORY
  %loadMem_4ae2e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9261 = getelementptr inbounds %struct.GPR, %struct.GPR* %9260, i32 0, i32 33
  %9262 = getelementptr inbounds %struct.Reg, %struct.Reg* %9261, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %9262 to i64*
  %9263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9264 = getelementptr inbounds %struct.GPR, %struct.GPR* %9263, i32 0, i32 7
  %9265 = getelementptr inbounds %struct.Reg, %struct.Reg* %9264, i32 0, i32 0
  %RDX.i628 = bitcast %union.anon* %9265 to i64*
  %9266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9267 = getelementptr inbounds %struct.GPR, %struct.GPR* %9266, i32 0, i32 15
  %9268 = getelementptr inbounds %struct.Reg, %struct.Reg* %9267, i32 0, i32 0
  %RBP.i629 = bitcast %union.anon* %9268 to i64*
  %9269 = load i64, i64* %RBP.i629
  %9270 = sub i64 %9269, 16
  %9271 = load i64, i64* %PC.i627
  %9272 = add i64 %9271, 4
  store i64 %9272, i64* %PC.i627
  %9273 = inttoptr i64 %9270 to i32*
  %9274 = load i32, i32* %9273
  %9275 = sext i32 %9274 to i64
  store i64 %9275, i64* %RDX.i628, align 8
  store %struct.Memory* %loadMem_4ae2e3, %struct.Memory** %MEMORY
  %loadMem_4ae2e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9277 = getelementptr inbounds %struct.GPR, %struct.GPR* %9276, i32 0, i32 33
  %9278 = getelementptr inbounds %struct.Reg, %struct.Reg* %9277, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %9278 to i64*
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9280 = getelementptr inbounds %struct.GPR, %struct.GPR* %9279, i32 0, i32 7
  %9281 = getelementptr inbounds %struct.Reg, %struct.Reg* %9280, i32 0, i32 0
  %RDX.i626 = bitcast %union.anon* %9281 to i64*
  %9282 = load i64, i64* %RDX.i626
  %9283 = load i64, i64* %PC.i625
  %9284 = add i64 %9283, 4
  store i64 %9284, i64* %PC.i625
  %9285 = sext i64 %9282 to i128
  %9286 = and i128 %9285, -18446744073709551616
  %9287 = zext i64 %9282 to i128
  %9288 = or i128 %9286, %9287
  %9289 = mul i128 12, %9288
  %9290 = trunc i128 %9289 to i64
  store i64 %9290, i64* %RDX.i626, align 8
  %9291 = sext i64 %9290 to i128
  %9292 = icmp ne i128 %9291, %9289
  %9293 = zext i1 %9292 to i8
  %9294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9293, i8* %9294, align 1
  %9295 = trunc i128 %9289 to i32
  %9296 = and i32 %9295, 255
  %9297 = call i32 @llvm.ctpop.i32(i32 %9296)
  %9298 = trunc i32 %9297 to i8
  %9299 = and i8 %9298, 1
  %9300 = xor i8 %9299, 1
  %9301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9300, i8* %9301, align 1
  %9302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9302, align 1
  %9303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9303, align 1
  %9304 = lshr i64 %9290, 63
  %9305 = trunc i64 %9304 to i8
  %9306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9305, i8* %9306, align 1
  %9307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9293, i8* %9307, align 1
  store %struct.Memory* %loadMem_4ae2e7, %struct.Memory** %MEMORY
  %loadMem_4ae2eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9309 = getelementptr inbounds %struct.GPR, %struct.GPR* %9308, i32 0, i32 33
  %9310 = getelementptr inbounds %struct.Reg, %struct.Reg* %9309, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %9310 to i64*
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9312 = getelementptr inbounds %struct.GPR, %struct.GPR* %9311, i32 0, i32 1
  %9313 = getelementptr inbounds %struct.Reg, %struct.Reg* %9312, i32 0, i32 0
  %RAX.i623 = bitcast %union.anon* %9313 to i64*
  %9314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9315 = getelementptr inbounds %struct.GPR, %struct.GPR* %9314, i32 0, i32 7
  %9316 = getelementptr inbounds %struct.Reg, %struct.Reg* %9315, i32 0, i32 0
  %RDX.i624 = bitcast %union.anon* %9316 to i64*
  %9317 = load i64, i64* %RAX.i623
  %9318 = load i64, i64* %RDX.i624
  %9319 = load i64, i64* %PC.i622
  %9320 = add i64 %9319, 3
  store i64 %9320, i64* %PC.i622
  %9321 = add i64 %9318, %9317
  store i64 %9321, i64* %RAX.i623, align 8
  %9322 = icmp ult i64 %9321, %9317
  %9323 = icmp ult i64 %9321, %9318
  %9324 = or i1 %9322, %9323
  %9325 = zext i1 %9324 to i8
  %9326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9325, i8* %9326, align 1
  %9327 = trunc i64 %9321 to i32
  %9328 = and i32 %9327, 255
  %9329 = call i32 @llvm.ctpop.i32(i32 %9328)
  %9330 = trunc i32 %9329 to i8
  %9331 = and i8 %9330, 1
  %9332 = xor i8 %9331, 1
  %9333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9332, i8* %9333, align 1
  %9334 = xor i64 %9318, %9317
  %9335 = xor i64 %9334, %9321
  %9336 = lshr i64 %9335, 4
  %9337 = trunc i64 %9336 to i8
  %9338 = and i8 %9337, 1
  %9339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9338, i8* %9339, align 1
  %9340 = icmp eq i64 %9321, 0
  %9341 = zext i1 %9340 to i8
  %9342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9341, i8* %9342, align 1
  %9343 = lshr i64 %9321, 63
  %9344 = trunc i64 %9343 to i8
  %9345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9344, i8* %9345, align 1
  %9346 = lshr i64 %9317, 63
  %9347 = lshr i64 %9318, 63
  %9348 = xor i64 %9343, %9346
  %9349 = xor i64 %9343, %9347
  %9350 = add i64 %9348, %9349
  %9351 = icmp eq i64 %9350, 2
  %9352 = zext i1 %9351 to i8
  %9353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9352, i8* %9353, align 1
  store %struct.Memory* %loadMem_4ae2eb, %struct.Memory** %MEMORY
  %loadMem_4ae2ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9355 = getelementptr inbounds %struct.GPR, %struct.GPR* %9354, i32 0, i32 33
  %9356 = getelementptr inbounds %struct.Reg, %struct.Reg* %9355, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %9356 to i64*
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9358 = getelementptr inbounds %struct.GPR, %struct.GPR* %9357, i32 0, i32 1
  %9359 = getelementptr inbounds %struct.Reg, %struct.Reg* %9358, i32 0, i32 0
  %RAX.i620 = bitcast %union.anon* %9359 to i64*
  %9360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9361 = getelementptr inbounds %struct.GPR, %struct.GPR* %9360, i32 0, i32 11
  %9362 = getelementptr inbounds %struct.Reg, %struct.Reg* %9361, i32 0, i32 0
  %RDI.i621 = bitcast %union.anon* %9362 to i64*
  %9363 = load i64, i64* %RDI.i621
  %9364 = load i64, i64* %RAX.i620
  %9365 = load i64, i64* %PC.i619
  %9366 = add i64 %9365, 2
  store i64 %9366, i64* %PC.i619
  %9367 = trunc i64 %9363 to i32
  %9368 = inttoptr i64 %9364 to i32*
  %9369 = load i32, i32* %9368
  %9370 = add i32 %9369, %9367
  %9371 = zext i32 %9370 to i64
  store i64 %9371, i64* %RDI.i621, align 8
  %9372 = icmp ult i32 %9370, %9367
  %9373 = icmp ult i32 %9370, %9369
  %9374 = or i1 %9372, %9373
  %9375 = zext i1 %9374 to i8
  %9376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9375, i8* %9376, align 1
  %9377 = and i32 %9370, 255
  %9378 = call i32 @llvm.ctpop.i32(i32 %9377)
  %9379 = trunc i32 %9378 to i8
  %9380 = and i8 %9379, 1
  %9381 = xor i8 %9380, 1
  %9382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9381, i8* %9382, align 1
  %9383 = xor i32 %9369, %9367
  %9384 = xor i32 %9383, %9370
  %9385 = lshr i32 %9384, 4
  %9386 = trunc i32 %9385 to i8
  %9387 = and i8 %9386, 1
  %9388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9387, i8* %9388, align 1
  %9389 = icmp eq i32 %9370, 0
  %9390 = zext i1 %9389 to i8
  %9391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9390, i8* %9391, align 1
  %9392 = lshr i32 %9370, 31
  %9393 = trunc i32 %9392 to i8
  %9394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9393, i8* %9394, align 1
  %9395 = lshr i32 %9367, 31
  %9396 = lshr i32 %9369, 31
  %9397 = xor i32 %9392, %9395
  %9398 = xor i32 %9392, %9396
  %9399 = add i32 %9397, %9398
  %9400 = icmp eq i32 %9399, 2
  %9401 = zext i1 %9400 to i8
  %9402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9401, i8* %9402, align 1
  store %struct.Memory* %loadMem_4ae2ee, %struct.Memory** %MEMORY
  %loadMem_4ae2f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9404 = getelementptr inbounds %struct.GPR, %struct.GPR* %9403, i32 0, i32 33
  %9405 = getelementptr inbounds %struct.Reg, %struct.Reg* %9404, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %9405 to i64*
  %9406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9407 = getelementptr inbounds %struct.GPR, %struct.GPR* %9406, i32 0, i32 1
  %9408 = getelementptr inbounds %struct.Reg, %struct.Reg* %9407, i32 0, i32 0
  %RAX.i618 = bitcast %union.anon* %9408 to i64*
  %9409 = load i64, i64* %PC.i617
  %9410 = add i64 %9409, 8
  store i64 %9410, i64* %PC.i617
  %9411 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9411, i64* %RAX.i618, align 8
  store %struct.Memory* %loadMem_4ae2f0, %struct.Memory** %MEMORY
  %loadMem_4ae2f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9413 = getelementptr inbounds %struct.GPR, %struct.GPR* %9412, i32 0, i32 33
  %9414 = getelementptr inbounds %struct.Reg, %struct.Reg* %9413, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %9414 to i64*
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9416 = getelementptr inbounds %struct.GPR, %struct.GPR* %9415, i32 0, i32 11
  %9417 = getelementptr inbounds %struct.Reg, %struct.Reg* %9416, i32 0, i32 0
  %EDI.i615 = bitcast %union.anon* %9417 to i32*
  %9418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9419 = getelementptr inbounds %struct.GPR, %struct.GPR* %9418, i32 0, i32 1
  %9420 = getelementptr inbounds %struct.Reg, %struct.Reg* %9419, i32 0, i32 0
  %RAX.i616 = bitcast %union.anon* %9420 to i64*
  %9421 = load i32, i32* %EDI.i615
  %9422 = zext i32 %9421 to i64
  %9423 = load i64, i64* %RAX.i616
  %9424 = add i64 %9423, 72684
  %9425 = load i64, i64* %PC.i614
  %9426 = add i64 %9425, 6
  store i64 %9426, i64* %PC.i614
  %9427 = inttoptr i64 %9424 to i32*
  %9428 = load i32, i32* %9427
  %9429 = sub i32 %9421, %9428
  %9430 = icmp ult i32 %9421, %9428
  %9431 = zext i1 %9430 to i8
  %9432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9431, i8* %9432, align 1
  %9433 = and i32 %9429, 255
  %9434 = call i32 @llvm.ctpop.i32(i32 %9433)
  %9435 = trunc i32 %9434 to i8
  %9436 = and i8 %9435, 1
  %9437 = xor i8 %9436, 1
  %9438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9437, i8* %9438, align 1
  %9439 = xor i32 %9428, %9421
  %9440 = xor i32 %9439, %9429
  %9441 = lshr i32 %9440, 4
  %9442 = trunc i32 %9441 to i8
  %9443 = and i8 %9442, 1
  %9444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9443, i8* %9444, align 1
  %9445 = icmp eq i32 %9429, 0
  %9446 = zext i1 %9445 to i8
  %9447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9446, i8* %9447, align 1
  %9448 = lshr i32 %9429, 31
  %9449 = trunc i32 %9448 to i8
  %9450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9449, i8* %9450, align 1
  %9451 = lshr i32 %9421, 31
  %9452 = lshr i32 %9428, 31
  %9453 = xor i32 %9452, %9451
  %9454 = xor i32 %9448, %9451
  %9455 = add i32 %9454, %9453
  %9456 = icmp eq i32 %9455, 2
  %9457 = zext i1 %9456 to i8
  %9458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9457, i8* %9458, align 1
  store %struct.Memory* %loadMem_4ae2f8, %struct.Memory** %MEMORY
  %loadMem_4ae2fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %9459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9460 = getelementptr inbounds %struct.GPR, %struct.GPR* %9459, i32 0, i32 33
  %9461 = getelementptr inbounds %struct.Reg, %struct.Reg* %9460, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %9461 to i64*
  %9462 = load i64, i64* %PC.i613
  %9463 = add i64 %9462, 31
  %9464 = load i64, i64* %PC.i613
  %9465 = add i64 %9464, 6
  %9466 = load i64, i64* %PC.i613
  %9467 = add i64 %9466, 6
  store i64 %9467, i64* %PC.i613
  %9468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9469 = load i8, i8* %9468, align 1
  %9470 = icmp ne i8 %9469, 0
  %9471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9472 = load i8, i8* %9471, align 1
  %9473 = icmp ne i8 %9472, 0
  %9474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9475 = load i8, i8* %9474, align 1
  %9476 = icmp ne i8 %9475, 0
  %9477 = xor i1 %9473, %9476
  %9478 = or i1 %9470, %9477
  %9479 = zext i1 %9478 to i8
  store i8 %9479, i8* %BRANCH_TAKEN, align 1
  %9480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9481 = select i1 %9478, i64 %9463, i64 %9465
  store i64 %9481, i64* %9480, align 8
  store %struct.Memory* %loadMem_4ae2fe, %struct.Memory** %MEMORY
  %loadBr_4ae2fe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae2fe = icmp eq i8 %loadBr_4ae2fe, 1
  br i1 %cmpBr_4ae2fe, label %block_.L_4ae31d, label %block_4ae304

block_4ae304:                                     ; preds = %routine_sarl__cl___edi.exit641
  %loadMem_4ae304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9483 = getelementptr inbounds %struct.GPR, %struct.GPR* %9482, i32 0, i32 33
  %9484 = getelementptr inbounds %struct.Reg, %struct.Reg* %9483, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %9484 to i64*
  %9485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9486 = getelementptr inbounds %struct.GPR, %struct.GPR* %9485, i32 0, i32 1
  %9487 = getelementptr inbounds %struct.Reg, %struct.Reg* %9486, i32 0, i32 0
  %RAX.i612 = bitcast %union.anon* %9487 to i64*
  %9488 = load i64, i64* %PC.i611
  %9489 = add i64 %9488, 8
  store i64 %9489, i64* %PC.i611
  %9490 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9490, i64* %RAX.i612, align 8
  store %struct.Memory* %loadMem_4ae304, %struct.Memory** %MEMORY
  %loadMem_4ae30c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9492 = getelementptr inbounds %struct.GPR, %struct.GPR* %9491, i32 0, i32 33
  %9493 = getelementptr inbounds %struct.Reg, %struct.Reg* %9492, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %9493 to i64*
  %9494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9495 = getelementptr inbounds %struct.GPR, %struct.GPR* %9494, i32 0, i32 1
  %9496 = getelementptr inbounds %struct.Reg, %struct.Reg* %9495, i32 0, i32 0
  %RAX.i609 = bitcast %union.anon* %9496 to i64*
  %9497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9498 = getelementptr inbounds %struct.GPR, %struct.GPR* %9497, i32 0, i32 5
  %9499 = getelementptr inbounds %struct.Reg, %struct.Reg* %9498, i32 0, i32 0
  %RCX.i610 = bitcast %union.anon* %9499 to i64*
  %9500 = load i64, i64* %RAX.i609
  %9501 = add i64 %9500, 72684
  %9502 = load i64, i64* %PC.i608
  %9503 = add i64 %9502, 6
  store i64 %9503, i64* %PC.i608
  %9504 = inttoptr i64 %9501 to i32*
  %9505 = load i32, i32* %9504
  %9506 = zext i32 %9505 to i64
  store i64 %9506, i64* %RCX.i610, align 8
  store %struct.Memory* %loadMem_4ae30c, %struct.Memory** %MEMORY
  %loadMem_4ae312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9508 = getelementptr inbounds %struct.GPR, %struct.GPR* %9507, i32 0, i32 33
  %9509 = getelementptr inbounds %struct.Reg, %struct.Reg* %9508, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %9509 to i64*
  %9510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9511 = getelementptr inbounds %struct.GPR, %struct.GPR* %9510, i32 0, i32 5
  %9512 = getelementptr inbounds %struct.Reg, %struct.Reg* %9511, i32 0, i32 0
  %ECX.i606 = bitcast %union.anon* %9512 to i32*
  %9513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9514 = getelementptr inbounds %struct.GPR, %struct.GPR* %9513, i32 0, i32 15
  %9515 = getelementptr inbounds %struct.Reg, %struct.Reg* %9514, i32 0, i32 0
  %RBP.i607 = bitcast %union.anon* %9515 to i64*
  %9516 = load i64, i64* %RBP.i607
  %9517 = sub i64 %9516, 960
  %9518 = load i32, i32* %ECX.i606
  %9519 = zext i32 %9518 to i64
  %9520 = load i64, i64* %PC.i605
  %9521 = add i64 %9520, 6
  store i64 %9521, i64* %PC.i605
  %9522 = inttoptr i64 %9517 to i32*
  store i32 %9518, i32* %9522
  store %struct.Memory* %loadMem_4ae312, %struct.Memory** %MEMORY
  %loadMem_4ae318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9524 = getelementptr inbounds %struct.GPR, %struct.GPR* %9523, i32 0, i32 33
  %9525 = getelementptr inbounds %struct.Reg, %struct.Reg* %9524, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %9525 to i64*
  %9526 = load i64, i64* %PC.i604
  %9527 = add i64 %9526, 117
  %9528 = load i64, i64* %PC.i604
  %9529 = add i64 %9528, 5
  store i64 %9529, i64* %PC.i604
  %9530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9527, i64* %9530, align 8
  store %struct.Memory* %loadMem_4ae318, %struct.Memory** %MEMORY
  br label %block_.L_4ae38d

block_.L_4ae31d:                                  ; preds = %routine_sarl__cl___edi.exit641
  %loadMem_4ae31d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9532 = getelementptr inbounds %struct.GPR, %struct.GPR* %9531, i32 0, i32 33
  %9533 = getelementptr inbounds %struct.Reg, %struct.Reg* %9532, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %9533 to i64*
  %9534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9535 = getelementptr inbounds %struct.GPR, %struct.GPR* %9534, i32 0, i32 1
  %9536 = getelementptr inbounds %struct.Reg, %struct.Reg* %9535, i32 0, i32 0
  %RAX.i602 = bitcast %union.anon* %9536 to i64*
  %9537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9538 = getelementptr inbounds %struct.GPR, %struct.GPR* %9537, i32 0, i32 15
  %9539 = getelementptr inbounds %struct.Reg, %struct.Reg* %9538, i32 0, i32 0
  %RBP.i603 = bitcast %union.anon* %9539 to i64*
  %9540 = load i64, i64* %RBP.i603
  %9541 = sub i64 %9540, 928
  %9542 = load i64, i64* %PC.i601
  %9543 = add i64 %9542, 7
  store i64 %9543, i64* %PC.i601
  store i64 %9541, i64* %RAX.i602, align 8
  store %struct.Memory* %loadMem_4ae31d, %struct.Memory** %MEMORY
  %loadMem_4ae324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9545 = getelementptr inbounds %struct.GPR, %struct.GPR* %9544, i32 0, i32 33
  %9546 = getelementptr inbounds %struct.Reg, %struct.Reg* %9545, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %9546 to i64*
  %9547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9548 = getelementptr inbounds %struct.GPR, %struct.GPR* %9547, i32 0, i32 5
  %9549 = getelementptr inbounds %struct.Reg, %struct.Reg* %9548, i32 0, i32 0
  %RCX.i599 = bitcast %union.anon* %9549 to i64*
  %9550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9551 = getelementptr inbounds %struct.GPR, %struct.GPR* %9550, i32 0, i32 15
  %9552 = getelementptr inbounds %struct.Reg, %struct.Reg* %9551, i32 0, i32 0
  %RBP.i600 = bitcast %union.anon* %9552 to i64*
  %9553 = load i64, i64* %RBP.i600
  %9554 = sub i64 %9553, 560
  %9555 = load i64, i64* %PC.i598
  %9556 = add i64 %9555, 7
  store i64 %9556, i64* %PC.i598
  store i64 %9554, i64* %RCX.i599, align 8
  store %struct.Memory* %loadMem_4ae324, %struct.Memory** %MEMORY
  %loadMem_4ae32b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9558 = getelementptr inbounds %struct.GPR, %struct.GPR* %9557, i32 0, i32 33
  %9559 = getelementptr inbounds %struct.Reg, %struct.Reg* %9558, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %9559 to i64*
  %9560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9561 = getelementptr inbounds %struct.GPR, %struct.GPR* %9560, i32 0, i32 7
  %9562 = getelementptr inbounds %struct.Reg, %struct.Reg* %9561, i32 0, i32 0
  %RDX.i596 = bitcast %union.anon* %9562 to i64*
  %9563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9564 = getelementptr inbounds %struct.GPR, %struct.GPR* %9563, i32 0, i32 15
  %9565 = getelementptr inbounds %struct.Reg, %struct.Reg* %9564, i32 0, i32 0
  %RBP.i597 = bitcast %union.anon* %9565 to i64*
  %9566 = load i64, i64* %RBP.i597
  %9567 = sub i64 %9566, 168
  %9568 = load i64, i64* %PC.i595
  %9569 = add i64 %9568, 7
  store i64 %9569, i64* %PC.i595
  %9570 = inttoptr i64 %9567 to i64*
  %9571 = load i64, i64* %9570
  store i64 %9571, i64* %RDX.i596, align 8
  store %struct.Memory* %loadMem_4ae32b, %struct.Memory** %MEMORY
  %loadMem_4ae332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9573 = getelementptr inbounds %struct.GPR, %struct.GPR* %9572, i32 0, i32 33
  %9574 = getelementptr inbounds %struct.Reg, %struct.Reg* %9573, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %9574 to i64*
  %9575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9576 = getelementptr inbounds %struct.GPR, %struct.GPR* %9575, i32 0, i32 9
  %9577 = getelementptr inbounds %struct.Reg, %struct.Reg* %9576, i32 0, i32 0
  %RSI.i593 = bitcast %union.anon* %9577 to i64*
  %9578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9579 = getelementptr inbounds %struct.GPR, %struct.GPR* %9578, i32 0, i32 15
  %9580 = getelementptr inbounds %struct.Reg, %struct.Reg* %9579, i32 0, i32 0
  %RBP.i594 = bitcast %union.anon* %9580 to i64*
  %9581 = load i64, i64* %RBP.i594
  %9582 = sub i64 %9581, 8
  %9583 = load i64, i64* %PC.i592
  %9584 = add i64 %9583, 4
  store i64 %9584, i64* %PC.i592
  %9585 = inttoptr i64 %9582 to i32*
  %9586 = load i32, i32* %9585
  %9587 = sext i32 %9586 to i64
  store i64 %9587, i64* %RSI.i593, align 8
  store %struct.Memory* %loadMem_4ae332, %struct.Memory** %MEMORY
  %loadMem_4ae336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9589 = getelementptr inbounds %struct.GPR, %struct.GPR* %9588, i32 0, i32 33
  %9590 = getelementptr inbounds %struct.Reg, %struct.Reg* %9589, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %9590 to i64*
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9592 = getelementptr inbounds %struct.GPR, %struct.GPR* %9591, i32 0, i32 7
  %9593 = getelementptr inbounds %struct.Reg, %struct.Reg* %9592, i32 0, i32 0
  %RDX.i589 = bitcast %union.anon* %9593 to i64*
  %9594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9595 = getelementptr inbounds %struct.GPR, %struct.GPR* %9594, i32 0, i32 9
  %9596 = getelementptr inbounds %struct.Reg, %struct.Reg* %9595, i32 0, i32 0
  %RSI.i590 = bitcast %union.anon* %9596 to i64*
  %9597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9598 = getelementptr inbounds %struct.GPR, %struct.GPR* %9597, i32 0, i32 11
  %9599 = getelementptr inbounds %struct.Reg, %struct.Reg* %9598, i32 0, i32 0
  %RDI.i591 = bitcast %union.anon* %9599 to i64*
  %9600 = load i64, i64* %RDX.i589
  %9601 = load i64, i64* %RSI.i590
  %9602 = mul i64 %9601, 2
  %9603 = add i64 %9602, %9600
  %9604 = load i64, i64* %PC.i588
  %9605 = add i64 %9604, 4
  store i64 %9605, i64* %PC.i588
  %9606 = inttoptr i64 %9603 to i16*
  %9607 = load i16, i16* %9606
  %9608 = zext i16 %9607 to i64
  store i64 %9608, i64* %RDI.i591, align 8
  store %struct.Memory* %loadMem_4ae336, %struct.Memory** %MEMORY
  %loadMem_4ae33a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9610 = getelementptr inbounds %struct.GPR, %struct.GPR* %9609, i32 0, i32 33
  %9611 = getelementptr inbounds %struct.Reg, %struct.Reg* %9610, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %9611 to i64*
  %9612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9613 = getelementptr inbounds %struct.GPR, %struct.GPR* %9612, i32 0, i32 7
  %9614 = getelementptr inbounds %struct.Reg, %struct.Reg* %9613, i32 0, i32 0
  %RDX.i586 = bitcast %union.anon* %9614 to i64*
  %9615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9616 = getelementptr inbounds %struct.GPR, %struct.GPR* %9615, i32 0, i32 15
  %9617 = getelementptr inbounds %struct.Reg, %struct.Reg* %9616, i32 0, i32 0
  %RBP.i587 = bitcast %union.anon* %9617 to i64*
  %9618 = load i64, i64* %RBP.i587
  %9619 = sub i64 %9618, 932
  %9620 = load i64, i64* %PC.i585
  %9621 = add i64 %9620, 7
  store i64 %9621, i64* %PC.i585
  %9622 = inttoptr i64 %9619 to i32*
  %9623 = load i32, i32* %9622
  %9624 = sext i32 %9623 to i64
  store i64 %9624, i64* %RDX.i586, align 8
  store %struct.Memory* %loadMem_4ae33a, %struct.Memory** %MEMORY
  %loadMem_4ae341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9626 = getelementptr inbounds %struct.GPR, %struct.GPR* %9625, i32 0, i32 33
  %9627 = getelementptr inbounds %struct.Reg, %struct.Reg* %9626, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %9627 to i64*
  %9628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9629 = getelementptr inbounds %struct.GPR, %struct.GPR* %9628, i32 0, i32 7
  %9630 = getelementptr inbounds %struct.Reg, %struct.Reg* %9629, i32 0, i32 0
  %RDX.i584 = bitcast %union.anon* %9630 to i64*
  %9631 = load i64, i64* %RDX.i584
  %9632 = load i64, i64* %PC.i583
  %9633 = add i64 %9632, 7
  store i64 %9633, i64* %PC.i583
  %9634 = sext i64 %9631 to i128
  %9635 = and i128 %9634, -18446744073709551616
  %9636 = zext i64 %9631 to i128
  %9637 = or i128 %9635, %9636
  %9638 = mul i128 180, %9637
  %9639 = trunc i128 %9638 to i64
  store i64 %9639, i64* %RDX.i584, align 8
  %9640 = sext i64 %9639 to i128
  %9641 = icmp ne i128 %9640, %9638
  %9642 = zext i1 %9641 to i8
  %9643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9642, i8* %9643, align 1
  %9644 = trunc i128 %9638 to i32
  %9645 = and i32 %9644, 255
  %9646 = call i32 @llvm.ctpop.i32(i32 %9645)
  %9647 = trunc i32 %9646 to i8
  %9648 = and i8 %9647, 1
  %9649 = xor i8 %9648, 1
  %9650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9649, i8* %9650, align 1
  %9651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9651, align 1
  %9652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9652, align 1
  %9653 = lshr i64 %9639, 63
  %9654 = trunc i64 %9653 to i8
  %9655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9654, i8* %9655, align 1
  %9656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9642, i8* %9656, align 1
  store %struct.Memory* %loadMem_4ae341, %struct.Memory** %MEMORY
  %loadMem_4ae348 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9658 = getelementptr inbounds %struct.GPR, %struct.GPR* %9657, i32 0, i32 33
  %9659 = getelementptr inbounds %struct.Reg, %struct.Reg* %9658, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %9659 to i64*
  %9660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9661 = getelementptr inbounds %struct.GPR, %struct.GPR* %9660, i32 0, i32 5
  %9662 = getelementptr inbounds %struct.Reg, %struct.Reg* %9661, i32 0, i32 0
  %RCX.i581 = bitcast %union.anon* %9662 to i64*
  %9663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9664 = getelementptr inbounds %struct.GPR, %struct.GPR* %9663, i32 0, i32 7
  %9665 = getelementptr inbounds %struct.Reg, %struct.Reg* %9664, i32 0, i32 0
  %RDX.i582 = bitcast %union.anon* %9665 to i64*
  %9666 = load i64, i64* %RCX.i581
  %9667 = load i64, i64* %RDX.i582
  %9668 = load i64, i64* %PC.i580
  %9669 = add i64 %9668, 3
  store i64 %9669, i64* %PC.i580
  %9670 = add i64 %9667, %9666
  store i64 %9670, i64* %RCX.i581, align 8
  %9671 = icmp ult i64 %9670, %9666
  %9672 = icmp ult i64 %9670, %9667
  %9673 = or i1 %9671, %9672
  %9674 = zext i1 %9673 to i8
  %9675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9674, i8* %9675, align 1
  %9676 = trunc i64 %9670 to i32
  %9677 = and i32 %9676, 255
  %9678 = call i32 @llvm.ctpop.i32(i32 %9677)
  %9679 = trunc i32 %9678 to i8
  %9680 = and i8 %9679, 1
  %9681 = xor i8 %9680, 1
  %9682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9681, i8* %9682, align 1
  %9683 = xor i64 %9667, %9666
  %9684 = xor i64 %9683, %9670
  %9685 = lshr i64 %9684, 4
  %9686 = trunc i64 %9685 to i8
  %9687 = and i8 %9686, 1
  %9688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9687, i8* %9688, align 1
  %9689 = icmp eq i64 %9670, 0
  %9690 = zext i1 %9689 to i8
  %9691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9690, i8* %9691, align 1
  %9692 = lshr i64 %9670, 63
  %9693 = trunc i64 %9692 to i8
  %9694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9693, i8* %9694, align 1
  %9695 = lshr i64 %9666, 63
  %9696 = lshr i64 %9667, 63
  %9697 = xor i64 %9692, %9695
  %9698 = xor i64 %9692, %9696
  %9699 = add i64 %9697, %9698
  %9700 = icmp eq i64 %9699, 2
  %9701 = zext i1 %9700 to i8
  %9702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9701, i8* %9702, align 1
  store %struct.Memory* %loadMem_4ae348, %struct.Memory** %MEMORY
  %loadMem_4ae34b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9704 = getelementptr inbounds %struct.GPR, %struct.GPR* %9703, i32 0, i32 33
  %9705 = getelementptr inbounds %struct.Reg, %struct.Reg* %9704, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %9705 to i64*
  %9706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9707 = getelementptr inbounds %struct.GPR, %struct.GPR* %9706, i32 0, i32 7
  %9708 = getelementptr inbounds %struct.Reg, %struct.Reg* %9707, i32 0, i32 0
  %RDX.i578 = bitcast %union.anon* %9708 to i64*
  %9709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9710 = getelementptr inbounds %struct.GPR, %struct.GPR* %9709, i32 0, i32 15
  %9711 = getelementptr inbounds %struct.Reg, %struct.Reg* %9710, i32 0, i32 0
  %RBP.i579 = bitcast %union.anon* %9711 to i64*
  %9712 = load i64, i64* %RBP.i579
  %9713 = sub i64 %9712, 16
  %9714 = load i64, i64* %PC.i577
  %9715 = add i64 %9714, 4
  store i64 %9715, i64* %PC.i577
  %9716 = inttoptr i64 %9713 to i32*
  %9717 = load i32, i32* %9716
  %9718 = sext i32 %9717 to i64
  store i64 %9718, i64* %RDX.i578, align 8
  store %struct.Memory* %loadMem_4ae34b, %struct.Memory** %MEMORY
  %loadMem_4ae34f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9720 = getelementptr inbounds %struct.GPR, %struct.GPR* %9719, i32 0, i32 33
  %9721 = getelementptr inbounds %struct.Reg, %struct.Reg* %9720, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %9721 to i64*
  %9722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9723 = getelementptr inbounds %struct.GPR, %struct.GPR* %9722, i32 0, i32 7
  %9724 = getelementptr inbounds %struct.Reg, %struct.Reg* %9723, i32 0, i32 0
  %RDX.i576 = bitcast %union.anon* %9724 to i64*
  %9725 = load i64, i64* %RDX.i576
  %9726 = load i64, i64* %PC.i575
  %9727 = add i64 %9726, 4
  store i64 %9727, i64* %PC.i575
  %9728 = sext i64 %9725 to i128
  %9729 = and i128 %9728, -18446744073709551616
  %9730 = zext i64 %9725 to i128
  %9731 = or i128 %9729, %9730
  %9732 = mul i128 12, %9731
  %9733 = trunc i128 %9732 to i64
  store i64 %9733, i64* %RDX.i576, align 8
  %9734 = sext i64 %9733 to i128
  %9735 = icmp ne i128 %9734, %9732
  %9736 = zext i1 %9735 to i8
  %9737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9736, i8* %9737, align 1
  %9738 = trunc i128 %9732 to i32
  %9739 = and i32 %9738, 255
  %9740 = call i32 @llvm.ctpop.i32(i32 %9739)
  %9741 = trunc i32 %9740 to i8
  %9742 = and i8 %9741, 1
  %9743 = xor i8 %9742, 1
  %9744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9743, i8* %9744, align 1
  %9745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9745, align 1
  %9746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9746, align 1
  %9747 = lshr i64 %9733, 63
  %9748 = trunc i64 %9747 to i8
  %9749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9748, i8* %9749, align 1
  %9750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9736, i8* %9750, align 1
  store %struct.Memory* %loadMem_4ae34f, %struct.Memory** %MEMORY
  %loadMem_4ae353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9752 = getelementptr inbounds %struct.GPR, %struct.GPR* %9751, i32 0, i32 33
  %9753 = getelementptr inbounds %struct.Reg, %struct.Reg* %9752, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %9753 to i64*
  %9754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9755 = getelementptr inbounds %struct.GPR, %struct.GPR* %9754, i32 0, i32 5
  %9756 = getelementptr inbounds %struct.Reg, %struct.Reg* %9755, i32 0, i32 0
  %RCX.i573 = bitcast %union.anon* %9756 to i64*
  %9757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9758 = getelementptr inbounds %struct.GPR, %struct.GPR* %9757, i32 0, i32 7
  %9759 = getelementptr inbounds %struct.Reg, %struct.Reg* %9758, i32 0, i32 0
  %RDX.i574 = bitcast %union.anon* %9759 to i64*
  %9760 = load i64, i64* %RCX.i573
  %9761 = load i64, i64* %RDX.i574
  %9762 = load i64, i64* %PC.i572
  %9763 = add i64 %9762, 3
  store i64 %9763, i64* %PC.i572
  %9764 = add i64 %9761, %9760
  store i64 %9764, i64* %RCX.i573, align 8
  %9765 = icmp ult i64 %9764, %9760
  %9766 = icmp ult i64 %9764, %9761
  %9767 = or i1 %9765, %9766
  %9768 = zext i1 %9767 to i8
  %9769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9768, i8* %9769, align 1
  %9770 = trunc i64 %9764 to i32
  %9771 = and i32 %9770, 255
  %9772 = call i32 @llvm.ctpop.i32(i32 %9771)
  %9773 = trunc i32 %9772 to i8
  %9774 = and i8 %9773, 1
  %9775 = xor i8 %9774, 1
  %9776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9775, i8* %9776, align 1
  %9777 = xor i64 %9761, %9760
  %9778 = xor i64 %9777, %9764
  %9779 = lshr i64 %9778, 4
  %9780 = trunc i64 %9779 to i8
  %9781 = and i8 %9780, 1
  %9782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9781, i8* %9782, align 1
  %9783 = icmp eq i64 %9764, 0
  %9784 = zext i1 %9783 to i8
  %9785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9784, i8* %9785, align 1
  %9786 = lshr i64 %9764, 63
  %9787 = trunc i64 %9786 to i8
  %9788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9787, i8* %9788, align 1
  %9789 = lshr i64 %9760, 63
  %9790 = lshr i64 %9761, 63
  %9791 = xor i64 %9786, %9789
  %9792 = xor i64 %9786, %9790
  %9793 = add i64 %9791, %9792
  %9794 = icmp eq i64 %9793, 2
  %9795 = zext i1 %9794 to i8
  %9796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9795, i8* %9796, align 1
  store %struct.Memory* %loadMem_4ae353, %struct.Memory** %MEMORY
  %loadMem_4ae356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9798 = getelementptr inbounds %struct.GPR, %struct.GPR* %9797, i32 0, i32 33
  %9799 = getelementptr inbounds %struct.Reg, %struct.Reg* %9798, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %9799 to i64*
  %9800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9801 = getelementptr inbounds %struct.GPR, %struct.GPR* %9800, i32 0, i32 5
  %9802 = getelementptr inbounds %struct.Reg, %struct.Reg* %9801, i32 0, i32 0
  %RCX.i570 = bitcast %union.anon* %9802 to i64*
  %9803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9804 = getelementptr inbounds %struct.GPR, %struct.GPR* %9803, i32 0, i32 11
  %9805 = getelementptr inbounds %struct.Reg, %struct.Reg* %9804, i32 0, i32 0
  %RDI.i571 = bitcast %union.anon* %9805 to i64*
  %9806 = load i64, i64* %RDI.i571
  %9807 = load i64, i64* %RCX.i570
  %9808 = load i64, i64* %PC.i569
  %9809 = add i64 %9808, 3
  store i64 %9809, i64* %PC.i569
  %9810 = inttoptr i64 %9807 to i32*
  %9811 = load i32, i32* %9810
  %9812 = shl i64 %9806, 32
  %9813 = ashr exact i64 %9812, 32
  %9814 = sext i32 %9811 to i64
  %9815 = mul i64 %9814, %9813
  %9816 = trunc i64 %9815 to i32
  %9817 = and i64 %9815, 4294967295
  store i64 %9817, i64* %RDI.i571, align 8
  %9818 = shl i64 %9815, 32
  %9819 = ashr exact i64 %9818, 32
  %9820 = icmp ne i64 %9819, %9815
  %9821 = zext i1 %9820 to i8
  %9822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9821, i8* %9822, align 1
  %9823 = and i32 %9816, 255
  %9824 = call i32 @llvm.ctpop.i32(i32 %9823)
  %9825 = trunc i32 %9824 to i8
  %9826 = and i8 %9825, 1
  %9827 = xor i8 %9826, 1
  %9828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9827, i8* %9828, align 1
  %9829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9829, align 1
  %9830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9830, align 1
  %9831 = lshr i32 %9816, 31
  %9832 = trunc i32 %9831 to i8
  %9833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9832, i8* %9833, align 1
  %9834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9821, i8* %9834, align 1
  store %struct.Memory* %loadMem_4ae356, %struct.Memory** %MEMORY
  %loadMem_4ae359 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9836 = getelementptr inbounds %struct.GPR, %struct.GPR* %9835, i32 0, i32 33
  %9837 = getelementptr inbounds %struct.Reg, %struct.Reg* %9836, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %9837 to i64*
  %9838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9839 = getelementptr inbounds %struct.GPR, %struct.GPR* %9838, i32 0, i32 11
  %9840 = getelementptr inbounds %struct.Reg, %struct.Reg* %9839, i32 0, i32 0
  %RDI.i568 = bitcast %union.anon* %9840 to i64*
  %9841 = load i64, i64* %RDI.i568
  %9842 = load i64, i64* %PC.i567
  %9843 = add i64 %9842, 7
  store i64 %9843, i64* %PC.i567
  %9844 = trunc i64 %9841 to i32
  %9845 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %9846 = add i32 %9845, %9844
  %9847 = zext i32 %9846 to i64
  store i64 %9847, i64* %RDI.i568, align 8
  %9848 = icmp ult i32 %9846, %9844
  %9849 = icmp ult i32 %9846, %9845
  %9850 = or i1 %9848, %9849
  %9851 = zext i1 %9850 to i8
  %9852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9851, i8* %9852, align 1
  %9853 = and i32 %9846, 255
  %9854 = call i32 @llvm.ctpop.i32(i32 %9853)
  %9855 = trunc i32 %9854 to i8
  %9856 = and i8 %9855, 1
  %9857 = xor i8 %9856, 1
  %9858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9857, i8* %9858, align 1
  %9859 = xor i32 %9845, %9844
  %9860 = xor i32 %9859, %9846
  %9861 = lshr i32 %9860, 4
  %9862 = trunc i32 %9861 to i8
  %9863 = and i8 %9862, 1
  %9864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9863, i8* %9864, align 1
  %9865 = icmp eq i32 %9846, 0
  %9866 = zext i1 %9865 to i8
  %9867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9866, i8* %9867, align 1
  %9868 = lshr i32 %9846, 31
  %9869 = trunc i32 %9868 to i8
  %9870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9869, i8* %9870, align 1
  %9871 = lshr i32 %9844, 31
  %9872 = lshr i32 %9845, 31
  %9873 = xor i32 %9868, %9871
  %9874 = xor i32 %9868, %9872
  %9875 = add i32 %9873, %9874
  %9876 = icmp eq i32 %9875, 2
  %9877 = zext i1 %9876 to i8
  %9878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9877, i8* %9878, align 1
  store %struct.Memory* %loadMem_4ae359, %struct.Memory** %MEMORY
  %loadMem_4ae360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9880 = getelementptr inbounds %struct.GPR, %struct.GPR* %9879, i32 0, i32 33
  %9881 = getelementptr inbounds %struct.Reg, %struct.Reg* %9880, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %9881 to i64*
  %9882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9883 = getelementptr inbounds %struct.GPR, %struct.GPR* %9882, i32 0, i32 5
  %9884 = getelementptr inbounds %struct.Reg, %struct.Reg* %9883, i32 0, i32 0
  %RCX.i566 = bitcast %union.anon* %9884 to i64*
  %9885 = load i64, i64* %PC.i565
  %9886 = add i64 %9885, 7
  store i64 %9886, i64* %PC.i565
  %9887 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %9888 = zext i32 %9887 to i64
  store i64 %9888, i64* %RCX.i566, align 8
  store %struct.Memory* %loadMem_4ae360, %struct.Memory** %MEMORY
  %loadMem_4ae367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9890 = getelementptr inbounds %struct.GPR, %struct.GPR* %9889, i32 0, i32 33
  %9891 = getelementptr inbounds %struct.Reg, %struct.Reg* %9890, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %9891 to i64*
  %9892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9893 = getelementptr inbounds %struct.GPR, %struct.GPR* %9892, i32 0, i32 5
  %9894 = getelementptr inbounds %struct.Reg, %struct.Reg* %9893, i32 0, i32 0
  %9895 = bitcast %union.anon* %9894 to %struct.anon.2*
  %CL.i562 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9895, i32 0, i32 0
  %9896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9897 = getelementptr inbounds %struct.GPR, %struct.GPR* %9896, i32 0, i32 11
  %9898 = getelementptr inbounds %struct.Reg, %struct.Reg* %9897, i32 0, i32 0
  %RDI.i563 = bitcast %union.anon* %9898 to i64*
  %9899 = load i64, i64* %RDI.i563
  %9900 = load i8, i8* %CL.i562
  %9901 = zext i8 %9900 to i64
  %9902 = load i64, i64* %PC.i561
  %9903 = add i64 %9902, 2
  store i64 %9903, i64* %PC.i561
  %9904 = trunc i64 %9901 to i5
  switch i5 %9904, label %9908 [
    i5 0, label %routine_sarl__cl___edi.exit564
    i5 1, label %9905
  ]

; <label>:9905:                                   ; preds = %block_.L_4ae31d
  %9906 = shl i64 %9899, 32
  %9907 = ashr i64 %9906, 33
  br label %9915

; <label>:9908:                                   ; preds = %block_.L_4ae31d
  %9909 = and i64 %9901, 31
  %9910 = add i64 %9909, -1
  %9911 = shl i64 %9899, 32
  %9912 = ashr exact i64 %9911, 32
  %9913 = ashr i64 %9912, %9910
  %9914 = lshr i64 %9913, 1
  br label %9915

; <label>:9915:                                   ; preds = %9908, %9905
  %9916 = phi i64 [ %9914, %9908 ], [ %9907, %9905 ]
  %9917 = phi i64 [ %9913, %9908 ], [ %9899, %9905 ]
  %9918 = trunc i64 %9917 to i8
  %9919 = and i8 %9918, 1
  %9920 = trunc i64 %9916 to i32
  %9921 = and i64 %9916, 4294967295
  store i64 %9921, i64* %RDI.i563, align 8
  %9922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9919, i8* %9922, align 1
  %9923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9924 = and i32 %9920, 255
  %9925 = call i32 @llvm.ctpop.i32(i32 %9924)
  %9926 = trunc i32 %9925 to i8
  %9927 = and i8 %9926, 1
  %9928 = xor i8 %9927, 1
  store i8 %9928, i8* %9923, align 1
  %9929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9929, align 1
  %9930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9931 = icmp eq i32 %9920, 0
  %9932 = zext i1 %9931 to i8
  store i8 %9932, i8* %9930, align 1
  %9933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9934 = lshr i32 %9920, 31
  %9935 = trunc i32 %9934 to i8
  store i8 %9935, i8* %9933, align 1
  %9936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9936, align 1
  br label %routine_sarl__cl___edi.exit564

routine_sarl__cl___edi.exit564:                   ; preds = %block_.L_4ae31d, %9915
  store %struct.Memory* %loadMem_4ae367, %struct.Memory** %MEMORY
  %loadMem_4ae369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9938 = getelementptr inbounds %struct.GPR, %struct.GPR* %9937, i32 0, i32 33
  %9939 = getelementptr inbounds %struct.Reg, %struct.Reg* %9938, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %9939 to i64*
  %9940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9941 = getelementptr inbounds %struct.GPR, %struct.GPR* %9940, i32 0, i32 7
  %9942 = getelementptr inbounds %struct.Reg, %struct.Reg* %9941, i32 0, i32 0
  %RDX.i559 = bitcast %union.anon* %9942 to i64*
  %9943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9944 = getelementptr inbounds %struct.GPR, %struct.GPR* %9943, i32 0, i32 15
  %9945 = getelementptr inbounds %struct.Reg, %struct.Reg* %9944, i32 0, i32 0
  %RBP.i560 = bitcast %union.anon* %9945 to i64*
  %9946 = load i64, i64* %RBP.i560
  %9947 = sub i64 %9946, 932
  %9948 = load i64, i64* %PC.i558
  %9949 = add i64 %9948, 7
  store i64 %9949, i64* %PC.i558
  %9950 = inttoptr i64 %9947 to i32*
  %9951 = load i32, i32* %9950
  %9952 = sext i32 %9951 to i64
  store i64 %9952, i64* %RDX.i559, align 8
  store %struct.Memory* %loadMem_4ae369, %struct.Memory** %MEMORY
  %loadMem_4ae370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9954 = getelementptr inbounds %struct.GPR, %struct.GPR* %9953, i32 0, i32 33
  %9955 = getelementptr inbounds %struct.Reg, %struct.Reg* %9954, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %9955 to i64*
  %9956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9957 = getelementptr inbounds %struct.GPR, %struct.GPR* %9956, i32 0, i32 7
  %9958 = getelementptr inbounds %struct.Reg, %struct.Reg* %9957, i32 0, i32 0
  %RDX.i557 = bitcast %union.anon* %9958 to i64*
  %9959 = load i64, i64* %RDX.i557
  %9960 = load i64, i64* %PC.i556
  %9961 = add i64 %9960, 7
  store i64 %9961, i64* %PC.i556
  %9962 = sext i64 %9959 to i128
  %9963 = and i128 %9962, -18446744073709551616
  %9964 = zext i64 %9959 to i128
  %9965 = or i128 %9963, %9964
  %9966 = mul i128 180, %9965
  %9967 = trunc i128 %9966 to i64
  store i64 %9967, i64* %RDX.i557, align 8
  %9968 = sext i64 %9967 to i128
  %9969 = icmp ne i128 %9968, %9966
  %9970 = zext i1 %9969 to i8
  %9971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9970, i8* %9971, align 1
  %9972 = trunc i128 %9966 to i32
  %9973 = and i32 %9972, 255
  %9974 = call i32 @llvm.ctpop.i32(i32 %9973)
  %9975 = trunc i32 %9974 to i8
  %9976 = and i8 %9975, 1
  %9977 = xor i8 %9976, 1
  %9978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9977, i8* %9978, align 1
  %9979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9979, align 1
  %9980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9980, align 1
  %9981 = lshr i64 %9967, 63
  %9982 = trunc i64 %9981 to i8
  %9983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9982, i8* %9983, align 1
  %9984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9970, i8* %9984, align 1
  store %struct.Memory* %loadMem_4ae370, %struct.Memory** %MEMORY
  %loadMem_4ae377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9986 = getelementptr inbounds %struct.GPR, %struct.GPR* %9985, i32 0, i32 33
  %9987 = getelementptr inbounds %struct.Reg, %struct.Reg* %9986, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %9987 to i64*
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9989 = getelementptr inbounds %struct.GPR, %struct.GPR* %9988, i32 0, i32 1
  %9990 = getelementptr inbounds %struct.Reg, %struct.Reg* %9989, i32 0, i32 0
  %RAX.i554 = bitcast %union.anon* %9990 to i64*
  %9991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9992 = getelementptr inbounds %struct.GPR, %struct.GPR* %9991, i32 0, i32 7
  %9993 = getelementptr inbounds %struct.Reg, %struct.Reg* %9992, i32 0, i32 0
  %RDX.i555 = bitcast %union.anon* %9993 to i64*
  %9994 = load i64, i64* %RAX.i554
  %9995 = load i64, i64* %RDX.i555
  %9996 = load i64, i64* %PC.i553
  %9997 = add i64 %9996, 3
  store i64 %9997, i64* %PC.i553
  %9998 = add i64 %9995, %9994
  store i64 %9998, i64* %RAX.i554, align 8
  %9999 = icmp ult i64 %9998, %9994
  %10000 = icmp ult i64 %9998, %9995
  %10001 = or i1 %9999, %10000
  %10002 = zext i1 %10001 to i8
  %10003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10002, i8* %10003, align 1
  %10004 = trunc i64 %9998 to i32
  %10005 = and i32 %10004, 255
  %10006 = call i32 @llvm.ctpop.i32(i32 %10005)
  %10007 = trunc i32 %10006 to i8
  %10008 = and i8 %10007, 1
  %10009 = xor i8 %10008, 1
  %10010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10009, i8* %10010, align 1
  %10011 = xor i64 %9995, %9994
  %10012 = xor i64 %10011, %9998
  %10013 = lshr i64 %10012, 4
  %10014 = trunc i64 %10013 to i8
  %10015 = and i8 %10014, 1
  %10016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10015, i8* %10016, align 1
  %10017 = icmp eq i64 %9998, 0
  %10018 = zext i1 %10017 to i8
  %10019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10018, i8* %10019, align 1
  %10020 = lshr i64 %9998, 63
  %10021 = trunc i64 %10020 to i8
  %10022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10021, i8* %10022, align 1
  %10023 = lshr i64 %9994, 63
  %10024 = lshr i64 %9995, 63
  %10025 = xor i64 %10020, %10023
  %10026 = xor i64 %10020, %10024
  %10027 = add i64 %10025, %10026
  %10028 = icmp eq i64 %10027, 2
  %10029 = zext i1 %10028 to i8
  %10030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10029, i8* %10030, align 1
  store %struct.Memory* %loadMem_4ae377, %struct.Memory** %MEMORY
  %loadMem_4ae37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10032 = getelementptr inbounds %struct.GPR, %struct.GPR* %10031, i32 0, i32 33
  %10033 = getelementptr inbounds %struct.Reg, %struct.Reg* %10032, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %10033 to i64*
  %10034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10035 = getelementptr inbounds %struct.GPR, %struct.GPR* %10034, i32 0, i32 7
  %10036 = getelementptr inbounds %struct.Reg, %struct.Reg* %10035, i32 0, i32 0
  %RDX.i551 = bitcast %union.anon* %10036 to i64*
  %10037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10038 = getelementptr inbounds %struct.GPR, %struct.GPR* %10037, i32 0, i32 15
  %10039 = getelementptr inbounds %struct.Reg, %struct.Reg* %10038, i32 0, i32 0
  %RBP.i552 = bitcast %union.anon* %10039 to i64*
  %10040 = load i64, i64* %RBP.i552
  %10041 = sub i64 %10040, 16
  %10042 = load i64, i64* %PC.i550
  %10043 = add i64 %10042, 4
  store i64 %10043, i64* %PC.i550
  %10044 = inttoptr i64 %10041 to i32*
  %10045 = load i32, i32* %10044
  %10046 = sext i32 %10045 to i64
  store i64 %10046, i64* %RDX.i551, align 8
  store %struct.Memory* %loadMem_4ae37a, %struct.Memory** %MEMORY
  %loadMem_4ae37e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10048 = getelementptr inbounds %struct.GPR, %struct.GPR* %10047, i32 0, i32 33
  %10049 = getelementptr inbounds %struct.Reg, %struct.Reg* %10048, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %10049 to i64*
  %10050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10051 = getelementptr inbounds %struct.GPR, %struct.GPR* %10050, i32 0, i32 7
  %10052 = getelementptr inbounds %struct.Reg, %struct.Reg* %10051, i32 0, i32 0
  %RDX.i549 = bitcast %union.anon* %10052 to i64*
  %10053 = load i64, i64* %RDX.i549
  %10054 = load i64, i64* %PC.i548
  %10055 = add i64 %10054, 4
  store i64 %10055, i64* %PC.i548
  %10056 = sext i64 %10053 to i128
  %10057 = and i128 %10056, -18446744073709551616
  %10058 = zext i64 %10053 to i128
  %10059 = or i128 %10057, %10058
  %10060 = mul i128 12, %10059
  %10061 = trunc i128 %10060 to i64
  store i64 %10061, i64* %RDX.i549, align 8
  %10062 = sext i64 %10061 to i128
  %10063 = icmp ne i128 %10062, %10060
  %10064 = zext i1 %10063 to i8
  %10065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10064, i8* %10065, align 1
  %10066 = trunc i128 %10060 to i32
  %10067 = and i32 %10066, 255
  %10068 = call i32 @llvm.ctpop.i32(i32 %10067)
  %10069 = trunc i32 %10068 to i8
  %10070 = and i8 %10069, 1
  %10071 = xor i8 %10070, 1
  %10072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10071, i8* %10072, align 1
  %10073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10073, align 1
  %10074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10074, align 1
  %10075 = lshr i64 %10061, 63
  %10076 = trunc i64 %10075 to i8
  %10077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10076, i8* %10077, align 1
  %10078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10064, i8* %10078, align 1
  store %struct.Memory* %loadMem_4ae37e, %struct.Memory** %MEMORY
  %loadMem_4ae382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10080 = getelementptr inbounds %struct.GPR, %struct.GPR* %10079, i32 0, i32 33
  %10081 = getelementptr inbounds %struct.Reg, %struct.Reg* %10080, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %10081 to i64*
  %10082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10083 = getelementptr inbounds %struct.GPR, %struct.GPR* %10082, i32 0, i32 1
  %10084 = getelementptr inbounds %struct.Reg, %struct.Reg* %10083, i32 0, i32 0
  %RAX.i546 = bitcast %union.anon* %10084 to i64*
  %10085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10086 = getelementptr inbounds %struct.GPR, %struct.GPR* %10085, i32 0, i32 7
  %10087 = getelementptr inbounds %struct.Reg, %struct.Reg* %10086, i32 0, i32 0
  %RDX.i547 = bitcast %union.anon* %10087 to i64*
  %10088 = load i64, i64* %RAX.i546
  %10089 = load i64, i64* %RDX.i547
  %10090 = load i64, i64* %PC.i545
  %10091 = add i64 %10090, 3
  store i64 %10091, i64* %PC.i545
  %10092 = add i64 %10089, %10088
  store i64 %10092, i64* %RAX.i546, align 8
  %10093 = icmp ult i64 %10092, %10088
  %10094 = icmp ult i64 %10092, %10089
  %10095 = or i1 %10093, %10094
  %10096 = zext i1 %10095 to i8
  %10097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10096, i8* %10097, align 1
  %10098 = trunc i64 %10092 to i32
  %10099 = and i32 %10098, 255
  %10100 = call i32 @llvm.ctpop.i32(i32 %10099)
  %10101 = trunc i32 %10100 to i8
  %10102 = and i8 %10101, 1
  %10103 = xor i8 %10102, 1
  %10104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10103, i8* %10104, align 1
  %10105 = xor i64 %10089, %10088
  %10106 = xor i64 %10105, %10092
  %10107 = lshr i64 %10106, 4
  %10108 = trunc i64 %10107 to i8
  %10109 = and i8 %10108, 1
  %10110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10109, i8* %10110, align 1
  %10111 = icmp eq i64 %10092, 0
  %10112 = zext i1 %10111 to i8
  %10113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10112, i8* %10113, align 1
  %10114 = lshr i64 %10092, 63
  %10115 = trunc i64 %10114 to i8
  %10116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10115, i8* %10116, align 1
  %10117 = lshr i64 %10088, 63
  %10118 = lshr i64 %10089, 63
  %10119 = xor i64 %10114, %10117
  %10120 = xor i64 %10114, %10118
  %10121 = add i64 %10119, %10120
  %10122 = icmp eq i64 %10121, 2
  %10123 = zext i1 %10122 to i8
  %10124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10123, i8* %10124, align 1
  store %struct.Memory* %loadMem_4ae382, %struct.Memory** %MEMORY
  %loadMem_4ae385 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10126 = getelementptr inbounds %struct.GPR, %struct.GPR* %10125, i32 0, i32 33
  %10127 = getelementptr inbounds %struct.Reg, %struct.Reg* %10126, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %10127 to i64*
  %10128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10129 = getelementptr inbounds %struct.GPR, %struct.GPR* %10128, i32 0, i32 1
  %10130 = getelementptr inbounds %struct.Reg, %struct.Reg* %10129, i32 0, i32 0
  %RAX.i543 = bitcast %union.anon* %10130 to i64*
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10132 = getelementptr inbounds %struct.GPR, %struct.GPR* %10131, i32 0, i32 11
  %10133 = getelementptr inbounds %struct.Reg, %struct.Reg* %10132, i32 0, i32 0
  %RDI.i544 = bitcast %union.anon* %10133 to i64*
  %10134 = load i64, i64* %RDI.i544
  %10135 = load i64, i64* %RAX.i543
  %10136 = load i64, i64* %PC.i542
  %10137 = add i64 %10136, 2
  store i64 %10137, i64* %PC.i542
  %10138 = trunc i64 %10134 to i32
  %10139 = inttoptr i64 %10135 to i32*
  %10140 = load i32, i32* %10139
  %10141 = add i32 %10140, %10138
  %10142 = zext i32 %10141 to i64
  store i64 %10142, i64* %RDI.i544, align 8
  %10143 = icmp ult i32 %10141, %10138
  %10144 = icmp ult i32 %10141, %10140
  %10145 = or i1 %10143, %10144
  %10146 = zext i1 %10145 to i8
  %10147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10146, i8* %10147, align 1
  %10148 = and i32 %10141, 255
  %10149 = call i32 @llvm.ctpop.i32(i32 %10148)
  %10150 = trunc i32 %10149 to i8
  %10151 = and i8 %10150, 1
  %10152 = xor i8 %10151, 1
  %10153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10152, i8* %10153, align 1
  %10154 = xor i32 %10140, %10138
  %10155 = xor i32 %10154, %10141
  %10156 = lshr i32 %10155, 4
  %10157 = trunc i32 %10156 to i8
  %10158 = and i8 %10157, 1
  %10159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10158, i8* %10159, align 1
  %10160 = icmp eq i32 %10141, 0
  %10161 = zext i1 %10160 to i8
  %10162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10161, i8* %10162, align 1
  %10163 = lshr i32 %10141, 31
  %10164 = trunc i32 %10163 to i8
  %10165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10164, i8* %10165, align 1
  %10166 = lshr i32 %10138, 31
  %10167 = lshr i32 %10140, 31
  %10168 = xor i32 %10163, %10166
  %10169 = xor i32 %10163, %10167
  %10170 = add i32 %10168, %10169
  %10171 = icmp eq i32 %10170, 2
  %10172 = zext i1 %10171 to i8
  %10173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10172, i8* %10173, align 1
  store %struct.Memory* %loadMem_4ae385, %struct.Memory** %MEMORY
  %loadMem_4ae387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10175 = getelementptr inbounds %struct.GPR, %struct.GPR* %10174, i32 0, i32 33
  %10176 = getelementptr inbounds %struct.Reg, %struct.Reg* %10175, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %10176 to i64*
  %10177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10178 = getelementptr inbounds %struct.GPR, %struct.GPR* %10177, i32 0, i32 11
  %10179 = getelementptr inbounds %struct.Reg, %struct.Reg* %10178, i32 0, i32 0
  %EDI.i540 = bitcast %union.anon* %10179 to i32*
  %10180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10181 = getelementptr inbounds %struct.GPR, %struct.GPR* %10180, i32 0, i32 15
  %10182 = getelementptr inbounds %struct.Reg, %struct.Reg* %10181, i32 0, i32 0
  %RBP.i541 = bitcast %union.anon* %10182 to i64*
  %10183 = load i64, i64* %RBP.i541
  %10184 = sub i64 %10183, 960
  %10185 = load i32, i32* %EDI.i540
  %10186 = zext i32 %10185 to i64
  %10187 = load i64, i64* %PC.i539
  %10188 = add i64 %10187, 6
  store i64 %10188, i64* %PC.i539
  %10189 = inttoptr i64 %10184 to i32*
  store i32 %10185, i32* %10189
  store %struct.Memory* %loadMem_4ae387, %struct.Memory** %MEMORY
  br label %block_.L_4ae38d

block_.L_4ae38d:                                  ; preds = %routine_sarl__cl___edi.exit564, %block_4ae304
  %loadMem_4ae38d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10191 = getelementptr inbounds %struct.GPR, %struct.GPR* %10190, i32 0, i32 33
  %10192 = getelementptr inbounds %struct.Reg, %struct.Reg* %10191, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %10192 to i64*
  %10193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10194 = getelementptr inbounds %struct.GPR, %struct.GPR* %10193, i32 0, i32 1
  %10195 = getelementptr inbounds %struct.Reg, %struct.Reg* %10194, i32 0, i32 0
  %RAX.i537 = bitcast %union.anon* %10195 to i64*
  %10196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10197 = getelementptr inbounds %struct.GPR, %struct.GPR* %10196, i32 0, i32 15
  %10198 = getelementptr inbounds %struct.Reg, %struct.Reg* %10197, i32 0, i32 0
  %RBP.i538 = bitcast %union.anon* %10198 to i64*
  %10199 = load i64, i64* %RBP.i538
  %10200 = sub i64 %10199, 960
  %10201 = load i64, i64* %PC.i536
  %10202 = add i64 %10201, 6
  store i64 %10202, i64* %PC.i536
  %10203 = inttoptr i64 %10200 to i32*
  %10204 = load i32, i32* %10203
  %10205 = zext i32 %10204 to i64
  store i64 %10205, i64* %RAX.i537, align 8
  store %struct.Memory* %loadMem_4ae38d, %struct.Memory** %MEMORY
  %loadMem_4ae393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10207 = getelementptr inbounds %struct.GPR, %struct.GPR* %10206, i32 0, i32 33
  %10208 = getelementptr inbounds %struct.Reg, %struct.Reg* %10207, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %10208 to i64*
  %10209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10210 = getelementptr inbounds %struct.GPR, %struct.GPR* %10209, i32 0, i32 1
  %10211 = getelementptr inbounds %struct.Reg, %struct.Reg* %10210, i32 0, i32 0
  %EAX.i534 = bitcast %union.anon* %10211 to i32*
  %10212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10213 = getelementptr inbounds %struct.GPR, %struct.GPR* %10212, i32 0, i32 15
  %10214 = getelementptr inbounds %struct.Reg, %struct.Reg* %10213, i32 0, i32 0
  %RBP.i535 = bitcast %union.anon* %10214 to i64*
  %10215 = load i64, i64* %RBP.i535
  %10216 = sub i64 %10215, 956
  %10217 = load i32, i32* %EAX.i534
  %10218 = zext i32 %10217 to i64
  %10219 = load i64, i64* %PC.i533
  %10220 = add i64 %10219, 6
  store i64 %10220, i64* %PC.i533
  %10221 = inttoptr i64 %10216 to i32*
  store i32 %10217, i32* %10221
  store %struct.Memory* %loadMem_4ae393, %struct.Memory** %MEMORY
  br label %block_.L_4ae399

block_.L_4ae399:                                  ; preds = %block_.L_4ae38d, %block_4ae279
  %loadMem_4ae399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10223 = getelementptr inbounds %struct.GPR, %struct.GPR* %10222, i32 0, i32 33
  %10224 = getelementptr inbounds %struct.Reg, %struct.Reg* %10223, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %10224 to i64*
  %10225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10226 = getelementptr inbounds %struct.GPR, %struct.GPR* %10225, i32 0, i32 1
  %10227 = getelementptr inbounds %struct.Reg, %struct.Reg* %10226, i32 0, i32 0
  %RAX.i531 = bitcast %union.anon* %10227 to i64*
  %10228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10229 = getelementptr inbounds %struct.GPR, %struct.GPR* %10228, i32 0, i32 15
  %10230 = getelementptr inbounds %struct.Reg, %struct.Reg* %10229, i32 0, i32 0
  %RBP.i532 = bitcast %union.anon* %10230 to i64*
  %10231 = load i64, i64* %RBP.i532
  %10232 = sub i64 %10231, 956
  %10233 = load i64, i64* %PC.i530
  %10234 = add i64 %10233, 6
  store i64 %10234, i64* %PC.i530
  %10235 = inttoptr i64 %10232 to i32*
  %10236 = load i32, i32* %10235
  %10237 = zext i32 %10236 to i64
  store i64 %10237, i64* %RAX.i531, align 8
  store %struct.Memory* %loadMem_4ae399, %struct.Memory** %MEMORY
  %loadMem_4ae39f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10239 = getelementptr inbounds %struct.GPR, %struct.GPR* %10238, i32 0, i32 33
  %10240 = getelementptr inbounds %struct.Reg, %struct.Reg* %10239, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %10240 to i64*
  %10241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10242 = getelementptr inbounds %struct.GPR, %struct.GPR* %10241, i32 0, i32 1
  %10243 = getelementptr inbounds %struct.Reg, %struct.Reg* %10242, i32 0, i32 0
  %AX.i528 = bitcast %union.anon* %10243 to i16*
  %10244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10245 = getelementptr inbounds %struct.GPR, %struct.GPR* %10244, i32 0, i32 5
  %10246 = getelementptr inbounds %struct.Reg, %struct.Reg* %10245, i32 0, i32 0
  %CX.i529 = bitcast %union.anon* %10246 to i16*
  %10247 = load i16, i16* %AX.i528
  %10248 = zext i16 %10247 to i64
  %10249 = load i64, i64* %PC.i527
  %10250 = add i64 %10249, 3
  store i64 %10250, i64* %PC.i527
  store i16 %10247, i16* %CX.i529, align 2
  store %struct.Memory* %loadMem_4ae39f, %struct.Memory** %MEMORY
  %loadMem_4ae3a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10252 = getelementptr inbounds %struct.GPR, %struct.GPR* %10251, i32 0, i32 33
  %10253 = getelementptr inbounds %struct.Reg, %struct.Reg* %10252, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %10253 to i64*
  %10254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10255 = getelementptr inbounds %struct.GPR, %struct.GPR* %10254, i32 0, i32 7
  %10256 = getelementptr inbounds %struct.Reg, %struct.Reg* %10255, i32 0, i32 0
  %RDX.i525 = bitcast %union.anon* %10256 to i64*
  %10257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10258 = getelementptr inbounds %struct.GPR, %struct.GPR* %10257, i32 0, i32 15
  %10259 = getelementptr inbounds %struct.Reg, %struct.Reg* %10258, i32 0, i32 0
  %RBP.i526 = bitcast %union.anon* %10259 to i64*
  %10260 = load i64, i64* %RBP.i526
  %10261 = sub i64 %10260, 176
  %10262 = load i64, i64* %PC.i524
  %10263 = add i64 %10262, 7
  store i64 %10263, i64* %PC.i524
  %10264 = inttoptr i64 %10261 to i64*
  %10265 = load i64, i64* %10264
  store i64 %10265, i64* %RDX.i525, align 8
  store %struct.Memory* %loadMem_4ae3a2, %struct.Memory** %MEMORY
  %loadMem_4ae3a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10267 = getelementptr inbounds %struct.GPR, %struct.GPR* %10266, i32 0, i32 33
  %10268 = getelementptr inbounds %struct.Reg, %struct.Reg* %10267, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %10268 to i64*
  %10269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10270 = getelementptr inbounds %struct.GPR, %struct.GPR* %10269, i32 0, i32 9
  %10271 = getelementptr inbounds %struct.Reg, %struct.Reg* %10270, i32 0, i32 0
  %RSI.i522 = bitcast %union.anon* %10271 to i64*
  %10272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10273 = getelementptr inbounds %struct.GPR, %struct.GPR* %10272, i32 0, i32 15
  %10274 = getelementptr inbounds %struct.Reg, %struct.Reg* %10273, i32 0, i32 0
  %RBP.i523 = bitcast %union.anon* %10274 to i64*
  %10275 = load i64, i64* %RBP.i523
  %10276 = sub i64 %10275, 8
  %10277 = load i64, i64* %PC.i521
  %10278 = add i64 %10277, 4
  store i64 %10278, i64* %PC.i521
  %10279 = inttoptr i64 %10276 to i32*
  %10280 = load i32, i32* %10279
  %10281 = sext i32 %10280 to i64
  store i64 %10281, i64* %RSI.i522, align 8
  store %struct.Memory* %loadMem_4ae3a9, %struct.Memory** %MEMORY
  %loadMem_4ae3ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %10282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10283 = getelementptr inbounds %struct.GPR, %struct.GPR* %10282, i32 0, i32 33
  %10284 = getelementptr inbounds %struct.Reg, %struct.Reg* %10283, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %10284 to i64*
  %10285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10286 = getelementptr inbounds %struct.GPR, %struct.GPR* %10285, i32 0, i32 5
  %10287 = getelementptr inbounds %struct.Reg, %struct.Reg* %10286, i32 0, i32 0
  %CX.i518 = bitcast %union.anon* %10287 to i16*
  %10288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10289 = getelementptr inbounds %struct.GPR, %struct.GPR* %10288, i32 0, i32 7
  %10290 = getelementptr inbounds %struct.Reg, %struct.Reg* %10289, i32 0, i32 0
  %RDX.i519 = bitcast %union.anon* %10290 to i64*
  %10291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10292 = getelementptr inbounds %struct.GPR, %struct.GPR* %10291, i32 0, i32 9
  %10293 = getelementptr inbounds %struct.Reg, %struct.Reg* %10292, i32 0, i32 0
  %RSI.i520 = bitcast %union.anon* %10293 to i64*
  %10294 = load i64, i64* %RDX.i519
  %10295 = load i64, i64* %RSI.i520
  %10296 = mul i64 %10295, 2
  %10297 = add i64 %10296, %10294
  %10298 = load i16, i16* %CX.i518
  %10299 = zext i16 %10298 to i64
  %10300 = load i64, i64* %PC.i517
  %10301 = add i64 %10300, 4
  store i64 %10301, i64* %PC.i517
  %10302 = inttoptr i64 %10297 to i16*
  store i16 %10298, i16* %10302
  store %struct.Memory* %loadMem_4ae3ad, %struct.Memory** %MEMORY
  %loadMem_4ae3b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10304 = getelementptr inbounds %struct.GPR, %struct.GPR* %10303, i32 0, i32 33
  %10305 = getelementptr inbounds %struct.Reg, %struct.Reg* %10304, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %10305 to i64*
  %10306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10307 = getelementptr inbounds %struct.GPR, %struct.GPR* %10306, i32 0, i32 1
  %10308 = getelementptr inbounds %struct.Reg, %struct.Reg* %10307, i32 0, i32 0
  %RAX.i515 = bitcast %union.anon* %10308 to i64*
  %10309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10310 = getelementptr inbounds %struct.GPR, %struct.GPR* %10309, i32 0, i32 15
  %10311 = getelementptr inbounds %struct.Reg, %struct.Reg* %10310, i32 0, i32 0
  %RBP.i516 = bitcast %union.anon* %10311 to i64*
  %10312 = load i64, i64* %RBP.i516
  %10313 = sub i64 %10312, 8
  %10314 = load i64, i64* %PC.i514
  %10315 = add i64 %10314, 3
  store i64 %10315, i64* %PC.i514
  %10316 = inttoptr i64 %10313 to i32*
  %10317 = load i32, i32* %10316
  %10318 = zext i32 %10317 to i64
  store i64 %10318, i64* %RAX.i515, align 8
  store %struct.Memory* %loadMem_4ae3b1, %struct.Memory** %MEMORY
  %loadMem_4ae3b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10320 = getelementptr inbounds %struct.GPR, %struct.GPR* %10319, i32 0, i32 33
  %10321 = getelementptr inbounds %struct.Reg, %struct.Reg* %10320, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %10321 to i64*
  %10322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10323 = getelementptr inbounds %struct.GPR, %struct.GPR* %10322, i32 0, i32 1
  %10324 = getelementptr inbounds %struct.Reg, %struct.Reg* %10323, i32 0, i32 0
  %RAX.i513 = bitcast %union.anon* %10324 to i64*
  %10325 = load i64, i64* %RAX.i513
  %10326 = load i64, i64* %PC.i512
  %10327 = add i64 %10326, 3
  store i64 %10327, i64* %PC.i512
  %10328 = trunc i64 %10325 to i32
  %10329 = add i32 1, %10328
  %10330 = zext i32 %10329 to i64
  store i64 %10330, i64* %RAX.i513, align 8
  %10331 = icmp ult i32 %10329, %10328
  %10332 = icmp ult i32 %10329, 1
  %10333 = or i1 %10331, %10332
  %10334 = zext i1 %10333 to i8
  %10335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10334, i8* %10335, align 1
  %10336 = and i32 %10329, 255
  %10337 = call i32 @llvm.ctpop.i32(i32 %10336)
  %10338 = trunc i32 %10337 to i8
  %10339 = and i8 %10338, 1
  %10340 = xor i8 %10339, 1
  %10341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10340, i8* %10341, align 1
  %10342 = xor i64 1, %10325
  %10343 = trunc i64 %10342 to i32
  %10344 = xor i32 %10343, %10329
  %10345 = lshr i32 %10344, 4
  %10346 = trunc i32 %10345 to i8
  %10347 = and i8 %10346, 1
  %10348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10347, i8* %10348, align 1
  %10349 = icmp eq i32 %10329, 0
  %10350 = zext i1 %10349 to i8
  %10351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10350, i8* %10351, align 1
  %10352 = lshr i32 %10329, 31
  %10353 = trunc i32 %10352 to i8
  %10354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10353, i8* %10354, align 1
  %10355 = lshr i32 %10328, 31
  %10356 = xor i32 %10352, %10355
  %10357 = add i32 %10356, %10352
  %10358 = icmp eq i32 %10357, 2
  %10359 = zext i1 %10358 to i8
  %10360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10359, i8* %10360, align 1
  store %struct.Memory* %loadMem_4ae3b4, %struct.Memory** %MEMORY
  %loadMem_4ae3b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10362 = getelementptr inbounds %struct.GPR, %struct.GPR* %10361, i32 0, i32 33
  %10363 = getelementptr inbounds %struct.Reg, %struct.Reg* %10362, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %10363 to i64*
  %10364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10365 = getelementptr inbounds %struct.GPR, %struct.GPR* %10364, i32 0, i32 1
  %10366 = getelementptr inbounds %struct.Reg, %struct.Reg* %10365, i32 0, i32 0
  %EAX.i510 = bitcast %union.anon* %10366 to i32*
  %10367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10368 = getelementptr inbounds %struct.GPR, %struct.GPR* %10367, i32 0, i32 15
  %10369 = getelementptr inbounds %struct.Reg, %struct.Reg* %10368, i32 0, i32 0
  %RBP.i511 = bitcast %union.anon* %10369 to i64*
  %10370 = load i64, i64* %RBP.i511
  %10371 = sub i64 %10370, 8
  %10372 = load i32, i32* %EAX.i510
  %10373 = zext i32 %10372 to i64
  %10374 = load i64, i64* %PC.i509
  %10375 = add i64 %10374, 3
  store i64 %10375, i64* %PC.i509
  %10376 = inttoptr i64 %10371 to i32*
  store i32 %10372, i32* %10376
  store %struct.Memory* %loadMem_4ae3b7, %struct.Memory** %MEMORY
  %loadMem_4ae3ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %10377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10378 = getelementptr inbounds %struct.GPR, %struct.GPR* %10377, i32 0, i32 33
  %10379 = getelementptr inbounds %struct.Reg, %struct.Reg* %10378, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %10379 to i64*
  %10380 = load i64, i64* %PC.i508
  %10381 = add i64 %10380, -470
  %10382 = load i64, i64* %PC.i508
  %10383 = add i64 %10382, 5
  store i64 %10383, i64* %PC.i508
  %10384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10381, i64* %10384, align 8
  store %struct.Memory* %loadMem_4ae3ba, %struct.Memory** %MEMORY
  br label %block_.L_4ae1e4

block_.L_4ae3bf:                                  ; preds = %block_.L_4ae1e4
  %loadMem_4ae3bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10386 = getelementptr inbounds %struct.GPR, %struct.GPR* %10385, i32 0, i32 33
  %10387 = getelementptr inbounds %struct.Reg, %struct.Reg* %10386, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %10387 to i64*
  %10388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10389 = getelementptr inbounds %struct.GPR, %struct.GPR* %10388, i32 0, i32 15
  %10390 = getelementptr inbounds %struct.Reg, %struct.Reg* %10389, i32 0, i32 0
  %RBP.i507 = bitcast %union.anon* %10390 to i64*
  %10391 = load i64, i64* %RBP.i507
  %10392 = sub i64 %10391, 8
  %10393 = load i64, i64* %PC.i506
  %10394 = add i64 %10393, 7
  store i64 %10394, i64* %PC.i506
  %10395 = inttoptr i64 %10392 to i32*
  store i32 0, i32* %10395
  store %struct.Memory* %loadMem_4ae3bf, %struct.Memory** %MEMORY
  br label %block_.L_4ae3c6

block_.L_4ae3c6:                                  ; preds = %block_.L_4ae623, %block_.L_4ae3bf
  %loadMem_4ae3c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10397 = getelementptr inbounds %struct.GPR, %struct.GPR* %10396, i32 0, i32 33
  %10398 = getelementptr inbounds %struct.Reg, %struct.Reg* %10397, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %10398 to i64*
  %10399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10400 = getelementptr inbounds %struct.GPR, %struct.GPR* %10399, i32 0, i32 1
  %10401 = getelementptr inbounds %struct.Reg, %struct.Reg* %10400, i32 0, i32 0
  %RAX.i504 = bitcast %union.anon* %10401 to i64*
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10403 = getelementptr inbounds %struct.GPR, %struct.GPR* %10402, i32 0, i32 15
  %10404 = getelementptr inbounds %struct.Reg, %struct.Reg* %10403, i32 0, i32 0
  %RBP.i505 = bitcast %union.anon* %10404 to i64*
  %10405 = load i64, i64* %RBP.i505
  %10406 = sub i64 %10405, 8
  %10407 = load i64, i64* %PC.i503
  %10408 = add i64 %10407, 3
  store i64 %10408, i64* %PC.i503
  %10409 = inttoptr i64 %10406 to i32*
  %10410 = load i32, i32* %10409
  %10411 = zext i32 %10410 to i64
  store i64 %10411, i64* %RAX.i504, align 8
  store %struct.Memory* %loadMem_4ae3c6, %struct.Memory** %MEMORY
  %loadMem_4ae3c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10413 = getelementptr inbounds %struct.GPR, %struct.GPR* %10412, i32 0, i32 33
  %10414 = getelementptr inbounds %struct.Reg, %struct.Reg* %10413, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %10414 to i64*
  %10415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10416 = getelementptr inbounds %struct.GPR, %struct.GPR* %10415, i32 0, i32 5
  %10417 = getelementptr inbounds %struct.Reg, %struct.Reg* %10416, i32 0, i32 0
  %RCX.i502 = bitcast %union.anon* %10417 to i64*
  %10418 = load i64, i64* %PC.i501
  %10419 = add i64 %10418, 8
  store i64 %10419, i64* %PC.i501
  %10420 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10420, i64* %RCX.i502, align 8
  store %struct.Memory* %loadMem_4ae3c9, %struct.Memory** %MEMORY
  %loadMem_4ae3d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10422 = getelementptr inbounds %struct.GPR, %struct.GPR* %10421, i32 0, i32 33
  %10423 = getelementptr inbounds %struct.Reg, %struct.Reg* %10422, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %10423 to i64*
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10425 = getelementptr inbounds %struct.GPR, %struct.GPR* %10424, i32 0, i32 5
  %10426 = getelementptr inbounds %struct.Reg, %struct.Reg* %10425, i32 0, i32 0
  %RCX.i499 = bitcast %union.anon* %10426 to i64*
  %10427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10428 = getelementptr inbounds %struct.GPR, %struct.GPR* %10427, i32 0, i32 7
  %10429 = getelementptr inbounds %struct.Reg, %struct.Reg* %10428, i32 0, i32 0
  %RDX.i500 = bitcast %union.anon* %10429 to i64*
  %10430 = load i64, i64* %RCX.i499
  %10431 = add i64 %10430, 60
  %10432 = load i64, i64* %PC.i498
  %10433 = add i64 %10432, 3
  store i64 %10433, i64* %PC.i498
  %10434 = inttoptr i64 %10431 to i32*
  %10435 = load i32, i32* %10434
  %10436 = zext i32 %10435 to i64
  store i64 %10436, i64* %RDX.i500, align 8
  store %struct.Memory* %loadMem_4ae3d1, %struct.Memory** %MEMORY
  %loadMem_4ae3d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10438 = getelementptr inbounds %struct.GPR, %struct.GPR* %10437, i32 0, i32 33
  %10439 = getelementptr inbounds %struct.Reg, %struct.Reg* %10438, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %10439 to i64*
  %10440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10441 = getelementptr inbounds %struct.GPR, %struct.GPR* %10440, i32 0, i32 7
  %10442 = getelementptr inbounds %struct.Reg, %struct.Reg* %10441, i32 0, i32 0
  %RDX.i497 = bitcast %union.anon* %10442 to i64*
  %10443 = load i64, i64* %RDX.i497
  %10444 = load i64, i64* %PC.i496
  %10445 = add i64 %10444, 3
  store i64 %10445, i64* %PC.i496
  %10446 = trunc i64 %10443 to i32
  %10447 = add i32 8, %10446
  %10448 = zext i32 %10447 to i64
  store i64 %10448, i64* %RDX.i497, align 8
  %10449 = icmp ult i32 %10447, %10446
  %10450 = icmp ult i32 %10447, 8
  %10451 = or i1 %10449, %10450
  %10452 = zext i1 %10451 to i8
  %10453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10452, i8* %10453, align 1
  %10454 = and i32 %10447, 255
  %10455 = call i32 @llvm.ctpop.i32(i32 %10454)
  %10456 = trunc i32 %10455 to i8
  %10457 = and i8 %10456, 1
  %10458 = xor i8 %10457, 1
  %10459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10458, i8* %10459, align 1
  %10460 = xor i64 8, %10443
  %10461 = trunc i64 %10460 to i32
  %10462 = xor i32 %10461, %10447
  %10463 = lshr i32 %10462, 4
  %10464 = trunc i32 %10463 to i8
  %10465 = and i8 %10464, 1
  %10466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10465, i8* %10466, align 1
  %10467 = icmp eq i32 %10447, 0
  %10468 = zext i1 %10467 to i8
  %10469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10468, i8* %10469, align 1
  %10470 = lshr i32 %10447, 31
  %10471 = trunc i32 %10470 to i8
  %10472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10471, i8* %10472, align 1
  %10473 = lshr i32 %10446, 31
  %10474 = xor i32 %10470, %10473
  %10475 = add i32 %10474, %10470
  %10476 = icmp eq i32 %10475, 2
  %10477 = zext i1 %10476 to i8
  %10478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10477, i8* %10478, align 1
  store %struct.Memory* %loadMem_4ae3d4, %struct.Memory** %MEMORY
  %loadMem_4ae3d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10480 = getelementptr inbounds %struct.GPR, %struct.GPR* %10479, i32 0, i32 33
  %10481 = getelementptr inbounds %struct.Reg, %struct.Reg* %10480, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %10481 to i64*
  %10482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10483 = getelementptr inbounds %struct.GPR, %struct.GPR* %10482, i32 0, i32 7
  %10484 = getelementptr inbounds %struct.Reg, %struct.Reg* %10483, i32 0, i32 0
  %RDX.i495 = bitcast %union.anon* %10484 to i64*
  %10485 = load i64, i64* %RDX.i495
  %10486 = load i64, i64* %PC.i494
  %10487 = add i64 %10486, 3
  store i64 %10487, i64* %PC.i494
  %10488 = and i64 %10485, 4294967295
  %10489 = shl i64 %10488, 1
  %10490 = trunc i64 %10489 to i32
  %10491 = icmp slt i32 %10490, 0
  %10492 = shl i32 %10490, 1
  %10493 = zext i32 %10492 to i64
  store i64 %10493, i64* %RDX.i495, align 8
  %10494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10495 = zext i1 %10491 to i8
  store i8 %10495, i8* %10494, align 1
  %10496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10497 = and i32 %10492, 254
  %10498 = call i32 @llvm.ctpop.i32(i32 %10497)
  %10499 = trunc i32 %10498 to i8
  %10500 = and i8 %10499, 1
  %10501 = xor i8 %10500, 1
  store i8 %10501, i8* %10496, align 1
  %10502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10502, align 1
  %10503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10504 = icmp eq i32 %10492, 0
  %10505 = zext i1 %10504 to i8
  store i8 %10505, i8* %10503, align 1
  %10506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10507 = lshr i32 %10492, 31
  %10508 = trunc i32 %10507 to i8
  store i8 %10508, i8* %10506, align 1
  %10509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10509, align 1
  store %struct.Memory* %loadMem_4ae3d7, %struct.Memory** %MEMORY
  %loadMem_4ae3da = load %struct.Memory*, %struct.Memory** %MEMORY
  %10510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10511 = getelementptr inbounds %struct.GPR, %struct.GPR* %10510, i32 0, i32 33
  %10512 = getelementptr inbounds %struct.Reg, %struct.Reg* %10511, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %10512 to i64*
  %10513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10514 = getelementptr inbounds %struct.GPR, %struct.GPR* %10513, i32 0, i32 1
  %10515 = getelementptr inbounds %struct.Reg, %struct.Reg* %10514, i32 0, i32 0
  %EAX.i492 = bitcast %union.anon* %10515 to i32*
  %10516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10517 = getelementptr inbounds %struct.GPR, %struct.GPR* %10516, i32 0, i32 7
  %10518 = getelementptr inbounds %struct.Reg, %struct.Reg* %10517, i32 0, i32 0
  %EDX.i493 = bitcast %union.anon* %10518 to i32*
  %10519 = load i32, i32* %EAX.i492
  %10520 = zext i32 %10519 to i64
  %10521 = load i32, i32* %EDX.i493
  %10522 = zext i32 %10521 to i64
  %10523 = load i64, i64* %PC.i491
  %10524 = add i64 %10523, 2
  store i64 %10524, i64* %PC.i491
  %10525 = sub i32 %10519, %10521
  %10526 = icmp ult i32 %10519, %10521
  %10527 = zext i1 %10526 to i8
  %10528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10527, i8* %10528, align 1
  %10529 = and i32 %10525, 255
  %10530 = call i32 @llvm.ctpop.i32(i32 %10529)
  %10531 = trunc i32 %10530 to i8
  %10532 = and i8 %10531, 1
  %10533 = xor i8 %10532, 1
  %10534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10533, i8* %10534, align 1
  %10535 = xor i64 %10522, %10520
  %10536 = trunc i64 %10535 to i32
  %10537 = xor i32 %10536, %10525
  %10538 = lshr i32 %10537, 4
  %10539 = trunc i32 %10538 to i8
  %10540 = and i8 %10539, 1
  %10541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10540, i8* %10541, align 1
  %10542 = icmp eq i32 %10525, 0
  %10543 = zext i1 %10542 to i8
  %10544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10543, i8* %10544, align 1
  %10545 = lshr i32 %10525, 31
  %10546 = trunc i32 %10545 to i8
  %10547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10546, i8* %10547, align 1
  %10548 = lshr i32 %10519, 31
  %10549 = lshr i32 %10521, 31
  %10550 = xor i32 %10549, %10548
  %10551 = xor i32 %10545, %10548
  %10552 = add i32 %10551, %10550
  %10553 = icmp eq i32 %10552, 2
  %10554 = zext i1 %10553 to i8
  %10555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10554, i8* %10555, align 1
  store %struct.Memory* %loadMem_4ae3da, %struct.Memory** %MEMORY
  %loadMem_4ae3dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10557 = getelementptr inbounds %struct.GPR, %struct.GPR* %10556, i32 0, i32 33
  %10558 = getelementptr inbounds %struct.Reg, %struct.Reg* %10557, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %10558 to i64*
  %10559 = load i64, i64* %PC.i490
  %10560 = add i64 %10559, 597
  %10561 = load i64, i64* %PC.i490
  %10562 = add i64 %10561, 6
  %10563 = load i64, i64* %PC.i490
  %10564 = add i64 %10563, 6
  store i64 %10564, i64* %PC.i490
  %10565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10566 = load i8, i8* %10565, align 1
  %10567 = icmp ne i8 %10566, 0
  %10568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10569 = load i8, i8* %10568, align 1
  %10570 = icmp ne i8 %10569, 0
  %10571 = xor i1 %10567, %10570
  %10572 = xor i1 %10571, true
  %10573 = zext i1 %10572 to i8
  store i8 %10573, i8* %BRANCH_TAKEN, align 1
  %10574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10575 = select i1 %10571, i64 %10562, i64 %10560
  store i64 %10575, i64* %10574, align 8
  store %struct.Memory* %loadMem_4ae3dc, %struct.Memory** %MEMORY
  %loadBr_4ae3dc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae3dc = icmp eq i8 %loadBr_4ae3dc, 1
  br i1 %cmpBr_4ae3dc, label %block_.L_4ae631, label %block_4ae3e2

block_4ae3e2:                                     ; preds = %block_.L_4ae3c6
  %loadMem_4ae3e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10577 = getelementptr inbounds %struct.GPR, %struct.GPR* %10576, i32 0, i32 33
  %10578 = getelementptr inbounds %struct.Reg, %struct.Reg* %10577, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %10578 to i64*
  %10579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10580 = getelementptr inbounds %struct.GPR, %struct.GPR* %10579, i32 0, i32 15
  %10581 = getelementptr inbounds %struct.Reg, %struct.Reg* %10580, i32 0, i32 0
  %RBP.i489 = bitcast %union.anon* %10581 to i64*
  %10582 = load i64, i64* %RBP.i489
  %10583 = sub i64 %10582, 12
  %10584 = load i64, i64* %PC.i488
  %10585 = add i64 %10584, 7
  store i64 %10585, i64* %PC.i488
  %10586 = inttoptr i64 %10583 to i32*
  store i32 0, i32* %10586
  store %struct.Memory* %loadMem_4ae3e2, %struct.Memory** %MEMORY
  br label %block_.L_4ae3e9

block_.L_4ae3e9:                                  ; preds = %block_.L_4ae5e0, %block_4ae3e2
  %loadMem_4ae3e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10588 = getelementptr inbounds %struct.GPR, %struct.GPR* %10587, i32 0, i32 33
  %10589 = getelementptr inbounds %struct.Reg, %struct.Reg* %10588, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %10589 to i64*
  %10590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10591 = getelementptr inbounds %struct.GPR, %struct.GPR* %10590, i32 0, i32 1
  %10592 = getelementptr inbounds %struct.Reg, %struct.Reg* %10591, i32 0, i32 0
  %RAX.i486 = bitcast %union.anon* %10592 to i64*
  %10593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10594 = getelementptr inbounds %struct.GPR, %struct.GPR* %10593, i32 0, i32 15
  %10595 = getelementptr inbounds %struct.Reg, %struct.Reg* %10594, i32 0, i32 0
  %RBP.i487 = bitcast %union.anon* %10595 to i64*
  %10596 = load i64, i64* %RBP.i487
  %10597 = sub i64 %10596, 12
  %10598 = load i64, i64* %PC.i485
  %10599 = add i64 %10598, 3
  store i64 %10599, i64* %PC.i485
  %10600 = inttoptr i64 %10597 to i32*
  %10601 = load i32, i32* %10600
  %10602 = zext i32 %10601 to i64
  store i64 %10602, i64* %RAX.i486, align 8
  store %struct.Memory* %loadMem_4ae3e9, %struct.Memory** %MEMORY
  %loadMem_4ae3ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %10603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10604 = getelementptr inbounds %struct.GPR, %struct.GPR* %10603, i32 0, i32 33
  %10605 = getelementptr inbounds %struct.Reg, %struct.Reg* %10604, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %10605 to i64*
  %10606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10607 = getelementptr inbounds %struct.GPR, %struct.GPR* %10606, i32 0, i32 5
  %10608 = getelementptr inbounds %struct.Reg, %struct.Reg* %10607, i32 0, i32 0
  %RCX.i484 = bitcast %union.anon* %10608 to i64*
  %10609 = load i64, i64* %PC.i483
  %10610 = add i64 %10609, 8
  store i64 %10610, i64* %PC.i483
  %10611 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10611, i64* %RCX.i484, align 8
  store %struct.Memory* %loadMem_4ae3ec, %struct.Memory** %MEMORY
  %loadMem_4ae3f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10613 = getelementptr inbounds %struct.GPR, %struct.GPR* %10612, i32 0, i32 33
  %10614 = getelementptr inbounds %struct.Reg, %struct.Reg* %10613, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %10614 to i64*
  %10615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10616 = getelementptr inbounds %struct.GPR, %struct.GPR* %10615, i32 0, i32 5
  %10617 = getelementptr inbounds %struct.Reg, %struct.Reg* %10616, i32 0, i32 0
  %RCX.i481 = bitcast %union.anon* %10617 to i64*
  %10618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10619 = getelementptr inbounds %struct.GPR, %struct.GPR* %10618, i32 0, i32 7
  %10620 = getelementptr inbounds %struct.Reg, %struct.Reg* %10619, i32 0, i32 0
  %RDX.i482 = bitcast %union.anon* %10620 to i64*
  %10621 = load i64, i64* %RCX.i481
  %10622 = add i64 %10621, 52
  %10623 = load i64, i64* %PC.i480
  %10624 = add i64 %10623, 3
  store i64 %10624, i64* %PC.i480
  %10625 = inttoptr i64 %10622 to i32*
  %10626 = load i32, i32* %10625
  %10627 = zext i32 %10626 to i64
  store i64 %10627, i64* %RDX.i482, align 8
  store %struct.Memory* %loadMem_4ae3f4, %struct.Memory** %MEMORY
  %loadMem_4ae3f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10629 = getelementptr inbounds %struct.GPR, %struct.GPR* %10628, i32 0, i32 33
  %10630 = getelementptr inbounds %struct.Reg, %struct.Reg* %10629, i32 0, i32 0
  %PC.i478 = bitcast %union.anon* %10630 to i64*
  %10631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10632 = getelementptr inbounds %struct.GPR, %struct.GPR* %10631, i32 0, i32 7
  %10633 = getelementptr inbounds %struct.Reg, %struct.Reg* %10632, i32 0, i32 0
  %RDX.i479 = bitcast %union.anon* %10633 to i64*
  %10634 = load i64, i64* %RDX.i479
  %10635 = load i64, i64* %PC.i478
  %10636 = add i64 %10635, 3
  store i64 %10636, i64* %PC.i478
  %10637 = trunc i64 %10634 to i32
  %10638 = add i32 8, %10637
  %10639 = zext i32 %10638 to i64
  store i64 %10639, i64* %RDX.i479, align 8
  %10640 = icmp ult i32 %10638, %10637
  %10641 = icmp ult i32 %10638, 8
  %10642 = or i1 %10640, %10641
  %10643 = zext i1 %10642 to i8
  %10644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10643, i8* %10644, align 1
  %10645 = and i32 %10638, 255
  %10646 = call i32 @llvm.ctpop.i32(i32 %10645)
  %10647 = trunc i32 %10646 to i8
  %10648 = and i8 %10647, 1
  %10649 = xor i8 %10648, 1
  %10650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10649, i8* %10650, align 1
  %10651 = xor i64 8, %10634
  %10652 = trunc i64 %10651 to i32
  %10653 = xor i32 %10652, %10638
  %10654 = lshr i32 %10653, 4
  %10655 = trunc i32 %10654 to i8
  %10656 = and i8 %10655, 1
  %10657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10656, i8* %10657, align 1
  %10658 = icmp eq i32 %10638, 0
  %10659 = zext i1 %10658 to i8
  %10660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10659, i8* %10660, align 1
  %10661 = lshr i32 %10638, 31
  %10662 = trunc i32 %10661 to i8
  %10663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10662, i8* %10663, align 1
  %10664 = lshr i32 %10637, 31
  %10665 = xor i32 %10661, %10664
  %10666 = add i32 %10665, %10661
  %10667 = icmp eq i32 %10666, 2
  %10668 = zext i1 %10667 to i8
  %10669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10668, i8* %10669, align 1
  store %struct.Memory* %loadMem_4ae3f7, %struct.Memory** %MEMORY
  %loadMem_4ae3fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10671 = getelementptr inbounds %struct.GPR, %struct.GPR* %10670, i32 0, i32 33
  %10672 = getelementptr inbounds %struct.Reg, %struct.Reg* %10671, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %10672 to i64*
  %10673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10674 = getelementptr inbounds %struct.GPR, %struct.GPR* %10673, i32 0, i32 7
  %10675 = getelementptr inbounds %struct.Reg, %struct.Reg* %10674, i32 0, i32 0
  %RDX.i477 = bitcast %union.anon* %10675 to i64*
  %10676 = load i64, i64* %RDX.i477
  %10677 = load i64, i64* %PC.i476
  %10678 = add i64 %10677, 3
  store i64 %10678, i64* %PC.i476
  %10679 = and i64 %10676, 4294967295
  %10680 = shl i64 %10679, 1
  %10681 = trunc i64 %10680 to i32
  %10682 = icmp slt i32 %10681, 0
  %10683 = shl i32 %10681, 1
  %10684 = zext i32 %10683 to i64
  store i64 %10684, i64* %RDX.i477, align 8
  %10685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10686 = zext i1 %10682 to i8
  store i8 %10686, i8* %10685, align 1
  %10687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10688 = and i32 %10683, 254
  %10689 = call i32 @llvm.ctpop.i32(i32 %10688)
  %10690 = trunc i32 %10689 to i8
  %10691 = and i8 %10690, 1
  %10692 = xor i8 %10691, 1
  store i8 %10692, i8* %10687, align 1
  %10693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10693, align 1
  %10694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10695 = icmp eq i32 %10683, 0
  %10696 = zext i1 %10695 to i8
  store i8 %10696, i8* %10694, align 1
  %10697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10698 = lshr i32 %10683, 31
  %10699 = trunc i32 %10698 to i8
  store i8 %10699, i8* %10697, align 1
  %10700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10700, align 1
  store %struct.Memory* %loadMem_4ae3fa, %struct.Memory** %MEMORY
  %loadMem_4ae3fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10702 = getelementptr inbounds %struct.GPR, %struct.GPR* %10701, i32 0, i32 33
  %10703 = getelementptr inbounds %struct.Reg, %struct.Reg* %10702, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %10703 to i64*
  %10704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10705 = getelementptr inbounds %struct.GPR, %struct.GPR* %10704, i32 0, i32 1
  %10706 = getelementptr inbounds %struct.Reg, %struct.Reg* %10705, i32 0, i32 0
  %EAX.i475 = bitcast %union.anon* %10706 to i32*
  %10707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10708 = getelementptr inbounds %struct.GPR, %struct.GPR* %10707, i32 0, i32 7
  %10709 = getelementptr inbounds %struct.Reg, %struct.Reg* %10708, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %10709 to i32*
  %10710 = load i32, i32* %EAX.i475
  %10711 = zext i32 %10710 to i64
  %10712 = load i32, i32* %EDX.i
  %10713 = zext i32 %10712 to i64
  %10714 = load i64, i64* %PC.i474
  %10715 = add i64 %10714, 2
  store i64 %10715, i64* %PC.i474
  %10716 = sub i32 %10710, %10712
  %10717 = icmp ult i32 %10710, %10712
  %10718 = zext i1 %10717 to i8
  %10719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10718, i8* %10719, align 1
  %10720 = and i32 %10716, 255
  %10721 = call i32 @llvm.ctpop.i32(i32 %10720)
  %10722 = trunc i32 %10721 to i8
  %10723 = and i8 %10722, 1
  %10724 = xor i8 %10723, 1
  %10725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10724, i8* %10725, align 1
  %10726 = xor i64 %10713, %10711
  %10727 = trunc i64 %10726 to i32
  %10728 = xor i32 %10727, %10716
  %10729 = lshr i32 %10728, 4
  %10730 = trunc i32 %10729 to i8
  %10731 = and i8 %10730, 1
  %10732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10731, i8* %10732, align 1
  %10733 = icmp eq i32 %10716, 0
  %10734 = zext i1 %10733 to i8
  %10735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10734, i8* %10735, align 1
  %10736 = lshr i32 %10716, 31
  %10737 = trunc i32 %10736 to i8
  %10738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10737, i8* %10738, align 1
  %10739 = lshr i32 %10710, 31
  %10740 = lshr i32 %10712, 31
  %10741 = xor i32 %10740, %10739
  %10742 = xor i32 %10736, %10739
  %10743 = add i32 %10742, %10741
  %10744 = icmp eq i32 %10743, 2
  %10745 = zext i1 %10744 to i8
  %10746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10745, i8* %10746, align 1
  store %struct.Memory* %loadMem_4ae3fd, %struct.Memory** %MEMORY
  %loadMem_4ae3ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %10747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10748 = getelementptr inbounds %struct.GPR, %struct.GPR* %10747, i32 0, i32 33
  %10749 = getelementptr inbounds %struct.Reg, %struct.Reg* %10748, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %10749 to i64*
  %10750 = load i64, i64* %PC.i473
  %10751 = add i64 %10750, 543
  %10752 = load i64, i64* %PC.i473
  %10753 = add i64 %10752, 6
  %10754 = load i64, i64* %PC.i473
  %10755 = add i64 %10754, 6
  store i64 %10755, i64* %PC.i473
  %10756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10757 = load i8, i8* %10756, align 1
  %10758 = icmp ne i8 %10757, 0
  %10759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10760 = load i8, i8* %10759, align 1
  %10761 = icmp ne i8 %10760, 0
  %10762 = xor i1 %10758, %10761
  %10763 = xor i1 %10762, true
  %10764 = zext i1 %10763 to i8
  store i8 %10764, i8* %BRANCH_TAKEN, align 1
  %10765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10766 = select i1 %10762, i64 %10753, i64 %10751
  store i64 %10766, i64* %10765, align 8
  store %struct.Memory* %loadMem_4ae3ff, %struct.Memory** %MEMORY
  %loadBr_4ae3ff = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae3ff = icmp eq i8 %loadBr_4ae3ff, 1
  br i1 %cmpBr_4ae3ff, label %block_.L_4ae61e, label %block_4ae405

block_4ae405:                                     ; preds = %block_.L_4ae3e9
  %loadMem_4ae405 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10768 = getelementptr inbounds %struct.GPR, %struct.GPR* %10767, i32 0, i32 33
  %10769 = getelementptr inbounds %struct.Reg, %struct.Reg* %10768, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %10769 to i64*
  %10770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10771 = getelementptr inbounds %struct.GPR, %struct.GPR* %10770, i32 0, i32 1
  %10772 = getelementptr inbounds %struct.Reg, %struct.Reg* %10771, i32 0, i32 0
  %RAX.i471 = bitcast %union.anon* %10772 to i64*
  %10773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10774 = getelementptr inbounds %struct.GPR, %struct.GPR* %10773, i32 0, i32 15
  %10775 = getelementptr inbounds %struct.Reg, %struct.Reg* %10774, i32 0, i32 0
  %RBP.i472 = bitcast %union.anon* %10775 to i64*
  %10776 = load i64, i64* %RBP.i472
  %10777 = sub i64 %10776, 928
  %10778 = load i64, i64* %PC.i470
  %10779 = add i64 %10778, 7
  store i64 %10779, i64* %PC.i470
  store i64 %10777, i64* %RAX.i471, align 8
  store %struct.Memory* %loadMem_4ae405, %struct.Memory** %MEMORY
  %loadMem_4ae40c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10781 = getelementptr inbounds %struct.GPR, %struct.GPR* %10780, i32 0, i32 33
  %10782 = getelementptr inbounds %struct.Reg, %struct.Reg* %10781, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %10782 to i64*
  %10783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10784 = getelementptr inbounds %struct.GPR, %struct.GPR* %10783, i32 0, i32 5
  %10785 = getelementptr inbounds %struct.Reg, %struct.Reg* %10784, i32 0, i32 0
  %RCX.i468 = bitcast %union.anon* %10785 to i64*
  %10786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10787 = getelementptr inbounds %struct.GPR, %struct.GPR* %10786, i32 0, i32 15
  %10788 = getelementptr inbounds %struct.Reg, %struct.Reg* %10787, i32 0, i32 0
  %RBP.i469 = bitcast %union.anon* %10788 to i64*
  %10789 = load i64, i64* %RBP.i469
  %10790 = sub i64 %10789, 560
  %10791 = load i64, i64* %PC.i467
  %10792 = add i64 %10791, 7
  store i64 %10792, i64* %PC.i467
  store i64 %10790, i64* %RCX.i468, align 8
  store %struct.Memory* %loadMem_4ae40c, %struct.Memory** %MEMORY
  %loadMem_4ae413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10794 = getelementptr inbounds %struct.GPR, %struct.GPR* %10793, i32 0, i32 33
  %10795 = getelementptr inbounds %struct.Reg, %struct.Reg* %10794, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %10795 to i64*
  %10796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10797 = getelementptr inbounds %struct.GPR, %struct.GPR* %10796, i32 0, i32 7
  %10798 = getelementptr inbounds %struct.Reg, %struct.Reg* %10797, i32 0, i32 0
  %RDX.i466 = bitcast %union.anon* %10798 to i64*
  %10799 = load i64, i64* %PC.i465
  %10800 = add i64 %10799, 8
  store i64 %10800, i64* %PC.i465
  %10801 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %10801, i64* %RDX.i466, align 8
  store %struct.Memory* %loadMem_4ae413, %struct.Memory** %MEMORY
  %loadMem_4ae41b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10803 = getelementptr inbounds %struct.GPR, %struct.GPR* %10802, i32 0, i32 33
  %10804 = getelementptr inbounds %struct.Reg, %struct.Reg* %10803, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %10804 to i64*
  %10805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10806 = getelementptr inbounds %struct.GPR, %struct.GPR* %10805, i32 0, i32 9
  %10807 = getelementptr inbounds %struct.Reg, %struct.Reg* %10806, i32 0, i32 0
  %RSI.i463 = bitcast %union.anon* %10807 to i64*
  %10808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10809 = getelementptr inbounds %struct.GPR, %struct.GPR* %10808, i32 0, i32 15
  %10810 = getelementptr inbounds %struct.Reg, %struct.Reg* %10809, i32 0, i32 0
  %RBP.i464 = bitcast %union.anon* %10810 to i64*
  %10811 = load i64, i64* %RBP.i464
  %10812 = sub i64 %10811, 16
  %10813 = load i64, i64* %PC.i462
  %10814 = add i64 %10813, 4
  store i64 %10814, i64* %PC.i462
  %10815 = inttoptr i64 %10812 to i32*
  %10816 = load i32, i32* %10815
  %10817 = sext i32 %10816 to i64
  store i64 %10817, i64* %RSI.i463, align 8
  store %struct.Memory* %loadMem_4ae41b, %struct.Memory** %MEMORY
  %loadMem_4ae41f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10819 = getelementptr inbounds %struct.GPR, %struct.GPR* %10818, i32 0, i32 33
  %10820 = getelementptr inbounds %struct.Reg, %struct.Reg* %10819, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %10820 to i64*
  %10821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10822 = getelementptr inbounds %struct.GPR, %struct.GPR* %10821, i32 0, i32 7
  %10823 = getelementptr inbounds %struct.Reg, %struct.Reg* %10822, i32 0, i32 0
  %RDX.i460 = bitcast %union.anon* %10823 to i64*
  %10824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10825 = getelementptr inbounds %struct.GPR, %struct.GPR* %10824, i32 0, i32 9
  %10826 = getelementptr inbounds %struct.Reg, %struct.Reg* %10825, i32 0, i32 0
  %RSI.i461 = bitcast %union.anon* %10826 to i64*
  %10827 = load i64, i64* %RDX.i460
  %10828 = load i64, i64* %RSI.i461
  %10829 = mul i64 %10828, 8
  %10830 = add i64 %10829, %10827
  %10831 = load i64, i64* %PC.i459
  %10832 = add i64 %10831, 4
  store i64 %10832, i64* %PC.i459
  %10833 = inttoptr i64 %10830 to i64*
  %10834 = load i64, i64* %10833
  store i64 %10834, i64* %RDX.i460, align 8
  store %struct.Memory* %loadMem_4ae41f, %struct.Memory** %MEMORY
  %loadMem_4ae423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10836 = getelementptr inbounds %struct.GPR, %struct.GPR* %10835, i32 0, i32 33
  %10837 = getelementptr inbounds %struct.Reg, %struct.Reg* %10836, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %10837 to i64*
  %10838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10839 = getelementptr inbounds %struct.GPR, %struct.GPR* %10838, i32 0, i32 7
  %10840 = getelementptr inbounds %struct.Reg, %struct.Reg* %10839, i32 0, i32 0
  %RDX.i458 = bitcast %union.anon* %10840 to i64*
  %10841 = load i64, i64* %RDX.i458
  %10842 = add i64 %10841, 6448
  %10843 = load i64, i64* %PC.i457
  %10844 = add i64 %10843, 7
  store i64 %10844, i64* %PC.i457
  %10845 = inttoptr i64 %10842 to i64*
  %10846 = load i64, i64* %10845
  store i64 %10846, i64* %RDX.i458, align 8
  store %struct.Memory* %loadMem_4ae423, %struct.Memory** %MEMORY
  %loadMem_4ae42a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10848 = getelementptr inbounds %struct.GPR, %struct.GPR* %10847, i32 0, i32 33
  %10849 = getelementptr inbounds %struct.Reg, %struct.Reg* %10848, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %10849 to i64*
  %10850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10851 = getelementptr inbounds %struct.GPR, %struct.GPR* %10850, i32 0, i32 9
  %10852 = getelementptr inbounds %struct.Reg, %struct.Reg* %10851, i32 0, i32 0
  %RSI.i455 = bitcast %union.anon* %10852 to i64*
  %10853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10854 = getelementptr inbounds %struct.GPR, %struct.GPR* %10853, i32 0, i32 15
  %10855 = getelementptr inbounds %struct.Reg, %struct.Reg* %10854, i32 0, i32 0
  %RBP.i456 = bitcast %union.anon* %10855 to i64*
  %10856 = load i64, i64* %RBP.i456
  %10857 = sub i64 %10856, 8
  %10858 = load i64, i64* %PC.i454
  %10859 = add i64 %10858, 4
  store i64 %10859, i64* %PC.i454
  %10860 = inttoptr i64 %10857 to i32*
  %10861 = load i32, i32* %10860
  %10862 = sext i32 %10861 to i64
  store i64 %10862, i64* %RSI.i455, align 8
  store %struct.Memory* %loadMem_4ae42a, %struct.Memory** %MEMORY
  %loadMem_4ae42e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10864 = getelementptr inbounds %struct.GPR, %struct.GPR* %10863, i32 0, i32 33
  %10865 = getelementptr inbounds %struct.Reg, %struct.Reg* %10864, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %10865 to i64*
  %10866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10867 = getelementptr inbounds %struct.GPR, %struct.GPR* %10866, i32 0, i32 7
  %10868 = getelementptr inbounds %struct.Reg, %struct.Reg* %10867, i32 0, i32 0
  %RDX.i452 = bitcast %union.anon* %10868 to i64*
  %10869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10870 = getelementptr inbounds %struct.GPR, %struct.GPR* %10869, i32 0, i32 9
  %10871 = getelementptr inbounds %struct.Reg, %struct.Reg* %10870, i32 0, i32 0
  %RSI.i453 = bitcast %union.anon* %10871 to i64*
  %10872 = load i64, i64* %RDX.i452
  %10873 = load i64, i64* %RSI.i453
  %10874 = mul i64 %10873, 8
  %10875 = add i64 %10874, %10872
  %10876 = load i64, i64* %PC.i451
  %10877 = add i64 %10876, 4
  store i64 %10877, i64* %PC.i451
  %10878 = inttoptr i64 %10875 to i64*
  %10879 = load i64, i64* %10878
  store i64 %10879, i64* %RDX.i452, align 8
  store %struct.Memory* %loadMem_4ae42e, %struct.Memory** %MEMORY
  %loadMem_4ae432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10881 = getelementptr inbounds %struct.GPR, %struct.GPR* %10880, i32 0, i32 33
  %10882 = getelementptr inbounds %struct.Reg, %struct.Reg* %10881, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %10882 to i64*
  %10883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10884 = getelementptr inbounds %struct.GPR, %struct.GPR* %10883, i32 0, i32 9
  %10885 = getelementptr inbounds %struct.Reg, %struct.Reg* %10884, i32 0, i32 0
  %RSI.i449 = bitcast %union.anon* %10885 to i64*
  %10886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10887 = getelementptr inbounds %struct.GPR, %struct.GPR* %10886, i32 0, i32 15
  %10888 = getelementptr inbounds %struct.Reg, %struct.Reg* %10887, i32 0, i32 0
  %RBP.i450 = bitcast %union.anon* %10888 to i64*
  %10889 = load i64, i64* %RBP.i450
  %10890 = sub i64 %10889, 12
  %10891 = load i64, i64* %PC.i448
  %10892 = add i64 %10891, 4
  store i64 %10892, i64* %PC.i448
  %10893 = inttoptr i64 %10890 to i32*
  %10894 = load i32, i32* %10893
  %10895 = sext i32 %10894 to i64
  store i64 %10895, i64* %RSI.i449, align 8
  store %struct.Memory* %loadMem_4ae432, %struct.Memory** %MEMORY
  %loadMem_4ae436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10897 = getelementptr inbounds %struct.GPR, %struct.GPR* %10896, i32 0, i32 33
  %10898 = getelementptr inbounds %struct.Reg, %struct.Reg* %10897, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %10898 to i64*
  %10899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10900 = getelementptr inbounds %struct.GPR, %struct.GPR* %10899, i32 0, i32 7
  %10901 = getelementptr inbounds %struct.Reg, %struct.Reg* %10900, i32 0, i32 0
  %RDX.i445 = bitcast %union.anon* %10901 to i64*
  %10902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10903 = getelementptr inbounds %struct.GPR, %struct.GPR* %10902, i32 0, i32 9
  %10904 = getelementptr inbounds %struct.Reg, %struct.Reg* %10903, i32 0, i32 0
  %RSI.i446 = bitcast %union.anon* %10904 to i64*
  %10905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10906 = getelementptr inbounds %struct.GPR, %struct.GPR* %10905, i32 0, i32 11
  %10907 = getelementptr inbounds %struct.Reg, %struct.Reg* %10906, i32 0, i32 0
  %RDI.i447 = bitcast %union.anon* %10907 to i64*
  %10908 = load i64, i64* %RDX.i445
  %10909 = load i64, i64* %RSI.i446
  %10910 = mul i64 %10909, 2
  %10911 = add i64 %10910, %10908
  %10912 = load i64, i64* %PC.i444
  %10913 = add i64 %10912, 4
  store i64 %10913, i64* %PC.i444
  %10914 = inttoptr i64 %10911 to i16*
  %10915 = load i16, i16* %10914
  %10916 = zext i16 %10915 to i64
  store i64 %10916, i64* %RDI.i447, align 8
  store %struct.Memory* %loadMem_4ae436, %struct.Memory** %MEMORY
  %loadMem_4ae43a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10918 = getelementptr inbounds %struct.GPR, %struct.GPR* %10917, i32 0, i32 33
  %10919 = getelementptr inbounds %struct.Reg, %struct.Reg* %10918, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %10919 to i64*
  %10920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10921 = getelementptr inbounds %struct.GPR, %struct.GPR* %10920, i32 0, i32 7
  %10922 = getelementptr inbounds %struct.Reg, %struct.Reg* %10921, i32 0, i32 0
  %RDX.i442 = bitcast %union.anon* %10922 to i64*
  %10923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10924 = getelementptr inbounds %struct.GPR, %struct.GPR* %10923, i32 0, i32 15
  %10925 = getelementptr inbounds %struct.Reg, %struct.Reg* %10924, i32 0, i32 0
  %RBP.i443 = bitcast %union.anon* %10925 to i64*
  %10926 = load i64, i64* %RBP.i443
  %10927 = sub i64 %10926, 932
  %10928 = load i64, i64* %PC.i441
  %10929 = add i64 %10928, 7
  store i64 %10929, i64* %PC.i441
  %10930 = inttoptr i64 %10927 to i32*
  %10931 = load i32, i32* %10930
  %10932 = sext i32 %10931 to i64
  store i64 %10932, i64* %RDX.i442, align 8
  store %struct.Memory* %loadMem_4ae43a, %struct.Memory** %MEMORY
  %loadMem_4ae441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10934 = getelementptr inbounds %struct.GPR, %struct.GPR* %10933, i32 0, i32 33
  %10935 = getelementptr inbounds %struct.Reg, %struct.Reg* %10934, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %10935 to i64*
  %10936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10937 = getelementptr inbounds %struct.GPR, %struct.GPR* %10936, i32 0, i32 7
  %10938 = getelementptr inbounds %struct.Reg, %struct.Reg* %10937, i32 0, i32 0
  %RDX.i440 = bitcast %union.anon* %10938 to i64*
  %10939 = load i64, i64* %RDX.i440
  %10940 = load i64, i64* %PC.i439
  %10941 = add i64 %10940, 7
  store i64 %10941, i64* %PC.i439
  %10942 = sext i64 %10939 to i128
  %10943 = and i128 %10942, -18446744073709551616
  %10944 = zext i64 %10939 to i128
  %10945 = or i128 %10943, %10944
  %10946 = mul i128 180, %10945
  %10947 = trunc i128 %10946 to i64
  store i64 %10947, i64* %RDX.i440, align 8
  %10948 = sext i64 %10947 to i128
  %10949 = icmp ne i128 %10948, %10946
  %10950 = zext i1 %10949 to i8
  %10951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10950, i8* %10951, align 1
  %10952 = trunc i128 %10946 to i32
  %10953 = and i32 %10952, 255
  %10954 = call i32 @llvm.ctpop.i32(i32 %10953)
  %10955 = trunc i32 %10954 to i8
  %10956 = and i8 %10955, 1
  %10957 = xor i8 %10956, 1
  %10958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10957, i8* %10958, align 1
  %10959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10959, align 1
  %10960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10960, align 1
  %10961 = lshr i64 %10947, 63
  %10962 = trunc i64 %10961 to i8
  %10963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10962, i8* %10963, align 1
  %10964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10950, i8* %10964, align 1
  store %struct.Memory* %loadMem_4ae441, %struct.Memory** %MEMORY
  %loadMem_4ae448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10966 = getelementptr inbounds %struct.GPR, %struct.GPR* %10965, i32 0, i32 33
  %10967 = getelementptr inbounds %struct.Reg, %struct.Reg* %10966, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %10967 to i64*
  %10968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10969 = getelementptr inbounds %struct.GPR, %struct.GPR* %10968, i32 0, i32 5
  %10970 = getelementptr inbounds %struct.Reg, %struct.Reg* %10969, i32 0, i32 0
  %RCX.i437 = bitcast %union.anon* %10970 to i64*
  %10971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10972 = getelementptr inbounds %struct.GPR, %struct.GPR* %10971, i32 0, i32 7
  %10973 = getelementptr inbounds %struct.Reg, %struct.Reg* %10972, i32 0, i32 0
  %RDX.i438 = bitcast %union.anon* %10973 to i64*
  %10974 = load i64, i64* %RCX.i437
  %10975 = load i64, i64* %RDX.i438
  %10976 = load i64, i64* %PC.i436
  %10977 = add i64 %10976, 3
  store i64 %10977, i64* %PC.i436
  %10978 = add i64 %10975, %10974
  store i64 %10978, i64* %RCX.i437, align 8
  %10979 = icmp ult i64 %10978, %10974
  %10980 = icmp ult i64 %10978, %10975
  %10981 = or i1 %10979, %10980
  %10982 = zext i1 %10981 to i8
  %10983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10982, i8* %10983, align 1
  %10984 = trunc i64 %10978 to i32
  %10985 = and i32 %10984, 255
  %10986 = call i32 @llvm.ctpop.i32(i32 %10985)
  %10987 = trunc i32 %10986 to i8
  %10988 = and i8 %10987, 1
  %10989 = xor i8 %10988, 1
  %10990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10989, i8* %10990, align 1
  %10991 = xor i64 %10975, %10974
  %10992 = xor i64 %10991, %10978
  %10993 = lshr i64 %10992, 4
  %10994 = trunc i64 %10993 to i8
  %10995 = and i8 %10994, 1
  %10996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10995, i8* %10996, align 1
  %10997 = icmp eq i64 %10978, 0
  %10998 = zext i1 %10997 to i8
  %10999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10998, i8* %10999, align 1
  %11000 = lshr i64 %10978, 63
  %11001 = trunc i64 %11000 to i8
  %11002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11001, i8* %11002, align 1
  %11003 = lshr i64 %10974, 63
  %11004 = lshr i64 %10975, 63
  %11005 = xor i64 %11000, %11003
  %11006 = xor i64 %11000, %11004
  %11007 = add i64 %11005, %11006
  %11008 = icmp eq i64 %11007, 2
  %11009 = zext i1 %11008 to i8
  %11010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11009, i8* %11010, align 1
  store %struct.Memory* %loadMem_4ae448, %struct.Memory** %MEMORY
  %loadMem_4ae44b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11012 = getelementptr inbounds %struct.GPR, %struct.GPR* %11011, i32 0, i32 33
  %11013 = getelementptr inbounds %struct.Reg, %struct.Reg* %11012, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %11013 to i64*
  %11014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11015 = getelementptr inbounds %struct.GPR, %struct.GPR* %11014, i32 0, i32 7
  %11016 = getelementptr inbounds %struct.Reg, %struct.Reg* %11015, i32 0, i32 0
  %RDX.i434 = bitcast %union.anon* %11016 to i64*
  %11017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11018 = getelementptr inbounds %struct.GPR, %struct.GPR* %11017, i32 0, i32 15
  %11019 = getelementptr inbounds %struct.Reg, %struct.Reg* %11018, i32 0, i32 0
  %RBP.i435 = bitcast %union.anon* %11019 to i64*
  %11020 = load i64, i64* %RBP.i435
  %11021 = sub i64 %11020, 16
  %11022 = load i64, i64* %PC.i433
  %11023 = add i64 %11022, 4
  store i64 %11023, i64* %PC.i433
  %11024 = inttoptr i64 %11021 to i32*
  %11025 = load i32, i32* %11024
  %11026 = sext i32 %11025 to i64
  store i64 %11026, i64* %RDX.i434, align 8
  store %struct.Memory* %loadMem_4ae44b, %struct.Memory** %MEMORY
  %loadMem_4ae44f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11028 = getelementptr inbounds %struct.GPR, %struct.GPR* %11027, i32 0, i32 33
  %11029 = getelementptr inbounds %struct.Reg, %struct.Reg* %11028, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %11029 to i64*
  %11030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11031 = getelementptr inbounds %struct.GPR, %struct.GPR* %11030, i32 0, i32 7
  %11032 = getelementptr inbounds %struct.Reg, %struct.Reg* %11031, i32 0, i32 0
  %RDX.i432 = bitcast %union.anon* %11032 to i64*
  %11033 = load i64, i64* %RDX.i432
  %11034 = load i64, i64* %PC.i431
  %11035 = add i64 %11034, 4
  store i64 %11035, i64* %PC.i431
  %11036 = sext i64 %11033 to i128
  %11037 = and i128 %11036, -18446744073709551616
  %11038 = zext i64 %11033 to i128
  %11039 = or i128 %11037, %11038
  %11040 = mul i128 12, %11039
  %11041 = trunc i128 %11040 to i64
  store i64 %11041, i64* %RDX.i432, align 8
  %11042 = sext i64 %11041 to i128
  %11043 = icmp ne i128 %11042, %11040
  %11044 = zext i1 %11043 to i8
  %11045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11044, i8* %11045, align 1
  %11046 = trunc i128 %11040 to i32
  %11047 = and i32 %11046, 255
  %11048 = call i32 @llvm.ctpop.i32(i32 %11047)
  %11049 = trunc i32 %11048 to i8
  %11050 = and i8 %11049, 1
  %11051 = xor i8 %11050, 1
  %11052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11051, i8* %11052, align 1
  %11053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11053, align 1
  %11054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11054, align 1
  %11055 = lshr i64 %11041, 63
  %11056 = trunc i64 %11055 to i8
  %11057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11056, i8* %11057, align 1
  %11058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11044, i8* %11058, align 1
  store %struct.Memory* %loadMem_4ae44f, %struct.Memory** %MEMORY
  %loadMem_4ae453 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11060 = getelementptr inbounds %struct.GPR, %struct.GPR* %11059, i32 0, i32 33
  %11061 = getelementptr inbounds %struct.Reg, %struct.Reg* %11060, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %11061 to i64*
  %11062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11063 = getelementptr inbounds %struct.GPR, %struct.GPR* %11062, i32 0, i32 5
  %11064 = getelementptr inbounds %struct.Reg, %struct.Reg* %11063, i32 0, i32 0
  %RCX.i429 = bitcast %union.anon* %11064 to i64*
  %11065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11066 = getelementptr inbounds %struct.GPR, %struct.GPR* %11065, i32 0, i32 7
  %11067 = getelementptr inbounds %struct.Reg, %struct.Reg* %11066, i32 0, i32 0
  %RDX.i430 = bitcast %union.anon* %11067 to i64*
  %11068 = load i64, i64* %RCX.i429
  %11069 = load i64, i64* %RDX.i430
  %11070 = load i64, i64* %PC.i428
  %11071 = add i64 %11070, 3
  store i64 %11071, i64* %PC.i428
  %11072 = add i64 %11069, %11068
  store i64 %11072, i64* %RCX.i429, align 8
  %11073 = icmp ult i64 %11072, %11068
  %11074 = icmp ult i64 %11072, %11069
  %11075 = or i1 %11073, %11074
  %11076 = zext i1 %11075 to i8
  %11077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11076, i8* %11077, align 1
  %11078 = trunc i64 %11072 to i32
  %11079 = and i32 %11078, 255
  %11080 = call i32 @llvm.ctpop.i32(i32 %11079)
  %11081 = trunc i32 %11080 to i8
  %11082 = and i8 %11081, 1
  %11083 = xor i8 %11082, 1
  %11084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11083, i8* %11084, align 1
  %11085 = xor i64 %11069, %11068
  %11086 = xor i64 %11085, %11072
  %11087 = lshr i64 %11086, 4
  %11088 = trunc i64 %11087 to i8
  %11089 = and i8 %11088, 1
  %11090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11089, i8* %11090, align 1
  %11091 = icmp eq i64 %11072, 0
  %11092 = zext i1 %11091 to i8
  %11093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11092, i8* %11093, align 1
  %11094 = lshr i64 %11072, 63
  %11095 = trunc i64 %11094 to i8
  %11096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11095, i8* %11096, align 1
  %11097 = lshr i64 %11068, 63
  %11098 = lshr i64 %11069, 63
  %11099 = xor i64 %11094, %11097
  %11100 = xor i64 %11094, %11098
  %11101 = add i64 %11099, %11100
  %11102 = icmp eq i64 %11101, 2
  %11103 = zext i1 %11102 to i8
  %11104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11103, i8* %11104, align 1
  store %struct.Memory* %loadMem_4ae453, %struct.Memory** %MEMORY
  %loadMem_4ae456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11106 = getelementptr inbounds %struct.GPR, %struct.GPR* %11105, i32 0, i32 33
  %11107 = getelementptr inbounds %struct.Reg, %struct.Reg* %11106, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %11107 to i64*
  %11108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11109 = getelementptr inbounds %struct.GPR, %struct.GPR* %11108, i32 0, i32 5
  %11110 = getelementptr inbounds %struct.Reg, %struct.Reg* %11109, i32 0, i32 0
  %RCX.i426 = bitcast %union.anon* %11110 to i64*
  %11111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11112 = getelementptr inbounds %struct.GPR, %struct.GPR* %11111, i32 0, i32 11
  %11113 = getelementptr inbounds %struct.Reg, %struct.Reg* %11112, i32 0, i32 0
  %RDI.i427 = bitcast %union.anon* %11113 to i64*
  %11114 = load i64, i64* %RDI.i427
  %11115 = load i64, i64* %RCX.i426
  %11116 = load i64, i64* %PC.i425
  %11117 = add i64 %11116, 3
  store i64 %11117, i64* %PC.i425
  %11118 = inttoptr i64 %11115 to i32*
  %11119 = load i32, i32* %11118
  %11120 = shl i64 %11114, 32
  %11121 = ashr exact i64 %11120, 32
  %11122 = sext i32 %11119 to i64
  %11123 = mul i64 %11122, %11121
  %11124 = trunc i64 %11123 to i32
  %11125 = and i64 %11123, 4294967295
  store i64 %11125, i64* %RDI.i427, align 8
  %11126 = shl i64 %11123, 32
  %11127 = ashr exact i64 %11126, 32
  %11128 = icmp ne i64 %11127, %11123
  %11129 = zext i1 %11128 to i8
  %11130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11129, i8* %11130, align 1
  %11131 = and i32 %11124, 255
  %11132 = call i32 @llvm.ctpop.i32(i32 %11131)
  %11133 = trunc i32 %11132 to i8
  %11134 = and i8 %11133, 1
  %11135 = xor i8 %11134, 1
  %11136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11135, i8* %11136, align 1
  %11137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11137, align 1
  %11138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11138, align 1
  %11139 = lshr i32 %11124, 31
  %11140 = trunc i32 %11139 to i8
  %11141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11140, i8* %11141, align 1
  %11142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11129, i8* %11142, align 1
  store %struct.Memory* %loadMem_4ae456, %struct.Memory** %MEMORY
  %loadMem_4ae459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11144 = getelementptr inbounds %struct.GPR, %struct.GPR* %11143, i32 0, i32 33
  %11145 = getelementptr inbounds %struct.Reg, %struct.Reg* %11144, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %11145 to i64*
  %11146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11147 = getelementptr inbounds %struct.GPR, %struct.GPR* %11146, i32 0, i32 11
  %11148 = getelementptr inbounds %struct.Reg, %struct.Reg* %11147, i32 0, i32 0
  %RDI.i424 = bitcast %union.anon* %11148 to i64*
  %11149 = load i64, i64* %RDI.i424
  %11150 = load i64, i64* %PC.i423
  %11151 = add i64 %11150, 7
  store i64 %11151, i64* %PC.i423
  %11152 = trunc i64 %11149 to i32
  %11153 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %11154 = add i32 %11153, %11152
  %11155 = zext i32 %11154 to i64
  store i64 %11155, i64* %RDI.i424, align 8
  %11156 = icmp ult i32 %11154, %11152
  %11157 = icmp ult i32 %11154, %11153
  %11158 = or i1 %11156, %11157
  %11159 = zext i1 %11158 to i8
  %11160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11159, i8* %11160, align 1
  %11161 = and i32 %11154, 255
  %11162 = call i32 @llvm.ctpop.i32(i32 %11161)
  %11163 = trunc i32 %11162 to i8
  %11164 = and i8 %11163, 1
  %11165 = xor i8 %11164, 1
  %11166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11165, i8* %11166, align 1
  %11167 = xor i32 %11153, %11152
  %11168 = xor i32 %11167, %11154
  %11169 = lshr i32 %11168, 4
  %11170 = trunc i32 %11169 to i8
  %11171 = and i8 %11170, 1
  %11172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11171, i8* %11172, align 1
  %11173 = icmp eq i32 %11154, 0
  %11174 = zext i1 %11173 to i8
  %11175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11174, i8* %11175, align 1
  %11176 = lshr i32 %11154, 31
  %11177 = trunc i32 %11176 to i8
  %11178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11177, i8* %11178, align 1
  %11179 = lshr i32 %11152, 31
  %11180 = lshr i32 %11153, 31
  %11181 = xor i32 %11176, %11179
  %11182 = xor i32 %11176, %11180
  %11183 = add i32 %11181, %11182
  %11184 = icmp eq i32 %11183, 2
  %11185 = zext i1 %11184 to i8
  %11186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11185, i8* %11186, align 1
  store %struct.Memory* %loadMem_4ae459, %struct.Memory** %MEMORY
  %loadMem_4ae460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11188 = getelementptr inbounds %struct.GPR, %struct.GPR* %11187, i32 0, i32 33
  %11189 = getelementptr inbounds %struct.Reg, %struct.Reg* %11188, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %11189 to i64*
  %11190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11191 = getelementptr inbounds %struct.GPR, %struct.GPR* %11190, i32 0, i32 5
  %11192 = getelementptr inbounds %struct.Reg, %struct.Reg* %11191, i32 0, i32 0
  %RCX.i422 = bitcast %union.anon* %11192 to i64*
  %11193 = load i64, i64* %PC.i421
  %11194 = add i64 %11193, 7
  store i64 %11194, i64* %PC.i421
  %11195 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %11196 = zext i32 %11195 to i64
  store i64 %11196, i64* %RCX.i422, align 8
  store %struct.Memory* %loadMem_4ae460, %struct.Memory** %MEMORY
  %loadMem_4ae467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11198 = getelementptr inbounds %struct.GPR, %struct.GPR* %11197, i32 0, i32 33
  %11199 = getelementptr inbounds %struct.Reg, %struct.Reg* %11198, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %11199 to i64*
  %11200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11201 = getelementptr inbounds %struct.GPR, %struct.GPR* %11200, i32 0, i32 5
  %11202 = getelementptr inbounds %struct.Reg, %struct.Reg* %11201, i32 0, i32 0
  %11203 = bitcast %union.anon* %11202 to %struct.anon.2*
  %CL.i418 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11203, i32 0, i32 0
  %11204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11205 = getelementptr inbounds %struct.GPR, %struct.GPR* %11204, i32 0, i32 11
  %11206 = getelementptr inbounds %struct.Reg, %struct.Reg* %11205, i32 0, i32 0
  %RDI.i419 = bitcast %union.anon* %11206 to i64*
  %11207 = load i64, i64* %RDI.i419
  %11208 = load i8, i8* %CL.i418
  %11209 = zext i8 %11208 to i64
  %11210 = load i64, i64* %PC.i417
  %11211 = add i64 %11210, 2
  store i64 %11211, i64* %PC.i417
  %11212 = trunc i64 %11209 to i5
  switch i5 %11212, label %11216 [
    i5 0, label %routine_sarl__cl___edi.exit420
    i5 1, label %11213
  ]

; <label>:11213:                                  ; preds = %block_4ae405
  %11214 = shl i64 %11207, 32
  %11215 = ashr i64 %11214, 33
  br label %11223

; <label>:11216:                                  ; preds = %block_4ae405
  %11217 = and i64 %11209, 31
  %11218 = add i64 %11217, -1
  %11219 = shl i64 %11207, 32
  %11220 = ashr exact i64 %11219, 32
  %11221 = ashr i64 %11220, %11218
  %11222 = lshr i64 %11221, 1
  br label %11223

; <label>:11223:                                  ; preds = %11216, %11213
  %11224 = phi i64 [ %11222, %11216 ], [ %11215, %11213 ]
  %11225 = phi i64 [ %11221, %11216 ], [ %11207, %11213 ]
  %11226 = trunc i64 %11225 to i8
  %11227 = and i8 %11226, 1
  %11228 = trunc i64 %11224 to i32
  %11229 = and i64 %11224, 4294967295
  store i64 %11229, i64* %RDI.i419, align 8
  %11230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11227, i8* %11230, align 1
  %11231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11232 = and i32 %11228, 255
  %11233 = call i32 @llvm.ctpop.i32(i32 %11232)
  %11234 = trunc i32 %11233 to i8
  %11235 = and i8 %11234, 1
  %11236 = xor i8 %11235, 1
  store i8 %11236, i8* %11231, align 1
  %11237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11237, align 1
  %11238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11239 = icmp eq i32 %11228, 0
  %11240 = zext i1 %11239 to i8
  store i8 %11240, i8* %11238, align 1
  %11241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11242 = lshr i32 %11228, 31
  %11243 = trunc i32 %11242 to i8
  store i8 %11243, i8* %11241, align 1
  %11244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11244, align 1
  br label %routine_sarl__cl___edi.exit420

routine_sarl__cl___edi.exit420:                   ; preds = %block_4ae405, %11223
  store %struct.Memory* %loadMem_4ae467, %struct.Memory** %MEMORY
  %loadMem_4ae469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11246 = getelementptr inbounds %struct.GPR, %struct.GPR* %11245, i32 0, i32 33
  %11247 = getelementptr inbounds %struct.Reg, %struct.Reg* %11246, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %11247 to i64*
  %11248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11249 = getelementptr inbounds %struct.GPR, %struct.GPR* %11248, i32 0, i32 7
  %11250 = getelementptr inbounds %struct.Reg, %struct.Reg* %11249, i32 0, i32 0
  %RDX.i415 = bitcast %union.anon* %11250 to i64*
  %11251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11252 = getelementptr inbounds %struct.GPR, %struct.GPR* %11251, i32 0, i32 15
  %11253 = getelementptr inbounds %struct.Reg, %struct.Reg* %11252, i32 0, i32 0
  %RBP.i416 = bitcast %union.anon* %11253 to i64*
  %11254 = load i64, i64* %RBP.i416
  %11255 = sub i64 %11254, 932
  %11256 = load i64, i64* %PC.i414
  %11257 = add i64 %11256, 7
  store i64 %11257, i64* %PC.i414
  %11258 = inttoptr i64 %11255 to i32*
  %11259 = load i32, i32* %11258
  %11260 = sext i32 %11259 to i64
  store i64 %11260, i64* %RDX.i415, align 8
  store %struct.Memory* %loadMem_4ae469, %struct.Memory** %MEMORY
  %loadMem_4ae470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11262 = getelementptr inbounds %struct.GPR, %struct.GPR* %11261, i32 0, i32 33
  %11263 = getelementptr inbounds %struct.Reg, %struct.Reg* %11262, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %11263 to i64*
  %11264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11265 = getelementptr inbounds %struct.GPR, %struct.GPR* %11264, i32 0, i32 7
  %11266 = getelementptr inbounds %struct.Reg, %struct.Reg* %11265, i32 0, i32 0
  %RDX.i413 = bitcast %union.anon* %11266 to i64*
  %11267 = load i64, i64* %RDX.i413
  %11268 = load i64, i64* %PC.i412
  %11269 = add i64 %11268, 7
  store i64 %11269, i64* %PC.i412
  %11270 = sext i64 %11267 to i128
  %11271 = and i128 %11270, -18446744073709551616
  %11272 = zext i64 %11267 to i128
  %11273 = or i128 %11271, %11272
  %11274 = mul i128 180, %11273
  %11275 = trunc i128 %11274 to i64
  store i64 %11275, i64* %RDX.i413, align 8
  %11276 = sext i64 %11275 to i128
  %11277 = icmp ne i128 %11276, %11274
  %11278 = zext i1 %11277 to i8
  %11279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11278, i8* %11279, align 1
  %11280 = trunc i128 %11274 to i32
  %11281 = and i32 %11280, 255
  %11282 = call i32 @llvm.ctpop.i32(i32 %11281)
  %11283 = trunc i32 %11282 to i8
  %11284 = and i8 %11283, 1
  %11285 = xor i8 %11284, 1
  %11286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11285, i8* %11286, align 1
  %11287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11287, align 1
  %11288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11288, align 1
  %11289 = lshr i64 %11275, 63
  %11290 = trunc i64 %11289 to i8
  %11291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11290, i8* %11291, align 1
  %11292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11278, i8* %11292, align 1
  store %struct.Memory* %loadMem_4ae470, %struct.Memory** %MEMORY
  %loadMem_4ae477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11294 = getelementptr inbounds %struct.GPR, %struct.GPR* %11293, i32 0, i32 33
  %11295 = getelementptr inbounds %struct.Reg, %struct.Reg* %11294, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %11295 to i64*
  %11296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11297 = getelementptr inbounds %struct.GPR, %struct.GPR* %11296, i32 0, i32 1
  %11298 = getelementptr inbounds %struct.Reg, %struct.Reg* %11297, i32 0, i32 0
  %RAX.i410 = bitcast %union.anon* %11298 to i64*
  %11299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11300 = getelementptr inbounds %struct.GPR, %struct.GPR* %11299, i32 0, i32 7
  %11301 = getelementptr inbounds %struct.Reg, %struct.Reg* %11300, i32 0, i32 0
  %RDX.i411 = bitcast %union.anon* %11301 to i64*
  %11302 = load i64, i64* %RAX.i410
  %11303 = load i64, i64* %RDX.i411
  %11304 = load i64, i64* %PC.i409
  %11305 = add i64 %11304, 3
  store i64 %11305, i64* %PC.i409
  %11306 = add i64 %11303, %11302
  store i64 %11306, i64* %RAX.i410, align 8
  %11307 = icmp ult i64 %11306, %11302
  %11308 = icmp ult i64 %11306, %11303
  %11309 = or i1 %11307, %11308
  %11310 = zext i1 %11309 to i8
  %11311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11310, i8* %11311, align 1
  %11312 = trunc i64 %11306 to i32
  %11313 = and i32 %11312, 255
  %11314 = call i32 @llvm.ctpop.i32(i32 %11313)
  %11315 = trunc i32 %11314 to i8
  %11316 = and i8 %11315, 1
  %11317 = xor i8 %11316, 1
  %11318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11317, i8* %11318, align 1
  %11319 = xor i64 %11303, %11302
  %11320 = xor i64 %11319, %11306
  %11321 = lshr i64 %11320, 4
  %11322 = trunc i64 %11321 to i8
  %11323 = and i8 %11322, 1
  %11324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11323, i8* %11324, align 1
  %11325 = icmp eq i64 %11306, 0
  %11326 = zext i1 %11325 to i8
  %11327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11326, i8* %11327, align 1
  %11328 = lshr i64 %11306, 63
  %11329 = trunc i64 %11328 to i8
  %11330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11329, i8* %11330, align 1
  %11331 = lshr i64 %11302, 63
  %11332 = lshr i64 %11303, 63
  %11333 = xor i64 %11328, %11331
  %11334 = xor i64 %11328, %11332
  %11335 = add i64 %11333, %11334
  %11336 = icmp eq i64 %11335, 2
  %11337 = zext i1 %11336 to i8
  %11338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11337, i8* %11338, align 1
  store %struct.Memory* %loadMem_4ae477, %struct.Memory** %MEMORY
  %loadMem_4ae47a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11340 = getelementptr inbounds %struct.GPR, %struct.GPR* %11339, i32 0, i32 33
  %11341 = getelementptr inbounds %struct.Reg, %struct.Reg* %11340, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %11341 to i64*
  %11342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11343 = getelementptr inbounds %struct.GPR, %struct.GPR* %11342, i32 0, i32 7
  %11344 = getelementptr inbounds %struct.Reg, %struct.Reg* %11343, i32 0, i32 0
  %RDX.i407 = bitcast %union.anon* %11344 to i64*
  %11345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11346 = getelementptr inbounds %struct.GPR, %struct.GPR* %11345, i32 0, i32 15
  %11347 = getelementptr inbounds %struct.Reg, %struct.Reg* %11346, i32 0, i32 0
  %RBP.i408 = bitcast %union.anon* %11347 to i64*
  %11348 = load i64, i64* %RBP.i408
  %11349 = sub i64 %11348, 16
  %11350 = load i64, i64* %PC.i406
  %11351 = add i64 %11350, 4
  store i64 %11351, i64* %PC.i406
  %11352 = inttoptr i64 %11349 to i32*
  %11353 = load i32, i32* %11352
  %11354 = sext i32 %11353 to i64
  store i64 %11354, i64* %RDX.i407, align 8
  store %struct.Memory* %loadMem_4ae47a, %struct.Memory** %MEMORY
  %loadMem_4ae47e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11356 = getelementptr inbounds %struct.GPR, %struct.GPR* %11355, i32 0, i32 33
  %11357 = getelementptr inbounds %struct.Reg, %struct.Reg* %11356, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %11357 to i64*
  %11358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11359 = getelementptr inbounds %struct.GPR, %struct.GPR* %11358, i32 0, i32 7
  %11360 = getelementptr inbounds %struct.Reg, %struct.Reg* %11359, i32 0, i32 0
  %RDX.i405 = bitcast %union.anon* %11360 to i64*
  %11361 = load i64, i64* %RDX.i405
  %11362 = load i64, i64* %PC.i404
  %11363 = add i64 %11362, 4
  store i64 %11363, i64* %PC.i404
  %11364 = sext i64 %11361 to i128
  %11365 = and i128 %11364, -18446744073709551616
  %11366 = zext i64 %11361 to i128
  %11367 = or i128 %11365, %11366
  %11368 = mul i128 12, %11367
  %11369 = trunc i128 %11368 to i64
  store i64 %11369, i64* %RDX.i405, align 8
  %11370 = sext i64 %11369 to i128
  %11371 = icmp ne i128 %11370, %11368
  %11372 = zext i1 %11371 to i8
  %11373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11372, i8* %11373, align 1
  %11374 = trunc i128 %11368 to i32
  %11375 = and i32 %11374, 255
  %11376 = call i32 @llvm.ctpop.i32(i32 %11375)
  %11377 = trunc i32 %11376 to i8
  %11378 = and i8 %11377, 1
  %11379 = xor i8 %11378, 1
  %11380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11379, i8* %11380, align 1
  %11381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11381, align 1
  %11382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11382, align 1
  %11383 = lshr i64 %11369, 63
  %11384 = trunc i64 %11383 to i8
  %11385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11384, i8* %11385, align 1
  %11386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11372, i8* %11386, align 1
  store %struct.Memory* %loadMem_4ae47e, %struct.Memory** %MEMORY
  %loadMem_4ae482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11388 = getelementptr inbounds %struct.GPR, %struct.GPR* %11387, i32 0, i32 33
  %11389 = getelementptr inbounds %struct.Reg, %struct.Reg* %11388, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %11389 to i64*
  %11390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11391 = getelementptr inbounds %struct.GPR, %struct.GPR* %11390, i32 0, i32 1
  %11392 = getelementptr inbounds %struct.Reg, %struct.Reg* %11391, i32 0, i32 0
  %RAX.i402 = bitcast %union.anon* %11392 to i64*
  %11393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11394 = getelementptr inbounds %struct.GPR, %struct.GPR* %11393, i32 0, i32 7
  %11395 = getelementptr inbounds %struct.Reg, %struct.Reg* %11394, i32 0, i32 0
  %RDX.i403 = bitcast %union.anon* %11395 to i64*
  %11396 = load i64, i64* %RAX.i402
  %11397 = load i64, i64* %RDX.i403
  %11398 = load i64, i64* %PC.i401
  %11399 = add i64 %11398, 3
  store i64 %11399, i64* %PC.i401
  %11400 = add i64 %11397, %11396
  store i64 %11400, i64* %RAX.i402, align 8
  %11401 = icmp ult i64 %11400, %11396
  %11402 = icmp ult i64 %11400, %11397
  %11403 = or i1 %11401, %11402
  %11404 = zext i1 %11403 to i8
  %11405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11404, i8* %11405, align 1
  %11406 = trunc i64 %11400 to i32
  %11407 = and i32 %11406, 255
  %11408 = call i32 @llvm.ctpop.i32(i32 %11407)
  %11409 = trunc i32 %11408 to i8
  %11410 = and i8 %11409, 1
  %11411 = xor i8 %11410, 1
  %11412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11411, i8* %11412, align 1
  %11413 = xor i64 %11397, %11396
  %11414 = xor i64 %11413, %11400
  %11415 = lshr i64 %11414, 4
  %11416 = trunc i64 %11415 to i8
  %11417 = and i8 %11416, 1
  %11418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11417, i8* %11418, align 1
  %11419 = icmp eq i64 %11400, 0
  %11420 = zext i1 %11419 to i8
  %11421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11420, i8* %11421, align 1
  %11422 = lshr i64 %11400, 63
  %11423 = trunc i64 %11422 to i8
  %11424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11423, i8* %11424, align 1
  %11425 = lshr i64 %11396, 63
  %11426 = lshr i64 %11397, 63
  %11427 = xor i64 %11422, %11425
  %11428 = xor i64 %11422, %11426
  %11429 = add i64 %11427, %11428
  %11430 = icmp eq i64 %11429, 2
  %11431 = zext i1 %11430 to i8
  %11432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11431, i8* %11432, align 1
  store %struct.Memory* %loadMem_4ae482, %struct.Memory** %MEMORY
  %loadMem_4ae485 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11434 = getelementptr inbounds %struct.GPR, %struct.GPR* %11433, i32 0, i32 33
  %11435 = getelementptr inbounds %struct.Reg, %struct.Reg* %11434, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %11435 to i64*
  %11436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11437 = getelementptr inbounds %struct.GPR, %struct.GPR* %11436, i32 0, i32 1
  %11438 = getelementptr inbounds %struct.Reg, %struct.Reg* %11437, i32 0, i32 0
  %RAX.i399 = bitcast %union.anon* %11438 to i64*
  %11439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11440 = getelementptr inbounds %struct.GPR, %struct.GPR* %11439, i32 0, i32 11
  %11441 = getelementptr inbounds %struct.Reg, %struct.Reg* %11440, i32 0, i32 0
  %RDI.i400 = bitcast %union.anon* %11441 to i64*
  %11442 = load i64, i64* %RDI.i400
  %11443 = load i64, i64* %RAX.i399
  %11444 = load i64, i64* %PC.i398
  %11445 = add i64 %11444, 2
  store i64 %11445, i64* %PC.i398
  %11446 = trunc i64 %11442 to i32
  %11447 = inttoptr i64 %11443 to i32*
  %11448 = load i32, i32* %11447
  %11449 = add i32 %11448, %11446
  %11450 = zext i32 %11449 to i64
  store i64 %11450, i64* %RDI.i400, align 8
  %11451 = icmp ult i32 %11449, %11446
  %11452 = icmp ult i32 %11449, %11448
  %11453 = or i1 %11451, %11452
  %11454 = zext i1 %11453 to i8
  %11455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11454, i8* %11455, align 1
  %11456 = and i32 %11449, 255
  %11457 = call i32 @llvm.ctpop.i32(i32 %11456)
  %11458 = trunc i32 %11457 to i8
  %11459 = and i8 %11458, 1
  %11460 = xor i8 %11459, 1
  %11461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11460, i8* %11461, align 1
  %11462 = xor i32 %11448, %11446
  %11463 = xor i32 %11462, %11449
  %11464 = lshr i32 %11463, 4
  %11465 = trunc i32 %11464 to i8
  %11466 = and i8 %11465, 1
  %11467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11466, i8* %11467, align 1
  %11468 = icmp eq i32 %11449, 0
  %11469 = zext i1 %11468 to i8
  %11470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11469, i8* %11470, align 1
  %11471 = lshr i32 %11449, 31
  %11472 = trunc i32 %11471 to i8
  %11473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11472, i8* %11473, align 1
  %11474 = lshr i32 %11446, 31
  %11475 = lshr i32 %11448, 31
  %11476 = xor i32 %11471, %11474
  %11477 = xor i32 %11471, %11475
  %11478 = add i32 %11476, %11477
  %11479 = icmp eq i32 %11478, 2
  %11480 = zext i1 %11479 to i8
  %11481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11480, i8* %11481, align 1
  store %struct.Memory* %loadMem_4ae485, %struct.Memory** %MEMORY
  %loadMem_4ae487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11483 = getelementptr inbounds %struct.GPR, %struct.GPR* %11482, i32 0, i32 33
  %11484 = getelementptr inbounds %struct.Reg, %struct.Reg* %11483, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %11484 to i64*
  %11485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11486 = getelementptr inbounds %struct.GPR, %struct.GPR* %11485, i32 0, i32 11
  %11487 = getelementptr inbounds %struct.Reg, %struct.Reg* %11486, i32 0, i32 0
  %EDI.i397 = bitcast %union.anon* %11487 to i32*
  %11488 = load i32, i32* %EDI.i397
  %11489 = zext i32 %11488 to i64
  %11490 = load i64, i64* %PC.i396
  %11491 = add i64 %11490, 3
  store i64 %11491, i64* %PC.i396
  %11492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11492, align 1
  %11493 = and i32 %11488, 255
  %11494 = call i32 @llvm.ctpop.i32(i32 %11493)
  %11495 = trunc i32 %11494 to i8
  %11496 = and i8 %11495, 1
  %11497 = xor i8 %11496, 1
  %11498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11497, i8* %11498, align 1
  %11499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11499, align 1
  %11500 = icmp eq i32 %11488, 0
  %11501 = zext i1 %11500 to i8
  %11502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11501, i8* %11502, align 1
  %11503 = lshr i32 %11488, 31
  %11504 = trunc i32 %11503 to i8
  %11505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11504, i8* %11505, align 1
  %11506 = lshr i32 %11488, 31
  %11507 = xor i32 %11503, %11506
  %11508 = add i32 %11507, %11506
  %11509 = icmp eq i32 %11508, 2
  %11510 = zext i1 %11509 to i8
  %11511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11510, i8* %11511, align 1
  store %struct.Memory* %loadMem_4ae487, %struct.Memory** %MEMORY
  %loadMem_4ae48a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11513 = getelementptr inbounds %struct.GPR, %struct.GPR* %11512, i32 0, i32 33
  %11514 = getelementptr inbounds %struct.Reg, %struct.Reg* %11513, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %11514 to i64*
  %11515 = load i64, i64* %PC.i395
  %11516 = add i64 %11515, 19
  %11517 = load i64, i64* %PC.i395
  %11518 = add i64 %11517, 6
  %11519 = load i64, i64* %PC.i395
  %11520 = add i64 %11519, 6
  store i64 %11520, i64* %PC.i395
  %11521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11522 = load i8, i8* %11521, align 1
  %11523 = icmp ne i8 %11522, 0
  %11524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11525 = load i8, i8* %11524, align 1
  %11526 = icmp ne i8 %11525, 0
  %11527 = xor i1 %11523, %11526
  %11528 = xor i1 %11527, true
  %11529 = zext i1 %11528 to i8
  store i8 %11529, i8* %BRANCH_TAKEN, align 1
  %11530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11531 = select i1 %11527, i64 %11518, i64 %11516
  store i64 %11531, i64* %11530, align 8
  store %struct.Memory* %loadMem_4ae48a, %struct.Memory** %MEMORY
  %loadBr_4ae48a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae48a = icmp eq i8 %loadBr_4ae48a, 1
  br i1 %cmpBr_4ae48a, label %block_.L_4ae49d, label %block_4ae490

block_4ae490:                                     ; preds = %routine_sarl__cl___edi.exit420
  %loadMem_4ae490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11533 = getelementptr inbounds %struct.GPR, %struct.GPR* %11532, i32 0, i32 33
  %11534 = getelementptr inbounds %struct.Reg, %struct.Reg* %11533, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %11534 to i64*
  %11535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11536 = getelementptr inbounds %struct.GPR, %struct.GPR* %11535, i32 0, i32 1
  %11537 = getelementptr inbounds %struct.Reg, %struct.Reg* %11536, i32 0, i32 0
  %EAX.i393 = bitcast %union.anon* %11537 to i32*
  %11538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11539 = getelementptr inbounds %struct.GPR, %struct.GPR* %11538, i32 0, i32 1
  %11540 = getelementptr inbounds %struct.Reg, %struct.Reg* %11539, i32 0, i32 0
  %RAX.i394 = bitcast %union.anon* %11540 to i64*
  %11541 = load i64, i64* %RAX.i394
  %11542 = load i32, i32* %EAX.i393
  %11543 = zext i32 %11542 to i64
  %11544 = load i64, i64* %PC.i392
  %11545 = add i64 %11544, 2
  store i64 %11545, i64* %PC.i392
  %11546 = xor i64 %11543, %11541
  %11547 = trunc i64 %11546 to i32
  %11548 = and i64 %11546, 4294967295
  store i64 %11548, i64* %RAX.i394, align 8
  %11549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11549, align 1
  %11550 = and i32 %11547, 255
  %11551 = call i32 @llvm.ctpop.i32(i32 %11550)
  %11552 = trunc i32 %11551 to i8
  %11553 = and i8 %11552, 1
  %11554 = xor i8 %11553, 1
  %11555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11554, i8* %11555, align 1
  %11556 = icmp eq i32 %11547, 0
  %11557 = zext i1 %11556 to i8
  %11558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11557, i8* %11558, align 1
  %11559 = lshr i32 %11547, 31
  %11560 = trunc i32 %11559 to i8
  %11561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11560, i8* %11561, align 1
  %11562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11562, align 1
  %11563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11563, align 1
  store %struct.Memory* %loadMem_4ae490, %struct.Memory** %MEMORY
  %loadMem_4ae492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11565 = getelementptr inbounds %struct.GPR, %struct.GPR* %11564, i32 0, i32 33
  %11566 = getelementptr inbounds %struct.Reg, %struct.Reg* %11565, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %11566 to i64*
  %11567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11568 = getelementptr inbounds %struct.GPR, %struct.GPR* %11567, i32 0, i32 1
  %11569 = getelementptr inbounds %struct.Reg, %struct.Reg* %11568, i32 0, i32 0
  %EAX.i390 = bitcast %union.anon* %11569 to i32*
  %11570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11571 = getelementptr inbounds %struct.GPR, %struct.GPR* %11570, i32 0, i32 15
  %11572 = getelementptr inbounds %struct.Reg, %struct.Reg* %11571, i32 0, i32 0
  %RBP.i391 = bitcast %union.anon* %11572 to i64*
  %11573 = load i64, i64* %RBP.i391
  %11574 = sub i64 %11573, 964
  %11575 = load i32, i32* %EAX.i390
  %11576 = zext i32 %11575 to i64
  %11577 = load i64, i64* %PC.i389
  %11578 = add i64 %11577, 6
  store i64 %11578, i64* %PC.i389
  %11579 = inttoptr i64 %11574 to i32*
  store i32 %11575, i32* %11579
  store %struct.Memory* %loadMem_4ae492, %struct.Memory** %MEMORY
  %loadMem_4ae498 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11581 = getelementptr inbounds %struct.GPR, %struct.GPR* %11580, i32 0, i32 33
  %11582 = getelementptr inbounds %struct.Reg, %struct.Reg* %11581, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %11582 to i64*
  %11583 = load i64, i64* %PC.i388
  %11584 = add i64 %11583, 328
  %11585 = load i64, i64* %PC.i388
  %11586 = add i64 %11585, 5
  store i64 %11586, i64* %PC.i388
  %11587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11584, i64* %11587, align 8
  store %struct.Memory* %loadMem_4ae498, %struct.Memory** %MEMORY
  br label %block_.L_4ae5e0

block_.L_4ae49d:                                  ; preds = %routine_sarl__cl___edi.exit420
  %loadMem_4ae49d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11589 = getelementptr inbounds %struct.GPR, %struct.GPR* %11588, i32 0, i32 33
  %11590 = getelementptr inbounds %struct.Reg, %struct.Reg* %11589, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %11590 to i64*
  %11591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11592 = getelementptr inbounds %struct.GPR, %struct.GPR* %11591, i32 0, i32 1
  %11593 = getelementptr inbounds %struct.Reg, %struct.Reg* %11592, i32 0, i32 0
  %RAX.i386 = bitcast %union.anon* %11593 to i64*
  %11594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11595 = getelementptr inbounds %struct.GPR, %struct.GPR* %11594, i32 0, i32 15
  %11596 = getelementptr inbounds %struct.Reg, %struct.Reg* %11595, i32 0, i32 0
  %RBP.i387 = bitcast %union.anon* %11596 to i64*
  %11597 = load i64, i64* %RBP.i387
  %11598 = sub i64 %11597, 928
  %11599 = load i64, i64* %PC.i385
  %11600 = add i64 %11599, 7
  store i64 %11600, i64* %PC.i385
  store i64 %11598, i64* %RAX.i386, align 8
  store %struct.Memory* %loadMem_4ae49d, %struct.Memory** %MEMORY
  %loadMem_4ae4a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11602 = getelementptr inbounds %struct.GPR, %struct.GPR* %11601, i32 0, i32 33
  %11603 = getelementptr inbounds %struct.Reg, %struct.Reg* %11602, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %11603 to i64*
  %11604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11605 = getelementptr inbounds %struct.GPR, %struct.GPR* %11604, i32 0, i32 5
  %11606 = getelementptr inbounds %struct.Reg, %struct.Reg* %11605, i32 0, i32 0
  %RCX.i383 = bitcast %union.anon* %11606 to i64*
  %11607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11608 = getelementptr inbounds %struct.GPR, %struct.GPR* %11607, i32 0, i32 15
  %11609 = getelementptr inbounds %struct.Reg, %struct.Reg* %11608, i32 0, i32 0
  %RBP.i384 = bitcast %union.anon* %11609 to i64*
  %11610 = load i64, i64* %RBP.i384
  %11611 = sub i64 %11610, 560
  %11612 = load i64, i64* %PC.i382
  %11613 = add i64 %11612, 7
  store i64 %11613, i64* %PC.i382
  store i64 %11611, i64* %RCX.i383, align 8
  store %struct.Memory* %loadMem_4ae4a4, %struct.Memory** %MEMORY
  %loadMem_4ae4ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %11614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11615 = getelementptr inbounds %struct.GPR, %struct.GPR* %11614, i32 0, i32 33
  %11616 = getelementptr inbounds %struct.Reg, %struct.Reg* %11615, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %11616 to i64*
  %11617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11618 = getelementptr inbounds %struct.GPR, %struct.GPR* %11617, i32 0, i32 7
  %11619 = getelementptr inbounds %struct.Reg, %struct.Reg* %11618, i32 0, i32 0
  %RDX.i381 = bitcast %union.anon* %11619 to i64*
  %11620 = load i64, i64* %PC.i380
  %11621 = add i64 %11620, 8
  store i64 %11621, i64* %PC.i380
  %11622 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %11622, i64* %RDX.i381, align 8
  store %struct.Memory* %loadMem_4ae4ab, %struct.Memory** %MEMORY
  %loadMem_4ae4b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11624 = getelementptr inbounds %struct.GPR, %struct.GPR* %11623, i32 0, i32 33
  %11625 = getelementptr inbounds %struct.Reg, %struct.Reg* %11624, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %11625 to i64*
  %11626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11627 = getelementptr inbounds %struct.GPR, %struct.GPR* %11626, i32 0, i32 9
  %11628 = getelementptr inbounds %struct.Reg, %struct.Reg* %11627, i32 0, i32 0
  %RSI.i378 = bitcast %union.anon* %11628 to i64*
  %11629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11630 = getelementptr inbounds %struct.GPR, %struct.GPR* %11629, i32 0, i32 15
  %11631 = getelementptr inbounds %struct.Reg, %struct.Reg* %11630, i32 0, i32 0
  %RBP.i379 = bitcast %union.anon* %11631 to i64*
  %11632 = load i64, i64* %RBP.i379
  %11633 = sub i64 %11632, 16
  %11634 = load i64, i64* %PC.i377
  %11635 = add i64 %11634, 4
  store i64 %11635, i64* %PC.i377
  %11636 = inttoptr i64 %11633 to i32*
  %11637 = load i32, i32* %11636
  %11638 = sext i32 %11637 to i64
  store i64 %11638, i64* %RSI.i378, align 8
  store %struct.Memory* %loadMem_4ae4b3, %struct.Memory** %MEMORY
  %loadMem_4ae4b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11640 = getelementptr inbounds %struct.GPR, %struct.GPR* %11639, i32 0, i32 33
  %11641 = getelementptr inbounds %struct.Reg, %struct.Reg* %11640, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %11641 to i64*
  %11642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11643 = getelementptr inbounds %struct.GPR, %struct.GPR* %11642, i32 0, i32 7
  %11644 = getelementptr inbounds %struct.Reg, %struct.Reg* %11643, i32 0, i32 0
  %RDX.i375 = bitcast %union.anon* %11644 to i64*
  %11645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11646 = getelementptr inbounds %struct.GPR, %struct.GPR* %11645, i32 0, i32 9
  %11647 = getelementptr inbounds %struct.Reg, %struct.Reg* %11646, i32 0, i32 0
  %RSI.i376 = bitcast %union.anon* %11647 to i64*
  %11648 = load i64, i64* %RDX.i375
  %11649 = load i64, i64* %RSI.i376
  %11650 = mul i64 %11649, 8
  %11651 = add i64 %11650, %11648
  %11652 = load i64, i64* %PC.i374
  %11653 = add i64 %11652, 4
  store i64 %11653, i64* %PC.i374
  %11654 = inttoptr i64 %11651 to i64*
  %11655 = load i64, i64* %11654
  store i64 %11655, i64* %RDX.i375, align 8
  store %struct.Memory* %loadMem_4ae4b7, %struct.Memory** %MEMORY
  %loadMem_4ae4bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11657 = getelementptr inbounds %struct.GPR, %struct.GPR* %11656, i32 0, i32 33
  %11658 = getelementptr inbounds %struct.Reg, %struct.Reg* %11657, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %11658 to i64*
  %11659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11660 = getelementptr inbounds %struct.GPR, %struct.GPR* %11659, i32 0, i32 7
  %11661 = getelementptr inbounds %struct.Reg, %struct.Reg* %11660, i32 0, i32 0
  %RDX.i373 = bitcast %union.anon* %11661 to i64*
  %11662 = load i64, i64* %RDX.i373
  %11663 = add i64 %11662, 6448
  %11664 = load i64, i64* %PC.i372
  %11665 = add i64 %11664, 7
  store i64 %11665, i64* %PC.i372
  %11666 = inttoptr i64 %11663 to i64*
  %11667 = load i64, i64* %11666
  store i64 %11667, i64* %RDX.i373, align 8
  store %struct.Memory* %loadMem_4ae4bb, %struct.Memory** %MEMORY
  %loadMem_4ae4c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11669 = getelementptr inbounds %struct.GPR, %struct.GPR* %11668, i32 0, i32 33
  %11670 = getelementptr inbounds %struct.Reg, %struct.Reg* %11669, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %11670 to i64*
  %11671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11672 = getelementptr inbounds %struct.GPR, %struct.GPR* %11671, i32 0, i32 9
  %11673 = getelementptr inbounds %struct.Reg, %struct.Reg* %11672, i32 0, i32 0
  %RSI.i370 = bitcast %union.anon* %11673 to i64*
  %11674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11675 = getelementptr inbounds %struct.GPR, %struct.GPR* %11674, i32 0, i32 15
  %11676 = getelementptr inbounds %struct.Reg, %struct.Reg* %11675, i32 0, i32 0
  %RBP.i371 = bitcast %union.anon* %11676 to i64*
  %11677 = load i64, i64* %RBP.i371
  %11678 = sub i64 %11677, 8
  %11679 = load i64, i64* %PC.i369
  %11680 = add i64 %11679, 4
  store i64 %11680, i64* %PC.i369
  %11681 = inttoptr i64 %11678 to i32*
  %11682 = load i32, i32* %11681
  %11683 = sext i32 %11682 to i64
  store i64 %11683, i64* %RSI.i370, align 8
  store %struct.Memory* %loadMem_4ae4c2, %struct.Memory** %MEMORY
  %loadMem_4ae4c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11685 = getelementptr inbounds %struct.GPR, %struct.GPR* %11684, i32 0, i32 33
  %11686 = getelementptr inbounds %struct.Reg, %struct.Reg* %11685, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %11686 to i64*
  %11687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11688 = getelementptr inbounds %struct.GPR, %struct.GPR* %11687, i32 0, i32 7
  %11689 = getelementptr inbounds %struct.Reg, %struct.Reg* %11688, i32 0, i32 0
  %RDX.i367 = bitcast %union.anon* %11689 to i64*
  %11690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11691 = getelementptr inbounds %struct.GPR, %struct.GPR* %11690, i32 0, i32 9
  %11692 = getelementptr inbounds %struct.Reg, %struct.Reg* %11691, i32 0, i32 0
  %RSI.i368 = bitcast %union.anon* %11692 to i64*
  %11693 = load i64, i64* %RDX.i367
  %11694 = load i64, i64* %RSI.i368
  %11695 = mul i64 %11694, 8
  %11696 = add i64 %11695, %11693
  %11697 = load i64, i64* %PC.i366
  %11698 = add i64 %11697, 4
  store i64 %11698, i64* %PC.i366
  %11699 = inttoptr i64 %11696 to i64*
  %11700 = load i64, i64* %11699
  store i64 %11700, i64* %RDX.i367, align 8
  store %struct.Memory* %loadMem_4ae4c6, %struct.Memory** %MEMORY
  %loadMem_4ae4ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %11701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11702 = getelementptr inbounds %struct.GPR, %struct.GPR* %11701, i32 0, i32 33
  %11703 = getelementptr inbounds %struct.Reg, %struct.Reg* %11702, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %11703 to i64*
  %11704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11705 = getelementptr inbounds %struct.GPR, %struct.GPR* %11704, i32 0, i32 9
  %11706 = getelementptr inbounds %struct.Reg, %struct.Reg* %11705, i32 0, i32 0
  %RSI.i364 = bitcast %union.anon* %11706 to i64*
  %11707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11708 = getelementptr inbounds %struct.GPR, %struct.GPR* %11707, i32 0, i32 15
  %11709 = getelementptr inbounds %struct.Reg, %struct.Reg* %11708, i32 0, i32 0
  %RBP.i365 = bitcast %union.anon* %11709 to i64*
  %11710 = load i64, i64* %RBP.i365
  %11711 = sub i64 %11710, 12
  %11712 = load i64, i64* %PC.i363
  %11713 = add i64 %11712, 4
  store i64 %11713, i64* %PC.i363
  %11714 = inttoptr i64 %11711 to i32*
  %11715 = load i32, i32* %11714
  %11716 = sext i32 %11715 to i64
  store i64 %11716, i64* %RSI.i364, align 8
  store %struct.Memory* %loadMem_4ae4ca, %struct.Memory** %MEMORY
  %loadMem_4ae4ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %11717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11718 = getelementptr inbounds %struct.GPR, %struct.GPR* %11717, i32 0, i32 33
  %11719 = getelementptr inbounds %struct.Reg, %struct.Reg* %11718, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %11719 to i64*
  %11720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11721 = getelementptr inbounds %struct.GPR, %struct.GPR* %11720, i32 0, i32 7
  %11722 = getelementptr inbounds %struct.Reg, %struct.Reg* %11721, i32 0, i32 0
  %RDX.i360 = bitcast %union.anon* %11722 to i64*
  %11723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11724 = getelementptr inbounds %struct.GPR, %struct.GPR* %11723, i32 0, i32 9
  %11725 = getelementptr inbounds %struct.Reg, %struct.Reg* %11724, i32 0, i32 0
  %RSI.i361 = bitcast %union.anon* %11725 to i64*
  %11726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11727 = getelementptr inbounds %struct.GPR, %struct.GPR* %11726, i32 0, i32 11
  %11728 = getelementptr inbounds %struct.Reg, %struct.Reg* %11727, i32 0, i32 0
  %RDI.i362 = bitcast %union.anon* %11728 to i64*
  %11729 = load i64, i64* %RDX.i360
  %11730 = load i64, i64* %RSI.i361
  %11731 = mul i64 %11730, 2
  %11732 = add i64 %11731, %11729
  %11733 = load i64, i64* %PC.i359
  %11734 = add i64 %11733, 4
  store i64 %11734, i64* %PC.i359
  %11735 = inttoptr i64 %11732 to i16*
  %11736 = load i16, i16* %11735
  %11737 = zext i16 %11736 to i64
  store i64 %11737, i64* %RDI.i362, align 8
  store %struct.Memory* %loadMem_4ae4ce, %struct.Memory** %MEMORY
  %loadMem_4ae4d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11739 = getelementptr inbounds %struct.GPR, %struct.GPR* %11738, i32 0, i32 33
  %11740 = getelementptr inbounds %struct.Reg, %struct.Reg* %11739, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %11740 to i64*
  %11741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11742 = getelementptr inbounds %struct.GPR, %struct.GPR* %11741, i32 0, i32 7
  %11743 = getelementptr inbounds %struct.Reg, %struct.Reg* %11742, i32 0, i32 0
  %RDX.i357 = bitcast %union.anon* %11743 to i64*
  %11744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11745 = getelementptr inbounds %struct.GPR, %struct.GPR* %11744, i32 0, i32 15
  %11746 = getelementptr inbounds %struct.Reg, %struct.Reg* %11745, i32 0, i32 0
  %RBP.i358 = bitcast %union.anon* %11746 to i64*
  %11747 = load i64, i64* %RBP.i358
  %11748 = sub i64 %11747, 932
  %11749 = load i64, i64* %PC.i356
  %11750 = add i64 %11749, 7
  store i64 %11750, i64* %PC.i356
  %11751 = inttoptr i64 %11748 to i32*
  %11752 = load i32, i32* %11751
  %11753 = sext i32 %11752 to i64
  store i64 %11753, i64* %RDX.i357, align 8
  store %struct.Memory* %loadMem_4ae4d2, %struct.Memory** %MEMORY
  %loadMem_4ae4d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11755 = getelementptr inbounds %struct.GPR, %struct.GPR* %11754, i32 0, i32 33
  %11756 = getelementptr inbounds %struct.Reg, %struct.Reg* %11755, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %11756 to i64*
  %11757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11758 = getelementptr inbounds %struct.GPR, %struct.GPR* %11757, i32 0, i32 7
  %11759 = getelementptr inbounds %struct.Reg, %struct.Reg* %11758, i32 0, i32 0
  %RDX.i355 = bitcast %union.anon* %11759 to i64*
  %11760 = load i64, i64* %RDX.i355
  %11761 = load i64, i64* %PC.i354
  %11762 = add i64 %11761, 7
  store i64 %11762, i64* %PC.i354
  %11763 = sext i64 %11760 to i128
  %11764 = and i128 %11763, -18446744073709551616
  %11765 = zext i64 %11760 to i128
  %11766 = or i128 %11764, %11765
  %11767 = mul i128 180, %11766
  %11768 = trunc i128 %11767 to i64
  store i64 %11768, i64* %RDX.i355, align 8
  %11769 = sext i64 %11768 to i128
  %11770 = icmp ne i128 %11769, %11767
  %11771 = zext i1 %11770 to i8
  %11772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11771, i8* %11772, align 1
  %11773 = trunc i128 %11767 to i32
  %11774 = and i32 %11773, 255
  %11775 = call i32 @llvm.ctpop.i32(i32 %11774)
  %11776 = trunc i32 %11775 to i8
  %11777 = and i8 %11776, 1
  %11778 = xor i8 %11777, 1
  %11779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11778, i8* %11779, align 1
  %11780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11780, align 1
  %11781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11781, align 1
  %11782 = lshr i64 %11768, 63
  %11783 = trunc i64 %11782 to i8
  %11784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11783, i8* %11784, align 1
  %11785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11771, i8* %11785, align 1
  store %struct.Memory* %loadMem_4ae4d9, %struct.Memory** %MEMORY
  %loadMem_4ae4e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11787 = getelementptr inbounds %struct.GPR, %struct.GPR* %11786, i32 0, i32 33
  %11788 = getelementptr inbounds %struct.Reg, %struct.Reg* %11787, i32 0, i32 0
  %PC.i351 = bitcast %union.anon* %11788 to i64*
  %11789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11790 = getelementptr inbounds %struct.GPR, %struct.GPR* %11789, i32 0, i32 5
  %11791 = getelementptr inbounds %struct.Reg, %struct.Reg* %11790, i32 0, i32 0
  %RCX.i352 = bitcast %union.anon* %11791 to i64*
  %11792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11793 = getelementptr inbounds %struct.GPR, %struct.GPR* %11792, i32 0, i32 7
  %11794 = getelementptr inbounds %struct.Reg, %struct.Reg* %11793, i32 0, i32 0
  %RDX.i353 = bitcast %union.anon* %11794 to i64*
  %11795 = load i64, i64* %RCX.i352
  %11796 = load i64, i64* %RDX.i353
  %11797 = load i64, i64* %PC.i351
  %11798 = add i64 %11797, 3
  store i64 %11798, i64* %PC.i351
  %11799 = add i64 %11796, %11795
  store i64 %11799, i64* %RCX.i352, align 8
  %11800 = icmp ult i64 %11799, %11795
  %11801 = icmp ult i64 %11799, %11796
  %11802 = or i1 %11800, %11801
  %11803 = zext i1 %11802 to i8
  %11804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11803, i8* %11804, align 1
  %11805 = trunc i64 %11799 to i32
  %11806 = and i32 %11805, 255
  %11807 = call i32 @llvm.ctpop.i32(i32 %11806)
  %11808 = trunc i32 %11807 to i8
  %11809 = and i8 %11808, 1
  %11810 = xor i8 %11809, 1
  %11811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11810, i8* %11811, align 1
  %11812 = xor i64 %11796, %11795
  %11813 = xor i64 %11812, %11799
  %11814 = lshr i64 %11813, 4
  %11815 = trunc i64 %11814 to i8
  %11816 = and i8 %11815, 1
  %11817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11816, i8* %11817, align 1
  %11818 = icmp eq i64 %11799, 0
  %11819 = zext i1 %11818 to i8
  %11820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11819, i8* %11820, align 1
  %11821 = lshr i64 %11799, 63
  %11822 = trunc i64 %11821 to i8
  %11823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11822, i8* %11823, align 1
  %11824 = lshr i64 %11795, 63
  %11825 = lshr i64 %11796, 63
  %11826 = xor i64 %11821, %11824
  %11827 = xor i64 %11821, %11825
  %11828 = add i64 %11826, %11827
  %11829 = icmp eq i64 %11828, 2
  %11830 = zext i1 %11829 to i8
  %11831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11830, i8* %11831, align 1
  store %struct.Memory* %loadMem_4ae4e0, %struct.Memory** %MEMORY
  %loadMem_4ae4e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11833 = getelementptr inbounds %struct.GPR, %struct.GPR* %11832, i32 0, i32 33
  %11834 = getelementptr inbounds %struct.Reg, %struct.Reg* %11833, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %11834 to i64*
  %11835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11836 = getelementptr inbounds %struct.GPR, %struct.GPR* %11835, i32 0, i32 7
  %11837 = getelementptr inbounds %struct.Reg, %struct.Reg* %11836, i32 0, i32 0
  %RDX.i349 = bitcast %union.anon* %11837 to i64*
  %11838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11839 = getelementptr inbounds %struct.GPR, %struct.GPR* %11838, i32 0, i32 15
  %11840 = getelementptr inbounds %struct.Reg, %struct.Reg* %11839, i32 0, i32 0
  %RBP.i350 = bitcast %union.anon* %11840 to i64*
  %11841 = load i64, i64* %RBP.i350
  %11842 = sub i64 %11841, 16
  %11843 = load i64, i64* %PC.i348
  %11844 = add i64 %11843, 4
  store i64 %11844, i64* %PC.i348
  %11845 = inttoptr i64 %11842 to i32*
  %11846 = load i32, i32* %11845
  %11847 = sext i32 %11846 to i64
  store i64 %11847, i64* %RDX.i349, align 8
  store %struct.Memory* %loadMem_4ae4e3, %struct.Memory** %MEMORY
  %loadMem_4ae4e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11849 = getelementptr inbounds %struct.GPR, %struct.GPR* %11848, i32 0, i32 33
  %11850 = getelementptr inbounds %struct.Reg, %struct.Reg* %11849, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %11850 to i64*
  %11851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11852 = getelementptr inbounds %struct.GPR, %struct.GPR* %11851, i32 0, i32 7
  %11853 = getelementptr inbounds %struct.Reg, %struct.Reg* %11852, i32 0, i32 0
  %RDX.i347 = bitcast %union.anon* %11853 to i64*
  %11854 = load i64, i64* %RDX.i347
  %11855 = load i64, i64* %PC.i346
  %11856 = add i64 %11855, 4
  store i64 %11856, i64* %PC.i346
  %11857 = sext i64 %11854 to i128
  %11858 = and i128 %11857, -18446744073709551616
  %11859 = zext i64 %11854 to i128
  %11860 = or i128 %11858, %11859
  %11861 = mul i128 12, %11860
  %11862 = trunc i128 %11861 to i64
  store i64 %11862, i64* %RDX.i347, align 8
  %11863 = sext i64 %11862 to i128
  %11864 = icmp ne i128 %11863, %11861
  %11865 = zext i1 %11864 to i8
  %11866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11865, i8* %11866, align 1
  %11867 = trunc i128 %11861 to i32
  %11868 = and i32 %11867, 255
  %11869 = call i32 @llvm.ctpop.i32(i32 %11868)
  %11870 = trunc i32 %11869 to i8
  %11871 = and i8 %11870, 1
  %11872 = xor i8 %11871, 1
  %11873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11872, i8* %11873, align 1
  %11874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11874, align 1
  %11875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11875, align 1
  %11876 = lshr i64 %11862, 63
  %11877 = trunc i64 %11876 to i8
  %11878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11877, i8* %11878, align 1
  %11879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11865, i8* %11879, align 1
  store %struct.Memory* %loadMem_4ae4e7, %struct.Memory** %MEMORY
  %loadMem_4ae4eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11881 = getelementptr inbounds %struct.GPR, %struct.GPR* %11880, i32 0, i32 33
  %11882 = getelementptr inbounds %struct.Reg, %struct.Reg* %11881, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %11882 to i64*
  %11883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11884 = getelementptr inbounds %struct.GPR, %struct.GPR* %11883, i32 0, i32 5
  %11885 = getelementptr inbounds %struct.Reg, %struct.Reg* %11884, i32 0, i32 0
  %RCX.i344 = bitcast %union.anon* %11885 to i64*
  %11886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11887 = getelementptr inbounds %struct.GPR, %struct.GPR* %11886, i32 0, i32 7
  %11888 = getelementptr inbounds %struct.Reg, %struct.Reg* %11887, i32 0, i32 0
  %RDX.i345 = bitcast %union.anon* %11888 to i64*
  %11889 = load i64, i64* %RCX.i344
  %11890 = load i64, i64* %RDX.i345
  %11891 = load i64, i64* %PC.i343
  %11892 = add i64 %11891, 3
  store i64 %11892, i64* %PC.i343
  %11893 = add i64 %11890, %11889
  store i64 %11893, i64* %RCX.i344, align 8
  %11894 = icmp ult i64 %11893, %11889
  %11895 = icmp ult i64 %11893, %11890
  %11896 = or i1 %11894, %11895
  %11897 = zext i1 %11896 to i8
  %11898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11897, i8* %11898, align 1
  %11899 = trunc i64 %11893 to i32
  %11900 = and i32 %11899, 255
  %11901 = call i32 @llvm.ctpop.i32(i32 %11900)
  %11902 = trunc i32 %11901 to i8
  %11903 = and i8 %11902, 1
  %11904 = xor i8 %11903, 1
  %11905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11904, i8* %11905, align 1
  %11906 = xor i64 %11890, %11889
  %11907 = xor i64 %11906, %11893
  %11908 = lshr i64 %11907, 4
  %11909 = trunc i64 %11908 to i8
  %11910 = and i8 %11909, 1
  %11911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11910, i8* %11911, align 1
  %11912 = icmp eq i64 %11893, 0
  %11913 = zext i1 %11912 to i8
  %11914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11913, i8* %11914, align 1
  %11915 = lshr i64 %11893, 63
  %11916 = trunc i64 %11915 to i8
  %11917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11916, i8* %11917, align 1
  %11918 = lshr i64 %11889, 63
  %11919 = lshr i64 %11890, 63
  %11920 = xor i64 %11915, %11918
  %11921 = xor i64 %11915, %11919
  %11922 = add i64 %11920, %11921
  %11923 = icmp eq i64 %11922, 2
  %11924 = zext i1 %11923 to i8
  %11925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11924, i8* %11925, align 1
  store %struct.Memory* %loadMem_4ae4eb, %struct.Memory** %MEMORY
  %loadMem_4ae4ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %11926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11927 = getelementptr inbounds %struct.GPR, %struct.GPR* %11926, i32 0, i32 33
  %11928 = getelementptr inbounds %struct.Reg, %struct.Reg* %11927, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %11928 to i64*
  %11929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11930 = getelementptr inbounds %struct.GPR, %struct.GPR* %11929, i32 0, i32 5
  %11931 = getelementptr inbounds %struct.Reg, %struct.Reg* %11930, i32 0, i32 0
  %RCX.i341 = bitcast %union.anon* %11931 to i64*
  %11932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11933 = getelementptr inbounds %struct.GPR, %struct.GPR* %11932, i32 0, i32 11
  %11934 = getelementptr inbounds %struct.Reg, %struct.Reg* %11933, i32 0, i32 0
  %RDI.i342 = bitcast %union.anon* %11934 to i64*
  %11935 = load i64, i64* %RDI.i342
  %11936 = load i64, i64* %RCX.i341
  %11937 = load i64, i64* %PC.i340
  %11938 = add i64 %11937, 3
  store i64 %11938, i64* %PC.i340
  %11939 = inttoptr i64 %11936 to i32*
  %11940 = load i32, i32* %11939
  %11941 = shl i64 %11935, 32
  %11942 = ashr exact i64 %11941, 32
  %11943 = sext i32 %11940 to i64
  %11944 = mul i64 %11943, %11942
  %11945 = trunc i64 %11944 to i32
  %11946 = and i64 %11944, 4294967295
  store i64 %11946, i64* %RDI.i342, align 8
  %11947 = shl i64 %11944, 32
  %11948 = ashr exact i64 %11947, 32
  %11949 = icmp ne i64 %11948, %11944
  %11950 = zext i1 %11949 to i8
  %11951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11950, i8* %11951, align 1
  %11952 = and i32 %11945, 255
  %11953 = call i32 @llvm.ctpop.i32(i32 %11952)
  %11954 = trunc i32 %11953 to i8
  %11955 = and i8 %11954, 1
  %11956 = xor i8 %11955, 1
  %11957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11956, i8* %11957, align 1
  %11958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11958, align 1
  %11959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11959, align 1
  %11960 = lshr i32 %11945, 31
  %11961 = trunc i32 %11960 to i8
  %11962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11961, i8* %11962, align 1
  %11963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11950, i8* %11963, align 1
  store %struct.Memory* %loadMem_4ae4ee, %struct.Memory** %MEMORY
  %loadMem_4ae4f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11965 = getelementptr inbounds %struct.GPR, %struct.GPR* %11964, i32 0, i32 33
  %11966 = getelementptr inbounds %struct.Reg, %struct.Reg* %11965, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %11966 to i64*
  %11967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11968 = getelementptr inbounds %struct.GPR, %struct.GPR* %11967, i32 0, i32 11
  %11969 = getelementptr inbounds %struct.Reg, %struct.Reg* %11968, i32 0, i32 0
  %RDI.i339 = bitcast %union.anon* %11969 to i64*
  %11970 = load i64, i64* %RDI.i339
  %11971 = load i64, i64* %PC.i338
  %11972 = add i64 %11971, 7
  store i64 %11972, i64* %PC.i338
  %11973 = trunc i64 %11970 to i32
  %11974 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %11975 = add i32 %11974, %11973
  %11976 = zext i32 %11975 to i64
  store i64 %11976, i64* %RDI.i339, align 8
  %11977 = icmp ult i32 %11975, %11973
  %11978 = icmp ult i32 %11975, %11974
  %11979 = or i1 %11977, %11978
  %11980 = zext i1 %11979 to i8
  %11981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11980, i8* %11981, align 1
  %11982 = and i32 %11975, 255
  %11983 = call i32 @llvm.ctpop.i32(i32 %11982)
  %11984 = trunc i32 %11983 to i8
  %11985 = and i8 %11984, 1
  %11986 = xor i8 %11985, 1
  %11987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11986, i8* %11987, align 1
  %11988 = xor i32 %11974, %11973
  %11989 = xor i32 %11988, %11975
  %11990 = lshr i32 %11989, 4
  %11991 = trunc i32 %11990 to i8
  %11992 = and i8 %11991, 1
  %11993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11992, i8* %11993, align 1
  %11994 = icmp eq i32 %11975, 0
  %11995 = zext i1 %11994 to i8
  %11996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11995, i8* %11996, align 1
  %11997 = lshr i32 %11975, 31
  %11998 = trunc i32 %11997 to i8
  %11999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11998, i8* %11999, align 1
  %12000 = lshr i32 %11973, 31
  %12001 = lshr i32 %11974, 31
  %12002 = xor i32 %11997, %12000
  %12003 = xor i32 %11997, %12001
  %12004 = add i32 %12002, %12003
  %12005 = icmp eq i32 %12004, 2
  %12006 = zext i1 %12005 to i8
  %12007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12006, i8* %12007, align 1
  store %struct.Memory* %loadMem_4ae4f1, %struct.Memory** %MEMORY
  %loadMem_4ae4f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12009 = getelementptr inbounds %struct.GPR, %struct.GPR* %12008, i32 0, i32 33
  %12010 = getelementptr inbounds %struct.Reg, %struct.Reg* %12009, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %12010 to i64*
  %12011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12012 = getelementptr inbounds %struct.GPR, %struct.GPR* %12011, i32 0, i32 5
  %12013 = getelementptr inbounds %struct.Reg, %struct.Reg* %12012, i32 0, i32 0
  %RCX.i337 = bitcast %union.anon* %12013 to i64*
  %12014 = load i64, i64* %PC.i336
  %12015 = add i64 %12014, 7
  store i64 %12015, i64* %PC.i336
  %12016 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %12017 = zext i32 %12016 to i64
  store i64 %12017, i64* %RCX.i337, align 8
  store %struct.Memory* %loadMem_4ae4f8, %struct.Memory** %MEMORY
  %loadMem_4ae4ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %12018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12019 = getelementptr inbounds %struct.GPR, %struct.GPR* %12018, i32 0, i32 33
  %12020 = getelementptr inbounds %struct.Reg, %struct.Reg* %12019, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %12020 to i64*
  %12021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12022 = getelementptr inbounds %struct.GPR, %struct.GPR* %12021, i32 0, i32 5
  %12023 = getelementptr inbounds %struct.Reg, %struct.Reg* %12022, i32 0, i32 0
  %12024 = bitcast %union.anon* %12023 to %struct.anon.2*
  %CL.i333 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12024, i32 0, i32 0
  %12025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12026 = getelementptr inbounds %struct.GPR, %struct.GPR* %12025, i32 0, i32 11
  %12027 = getelementptr inbounds %struct.Reg, %struct.Reg* %12026, i32 0, i32 0
  %RDI.i334 = bitcast %union.anon* %12027 to i64*
  %12028 = load i64, i64* %RDI.i334
  %12029 = load i8, i8* %CL.i333
  %12030 = zext i8 %12029 to i64
  %12031 = load i64, i64* %PC.i332
  %12032 = add i64 %12031, 2
  store i64 %12032, i64* %PC.i332
  %12033 = trunc i64 %12030 to i5
  switch i5 %12033, label %12037 [
    i5 0, label %routine_sarl__cl___edi.exit335
    i5 1, label %12034
  ]

; <label>:12034:                                  ; preds = %block_.L_4ae49d
  %12035 = shl i64 %12028, 32
  %12036 = ashr i64 %12035, 33
  br label %12044

; <label>:12037:                                  ; preds = %block_.L_4ae49d
  %12038 = and i64 %12030, 31
  %12039 = add i64 %12038, -1
  %12040 = shl i64 %12028, 32
  %12041 = ashr exact i64 %12040, 32
  %12042 = ashr i64 %12041, %12039
  %12043 = lshr i64 %12042, 1
  br label %12044

; <label>:12044:                                  ; preds = %12037, %12034
  %12045 = phi i64 [ %12043, %12037 ], [ %12036, %12034 ]
  %12046 = phi i64 [ %12042, %12037 ], [ %12028, %12034 ]
  %12047 = trunc i64 %12046 to i8
  %12048 = and i8 %12047, 1
  %12049 = trunc i64 %12045 to i32
  %12050 = and i64 %12045, 4294967295
  store i64 %12050, i64* %RDI.i334, align 8
  %12051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12048, i8* %12051, align 1
  %12052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12053 = and i32 %12049, 255
  %12054 = call i32 @llvm.ctpop.i32(i32 %12053)
  %12055 = trunc i32 %12054 to i8
  %12056 = and i8 %12055, 1
  %12057 = xor i8 %12056, 1
  store i8 %12057, i8* %12052, align 1
  %12058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12058, align 1
  %12059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12060 = icmp eq i32 %12049, 0
  %12061 = zext i1 %12060 to i8
  store i8 %12061, i8* %12059, align 1
  %12062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12063 = lshr i32 %12049, 31
  %12064 = trunc i32 %12063 to i8
  store i8 %12064, i8* %12062, align 1
  %12065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12065, align 1
  br label %routine_sarl__cl___edi.exit335

routine_sarl__cl___edi.exit335:                   ; preds = %block_.L_4ae49d, %12044
  store %struct.Memory* %loadMem_4ae4ff, %struct.Memory** %MEMORY
  %loadMem_4ae501 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12067 = getelementptr inbounds %struct.GPR, %struct.GPR* %12066, i32 0, i32 33
  %12068 = getelementptr inbounds %struct.Reg, %struct.Reg* %12067, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %12068 to i64*
  %12069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12070 = getelementptr inbounds %struct.GPR, %struct.GPR* %12069, i32 0, i32 7
  %12071 = getelementptr inbounds %struct.Reg, %struct.Reg* %12070, i32 0, i32 0
  %RDX.i330 = bitcast %union.anon* %12071 to i64*
  %12072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12073 = getelementptr inbounds %struct.GPR, %struct.GPR* %12072, i32 0, i32 15
  %12074 = getelementptr inbounds %struct.Reg, %struct.Reg* %12073, i32 0, i32 0
  %RBP.i331 = bitcast %union.anon* %12074 to i64*
  %12075 = load i64, i64* %RBP.i331
  %12076 = sub i64 %12075, 932
  %12077 = load i64, i64* %PC.i329
  %12078 = add i64 %12077, 7
  store i64 %12078, i64* %PC.i329
  %12079 = inttoptr i64 %12076 to i32*
  %12080 = load i32, i32* %12079
  %12081 = sext i32 %12080 to i64
  store i64 %12081, i64* %RDX.i330, align 8
  store %struct.Memory* %loadMem_4ae501, %struct.Memory** %MEMORY
  %loadMem_4ae508 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12083 = getelementptr inbounds %struct.GPR, %struct.GPR* %12082, i32 0, i32 33
  %12084 = getelementptr inbounds %struct.Reg, %struct.Reg* %12083, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %12084 to i64*
  %12085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12086 = getelementptr inbounds %struct.GPR, %struct.GPR* %12085, i32 0, i32 7
  %12087 = getelementptr inbounds %struct.Reg, %struct.Reg* %12086, i32 0, i32 0
  %RDX.i328 = bitcast %union.anon* %12087 to i64*
  %12088 = load i64, i64* %RDX.i328
  %12089 = load i64, i64* %PC.i327
  %12090 = add i64 %12089, 7
  store i64 %12090, i64* %PC.i327
  %12091 = sext i64 %12088 to i128
  %12092 = and i128 %12091, -18446744073709551616
  %12093 = zext i64 %12088 to i128
  %12094 = or i128 %12092, %12093
  %12095 = mul i128 180, %12094
  %12096 = trunc i128 %12095 to i64
  store i64 %12096, i64* %RDX.i328, align 8
  %12097 = sext i64 %12096 to i128
  %12098 = icmp ne i128 %12097, %12095
  %12099 = zext i1 %12098 to i8
  %12100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12099, i8* %12100, align 1
  %12101 = trunc i128 %12095 to i32
  %12102 = and i32 %12101, 255
  %12103 = call i32 @llvm.ctpop.i32(i32 %12102)
  %12104 = trunc i32 %12103 to i8
  %12105 = and i8 %12104, 1
  %12106 = xor i8 %12105, 1
  %12107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12106, i8* %12107, align 1
  %12108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12108, align 1
  %12109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12109, align 1
  %12110 = lshr i64 %12096, 63
  %12111 = trunc i64 %12110 to i8
  %12112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12111, i8* %12112, align 1
  %12113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12099, i8* %12113, align 1
  store %struct.Memory* %loadMem_4ae508, %struct.Memory** %MEMORY
  %loadMem_4ae50f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12115 = getelementptr inbounds %struct.GPR, %struct.GPR* %12114, i32 0, i32 33
  %12116 = getelementptr inbounds %struct.Reg, %struct.Reg* %12115, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %12116 to i64*
  %12117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12118 = getelementptr inbounds %struct.GPR, %struct.GPR* %12117, i32 0, i32 1
  %12119 = getelementptr inbounds %struct.Reg, %struct.Reg* %12118, i32 0, i32 0
  %RAX.i325 = bitcast %union.anon* %12119 to i64*
  %12120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12121 = getelementptr inbounds %struct.GPR, %struct.GPR* %12120, i32 0, i32 7
  %12122 = getelementptr inbounds %struct.Reg, %struct.Reg* %12121, i32 0, i32 0
  %RDX.i326 = bitcast %union.anon* %12122 to i64*
  %12123 = load i64, i64* %RAX.i325
  %12124 = load i64, i64* %RDX.i326
  %12125 = load i64, i64* %PC.i324
  %12126 = add i64 %12125, 3
  store i64 %12126, i64* %PC.i324
  %12127 = add i64 %12124, %12123
  store i64 %12127, i64* %RAX.i325, align 8
  %12128 = icmp ult i64 %12127, %12123
  %12129 = icmp ult i64 %12127, %12124
  %12130 = or i1 %12128, %12129
  %12131 = zext i1 %12130 to i8
  %12132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12131, i8* %12132, align 1
  %12133 = trunc i64 %12127 to i32
  %12134 = and i32 %12133, 255
  %12135 = call i32 @llvm.ctpop.i32(i32 %12134)
  %12136 = trunc i32 %12135 to i8
  %12137 = and i8 %12136, 1
  %12138 = xor i8 %12137, 1
  %12139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12138, i8* %12139, align 1
  %12140 = xor i64 %12124, %12123
  %12141 = xor i64 %12140, %12127
  %12142 = lshr i64 %12141, 4
  %12143 = trunc i64 %12142 to i8
  %12144 = and i8 %12143, 1
  %12145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12144, i8* %12145, align 1
  %12146 = icmp eq i64 %12127, 0
  %12147 = zext i1 %12146 to i8
  %12148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12147, i8* %12148, align 1
  %12149 = lshr i64 %12127, 63
  %12150 = trunc i64 %12149 to i8
  %12151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12150, i8* %12151, align 1
  %12152 = lshr i64 %12123, 63
  %12153 = lshr i64 %12124, 63
  %12154 = xor i64 %12149, %12152
  %12155 = xor i64 %12149, %12153
  %12156 = add i64 %12154, %12155
  %12157 = icmp eq i64 %12156, 2
  %12158 = zext i1 %12157 to i8
  %12159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12158, i8* %12159, align 1
  store %struct.Memory* %loadMem_4ae50f, %struct.Memory** %MEMORY
  %loadMem_4ae512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12161 = getelementptr inbounds %struct.GPR, %struct.GPR* %12160, i32 0, i32 33
  %12162 = getelementptr inbounds %struct.Reg, %struct.Reg* %12161, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %12162 to i64*
  %12163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12164 = getelementptr inbounds %struct.GPR, %struct.GPR* %12163, i32 0, i32 7
  %12165 = getelementptr inbounds %struct.Reg, %struct.Reg* %12164, i32 0, i32 0
  %RDX.i322 = bitcast %union.anon* %12165 to i64*
  %12166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12167 = getelementptr inbounds %struct.GPR, %struct.GPR* %12166, i32 0, i32 15
  %12168 = getelementptr inbounds %struct.Reg, %struct.Reg* %12167, i32 0, i32 0
  %RBP.i323 = bitcast %union.anon* %12168 to i64*
  %12169 = load i64, i64* %RBP.i323
  %12170 = sub i64 %12169, 16
  %12171 = load i64, i64* %PC.i321
  %12172 = add i64 %12171, 4
  store i64 %12172, i64* %PC.i321
  %12173 = inttoptr i64 %12170 to i32*
  %12174 = load i32, i32* %12173
  %12175 = sext i32 %12174 to i64
  store i64 %12175, i64* %RDX.i322, align 8
  store %struct.Memory* %loadMem_4ae512, %struct.Memory** %MEMORY
  %loadMem_4ae516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12177 = getelementptr inbounds %struct.GPR, %struct.GPR* %12176, i32 0, i32 33
  %12178 = getelementptr inbounds %struct.Reg, %struct.Reg* %12177, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %12178 to i64*
  %12179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12180 = getelementptr inbounds %struct.GPR, %struct.GPR* %12179, i32 0, i32 7
  %12181 = getelementptr inbounds %struct.Reg, %struct.Reg* %12180, i32 0, i32 0
  %RDX.i320 = bitcast %union.anon* %12181 to i64*
  %12182 = load i64, i64* %RDX.i320
  %12183 = load i64, i64* %PC.i319
  %12184 = add i64 %12183, 4
  store i64 %12184, i64* %PC.i319
  %12185 = sext i64 %12182 to i128
  %12186 = and i128 %12185, -18446744073709551616
  %12187 = zext i64 %12182 to i128
  %12188 = or i128 %12186, %12187
  %12189 = mul i128 12, %12188
  %12190 = trunc i128 %12189 to i64
  store i64 %12190, i64* %RDX.i320, align 8
  %12191 = sext i64 %12190 to i128
  %12192 = icmp ne i128 %12191, %12189
  %12193 = zext i1 %12192 to i8
  %12194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12193, i8* %12194, align 1
  %12195 = trunc i128 %12189 to i32
  %12196 = and i32 %12195, 255
  %12197 = call i32 @llvm.ctpop.i32(i32 %12196)
  %12198 = trunc i32 %12197 to i8
  %12199 = and i8 %12198, 1
  %12200 = xor i8 %12199, 1
  %12201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12200, i8* %12201, align 1
  %12202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12202, align 1
  %12203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12203, align 1
  %12204 = lshr i64 %12190, 63
  %12205 = trunc i64 %12204 to i8
  %12206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12205, i8* %12206, align 1
  %12207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12193, i8* %12207, align 1
  store %struct.Memory* %loadMem_4ae516, %struct.Memory** %MEMORY
  %loadMem_4ae51a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12209 = getelementptr inbounds %struct.GPR, %struct.GPR* %12208, i32 0, i32 33
  %12210 = getelementptr inbounds %struct.Reg, %struct.Reg* %12209, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %12210 to i64*
  %12211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12212 = getelementptr inbounds %struct.GPR, %struct.GPR* %12211, i32 0, i32 1
  %12213 = getelementptr inbounds %struct.Reg, %struct.Reg* %12212, i32 0, i32 0
  %RAX.i317 = bitcast %union.anon* %12213 to i64*
  %12214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12215 = getelementptr inbounds %struct.GPR, %struct.GPR* %12214, i32 0, i32 7
  %12216 = getelementptr inbounds %struct.Reg, %struct.Reg* %12215, i32 0, i32 0
  %RDX.i318 = bitcast %union.anon* %12216 to i64*
  %12217 = load i64, i64* %RAX.i317
  %12218 = load i64, i64* %RDX.i318
  %12219 = load i64, i64* %PC.i316
  %12220 = add i64 %12219, 3
  store i64 %12220, i64* %PC.i316
  %12221 = add i64 %12218, %12217
  store i64 %12221, i64* %RAX.i317, align 8
  %12222 = icmp ult i64 %12221, %12217
  %12223 = icmp ult i64 %12221, %12218
  %12224 = or i1 %12222, %12223
  %12225 = zext i1 %12224 to i8
  %12226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12225, i8* %12226, align 1
  %12227 = trunc i64 %12221 to i32
  %12228 = and i32 %12227, 255
  %12229 = call i32 @llvm.ctpop.i32(i32 %12228)
  %12230 = trunc i32 %12229 to i8
  %12231 = and i8 %12230, 1
  %12232 = xor i8 %12231, 1
  %12233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12232, i8* %12233, align 1
  %12234 = xor i64 %12218, %12217
  %12235 = xor i64 %12234, %12221
  %12236 = lshr i64 %12235, 4
  %12237 = trunc i64 %12236 to i8
  %12238 = and i8 %12237, 1
  %12239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12238, i8* %12239, align 1
  %12240 = icmp eq i64 %12221, 0
  %12241 = zext i1 %12240 to i8
  %12242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12241, i8* %12242, align 1
  %12243 = lshr i64 %12221, 63
  %12244 = trunc i64 %12243 to i8
  %12245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12244, i8* %12245, align 1
  %12246 = lshr i64 %12217, 63
  %12247 = lshr i64 %12218, 63
  %12248 = xor i64 %12243, %12246
  %12249 = xor i64 %12243, %12247
  %12250 = add i64 %12248, %12249
  %12251 = icmp eq i64 %12250, 2
  %12252 = zext i1 %12251 to i8
  %12253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12252, i8* %12253, align 1
  store %struct.Memory* %loadMem_4ae51a, %struct.Memory** %MEMORY
  %loadMem_4ae51d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12255 = getelementptr inbounds %struct.GPR, %struct.GPR* %12254, i32 0, i32 33
  %12256 = getelementptr inbounds %struct.Reg, %struct.Reg* %12255, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %12256 to i64*
  %12257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12258 = getelementptr inbounds %struct.GPR, %struct.GPR* %12257, i32 0, i32 1
  %12259 = getelementptr inbounds %struct.Reg, %struct.Reg* %12258, i32 0, i32 0
  %RAX.i314 = bitcast %union.anon* %12259 to i64*
  %12260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12261 = getelementptr inbounds %struct.GPR, %struct.GPR* %12260, i32 0, i32 11
  %12262 = getelementptr inbounds %struct.Reg, %struct.Reg* %12261, i32 0, i32 0
  %RDI.i315 = bitcast %union.anon* %12262 to i64*
  %12263 = load i64, i64* %RDI.i315
  %12264 = load i64, i64* %RAX.i314
  %12265 = load i64, i64* %PC.i313
  %12266 = add i64 %12265, 2
  store i64 %12266, i64* %PC.i313
  %12267 = trunc i64 %12263 to i32
  %12268 = inttoptr i64 %12264 to i32*
  %12269 = load i32, i32* %12268
  %12270 = add i32 %12269, %12267
  %12271 = zext i32 %12270 to i64
  store i64 %12271, i64* %RDI.i315, align 8
  %12272 = icmp ult i32 %12270, %12267
  %12273 = icmp ult i32 %12270, %12269
  %12274 = or i1 %12272, %12273
  %12275 = zext i1 %12274 to i8
  %12276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12275, i8* %12276, align 1
  %12277 = and i32 %12270, 255
  %12278 = call i32 @llvm.ctpop.i32(i32 %12277)
  %12279 = trunc i32 %12278 to i8
  %12280 = and i8 %12279, 1
  %12281 = xor i8 %12280, 1
  %12282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12281, i8* %12282, align 1
  %12283 = xor i32 %12269, %12267
  %12284 = xor i32 %12283, %12270
  %12285 = lshr i32 %12284, 4
  %12286 = trunc i32 %12285 to i8
  %12287 = and i8 %12286, 1
  %12288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12287, i8* %12288, align 1
  %12289 = icmp eq i32 %12270, 0
  %12290 = zext i1 %12289 to i8
  %12291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12290, i8* %12291, align 1
  %12292 = lshr i32 %12270, 31
  %12293 = trunc i32 %12292 to i8
  %12294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12293, i8* %12294, align 1
  %12295 = lshr i32 %12267, 31
  %12296 = lshr i32 %12269, 31
  %12297 = xor i32 %12292, %12295
  %12298 = xor i32 %12292, %12296
  %12299 = add i32 %12297, %12298
  %12300 = icmp eq i32 %12299, 2
  %12301 = zext i1 %12300 to i8
  %12302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12301, i8* %12302, align 1
  store %struct.Memory* %loadMem_4ae51d, %struct.Memory** %MEMORY
  %loadMem_4ae51f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12304 = getelementptr inbounds %struct.GPR, %struct.GPR* %12303, i32 0, i32 33
  %12305 = getelementptr inbounds %struct.Reg, %struct.Reg* %12304, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %12305 to i64*
  %12306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12307 = getelementptr inbounds %struct.GPR, %struct.GPR* %12306, i32 0, i32 1
  %12308 = getelementptr inbounds %struct.Reg, %struct.Reg* %12307, i32 0, i32 0
  %RAX.i312 = bitcast %union.anon* %12308 to i64*
  %12309 = load i64, i64* %PC.i311
  %12310 = add i64 %12309, 8
  store i64 %12310, i64* %PC.i311
  %12311 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12311, i64* %RAX.i312, align 8
  store %struct.Memory* %loadMem_4ae51f, %struct.Memory** %MEMORY
  %loadMem_4ae527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12313 = getelementptr inbounds %struct.GPR, %struct.GPR* %12312, i32 0, i32 33
  %12314 = getelementptr inbounds %struct.Reg, %struct.Reg* %12313, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %12314 to i64*
  %12315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12316 = getelementptr inbounds %struct.GPR, %struct.GPR* %12315, i32 0, i32 11
  %12317 = getelementptr inbounds %struct.Reg, %struct.Reg* %12316, i32 0, i32 0
  %EDI.i309 = bitcast %union.anon* %12317 to i32*
  %12318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12319 = getelementptr inbounds %struct.GPR, %struct.GPR* %12318, i32 0, i32 1
  %12320 = getelementptr inbounds %struct.Reg, %struct.Reg* %12319, i32 0, i32 0
  %RAX.i310 = bitcast %union.anon* %12320 to i64*
  %12321 = load i32, i32* %EDI.i309
  %12322 = zext i32 %12321 to i64
  %12323 = load i64, i64* %RAX.i310
  %12324 = add i64 %12323, 72684
  %12325 = load i64, i64* %PC.i308
  %12326 = add i64 %12325, 6
  store i64 %12326, i64* %PC.i308
  %12327 = inttoptr i64 %12324 to i32*
  %12328 = load i32, i32* %12327
  %12329 = sub i32 %12321, %12328
  %12330 = icmp ult i32 %12321, %12328
  %12331 = zext i1 %12330 to i8
  %12332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12331, i8* %12332, align 1
  %12333 = and i32 %12329, 255
  %12334 = call i32 @llvm.ctpop.i32(i32 %12333)
  %12335 = trunc i32 %12334 to i8
  %12336 = and i8 %12335, 1
  %12337 = xor i8 %12336, 1
  %12338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12337, i8* %12338, align 1
  %12339 = xor i32 %12328, %12321
  %12340 = xor i32 %12339, %12329
  %12341 = lshr i32 %12340, 4
  %12342 = trunc i32 %12341 to i8
  %12343 = and i8 %12342, 1
  %12344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12343, i8* %12344, align 1
  %12345 = icmp eq i32 %12329, 0
  %12346 = zext i1 %12345 to i8
  %12347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12346, i8* %12347, align 1
  %12348 = lshr i32 %12329, 31
  %12349 = trunc i32 %12348 to i8
  %12350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12349, i8* %12350, align 1
  %12351 = lshr i32 %12321, 31
  %12352 = lshr i32 %12328, 31
  %12353 = xor i32 %12352, %12351
  %12354 = xor i32 %12348, %12351
  %12355 = add i32 %12354, %12353
  %12356 = icmp eq i32 %12355, 2
  %12357 = zext i1 %12356 to i8
  %12358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12357, i8* %12358, align 1
  store %struct.Memory* %loadMem_4ae527, %struct.Memory** %MEMORY
  %loadMem_4ae52d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12360 = getelementptr inbounds %struct.GPR, %struct.GPR* %12359, i32 0, i32 33
  %12361 = getelementptr inbounds %struct.Reg, %struct.Reg* %12360, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %12361 to i64*
  %12362 = load i64, i64* %PC.i307
  %12363 = add i64 %12362, 31
  %12364 = load i64, i64* %PC.i307
  %12365 = add i64 %12364, 6
  %12366 = load i64, i64* %PC.i307
  %12367 = add i64 %12366, 6
  store i64 %12367, i64* %PC.i307
  %12368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12369 = load i8, i8* %12368, align 1
  %12370 = icmp ne i8 %12369, 0
  %12371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12372 = load i8, i8* %12371, align 1
  %12373 = icmp ne i8 %12372, 0
  %12374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12375 = load i8, i8* %12374, align 1
  %12376 = icmp ne i8 %12375, 0
  %12377 = xor i1 %12373, %12376
  %12378 = or i1 %12370, %12377
  %12379 = zext i1 %12378 to i8
  store i8 %12379, i8* %BRANCH_TAKEN, align 1
  %12380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12381 = select i1 %12378, i64 %12363, i64 %12365
  store i64 %12381, i64* %12380, align 8
  store %struct.Memory* %loadMem_4ae52d, %struct.Memory** %MEMORY
  %loadBr_4ae52d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae52d = icmp eq i8 %loadBr_4ae52d, 1
  br i1 %cmpBr_4ae52d, label %block_.L_4ae54c, label %block_4ae533

block_4ae533:                                     ; preds = %routine_sarl__cl___edi.exit335
  %loadMem_4ae533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12383 = getelementptr inbounds %struct.GPR, %struct.GPR* %12382, i32 0, i32 33
  %12384 = getelementptr inbounds %struct.Reg, %struct.Reg* %12383, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %12384 to i64*
  %12385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12386 = getelementptr inbounds %struct.GPR, %struct.GPR* %12385, i32 0, i32 1
  %12387 = getelementptr inbounds %struct.Reg, %struct.Reg* %12386, i32 0, i32 0
  %RAX.i306 = bitcast %union.anon* %12387 to i64*
  %12388 = load i64, i64* %PC.i305
  %12389 = add i64 %12388, 8
  store i64 %12389, i64* %PC.i305
  %12390 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12390, i64* %RAX.i306, align 8
  store %struct.Memory* %loadMem_4ae533, %struct.Memory** %MEMORY
  %loadMem_4ae53b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12392 = getelementptr inbounds %struct.GPR, %struct.GPR* %12391, i32 0, i32 33
  %12393 = getelementptr inbounds %struct.Reg, %struct.Reg* %12392, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %12393 to i64*
  %12394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12395 = getelementptr inbounds %struct.GPR, %struct.GPR* %12394, i32 0, i32 1
  %12396 = getelementptr inbounds %struct.Reg, %struct.Reg* %12395, i32 0, i32 0
  %RAX.i303 = bitcast %union.anon* %12396 to i64*
  %12397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12398 = getelementptr inbounds %struct.GPR, %struct.GPR* %12397, i32 0, i32 5
  %12399 = getelementptr inbounds %struct.Reg, %struct.Reg* %12398, i32 0, i32 0
  %RCX.i304 = bitcast %union.anon* %12399 to i64*
  %12400 = load i64, i64* %RAX.i303
  %12401 = add i64 %12400, 72684
  %12402 = load i64, i64* %PC.i302
  %12403 = add i64 %12402, 6
  store i64 %12403, i64* %PC.i302
  %12404 = inttoptr i64 %12401 to i32*
  %12405 = load i32, i32* %12404
  %12406 = zext i32 %12405 to i64
  store i64 %12406, i64* %RCX.i304, align 8
  store %struct.Memory* %loadMem_4ae53b, %struct.Memory** %MEMORY
  %loadMem_4ae541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12408 = getelementptr inbounds %struct.GPR, %struct.GPR* %12407, i32 0, i32 33
  %12409 = getelementptr inbounds %struct.Reg, %struct.Reg* %12408, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %12409 to i64*
  %12410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12411 = getelementptr inbounds %struct.GPR, %struct.GPR* %12410, i32 0, i32 5
  %12412 = getelementptr inbounds %struct.Reg, %struct.Reg* %12411, i32 0, i32 0
  %ECX.i300 = bitcast %union.anon* %12412 to i32*
  %12413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12414 = getelementptr inbounds %struct.GPR, %struct.GPR* %12413, i32 0, i32 15
  %12415 = getelementptr inbounds %struct.Reg, %struct.Reg* %12414, i32 0, i32 0
  %RBP.i301 = bitcast %union.anon* %12415 to i64*
  %12416 = load i64, i64* %RBP.i301
  %12417 = sub i64 %12416, 968
  %12418 = load i32, i32* %ECX.i300
  %12419 = zext i32 %12418 to i64
  %12420 = load i64, i64* %PC.i299
  %12421 = add i64 %12420, 6
  store i64 %12421, i64* %PC.i299
  %12422 = inttoptr i64 %12417 to i32*
  store i32 %12418, i32* %12422
  store %struct.Memory* %loadMem_4ae541, %struct.Memory** %MEMORY
  %loadMem_4ae547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12424 = getelementptr inbounds %struct.GPR, %struct.GPR* %12423, i32 0, i32 33
  %12425 = getelementptr inbounds %struct.Reg, %struct.Reg* %12424, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %12425 to i64*
  %12426 = load i64, i64* %PC.i298
  %12427 = add i64 %12426, 141
  %12428 = load i64, i64* %PC.i298
  %12429 = add i64 %12428, 5
  store i64 %12429, i64* %PC.i298
  %12430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12427, i64* %12430, align 8
  store %struct.Memory* %loadMem_4ae547, %struct.Memory** %MEMORY
  br label %block_.L_4ae5d4

block_.L_4ae54c:                                  ; preds = %routine_sarl__cl___edi.exit335
  %loadMem_4ae54c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12432 = getelementptr inbounds %struct.GPR, %struct.GPR* %12431, i32 0, i32 33
  %12433 = getelementptr inbounds %struct.Reg, %struct.Reg* %12432, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %12433 to i64*
  %12434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12435 = getelementptr inbounds %struct.GPR, %struct.GPR* %12434, i32 0, i32 1
  %12436 = getelementptr inbounds %struct.Reg, %struct.Reg* %12435, i32 0, i32 0
  %RAX.i296 = bitcast %union.anon* %12436 to i64*
  %12437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12438 = getelementptr inbounds %struct.GPR, %struct.GPR* %12437, i32 0, i32 15
  %12439 = getelementptr inbounds %struct.Reg, %struct.Reg* %12438, i32 0, i32 0
  %RBP.i297 = bitcast %union.anon* %12439 to i64*
  %12440 = load i64, i64* %RBP.i297
  %12441 = sub i64 %12440, 928
  %12442 = load i64, i64* %PC.i295
  %12443 = add i64 %12442, 7
  store i64 %12443, i64* %PC.i295
  store i64 %12441, i64* %RAX.i296, align 8
  store %struct.Memory* %loadMem_4ae54c, %struct.Memory** %MEMORY
  %loadMem_4ae553 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12445 = getelementptr inbounds %struct.GPR, %struct.GPR* %12444, i32 0, i32 33
  %12446 = getelementptr inbounds %struct.Reg, %struct.Reg* %12445, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %12446 to i64*
  %12447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12448 = getelementptr inbounds %struct.GPR, %struct.GPR* %12447, i32 0, i32 5
  %12449 = getelementptr inbounds %struct.Reg, %struct.Reg* %12448, i32 0, i32 0
  %RCX.i293 = bitcast %union.anon* %12449 to i64*
  %12450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12451 = getelementptr inbounds %struct.GPR, %struct.GPR* %12450, i32 0, i32 15
  %12452 = getelementptr inbounds %struct.Reg, %struct.Reg* %12451, i32 0, i32 0
  %RBP.i294 = bitcast %union.anon* %12452 to i64*
  %12453 = load i64, i64* %RBP.i294
  %12454 = sub i64 %12453, 560
  %12455 = load i64, i64* %PC.i292
  %12456 = add i64 %12455, 7
  store i64 %12456, i64* %PC.i292
  store i64 %12454, i64* %RCX.i293, align 8
  store %struct.Memory* %loadMem_4ae553, %struct.Memory** %MEMORY
  %loadMem_4ae55a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12458 = getelementptr inbounds %struct.GPR, %struct.GPR* %12457, i32 0, i32 33
  %12459 = getelementptr inbounds %struct.Reg, %struct.Reg* %12458, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %12459 to i64*
  %12460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12461 = getelementptr inbounds %struct.GPR, %struct.GPR* %12460, i32 0, i32 7
  %12462 = getelementptr inbounds %struct.Reg, %struct.Reg* %12461, i32 0, i32 0
  %RDX.i291 = bitcast %union.anon* %12462 to i64*
  %12463 = load i64, i64* %PC.i290
  %12464 = add i64 %12463, 8
  store i64 %12464, i64* %PC.i290
  %12465 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %12465, i64* %RDX.i291, align 8
  store %struct.Memory* %loadMem_4ae55a, %struct.Memory** %MEMORY
  %loadMem_4ae562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12467 = getelementptr inbounds %struct.GPR, %struct.GPR* %12466, i32 0, i32 33
  %12468 = getelementptr inbounds %struct.Reg, %struct.Reg* %12467, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %12468 to i64*
  %12469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12470 = getelementptr inbounds %struct.GPR, %struct.GPR* %12469, i32 0, i32 9
  %12471 = getelementptr inbounds %struct.Reg, %struct.Reg* %12470, i32 0, i32 0
  %RSI.i288 = bitcast %union.anon* %12471 to i64*
  %12472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12473 = getelementptr inbounds %struct.GPR, %struct.GPR* %12472, i32 0, i32 15
  %12474 = getelementptr inbounds %struct.Reg, %struct.Reg* %12473, i32 0, i32 0
  %RBP.i289 = bitcast %union.anon* %12474 to i64*
  %12475 = load i64, i64* %RBP.i289
  %12476 = sub i64 %12475, 16
  %12477 = load i64, i64* %PC.i287
  %12478 = add i64 %12477, 4
  store i64 %12478, i64* %PC.i287
  %12479 = inttoptr i64 %12476 to i32*
  %12480 = load i32, i32* %12479
  %12481 = sext i32 %12480 to i64
  store i64 %12481, i64* %RSI.i288, align 8
  store %struct.Memory* %loadMem_4ae562, %struct.Memory** %MEMORY
  %loadMem_4ae566 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12483 = getelementptr inbounds %struct.GPR, %struct.GPR* %12482, i32 0, i32 33
  %12484 = getelementptr inbounds %struct.Reg, %struct.Reg* %12483, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %12484 to i64*
  %12485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12486 = getelementptr inbounds %struct.GPR, %struct.GPR* %12485, i32 0, i32 7
  %12487 = getelementptr inbounds %struct.Reg, %struct.Reg* %12486, i32 0, i32 0
  %RDX.i285 = bitcast %union.anon* %12487 to i64*
  %12488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12489 = getelementptr inbounds %struct.GPR, %struct.GPR* %12488, i32 0, i32 9
  %12490 = getelementptr inbounds %struct.Reg, %struct.Reg* %12489, i32 0, i32 0
  %RSI.i286 = bitcast %union.anon* %12490 to i64*
  %12491 = load i64, i64* %RDX.i285
  %12492 = load i64, i64* %RSI.i286
  %12493 = mul i64 %12492, 8
  %12494 = add i64 %12493, %12491
  %12495 = load i64, i64* %PC.i284
  %12496 = add i64 %12495, 4
  store i64 %12496, i64* %PC.i284
  %12497 = inttoptr i64 %12494 to i64*
  %12498 = load i64, i64* %12497
  store i64 %12498, i64* %RDX.i285, align 8
  store %struct.Memory* %loadMem_4ae566, %struct.Memory** %MEMORY
  %loadMem_4ae56a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12500 = getelementptr inbounds %struct.GPR, %struct.GPR* %12499, i32 0, i32 33
  %12501 = getelementptr inbounds %struct.Reg, %struct.Reg* %12500, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %12501 to i64*
  %12502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12503 = getelementptr inbounds %struct.GPR, %struct.GPR* %12502, i32 0, i32 7
  %12504 = getelementptr inbounds %struct.Reg, %struct.Reg* %12503, i32 0, i32 0
  %RDX.i283 = bitcast %union.anon* %12504 to i64*
  %12505 = load i64, i64* %RDX.i283
  %12506 = add i64 %12505, 6448
  %12507 = load i64, i64* %PC.i282
  %12508 = add i64 %12507, 7
  store i64 %12508, i64* %PC.i282
  %12509 = inttoptr i64 %12506 to i64*
  %12510 = load i64, i64* %12509
  store i64 %12510, i64* %RDX.i283, align 8
  store %struct.Memory* %loadMem_4ae56a, %struct.Memory** %MEMORY
  %loadMem_4ae571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12512 = getelementptr inbounds %struct.GPR, %struct.GPR* %12511, i32 0, i32 33
  %12513 = getelementptr inbounds %struct.Reg, %struct.Reg* %12512, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %12513 to i64*
  %12514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12515 = getelementptr inbounds %struct.GPR, %struct.GPR* %12514, i32 0, i32 9
  %12516 = getelementptr inbounds %struct.Reg, %struct.Reg* %12515, i32 0, i32 0
  %RSI.i280 = bitcast %union.anon* %12516 to i64*
  %12517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12518 = getelementptr inbounds %struct.GPR, %struct.GPR* %12517, i32 0, i32 15
  %12519 = getelementptr inbounds %struct.Reg, %struct.Reg* %12518, i32 0, i32 0
  %RBP.i281 = bitcast %union.anon* %12519 to i64*
  %12520 = load i64, i64* %RBP.i281
  %12521 = sub i64 %12520, 8
  %12522 = load i64, i64* %PC.i279
  %12523 = add i64 %12522, 4
  store i64 %12523, i64* %PC.i279
  %12524 = inttoptr i64 %12521 to i32*
  %12525 = load i32, i32* %12524
  %12526 = sext i32 %12525 to i64
  store i64 %12526, i64* %RSI.i280, align 8
  store %struct.Memory* %loadMem_4ae571, %struct.Memory** %MEMORY
  %loadMem_4ae575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12528 = getelementptr inbounds %struct.GPR, %struct.GPR* %12527, i32 0, i32 33
  %12529 = getelementptr inbounds %struct.Reg, %struct.Reg* %12528, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %12529 to i64*
  %12530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12531 = getelementptr inbounds %struct.GPR, %struct.GPR* %12530, i32 0, i32 7
  %12532 = getelementptr inbounds %struct.Reg, %struct.Reg* %12531, i32 0, i32 0
  %RDX.i277 = bitcast %union.anon* %12532 to i64*
  %12533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12534 = getelementptr inbounds %struct.GPR, %struct.GPR* %12533, i32 0, i32 9
  %12535 = getelementptr inbounds %struct.Reg, %struct.Reg* %12534, i32 0, i32 0
  %RSI.i278 = bitcast %union.anon* %12535 to i64*
  %12536 = load i64, i64* %RDX.i277
  %12537 = load i64, i64* %RSI.i278
  %12538 = mul i64 %12537, 8
  %12539 = add i64 %12538, %12536
  %12540 = load i64, i64* %PC.i276
  %12541 = add i64 %12540, 4
  store i64 %12541, i64* %PC.i276
  %12542 = inttoptr i64 %12539 to i64*
  %12543 = load i64, i64* %12542
  store i64 %12543, i64* %RDX.i277, align 8
  store %struct.Memory* %loadMem_4ae575, %struct.Memory** %MEMORY
  %loadMem_4ae579 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12545 = getelementptr inbounds %struct.GPR, %struct.GPR* %12544, i32 0, i32 33
  %12546 = getelementptr inbounds %struct.Reg, %struct.Reg* %12545, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %12546 to i64*
  %12547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12548 = getelementptr inbounds %struct.GPR, %struct.GPR* %12547, i32 0, i32 9
  %12549 = getelementptr inbounds %struct.Reg, %struct.Reg* %12548, i32 0, i32 0
  %RSI.i274 = bitcast %union.anon* %12549 to i64*
  %12550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12551 = getelementptr inbounds %struct.GPR, %struct.GPR* %12550, i32 0, i32 15
  %12552 = getelementptr inbounds %struct.Reg, %struct.Reg* %12551, i32 0, i32 0
  %RBP.i275 = bitcast %union.anon* %12552 to i64*
  %12553 = load i64, i64* %RBP.i275
  %12554 = sub i64 %12553, 12
  %12555 = load i64, i64* %PC.i273
  %12556 = add i64 %12555, 4
  store i64 %12556, i64* %PC.i273
  %12557 = inttoptr i64 %12554 to i32*
  %12558 = load i32, i32* %12557
  %12559 = sext i32 %12558 to i64
  store i64 %12559, i64* %RSI.i274, align 8
  store %struct.Memory* %loadMem_4ae579, %struct.Memory** %MEMORY
  %loadMem_4ae57d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12561 = getelementptr inbounds %struct.GPR, %struct.GPR* %12560, i32 0, i32 33
  %12562 = getelementptr inbounds %struct.Reg, %struct.Reg* %12561, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %12562 to i64*
  %12563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12564 = getelementptr inbounds %struct.GPR, %struct.GPR* %12563, i32 0, i32 7
  %12565 = getelementptr inbounds %struct.Reg, %struct.Reg* %12564, i32 0, i32 0
  %RDX.i270 = bitcast %union.anon* %12565 to i64*
  %12566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12567 = getelementptr inbounds %struct.GPR, %struct.GPR* %12566, i32 0, i32 9
  %12568 = getelementptr inbounds %struct.Reg, %struct.Reg* %12567, i32 0, i32 0
  %RSI.i271 = bitcast %union.anon* %12568 to i64*
  %12569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12570 = getelementptr inbounds %struct.GPR, %struct.GPR* %12569, i32 0, i32 11
  %12571 = getelementptr inbounds %struct.Reg, %struct.Reg* %12570, i32 0, i32 0
  %RDI.i272 = bitcast %union.anon* %12571 to i64*
  %12572 = load i64, i64* %RDX.i270
  %12573 = load i64, i64* %RSI.i271
  %12574 = mul i64 %12573, 2
  %12575 = add i64 %12574, %12572
  %12576 = load i64, i64* %PC.i269
  %12577 = add i64 %12576, 4
  store i64 %12577, i64* %PC.i269
  %12578 = inttoptr i64 %12575 to i16*
  %12579 = load i16, i16* %12578
  %12580 = zext i16 %12579 to i64
  store i64 %12580, i64* %RDI.i272, align 8
  store %struct.Memory* %loadMem_4ae57d, %struct.Memory** %MEMORY
  %loadMem_4ae581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12582 = getelementptr inbounds %struct.GPR, %struct.GPR* %12581, i32 0, i32 33
  %12583 = getelementptr inbounds %struct.Reg, %struct.Reg* %12582, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %12583 to i64*
  %12584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12585 = getelementptr inbounds %struct.GPR, %struct.GPR* %12584, i32 0, i32 7
  %12586 = getelementptr inbounds %struct.Reg, %struct.Reg* %12585, i32 0, i32 0
  %RDX.i267 = bitcast %union.anon* %12586 to i64*
  %12587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12588 = getelementptr inbounds %struct.GPR, %struct.GPR* %12587, i32 0, i32 15
  %12589 = getelementptr inbounds %struct.Reg, %struct.Reg* %12588, i32 0, i32 0
  %RBP.i268 = bitcast %union.anon* %12589 to i64*
  %12590 = load i64, i64* %RBP.i268
  %12591 = sub i64 %12590, 932
  %12592 = load i64, i64* %PC.i266
  %12593 = add i64 %12592, 7
  store i64 %12593, i64* %PC.i266
  %12594 = inttoptr i64 %12591 to i32*
  %12595 = load i32, i32* %12594
  %12596 = sext i32 %12595 to i64
  store i64 %12596, i64* %RDX.i267, align 8
  store %struct.Memory* %loadMem_4ae581, %struct.Memory** %MEMORY
  %loadMem_4ae588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12598 = getelementptr inbounds %struct.GPR, %struct.GPR* %12597, i32 0, i32 33
  %12599 = getelementptr inbounds %struct.Reg, %struct.Reg* %12598, i32 0, i32 0
  %PC.i264 = bitcast %union.anon* %12599 to i64*
  %12600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12601 = getelementptr inbounds %struct.GPR, %struct.GPR* %12600, i32 0, i32 7
  %12602 = getelementptr inbounds %struct.Reg, %struct.Reg* %12601, i32 0, i32 0
  %RDX.i265 = bitcast %union.anon* %12602 to i64*
  %12603 = load i64, i64* %RDX.i265
  %12604 = load i64, i64* %PC.i264
  %12605 = add i64 %12604, 7
  store i64 %12605, i64* %PC.i264
  %12606 = sext i64 %12603 to i128
  %12607 = and i128 %12606, -18446744073709551616
  %12608 = zext i64 %12603 to i128
  %12609 = or i128 %12607, %12608
  %12610 = mul i128 180, %12609
  %12611 = trunc i128 %12610 to i64
  store i64 %12611, i64* %RDX.i265, align 8
  %12612 = sext i64 %12611 to i128
  %12613 = icmp ne i128 %12612, %12610
  %12614 = zext i1 %12613 to i8
  %12615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12614, i8* %12615, align 1
  %12616 = trunc i128 %12610 to i32
  %12617 = and i32 %12616, 255
  %12618 = call i32 @llvm.ctpop.i32(i32 %12617)
  %12619 = trunc i32 %12618 to i8
  %12620 = and i8 %12619, 1
  %12621 = xor i8 %12620, 1
  %12622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12621, i8* %12622, align 1
  %12623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12623, align 1
  %12624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12624, align 1
  %12625 = lshr i64 %12611, 63
  %12626 = trunc i64 %12625 to i8
  %12627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12626, i8* %12627, align 1
  %12628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12614, i8* %12628, align 1
  store %struct.Memory* %loadMem_4ae588, %struct.Memory** %MEMORY
  %loadMem_4ae58f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12630 = getelementptr inbounds %struct.GPR, %struct.GPR* %12629, i32 0, i32 33
  %12631 = getelementptr inbounds %struct.Reg, %struct.Reg* %12630, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %12631 to i64*
  %12632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12633 = getelementptr inbounds %struct.GPR, %struct.GPR* %12632, i32 0, i32 5
  %12634 = getelementptr inbounds %struct.Reg, %struct.Reg* %12633, i32 0, i32 0
  %RCX.i262 = bitcast %union.anon* %12634 to i64*
  %12635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12636 = getelementptr inbounds %struct.GPR, %struct.GPR* %12635, i32 0, i32 7
  %12637 = getelementptr inbounds %struct.Reg, %struct.Reg* %12636, i32 0, i32 0
  %RDX.i263 = bitcast %union.anon* %12637 to i64*
  %12638 = load i64, i64* %RCX.i262
  %12639 = load i64, i64* %RDX.i263
  %12640 = load i64, i64* %PC.i261
  %12641 = add i64 %12640, 3
  store i64 %12641, i64* %PC.i261
  %12642 = add i64 %12639, %12638
  store i64 %12642, i64* %RCX.i262, align 8
  %12643 = icmp ult i64 %12642, %12638
  %12644 = icmp ult i64 %12642, %12639
  %12645 = or i1 %12643, %12644
  %12646 = zext i1 %12645 to i8
  %12647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12646, i8* %12647, align 1
  %12648 = trunc i64 %12642 to i32
  %12649 = and i32 %12648, 255
  %12650 = call i32 @llvm.ctpop.i32(i32 %12649)
  %12651 = trunc i32 %12650 to i8
  %12652 = and i8 %12651, 1
  %12653 = xor i8 %12652, 1
  %12654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12653, i8* %12654, align 1
  %12655 = xor i64 %12639, %12638
  %12656 = xor i64 %12655, %12642
  %12657 = lshr i64 %12656, 4
  %12658 = trunc i64 %12657 to i8
  %12659 = and i8 %12658, 1
  %12660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12659, i8* %12660, align 1
  %12661 = icmp eq i64 %12642, 0
  %12662 = zext i1 %12661 to i8
  %12663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12662, i8* %12663, align 1
  %12664 = lshr i64 %12642, 63
  %12665 = trunc i64 %12664 to i8
  %12666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12665, i8* %12666, align 1
  %12667 = lshr i64 %12638, 63
  %12668 = lshr i64 %12639, 63
  %12669 = xor i64 %12664, %12667
  %12670 = xor i64 %12664, %12668
  %12671 = add i64 %12669, %12670
  %12672 = icmp eq i64 %12671, 2
  %12673 = zext i1 %12672 to i8
  %12674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12673, i8* %12674, align 1
  store %struct.Memory* %loadMem_4ae58f, %struct.Memory** %MEMORY
  %loadMem_4ae592 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12676 = getelementptr inbounds %struct.GPR, %struct.GPR* %12675, i32 0, i32 33
  %12677 = getelementptr inbounds %struct.Reg, %struct.Reg* %12676, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %12677 to i64*
  %12678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12679 = getelementptr inbounds %struct.GPR, %struct.GPR* %12678, i32 0, i32 7
  %12680 = getelementptr inbounds %struct.Reg, %struct.Reg* %12679, i32 0, i32 0
  %RDX.i259 = bitcast %union.anon* %12680 to i64*
  %12681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12682 = getelementptr inbounds %struct.GPR, %struct.GPR* %12681, i32 0, i32 15
  %12683 = getelementptr inbounds %struct.Reg, %struct.Reg* %12682, i32 0, i32 0
  %RBP.i260 = bitcast %union.anon* %12683 to i64*
  %12684 = load i64, i64* %RBP.i260
  %12685 = sub i64 %12684, 16
  %12686 = load i64, i64* %PC.i258
  %12687 = add i64 %12686, 4
  store i64 %12687, i64* %PC.i258
  %12688 = inttoptr i64 %12685 to i32*
  %12689 = load i32, i32* %12688
  %12690 = sext i32 %12689 to i64
  store i64 %12690, i64* %RDX.i259, align 8
  store %struct.Memory* %loadMem_4ae592, %struct.Memory** %MEMORY
  %loadMem_4ae596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12692 = getelementptr inbounds %struct.GPR, %struct.GPR* %12691, i32 0, i32 33
  %12693 = getelementptr inbounds %struct.Reg, %struct.Reg* %12692, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %12693 to i64*
  %12694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12695 = getelementptr inbounds %struct.GPR, %struct.GPR* %12694, i32 0, i32 7
  %12696 = getelementptr inbounds %struct.Reg, %struct.Reg* %12695, i32 0, i32 0
  %RDX.i257 = bitcast %union.anon* %12696 to i64*
  %12697 = load i64, i64* %RDX.i257
  %12698 = load i64, i64* %PC.i256
  %12699 = add i64 %12698, 4
  store i64 %12699, i64* %PC.i256
  %12700 = sext i64 %12697 to i128
  %12701 = and i128 %12700, -18446744073709551616
  %12702 = zext i64 %12697 to i128
  %12703 = or i128 %12701, %12702
  %12704 = mul i128 12, %12703
  %12705 = trunc i128 %12704 to i64
  store i64 %12705, i64* %RDX.i257, align 8
  %12706 = sext i64 %12705 to i128
  %12707 = icmp ne i128 %12706, %12704
  %12708 = zext i1 %12707 to i8
  %12709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12708, i8* %12709, align 1
  %12710 = trunc i128 %12704 to i32
  %12711 = and i32 %12710, 255
  %12712 = call i32 @llvm.ctpop.i32(i32 %12711)
  %12713 = trunc i32 %12712 to i8
  %12714 = and i8 %12713, 1
  %12715 = xor i8 %12714, 1
  %12716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12715, i8* %12716, align 1
  %12717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12717, align 1
  %12718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12718, align 1
  %12719 = lshr i64 %12705, 63
  %12720 = trunc i64 %12719 to i8
  %12721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12720, i8* %12721, align 1
  %12722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12708, i8* %12722, align 1
  store %struct.Memory* %loadMem_4ae596, %struct.Memory** %MEMORY
  %loadMem_4ae59a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12724 = getelementptr inbounds %struct.GPR, %struct.GPR* %12723, i32 0, i32 33
  %12725 = getelementptr inbounds %struct.Reg, %struct.Reg* %12724, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %12725 to i64*
  %12726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12727 = getelementptr inbounds %struct.GPR, %struct.GPR* %12726, i32 0, i32 5
  %12728 = getelementptr inbounds %struct.Reg, %struct.Reg* %12727, i32 0, i32 0
  %RCX.i254 = bitcast %union.anon* %12728 to i64*
  %12729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12730 = getelementptr inbounds %struct.GPR, %struct.GPR* %12729, i32 0, i32 7
  %12731 = getelementptr inbounds %struct.Reg, %struct.Reg* %12730, i32 0, i32 0
  %RDX.i255 = bitcast %union.anon* %12731 to i64*
  %12732 = load i64, i64* %RCX.i254
  %12733 = load i64, i64* %RDX.i255
  %12734 = load i64, i64* %PC.i253
  %12735 = add i64 %12734, 3
  store i64 %12735, i64* %PC.i253
  %12736 = add i64 %12733, %12732
  store i64 %12736, i64* %RCX.i254, align 8
  %12737 = icmp ult i64 %12736, %12732
  %12738 = icmp ult i64 %12736, %12733
  %12739 = or i1 %12737, %12738
  %12740 = zext i1 %12739 to i8
  %12741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12740, i8* %12741, align 1
  %12742 = trunc i64 %12736 to i32
  %12743 = and i32 %12742, 255
  %12744 = call i32 @llvm.ctpop.i32(i32 %12743)
  %12745 = trunc i32 %12744 to i8
  %12746 = and i8 %12745, 1
  %12747 = xor i8 %12746, 1
  %12748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12747, i8* %12748, align 1
  %12749 = xor i64 %12733, %12732
  %12750 = xor i64 %12749, %12736
  %12751 = lshr i64 %12750, 4
  %12752 = trunc i64 %12751 to i8
  %12753 = and i8 %12752, 1
  %12754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12753, i8* %12754, align 1
  %12755 = icmp eq i64 %12736, 0
  %12756 = zext i1 %12755 to i8
  %12757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12756, i8* %12757, align 1
  %12758 = lshr i64 %12736, 63
  %12759 = trunc i64 %12758 to i8
  %12760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12759, i8* %12760, align 1
  %12761 = lshr i64 %12732, 63
  %12762 = lshr i64 %12733, 63
  %12763 = xor i64 %12758, %12761
  %12764 = xor i64 %12758, %12762
  %12765 = add i64 %12763, %12764
  %12766 = icmp eq i64 %12765, 2
  %12767 = zext i1 %12766 to i8
  %12768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12767, i8* %12768, align 1
  store %struct.Memory* %loadMem_4ae59a, %struct.Memory** %MEMORY
  %loadMem_4ae59d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12770 = getelementptr inbounds %struct.GPR, %struct.GPR* %12769, i32 0, i32 33
  %12771 = getelementptr inbounds %struct.Reg, %struct.Reg* %12770, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %12771 to i64*
  %12772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12773 = getelementptr inbounds %struct.GPR, %struct.GPR* %12772, i32 0, i32 5
  %12774 = getelementptr inbounds %struct.Reg, %struct.Reg* %12773, i32 0, i32 0
  %RCX.i251 = bitcast %union.anon* %12774 to i64*
  %12775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12776 = getelementptr inbounds %struct.GPR, %struct.GPR* %12775, i32 0, i32 11
  %12777 = getelementptr inbounds %struct.Reg, %struct.Reg* %12776, i32 0, i32 0
  %RDI.i252 = bitcast %union.anon* %12777 to i64*
  %12778 = load i64, i64* %RDI.i252
  %12779 = load i64, i64* %RCX.i251
  %12780 = load i64, i64* %PC.i250
  %12781 = add i64 %12780, 3
  store i64 %12781, i64* %PC.i250
  %12782 = inttoptr i64 %12779 to i32*
  %12783 = load i32, i32* %12782
  %12784 = shl i64 %12778, 32
  %12785 = ashr exact i64 %12784, 32
  %12786 = sext i32 %12783 to i64
  %12787 = mul i64 %12786, %12785
  %12788 = trunc i64 %12787 to i32
  %12789 = and i64 %12787, 4294967295
  store i64 %12789, i64* %RDI.i252, align 8
  %12790 = shl i64 %12787, 32
  %12791 = ashr exact i64 %12790, 32
  %12792 = icmp ne i64 %12791, %12787
  %12793 = zext i1 %12792 to i8
  %12794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12793, i8* %12794, align 1
  %12795 = and i32 %12788, 255
  %12796 = call i32 @llvm.ctpop.i32(i32 %12795)
  %12797 = trunc i32 %12796 to i8
  %12798 = and i8 %12797, 1
  %12799 = xor i8 %12798, 1
  %12800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12799, i8* %12800, align 1
  %12801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12801, align 1
  %12802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12802, align 1
  %12803 = lshr i32 %12788, 31
  %12804 = trunc i32 %12803 to i8
  %12805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12804, i8* %12805, align 1
  %12806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12793, i8* %12806, align 1
  store %struct.Memory* %loadMem_4ae59d, %struct.Memory** %MEMORY
  %loadMem_4ae5a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12808 = getelementptr inbounds %struct.GPR, %struct.GPR* %12807, i32 0, i32 33
  %12809 = getelementptr inbounds %struct.Reg, %struct.Reg* %12808, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %12809 to i64*
  %12810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12811 = getelementptr inbounds %struct.GPR, %struct.GPR* %12810, i32 0, i32 11
  %12812 = getelementptr inbounds %struct.Reg, %struct.Reg* %12811, i32 0, i32 0
  %RDI.i249 = bitcast %union.anon* %12812 to i64*
  %12813 = load i64, i64* %RDI.i249
  %12814 = load i64, i64* %PC.i248
  %12815 = add i64 %12814, 7
  store i64 %12815, i64* %PC.i248
  %12816 = trunc i64 %12813 to i32
  %12817 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %12818 = add i32 %12817, %12816
  %12819 = zext i32 %12818 to i64
  store i64 %12819, i64* %RDI.i249, align 8
  %12820 = icmp ult i32 %12818, %12816
  %12821 = icmp ult i32 %12818, %12817
  %12822 = or i1 %12820, %12821
  %12823 = zext i1 %12822 to i8
  %12824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12823, i8* %12824, align 1
  %12825 = and i32 %12818, 255
  %12826 = call i32 @llvm.ctpop.i32(i32 %12825)
  %12827 = trunc i32 %12826 to i8
  %12828 = and i8 %12827, 1
  %12829 = xor i8 %12828, 1
  %12830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12829, i8* %12830, align 1
  %12831 = xor i32 %12817, %12816
  %12832 = xor i32 %12831, %12818
  %12833 = lshr i32 %12832, 4
  %12834 = trunc i32 %12833 to i8
  %12835 = and i8 %12834, 1
  %12836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12835, i8* %12836, align 1
  %12837 = icmp eq i32 %12818, 0
  %12838 = zext i1 %12837 to i8
  %12839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12838, i8* %12839, align 1
  %12840 = lshr i32 %12818, 31
  %12841 = trunc i32 %12840 to i8
  %12842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12841, i8* %12842, align 1
  %12843 = lshr i32 %12816, 31
  %12844 = lshr i32 %12817, 31
  %12845 = xor i32 %12840, %12843
  %12846 = xor i32 %12840, %12844
  %12847 = add i32 %12845, %12846
  %12848 = icmp eq i32 %12847, 2
  %12849 = zext i1 %12848 to i8
  %12850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12849, i8* %12850, align 1
  store %struct.Memory* %loadMem_4ae5a0, %struct.Memory** %MEMORY
  %loadMem_4ae5a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12852 = getelementptr inbounds %struct.GPR, %struct.GPR* %12851, i32 0, i32 33
  %12853 = getelementptr inbounds %struct.Reg, %struct.Reg* %12852, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %12853 to i64*
  %12854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12855 = getelementptr inbounds %struct.GPR, %struct.GPR* %12854, i32 0, i32 5
  %12856 = getelementptr inbounds %struct.Reg, %struct.Reg* %12855, i32 0, i32 0
  %RCX.i247 = bitcast %union.anon* %12856 to i64*
  %12857 = load i64, i64* %PC.i246
  %12858 = add i64 %12857, 7
  store i64 %12858, i64* %PC.i246
  %12859 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %12860 = zext i32 %12859 to i64
  store i64 %12860, i64* %RCX.i247, align 8
  store %struct.Memory* %loadMem_4ae5a7, %struct.Memory** %MEMORY
  %loadMem_4ae5ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %12861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12862 = getelementptr inbounds %struct.GPR, %struct.GPR* %12861, i32 0, i32 33
  %12863 = getelementptr inbounds %struct.Reg, %struct.Reg* %12862, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %12863 to i64*
  %12864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12865 = getelementptr inbounds %struct.GPR, %struct.GPR* %12864, i32 0, i32 5
  %12866 = getelementptr inbounds %struct.Reg, %struct.Reg* %12865, i32 0, i32 0
  %12867 = bitcast %union.anon* %12866 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12867, i32 0, i32 0
  %12868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12869 = getelementptr inbounds %struct.GPR, %struct.GPR* %12868, i32 0, i32 11
  %12870 = getelementptr inbounds %struct.Reg, %struct.Reg* %12869, i32 0, i32 0
  %RDI.i245 = bitcast %union.anon* %12870 to i64*
  %12871 = load i64, i64* %RDI.i245
  %12872 = load i8, i8* %CL.i
  %12873 = zext i8 %12872 to i64
  %12874 = load i64, i64* %PC.i244
  %12875 = add i64 %12874, 2
  store i64 %12875, i64* %PC.i244
  %12876 = trunc i64 %12873 to i5
  switch i5 %12876, label %12880 [
    i5 0, label %routine_sarl__cl___edi.exit
    i5 1, label %12877
  ]

; <label>:12877:                                  ; preds = %block_.L_4ae54c
  %12878 = shl i64 %12871, 32
  %12879 = ashr i64 %12878, 33
  br label %12887

; <label>:12880:                                  ; preds = %block_.L_4ae54c
  %12881 = and i64 %12873, 31
  %12882 = add i64 %12881, -1
  %12883 = shl i64 %12871, 32
  %12884 = ashr exact i64 %12883, 32
  %12885 = ashr i64 %12884, %12882
  %12886 = lshr i64 %12885, 1
  br label %12887

; <label>:12887:                                  ; preds = %12880, %12877
  %12888 = phi i64 [ %12886, %12880 ], [ %12879, %12877 ]
  %12889 = phi i64 [ %12885, %12880 ], [ %12871, %12877 ]
  %12890 = trunc i64 %12889 to i8
  %12891 = and i8 %12890, 1
  %12892 = trunc i64 %12888 to i32
  %12893 = and i64 %12888, 4294967295
  store i64 %12893, i64* %RDI.i245, align 8
  %12894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12891, i8* %12894, align 1
  %12895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12896 = and i32 %12892, 255
  %12897 = call i32 @llvm.ctpop.i32(i32 %12896)
  %12898 = trunc i32 %12897 to i8
  %12899 = and i8 %12898, 1
  %12900 = xor i8 %12899, 1
  store i8 %12900, i8* %12895, align 1
  %12901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12901, align 1
  %12902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12903 = icmp eq i32 %12892, 0
  %12904 = zext i1 %12903 to i8
  store i8 %12904, i8* %12902, align 1
  %12905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12906 = lshr i32 %12892, 31
  %12907 = trunc i32 %12906 to i8
  store i8 %12907, i8* %12905, align 1
  %12908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12908, align 1
  br label %routine_sarl__cl___edi.exit

routine_sarl__cl___edi.exit:                      ; preds = %block_.L_4ae54c, %12887
  store %struct.Memory* %loadMem_4ae5ae, %struct.Memory** %MEMORY
  %loadMem_4ae5b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12910 = getelementptr inbounds %struct.GPR, %struct.GPR* %12909, i32 0, i32 33
  %12911 = getelementptr inbounds %struct.Reg, %struct.Reg* %12910, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %12911 to i64*
  %12912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12913 = getelementptr inbounds %struct.GPR, %struct.GPR* %12912, i32 0, i32 7
  %12914 = getelementptr inbounds %struct.Reg, %struct.Reg* %12913, i32 0, i32 0
  %RDX.i242 = bitcast %union.anon* %12914 to i64*
  %12915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12916 = getelementptr inbounds %struct.GPR, %struct.GPR* %12915, i32 0, i32 15
  %12917 = getelementptr inbounds %struct.Reg, %struct.Reg* %12916, i32 0, i32 0
  %RBP.i243 = bitcast %union.anon* %12917 to i64*
  %12918 = load i64, i64* %RBP.i243
  %12919 = sub i64 %12918, 932
  %12920 = load i64, i64* %PC.i241
  %12921 = add i64 %12920, 7
  store i64 %12921, i64* %PC.i241
  %12922 = inttoptr i64 %12919 to i32*
  %12923 = load i32, i32* %12922
  %12924 = sext i32 %12923 to i64
  store i64 %12924, i64* %RDX.i242, align 8
  store %struct.Memory* %loadMem_4ae5b0, %struct.Memory** %MEMORY
  %loadMem_4ae5b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12926 = getelementptr inbounds %struct.GPR, %struct.GPR* %12925, i32 0, i32 33
  %12927 = getelementptr inbounds %struct.Reg, %struct.Reg* %12926, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %12927 to i64*
  %12928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12929 = getelementptr inbounds %struct.GPR, %struct.GPR* %12928, i32 0, i32 7
  %12930 = getelementptr inbounds %struct.Reg, %struct.Reg* %12929, i32 0, i32 0
  %RDX.i240 = bitcast %union.anon* %12930 to i64*
  %12931 = load i64, i64* %RDX.i240
  %12932 = load i64, i64* %PC.i239
  %12933 = add i64 %12932, 7
  store i64 %12933, i64* %PC.i239
  %12934 = sext i64 %12931 to i128
  %12935 = and i128 %12934, -18446744073709551616
  %12936 = zext i64 %12931 to i128
  %12937 = or i128 %12935, %12936
  %12938 = mul i128 180, %12937
  %12939 = trunc i128 %12938 to i64
  store i64 %12939, i64* %RDX.i240, align 8
  %12940 = sext i64 %12939 to i128
  %12941 = icmp ne i128 %12940, %12938
  %12942 = zext i1 %12941 to i8
  %12943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12942, i8* %12943, align 1
  %12944 = trunc i128 %12938 to i32
  %12945 = and i32 %12944, 255
  %12946 = call i32 @llvm.ctpop.i32(i32 %12945)
  %12947 = trunc i32 %12946 to i8
  %12948 = and i8 %12947, 1
  %12949 = xor i8 %12948, 1
  %12950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12949, i8* %12950, align 1
  %12951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12951, align 1
  %12952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12952, align 1
  %12953 = lshr i64 %12939, 63
  %12954 = trunc i64 %12953 to i8
  %12955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12954, i8* %12955, align 1
  %12956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12942, i8* %12956, align 1
  store %struct.Memory* %loadMem_4ae5b7, %struct.Memory** %MEMORY
  %loadMem_4ae5be = load %struct.Memory*, %struct.Memory** %MEMORY
  %12957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12958 = getelementptr inbounds %struct.GPR, %struct.GPR* %12957, i32 0, i32 33
  %12959 = getelementptr inbounds %struct.Reg, %struct.Reg* %12958, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %12959 to i64*
  %12960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12961 = getelementptr inbounds %struct.GPR, %struct.GPR* %12960, i32 0, i32 1
  %12962 = getelementptr inbounds %struct.Reg, %struct.Reg* %12961, i32 0, i32 0
  %RAX.i237 = bitcast %union.anon* %12962 to i64*
  %12963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12964 = getelementptr inbounds %struct.GPR, %struct.GPR* %12963, i32 0, i32 7
  %12965 = getelementptr inbounds %struct.Reg, %struct.Reg* %12964, i32 0, i32 0
  %RDX.i238 = bitcast %union.anon* %12965 to i64*
  %12966 = load i64, i64* %RAX.i237
  %12967 = load i64, i64* %RDX.i238
  %12968 = load i64, i64* %PC.i236
  %12969 = add i64 %12968, 3
  store i64 %12969, i64* %PC.i236
  %12970 = add i64 %12967, %12966
  store i64 %12970, i64* %RAX.i237, align 8
  %12971 = icmp ult i64 %12970, %12966
  %12972 = icmp ult i64 %12970, %12967
  %12973 = or i1 %12971, %12972
  %12974 = zext i1 %12973 to i8
  %12975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12974, i8* %12975, align 1
  %12976 = trunc i64 %12970 to i32
  %12977 = and i32 %12976, 255
  %12978 = call i32 @llvm.ctpop.i32(i32 %12977)
  %12979 = trunc i32 %12978 to i8
  %12980 = and i8 %12979, 1
  %12981 = xor i8 %12980, 1
  %12982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12981, i8* %12982, align 1
  %12983 = xor i64 %12967, %12966
  %12984 = xor i64 %12983, %12970
  %12985 = lshr i64 %12984, 4
  %12986 = trunc i64 %12985 to i8
  %12987 = and i8 %12986, 1
  %12988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12987, i8* %12988, align 1
  %12989 = icmp eq i64 %12970, 0
  %12990 = zext i1 %12989 to i8
  %12991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12990, i8* %12991, align 1
  %12992 = lshr i64 %12970, 63
  %12993 = trunc i64 %12992 to i8
  %12994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12993, i8* %12994, align 1
  %12995 = lshr i64 %12966, 63
  %12996 = lshr i64 %12967, 63
  %12997 = xor i64 %12992, %12995
  %12998 = xor i64 %12992, %12996
  %12999 = add i64 %12997, %12998
  %13000 = icmp eq i64 %12999, 2
  %13001 = zext i1 %13000 to i8
  %13002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13001, i8* %13002, align 1
  store %struct.Memory* %loadMem_4ae5be, %struct.Memory** %MEMORY
  %loadMem_4ae5c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13004 = getelementptr inbounds %struct.GPR, %struct.GPR* %13003, i32 0, i32 33
  %13005 = getelementptr inbounds %struct.Reg, %struct.Reg* %13004, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %13005 to i64*
  %13006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13007 = getelementptr inbounds %struct.GPR, %struct.GPR* %13006, i32 0, i32 7
  %13008 = getelementptr inbounds %struct.Reg, %struct.Reg* %13007, i32 0, i32 0
  %RDX.i234 = bitcast %union.anon* %13008 to i64*
  %13009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13010 = getelementptr inbounds %struct.GPR, %struct.GPR* %13009, i32 0, i32 15
  %13011 = getelementptr inbounds %struct.Reg, %struct.Reg* %13010, i32 0, i32 0
  %RBP.i235 = bitcast %union.anon* %13011 to i64*
  %13012 = load i64, i64* %RBP.i235
  %13013 = sub i64 %13012, 16
  %13014 = load i64, i64* %PC.i233
  %13015 = add i64 %13014, 4
  store i64 %13015, i64* %PC.i233
  %13016 = inttoptr i64 %13013 to i32*
  %13017 = load i32, i32* %13016
  %13018 = sext i32 %13017 to i64
  store i64 %13018, i64* %RDX.i234, align 8
  store %struct.Memory* %loadMem_4ae5c1, %struct.Memory** %MEMORY
  %loadMem_4ae5c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13020 = getelementptr inbounds %struct.GPR, %struct.GPR* %13019, i32 0, i32 33
  %13021 = getelementptr inbounds %struct.Reg, %struct.Reg* %13020, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %13021 to i64*
  %13022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13023 = getelementptr inbounds %struct.GPR, %struct.GPR* %13022, i32 0, i32 7
  %13024 = getelementptr inbounds %struct.Reg, %struct.Reg* %13023, i32 0, i32 0
  %RDX.i232 = bitcast %union.anon* %13024 to i64*
  %13025 = load i64, i64* %RDX.i232
  %13026 = load i64, i64* %PC.i231
  %13027 = add i64 %13026, 4
  store i64 %13027, i64* %PC.i231
  %13028 = sext i64 %13025 to i128
  %13029 = and i128 %13028, -18446744073709551616
  %13030 = zext i64 %13025 to i128
  %13031 = or i128 %13029, %13030
  %13032 = mul i128 12, %13031
  %13033 = trunc i128 %13032 to i64
  store i64 %13033, i64* %RDX.i232, align 8
  %13034 = sext i64 %13033 to i128
  %13035 = icmp ne i128 %13034, %13032
  %13036 = zext i1 %13035 to i8
  %13037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13036, i8* %13037, align 1
  %13038 = trunc i128 %13032 to i32
  %13039 = and i32 %13038, 255
  %13040 = call i32 @llvm.ctpop.i32(i32 %13039)
  %13041 = trunc i32 %13040 to i8
  %13042 = and i8 %13041, 1
  %13043 = xor i8 %13042, 1
  %13044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13043, i8* %13044, align 1
  %13045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13045, align 1
  %13046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13046, align 1
  %13047 = lshr i64 %13033, 63
  %13048 = trunc i64 %13047 to i8
  %13049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13048, i8* %13049, align 1
  %13050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13036, i8* %13050, align 1
  store %struct.Memory* %loadMem_4ae5c5, %struct.Memory** %MEMORY
  %loadMem_4ae5c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13052 = getelementptr inbounds %struct.GPR, %struct.GPR* %13051, i32 0, i32 33
  %13053 = getelementptr inbounds %struct.Reg, %struct.Reg* %13052, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %13053 to i64*
  %13054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13055 = getelementptr inbounds %struct.GPR, %struct.GPR* %13054, i32 0, i32 1
  %13056 = getelementptr inbounds %struct.Reg, %struct.Reg* %13055, i32 0, i32 0
  %RAX.i229 = bitcast %union.anon* %13056 to i64*
  %13057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13058 = getelementptr inbounds %struct.GPR, %struct.GPR* %13057, i32 0, i32 7
  %13059 = getelementptr inbounds %struct.Reg, %struct.Reg* %13058, i32 0, i32 0
  %RDX.i230 = bitcast %union.anon* %13059 to i64*
  %13060 = load i64, i64* %RAX.i229
  %13061 = load i64, i64* %RDX.i230
  %13062 = load i64, i64* %PC.i228
  %13063 = add i64 %13062, 3
  store i64 %13063, i64* %PC.i228
  %13064 = add i64 %13061, %13060
  store i64 %13064, i64* %RAX.i229, align 8
  %13065 = icmp ult i64 %13064, %13060
  %13066 = icmp ult i64 %13064, %13061
  %13067 = or i1 %13065, %13066
  %13068 = zext i1 %13067 to i8
  %13069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13068, i8* %13069, align 1
  %13070 = trunc i64 %13064 to i32
  %13071 = and i32 %13070, 255
  %13072 = call i32 @llvm.ctpop.i32(i32 %13071)
  %13073 = trunc i32 %13072 to i8
  %13074 = and i8 %13073, 1
  %13075 = xor i8 %13074, 1
  %13076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13075, i8* %13076, align 1
  %13077 = xor i64 %13061, %13060
  %13078 = xor i64 %13077, %13064
  %13079 = lshr i64 %13078, 4
  %13080 = trunc i64 %13079 to i8
  %13081 = and i8 %13080, 1
  %13082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13081, i8* %13082, align 1
  %13083 = icmp eq i64 %13064, 0
  %13084 = zext i1 %13083 to i8
  %13085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13084, i8* %13085, align 1
  %13086 = lshr i64 %13064, 63
  %13087 = trunc i64 %13086 to i8
  %13088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13087, i8* %13088, align 1
  %13089 = lshr i64 %13060, 63
  %13090 = lshr i64 %13061, 63
  %13091 = xor i64 %13086, %13089
  %13092 = xor i64 %13086, %13090
  %13093 = add i64 %13091, %13092
  %13094 = icmp eq i64 %13093, 2
  %13095 = zext i1 %13094 to i8
  %13096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13095, i8* %13096, align 1
  store %struct.Memory* %loadMem_4ae5c9, %struct.Memory** %MEMORY
  %loadMem_4ae5cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13098 = getelementptr inbounds %struct.GPR, %struct.GPR* %13097, i32 0, i32 33
  %13099 = getelementptr inbounds %struct.Reg, %struct.Reg* %13098, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %13099 to i64*
  %13100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13101 = getelementptr inbounds %struct.GPR, %struct.GPR* %13100, i32 0, i32 1
  %13102 = getelementptr inbounds %struct.Reg, %struct.Reg* %13101, i32 0, i32 0
  %RAX.i227 = bitcast %union.anon* %13102 to i64*
  %13103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13104 = getelementptr inbounds %struct.GPR, %struct.GPR* %13103, i32 0, i32 11
  %13105 = getelementptr inbounds %struct.Reg, %struct.Reg* %13104, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %13105 to i64*
  %13106 = load i64, i64* %RDI.i
  %13107 = load i64, i64* %RAX.i227
  %13108 = load i64, i64* %PC.i226
  %13109 = add i64 %13108, 2
  store i64 %13109, i64* %PC.i226
  %13110 = trunc i64 %13106 to i32
  %13111 = inttoptr i64 %13107 to i32*
  %13112 = load i32, i32* %13111
  %13113 = add i32 %13112, %13110
  %13114 = zext i32 %13113 to i64
  store i64 %13114, i64* %RDI.i, align 8
  %13115 = icmp ult i32 %13113, %13110
  %13116 = icmp ult i32 %13113, %13112
  %13117 = or i1 %13115, %13116
  %13118 = zext i1 %13117 to i8
  %13119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13118, i8* %13119, align 1
  %13120 = and i32 %13113, 255
  %13121 = call i32 @llvm.ctpop.i32(i32 %13120)
  %13122 = trunc i32 %13121 to i8
  %13123 = and i8 %13122, 1
  %13124 = xor i8 %13123, 1
  %13125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13124, i8* %13125, align 1
  %13126 = xor i32 %13112, %13110
  %13127 = xor i32 %13126, %13113
  %13128 = lshr i32 %13127, 4
  %13129 = trunc i32 %13128 to i8
  %13130 = and i8 %13129, 1
  %13131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13130, i8* %13131, align 1
  %13132 = icmp eq i32 %13113, 0
  %13133 = zext i1 %13132 to i8
  %13134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13133, i8* %13134, align 1
  %13135 = lshr i32 %13113, 31
  %13136 = trunc i32 %13135 to i8
  %13137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13136, i8* %13137, align 1
  %13138 = lshr i32 %13110, 31
  %13139 = lshr i32 %13112, 31
  %13140 = xor i32 %13135, %13138
  %13141 = xor i32 %13135, %13139
  %13142 = add i32 %13140, %13141
  %13143 = icmp eq i32 %13142, 2
  %13144 = zext i1 %13143 to i8
  %13145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13144, i8* %13145, align 1
  store %struct.Memory* %loadMem_4ae5cc, %struct.Memory** %MEMORY
  %loadMem_4ae5ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %13146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13147 = getelementptr inbounds %struct.GPR, %struct.GPR* %13146, i32 0, i32 33
  %13148 = getelementptr inbounds %struct.Reg, %struct.Reg* %13147, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %13148 to i64*
  %13149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13150 = getelementptr inbounds %struct.GPR, %struct.GPR* %13149, i32 0, i32 11
  %13151 = getelementptr inbounds %struct.Reg, %struct.Reg* %13150, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %13151 to i32*
  %13152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13153 = getelementptr inbounds %struct.GPR, %struct.GPR* %13152, i32 0, i32 15
  %13154 = getelementptr inbounds %struct.Reg, %struct.Reg* %13153, i32 0, i32 0
  %RBP.i225 = bitcast %union.anon* %13154 to i64*
  %13155 = load i64, i64* %RBP.i225
  %13156 = sub i64 %13155, 968
  %13157 = load i32, i32* %EDI.i
  %13158 = zext i32 %13157 to i64
  %13159 = load i64, i64* %PC.i224
  %13160 = add i64 %13159, 6
  store i64 %13160, i64* %PC.i224
  %13161 = inttoptr i64 %13156 to i32*
  store i32 %13157, i32* %13161
  store %struct.Memory* %loadMem_4ae5ce, %struct.Memory** %MEMORY
  br label %block_.L_4ae5d4

block_.L_4ae5d4:                                  ; preds = %routine_sarl__cl___edi.exit, %block_4ae533
  %loadMem_4ae5d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13163 = getelementptr inbounds %struct.GPR, %struct.GPR* %13162, i32 0, i32 33
  %13164 = getelementptr inbounds %struct.Reg, %struct.Reg* %13163, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %13164 to i64*
  %13165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13166 = getelementptr inbounds %struct.GPR, %struct.GPR* %13165, i32 0, i32 1
  %13167 = getelementptr inbounds %struct.Reg, %struct.Reg* %13166, i32 0, i32 0
  %RAX.i222 = bitcast %union.anon* %13167 to i64*
  %13168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13169 = getelementptr inbounds %struct.GPR, %struct.GPR* %13168, i32 0, i32 15
  %13170 = getelementptr inbounds %struct.Reg, %struct.Reg* %13169, i32 0, i32 0
  %RBP.i223 = bitcast %union.anon* %13170 to i64*
  %13171 = load i64, i64* %RBP.i223
  %13172 = sub i64 %13171, 968
  %13173 = load i64, i64* %PC.i221
  %13174 = add i64 %13173, 6
  store i64 %13174, i64* %PC.i221
  %13175 = inttoptr i64 %13172 to i32*
  %13176 = load i32, i32* %13175
  %13177 = zext i32 %13176 to i64
  store i64 %13177, i64* %RAX.i222, align 8
  store %struct.Memory* %loadMem_4ae5d4, %struct.Memory** %MEMORY
  %loadMem_4ae5da = load %struct.Memory*, %struct.Memory** %MEMORY
  %13178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13179 = getelementptr inbounds %struct.GPR, %struct.GPR* %13178, i32 0, i32 33
  %13180 = getelementptr inbounds %struct.Reg, %struct.Reg* %13179, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %13180 to i64*
  %13181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13182 = getelementptr inbounds %struct.GPR, %struct.GPR* %13181, i32 0, i32 1
  %13183 = getelementptr inbounds %struct.Reg, %struct.Reg* %13182, i32 0, i32 0
  %EAX.i219 = bitcast %union.anon* %13183 to i32*
  %13184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13185 = getelementptr inbounds %struct.GPR, %struct.GPR* %13184, i32 0, i32 15
  %13186 = getelementptr inbounds %struct.Reg, %struct.Reg* %13185, i32 0, i32 0
  %RBP.i220 = bitcast %union.anon* %13186 to i64*
  %13187 = load i64, i64* %RBP.i220
  %13188 = sub i64 %13187, 964
  %13189 = load i32, i32* %EAX.i219
  %13190 = zext i32 %13189 to i64
  %13191 = load i64, i64* %PC.i218
  %13192 = add i64 %13191, 6
  store i64 %13192, i64* %PC.i218
  %13193 = inttoptr i64 %13188 to i32*
  store i32 %13189, i32* %13193
  store %struct.Memory* %loadMem_4ae5da, %struct.Memory** %MEMORY
  br label %block_.L_4ae5e0

block_.L_4ae5e0:                                  ; preds = %block_.L_4ae5d4, %block_4ae490
  %loadMem_4ae5e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13195 = getelementptr inbounds %struct.GPR, %struct.GPR* %13194, i32 0, i32 33
  %13196 = getelementptr inbounds %struct.Reg, %struct.Reg* %13195, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %13196 to i64*
  %13197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13198 = getelementptr inbounds %struct.GPR, %struct.GPR* %13197, i32 0, i32 1
  %13199 = getelementptr inbounds %struct.Reg, %struct.Reg* %13198, i32 0, i32 0
  %RAX.i216 = bitcast %union.anon* %13199 to i64*
  %13200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13201 = getelementptr inbounds %struct.GPR, %struct.GPR* %13200, i32 0, i32 15
  %13202 = getelementptr inbounds %struct.Reg, %struct.Reg* %13201, i32 0, i32 0
  %RBP.i217 = bitcast %union.anon* %13202 to i64*
  %13203 = load i64, i64* %RBP.i217
  %13204 = sub i64 %13203, 964
  %13205 = load i64, i64* %PC.i215
  %13206 = add i64 %13205, 6
  store i64 %13206, i64* %PC.i215
  %13207 = inttoptr i64 %13204 to i32*
  %13208 = load i32, i32* %13207
  %13209 = zext i32 %13208 to i64
  store i64 %13209, i64* %RAX.i216, align 8
  store %struct.Memory* %loadMem_4ae5e0, %struct.Memory** %MEMORY
  %loadMem_4ae5e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13211 = getelementptr inbounds %struct.GPR, %struct.GPR* %13210, i32 0, i32 33
  %13212 = getelementptr inbounds %struct.Reg, %struct.Reg* %13211, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %13212 to i64*
  %13213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13214 = getelementptr inbounds %struct.GPR, %struct.GPR* %13213, i32 0, i32 1
  %13215 = getelementptr inbounds %struct.Reg, %struct.Reg* %13214, i32 0, i32 0
  %AX.i = bitcast %union.anon* %13215 to i16*
  %13216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13217 = getelementptr inbounds %struct.GPR, %struct.GPR* %13216, i32 0, i32 5
  %13218 = getelementptr inbounds %struct.Reg, %struct.Reg* %13217, i32 0, i32 0
  %CX.i214 = bitcast %union.anon* %13218 to i16*
  %13219 = load i16, i16* %AX.i
  %13220 = zext i16 %13219 to i64
  %13221 = load i64, i64* %PC.i213
  %13222 = add i64 %13221, 3
  store i64 %13222, i64* %PC.i213
  store i16 %13219, i16* %CX.i214, align 2
  store %struct.Memory* %loadMem_4ae5e6, %struct.Memory** %MEMORY
  %loadMem_4ae5e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13224 = getelementptr inbounds %struct.GPR, %struct.GPR* %13223, i32 0, i32 33
  %13225 = getelementptr inbounds %struct.Reg, %struct.Reg* %13224, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %13225 to i64*
  %13226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13227 = getelementptr inbounds %struct.GPR, %struct.GPR* %13226, i32 0, i32 7
  %13228 = getelementptr inbounds %struct.Reg, %struct.Reg* %13227, i32 0, i32 0
  %RDX.i212 = bitcast %union.anon* %13228 to i64*
  %13229 = load i64, i64* %PC.i211
  %13230 = add i64 %13229, 8
  store i64 %13230, i64* %PC.i211
  %13231 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %13231, i64* %RDX.i212, align 8
  store %struct.Memory* %loadMem_4ae5e9, %struct.Memory** %MEMORY
  %loadMem_4ae5f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13233 = getelementptr inbounds %struct.GPR, %struct.GPR* %13232, i32 0, i32 33
  %13234 = getelementptr inbounds %struct.Reg, %struct.Reg* %13233, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %13234 to i64*
  %13235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13236 = getelementptr inbounds %struct.GPR, %struct.GPR* %13235, i32 0, i32 9
  %13237 = getelementptr inbounds %struct.Reg, %struct.Reg* %13236, i32 0, i32 0
  %RSI.i209 = bitcast %union.anon* %13237 to i64*
  %13238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13239 = getelementptr inbounds %struct.GPR, %struct.GPR* %13238, i32 0, i32 15
  %13240 = getelementptr inbounds %struct.Reg, %struct.Reg* %13239, i32 0, i32 0
  %RBP.i210 = bitcast %union.anon* %13240 to i64*
  %13241 = load i64, i64* %RBP.i210
  %13242 = sub i64 %13241, 16
  %13243 = load i64, i64* %PC.i208
  %13244 = add i64 %13243, 4
  store i64 %13244, i64* %PC.i208
  %13245 = inttoptr i64 %13242 to i32*
  %13246 = load i32, i32* %13245
  %13247 = sext i32 %13246 to i64
  store i64 %13247, i64* %RSI.i209, align 8
  store %struct.Memory* %loadMem_4ae5f1, %struct.Memory** %MEMORY
  %loadMem_4ae5f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13249 = getelementptr inbounds %struct.GPR, %struct.GPR* %13248, i32 0, i32 33
  %13250 = getelementptr inbounds %struct.Reg, %struct.Reg* %13249, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %13250 to i64*
  %13251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13252 = getelementptr inbounds %struct.GPR, %struct.GPR* %13251, i32 0, i32 7
  %13253 = getelementptr inbounds %struct.Reg, %struct.Reg* %13252, i32 0, i32 0
  %RDX.i206 = bitcast %union.anon* %13253 to i64*
  %13254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13255 = getelementptr inbounds %struct.GPR, %struct.GPR* %13254, i32 0, i32 9
  %13256 = getelementptr inbounds %struct.Reg, %struct.Reg* %13255, i32 0, i32 0
  %RSI.i207 = bitcast %union.anon* %13256 to i64*
  %13257 = load i64, i64* %RDX.i206
  %13258 = load i64, i64* %RSI.i207
  %13259 = mul i64 %13258, 8
  %13260 = add i64 %13259, %13257
  %13261 = load i64, i64* %PC.i205
  %13262 = add i64 %13261, 4
  store i64 %13262, i64* %PC.i205
  %13263 = inttoptr i64 %13260 to i64*
  %13264 = load i64, i64* %13263
  store i64 %13264, i64* %RDX.i206, align 8
  store %struct.Memory* %loadMem_4ae5f5, %struct.Memory** %MEMORY
  %loadMem_4ae5f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13266 = getelementptr inbounds %struct.GPR, %struct.GPR* %13265, i32 0, i32 33
  %13267 = getelementptr inbounds %struct.Reg, %struct.Reg* %13266, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %13267 to i64*
  %13268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13269 = getelementptr inbounds %struct.GPR, %struct.GPR* %13268, i32 0, i32 7
  %13270 = getelementptr inbounds %struct.Reg, %struct.Reg* %13269, i32 0, i32 0
  %RDX.i204 = bitcast %union.anon* %13270 to i64*
  %13271 = load i64, i64* %RDX.i204
  %13272 = add i64 %13271, 6456
  %13273 = load i64, i64* %PC.i203
  %13274 = add i64 %13273, 7
  store i64 %13274, i64* %PC.i203
  %13275 = inttoptr i64 %13272 to i64*
  %13276 = load i64, i64* %13275
  store i64 %13276, i64* %RDX.i204, align 8
  store %struct.Memory* %loadMem_4ae5f9, %struct.Memory** %MEMORY
  %loadMem_4ae600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13278 = getelementptr inbounds %struct.GPR, %struct.GPR* %13277, i32 0, i32 33
  %13279 = getelementptr inbounds %struct.Reg, %struct.Reg* %13278, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %13279 to i64*
  %13280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13281 = getelementptr inbounds %struct.GPR, %struct.GPR* %13280, i32 0, i32 9
  %13282 = getelementptr inbounds %struct.Reg, %struct.Reg* %13281, i32 0, i32 0
  %RSI.i201 = bitcast %union.anon* %13282 to i64*
  %13283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13284 = getelementptr inbounds %struct.GPR, %struct.GPR* %13283, i32 0, i32 15
  %13285 = getelementptr inbounds %struct.Reg, %struct.Reg* %13284, i32 0, i32 0
  %RBP.i202 = bitcast %union.anon* %13285 to i64*
  %13286 = load i64, i64* %RBP.i202
  %13287 = sub i64 %13286, 8
  %13288 = load i64, i64* %PC.i200
  %13289 = add i64 %13288, 4
  store i64 %13289, i64* %PC.i200
  %13290 = inttoptr i64 %13287 to i32*
  %13291 = load i32, i32* %13290
  %13292 = sext i32 %13291 to i64
  store i64 %13292, i64* %RSI.i201, align 8
  store %struct.Memory* %loadMem_4ae600, %struct.Memory** %MEMORY
  %loadMem_4ae604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13294 = getelementptr inbounds %struct.GPR, %struct.GPR* %13293, i32 0, i32 33
  %13295 = getelementptr inbounds %struct.Reg, %struct.Reg* %13294, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %13295 to i64*
  %13296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13297 = getelementptr inbounds %struct.GPR, %struct.GPR* %13296, i32 0, i32 7
  %13298 = getelementptr inbounds %struct.Reg, %struct.Reg* %13297, i32 0, i32 0
  %RDX.i198 = bitcast %union.anon* %13298 to i64*
  %13299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13300 = getelementptr inbounds %struct.GPR, %struct.GPR* %13299, i32 0, i32 9
  %13301 = getelementptr inbounds %struct.Reg, %struct.Reg* %13300, i32 0, i32 0
  %RSI.i199 = bitcast %union.anon* %13301 to i64*
  %13302 = load i64, i64* %RDX.i198
  %13303 = load i64, i64* %RSI.i199
  %13304 = mul i64 %13303, 8
  %13305 = add i64 %13304, %13302
  %13306 = load i64, i64* %PC.i197
  %13307 = add i64 %13306, 4
  store i64 %13307, i64* %PC.i197
  %13308 = inttoptr i64 %13305 to i64*
  %13309 = load i64, i64* %13308
  store i64 %13309, i64* %RDX.i198, align 8
  store %struct.Memory* %loadMem_4ae604, %struct.Memory** %MEMORY
  %loadMem_4ae608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13311 = getelementptr inbounds %struct.GPR, %struct.GPR* %13310, i32 0, i32 33
  %13312 = getelementptr inbounds %struct.Reg, %struct.Reg* %13311, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %13312 to i64*
  %13313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13314 = getelementptr inbounds %struct.GPR, %struct.GPR* %13313, i32 0, i32 9
  %13315 = getelementptr inbounds %struct.Reg, %struct.Reg* %13314, i32 0, i32 0
  %RSI.i195 = bitcast %union.anon* %13315 to i64*
  %13316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13317 = getelementptr inbounds %struct.GPR, %struct.GPR* %13316, i32 0, i32 15
  %13318 = getelementptr inbounds %struct.Reg, %struct.Reg* %13317, i32 0, i32 0
  %RBP.i196 = bitcast %union.anon* %13318 to i64*
  %13319 = load i64, i64* %RBP.i196
  %13320 = sub i64 %13319, 12
  %13321 = load i64, i64* %PC.i194
  %13322 = add i64 %13321, 4
  store i64 %13322, i64* %PC.i194
  %13323 = inttoptr i64 %13320 to i32*
  %13324 = load i32, i32* %13323
  %13325 = sext i32 %13324 to i64
  store i64 %13325, i64* %RSI.i195, align 8
  store %struct.Memory* %loadMem_4ae608, %struct.Memory** %MEMORY
  %loadMem_4ae60c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13327 = getelementptr inbounds %struct.GPR, %struct.GPR* %13326, i32 0, i32 33
  %13328 = getelementptr inbounds %struct.Reg, %struct.Reg* %13327, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %13328 to i64*
  %13329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13330 = getelementptr inbounds %struct.GPR, %struct.GPR* %13329, i32 0, i32 5
  %13331 = getelementptr inbounds %struct.Reg, %struct.Reg* %13330, i32 0, i32 0
  %CX.i = bitcast %union.anon* %13331 to i16*
  %13332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13333 = getelementptr inbounds %struct.GPR, %struct.GPR* %13332, i32 0, i32 7
  %13334 = getelementptr inbounds %struct.Reg, %struct.Reg* %13333, i32 0, i32 0
  %RDX.i192 = bitcast %union.anon* %13334 to i64*
  %13335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13336 = getelementptr inbounds %struct.GPR, %struct.GPR* %13335, i32 0, i32 9
  %13337 = getelementptr inbounds %struct.Reg, %struct.Reg* %13336, i32 0, i32 0
  %RSI.i193 = bitcast %union.anon* %13337 to i64*
  %13338 = load i64, i64* %RDX.i192
  %13339 = load i64, i64* %RSI.i193
  %13340 = mul i64 %13339, 2
  %13341 = add i64 %13340, %13338
  %13342 = load i16, i16* %CX.i
  %13343 = zext i16 %13342 to i64
  %13344 = load i64, i64* %PC.i191
  %13345 = add i64 %13344, 4
  store i64 %13345, i64* %PC.i191
  %13346 = inttoptr i64 %13341 to i16*
  store i16 %13342, i16* %13346
  store %struct.Memory* %loadMem_4ae60c, %struct.Memory** %MEMORY
  %loadMem_4ae610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13348 = getelementptr inbounds %struct.GPR, %struct.GPR* %13347, i32 0, i32 33
  %13349 = getelementptr inbounds %struct.Reg, %struct.Reg* %13348, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %13349 to i64*
  %13350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13351 = getelementptr inbounds %struct.GPR, %struct.GPR* %13350, i32 0, i32 1
  %13352 = getelementptr inbounds %struct.Reg, %struct.Reg* %13351, i32 0, i32 0
  %RAX.i189 = bitcast %union.anon* %13352 to i64*
  %13353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13354 = getelementptr inbounds %struct.GPR, %struct.GPR* %13353, i32 0, i32 15
  %13355 = getelementptr inbounds %struct.Reg, %struct.Reg* %13354, i32 0, i32 0
  %RBP.i190 = bitcast %union.anon* %13355 to i64*
  %13356 = load i64, i64* %RBP.i190
  %13357 = sub i64 %13356, 12
  %13358 = load i64, i64* %PC.i188
  %13359 = add i64 %13358, 3
  store i64 %13359, i64* %PC.i188
  %13360 = inttoptr i64 %13357 to i32*
  %13361 = load i32, i32* %13360
  %13362 = zext i32 %13361 to i64
  store i64 %13362, i64* %RAX.i189, align 8
  store %struct.Memory* %loadMem_4ae610, %struct.Memory** %MEMORY
  %loadMem_4ae613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13364 = getelementptr inbounds %struct.GPR, %struct.GPR* %13363, i32 0, i32 33
  %13365 = getelementptr inbounds %struct.Reg, %struct.Reg* %13364, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %13365 to i64*
  %13366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13367 = getelementptr inbounds %struct.GPR, %struct.GPR* %13366, i32 0, i32 1
  %13368 = getelementptr inbounds %struct.Reg, %struct.Reg* %13367, i32 0, i32 0
  %RAX.i187 = bitcast %union.anon* %13368 to i64*
  %13369 = load i64, i64* %RAX.i187
  %13370 = load i64, i64* %PC.i186
  %13371 = add i64 %13370, 3
  store i64 %13371, i64* %PC.i186
  %13372 = trunc i64 %13369 to i32
  %13373 = add i32 1, %13372
  %13374 = zext i32 %13373 to i64
  store i64 %13374, i64* %RAX.i187, align 8
  %13375 = icmp ult i32 %13373, %13372
  %13376 = icmp ult i32 %13373, 1
  %13377 = or i1 %13375, %13376
  %13378 = zext i1 %13377 to i8
  %13379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13378, i8* %13379, align 1
  %13380 = and i32 %13373, 255
  %13381 = call i32 @llvm.ctpop.i32(i32 %13380)
  %13382 = trunc i32 %13381 to i8
  %13383 = and i8 %13382, 1
  %13384 = xor i8 %13383, 1
  %13385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13384, i8* %13385, align 1
  %13386 = xor i64 1, %13369
  %13387 = trunc i64 %13386 to i32
  %13388 = xor i32 %13387, %13373
  %13389 = lshr i32 %13388, 4
  %13390 = trunc i32 %13389 to i8
  %13391 = and i8 %13390, 1
  %13392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13391, i8* %13392, align 1
  %13393 = icmp eq i32 %13373, 0
  %13394 = zext i1 %13393 to i8
  %13395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13394, i8* %13395, align 1
  %13396 = lshr i32 %13373, 31
  %13397 = trunc i32 %13396 to i8
  %13398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13397, i8* %13398, align 1
  %13399 = lshr i32 %13372, 31
  %13400 = xor i32 %13396, %13399
  %13401 = add i32 %13400, %13396
  %13402 = icmp eq i32 %13401, 2
  %13403 = zext i1 %13402 to i8
  %13404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13403, i8* %13404, align 1
  store %struct.Memory* %loadMem_4ae613, %struct.Memory** %MEMORY
  %loadMem_4ae616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13406 = getelementptr inbounds %struct.GPR, %struct.GPR* %13405, i32 0, i32 33
  %13407 = getelementptr inbounds %struct.Reg, %struct.Reg* %13406, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %13407 to i64*
  %13408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13409 = getelementptr inbounds %struct.GPR, %struct.GPR* %13408, i32 0, i32 1
  %13410 = getelementptr inbounds %struct.Reg, %struct.Reg* %13409, i32 0, i32 0
  %EAX.i184 = bitcast %union.anon* %13410 to i32*
  %13411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13412 = getelementptr inbounds %struct.GPR, %struct.GPR* %13411, i32 0, i32 15
  %13413 = getelementptr inbounds %struct.Reg, %struct.Reg* %13412, i32 0, i32 0
  %RBP.i185 = bitcast %union.anon* %13413 to i64*
  %13414 = load i64, i64* %RBP.i185
  %13415 = sub i64 %13414, 12
  %13416 = load i32, i32* %EAX.i184
  %13417 = zext i32 %13416 to i64
  %13418 = load i64, i64* %PC.i183
  %13419 = add i64 %13418, 3
  store i64 %13419, i64* %PC.i183
  %13420 = inttoptr i64 %13415 to i32*
  store i32 %13416, i32* %13420
  store %struct.Memory* %loadMem_4ae616, %struct.Memory** %MEMORY
  %loadMem_4ae619 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13422 = getelementptr inbounds %struct.GPR, %struct.GPR* %13421, i32 0, i32 33
  %13423 = getelementptr inbounds %struct.Reg, %struct.Reg* %13422, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %13423 to i64*
  %13424 = load i64, i64* %PC.i182
  %13425 = add i64 %13424, -560
  %13426 = load i64, i64* %PC.i182
  %13427 = add i64 %13426, 5
  store i64 %13427, i64* %PC.i182
  %13428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13425, i64* %13428, align 8
  store %struct.Memory* %loadMem_4ae619, %struct.Memory** %MEMORY
  br label %block_.L_4ae3e9

block_.L_4ae61e:                                  ; preds = %block_.L_4ae3e9
  %loadMem_4ae61e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13430 = getelementptr inbounds %struct.GPR, %struct.GPR* %13429, i32 0, i32 33
  %13431 = getelementptr inbounds %struct.Reg, %struct.Reg* %13430, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %13431 to i64*
  %13432 = load i64, i64* %PC.i181
  %13433 = add i64 %13432, 5
  %13434 = load i64, i64* %PC.i181
  %13435 = add i64 %13434, 5
  store i64 %13435, i64* %PC.i181
  %13436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13433, i64* %13436, align 8
  store %struct.Memory* %loadMem_4ae61e, %struct.Memory** %MEMORY
  br label %block_.L_4ae623

block_.L_4ae623:                                  ; preds = %block_.L_4ae61e
  %loadMem_4ae623 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13438 = getelementptr inbounds %struct.GPR, %struct.GPR* %13437, i32 0, i32 33
  %13439 = getelementptr inbounds %struct.Reg, %struct.Reg* %13438, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %13439 to i64*
  %13440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13441 = getelementptr inbounds %struct.GPR, %struct.GPR* %13440, i32 0, i32 1
  %13442 = getelementptr inbounds %struct.Reg, %struct.Reg* %13441, i32 0, i32 0
  %RAX.i179 = bitcast %union.anon* %13442 to i64*
  %13443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13444 = getelementptr inbounds %struct.GPR, %struct.GPR* %13443, i32 0, i32 15
  %13445 = getelementptr inbounds %struct.Reg, %struct.Reg* %13444, i32 0, i32 0
  %RBP.i180 = bitcast %union.anon* %13445 to i64*
  %13446 = load i64, i64* %RBP.i180
  %13447 = sub i64 %13446, 8
  %13448 = load i64, i64* %PC.i178
  %13449 = add i64 %13448, 3
  store i64 %13449, i64* %PC.i178
  %13450 = inttoptr i64 %13447 to i32*
  %13451 = load i32, i32* %13450
  %13452 = zext i32 %13451 to i64
  store i64 %13452, i64* %RAX.i179, align 8
  store %struct.Memory* %loadMem_4ae623, %struct.Memory** %MEMORY
  %loadMem_4ae626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13454 = getelementptr inbounds %struct.GPR, %struct.GPR* %13453, i32 0, i32 33
  %13455 = getelementptr inbounds %struct.Reg, %struct.Reg* %13454, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %13455 to i64*
  %13456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13457 = getelementptr inbounds %struct.GPR, %struct.GPR* %13456, i32 0, i32 1
  %13458 = getelementptr inbounds %struct.Reg, %struct.Reg* %13457, i32 0, i32 0
  %RAX.i177 = bitcast %union.anon* %13458 to i64*
  %13459 = load i64, i64* %RAX.i177
  %13460 = load i64, i64* %PC.i176
  %13461 = add i64 %13460, 3
  store i64 %13461, i64* %PC.i176
  %13462 = trunc i64 %13459 to i32
  %13463 = add i32 1, %13462
  %13464 = zext i32 %13463 to i64
  store i64 %13464, i64* %RAX.i177, align 8
  %13465 = icmp ult i32 %13463, %13462
  %13466 = icmp ult i32 %13463, 1
  %13467 = or i1 %13465, %13466
  %13468 = zext i1 %13467 to i8
  %13469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13468, i8* %13469, align 1
  %13470 = and i32 %13463, 255
  %13471 = call i32 @llvm.ctpop.i32(i32 %13470)
  %13472 = trunc i32 %13471 to i8
  %13473 = and i8 %13472, 1
  %13474 = xor i8 %13473, 1
  %13475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13474, i8* %13475, align 1
  %13476 = xor i64 1, %13459
  %13477 = trunc i64 %13476 to i32
  %13478 = xor i32 %13477, %13463
  %13479 = lshr i32 %13478, 4
  %13480 = trunc i32 %13479 to i8
  %13481 = and i8 %13480, 1
  %13482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13481, i8* %13482, align 1
  %13483 = icmp eq i32 %13463, 0
  %13484 = zext i1 %13483 to i8
  %13485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13484, i8* %13485, align 1
  %13486 = lshr i32 %13463, 31
  %13487 = trunc i32 %13486 to i8
  %13488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13487, i8* %13488, align 1
  %13489 = lshr i32 %13462, 31
  %13490 = xor i32 %13486, %13489
  %13491 = add i32 %13490, %13486
  %13492 = icmp eq i32 %13491, 2
  %13493 = zext i1 %13492 to i8
  %13494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13493, i8* %13494, align 1
  store %struct.Memory* %loadMem_4ae626, %struct.Memory** %MEMORY
  %loadMem_4ae629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13496 = getelementptr inbounds %struct.GPR, %struct.GPR* %13495, i32 0, i32 33
  %13497 = getelementptr inbounds %struct.Reg, %struct.Reg* %13496, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %13497 to i64*
  %13498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13499 = getelementptr inbounds %struct.GPR, %struct.GPR* %13498, i32 0, i32 1
  %13500 = getelementptr inbounds %struct.Reg, %struct.Reg* %13499, i32 0, i32 0
  %EAX.i174 = bitcast %union.anon* %13500 to i32*
  %13501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13502 = getelementptr inbounds %struct.GPR, %struct.GPR* %13501, i32 0, i32 15
  %13503 = getelementptr inbounds %struct.Reg, %struct.Reg* %13502, i32 0, i32 0
  %RBP.i175 = bitcast %union.anon* %13503 to i64*
  %13504 = load i64, i64* %RBP.i175
  %13505 = sub i64 %13504, 8
  %13506 = load i32, i32* %EAX.i174
  %13507 = zext i32 %13506 to i64
  %13508 = load i64, i64* %PC.i173
  %13509 = add i64 %13508, 3
  store i64 %13509, i64* %PC.i173
  %13510 = inttoptr i64 %13505 to i32*
  store i32 %13506, i32* %13510
  store %struct.Memory* %loadMem_4ae629, %struct.Memory** %MEMORY
  %loadMem_4ae62c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13512 = getelementptr inbounds %struct.GPR, %struct.GPR* %13511, i32 0, i32 33
  %13513 = getelementptr inbounds %struct.Reg, %struct.Reg* %13512, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %13513 to i64*
  %13514 = load i64, i64* %PC.i172
  %13515 = add i64 %13514, -614
  %13516 = load i64, i64* %PC.i172
  %13517 = add i64 %13516, 5
  store i64 %13517, i64* %PC.i172
  %13518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13515, i64* %13518, align 8
  store %struct.Memory* %loadMem_4ae62c, %struct.Memory** %MEMORY
  br label %block_.L_4ae3c6

block_.L_4ae631:                                  ; preds = %block_.L_4ae3c6
  %loadMem_4ae631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13520 = getelementptr inbounds %struct.GPR, %struct.GPR* %13519, i32 0, i32 33
  %13521 = getelementptr inbounds %struct.Reg, %struct.Reg* %13520, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %13521 to i64*
  %13522 = load i64, i64* %PC.i171
  %13523 = add i64 %13522, 5
  %13524 = load i64, i64* %PC.i171
  %13525 = add i64 %13524, 5
  store i64 %13525, i64* %PC.i171
  %13526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13523, i64* %13526, align 8
  store %struct.Memory* %loadMem_4ae631, %struct.Memory** %MEMORY
  br label %block_.L_4ae636

block_.L_4ae636:                                  ; preds = %block_.L_4ae631
  %loadMem_4ae636 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13528 = getelementptr inbounds %struct.GPR, %struct.GPR* %13527, i32 0, i32 33
  %13529 = getelementptr inbounds %struct.Reg, %struct.Reg* %13528, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %13529 to i64*
  %13530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13531 = getelementptr inbounds %struct.GPR, %struct.GPR* %13530, i32 0, i32 1
  %13532 = getelementptr inbounds %struct.Reg, %struct.Reg* %13531, i32 0, i32 0
  %RAX.i169 = bitcast %union.anon* %13532 to i64*
  %13533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13534 = getelementptr inbounds %struct.GPR, %struct.GPR* %13533, i32 0, i32 15
  %13535 = getelementptr inbounds %struct.Reg, %struct.Reg* %13534, i32 0, i32 0
  %RBP.i170 = bitcast %union.anon* %13535 to i64*
  %13536 = load i64, i64* %RBP.i170
  %13537 = sub i64 %13536, 16
  %13538 = load i64, i64* %PC.i168
  %13539 = add i64 %13538, 3
  store i64 %13539, i64* %PC.i168
  %13540 = inttoptr i64 %13537 to i32*
  %13541 = load i32, i32* %13540
  %13542 = zext i32 %13541 to i64
  store i64 %13542, i64* %RAX.i169, align 8
  store %struct.Memory* %loadMem_4ae636, %struct.Memory** %MEMORY
  %loadMem_4ae639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13544 = getelementptr inbounds %struct.GPR, %struct.GPR* %13543, i32 0, i32 33
  %13545 = getelementptr inbounds %struct.Reg, %struct.Reg* %13544, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %13545 to i64*
  %13546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13547 = getelementptr inbounds %struct.GPR, %struct.GPR* %13546, i32 0, i32 1
  %13548 = getelementptr inbounds %struct.Reg, %struct.Reg* %13547, i32 0, i32 0
  %RAX.i167 = bitcast %union.anon* %13548 to i64*
  %13549 = load i64, i64* %RAX.i167
  %13550 = load i64, i64* %PC.i166
  %13551 = add i64 %13550, 3
  store i64 %13551, i64* %PC.i166
  %13552 = trunc i64 %13549 to i32
  %13553 = add i32 1, %13552
  %13554 = zext i32 %13553 to i64
  store i64 %13554, i64* %RAX.i167, align 8
  %13555 = icmp ult i32 %13553, %13552
  %13556 = icmp ult i32 %13553, 1
  %13557 = or i1 %13555, %13556
  %13558 = zext i1 %13557 to i8
  %13559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13558, i8* %13559, align 1
  %13560 = and i32 %13553, 255
  %13561 = call i32 @llvm.ctpop.i32(i32 %13560)
  %13562 = trunc i32 %13561 to i8
  %13563 = and i8 %13562, 1
  %13564 = xor i8 %13563, 1
  %13565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13564, i8* %13565, align 1
  %13566 = xor i64 1, %13549
  %13567 = trunc i64 %13566 to i32
  %13568 = xor i32 %13567, %13553
  %13569 = lshr i32 %13568, 4
  %13570 = trunc i32 %13569 to i8
  %13571 = and i8 %13570, 1
  %13572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13571, i8* %13572, align 1
  %13573 = icmp eq i32 %13553, 0
  %13574 = zext i1 %13573 to i8
  %13575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13574, i8* %13575, align 1
  %13576 = lshr i32 %13553, 31
  %13577 = trunc i32 %13576 to i8
  %13578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13577, i8* %13578, align 1
  %13579 = lshr i32 %13552, 31
  %13580 = xor i32 %13576, %13579
  %13581 = add i32 %13580, %13576
  %13582 = icmp eq i32 %13581, 2
  %13583 = zext i1 %13582 to i8
  %13584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13583, i8* %13584, align 1
  store %struct.Memory* %loadMem_4ae639, %struct.Memory** %MEMORY
  %loadMem_4ae63c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13586 = getelementptr inbounds %struct.GPR, %struct.GPR* %13585, i32 0, i32 33
  %13587 = getelementptr inbounds %struct.Reg, %struct.Reg* %13586, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %13587 to i64*
  %13588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13589 = getelementptr inbounds %struct.GPR, %struct.GPR* %13588, i32 0, i32 1
  %13590 = getelementptr inbounds %struct.Reg, %struct.Reg* %13589, i32 0, i32 0
  %EAX.i164 = bitcast %union.anon* %13590 to i32*
  %13591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13592 = getelementptr inbounds %struct.GPR, %struct.GPR* %13591, i32 0, i32 15
  %13593 = getelementptr inbounds %struct.Reg, %struct.Reg* %13592, i32 0, i32 0
  %RBP.i165 = bitcast %union.anon* %13593 to i64*
  %13594 = load i64, i64* %RBP.i165
  %13595 = sub i64 %13594, 16
  %13596 = load i32, i32* %EAX.i164
  %13597 = zext i32 %13596 to i64
  %13598 = load i64, i64* %PC.i163
  %13599 = add i64 %13598, 3
  store i64 %13599, i64* %PC.i163
  %13600 = inttoptr i64 %13595 to i32*
  store i32 %13596, i32* %13600
  store %struct.Memory* %loadMem_4ae63c, %struct.Memory** %MEMORY
  %loadMem_4ae63f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13602 = getelementptr inbounds %struct.GPR, %struct.GPR* %13601, i32 0, i32 33
  %13603 = getelementptr inbounds %struct.Reg, %struct.Reg* %13602, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %13603 to i64*
  %13604 = load i64, i64* %PC.i162
  %13605 = add i64 %13604, -2098
  %13606 = load i64, i64* %PC.i162
  %13607 = add i64 %13606, 5
  store i64 %13607, i64* %PC.i162
  %13608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13605, i64* %13608, align 8
  store %struct.Memory* %loadMem_4ae63f, %struct.Memory** %MEMORY
  br label %block_.L_4ade0d

block_.L_4ae644:                                  ; preds = %block_.L_4ade0d
  %loadMem_4ae644 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13610 = getelementptr inbounds %struct.GPR, %struct.GPR* %13609, i32 0, i32 33
  %13611 = getelementptr inbounds %struct.Reg, %struct.Reg* %13610, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %13611 to i64*
  %13612 = load i64, i64* %PC.i161
  %13613 = add i64 %13612, 5
  %13614 = load i64, i64* %PC.i161
  %13615 = add i64 %13614, 5
  store i64 %13615, i64* %PC.i161
  %13616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13613, i64* %13616, align 8
  store %struct.Memory* %loadMem_4ae644, %struct.Memory** %MEMORY
  br label %block_.L_4ae649

block_.L_4ae649:                                  ; preds = %block_.L_4ae644
  %loadMem_4ae649 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13618 = getelementptr inbounds %struct.GPR, %struct.GPR* %13617, i32 0, i32 33
  %13619 = getelementptr inbounds %struct.Reg, %struct.Reg* %13618, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %13619 to i64*
  %13620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13621 = getelementptr inbounds %struct.GPR, %struct.GPR* %13620, i32 0, i32 1
  %13622 = getelementptr inbounds %struct.Reg, %struct.Reg* %13621, i32 0, i32 0
  %RAX.i159 = bitcast %union.anon* %13622 to i64*
  %13623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13624 = getelementptr inbounds %struct.GPR, %struct.GPR* %13623, i32 0, i32 15
  %13625 = getelementptr inbounds %struct.Reg, %struct.Reg* %13624, i32 0, i32 0
  %RBP.i160 = bitcast %union.anon* %13625 to i64*
  %13626 = load i64, i64* %RBP.i160
  %13627 = sub i64 %13626, 932
  %13628 = load i64, i64* %PC.i158
  %13629 = add i64 %13628, 6
  store i64 %13629, i64* %PC.i158
  %13630 = inttoptr i64 %13627 to i32*
  %13631 = load i32, i32* %13630
  %13632 = zext i32 %13631 to i64
  store i64 %13632, i64* %RAX.i159, align 8
  store %struct.Memory* %loadMem_4ae649, %struct.Memory** %MEMORY
  %loadMem_4ae64f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13634 = getelementptr inbounds %struct.GPR, %struct.GPR* %13633, i32 0, i32 33
  %13635 = getelementptr inbounds %struct.Reg, %struct.Reg* %13634, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %13635 to i64*
  %13636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13637 = getelementptr inbounds %struct.GPR, %struct.GPR* %13636, i32 0, i32 1
  %13638 = getelementptr inbounds %struct.Reg, %struct.Reg* %13637, i32 0, i32 0
  %RAX.i157 = bitcast %union.anon* %13638 to i64*
  %13639 = load i64, i64* %RAX.i157
  %13640 = load i64, i64* %PC.i156
  %13641 = add i64 %13640, 3
  store i64 %13641, i64* %PC.i156
  %13642 = trunc i64 %13639 to i32
  %13643 = add i32 1, %13642
  %13644 = zext i32 %13643 to i64
  store i64 %13644, i64* %RAX.i157, align 8
  %13645 = icmp ult i32 %13643, %13642
  %13646 = icmp ult i32 %13643, 1
  %13647 = or i1 %13645, %13646
  %13648 = zext i1 %13647 to i8
  %13649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13648, i8* %13649, align 1
  %13650 = and i32 %13643, 255
  %13651 = call i32 @llvm.ctpop.i32(i32 %13650)
  %13652 = trunc i32 %13651 to i8
  %13653 = and i8 %13652, 1
  %13654 = xor i8 %13653, 1
  %13655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13654, i8* %13655, align 1
  %13656 = xor i64 1, %13639
  %13657 = trunc i64 %13656 to i32
  %13658 = xor i32 %13657, %13643
  %13659 = lshr i32 %13658, 4
  %13660 = trunc i32 %13659 to i8
  %13661 = and i8 %13660, 1
  %13662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13661, i8* %13662, align 1
  %13663 = icmp eq i32 %13643, 0
  %13664 = zext i1 %13663 to i8
  %13665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13664, i8* %13665, align 1
  %13666 = lshr i32 %13643, 31
  %13667 = trunc i32 %13666 to i8
  %13668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13667, i8* %13668, align 1
  %13669 = lshr i32 %13642, 31
  %13670 = xor i32 %13666, %13669
  %13671 = add i32 %13670, %13666
  %13672 = icmp eq i32 %13671, 2
  %13673 = zext i1 %13672 to i8
  %13674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13673, i8* %13674, align 1
  store %struct.Memory* %loadMem_4ae64f, %struct.Memory** %MEMORY
  %loadMem_4ae652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13676 = getelementptr inbounds %struct.GPR, %struct.GPR* %13675, i32 0, i32 33
  %13677 = getelementptr inbounds %struct.Reg, %struct.Reg* %13676, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %13677 to i64*
  %13678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13679 = getelementptr inbounds %struct.GPR, %struct.GPR* %13678, i32 0, i32 1
  %13680 = getelementptr inbounds %struct.Reg, %struct.Reg* %13679, i32 0, i32 0
  %EAX.i154 = bitcast %union.anon* %13680 to i32*
  %13681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13682 = getelementptr inbounds %struct.GPR, %struct.GPR* %13681, i32 0, i32 15
  %13683 = getelementptr inbounds %struct.Reg, %struct.Reg* %13682, i32 0, i32 0
  %RBP.i155 = bitcast %union.anon* %13683 to i64*
  %13684 = load i64, i64* %RBP.i155
  %13685 = sub i64 %13684, 932
  %13686 = load i32, i32* %EAX.i154
  %13687 = zext i32 %13686 to i64
  %13688 = load i64, i64* %PC.i153
  %13689 = add i64 %13688, 6
  store i64 %13689, i64* %PC.i153
  %13690 = inttoptr i64 %13685 to i32*
  store i32 %13686, i32* %13690
  store %struct.Memory* %loadMem_4ae652, %struct.Memory** %MEMORY
  %loadMem_4ae658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13692 = getelementptr inbounds %struct.GPR, %struct.GPR* %13691, i32 0, i32 33
  %13693 = getelementptr inbounds %struct.Reg, %struct.Reg* %13692, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %13693 to i64*
  %13694 = load i64, i64* %PC.i152
  %13695 = add i64 %13694, -2153
  %13696 = load i64, i64* %PC.i152
  %13697 = add i64 %13696, 5
  store i64 %13697, i64* %PC.i152
  %13698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13695, i64* %13698, align 8
  store %struct.Memory* %loadMem_4ae658, %struct.Memory** %MEMORY
  br label %block_.L_4addef

block_.L_4ae65d:                                  ; preds = %block_.L_4addef
  %loadMem_4ae65d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13700 = getelementptr inbounds %struct.GPR, %struct.GPR* %13699, i32 0, i32 33
  %13701 = getelementptr inbounds %struct.Reg, %struct.Reg* %13700, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %13701 to i64*
  %13702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13703 = getelementptr inbounds %struct.GPR, %struct.GPR* %13702, i32 0, i32 15
  %13704 = getelementptr inbounds %struct.Reg, %struct.Reg* %13703, i32 0, i32 0
  %RBP.i151 = bitcast %union.anon* %13704 to i64*
  %13705 = load i64, i64* %RBP.i151
  %13706 = sub i64 %13705, 932
  %13707 = load i64, i64* %PC.i150
  %13708 = add i64 %13707, 10
  store i64 %13708, i64* %PC.i150
  %13709 = inttoptr i64 %13706 to i32*
  store i32 0, i32* %13709
  store %struct.Memory* %loadMem_4ae65d, %struct.Memory** %MEMORY
  br label %block_.L_4ae667

block_.L_4ae667:                                  ; preds = %block_.L_4ae76b, %block_.L_4ae65d
  %loadMem_4ae667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13711 = getelementptr inbounds %struct.GPR, %struct.GPR* %13710, i32 0, i32 33
  %13712 = getelementptr inbounds %struct.Reg, %struct.Reg* %13711, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %13712 to i64*
  %13713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13714 = getelementptr inbounds %struct.GPR, %struct.GPR* %13713, i32 0, i32 1
  %13715 = getelementptr inbounds %struct.Reg, %struct.Reg* %13714, i32 0, i32 0
  %RAX.i148 = bitcast %union.anon* %13715 to i64*
  %13716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13717 = getelementptr inbounds %struct.GPR, %struct.GPR* %13716, i32 0, i32 15
  %13718 = getelementptr inbounds %struct.Reg, %struct.Reg* %13717, i32 0, i32 0
  %RBP.i149 = bitcast %union.anon* %13718 to i64*
  %13719 = load i64, i64* %RBP.i149
  %13720 = sub i64 %13719, 932
  %13721 = load i64, i64* %PC.i147
  %13722 = add i64 %13721, 6
  store i64 %13722, i64* %PC.i147
  %13723 = inttoptr i64 %13720 to i32*
  %13724 = load i32, i32* %13723
  %13725 = zext i32 %13724 to i64
  store i64 %13725, i64* %RAX.i148, align 8
  store %struct.Memory* %loadMem_4ae667, %struct.Memory** %MEMORY
  %loadMem_4ae66d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13727 = getelementptr inbounds %struct.GPR, %struct.GPR* %13726, i32 0, i32 33
  %13728 = getelementptr inbounds %struct.Reg, %struct.Reg* %13727, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %13728 to i64*
  %13729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13730 = getelementptr inbounds %struct.GPR, %struct.GPR* %13729, i32 0, i32 5
  %13731 = getelementptr inbounds %struct.Reg, %struct.Reg* %13730, i32 0, i32 0
  %RCX.i145 = bitcast %union.anon* %13731 to i64*
  %13732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13733 = getelementptr inbounds %struct.GPR, %struct.GPR* %13732, i32 0, i32 15
  %13734 = getelementptr inbounds %struct.Reg, %struct.Reg* %13733, i32 0, i32 0
  %RBP.i146 = bitcast %union.anon* %13734 to i64*
  %13735 = load i64, i64* %RBP.i146
  %13736 = sub i64 %13735, 192
  %13737 = load i64, i64* %PC.i144
  %13738 = add i64 %13737, 6
  store i64 %13738, i64* %PC.i144
  %13739 = inttoptr i64 %13736 to i32*
  %13740 = load i32, i32* %13739
  %13741 = zext i32 %13740 to i64
  store i64 %13741, i64* %RCX.i145, align 8
  store %struct.Memory* %loadMem_4ae66d, %struct.Memory** %MEMORY
  %loadMem_4ae673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13743 = getelementptr inbounds %struct.GPR, %struct.GPR* %13742, i32 0, i32 33
  %13744 = getelementptr inbounds %struct.Reg, %struct.Reg* %13743, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %13744 to i64*
  %13745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13746 = getelementptr inbounds %struct.GPR, %struct.GPR* %13745, i32 0, i32 5
  %13747 = getelementptr inbounds %struct.Reg, %struct.Reg* %13746, i32 0, i32 0
  %RCX.i143 = bitcast %union.anon* %13747 to i64*
  %13748 = load i64, i64* %RCX.i143
  %13749 = load i64, i64* %PC.i142
  %13750 = add i64 %13749, 3
  store i64 %13750, i64* %PC.i142
  %13751 = trunc i64 %13748 to i32
  %13752 = add i32 2, %13751
  %13753 = zext i32 %13752 to i64
  store i64 %13753, i64* %RCX.i143, align 8
  %13754 = icmp ult i32 %13752, %13751
  %13755 = icmp ult i32 %13752, 2
  %13756 = or i1 %13754, %13755
  %13757 = zext i1 %13756 to i8
  %13758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13757, i8* %13758, align 1
  %13759 = and i32 %13752, 255
  %13760 = call i32 @llvm.ctpop.i32(i32 %13759)
  %13761 = trunc i32 %13760 to i8
  %13762 = and i8 %13761, 1
  %13763 = xor i8 %13762, 1
  %13764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13763, i8* %13764, align 1
  %13765 = xor i64 2, %13748
  %13766 = trunc i64 %13765 to i32
  %13767 = xor i32 %13766, %13752
  %13768 = lshr i32 %13767, 4
  %13769 = trunc i32 %13768 to i8
  %13770 = and i8 %13769, 1
  %13771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13770, i8* %13771, align 1
  %13772 = icmp eq i32 %13752, 0
  %13773 = zext i1 %13772 to i8
  %13774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13773, i8* %13774, align 1
  %13775 = lshr i32 %13752, 31
  %13776 = trunc i32 %13775 to i8
  %13777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13776, i8* %13777, align 1
  %13778 = lshr i32 %13751, 31
  %13779 = xor i32 %13775, %13778
  %13780 = add i32 %13779, %13775
  %13781 = icmp eq i32 %13780, 2
  %13782 = zext i1 %13781 to i8
  %13783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13782, i8* %13783, align 1
  store %struct.Memory* %loadMem_4ae673, %struct.Memory** %MEMORY
  %loadMem_4ae676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13785 = getelementptr inbounds %struct.GPR, %struct.GPR* %13784, i32 0, i32 33
  %13786 = getelementptr inbounds %struct.Reg, %struct.Reg* %13785, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %13786 to i64*
  %13787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13788 = getelementptr inbounds %struct.GPR, %struct.GPR* %13787, i32 0, i32 1
  %13789 = getelementptr inbounds %struct.Reg, %struct.Reg* %13788, i32 0, i32 0
  %EAX.i141 = bitcast %union.anon* %13789 to i32*
  %13790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13791 = getelementptr inbounds %struct.GPR, %struct.GPR* %13790, i32 0, i32 5
  %13792 = getelementptr inbounds %struct.Reg, %struct.Reg* %13791, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %13792 to i32*
  %13793 = load i32, i32* %EAX.i141
  %13794 = zext i32 %13793 to i64
  %13795 = load i32, i32* %ECX.i
  %13796 = zext i32 %13795 to i64
  %13797 = load i64, i64* %PC.i140
  %13798 = add i64 %13797, 2
  store i64 %13798, i64* %PC.i140
  %13799 = sub i32 %13793, %13795
  %13800 = icmp ult i32 %13793, %13795
  %13801 = zext i1 %13800 to i8
  %13802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13801, i8* %13802, align 1
  %13803 = and i32 %13799, 255
  %13804 = call i32 @llvm.ctpop.i32(i32 %13803)
  %13805 = trunc i32 %13804 to i8
  %13806 = and i8 %13805, 1
  %13807 = xor i8 %13806, 1
  %13808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13807, i8* %13808, align 1
  %13809 = xor i64 %13796, %13794
  %13810 = trunc i64 %13809 to i32
  %13811 = xor i32 %13810, %13799
  %13812 = lshr i32 %13811, 4
  %13813 = trunc i32 %13812 to i8
  %13814 = and i8 %13813, 1
  %13815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13814, i8* %13815, align 1
  %13816 = icmp eq i32 %13799, 0
  %13817 = zext i1 %13816 to i8
  %13818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13817, i8* %13818, align 1
  %13819 = lshr i32 %13799, 31
  %13820 = trunc i32 %13819 to i8
  %13821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13820, i8* %13821, align 1
  %13822 = lshr i32 %13793, 31
  %13823 = lshr i32 %13795, 31
  %13824 = xor i32 %13823, %13822
  %13825 = xor i32 %13819, %13822
  %13826 = add i32 %13825, %13824
  %13827 = icmp eq i32 %13826, 2
  %13828 = zext i1 %13827 to i8
  %13829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13828, i8* %13829, align 1
  store %struct.Memory* %loadMem_4ae676, %struct.Memory** %MEMORY
  %loadMem_4ae678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13831 = getelementptr inbounds %struct.GPR, %struct.GPR* %13830, i32 0, i32 33
  %13832 = getelementptr inbounds %struct.Reg, %struct.Reg* %13831, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %13832 to i64*
  %13833 = load i64, i64* %PC.i139
  %13834 = add i64 %13833, 263
  %13835 = load i64, i64* %PC.i139
  %13836 = add i64 %13835, 6
  %13837 = load i64, i64* %PC.i139
  %13838 = add i64 %13837, 6
  store i64 %13838, i64* %PC.i139
  %13839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13840 = load i8, i8* %13839, align 1
  %13841 = icmp ne i8 %13840, 0
  %13842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13843 = load i8, i8* %13842, align 1
  %13844 = icmp ne i8 %13843, 0
  %13845 = xor i1 %13841, %13844
  %13846 = xor i1 %13845, true
  %13847 = zext i1 %13846 to i8
  store i8 %13847, i8* %BRANCH_TAKEN, align 1
  %13848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13849 = select i1 %13845, i64 %13836, i64 %13834
  store i64 %13849, i64* %13848, align 8
  store %struct.Memory* %loadMem_4ae678, %struct.Memory** %MEMORY
  %loadBr_4ae678 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae678 = icmp eq i8 %loadBr_4ae678, 1
  br i1 %cmpBr_4ae678, label %block_.L_4ae77f, label %block_4ae67e

block_4ae67e:                                     ; preds = %block_.L_4ae667
  %loadMem_4ae67e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13851 = getelementptr inbounds %struct.GPR, %struct.GPR* %13850, i32 0, i32 33
  %13852 = getelementptr inbounds %struct.Reg, %struct.Reg* %13851, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %13852 to i64*
  %13853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13854 = getelementptr inbounds %struct.GPR, %struct.GPR* %13853, i32 0, i32 15
  %13855 = getelementptr inbounds %struct.Reg, %struct.Reg* %13854, i32 0, i32 0
  %RBP.i138 = bitcast %union.anon* %13855 to i64*
  %13856 = load i64, i64* %RBP.i138
  %13857 = sub i64 %13856, 28
  %13858 = load i64, i64* %PC.i137
  %13859 = add i64 %13858, 7
  store i64 %13859, i64* %PC.i137
  %13860 = inttoptr i64 %13857 to i32*
  store i32 0, i32* %13860
  store %struct.Memory* %loadMem_4ae67e, %struct.Memory** %MEMORY
  br label %block_.L_4ae685

block_.L_4ae685:                                  ; preds = %block_.L_4ae758, %block_4ae67e
  %loadMem_4ae685 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13862 = getelementptr inbounds %struct.GPR, %struct.GPR* %13861, i32 0, i32 33
  %13863 = getelementptr inbounds %struct.Reg, %struct.Reg* %13862, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %13863 to i64*
  %13864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13865 = getelementptr inbounds %struct.GPR, %struct.GPR* %13864, i32 0, i32 1
  %13866 = getelementptr inbounds %struct.Reg, %struct.Reg* %13865, i32 0, i32 0
  %RAX.i135 = bitcast %union.anon* %13866 to i64*
  %13867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13868 = getelementptr inbounds %struct.GPR, %struct.GPR* %13867, i32 0, i32 15
  %13869 = getelementptr inbounds %struct.Reg, %struct.Reg* %13868, i32 0, i32 0
  %RBP.i136 = bitcast %union.anon* %13869 to i64*
  %13870 = load i64, i64* %RBP.i136
  %13871 = sub i64 %13870, 28
  %13872 = load i64, i64* %PC.i134
  %13873 = add i64 %13872, 3
  store i64 %13873, i64* %PC.i134
  %13874 = inttoptr i64 %13871 to i32*
  %13875 = load i32, i32* %13874
  %13876 = zext i32 %13875 to i64
  store i64 %13876, i64* %RAX.i135, align 8
  store %struct.Memory* %loadMem_4ae685, %struct.Memory** %MEMORY
  %loadMem_4ae688 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13878 = getelementptr inbounds %struct.GPR, %struct.GPR* %13877, i32 0, i32 33
  %13879 = getelementptr inbounds %struct.Reg, %struct.Reg* %13878, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %13879 to i64*
  %13880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13881 = getelementptr inbounds %struct.GPR, %struct.GPR* %13880, i32 0, i32 5
  %13882 = getelementptr inbounds %struct.Reg, %struct.Reg* %13881, i32 0, i32 0
  %RCX.i132 = bitcast %union.anon* %13882 to i64*
  %13883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13884 = getelementptr inbounds %struct.GPR, %struct.GPR* %13883, i32 0, i32 15
  %13885 = getelementptr inbounds %struct.Reg, %struct.Reg* %13884, i32 0, i32 0
  %RBP.i133 = bitcast %union.anon* %13885 to i64*
  %13886 = load i64, i64* %RBP.i133
  %13887 = sub i64 %13886, 932
  %13888 = load i64, i64* %PC.i131
  %13889 = add i64 %13888, 7
  store i64 %13889, i64* %PC.i131
  %13890 = inttoptr i64 %13887 to i32*
  %13891 = load i32, i32* %13890
  %13892 = sext i32 %13891 to i64
  store i64 %13892, i64* %RCX.i132, align 8
  store %struct.Memory* %loadMem_4ae688, %struct.Memory** %MEMORY
  %loadMem_4ae68f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13894 = getelementptr inbounds %struct.GPR, %struct.GPR* %13893, i32 0, i32 33
  %13895 = getelementptr inbounds %struct.Reg, %struct.Reg* %13894, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %13895 to i64*
  %13896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13897 = getelementptr inbounds %struct.GPR, %struct.GPR* %13896, i32 0, i32 1
  %13898 = getelementptr inbounds %struct.Reg, %struct.Reg* %13897, i32 0, i32 0
  %EAX.i129 = bitcast %union.anon* %13898 to i32*
  %13899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13900 = getelementptr inbounds %struct.GPR, %struct.GPR* %13899, i32 0, i32 5
  %13901 = getelementptr inbounds %struct.Reg, %struct.Reg* %13900, i32 0, i32 0
  %RCX.i130 = bitcast %union.anon* %13901 to i64*
  %13902 = load i32, i32* %EAX.i129
  %13903 = zext i32 %13902 to i64
  %13904 = load i64, i64* %RCX.i130
  %13905 = mul i64 %13904, 4
  %13906 = add i64 %13905, 7489456
  %13907 = load i64, i64* %PC.i128
  %13908 = add i64 %13907, 7
  store i64 %13908, i64* %PC.i128
  %13909 = inttoptr i64 %13906 to i32*
  %13910 = load i32, i32* %13909
  %13911 = sub i32 %13902, %13910
  %13912 = icmp ult i32 %13902, %13910
  %13913 = zext i1 %13912 to i8
  %13914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13913, i8* %13914, align 1
  %13915 = and i32 %13911, 255
  %13916 = call i32 @llvm.ctpop.i32(i32 %13915)
  %13917 = trunc i32 %13916 to i8
  %13918 = and i8 %13917, 1
  %13919 = xor i8 %13918, 1
  %13920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13919, i8* %13920, align 1
  %13921 = xor i32 %13910, %13902
  %13922 = xor i32 %13921, %13911
  %13923 = lshr i32 %13922, 4
  %13924 = trunc i32 %13923 to i8
  %13925 = and i8 %13924, 1
  %13926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13925, i8* %13926, align 1
  %13927 = icmp eq i32 %13911, 0
  %13928 = zext i1 %13927 to i8
  %13929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13928, i8* %13929, align 1
  %13930 = lshr i32 %13911, 31
  %13931 = trunc i32 %13930 to i8
  %13932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13931, i8* %13932, align 1
  %13933 = lshr i32 %13902, 31
  %13934 = lshr i32 %13910, 31
  %13935 = xor i32 %13934, %13933
  %13936 = xor i32 %13930, %13933
  %13937 = add i32 %13936, %13935
  %13938 = icmp eq i32 %13937, 2
  %13939 = zext i1 %13938 to i8
  %13940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13939, i8* %13940, align 1
  store %struct.Memory* %loadMem_4ae68f, %struct.Memory** %MEMORY
  %loadMem_4ae696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13942 = getelementptr inbounds %struct.GPR, %struct.GPR* %13941, i32 0, i32 33
  %13943 = getelementptr inbounds %struct.Reg, %struct.Reg* %13942, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %13943 to i64*
  %13944 = load i64, i64* %PC.i127
  %13945 = add i64 %13944, 208
  %13946 = load i64, i64* %PC.i127
  %13947 = add i64 %13946, 6
  %13948 = load i64, i64* %PC.i127
  %13949 = add i64 %13948, 6
  store i64 %13949, i64* %PC.i127
  %13950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13951 = load i8, i8* %13950, align 1
  %13952 = icmp ne i8 %13951, 0
  %13953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13954 = load i8, i8* %13953, align 1
  %13955 = icmp ne i8 %13954, 0
  %13956 = xor i1 %13952, %13955
  %13957 = xor i1 %13956, true
  %13958 = zext i1 %13957 to i8
  store i8 %13958, i8* %BRANCH_TAKEN, align 1
  %13959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13960 = select i1 %13956, i64 %13947, i64 %13945
  store i64 %13960, i64* %13959, align 8
  store %struct.Memory* %loadMem_4ae696, %struct.Memory** %MEMORY
  %loadBr_4ae696 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae696 = icmp eq i8 %loadBr_4ae696, 1
  br i1 %cmpBr_4ae696, label %block_.L_4ae766, label %block_4ae69c

block_4ae69c:                                     ; preds = %block_.L_4ae685
  %loadMem_4ae69c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13962 = getelementptr inbounds %struct.GPR, %struct.GPR* %13961, i32 0, i32 33
  %13963 = getelementptr inbounds %struct.Reg, %struct.Reg* %13962, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %13963 to i64*
  %13964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13965 = getelementptr inbounds %struct.GPR, %struct.GPR* %13964, i32 0, i32 15
  %13966 = getelementptr inbounds %struct.Reg, %struct.Reg* %13965, i32 0, i32 0
  %RBP.i126 = bitcast %union.anon* %13966 to i64*
  %13967 = load i64, i64* %RBP.i126
  %13968 = sub i64 %13967, 32
  %13969 = load i64, i64* %PC.i125
  %13970 = add i64 %13969, 7
  store i64 %13970, i64* %PC.i125
  %13971 = inttoptr i64 %13968 to i32*
  store i32 0, i32* %13971
  store %struct.Memory* %loadMem_4ae69c, %struct.Memory** %MEMORY
  br label %block_.L_4ae6a3

block_.L_4ae6a3:                                  ; preds = %block_4ae6ad, %block_4ae69c
  %loadMem_4ae6a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13973 = getelementptr inbounds %struct.GPR, %struct.GPR* %13972, i32 0, i32 33
  %13974 = getelementptr inbounds %struct.Reg, %struct.Reg* %13973, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %13974 to i64*
  %13975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13976 = getelementptr inbounds %struct.GPR, %struct.GPR* %13975, i32 0, i32 15
  %13977 = getelementptr inbounds %struct.Reg, %struct.Reg* %13976, i32 0, i32 0
  %RBP.i124 = bitcast %union.anon* %13977 to i64*
  %13978 = load i64, i64* %RBP.i124
  %13979 = sub i64 %13978, 32
  %13980 = load i64, i64* %PC.i123
  %13981 = add i64 %13980, 4
  store i64 %13981, i64* %PC.i123
  %13982 = inttoptr i64 %13979 to i32*
  %13983 = load i32, i32* %13982
  %13984 = sub i32 %13983, 3
  %13985 = icmp ult i32 %13983, 3
  %13986 = zext i1 %13985 to i8
  %13987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13986, i8* %13987, align 1
  %13988 = and i32 %13984, 255
  %13989 = call i32 @llvm.ctpop.i32(i32 %13988)
  %13990 = trunc i32 %13989 to i8
  %13991 = and i8 %13990, 1
  %13992 = xor i8 %13991, 1
  %13993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13992, i8* %13993, align 1
  %13994 = xor i32 %13983, 3
  %13995 = xor i32 %13994, %13984
  %13996 = lshr i32 %13995, 4
  %13997 = trunc i32 %13996 to i8
  %13998 = and i8 %13997, 1
  %13999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13998, i8* %13999, align 1
  %14000 = icmp eq i32 %13984, 0
  %14001 = zext i1 %14000 to i8
  %14002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14001, i8* %14002, align 1
  %14003 = lshr i32 %13984, 31
  %14004 = trunc i32 %14003 to i8
  %14005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14004, i8* %14005, align 1
  %14006 = lshr i32 %13983, 31
  %14007 = xor i32 %14003, %14006
  %14008 = add i32 %14007, %14006
  %14009 = icmp eq i32 %14008, 2
  %14010 = zext i1 %14009 to i8
  %14011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14010, i8* %14011, align 1
  store %struct.Memory* %loadMem_4ae6a3, %struct.Memory** %MEMORY
  %loadMem_4ae6a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14013 = getelementptr inbounds %struct.GPR, %struct.GPR* %14012, i32 0, i32 33
  %14014 = getelementptr inbounds %struct.Reg, %struct.Reg* %14013, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %14014 to i64*
  %14015 = load i64, i64* %PC.i122
  %14016 = add i64 %14015, 172
  %14017 = load i64, i64* %PC.i122
  %14018 = add i64 %14017, 6
  %14019 = load i64, i64* %PC.i122
  %14020 = add i64 %14019, 6
  store i64 %14020, i64* %PC.i122
  %14021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14022 = load i8, i8* %14021, align 1
  %14023 = icmp ne i8 %14022, 0
  %14024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14025 = load i8, i8* %14024, align 1
  %14026 = icmp ne i8 %14025, 0
  %14027 = xor i1 %14023, %14026
  %14028 = xor i1 %14027, true
  %14029 = zext i1 %14028 to i8
  store i8 %14029, i8* %BRANCH_TAKEN, align 1
  %14030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14031 = select i1 %14027, i64 %14018, i64 %14016
  store i64 %14031, i64* %14030, align 8
  store %struct.Memory* %loadMem_4ae6a7, %struct.Memory** %MEMORY
  %loadBr_4ae6a7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae6a7 = icmp eq i8 %loadBr_4ae6a7, 1
  br i1 %cmpBr_4ae6a7, label %block_.L_4ae753, label %block_4ae6ad

block_4ae6ad:                                     ; preds = %block_.L_4ae6a3
  %loadMem_4ae6ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %14032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14033 = getelementptr inbounds %struct.GPR, %struct.GPR* %14032, i32 0, i32 33
  %14034 = getelementptr inbounds %struct.Reg, %struct.Reg* %14033, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %14034 to i64*
  %14035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14036 = getelementptr inbounds %struct.GPR, %struct.GPR* %14035, i32 0, i32 1
  %14037 = getelementptr inbounds %struct.Reg, %struct.Reg* %14036, i32 0, i32 0
  %RAX.i120 = bitcast %union.anon* %14037 to i64*
  %14038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14039 = getelementptr inbounds %struct.GPR, %struct.GPR* %14038, i32 0, i32 15
  %14040 = getelementptr inbounds %struct.Reg, %struct.Reg* %14039, i32 0, i32 0
  %RBP.i121 = bitcast %union.anon* %14040 to i64*
  %14041 = load i64, i64* %RBP.i121
  %14042 = sub i64 %14041, 928
  %14043 = load i64, i64* %PC.i119
  %14044 = add i64 %14043, 7
  store i64 %14044, i64* %PC.i119
  store i64 %14042, i64* %RAX.i120, align 8
  store %struct.Memory* %loadMem_4ae6ad, %struct.Memory** %MEMORY
  %loadMem_4ae6b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14046 = getelementptr inbounds %struct.GPR, %struct.GPR* %14045, i32 0, i32 33
  %14047 = getelementptr inbounds %struct.Reg, %struct.Reg* %14046, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %14047 to i64*
  %14048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14049 = getelementptr inbounds %struct.GPR, %struct.GPR* %14048, i32 0, i32 5
  %14050 = getelementptr inbounds %struct.Reg, %struct.Reg* %14049, i32 0, i32 0
  %RCX.i117 = bitcast %union.anon* %14050 to i64*
  %14051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14052 = getelementptr inbounds %struct.GPR, %struct.GPR* %14051, i32 0, i32 15
  %14053 = getelementptr inbounds %struct.Reg, %struct.Reg* %14052, i32 0, i32 0
  %RBP.i118 = bitcast %union.anon* %14053 to i64*
  %14054 = load i64, i64* %RBP.i118
  %14055 = sub i64 %14054, 560
  %14056 = load i64, i64* %PC.i116
  %14057 = add i64 %14056, 7
  store i64 %14057, i64* %PC.i116
  store i64 %14055, i64* %RCX.i117, align 8
  store %struct.Memory* %loadMem_4ae6b4, %struct.Memory** %MEMORY
  %loadMem_4ae6bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %14058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14059 = getelementptr inbounds %struct.GPR, %struct.GPR* %14058, i32 0, i32 33
  %14060 = getelementptr inbounds %struct.Reg, %struct.Reg* %14059, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %14060 to i64*
  %14061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14062 = getelementptr inbounds %struct.GPR, %struct.GPR* %14061, i32 0, i32 7
  %14063 = getelementptr inbounds %struct.Reg, %struct.Reg* %14062, i32 0, i32 0
  %RDX.i114 = bitcast %union.anon* %14063 to i64*
  %14064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14065 = getelementptr inbounds %struct.GPR, %struct.GPR* %14064, i32 0, i32 15
  %14066 = getelementptr inbounds %struct.Reg, %struct.Reg* %14065, i32 0, i32 0
  %RBP.i115 = bitcast %union.anon* %14066 to i64*
  %14067 = load i64, i64* %RBP.i115
  %14068 = sub i64 %14067, 932
  %14069 = load i64, i64* %PC.i113
  %14070 = add i64 %14069, 7
  store i64 %14070, i64* %PC.i113
  %14071 = inttoptr i64 %14068 to i32*
  %14072 = load i32, i32* %14071
  %14073 = sext i32 %14072 to i64
  store i64 %14073, i64* %RDX.i114, align 8
  store %struct.Memory* %loadMem_4ae6bb, %struct.Memory** %MEMORY
  %loadMem_4ae6c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14075 = getelementptr inbounds %struct.GPR, %struct.GPR* %14074, i32 0, i32 33
  %14076 = getelementptr inbounds %struct.Reg, %struct.Reg* %14075, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %14076 to i64*
  %14077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14078 = getelementptr inbounds %struct.GPR, %struct.GPR* %14077, i32 0, i32 7
  %14079 = getelementptr inbounds %struct.Reg, %struct.Reg* %14078, i32 0, i32 0
  %RDX.i112 = bitcast %union.anon* %14079 to i64*
  %14080 = load i64, i64* %RDX.i112
  %14081 = load i64, i64* %PC.i111
  %14082 = add i64 %14081, 7
  store i64 %14082, i64* %PC.i111
  %14083 = sext i64 %14080 to i128
  %14084 = and i128 %14083, -18446744073709551616
  %14085 = zext i64 %14080 to i128
  %14086 = or i128 %14084, %14085
  %14087 = mul i128 180, %14086
  %14088 = trunc i128 %14087 to i64
  store i64 %14088, i64* %RDX.i112, align 8
  %14089 = sext i64 %14088 to i128
  %14090 = icmp ne i128 %14089, %14087
  %14091 = zext i1 %14090 to i8
  %14092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14091, i8* %14092, align 1
  %14093 = trunc i128 %14087 to i32
  %14094 = and i32 %14093, 255
  %14095 = call i32 @llvm.ctpop.i32(i32 %14094)
  %14096 = trunc i32 %14095 to i8
  %14097 = and i8 %14096, 1
  %14098 = xor i8 %14097, 1
  %14099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14098, i8* %14099, align 1
  %14100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14100, align 1
  %14101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14101, align 1
  %14102 = lshr i64 %14088, 63
  %14103 = trunc i64 %14102 to i8
  %14104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14103, i8* %14104, align 1
  %14105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14091, i8* %14105, align 1
  store %struct.Memory* %loadMem_4ae6c2, %struct.Memory** %MEMORY
  %loadMem_4ae6c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14107 = getelementptr inbounds %struct.GPR, %struct.GPR* %14106, i32 0, i32 33
  %14108 = getelementptr inbounds %struct.Reg, %struct.Reg* %14107, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %14108 to i64*
  %14109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14110 = getelementptr inbounds %struct.GPR, %struct.GPR* %14109, i32 0, i32 5
  %14111 = getelementptr inbounds %struct.Reg, %struct.Reg* %14110, i32 0, i32 0
  %RCX.i109 = bitcast %union.anon* %14111 to i64*
  %14112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14113 = getelementptr inbounds %struct.GPR, %struct.GPR* %14112, i32 0, i32 7
  %14114 = getelementptr inbounds %struct.Reg, %struct.Reg* %14113, i32 0, i32 0
  %RDX.i110 = bitcast %union.anon* %14114 to i64*
  %14115 = load i64, i64* %RCX.i109
  %14116 = load i64, i64* %RDX.i110
  %14117 = load i64, i64* %PC.i108
  %14118 = add i64 %14117, 3
  store i64 %14118, i64* %PC.i108
  %14119 = add i64 %14116, %14115
  store i64 %14119, i64* %RCX.i109, align 8
  %14120 = icmp ult i64 %14119, %14115
  %14121 = icmp ult i64 %14119, %14116
  %14122 = or i1 %14120, %14121
  %14123 = zext i1 %14122 to i8
  %14124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14123, i8* %14124, align 1
  %14125 = trunc i64 %14119 to i32
  %14126 = and i32 %14125, 255
  %14127 = call i32 @llvm.ctpop.i32(i32 %14126)
  %14128 = trunc i32 %14127 to i8
  %14129 = and i8 %14128, 1
  %14130 = xor i8 %14129, 1
  %14131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14130, i8* %14131, align 1
  %14132 = xor i64 %14116, %14115
  %14133 = xor i64 %14132, %14119
  %14134 = lshr i64 %14133, 4
  %14135 = trunc i64 %14134 to i8
  %14136 = and i8 %14135, 1
  %14137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14136, i8* %14137, align 1
  %14138 = icmp eq i64 %14119, 0
  %14139 = zext i1 %14138 to i8
  %14140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14139, i8* %14140, align 1
  %14141 = lshr i64 %14119, 63
  %14142 = trunc i64 %14141 to i8
  %14143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14142, i8* %14143, align 1
  %14144 = lshr i64 %14115, 63
  %14145 = lshr i64 %14116, 63
  %14146 = xor i64 %14141, %14144
  %14147 = xor i64 %14141, %14145
  %14148 = add i64 %14146, %14147
  %14149 = icmp eq i64 %14148, 2
  %14150 = zext i1 %14149 to i8
  %14151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14150, i8* %14151, align 1
  store %struct.Memory* %loadMem_4ae6c9, %struct.Memory** %MEMORY
  %loadMem_4ae6cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %14152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14153 = getelementptr inbounds %struct.GPR, %struct.GPR* %14152, i32 0, i32 33
  %14154 = getelementptr inbounds %struct.Reg, %struct.Reg* %14153, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %14154 to i64*
  %14155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14156 = getelementptr inbounds %struct.GPR, %struct.GPR* %14155, i32 0, i32 7
  %14157 = getelementptr inbounds %struct.Reg, %struct.Reg* %14156, i32 0, i32 0
  %RDX.i106 = bitcast %union.anon* %14157 to i64*
  %14158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14159 = getelementptr inbounds %struct.GPR, %struct.GPR* %14158, i32 0, i32 15
  %14160 = getelementptr inbounds %struct.Reg, %struct.Reg* %14159, i32 0, i32 0
  %RBP.i107 = bitcast %union.anon* %14160 to i64*
  %14161 = load i64, i64* %RBP.i107
  %14162 = sub i64 %14161, 28
  %14163 = load i64, i64* %PC.i105
  %14164 = add i64 %14163, 4
  store i64 %14164, i64* %PC.i105
  %14165 = inttoptr i64 %14162 to i32*
  %14166 = load i32, i32* %14165
  %14167 = sext i32 %14166 to i64
  store i64 %14167, i64* %RDX.i106, align 8
  store %struct.Memory* %loadMem_4ae6cc, %struct.Memory** %MEMORY
  %loadMem_4ae6d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14169 = getelementptr inbounds %struct.GPR, %struct.GPR* %14168, i32 0, i32 33
  %14170 = getelementptr inbounds %struct.Reg, %struct.Reg* %14169, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %14170 to i64*
  %14171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14172 = getelementptr inbounds %struct.GPR, %struct.GPR* %14171, i32 0, i32 7
  %14173 = getelementptr inbounds %struct.Reg, %struct.Reg* %14172, i32 0, i32 0
  %RDX.i104 = bitcast %union.anon* %14173 to i64*
  %14174 = load i64, i64* %RDX.i104
  %14175 = load i64, i64* %PC.i103
  %14176 = add i64 %14175, 4
  store i64 %14176, i64* %PC.i103
  %14177 = sext i64 %14174 to i128
  %14178 = and i128 %14177, -18446744073709551616
  %14179 = zext i64 %14174 to i128
  %14180 = or i128 %14178, %14179
  %14181 = mul i128 12, %14180
  %14182 = trunc i128 %14181 to i64
  store i64 %14182, i64* %RDX.i104, align 8
  %14183 = sext i64 %14182 to i128
  %14184 = icmp ne i128 %14183, %14181
  %14185 = zext i1 %14184 to i8
  %14186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14185, i8* %14186, align 1
  %14187 = trunc i128 %14181 to i32
  %14188 = and i32 %14187, 255
  %14189 = call i32 @llvm.ctpop.i32(i32 %14188)
  %14190 = trunc i32 %14189 to i8
  %14191 = and i8 %14190, 1
  %14192 = xor i8 %14191, 1
  %14193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14192, i8* %14193, align 1
  %14194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14194, align 1
  %14195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14195, align 1
  %14196 = lshr i64 %14182, 63
  %14197 = trunc i64 %14196 to i8
  %14198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14197, i8* %14198, align 1
  %14199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14185, i8* %14199, align 1
  store %struct.Memory* %loadMem_4ae6d0, %struct.Memory** %MEMORY
  %loadMem_4ae6d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14201 = getelementptr inbounds %struct.GPR, %struct.GPR* %14200, i32 0, i32 33
  %14202 = getelementptr inbounds %struct.Reg, %struct.Reg* %14201, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %14202 to i64*
  %14203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14204 = getelementptr inbounds %struct.GPR, %struct.GPR* %14203, i32 0, i32 5
  %14205 = getelementptr inbounds %struct.Reg, %struct.Reg* %14204, i32 0, i32 0
  %RCX.i101 = bitcast %union.anon* %14205 to i64*
  %14206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14207 = getelementptr inbounds %struct.GPR, %struct.GPR* %14206, i32 0, i32 7
  %14208 = getelementptr inbounds %struct.Reg, %struct.Reg* %14207, i32 0, i32 0
  %RDX.i102 = bitcast %union.anon* %14208 to i64*
  %14209 = load i64, i64* %RCX.i101
  %14210 = load i64, i64* %RDX.i102
  %14211 = load i64, i64* %PC.i100
  %14212 = add i64 %14211, 3
  store i64 %14212, i64* %PC.i100
  %14213 = add i64 %14210, %14209
  store i64 %14213, i64* %RCX.i101, align 8
  %14214 = icmp ult i64 %14213, %14209
  %14215 = icmp ult i64 %14213, %14210
  %14216 = or i1 %14214, %14215
  %14217 = zext i1 %14216 to i8
  %14218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14217, i8* %14218, align 1
  %14219 = trunc i64 %14213 to i32
  %14220 = and i32 %14219, 255
  %14221 = call i32 @llvm.ctpop.i32(i32 %14220)
  %14222 = trunc i32 %14221 to i8
  %14223 = and i8 %14222, 1
  %14224 = xor i8 %14223, 1
  %14225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14224, i8* %14225, align 1
  %14226 = xor i64 %14210, %14209
  %14227 = xor i64 %14226, %14213
  %14228 = lshr i64 %14227, 4
  %14229 = trunc i64 %14228 to i8
  %14230 = and i8 %14229, 1
  %14231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14230, i8* %14231, align 1
  %14232 = icmp eq i64 %14213, 0
  %14233 = zext i1 %14232 to i8
  %14234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14233, i8* %14234, align 1
  %14235 = lshr i64 %14213, 63
  %14236 = trunc i64 %14235 to i8
  %14237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14236, i8* %14237, align 1
  %14238 = lshr i64 %14209, 63
  %14239 = lshr i64 %14210, 63
  %14240 = xor i64 %14235, %14238
  %14241 = xor i64 %14235, %14239
  %14242 = add i64 %14240, %14241
  %14243 = icmp eq i64 %14242, 2
  %14244 = zext i1 %14243 to i8
  %14245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14244, i8* %14245, align 1
  store %struct.Memory* %loadMem_4ae6d4, %struct.Memory** %MEMORY
  %loadMem_4ae6d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14247 = getelementptr inbounds %struct.GPR, %struct.GPR* %14246, i32 0, i32 33
  %14248 = getelementptr inbounds %struct.Reg, %struct.Reg* %14247, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %14248 to i64*
  %14249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14250 = getelementptr inbounds %struct.GPR, %struct.GPR* %14249, i32 0, i32 7
  %14251 = getelementptr inbounds %struct.Reg, %struct.Reg* %14250, i32 0, i32 0
  %RDX.i98 = bitcast %union.anon* %14251 to i64*
  %14252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14253 = getelementptr inbounds %struct.GPR, %struct.GPR* %14252, i32 0, i32 15
  %14254 = getelementptr inbounds %struct.Reg, %struct.Reg* %14253, i32 0, i32 0
  %RBP.i99 = bitcast %union.anon* %14254 to i64*
  %14255 = load i64, i64* %RBP.i99
  %14256 = sub i64 %14255, 32
  %14257 = load i64, i64* %PC.i97
  %14258 = add i64 %14257, 4
  store i64 %14258, i64* %PC.i97
  %14259 = inttoptr i64 %14256 to i32*
  %14260 = load i32, i32* %14259
  %14261 = sext i32 %14260 to i64
  store i64 %14261, i64* %RDX.i98, align 8
  store %struct.Memory* %loadMem_4ae6d7, %struct.Memory** %MEMORY
  %loadMem_4ae6db = load %struct.Memory*, %struct.Memory** %MEMORY
  %14262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14263 = getelementptr inbounds %struct.GPR, %struct.GPR* %14262, i32 0, i32 33
  %14264 = getelementptr inbounds %struct.Reg, %struct.Reg* %14263, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %14264 to i64*
  %14265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14266 = getelementptr inbounds %struct.GPR, %struct.GPR* %14265, i32 0, i32 5
  %14267 = getelementptr inbounds %struct.Reg, %struct.Reg* %14266, i32 0, i32 0
  %RCX.i94 = bitcast %union.anon* %14267 to i64*
  %14268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14269 = getelementptr inbounds %struct.GPR, %struct.GPR* %14268, i32 0, i32 7
  %14270 = getelementptr inbounds %struct.Reg, %struct.Reg* %14269, i32 0, i32 0
  %RDX.i95 = bitcast %union.anon* %14270 to i64*
  %14271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14272 = getelementptr inbounds %struct.GPR, %struct.GPR* %14271, i32 0, i32 9
  %14273 = getelementptr inbounds %struct.Reg, %struct.Reg* %14272, i32 0, i32 0
  %RSI.i96 = bitcast %union.anon* %14273 to i64*
  %14274 = load i64, i64* %RCX.i94
  %14275 = load i64, i64* %RDX.i95
  %14276 = mul i64 %14275, 4
  %14277 = add i64 %14276, %14274
  %14278 = load i64, i64* %PC.i93
  %14279 = add i64 %14278, 3
  store i64 %14279, i64* %PC.i93
  %14280 = inttoptr i64 %14277 to i32*
  %14281 = load i32, i32* %14280
  %14282 = zext i32 %14281 to i64
  store i64 %14282, i64* %RSI.i96, align 8
  store %struct.Memory* %loadMem_4ae6db, %struct.Memory** %MEMORY
  %loadMem_4ae6de = load %struct.Memory*, %struct.Memory** %MEMORY
  %14283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14284 = getelementptr inbounds %struct.GPR, %struct.GPR* %14283, i32 0, i32 33
  %14285 = getelementptr inbounds %struct.Reg, %struct.Reg* %14284, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %14285 to i64*
  %14286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14287 = getelementptr inbounds %struct.GPR, %struct.GPR* %14286, i32 0, i32 5
  %14288 = getelementptr inbounds %struct.Reg, %struct.Reg* %14287, i32 0, i32 0
  %RCX.i92 = bitcast %union.anon* %14288 to i64*
  %14289 = load i64, i64* %PC.i91
  %14290 = add i64 %14289, 8
  store i64 %14290, i64* %PC.i91
  %14291 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %14291, i64* %RCX.i92, align 8
  store %struct.Memory* %loadMem_4ae6de, %struct.Memory** %MEMORY
  %loadMem_4ae6e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14293 = getelementptr inbounds %struct.GPR, %struct.GPR* %14292, i32 0, i32 33
  %14294 = getelementptr inbounds %struct.Reg, %struct.Reg* %14293, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %14294 to i64*
  %14295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14296 = getelementptr inbounds %struct.GPR, %struct.GPR* %14295, i32 0, i32 7
  %14297 = getelementptr inbounds %struct.Reg, %struct.Reg* %14296, i32 0, i32 0
  %RDX.i89 = bitcast %union.anon* %14297 to i64*
  %14298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14299 = getelementptr inbounds %struct.GPR, %struct.GPR* %14298, i32 0, i32 15
  %14300 = getelementptr inbounds %struct.Reg, %struct.Reg* %14299, i32 0, i32 0
  %RBP.i90 = bitcast %union.anon* %14300 to i64*
  %14301 = load i64, i64* %RBP.i90
  %14302 = sub i64 %14301, 932
  %14303 = load i64, i64* %PC.i88
  %14304 = add i64 %14303, 7
  store i64 %14304, i64* %PC.i88
  %14305 = inttoptr i64 %14302 to i32*
  %14306 = load i32, i32* %14305
  %14307 = sext i32 %14306 to i64
  store i64 %14307, i64* %RDX.i89, align 8
  store %struct.Memory* %loadMem_4ae6e6, %struct.Memory** %MEMORY
  %loadMem_4ae6ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %14308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14309 = getelementptr inbounds %struct.GPR, %struct.GPR* %14308, i32 0, i32 33
  %14310 = getelementptr inbounds %struct.Reg, %struct.Reg* %14309, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %14310 to i64*
  %14311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14312 = getelementptr inbounds %struct.GPR, %struct.GPR* %14311, i32 0, i32 5
  %14313 = getelementptr inbounds %struct.Reg, %struct.Reg* %14312, i32 0, i32 0
  %RCX.i86 = bitcast %union.anon* %14313 to i64*
  %14314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14315 = getelementptr inbounds %struct.GPR, %struct.GPR* %14314, i32 0, i32 7
  %14316 = getelementptr inbounds %struct.Reg, %struct.Reg* %14315, i32 0, i32 0
  %RDX.i87 = bitcast %union.anon* %14316 to i64*
  %14317 = load i64, i64* %RCX.i86
  %14318 = load i64, i64* %RDX.i87
  %14319 = mul i64 %14318, 8
  %14320 = add i64 %14319, %14317
  %14321 = load i64, i64* %PC.i85
  %14322 = add i64 %14321, 4
  store i64 %14322, i64* %PC.i85
  %14323 = inttoptr i64 %14320 to i64*
  %14324 = load i64, i64* %14323
  store i64 %14324, i64* %RCX.i86, align 8
  store %struct.Memory* %loadMem_4ae6ed, %struct.Memory** %MEMORY
  %loadMem_4ae6f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14326 = getelementptr inbounds %struct.GPR, %struct.GPR* %14325, i32 0, i32 33
  %14327 = getelementptr inbounds %struct.Reg, %struct.Reg* %14326, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %14327 to i64*
  %14328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14329 = getelementptr inbounds %struct.GPR, %struct.GPR* %14328, i32 0, i32 7
  %14330 = getelementptr inbounds %struct.Reg, %struct.Reg* %14329, i32 0, i32 0
  %RDX.i83 = bitcast %union.anon* %14330 to i64*
  %14331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14332 = getelementptr inbounds %struct.GPR, %struct.GPR* %14331, i32 0, i32 15
  %14333 = getelementptr inbounds %struct.Reg, %struct.Reg* %14332, i32 0, i32 0
  %RBP.i84 = bitcast %union.anon* %14333 to i64*
  %14334 = load i64, i64* %RBP.i84
  %14335 = sub i64 %14334, 28
  %14336 = load i64, i64* %PC.i82
  %14337 = add i64 %14336, 4
  store i64 %14337, i64* %PC.i82
  %14338 = inttoptr i64 %14335 to i32*
  %14339 = load i32, i32* %14338
  %14340 = sext i32 %14339 to i64
  store i64 %14340, i64* %RDX.i83, align 8
  store %struct.Memory* %loadMem_4ae6f1, %struct.Memory** %MEMORY
  %loadMem_4ae6f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14342 = getelementptr inbounds %struct.GPR, %struct.GPR* %14341, i32 0, i32 33
  %14343 = getelementptr inbounds %struct.Reg, %struct.Reg* %14342, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %14343 to i64*
  %14344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14345 = getelementptr inbounds %struct.GPR, %struct.GPR* %14344, i32 0, i32 5
  %14346 = getelementptr inbounds %struct.Reg, %struct.Reg* %14345, i32 0, i32 0
  %RCX.i80 = bitcast %union.anon* %14346 to i64*
  %14347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14348 = getelementptr inbounds %struct.GPR, %struct.GPR* %14347, i32 0, i32 7
  %14349 = getelementptr inbounds %struct.Reg, %struct.Reg* %14348, i32 0, i32 0
  %RDX.i81 = bitcast %union.anon* %14349 to i64*
  %14350 = load i64, i64* %RCX.i80
  %14351 = load i64, i64* %RDX.i81
  %14352 = mul i64 %14351, 8
  %14353 = add i64 %14352, %14350
  %14354 = load i64, i64* %PC.i79
  %14355 = add i64 %14354, 4
  store i64 %14355, i64* %PC.i79
  %14356 = inttoptr i64 %14353 to i64*
  %14357 = load i64, i64* %14356
  store i64 %14357, i64* %RCX.i80, align 8
  store %struct.Memory* %loadMem_4ae6f5, %struct.Memory** %MEMORY
  %loadMem_4ae6f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14359 = getelementptr inbounds %struct.GPR, %struct.GPR* %14358, i32 0, i32 33
  %14360 = getelementptr inbounds %struct.Reg, %struct.Reg* %14359, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %14360 to i64*
  %14361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14362 = getelementptr inbounds %struct.GPR, %struct.GPR* %14361, i32 0, i32 7
  %14363 = getelementptr inbounds %struct.Reg, %struct.Reg* %14362, i32 0, i32 0
  %RDX.i77 = bitcast %union.anon* %14363 to i64*
  %14364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14365 = getelementptr inbounds %struct.GPR, %struct.GPR* %14364, i32 0, i32 15
  %14366 = getelementptr inbounds %struct.Reg, %struct.Reg* %14365, i32 0, i32 0
  %RBP.i78 = bitcast %union.anon* %14366 to i64*
  %14367 = load i64, i64* %RBP.i78
  %14368 = sub i64 %14367, 32
  %14369 = load i64, i64* %PC.i76
  %14370 = add i64 %14369, 4
  store i64 %14370, i64* %PC.i76
  %14371 = inttoptr i64 %14368 to i32*
  %14372 = load i32, i32* %14371
  %14373 = sext i32 %14372 to i64
  store i64 %14373, i64* %RDX.i77, align 8
  store %struct.Memory* %loadMem_4ae6f9, %struct.Memory** %MEMORY
  %loadMem_4ae6fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14375 = getelementptr inbounds %struct.GPR, %struct.GPR* %14374, i32 0, i32 33
  %14376 = getelementptr inbounds %struct.Reg, %struct.Reg* %14375, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %14376 to i64*
  %14377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14378 = getelementptr inbounds %struct.GPR, %struct.GPR* %14377, i32 0, i32 9
  %14379 = getelementptr inbounds %struct.Reg, %struct.Reg* %14378, i32 0, i32 0
  %ESI.i74 = bitcast %union.anon* %14379 to i32*
  %14380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14381 = getelementptr inbounds %struct.GPR, %struct.GPR* %14380, i32 0, i32 5
  %14382 = getelementptr inbounds %struct.Reg, %struct.Reg* %14381, i32 0, i32 0
  %RCX.i75 = bitcast %union.anon* %14382 to i64*
  %14383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14384 = getelementptr inbounds %struct.GPR, %struct.GPR* %14383, i32 0, i32 7
  %14385 = getelementptr inbounds %struct.Reg, %struct.Reg* %14384, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %14385 to i64*
  %14386 = load i64, i64* %RCX.i75
  %14387 = load i64, i64* %RDX.i
  %14388 = mul i64 %14387, 4
  %14389 = add i64 %14388, %14386
  %14390 = load i32, i32* %ESI.i74
  %14391 = zext i32 %14390 to i64
  %14392 = load i64, i64* %PC.i73
  %14393 = add i64 %14392, 3
  store i64 %14393, i64* %PC.i73
  %14394 = inttoptr i64 %14389 to i32*
  store i32 %14390, i32* %14394
  store %struct.Memory* %loadMem_4ae6fd, %struct.Memory** %MEMORY
  %loadMem_4ae700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14396 = getelementptr inbounds %struct.GPR, %struct.GPR* %14395, i32 0, i32 33
  %14397 = getelementptr inbounds %struct.Reg, %struct.Reg* %14396, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %14397 to i64*
  %14398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14399 = getelementptr inbounds %struct.GPR, %struct.GPR* %14398, i32 0, i32 5
  %14400 = getelementptr inbounds %struct.Reg, %struct.Reg* %14399, i32 0, i32 0
  %RCX.i71 = bitcast %union.anon* %14400 to i64*
  %14401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14402 = getelementptr inbounds %struct.GPR, %struct.GPR* %14401, i32 0, i32 15
  %14403 = getelementptr inbounds %struct.Reg, %struct.Reg* %14402, i32 0, i32 0
  %RBP.i72 = bitcast %union.anon* %14403 to i64*
  %14404 = load i64, i64* %RBP.i72
  %14405 = sub i64 %14404, 932
  %14406 = load i64, i64* %PC.i70
  %14407 = add i64 %14406, 7
  store i64 %14407, i64* %PC.i70
  %14408 = inttoptr i64 %14405 to i32*
  %14409 = load i32, i32* %14408
  %14410 = sext i32 %14409 to i64
  store i64 %14410, i64* %RCX.i71, align 8
  store %struct.Memory* %loadMem_4ae700, %struct.Memory** %MEMORY
  %loadMem_4ae707 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14412 = getelementptr inbounds %struct.GPR, %struct.GPR* %14411, i32 0, i32 33
  %14413 = getelementptr inbounds %struct.Reg, %struct.Reg* %14412, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %14413 to i64*
  %14414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14415 = getelementptr inbounds %struct.GPR, %struct.GPR* %14414, i32 0, i32 5
  %14416 = getelementptr inbounds %struct.Reg, %struct.Reg* %14415, i32 0, i32 0
  %RCX.i69 = bitcast %union.anon* %14416 to i64*
  %14417 = load i64, i64* %RCX.i69
  %14418 = load i64, i64* %PC.i68
  %14419 = add i64 %14418, 7
  store i64 %14419, i64* %PC.i68
  %14420 = sext i64 %14417 to i128
  %14421 = and i128 %14420, -18446744073709551616
  %14422 = zext i64 %14417 to i128
  %14423 = or i128 %14421, %14422
  %14424 = mul i128 180, %14423
  %14425 = trunc i128 %14424 to i64
  store i64 %14425, i64* %RCX.i69, align 8
  %14426 = sext i64 %14425 to i128
  %14427 = icmp ne i128 %14426, %14424
  %14428 = zext i1 %14427 to i8
  %14429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14428, i8* %14429, align 1
  %14430 = trunc i128 %14424 to i32
  %14431 = and i32 %14430, 255
  %14432 = call i32 @llvm.ctpop.i32(i32 %14431)
  %14433 = trunc i32 %14432 to i8
  %14434 = and i8 %14433, 1
  %14435 = xor i8 %14434, 1
  %14436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14435, i8* %14436, align 1
  %14437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14437, align 1
  %14438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14438, align 1
  %14439 = lshr i64 %14425, 63
  %14440 = trunc i64 %14439 to i8
  %14441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14440, i8* %14441, align 1
  %14442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14428, i8* %14442, align 1
  store %struct.Memory* %loadMem_4ae707, %struct.Memory** %MEMORY
  %loadMem_4ae70e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14444 = getelementptr inbounds %struct.GPR, %struct.GPR* %14443, i32 0, i32 33
  %14445 = getelementptr inbounds %struct.Reg, %struct.Reg* %14444, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %14445 to i64*
  %14446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14447 = getelementptr inbounds %struct.GPR, %struct.GPR* %14446, i32 0, i32 1
  %14448 = getelementptr inbounds %struct.Reg, %struct.Reg* %14447, i32 0, i32 0
  %RAX.i66 = bitcast %union.anon* %14448 to i64*
  %14449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14450 = getelementptr inbounds %struct.GPR, %struct.GPR* %14449, i32 0, i32 5
  %14451 = getelementptr inbounds %struct.Reg, %struct.Reg* %14450, i32 0, i32 0
  %RCX.i67 = bitcast %union.anon* %14451 to i64*
  %14452 = load i64, i64* %RAX.i66
  %14453 = load i64, i64* %RCX.i67
  %14454 = load i64, i64* %PC.i65
  %14455 = add i64 %14454, 3
  store i64 %14455, i64* %PC.i65
  %14456 = add i64 %14453, %14452
  store i64 %14456, i64* %RAX.i66, align 8
  %14457 = icmp ult i64 %14456, %14452
  %14458 = icmp ult i64 %14456, %14453
  %14459 = or i1 %14457, %14458
  %14460 = zext i1 %14459 to i8
  %14461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14460, i8* %14461, align 1
  %14462 = trunc i64 %14456 to i32
  %14463 = and i32 %14462, 255
  %14464 = call i32 @llvm.ctpop.i32(i32 %14463)
  %14465 = trunc i32 %14464 to i8
  %14466 = and i8 %14465, 1
  %14467 = xor i8 %14466, 1
  %14468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14467, i8* %14468, align 1
  %14469 = xor i64 %14453, %14452
  %14470 = xor i64 %14469, %14456
  %14471 = lshr i64 %14470, 4
  %14472 = trunc i64 %14471 to i8
  %14473 = and i8 %14472, 1
  %14474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14473, i8* %14474, align 1
  %14475 = icmp eq i64 %14456, 0
  %14476 = zext i1 %14475 to i8
  %14477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14476, i8* %14477, align 1
  %14478 = lshr i64 %14456, 63
  %14479 = trunc i64 %14478 to i8
  %14480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14479, i8* %14480, align 1
  %14481 = lshr i64 %14452, 63
  %14482 = lshr i64 %14453, 63
  %14483 = xor i64 %14478, %14481
  %14484 = xor i64 %14478, %14482
  %14485 = add i64 %14483, %14484
  %14486 = icmp eq i64 %14485, 2
  %14487 = zext i1 %14486 to i8
  %14488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14487, i8* %14488, align 1
  store %struct.Memory* %loadMem_4ae70e, %struct.Memory** %MEMORY
  %loadMem_4ae711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14490 = getelementptr inbounds %struct.GPR, %struct.GPR* %14489, i32 0, i32 33
  %14491 = getelementptr inbounds %struct.Reg, %struct.Reg* %14490, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %14491 to i64*
  %14492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14493 = getelementptr inbounds %struct.GPR, %struct.GPR* %14492, i32 0, i32 5
  %14494 = getelementptr inbounds %struct.Reg, %struct.Reg* %14493, i32 0, i32 0
  %RCX.i63 = bitcast %union.anon* %14494 to i64*
  %14495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14496 = getelementptr inbounds %struct.GPR, %struct.GPR* %14495, i32 0, i32 15
  %14497 = getelementptr inbounds %struct.Reg, %struct.Reg* %14496, i32 0, i32 0
  %RBP.i64 = bitcast %union.anon* %14497 to i64*
  %14498 = load i64, i64* %RBP.i64
  %14499 = sub i64 %14498, 28
  %14500 = load i64, i64* %PC.i62
  %14501 = add i64 %14500, 4
  store i64 %14501, i64* %PC.i62
  %14502 = inttoptr i64 %14499 to i32*
  %14503 = load i32, i32* %14502
  %14504 = sext i32 %14503 to i64
  store i64 %14504, i64* %RCX.i63, align 8
  store %struct.Memory* %loadMem_4ae711, %struct.Memory** %MEMORY
  %loadMem_4ae715 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14506 = getelementptr inbounds %struct.GPR, %struct.GPR* %14505, i32 0, i32 33
  %14507 = getelementptr inbounds %struct.Reg, %struct.Reg* %14506, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %14507 to i64*
  %14508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14509 = getelementptr inbounds %struct.GPR, %struct.GPR* %14508, i32 0, i32 5
  %14510 = getelementptr inbounds %struct.Reg, %struct.Reg* %14509, i32 0, i32 0
  %RCX.i61 = bitcast %union.anon* %14510 to i64*
  %14511 = load i64, i64* %RCX.i61
  %14512 = load i64, i64* %PC.i60
  %14513 = add i64 %14512, 4
  store i64 %14513, i64* %PC.i60
  %14514 = sext i64 %14511 to i128
  %14515 = and i128 %14514, -18446744073709551616
  %14516 = zext i64 %14511 to i128
  %14517 = or i128 %14515, %14516
  %14518 = mul i128 12, %14517
  %14519 = trunc i128 %14518 to i64
  store i64 %14519, i64* %RCX.i61, align 8
  %14520 = sext i64 %14519 to i128
  %14521 = icmp ne i128 %14520, %14518
  %14522 = zext i1 %14521 to i8
  %14523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14522, i8* %14523, align 1
  %14524 = trunc i128 %14518 to i32
  %14525 = and i32 %14524, 255
  %14526 = call i32 @llvm.ctpop.i32(i32 %14525)
  %14527 = trunc i32 %14526 to i8
  %14528 = and i8 %14527, 1
  %14529 = xor i8 %14528, 1
  %14530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14529, i8* %14530, align 1
  %14531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14531, align 1
  %14532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14532, align 1
  %14533 = lshr i64 %14519, 63
  %14534 = trunc i64 %14533 to i8
  %14535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14534, i8* %14535, align 1
  %14536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14522, i8* %14536, align 1
  store %struct.Memory* %loadMem_4ae715, %struct.Memory** %MEMORY
  %loadMem_4ae719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14538 = getelementptr inbounds %struct.GPR, %struct.GPR* %14537, i32 0, i32 33
  %14539 = getelementptr inbounds %struct.Reg, %struct.Reg* %14538, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %14539 to i64*
  %14540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14541 = getelementptr inbounds %struct.GPR, %struct.GPR* %14540, i32 0, i32 1
  %14542 = getelementptr inbounds %struct.Reg, %struct.Reg* %14541, i32 0, i32 0
  %RAX.i58 = bitcast %union.anon* %14542 to i64*
  %14543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14544 = getelementptr inbounds %struct.GPR, %struct.GPR* %14543, i32 0, i32 5
  %14545 = getelementptr inbounds %struct.Reg, %struct.Reg* %14544, i32 0, i32 0
  %RCX.i59 = bitcast %union.anon* %14545 to i64*
  %14546 = load i64, i64* %RAX.i58
  %14547 = load i64, i64* %RCX.i59
  %14548 = load i64, i64* %PC.i57
  %14549 = add i64 %14548, 3
  store i64 %14549, i64* %PC.i57
  %14550 = add i64 %14547, %14546
  store i64 %14550, i64* %RAX.i58, align 8
  %14551 = icmp ult i64 %14550, %14546
  %14552 = icmp ult i64 %14550, %14547
  %14553 = or i1 %14551, %14552
  %14554 = zext i1 %14553 to i8
  %14555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14554, i8* %14555, align 1
  %14556 = trunc i64 %14550 to i32
  %14557 = and i32 %14556, 255
  %14558 = call i32 @llvm.ctpop.i32(i32 %14557)
  %14559 = trunc i32 %14558 to i8
  %14560 = and i8 %14559, 1
  %14561 = xor i8 %14560, 1
  %14562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14561, i8* %14562, align 1
  %14563 = xor i64 %14547, %14546
  %14564 = xor i64 %14563, %14550
  %14565 = lshr i64 %14564, 4
  %14566 = trunc i64 %14565 to i8
  %14567 = and i8 %14566, 1
  %14568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14567, i8* %14568, align 1
  %14569 = icmp eq i64 %14550, 0
  %14570 = zext i1 %14569 to i8
  %14571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14570, i8* %14571, align 1
  %14572 = lshr i64 %14550, 63
  %14573 = trunc i64 %14572 to i8
  %14574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14573, i8* %14574, align 1
  %14575 = lshr i64 %14546, 63
  %14576 = lshr i64 %14547, 63
  %14577 = xor i64 %14572, %14575
  %14578 = xor i64 %14572, %14576
  %14579 = add i64 %14577, %14578
  %14580 = icmp eq i64 %14579, 2
  %14581 = zext i1 %14580 to i8
  %14582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14581, i8* %14582, align 1
  store %struct.Memory* %loadMem_4ae719, %struct.Memory** %MEMORY
  %loadMem_4ae71c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14584 = getelementptr inbounds %struct.GPR, %struct.GPR* %14583, i32 0, i32 33
  %14585 = getelementptr inbounds %struct.Reg, %struct.Reg* %14584, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %14585 to i64*
  %14586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14587 = getelementptr inbounds %struct.GPR, %struct.GPR* %14586, i32 0, i32 5
  %14588 = getelementptr inbounds %struct.Reg, %struct.Reg* %14587, i32 0, i32 0
  %RCX.i55 = bitcast %union.anon* %14588 to i64*
  %14589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14590 = getelementptr inbounds %struct.GPR, %struct.GPR* %14589, i32 0, i32 15
  %14591 = getelementptr inbounds %struct.Reg, %struct.Reg* %14590, i32 0, i32 0
  %RBP.i56 = bitcast %union.anon* %14591 to i64*
  %14592 = load i64, i64* %RBP.i56
  %14593 = sub i64 %14592, 32
  %14594 = load i64, i64* %PC.i54
  %14595 = add i64 %14594, 4
  store i64 %14595, i64* %PC.i54
  %14596 = inttoptr i64 %14593 to i32*
  %14597 = load i32, i32* %14596
  %14598 = sext i32 %14597 to i64
  store i64 %14598, i64* %RCX.i55, align 8
  store %struct.Memory* %loadMem_4ae71c, %struct.Memory** %MEMORY
  %loadMem_4ae720 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14600 = getelementptr inbounds %struct.GPR, %struct.GPR* %14599, i32 0, i32 33
  %14601 = getelementptr inbounds %struct.Reg, %struct.Reg* %14600, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %14601 to i64*
  %14602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14603 = getelementptr inbounds %struct.GPR, %struct.GPR* %14602, i32 0, i32 1
  %14604 = getelementptr inbounds %struct.Reg, %struct.Reg* %14603, i32 0, i32 0
  %RAX.i52 = bitcast %union.anon* %14604 to i64*
  %14605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14606 = getelementptr inbounds %struct.GPR, %struct.GPR* %14605, i32 0, i32 5
  %14607 = getelementptr inbounds %struct.Reg, %struct.Reg* %14606, i32 0, i32 0
  %RCX.i53 = bitcast %union.anon* %14607 to i64*
  %14608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14609 = getelementptr inbounds %struct.GPR, %struct.GPR* %14608, i32 0, i32 9
  %14610 = getelementptr inbounds %struct.Reg, %struct.Reg* %14609, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %14610 to i64*
  %14611 = load i64, i64* %RAX.i52
  %14612 = load i64, i64* %RCX.i53
  %14613 = mul i64 %14612, 4
  %14614 = add i64 %14613, %14611
  %14615 = load i64, i64* %PC.i51
  %14616 = add i64 %14615, 3
  store i64 %14616, i64* %PC.i51
  %14617 = inttoptr i64 %14614 to i32*
  %14618 = load i32, i32* %14617
  %14619 = zext i32 %14618 to i64
  store i64 %14619, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_4ae720, %struct.Memory** %MEMORY
  %loadMem_4ae723 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14621 = getelementptr inbounds %struct.GPR, %struct.GPR* %14620, i32 0, i32 33
  %14622 = getelementptr inbounds %struct.Reg, %struct.Reg* %14621, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %14622 to i64*
  %14623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14624 = getelementptr inbounds %struct.GPR, %struct.GPR* %14623, i32 0, i32 1
  %14625 = getelementptr inbounds %struct.Reg, %struct.Reg* %14624, i32 0, i32 0
  %RAX.i50 = bitcast %union.anon* %14625 to i64*
  %14626 = load i64, i64* %PC.i49
  %14627 = add i64 %14626, 8
  store i64 %14627, i64* %PC.i49
  %14628 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %14628, i64* %RAX.i50, align 8
  store %struct.Memory* %loadMem_4ae723, %struct.Memory** %MEMORY
  %loadMem_4ae72b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14630 = getelementptr inbounds %struct.GPR, %struct.GPR* %14629, i32 0, i32 33
  %14631 = getelementptr inbounds %struct.Reg, %struct.Reg* %14630, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %14631 to i64*
  %14632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14633 = getelementptr inbounds %struct.GPR, %struct.GPR* %14632, i32 0, i32 5
  %14634 = getelementptr inbounds %struct.Reg, %struct.Reg* %14633, i32 0, i32 0
  %RCX.i47 = bitcast %union.anon* %14634 to i64*
  %14635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14636 = getelementptr inbounds %struct.GPR, %struct.GPR* %14635, i32 0, i32 15
  %14637 = getelementptr inbounds %struct.Reg, %struct.Reg* %14636, i32 0, i32 0
  %RBP.i48 = bitcast %union.anon* %14637 to i64*
  %14638 = load i64, i64* %RBP.i48
  %14639 = sub i64 %14638, 932
  %14640 = load i64, i64* %PC.i46
  %14641 = add i64 %14640, 7
  store i64 %14641, i64* %PC.i46
  %14642 = inttoptr i64 %14639 to i32*
  %14643 = load i32, i32* %14642
  %14644 = sext i32 %14643 to i64
  store i64 %14644, i64* %RCX.i47, align 8
  store %struct.Memory* %loadMem_4ae72b, %struct.Memory** %MEMORY
  %loadMem_4ae732 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14646 = getelementptr inbounds %struct.GPR, %struct.GPR* %14645, i32 0, i32 33
  %14647 = getelementptr inbounds %struct.Reg, %struct.Reg* %14646, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %14647 to i64*
  %14648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14649 = getelementptr inbounds %struct.GPR, %struct.GPR* %14648, i32 0, i32 1
  %14650 = getelementptr inbounds %struct.Reg, %struct.Reg* %14649, i32 0, i32 0
  %RAX.i44 = bitcast %union.anon* %14650 to i64*
  %14651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14652 = getelementptr inbounds %struct.GPR, %struct.GPR* %14651, i32 0, i32 5
  %14653 = getelementptr inbounds %struct.Reg, %struct.Reg* %14652, i32 0, i32 0
  %RCX.i45 = bitcast %union.anon* %14653 to i64*
  %14654 = load i64, i64* %RAX.i44
  %14655 = load i64, i64* %RCX.i45
  %14656 = mul i64 %14655, 8
  %14657 = add i64 %14656, %14654
  %14658 = load i64, i64* %PC.i43
  %14659 = add i64 %14658, 4
  store i64 %14659, i64* %PC.i43
  %14660 = inttoptr i64 %14657 to i64*
  %14661 = load i64, i64* %14660
  store i64 %14661, i64* %RAX.i44, align 8
  store %struct.Memory* %loadMem_4ae732, %struct.Memory** %MEMORY
  %loadMem_4ae736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14663 = getelementptr inbounds %struct.GPR, %struct.GPR* %14662, i32 0, i32 33
  %14664 = getelementptr inbounds %struct.Reg, %struct.Reg* %14663, i32 0, i32 0
  %PC.i40 = bitcast %union.anon* %14664 to i64*
  %14665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14666 = getelementptr inbounds %struct.GPR, %struct.GPR* %14665, i32 0, i32 5
  %14667 = getelementptr inbounds %struct.Reg, %struct.Reg* %14666, i32 0, i32 0
  %RCX.i41 = bitcast %union.anon* %14667 to i64*
  %14668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14669 = getelementptr inbounds %struct.GPR, %struct.GPR* %14668, i32 0, i32 15
  %14670 = getelementptr inbounds %struct.Reg, %struct.Reg* %14669, i32 0, i32 0
  %RBP.i42 = bitcast %union.anon* %14670 to i64*
  %14671 = load i64, i64* %RBP.i42
  %14672 = sub i64 %14671, 28
  %14673 = load i64, i64* %PC.i40
  %14674 = add i64 %14673, 4
  store i64 %14674, i64* %PC.i40
  %14675 = inttoptr i64 %14672 to i32*
  %14676 = load i32, i32* %14675
  %14677 = sext i32 %14676 to i64
  store i64 %14677, i64* %RCX.i41, align 8
  store %struct.Memory* %loadMem_4ae736, %struct.Memory** %MEMORY
  %loadMem_4ae73a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14679 = getelementptr inbounds %struct.GPR, %struct.GPR* %14678, i32 0, i32 33
  %14680 = getelementptr inbounds %struct.Reg, %struct.Reg* %14679, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %14680 to i64*
  %14681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14682 = getelementptr inbounds %struct.GPR, %struct.GPR* %14681, i32 0, i32 1
  %14683 = getelementptr inbounds %struct.Reg, %struct.Reg* %14682, i32 0, i32 0
  %RAX.i38 = bitcast %union.anon* %14683 to i64*
  %14684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14685 = getelementptr inbounds %struct.GPR, %struct.GPR* %14684, i32 0, i32 5
  %14686 = getelementptr inbounds %struct.Reg, %struct.Reg* %14685, i32 0, i32 0
  %RCX.i39 = bitcast %union.anon* %14686 to i64*
  %14687 = load i64, i64* %RAX.i38
  %14688 = load i64, i64* %RCX.i39
  %14689 = mul i64 %14688, 8
  %14690 = add i64 %14689, %14687
  %14691 = load i64, i64* %PC.i37
  %14692 = add i64 %14691, 4
  store i64 %14692, i64* %PC.i37
  %14693 = inttoptr i64 %14690 to i64*
  %14694 = load i64, i64* %14693
  store i64 %14694, i64* %RAX.i38, align 8
  store %struct.Memory* %loadMem_4ae73a, %struct.Memory** %MEMORY
  %loadMem_4ae73e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14696 = getelementptr inbounds %struct.GPR, %struct.GPR* %14695, i32 0, i32 33
  %14697 = getelementptr inbounds %struct.Reg, %struct.Reg* %14696, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %14697 to i64*
  %14698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14699 = getelementptr inbounds %struct.GPR, %struct.GPR* %14698, i32 0, i32 5
  %14700 = getelementptr inbounds %struct.Reg, %struct.Reg* %14699, i32 0, i32 0
  %RCX.i35 = bitcast %union.anon* %14700 to i64*
  %14701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14702 = getelementptr inbounds %struct.GPR, %struct.GPR* %14701, i32 0, i32 15
  %14703 = getelementptr inbounds %struct.Reg, %struct.Reg* %14702, i32 0, i32 0
  %RBP.i36 = bitcast %union.anon* %14703 to i64*
  %14704 = load i64, i64* %RBP.i36
  %14705 = sub i64 %14704, 32
  %14706 = load i64, i64* %PC.i34
  %14707 = add i64 %14706, 4
  store i64 %14707, i64* %PC.i34
  %14708 = inttoptr i64 %14705 to i32*
  %14709 = load i32, i32* %14708
  %14710 = sext i32 %14709 to i64
  store i64 %14710, i64* %RCX.i35, align 8
  store %struct.Memory* %loadMem_4ae73e, %struct.Memory** %MEMORY
  %loadMem_4ae742 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14712 = getelementptr inbounds %struct.GPR, %struct.GPR* %14711, i32 0, i32 33
  %14713 = getelementptr inbounds %struct.Reg, %struct.Reg* %14712, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %14713 to i64*
  %14714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14715 = getelementptr inbounds %struct.GPR, %struct.GPR* %14714, i32 0, i32 9
  %14716 = getelementptr inbounds %struct.Reg, %struct.Reg* %14715, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %14716 to i32*
  %14717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14718 = getelementptr inbounds %struct.GPR, %struct.GPR* %14717, i32 0, i32 1
  %14719 = getelementptr inbounds %struct.Reg, %struct.Reg* %14718, i32 0, i32 0
  %RAX.i33 = bitcast %union.anon* %14719 to i64*
  %14720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14721 = getelementptr inbounds %struct.GPR, %struct.GPR* %14720, i32 0, i32 5
  %14722 = getelementptr inbounds %struct.Reg, %struct.Reg* %14721, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %14722 to i64*
  %14723 = load i64, i64* %RAX.i33
  %14724 = load i64, i64* %RCX.i
  %14725 = mul i64 %14724, 4
  %14726 = add i64 %14725, %14723
  %14727 = load i32, i32* %ESI.i
  %14728 = zext i32 %14727 to i64
  %14729 = load i64, i64* %PC.i32
  %14730 = add i64 %14729, 3
  store i64 %14730, i64* %PC.i32
  %14731 = inttoptr i64 %14726 to i32*
  store i32 %14727, i32* %14731
  store %struct.Memory* %loadMem_4ae742, %struct.Memory** %MEMORY
  %loadMem_4ae745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14733 = getelementptr inbounds %struct.GPR, %struct.GPR* %14732, i32 0, i32 33
  %14734 = getelementptr inbounds %struct.Reg, %struct.Reg* %14733, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %14734 to i64*
  %14735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14736 = getelementptr inbounds %struct.GPR, %struct.GPR* %14735, i32 0, i32 1
  %14737 = getelementptr inbounds %struct.Reg, %struct.Reg* %14736, i32 0, i32 0
  %RAX.i30 = bitcast %union.anon* %14737 to i64*
  %14738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14739 = getelementptr inbounds %struct.GPR, %struct.GPR* %14738, i32 0, i32 15
  %14740 = getelementptr inbounds %struct.Reg, %struct.Reg* %14739, i32 0, i32 0
  %RBP.i31 = bitcast %union.anon* %14740 to i64*
  %14741 = load i64, i64* %RBP.i31
  %14742 = sub i64 %14741, 32
  %14743 = load i64, i64* %PC.i29
  %14744 = add i64 %14743, 3
  store i64 %14744, i64* %PC.i29
  %14745 = inttoptr i64 %14742 to i32*
  %14746 = load i32, i32* %14745
  %14747 = zext i32 %14746 to i64
  store i64 %14747, i64* %RAX.i30, align 8
  store %struct.Memory* %loadMem_4ae745, %struct.Memory** %MEMORY
  %loadMem_4ae748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14749 = getelementptr inbounds %struct.GPR, %struct.GPR* %14748, i32 0, i32 33
  %14750 = getelementptr inbounds %struct.Reg, %struct.Reg* %14749, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %14750 to i64*
  %14751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14752 = getelementptr inbounds %struct.GPR, %struct.GPR* %14751, i32 0, i32 1
  %14753 = getelementptr inbounds %struct.Reg, %struct.Reg* %14752, i32 0, i32 0
  %RAX.i28 = bitcast %union.anon* %14753 to i64*
  %14754 = load i64, i64* %RAX.i28
  %14755 = load i64, i64* %PC.i27
  %14756 = add i64 %14755, 3
  store i64 %14756, i64* %PC.i27
  %14757 = trunc i64 %14754 to i32
  %14758 = add i32 1, %14757
  %14759 = zext i32 %14758 to i64
  store i64 %14759, i64* %RAX.i28, align 8
  %14760 = icmp ult i32 %14758, %14757
  %14761 = icmp ult i32 %14758, 1
  %14762 = or i1 %14760, %14761
  %14763 = zext i1 %14762 to i8
  %14764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14763, i8* %14764, align 1
  %14765 = and i32 %14758, 255
  %14766 = call i32 @llvm.ctpop.i32(i32 %14765)
  %14767 = trunc i32 %14766 to i8
  %14768 = and i8 %14767, 1
  %14769 = xor i8 %14768, 1
  %14770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14769, i8* %14770, align 1
  %14771 = xor i64 1, %14754
  %14772 = trunc i64 %14771 to i32
  %14773 = xor i32 %14772, %14758
  %14774 = lshr i32 %14773, 4
  %14775 = trunc i32 %14774 to i8
  %14776 = and i8 %14775, 1
  %14777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14776, i8* %14777, align 1
  %14778 = icmp eq i32 %14758, 0
  %14779 = zext i1 %14778 to i8
  %14780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14779, i8* %14780, align 1
  %14781 = lshr i32 %14758, 31
  %14782 = trunc i32 %14781 to i8
  %14783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14782, i8* %14783, align 1
  %14784 = lshr i32 %14757, 31
  %14785 = xor i32 %14781, %14784
  %14786 = add i32 %14785, %14781
  %14787 = icmp eq i32 %14786, 2
  %14788 = zext i1 %14787 to i8
  %14789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14788, i8* %14789, align 1
  store %struct.Memory* %loadMem_4ae748, %struct.Memory** %MEMORY
  %loadMem_4ae74b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14791 = getelementptr inbounds %struct.GPR, %struct.GPR* %14790, i32 0, i32 33
  %14792 = getelementptr inbounds %struct.Reg, %struct.Reg* %14791, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %14792 to i64*
  %14793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14794 = getelementptr inbounds %struct.GPR, %struct.GPR* %14793, i32 0, i32 1
  %14795 = getelementptr inbounds %struct.Reg, %struct.Reg* %14794, i32 0, i32 0
  %EAX.i25 = bitcast %union.anon* %14795 to i32*
  %14796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14797 = getelementptr inbounds %struct.GPR, %struct.GPR* %14796, i32 0, i32 15
  %14798 = getelementptr inbounds %struct.Reg, %struct.Reg* %14797, i32 0, i32 0
  %RBP.i26 = bitcast %union.anon* %14798 to i64*
  %14799 = load i64, i64* %RBP.i26
  %14800 = sub i64 %14799, 32
  %14801 = load i32, i32* %EAX.i25
  %14802 = zext i32 %14801 to i64
  %14803 = load i64, i64* %PC.i24
  %14804 = add i64 %14803, 3
  store i64 %14804, i64* %PC.i24
  %14805 = inttoptr i64 %14800 to i32*
  store i32 %14801, i32* %14805
  store %struct.Memory* %loadMem_4ae74b, %struct.Memory** %MEMORY
  %loadMem_4ae74e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14807 = getelementptr inbounds %struct.GPR, %struct.GPR* %14806, i32 0, i32 33
  %14808 = getelementptr inbounds %struct.Reg, %struct.Reg* %14807, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %14808 to i64*
  %14809 = load i64, i64* %PC.i23
  %14810 = add i64 %14809, -171
  %14811 = load i64, i64* %PC.i23
  %14812 = add i64 %14811, 5
  store i64 %14812, i64* %PC.i23
  %14813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14810, i64* %14813, align 8
  store %struct.Memory* %loadMem_4ae74e, %struct.Memory** %MEMORY
  br label %block_.L_4ae6a3

block_.L_4ae753:                                  ; preds = %block_.L_4ae6a3
  %loadMem_4ae753 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14815 = getelementptr inbounds %struct.GPR, %struct.GPR* %14814, i32 0, i32 33
  %14816 = getelementptr inbounds %struct.Reg, %struct.Reg* %14815, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %14816 to i64*
  %14817 = load i64, i64* %PC.i22
  %14818 = add i64 %14817, 5
  %14819 = load i64, i64* %PC.i22
  %14820 = add i64 %14819, 5
  store i64 %14820, i64* %PC.i22
  %14821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14818, i64* %14821, align 8
  store %struct.Memory* %loadMem_4ae753, %struct.Memory** %MEMORY
  br label %block_.L_4ae758

block_.L_4ae758:                                  ; preds = %block_.L_4ae753
  %loadMem_4ae758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14823 = getelementptr inbounds %struct.GPR, %struct.GPR* %14822, i32 0, i32 33
  %14824 = getelementptr inbounds %struct.Reg, %struct.Reg* %14823, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %14824 to i64*
  %14825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14826 = getelementptr inbounds %struct.GPR, %struct.GPR* %14825, i32 0, i32 1
  %14827 = getelementptr inbounds %struct.Reg, %struct.Reg* %14826, i32 0, i32 0
  %RAX.i20 = bitcast %union.anon* %14827 to i64*
  %14828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14829 = getelementptr inbounds %struct.GPR, %struct.GPR* %14828, i32 0, i32 15
  %14830 = getelementptr inbounds %struct.Reg, %struct.Reg* %14829, i32 0, i32 0
  %RBP.i21 = bitcast %union.anon* %14830 to i64*
  %14831 = load i64, i64* %RBP.i21
  %14832 = sub i64 %14831, 28
  %14833 = load i64, i64* %PC.i19
  %14834 = add i64 %14833, 3
  store i64 %14834, i64* %PC.i19
  %14835 = inttoptr i64 %14832 to i32*
  %14836 = load i32, i32* %14835
  %14837 = zext i32 %14836 to i64
  store i64 %14837, i64* %RAX.i20, align 8
  store %struct.Memory* %loadMem_4ae758, %struct.Memory** %MEMORY
  %loadMem_4ae75b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14839 = getelementptr inbounds %struct.GPR, %struct.GPR* %14838, i32 0, i32 33
  %14840 = getelementptr inbounds %struct.Reg, %struct.Reg* %14839, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %14840 to i64*
  %14841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14842 = getelementptr inbounds %struct.GPR, %struct.GPR* %14841, i32 0, i32 1
  %14843 = getelementptr inbounds %struct.Reg, %struct.Reg* %14842, i32 0, i32 0
  %RAX.i18 = bitcast %union.anon* %14843 to i64*
  %14844 = load i64, i64* %RAX.i18
  %14845 = load i64, i64* %PC.i17
  %14846 = add i64 %14845, 3
  store i64 %14846, i64* %PC.i17
  %14847 = trunc i64 %14844 to i32
  %14848 = add i32 1, %14847
  %14849 = zext i32 %14848 to i64
  store i64 %14849, i64* %RAX.i18, align 8
  %14850 = icmp ult i32 %14848, %14847
  %14851 = icmp ult i32 %14848, 1
  %14852 = or i1 %14850, %14851
  %14853 = zext i1 %14852 to i8
  %14854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14853, i8* %14854, align 1
  %14855 = and i32 %14848, 255
  %14856 = call i32 @llvm.ctpop.i32(i32 %14855)
  %14857 = trunc i32 %14856 to i8
  %14858 = and i8 %14857, 1
  %14859 = xor i8 %14858, 1
  %14860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14859, i8* %14860, align 1
  %14861 = xor i64 1, %14844
  %14862 = trunc i64 %14861 to i32
  %14863 = xor i32 %14862, %14848
  %14864 = lshr i32 %14863, 4
  %14865 = trunc i32 %14864 to i8
  %14866 = and i8 %14865, 1
  %14867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14866, i8* %14867, align 1
  %14868 = icmp eq i32 %14848, 0
  %14869 = zext i1 %14868 to i8
  %14870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14869, i8* %14870, align 1
  %14871 = lshr i32 %14848, 31
  %14872 = trunc i32 %14871 to i8
  %14873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14872, i8* %14873, align 1
  %14874 = lshr i32 %14847, 31
  %14875 = xor i32 %14871, %14874
  %14876 = add i32 %14875, %14871
  %14877 = icmp eq i32 %14876, 2
  %14878 = zext i1 %14877 to i8
  %14879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14878, i8* %14879, align 1
  store %struct.Memory* %loadMem_4ae75b, %struct.Memory** %MEMORY
  %loadMem_4ae75e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14881 = getelementptr inbounds %struct.GPR, %struct.GPR* %14880, i32 0, i32 33
  %14882 = getelementptr inbounds %struct.Reg, %struct.Reg* %14881, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %14882 to i64*
  %14883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14884 = getelementptr inbounds %struct.GPR, %struct.GPR* %14883, i32 0, i32 1
  %14885 = getelementptr inbounds %struct.Reg, %struct.Reg* %14884, i32 0, i32 0
  %EAX.i15 = bitcast %union.anon* %14885 to i32*
  %14886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14887 = getelementptr inbounds %struct.GPR, %struct.GPR* %14886, i32 0, i32 15
  %14888 = getelementptr inbounds %struct.Reg, %struct.Reg* %14887, i32 0, i32 0
  %RBP.i16 = bitcast %union.anon* %14888 to i64*
  %14889 = load i64, i64* %RBP.i16
  %14890 = sub i64 %14889, 28
  %14891 = load i32, i32* %EAX.i15
  %14892 = zext i32 %14891 to i64
  %14893 = load i64, i64* %PC.i14
  %14894 = add i64 %14893, 3
  store i64 %14894, i64* %PC.i14
  %14895 = inttoptr i64 %14890 to i32*
  store i32 %14891, i32* %14895
  store %struct.Memory* %loadMem_4ae75e, %struct.Memory** %MEMORY
  %loadMem_4ae761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14897 = getelementptr inbounds %struct.GPR, %struct.GPR* %14896, i32 0, i32 33
  %14898 = getelementptr inbounds %struct.Reg, %struct.Reg* %14897, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %14898 to i64*
  %14899 = load i64, i64* %PC.i13
  %14900 = add i64 %14899, -220
  %14901 = load i64, i64* %PC.i13
  %14902 = add i64 %14901, 5
  store i64 %14902, i64* %PC.i13
  %14903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14900, i64* %14903, align 8
  store %struct.Memory* %loadMem_4ae761, %struct.Memory** %MEMORY
  br label %block_.L_4ae685

block_.L_4ae766:                                  ; preds = %block_.L_4ae685
  %loadMem_4ae766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14905 = getelementptr inbounds %struct.GPR, %struct.GPR* %14904, i32 0, i32 33
  %14906 = getelementptr inbounds %struct.Reg, %struct.Reg* %14905, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %14906 to i64*
  %14907 = load i64, i64* %PC.i12
  %14908 = add i64 %14907, 5
  %14909 = load i64, i64* %PC.i12
  %14910 = add i64 %14909, 5
  store i64 %14910, i64* %PC.i12
  %14911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14908, i64* %14911, align 8
  store %struct.Memory* %loadMem_4ae766, %struct.Memory** %MEMORY
  br label %block_.L_4ae76b

block_.L_4ae76b:                                  ; preds = %block_.L_4ae766
  %loadMem_4ae76b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14913 = getelementptr inbounds %struct.GPR, %struct.GPR* %14912, i32 0, i32 33
  %14914 = getelementptr inbounds %struct.Reg, %struct.Reg* %14913, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %14914 to i64*
  %14915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14916 = getelementptr inbounds %struct.GPR, %struct.GPR* %14915, i32 0, i32 1
  %14917 = getelementptr inbounds %struct.Reg, %struct.Reg* %14916, i32 0, i32 0
  %RAX.i10 = bitcast %union.anon* %14917 to i64*
  %14918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14919 = getelementptr inbounds %struct.GPR, %struct.GPR* %14918, i32 0, i32 15
  %14920 = getelementptr inbounds %struct.Reg, %struct.Reg* %14919, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %14920 to i64*
  %14921 = load i64, i64* %RBP.i11
  %14922 = sub i64 %14921, 932
  %14923 = load i64, i64* %PC.i9
  %14924 = add i64 %14923, 6
  store i64 %14924, i64* %PC.i9
  %14925 = inttoptr i64 %14922 to i32*
  %14926 = load i32, i32* %14925
  %14927 = zext i32 %14926 to i64
  store i64 %14927, i64* %RAX.i10, align 8
  store %struct.Memory* %loadMem_4ae76b, %struct.Memory** %MEMORY
  %loadMem_4ae771 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14929 = getelementptr inbounds %struct.GPR, %struct.GPR* %14928, i32 0, i32 33
  %14930 = getelementptr inbounds %struct.Reg, %struct.Reg* %14929, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %14930 to i64*
  %14931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14932 = getelementptr inbounds %struct.GPR, %struct.GPR* %14931, i32 0, i32 1
  %14933 = getelementptr inbounds %struct.Reg, %struct.Reg* %14932, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %14933 to i64*
  %14934 = load i64, i64* %RAX.i
  %14935 = load i64, i64* %PC.i8
  %14936 = add i64 %14935, 3
  store i64 %14936, i64* %PC.i8
  %14937 = trunc i64 %14934 to i32
  %14938 = add i32 1, %14937
  %14939 = zext i32 %14938 to i64
  store i64 %14939, i64* %RAX.i, align 8
  %14940 = icmp ult i32 %14938, %14937
  %14941 = icmp ult i32 %14938, 1
  %14942 = or i1 %14940, %14941
  %14943 = zext i1 %14942 to i8
  %14944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14943, i8* %14944, align 1
  %14945 = and i32 %14938, 255
  %14946 = call i32 @llvm.ctpop.i32(i32 %14945)
  %14947 = trunc i32 %14946 to i8
  %14948 = and i8 %14947, 1
  %14949 = xor i8 %14948, 1
  %14950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14949, i8* %14950, align 1
  %14951 = xor i64 1, %14934
  %14952 = trunc i64 %14951 to i32
  %14953 = xor i32 %14952, %14938
  %14954 = lshr i32 %14953, 4
  %14955 = trunc i32 %14954 to i8
  %14956 = and i8 %14955, 1
  %14957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14956, i8* %14957, align 1
  %14958 = icmp eq i32 %14938, 0
  %14959 = zext i1 %14958 to i8
  %14960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14959, i8* %14960, align 1
  %14961 = lshr i32 %14938, 31
  %14962 = trunc i32 %14961 to i8
  %14963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14962, i8* %14963, align 1
  %14964 = lshr i32 %14937, 31
  %14965 = xor i32 %14961, %14964
  %14966 = add i32 %14965, %14961
  %14967 = icmp eq i32 %14966, 2
  %14968 = zext i1 %14967 to i8
  %14969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14968, i8* %14969, align 1
  store %struct.Memory* %loadMem_4ae771, %struct.Memory** %MEMORY
  %loadMem_4ae774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14971 = getelementptr inbounds %struct.GPR, %struct.GPR* %14970, i32 0, i32 33
  %14972 = getelementptr inbounds %struct.Reg, %struct.Reg* %14971, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %14972 to i64*
  %14973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14974 = getelementptr inbounds %struct.GPR, %struct.GPR* %14973, i32 0, i32 1
  %14975 = getelementptr inbounds %struct.Reg, %struct.Reg* %14974, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %14975 to i32*
  %14976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14977 = getelementptr inbounds %struct.GPR, %struct.GPR* %14976, i32 0, i32 15
  %14978 = getelementptr inbounds %struct.Reg, %struct.Reg* %14977, i32 0, i32 0
  %RBP.i7 = bitcast %union.anon* %14978 to i64*
  %14979 = load i64, i64* %RBP.i7
  %14980 = sub i64 %14979, 932
  %14981 = load i32, i32* %EAX.i
  %14982 = zext i32 %14981 to i64
  %14983 = load i64, i64* %PC.i6
  %14984 = add i64 %14983, 6
  store i64 %14984, i64* %PC.i6
  %14985 = inttoptr i64 %14980 to i32*
  store i32 %14981, i32* %14985
  store %struct.Memory* %loadMem_4ae774, %struct.Memory** %MEMORY
  %loadMem_4ae77a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14987 = getelementptr inbounds %struct.GPR, %struct.GPR* %14986, i32 0, i32 33
  %14988 = getelementptr inbounds %struct.Reg, %struct.Reg* %14987, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %14988 to i64*
  %14989 = load i64, i64* %PC.i5
  %14990 = add i64 %14989, -275
  %14991 = load i64, i64* %PC.i5
  %14992 = add i64 %14991, 5
  store i64 %14992, i64* %PC.i5
  %14993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14990, i64* %14993, align 8
  store %struct.Memory* %loadMem_4ae77a, %struct.Memory** %MEMORY
  br label %block_.L_4ae667

block_.L_4ae77f:                                  ; preds = %block_.L_4ae667
  %loadMem_4ae77f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14995 = getelementptr inbounds %struct.GPR, %struct.GPR* %14994, i32 0, i32 33
  %14996 = getelementptr inbounds %struct.Reg, %struct.Reg* %14995, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %14996 to i64*
  %14997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14998 = getelementptr inbounds %struct.GPR, %struct.GPR* %14997, i32 0, i32 13
  %14999 = getelementptr inbounds %struct.Reg, %struct.Reg* %14998, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %14999 to i64*
  %15000 = load i64, i64* %RSP.i
  %15001 = load i64, i64* %PC.i4
  %15002 = add i64 %15001, 7
  store i64 %15002, i64* %PC.i4
  %15003 = add i64 848, %15000
  store i64 %15003, i64* %RSP.i, align 8
  %15004 = icmp ult i64 %15003, %15000
  %15005 = icmp ult i64 %15003, 848
  %15006 = or i1 %15004, %15005
  %15007 = zext i1 %15006 to i8
  %15008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15007, i8* %15008, align 1
  %15009 = trunc i64 %15003 to i32
  %15010 = and i32 %15009, 255
  %15011 = call i32 @llvm.ctpop.i32(i32 %15010)
  %15012 = trunc i32 %15011 to i8
  %15013 = and i8 %15012, 1
  %15014 = xor i8 %15013, 1
  %15015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15014, i8* %15015, align 1
  %15016 = xor i64 848, %15000
  %15017 = xor i64 %15016, %15003
  %15018 = lshr i64 %15017, 4
  %15019 = trunc i64 %15018 to i8
  %15020 = and i8 %15019, 1
  %15021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15020, i8* %15021, align 1
  %15022 = icmp eq i64 %15003, 0
  %15023 = zext i1 %15022 to i8
  %15024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15023, i8* %15024, align 1
  %15025 = lshr i64 %15003, 63
  %15026 = trunc i64 %15025 to i8
  %15027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15026, i8* %15027, align 1
  %15028 = lshr i64 %15000, 63
  %15029 = xor i64 %15025, %15028
  %15030 = add i64 %15029, %15025
  %15031 = icmp eq i64 %15030, 2
  %15032 = zext i1 %15031 to i8
  %15033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15032, i8* %15033, align 1
  store %struct.Memory* %loadMem_4ae77f, %struct.Memory** %MEMORY
  %loadMem_4ae786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15035 = getelementptr inbounds %struct.GPR, %struct.GPR* %15034, i32 0, i32 33
  %15036 = getelementptr inbounds %struct.Reg, %struct.Reg* %15035, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %15036 to i64*
  %15037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15038 = getelementptr inbounds %struct.GPR, %struct.GPR* %15037, i32 0, i32 15
  %15039 = getelementptr inbounds %struct.Reg, %struct.Reg* %15038, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %15039 to i64*
  %15040 = load i64, i64* %PC.i2
  %15041 = add i64 %15040, 1
  store i64 %15041, i64* %PC.i2
  %15042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15043 = load i64, i64* %15042, align 8
  %15044 = add i64 %15043, 8
  %15045 = inttoptr i64 %15043 to i64*
  %15046 = load i64, i64* %15045
  store i64 %15046, i64* %RBP.i3, align 8
  store i64 %15044, i64* %15042, align 8
  store %struct.Memory* %loadMem_4ae786, %struct.Memory** %MEMORY
  %loadMem_4ae787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15048 = getelementptr inbounds %struct.GPR, %struct.GPR* %15047, i32 0, i32 33
  %15049 = getelementptr inbounds %struct.Reg, %struct.Reg* %15048, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %15049 to i64*
  %15050 = load i64, i64* %PC.i1
  %15051 = add i64 %15050, 1
  store i64 %15051, i64* %PC.i1
  %15052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15054 = load i64, i64* %15053, align 8
  %15055 = inttoptr i64 %15054 to i64*
  %15056 = load i64, i64* %15055
  store i64 %15056, i64* %15052, align 8
  %15057 = add i64 %15054, 8
  store i64 %15057, i64* %15053, align 8
  store %struct.Memory* %loadMem_4ae787, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_4ae787
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x350___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 848
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 848
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 848, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = getelementptr inbounds i8, i8* %12, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = xor i64 %21, %16
  %26 = xor i64 %24, %19
  %27 = trunc i64 %25 to i32
  %28 = lshr i64 %25, 32
  %29 = trunc i64 %28 to i32
  %30 = bitcast i8* %10 to i32*
  store i32 %27, i32* %30, align 1
  %31 = getelementptr inbounds i8, i8* %10, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 %29, i32* %32, align 1
  %33 = trunc i64 %26 to i32
  %34 = getelementptr inbounds i8, i8* %10, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  %36 = lshr i64 %26, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i8, i8* %10, i64 12
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 24
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11ad0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4adba4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3a8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 936
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3a8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 936
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__ecx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RSI, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x3ac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 940
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4adbb1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3ac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 940
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3ac__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 940
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x5__0x70f6d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 5, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x5__0x7242a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 5, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x70f6d0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x3b0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 944
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3b0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 944
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RAX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x7107a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7242a0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x710790(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x710790_type* @G_0x710790 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x70f6d0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7242a0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc0__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 2, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 2
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 2, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4add69(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x7247b0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = mul i64 %14, 4
  %16 = add i64 %15, 7489456
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %12, %20
  %22 = icmp ult i32 %12, %20
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %21, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %20, %12
  %32 = xor i32 %31, %21
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %21, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %21, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %12, 31
  %44 = lshr i32 %20, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4add56(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4add43(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x3a0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 928
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x230__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 560
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -188
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xb4___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 180, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 12, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -188
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4740___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f9728___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xb4___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 180, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 12, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4adc81(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4add48(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4adc66(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4add5b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4adc4b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x3c__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 60
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4adde5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x34__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 52
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4addd2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x278672__rip____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x278672__rip__type* @G_0x278672__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rax__rcx_2____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl__edx___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = sitofp i32 %12 to double
  %17 = bitcast i8* %11 to double*
  store double %16, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x18__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4add8b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4addd7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4add70(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x3a4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 932
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3a4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 932
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ae65d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x3a4__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 932
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ae644(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0xa0__rbp__rax_8_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %13 to %union.vec128_t*
  %14 = load i64, i64* %RBP
  %15 = load i64, i64* %RAX
  %16 = mul i64 %15, 8
  %17 = add i64 %14, -160
  %18 = add i64 %17, %16
  %19 = bitcast %union.vec128_t* %XMM0 to i8*
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = bitcast i8* %19 to double*
  %23 = load double, double* %22, align 1
  %24 = inttoptr i64 %18 to double*
  store double %23, double* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x3a4__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 932
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722b20___rax_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 8
  %11 = add i64 %10, 7482144
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1920__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6432
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1928__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6440
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3c__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x34__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RDX, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4adede(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0xa0__rbp__rax_8____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 8
  %19 = add i64 %16, -160
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 9
  store i64 %22, i64* %PC
  %23 = bitcast i8* %15 to double*
  %24 = load double, double* %23, align 1
  %25 = getelementptr inbounds i8, i8* %15, i64 8
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 1
  %28 = inttoptr i64 %20 to double*
  %29 = load double, double* %28
  %30 = fadd double %24, %29
  %31 = bitcast i8* %14 to double*
  store double %30, double* %31, align 1
  %32 = getelementptr inbounds i8, i8* %14, i64 8
  %33 = bitcast i8* %32 to i64*
  store i64 %27, i64* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ade85(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_MINUS0x4__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to double*
  %15 = load double, double* %14, align 1
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = fcmp uno double %15, %17
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %block_400488
  %20 = fadd double %15, %17
  %21 = bitcast double %20 to i64
  %22 = and i64 %21, 9221120237041090560
  %23 = icmp eq i64 %22, 9218868437227405312
  %24 = and i64 %21, 2251799813685247
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = fcmp ogt double %15, %17
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %31
  %34 = fcmp olt double %15, %17
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp oeq double %15, %17
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %35, %33, %31, %19
  %38 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 1, %35 ], [ 1, %19 ]
  %39 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 1, %19 ]
  %40 = phi i8 [ 0, %31 ], [ 1, %33 ], [ 0, %35 ], [ 1, %19 ]
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %43, align 1
  br label %44

; <label>:44:                                     ; preds = %37, %35
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %27, %44
  %48 = phi %struct.Memory* [ %30, %27 ], [ %2, %44 ]
  ret %struct.Memory* %48
}

define %struct.Memory* @routine_jne_.L_4ae022(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jp_.L_4ae022(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xa0__rbp__rax_8____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 8
  %18 = add i64 %15, -160
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to double*
  %23 = load double, double* %22
  %24 = bitcast i8* %14 to double*
  store double %23, double* %24, align 1
  %25 = getelementptr inbounds i8, i8* %14, i64 8
  %26 = bitcast i8* %25 to double*
  store double 0.000000e+00, double* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4adf1b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jp_.L_4adf1b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4adf6f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x230__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 560
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x395e__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x395e__rip__type* @G_0x395e__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_MINUS0xbc__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd_MINUS0x18__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fmul double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd_MINUS0xa0__rbp__rcx_8____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 8
  %19 = add i64 %16, -160
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 9
  store i64 %22, i64* %PC
  %23 = bitcast i8* %15 to double*
  %24 = load double, double* %23, align 1
  %25 = getelementptr inbounds i8, i8* %15, i64 8
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 1
  %28 = inttoptr i64 %20 to double*
  %29 = load double, double* %28
  %30 = fdiv double %24, %29
  %31 = bitcast i8* %14 to double*
  store double %30, double* %31, align 1
  %32 = getelementptr inbounds i8, i8* %14, i64 8
  %33 = bitcast i8* %32 to i64*
  store i64 %27, i64* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to double*
  %15 = load double, double* %14, align 1
  %16 = call double @llvm.trunc.f64(double %15)
  %17 = call double @llvm.fabs.f64(double %16)
  %18 = fcmp ogt double %17, 0x41DFFFFFFFC00000
  %19 = fptosi double %16 to i32
  %20 = zext i32 %19 to i64
  %21 = select i1 %18, i64 2147483648, i64 %20
  store i64 %21, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4adf9a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x3a4__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 932
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffc0____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, -64
  %15 = icmp ult i32 %13, -64
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, -64
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %36, 1
  %38 = xor i32 %33, %36
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_4adff2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x7f____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 127
  %15 = icmp ult i32 %13, 127
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 127
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4ae01d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae189(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x3857__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x3857__rip__type* @G_0x3857__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x18__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_MINUS0xa0__rbp__rcx_8____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 8
  %19 = add i64 %16, -160
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 9
  store i64 %22, i64* %PC
  %23 = bitcast i8* %15 to double*
  %24 = load double, double* %23, align 1
  %25 = getelementptr inbounds i8, i8* %15, i64 8
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 1
  %28 = inttoptr i64 %20 to double*
  %29 = load double, double* %28
  %30 = fsub double %24, %29
  %31 = bitcast i8* %14 to double*
  store double %30, double* %31, align 1
  %32 = getelementptr inbounds i8, i8* %14, i64 8
  %33 = bitcast i8* %32 to i64*
  store i64 %27, i64* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl__edx___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = sitofp i32 %12 to double
  %17 = bitcast i8* %11 to double*
  store double %16, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffff80____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, -128
  %15 = icmp ult i32 %13, -128
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, -128
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %36, 1
  %38 = xor i32 %33, %36
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ae0c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffff80___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294967168, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3b4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 948
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae133(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4ae0fc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x7f___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 127, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3b8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 952
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae127(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x3b8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 952
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3b8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 952
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3b4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 948
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x3a0__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 928
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x3a4__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 932
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xb4___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 180, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 12, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x4__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 4
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ae3bf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xa8__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rcx____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = shl i64 %12, 32
  %19 = ashr exact i64 %18, 32
  %20 = sext i32 %17 to i64
  %21 = mul i64 %20, %19
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RDI, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x7107a0___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RDI, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__cl___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 11
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDI = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDI
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %22 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = shl i64 %13, 32
  %21 = ashr i64 %20, 33
  br label %29

; <label>:22:                                     ; preds = %block_400488
  %23 = and i64 %15, 31
  %24 = add i64 %23, -1
  %25 = shl i64 %13, 32
  %26 = ashr exact i64 %25, 32
  %27 = ashr i64 %26, %24
  %28 = lshr i64 %27, 1
  br label %29

; <label>:29:                                     ; preds = %22, %19
  %30 = phi i64 [ %28, %22 ], [ %21, %19 ]
  %31 = phi i64 [ %27, %22 ], [ %13, %19 ]
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = trunc i64 %30 to i32
  %35 = and i64 %30, 4294967295
  store i64 %35, i64* %RDI, align 8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %38 = and i32 %34, 255
  %39 = call i32 @llvm.ctpop.i32(i32 %38)
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = xor i8 %41, 1
  store i8 %42, i8* %37, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %45 = icmp eq i32 %34, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %44, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %48 = lshr i32 %34, 31
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %47, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %29
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rax____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = add i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RDI, align 8
  %21 = icmp ult i32 %19, %16
  %22 = icmp ult i32 %19, %18
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %18, %16
  %33 = xor i32 %32, %19
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %19, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %19, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %16, 31
  %45 = lshr i32 %18, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ae286(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3bc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 956
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae399(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x11bec__rax____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 72684
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4ae31d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x3c0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 960
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae38d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x3c0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 960
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 960
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3bc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 956
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___cx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %CX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xb0__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__cx____rdx__rsi_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %CX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae1e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x8___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 8, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 8
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 8, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x2___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 1
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ae631(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x34__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ae61e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722b20___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1930__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 6448
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ae49d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3c4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 964
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae5e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4ae54c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x3c8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 968
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae5d4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x3c8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 968
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 968
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 964
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1938__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 6456
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae3e9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae623(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae3c6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae636(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ade0d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae649(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3a4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 932
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4addef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ae77f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ae766(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ae753(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f9728___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae6a3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae758(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae685(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae76b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae667(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x350___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 848, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 848
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 848, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
