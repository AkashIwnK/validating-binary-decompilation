; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_44a390.get_mb_pos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @getAffNeighbour(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_44a6e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_44a6e0, %struct.Memory** %MEMORY
  %loadMem_44a6e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i17 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i18 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i17
  %27 = load i64, i64* %PC.i16
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i16
  store i64 %26, i64* %RBP.i18, align 8
  store %struct.Memory* %loadMem_44a6e1, %struct.Memory** %MEMORY
  %loadMem_44a6e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i34 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i34
  %36 = load i64, i64* %PC.i33
  %37 = add i64 %36, 4
  store i64 %37, i64* %PC.i33
  %38 = sub i64 %35, 96
  store i64 %38, i64* %RSP.i34, align 8
  %39 = icmp ult i64 %35, 96
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 96, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_44a6e4, %struct.Memory** %MEMORY
  %loadMem_44a6e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 11
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %EDI.i66 = bitcast %union.anon* %72 to i32*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i67 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i67
  %77 = sub i64 %76, 4
  %78 = load i32, i32* %EDI.i66
  %79 = zext i32 %78 to i64
  %80 = load i64, i64* %PC.i65
  %81 = add i64 %80, 3
  store i64 %81, i64* %PC.i65
  %82 = inttoptr i64 %77 to i32*
  store i32 %78, i32* %82
  store %struct.Memory* %loadMem_44a6e8, %struct.Memory** %MEMORY
  %loadMem_44a6eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 33
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %PC.i80 = bitcast %union.anon* %85 to i64*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %87 = getelementptr inbounds %struct.GPR, %struct.GPR* %86, i32 0, i32 9
  %88 = getelementptr inbounds %struct.Reg, %struct.Reg* %87, i32 0, i32 0
  %ESI.i81 = bitcast %union.anon* %88 to i32*
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %90 = getelementptr inbounds %struct.GPR, %struct.GPR* %89, i32 0, i32 15
  %91 = getelementptr inbounds %struct.Reg, %struct.Reg* %90, i32 0, i32 0
  %RBP.i82 = bitcast %union.anon* %91 to i64*
  %92 = load i64, i64* %RBP.i82
  %93 = sub i64 %92, 8
  %94 = load i32, i32* %ESI.i81
  %95 = zext i32 %94 to i64
  %96 = load i64, i64* %PC.i80
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC.i80
  %98 = inttoptr i64 %93 to i32*
  store i32 %94, i32* %98
  store %struct.Memory* %loadMem_44a6eb, %struct.Memory** %MEMORY
  %loadMem_44a6ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 33
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %101 to i64*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 7
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %EDX.i166 = bitcast %union.anon* %104 to i32*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 15
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %RBP.i167 = bitcast %union.anon* %107 to i64*
  %108 = load i64, i64* %RBP.i167
  %109 = sub i64 %108, 12
  %110 = load i32, i32* %EDX.i166
  %111 = zext i32 %110 to i64
  %112 = load i64, i64* %PC.i165
  %113 = add i64 %112, 3
  store i64 %113, i64* %PC.i165
  %114 = inttoptr i64 %109 to i32*
  store i32 %110, i32* %114
  store %struct.Memory* %loadMem_44a6ee, %struct.Memory** %MEMORY
  %loadMem_44a6f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %116 = getelementptr inbounds %struct.GPR, %struct.GPR* %115, i32 0, i32 33
  %117 = getelementptr inbounds %struct.Reg, %struct.Reg* %116, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %117 to i64*
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %119 = getelementptr inbounds %struct.GPR, %struct.GPR* %118, i32 0, i32 5
  %120 = getelementptr inbounds %struct.Reg, %struct.Reg* %119, i32 0, i32 0
  %ECX.i187 = bitcast %union.anon* %120 to i32*
  %121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %122 = getelementptr inbounds %struct.GPR, %struct.GPR* %121, i32 0, i32 15
  %123 = getelementptr inbounds %struct.Reg, %struct.Reg* %122, i32 0, i32 0
  %RBP.i188 = bitcast %union.anon* %123 to i64*
  %124 = load i64, i64* %RBP.i188
  %125 = sub i64 %124, 16
  %126 = load i32, i32* %ECX.i187
  %127 = zext i32 %126 to i64
  %128 = load i64, i64* %PC.i186
  %129 = add i64 %128, 3
  store i64 %129, i64* %PC.i186
  %130 = inttoptr i64 %125 to i32*
  store i32 %126, i32* %130
  store %struct.Memory* %loadMem_44a6f1, %struct.Memory** %MEMORY
  %loadMem_44a6f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %132 = getelementptr inbounds %struct.GPR, %struct.GPR* %131, i32 0, i32 33
  %133 = getelementptr inbounds %struct.Reg, %struct.Reg* %132, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %133 to i64*
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 15
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %RBP.i755 = bitcast %union.anon* %136 to i64*
  %137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %138 = getelementptr inbounds %struct.GPR, %struct.GPR* %137, i32 0, i32 17
  %139 = getelementptr inbounds %struct.Reg, %struct.Reg* %138, i32 0, i32 0
  %R8.i = bitcast %union.anon* %139 to i64*
  %140 = load i64, i64* %RBP.i755
  %141 = sub i64 %140, 24
  %142 = load i64, i64* %R8.i
  %143 = load i64, i64* %PC.i754
  %144 = add i64 %143, 4
  store i64 %144, i64* %PC.i754
  %145 = inttoptr i64 %141 to i64*
  store i64 %142, i64* %145
  store %struct.Memory* %loadMem_44a6f4, %struct.Memory** %MEMORY
  %loadMem_44a6f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %147 = getelementptr inbounds %struct.GPR, %struct.GPR* %146, i32 0, i32 33
  %148 = getelementptr inbounds %struct.Reg, %struct.Reg* %147, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %148 to i64*
  %149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %150 = getelementptr inbounds %struct.GPR, %struct.GPR* %149, i32 0, i32 17
  %151 = getelementptr inbounds %struct.Reg, %struct.Reg* %150, i32 0, i32 0
  %R8.i869 = bitcast %union.anon* %151 to i64*
  %152 = load i64, i64* %PC.i868
  %153 = add i64 %152, 8
  store i64 %153, i64* %PC.i868
  %154 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %154, i64* %R8.i869, align 8
  store %struct.Memory* %loadMem_44a6f8, %struct.Memory** %MEMORY
  %loadMem_44a700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %156 = getelementptr inbounds %struct.GPR, %struct.GPR* %155, i32 0, i32 33
  %157 = getelementptr inbounds %struct.Reg, %struct.Reg* %156, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %157 to i64*
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %159 = getelementptr inbounds %struct.GPR, %struct.GPR* %158, i32 0, i32 17
  %160 = getelementptr inbounds %struct.Reg, %struct.Reg* %159, i32 0, i32 0
  %R8.i987 = bitcast %union.anon* %160 to i64*
  %161 = load i64, i64* %R8.i987
  %162 = add i64 %161, 14168
  %163 = load i64, i64* %PC.i986
  %164 = add i64 %163, 7
  store i64 %164, i64* %PC.i986
  %165 = inttoptr i64 %162 to i64*
  %166 = load i64, i64* %165
  store i64 %166, i64* %R8.i987, align 8
  store %struct.Memory* %loadMem_44a700, %struct.Memory** %MEMORY
  %loadMem_44a707 = load %struct.Memory*, %struct.Memory** %MEMORY
  %167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %168 = getelementptr inbounds %struct.GPR, %struct.GPR* %167, i32 0, i32 33
  %169 = getelementptr inbounds %struct.Reg, %struct.Reg* %168, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %169 to i64*
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %171 = getelementptr inbounds %struct.GPR, %struct.GPR* %170, i32 0, i32 5
  %172 = getelementptr inbounds %struct.Reg, %struct.Reg* %171, i32 0, i32 0
  %RCX.i1106 = bitcast %union.anon* %172 to i64*
  %173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %174 = getelementptr inbounds %struct.GPR, %struct.GPR* %173, i32 0, i32 15
  %175 = getelementptr inbounds %struct.Reg, %struct.Reg* %174, i32 0, i32 0
  %RBP.i1107 = bitcast %union.anon* %175 to i64*
  %176 = load i64, i64* %RBP.i1107
  %177 = sub i64 %176, 4
  %178 = load i64, i64* %PC.i1105
  %179 = add i64 %178, 3
  store i64 %179, i64* %PC.i1105
  %180 = inttoptr i64 %177 to i32*
  %181 = load i32, i32* %180
  %182 = zext i32 %181 to i64
  store i64 %182, i64* %RCX.i1106, align 8
  store %struct.Memory* %loadMem_44a707, %struct.Memory** %MEMORY
  %loadMem_44a70a = load %struct.Memory*, %struct.Memory** %MEMORY
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 33
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %PC.i1525 = bitcast %union.anon* %185 to i64*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 5
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %ECX.i1526 = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX.i1527 = bitcast %union.anon* %191 to i64*
  %192 = load i32, i32* %ECX.i1526
  %193 = zext i32 %192 to i64
  %194 = load i64, i64* %PC.i1525
  %195 = add i64 %194, 2
  store i64 %195, i64* %PC.i1525
  %196 = and i64 %193, 4294967295
  store i64 %196, i64* %RAX.i1527, align 8
  store %struct.Memory* %loadMem_44a70a, %struct.Memory** %MEMORY
  %loadMem_44a70c = load %struct.Memory*, %struct.Memory** %MEMORY
  %197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %198 = getelementptr inbounds %struct.GPR, %struct.GPR* %197, i32 0, i32 33
  %199 = getelementptr inbounds %struct.Reg, %struct.Reg* %198, i32 0, i32 0
  %PC.i1523 = bitcast %union.anon* %199 to i64*
  %200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %201 = getelementptr inbounds %struct.GPR, %struct.GPR* %200, i32 0, i32 1
  %202 = getelementptr inbounds %struct.Reg, %struct.Reg* %201, i32 0, i32 0
  %RAX.i1524 = bitcast %union.anon* %202 to i64*
  %203 = load i64, i64* %RAX.i1524
  %204 = load i64, i64* %PC.i1523
  %205 = add i64 %204, 7
  store i64 %205, i64* %PC.i1523
  %206 = sext i64 %203 to i128
  %207 = and i128 %206, -18446744073709551616
  %208 = zext i64 %203 to i128
  %209 = or i128 %207, %208
  %210 = mul i128 632, %209
  %211 = trunc i128 %210 to i64
  store i64 %211, i64* %RAX.i1524, align 8
  %212 = sext i64 %211 to i128
  %213 = icmp ne i128 %212, %210
  %214 = zext i1 %213 to i8
  %215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %214, i8* %215, align 1
  %216 = trunc i128 %210 to i32
  %217 = and i32 %216, 255
  %218 = call i32 @llvm.ctpop.i32(i32 %217)
  %219 = trunc i32 %218 to i8
  %220 = and i8 %219, 1
  %221 = xor i8 %220, 1
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %221, i8* %222, align 1
  %223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %223, align 1
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %224, align 1
  %225 = lshr i64 %211, 63
  %226 = trunc i64 %225 to i8
  %227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %226, i8* %227, align 1
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %214, i8* %228, align 1
  store %struct.Memory* %loadMem_44a70c, %struct.Memory** %MEMORY
  %loadMem_44a713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %230 = getelementptr inbounds %struct.GPR, %struct.GPR* %229, i32 0, i32 33
  %231 = getelementptr inbounds %struct.Reg, %struct.Reg* %230, i32 0, i32 0
  %PC.i1520 = bitcast %union.anon* %231 to i64*
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %233 = getelementptr inbounds %struct.GPR, %struct.GPR* %232, i32 0, i32 1
  %234 = getelementptr inbounds %struct.Reg, %struct.Reg* %233, i32 0, i32 0
  %RAX.i1521 = bitcast %union.anon* %234 to i64*
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %236 = getelementptr inbounds %struct.GPR, %struct.GPR* %235, i32 0, i32 17
  %237 = getelementptr inbounds %struct.Reg, %struct.Reg* %236, i32 0, i32 0
  %R8.i1522 = bitcast %union.anon* %237 to i64*
  %238 = load i64, i64* %R8.i1522
  %239 = load i64, i64* %RAX.i1521
  %240 = load i64, i64* %PC.i1520
  %241 = add i64 %240, 3
  store i64 %241, i64* %PC.i1520
  %242 = add i64 %239, %238
  store i64 %242, i64* %R8.i1522, align 8
  %243 = icmp ult i64 %242, %238
  %244 = icmp ult i64 %242, %239
  %245 = or i1 %243, %244
  %246 = zext i1 %245 to i8
  %247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %246, i8* %247, align 1
  %248 = trunc i64 %242 to i32
  %249 = and i32 %248, 255
  %250 = call i32 @llvm.ctpop.i32(i32 %249)
  %251 = trunc i32 %250 to i8
  %252 = and i8 %251, 1
  %253 = xor i8 %252, 1
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %253, i8* %254, align 1
  %255 = xor i64 %239, %238
  %256 = xor i64 %255, %242
  %257 = lshr i64 %256, 4
  %258 = trunc i64 %257 to i8
  %259 = and i8 %258, 1
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %259, i8* %260, align 1
  %261 = icmp eq i64 %242, 0
  %262 = zext i1 %261 to i8
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %262, i8* %263, align 1
  %264 = lshr i64 %242, 63
  %265 = trunc i64 %264 to i8
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %265, i8* %266, align 1
  %267 = lshr i64 %238, 63
  %268 = lshr i64 %239, 63
  %269 = xor i64 %264, %267
  %270 = xor i64 %264, %268
  %271 = add i64 %269, %270
  %272 = icmp eq i64 %271, 2
  %273 = zext i1 %272 to i8
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %273, i8* %274, align 1
  store %struct.Memory* %loadMem_44a713, %struct.Memory** %MEMORY
  %loadMem_44a716 = load %struct.Memory*, %struct.Memory** %MEMORY
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %276 = getelementptr inbounds %struct.GPR, %struct.GPR* %275, i32 0, i32 33
  %277 = getelementptr inbounds %struct.Reg, %struct.Reg* %276, i32 0, i32 0
  %PC.i1517 = bitcast %union.anon* %277 to i64*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %279 = getelementptr inbounds %struct.GPR, %struct.GPR* %278, i32 0, i32 15
  %280 = getelementptr inbounds %struct.Reg, %struct.Reg* %279, i32 0, i32 0
  %RBP.i1518 = bitcast %union.anon* %280 to i64*
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %282 = getelementptr inbounds %struct.GPR, %struct.GPR* %281, i32 0, i32 17
  %283 = getelementptr inbounds %struct.Reg, %struct.Reg* %282, i32 0, i32 0
  %R8.i1519 = bitcast %union.anon* %283 to i64*
  %284 = load i64, i64* %RBP.i1518
  %285 = sub i64 %284, 32
  %286 = load i64, i64* %R8.i1519
  %287 = load i64, i64* %PC.i1517
  %288 = add i64 %287, 4
  store i64 %288, i64* %PC.i1517
  %289 = inttoptr i64 %285 to i64*
  store i64 %286, i64* %289
  store %struct.Memory* %loadMem_44a716, %struct.Memory** %MEMORY
  %loadMem_44a71a = load %struct.Memory*, %struct.Memory** %MEMORY
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %291 = getelementptr inbounds %struct.GPR, %struct.GPR* %290, i32 0, i32 33
  %292 = getelementptr inbounds %struct.Reg, %struct.Reg* %291, i32 0, i32 0
  %PC.i1515 = bitcast %union.anon* %292 to i64*
  %293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %294 = getelementptr inbounds %struct.GPR, %struct.GPR* %293, i32 0, i32 15
  %295 = getelementptr inbounds %struct.Reg, %struct.Reg* %294, i32 0, i32 0
  %RBP.i1516 = bitcast %union.anon* %295 to i64*
  %296 = load i64, i64* %RBP.i1516
  %297 = sub i64 %296, 44
  %298 = load i64, i64* %PC.i1515
  %299 = add i64 %298, 7
  store i64 %299, i64* %PC.i1515
  %300 = inttoptr i64 %297 to i32*
  store i32 -1, i32* %300
  store %struct.Memory* %loadMem_44a71a, %struct.Memory** %MEMORY
  %loadMem_44a721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %302 = getelementptr inbounds %struct.GPR, %struct.GPR* %301, i32 0, i32 33
  %303 = getelementptr inbounds %struct.Reg, %struct.Reg* %302, i32 0, i32 0
  %PC.i1513 = bitcast %union.anon* %303 to i64*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %305 = getelementptr inbounds %struct.GPR, %struct.GPR* %304, i32 0, i32 15
  %306 = getelementptr inbounds %struct.Reg, %struct.Reg* %305, i32 0, i32 0
  %RBP.i1514 = bitcast %union.anon* %306 to i64*
  %307 = load i64, i64* %RBP.i1514
  %308 = sub i64 %307, 16
  %309 = load i64, i64* %PC.i1513
  %310 = add i64 %309, 4
  store i64 %310, i64* %PC.i1513
  %311 = inttoptr i64 %308 to i32*
  %312 = load i32, i32* %311
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %313, align 1
  %314 = and i32 %312, 255
  %315 = call i32 @llvm.ctpop.i32(i32 %314)
  %316 = trunc i32 %315 to i8
  %317 = and i8 %316, 1
  %318 = xor i8 %317, 1
  %319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %318, i8* %319, align 1
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %320, align 1
  %321 = icmp eq i32 %312, 0
  %322 = zext i1 %321 to i8
  %323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %322, i8* %323, align 1
  %324 = lshr i32 %312, 31
  %325 = trunc i32 %324 to i8
  %326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %325, i8* %326, align 1
  %327 = lshr i32 %312, 31
  %328 = xor i32 %324, %327
  %329 = add i32 %328, %327
  %330 = icmp eq i32 %329, 2
  %331 = zext i1 %330 to i8
  %332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %331, i8* %332, align 1
  store %struct.Memory* %loadMem_44a721, %struct.Memory** %MEMORY
  %loadMem_44a725 = load %struct.Memory*, %struct.Memory** %MEMORY
  %333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %334 = getelementptr inbounds %struct.GPR, %struct.GPR* %333, i32 0, i32 33
  %335 = getelementptr inbounds %struct.Reg, %struct.Reg* %334, i32 0, i32 0
  %PC.i1512 = bitcast %union.anon* %335 to i64*
  %336 = load i64, i64* %PC.i1512
  %337 = add i64 %336, 25
  %338 = load i64, i64* %PC.i1512
  %339 = add i64 %338, 6
  %340 = load i64, i64* %PC.i1512
  %341 = add i64 %340, 6
  store i64 %341, i64* %PC.i1512
  %342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %343 = load i8, i8* %342, align 1
  store i8 %343, i8* %BRANCH_TAKEN, align 1
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %345 = icmp ne i8 %343, 0
  %346 = select i1 %345, i64 %337, i64 %339
  store i64 %346, i64* %344, align 8
  store %struct.Memory* %loadMem_44a725, %struct.Memory** %MEMORY
  %loadBr_44a725 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a725 = icmp eq i8 %loadBr_44a725, 1
  br i1 %cmpBr_44a725, label %block_.L_44a73e, label %block_44a72b

block_44a72b:                                     ; preds = %entry
  %loadMem_44a72b = load %struct.Memory*, %struct.Memory** %MEMORY
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %348 = getelementptr inbounds %struct.GPR, %struct.GPR* %347, i32 0, i32 33
  %349 = getelementptr inbounds %struct.Reg, %struct.Reg* %348, i32 0, i32 0
  %PC.i1510 = bitcast %union.anon* %349 to i64*
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %351 = getelementptr inbounds %struct.GPR, %struct.GPR* %350, i32 0, i32 15
  %352 = getelementptr inbounds %struct.Reg, %struct.Reg* %351, i32 0, i32 0
  %RBP.i1511 = bitcast %union.anon* %352 to i64*
  %353 = load i64, i64* %RBP.i1511
  %354 = sub i64 %353, 36
  %355 = load i64, i64* %PC.i1510
  %356 = add i64 %355, 7
  store i64 %356, i64* %PC.i1510
  %357 = inttoptr i64 %354 to i32*
  store i32 16, i32* %357
  store %struct.Memory* %loadMem_44a72b, %struct.Memory** %MEMORY
  %loadMem_44a732 = load %struct.Memory*, %struct.Memory** %MEMORY
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %359 = getelementptr inbounds %struct.GPR, %struct.GPR* %358, i32 0, i32 33
  %360 = getelementptr inbounds %struct.Reg, %struct.Reg* %359, i32 0, i32 0
  %PC.i1508 = bitcast %union.anon* %360 to i64*
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %362 = getelementptr inbounds %struct.GPR, %struct.GPR* %361, i32 0, i32 15
  %363 = getelementptr inbounds %struct.Reg, %struct.Reg* %362, i32 0, i32 0
  %RBP.i1509 = bitcast %union.anon* %363 to i64*
  %364 = load i64, i64* %RBP.i1509
  %365 = sub i64 %364, 40
  %366 = load i64, i64* %PC.i1508
  %367 = add i64 %366, 7
  store i64 %367, i64* %PC.i1508
  %368 = inttoptr i64 %365 to i32*
  store i32 16, i32* %368
  store %struct.Memory* %loadMem_44a732, %struct.Memory** %MEMORY
  %loadMem_44a739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %370 = getelementptr inbounds %struct.GPR, %struct.GPR* %369, i32 0, i32 33
  %371 = getelementptr inbounds %struct.Reg, %struct.Reg* %370, i32 0, i32 0
  %PC.i1507 = bitcast %union.anon* %371 to i64*
  %372 = load i64, i64* %PC.i1507
  %373 = add i64 %372, 39
  %374 = load i64, i64* %PC.i1507
  %375 = add i64 %374, 5
  store i64 %375, i64* %PC.i1507
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %373, i64* %376, align 8
  store %struct.Memory* %loadMem_44a739, %struct.Memory** %MEMORY
  br label %block_.L_44a760

block_.L_44a73e:                                  ; preds = %entry
  %loadMem_44a73e = load %struct.Memory*, %struct.Memory** %MEMORY
  %377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %378 = getelementptr inbounds %struct.GPR, %struct.GPR* %377, i32 0, i32 33
  %379 = getelementptr inbounds %struct.Reg, %struct.Reg* %378, i32 0, i32 0
  %PC.i1505 = bitcast %union.anon* %379 to i64*
  %380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %381 = getelementptr inbounds %struct.GPR, %struct.GPR* %380, i32 0, i32 1
  %382 = getelementptr inbounds %struct.Reg, %struct.Reg* %381, i32 0, i32 0
  %RAX.i1506 = bitcast %union.anon* %382 to i64*
  %383 = load i64, i64* %PC.i1505
  %384 = add i64 %383, 8
  store i64 %384, i64* %PC.i1505
  %385 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %385, i64* %RAX.i1506, align 8
  store %struct.Memory* %loadMem_44a73e, %struct.Memory** %MEMORY
  %loadMem_44a746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %387 = getelementptr inbounds %struct.GPR, %struct.GPR* %386, i32 0, i32 33
  %388 = getelementptr inbounds %struct.Reg, %struct.Reg* %387, i32 0, i32 0
  %PC.i1502 = bitcast %union.anon* %388 to i64*
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %390 = getelementptr inbounds %struct.GPR, %struct.GPR* %389, i32 0, i32 1
  %391 = getelementptr inbounds %struct.Reg, %struct.Reg* %390, i32 0, i32 0
  %RAX.i1503 = bitcast %union.anon* %391 to i64*
  %392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %393 = getelementptr inbounds %struct.GPR, %struct.GPR* %392, i32 0, i32 5
  %394 = getelementptr inbounds %struct.Reg, %struct.Reg* %393, i32 0, i32 0
  %RCX.i1504 = bitcast %union.anon* %394 to i64*
  %395 = load i64, i64* %RAX.i1503
  %396 = add i64 %395, 72708
  %397 = load i64, i64* %PC.i1502
  %398 = add i64 %397, 6
  store i64 %398, i64* %PC.i1502
  %399 = inttoptr i64 %396 to i32*
  %400 = load i32, i32* %399
  %401 = zext i32 %400 to i64
  store i64 %401, i64* %RCX.i1504, align 8
  store %struct.Memory* %loadMem_44a746, %struct.Memory** %MEMORY
  %loadMem_44a74c = load %struct.Memory*, %struct.Memory** %MEMORY
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %403 = getelementptr inbounds %struct.GPR, %struct.GPR* %402, i32 0, i32 33
  %404 = getelementptr inbounds %struct.Reg, %struct.Reg* %403, i32 0, i32 0
  %PC.i1499 = bitcast %union.anon* %404 to i64*
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %406 = getelementptr inbounds %struct.GPR, %struct.GPR* %405, i32 0, i32 5
  %407 = getelementptr inbounds %struct.Reg, %struct.Reg* %406, i32 0, i32 0
  %ECX.i1500 = bitcast %union.anon* %407 to i32*
  %408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %409 = getelementptr inbounds %struct.GPR, %struct.GPR* %408, i32 0, i32 15
  %410 = getelementptr inbounds %struct.Reg, %struct.Reg* %409, i32 0, i32 0
  %RBP.i1501 = bitcast %union.anon* %410 to i64*
  %411 = load i64, i64* %RBP.i1501
  %412 = sub i64 %411, 36
  %413 = load i32, i32* %ECX.i1500
  %414 = zext i32 %413 to i64
  %415 = load i64, i64* %PC.i1499
  %416 = add i64 %415, 3
  store i64 %416, i64* %PC.i1499
  %417 = inttoptr i64 %412 to i32*
  store i32 %413, i32* %417
  store %struct.Memory* %loadMem_44a74c, %struct.Memory** %MEMORY
  %loadMem_44a74f = load %struct.Memory*, %struct.Memory** %MEMORY
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %419 = getelementptr inbounds %struct.GPR, %struct.GPR* %418, i32 0, i32 33
  %420 = getelementptr inbounds %struct.Reg, %struct.Reg* %419, i32 0, i32 0
  %PC.i1497 = bitcast %union.anon* %420 to i64*
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %422 = getelementptr inbounds %struct.GPR, %struct.GPR* %421, i32 0, i32 1
  %423 = getelementptr inbounds %struct.Reg, %struct.Reg* %422, i32 0, i32 0
  %RAX.i1498 = bitcast %union.anon* %423 to i64*
  %424 = load i64, i64* %PC.i1497
  %425 = add i64 %424, 8
  store i64 %425, i64* %PC.i1497
  %426 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %426, i64* %RAX.i1498, align 8
  store %struct.Memory* %loadMem_44a74f, %struct.Memory** %MEMORY
  %loadMem_44a757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %428 = getelementptr inbounds %struct.GPR, %struct.GPR* %427, i32 0, i32 33
  %429 = getelementptr inbounds %struct.Reg, %struct.Reg* %428, i32 0, i32 0
  %PC.i1494 = bitcast %union.anon* %429 to i64*
  %430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %431 = getelementptr inbounds %struct.GPR, %struct.GPR* %430, i32 0, i32 1
  %432 = getelementptr inbounds %struct.Reg, %struct.Reg* %431, i32 0, i32 0
  %RAX.i1495 = bitcast %union.anon* %432 to i64*
  %433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %434 = getelementptr inbounds %struct.GPR, %struct.GPR* %433, i32 0, i32 5
  %435 = getelementptr inbounds %struct.Reg, %struct.Reg* %434, i32 0, i32 0
  %RCX.i1496 = bitcast %union.anon* %435 to i64*
  %436 = load i64, i64* %RAX.i1495
  %437 = add i64 %436, 72712
  %438 = load i64, i64* %PC.i1494
  %439 = add i64 %438, 6
  store i64 %439, i64* %PC.i1494
  %440 = inttoptr i64 %437 to i32*
  %441 = load i32, i32* %440
  %442 = zext i32 %441 to i64
  store i64 %442, i64* %RCX.i1496, align 8
  store %struct.Memory* %loadMem_44a757, %struct.Memory** %MEMORY
  %loadMem_44a75d = load %struct.Memory*, %struct.Memory** %MEMORY
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %444 = getelementptr inbounds %struct.GPR, %struct.GPR* %443, i32 0, i32 33
  %445 = getelementptr inbounds %struct.Reg, %struct.Reg* %444, i32 0, i32 0
  %PC.i1491 = bitcast %union.anon* %445 to i64*
  %446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %447 = getelementptr inbounds %struct.GPR, %struct.GPR* %446, i32 0, i32 5
  %448 = getelementptr inbounds %struct.Reg, %struct.Reg* %447, i32 0, i32 0
  %ECX.i1492 = bitcast %union.anon* %448 to i32*
  %449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %450 = getelementptr inbounds %struct.GPR, %struct.GPR* %449, i32 0, i32 15
  %451 = getelementptr inbounds %struct.Reg, %struct.Reg* %450, i32 0, i32 0
  %RBP.i1493 = bitcast %union.anon* %451 to i64*
  %452 = load i64, i64* %RBP.i1493
  %453 = sub i64 %452, 40
  %454 = load i32, i32* %ECX.i1492
  %455 = zext i32 %454 to i64
  %456 = load i64, i64* %PC.i1491
  %457 = add i64 %456, 3
  store i64 %457, i64* %PC.i1491
  %458 = inttoptr i64 %453 to i32*
  store i32 %454, i32* %458
  store %struct.Memory* %loadMem_44a75d, %struct.Memory** %MEMORY
  br label %block_.L_44a760

block_.L_44a760:                                  ; preds = %block_.L_44a73e, %block_44a72b
  %loadMem_44a760 = load %struct.Memory*, %struct.Memory** %MEMORY
  %459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %460 = getelementptr inbounds %struct.GPR, %struct.GPR* %459, i32 0, i32 33
  %461 = getelementptr inbounds %struct.Reg, %struct.Reg* %460, i32 0, i32 0
  %PC.i1488 = bitcast %union.anon* %461 to i64*
  %462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %463 = getelementptr inbounds %struct.GPR, %struct.GPR* %462, i32 0, i32 1
  %464 = getelementptr inbounds %struct.Reg, %struct.Reg* %463, i32 0, i32 0
  %RAX.i1489 = bitcast %union.anon* %464 to i64*
  %465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %466 = getelementptr inbounds %struct.GPR, %struct.GPR* %465, i32 0, i32 15
  %467 = getelementptr inbounds %struct.Reg, %struct.Reg* %466, i32 0, i32 0
  %RBP.i1490 = bitcast %union.anon* %467 to i64*
  %468 = load i64, i64* %RBP.i1490
  %469 = sub i64 %468, 24
  %470 = load i64, i64* %PC.i1488
  %471 = add i64 %470, 4
  store i64 %471, i64* %PC.i1488
  %472 = inttoptr i64 %469 to i64*
  %473 = load i64, i64* %472
  store i64 %473, i64* %RAX.i1489, align 8
  store %struct.Memory* %loadMem_44a760, %struct.Memory** %MEMORY
  %loadMem_44a764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %475 = getelementptr inbounds %struct.GPR, %struct.GPR* %474, i32 0, i32 33
  %476 = getelementptr inbounds %struct.Reg, %struct.Reg* %475, i32 0, i32 0
  %PC.i1486 = bitcast %union.anon* %476 to i64*
  %477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %478 = getelementptr inbounds %struct.GPR, %struct.GPR* %477, i32 0, i32 1
  %479 = getelementptr inbounds %struct.Reg, %struct.Reg* %478, i32 0, i32 0
  %RAX.i1487 = bitcast %union.anon* %479 to i64*
  %480 = load i64, i64* %RAX.i1487
  %481 = load i64, i64* %PC.i1486
  %482 = add i64 %481, 6
  store i64 %482, i64* %PC.i1486
  %483 = inttoptr i64 %480 to i32*
  store i32 0, i32* %483
  store %struct.Memory* %loadMem_44a764, %struct.Memory** %MEMORY
  %loadMem_44a76a = load %struct.Memory*, %struct.Memory** %MEMORY
  %484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %485 = getelementptr inbounds %struct.GPR, %struct.GPR* %484, i32 0, i32 33
  %486 = getelementptr inbounds %struct.Reg, %struct.Reg* %485, i32 0, i32 0
  %PC.i1483 = bitcast %union.anon* %486 to i64*
  %487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %488 = getelementptr inbounds %struct.GPR, %struct.GPR* %487, i32 0, i32 5
  %489 = getelementptr inbounds %struct.Reg, %struct.Reg* %488, i32 0, i32 0
  %RCX.i1484 = bitcast %union.anon* %489 to i64*
  %490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %491 = getelementptr inbounds %struct.GPR, %struct.GPR* %490, i32 0, i32 15
  %492 = getelementptr inbounds %struct.Reg, %struct.Reg* %491, i32 0, i32 0
  %RBP.i1485 = bitcast %union.anon* %492 to i64*
  %493 = load i64, i64* %RBP.i1485
  %494 = sub i64 %493, 12
  %495 = load i64, i64* %PC.i1483
  %496 = add i64 %495, 3
  store i64 %496, i64* %PC.i1483
  %497 = inttoptr i64 %494 to i32*
  %498 = load i32, i32* %497
  %499 = zext i32 %498 to i64
  store i64 %499, i64* %RCX.i1484, align 8
  store %struct.Memory* %loadMem_44a76a, %struct.Memory** %MEMORY
  %loadMem_44a76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %501 = getelementptr inbounds %struct.GPR, %struct.GPR* %500, i32 0, i32 33
  %502 = getelementptr inbounds %struct.Reg, %struct.Reg* %501, i32 0, i32 0
  %PC.i1480 = bitcast %union.anon* %502 to i64*
  %503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %504 = getelementptr inbounds %struct.GPR, %struct.GPR* %503, i32 0, i32 7
  %505 = getelementptr inbounds %struct.Reg, %struct.Reg* %504, i32 0, i32 0
  %RDX.i1481 = bitcast %union.anon* %505 to i64*
  %506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %507 = getelementptr inbounds %struct.GPR, %struct.GPR* %506, i32 0, i32 15
  %508 = getelementptr inbounds %struct.Reg, %struct.Reg* %507, i32 0, i32 0
  %RBP.i1482 = bitcast %union.anon* %508 to i64*
  %509 = load i64, i64* %RBP.i1482
  %510 = sub i64 %509, 40
  %511 = load i64, i64* %PC.i1480
  %512 = add i64 %511, 3
  store i64 %512, i64* %PC.i1480
  %513 = inttoptr i64 %510 to i32*
  %514 = load i32, i32* %513
  %515 = zext i32 %514 to i64
  store i64 %515, i64* %RDX.i1481, align 8
  store %struct.Memory* %loadMem_44a76d, %struct.Memory** %MEMORY
  %loadMem_44a770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %517 = getelementptr inbounds %struct.GPR, %struct.GPR* %516, i32 0, i32 33
  %518 = getelementptr inbounds %struct.Reg, %struct.Reg* %517, i32 0, i32 0
  %PC.i1478 = bitcast %union.anon* %518 to i64*
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %520 = getelementptr inbounds %struct.GPR, %struct.GPR* %519, i32 0, i32 7
  %521 = getelementptr inbounds %struct.Reg, %struct.Reg* %520, i32 0, i32 0
  %RDX.i1479 = bitcast %union.anon* %521 to i64*
  %522 = load i64, i64* %RDX.i1479
  %523 = load i64, i64* %PC.i1478
  %524 = add i64 %523, 3
  store i64 %524, i64* %PC.i1478
  %525 = trunc i64 %522 to i32
  %526 = sub i32 %525, 1
  %527 = zext i32 %526 to i64
  store i64 %527, i64* %RDX.i1479, align 8
  %528 = icmp ult i32 %525, 1
  %529 = zext i1 %528 to i8
  %530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %529, i8* %530, align 1
  %531 = and i32 %526, 255
  %532 = call i32 @llvm.ctpop.i32(i32 %531)
  %533 = trunc i32 %532 to i8
  %534 = and i8 %533, 1
  %535 = xor i8 %534, 1
  %536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %535, i8* %536, align 1
  %537 = xor i64 1, %522
  %538 = trunc i64 %537 to i32
  %539 = xor i32 %538, %526
  %540 = lshr i32 %539, 4
  %541 = trunc i32 %540 to i8
  %542 = and i8 %541, 1
  %543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %542, i8* %543, align 1
  %544 = icmp eq i32 %526, 0
  %545 = zext i1 %544 to i8
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %545, i8* %546, align 1
  %547 = lshr i32 %526, 31
  %548 = trunc i32 %547 to i8
  %549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %548, i8* %549, align 1
  %550 = lshr i32 %525, 31
  %551 = xor i32 %547, %550
  %552 = add i32 %551, %550
  %553 = icmp eq i32 %552, 2
  %554 = zext i1 %553 to i8
  %555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %554, i8* %555, align 1
  store %struct.Memory* %loadMem_44a770, %struct.Memory** %MEMORY
  %loadMem_44a773 = load %struct.Memory*, %struct.Memory** %MEMORY
  %556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %557 = getelementptr inbounds %struct.GPR, %struct.GPR* %556, i32 0, i32 33
  %558 = getelementptr inbounds %struct.Reg, %struct.Reg* %557, i32 0, i32 0
  %PC.i1475 = bitcast %union.anon* %558 to i64*
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %560 = getelementptr inbounds %struct.GPR, %struct.GPR* %559, i32 0, i32 5
  %561 = getelementptr inbounds %struct.Reg, %struct.Reg* %560, i32 0, i32 0
  %ECX.i1476 = bitcast %union.anon* %561 to i32*
  %562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %563 = getelementptr inbounds %struct.GPR, %struct.GPR* %562, i32 0, i32 7
  %564 = getelementptr inbounds %struct.Reg, %struct.Reg* %563, i32 0, i32 0
  %EDX.i1477 = bitcast %union.anon* %564 to i32*
  %565 = load i32, i32* %ECX.i1476
  %566 = zext i32 %565 to i64
  %567 = load i32, i32* %EDX.i1477
  %568 = zext i32 %567 to i64
  %569 = load i64, i64* %PC.i1475
  %570 = add i64 %569, 2
  store i64 %570, i64* %PC.i1475
  %571 = sub i32 %565, %567
  %572 = icmp ult i32 %565, %567
  %573 = zext i1 %572 to i8
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %573, i8* %574, align 1
  %575 = and i32 %571, 255
  %576 = call i32 @llvm.ctpop.i32(i32 %575)
  %577 = trunc i32 %576 to i8
  %578 = and i8 %577, 1
  %579 = xor i8 %578, 1
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %579, i8* %580, align 1
  %581 = xor i64 %568, %566
  %582 = trunc i64 %581 to i32
  %583 = xor i32 %582, %571
  %584 = lshr i32 %583, 4
  %585 = trunc i32 %584 to i8
  %586 = and i8 %585, 1
  %587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %586, i8* %587, align 1
  %588 = icmp eq i32 %571, 0
  %589 = zext i1 %588 to i8
  %590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %589, i8* %590, align 1
  %591 = lshr i32 %571, 31
  %592 = trunc i32 %591 to i8
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %592, i8* %593, align 1
  %594 = lshr i32 %565, 31
  %595 = lshr i32 %567, 31
  %596 = xor i32 %595, %594
  %597 = xor i32 %591, %594
  %598 = add i32 %597, %596
  %599 = icmp eq i32 %598, 2
  %600 = zext i1 %599 to i8
  %601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %600, i8* %601, align 1
  store %struct.Memory* %loadMem_44a773, %struct.Memory** %MEMORY
  %loadMem_44a775 = load %struct.Memory*, %struct.Memory** %MEMORY
  %602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %603 = getelementptr inbounds %struct.GPR, %struct.GPR* %602, i32 0, i32 33
  %604 = getelementptr inbounds %struct.Reg, %struct.Reg* %603, i32 0, i32 0
  %PC.i1474 = bitcast %union.anon* %604 to i64*
  %605 = load i64, i64* %PC.i1474
  %606 = add i64 %605, 11
  %607 = load i64, i64* %PC.i1474
  %608 = add i64 %607, 6
  %609 = load i64, i64* %PC.i1474
  %610 = add i64 %609, 6
  store i64 %610, i64* %PC.i1474
  %611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %612 = load i8, i8* %611, align 1
  %613 = icmp ne i8 %612, 0
  %614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %615 = load i8, i8* %614, align 1
  %616 = icmp ne i8 %615, 0
  %617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %618 = load i8, i8* %617, align 1
  %619 = icmp ne i8 %618, 0
  %620 = xor i1 %616, %619
  %621 = or i1 %613, %620
  %622 = zext i1 %621 to i8
  store i8 %622, i8* %BRANCH_TAKEN, align 1
  %623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %624 = select i1 %621, i64 %606, i64 %608
  store i64 %624, i64* %623, align 8
  store %struct.Memory* %loadMem_44a775, %struct.Memory** %MEMORY
  %loadBr_44a775 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a775 = icmp eq i8 %loadBr_44a775, 1
  br i1 %cmpBr_44a775, label %block_.L_44a780, label %block_44a77b

block_44a77b:                                     ; preds = %block_.L_44a760
  %loadMem_44a77b = load %struct.Memory*, %struct.Memory** %MEMORY
  %625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %626 = getelementptr inbounds %struct.GPR, %struct.GPR* %625, i32 0, i32 33
  %627 = getelementptr inbounds %struct.Reg, %struct.Reg* %626, i32 0, i32 0
  %PC.i1473 = bitcast %union.anon* %627 to i64*
  %628 = load i64, i64* %PC.i1473
  %629 = add i64 %628, 2600
  %630 = load i64, i64* %PC.i1473
  %631 = add i64 %630, 5
  store i64 %631, i64* %PC.i1473
  %632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %629, i64* %632, align 8
  store %struct.Memory* %loadMem_44a77b, %struct.Memory** %MEMORY
  br label %block_.L_44b1a3

block_.L_44a780:                                  ; preds = %block_.L_44a760
  %loadMem_44a780 = load %struct.Memory*, %struct.Memory** %MEMORY
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %634 = getelementptr inbounds %struct.GPR, %struct.GPR* %633, i32 0, i32 33
  %635 = getelementptr inbounds %struct.Reg, %struct.Reg* %634, i32 0, i32 0
  %PC.i1470 = bitcast %union.anon* %635 to i64*
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %637 = getelementptr inbounds %struct.GPR, %struct.GPR* %636, i32 0, i32 1
  %638 = getelementptr inbounds %struct.Reg, %struct.Reg* %637, i32 0, i32 0
  %RAX.i1471 = bitcast %union.anon* %638 to i64*
  %639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %640 = getelementptr inbounds %struct.GPR, %struct.GPR* %639, i32 0, i32 15
  %641 = getelementptr inbounds %struct.Reg, %struct.Reg* %640, i32 0, i32 0
  %RBP.i1472 = bitcast %union.anon* %641 to i64*
  %642 = load i64, i64* %RBP.i1472
  %643 = sub i64 %642, 8
  %644 = load i64, i64* %PC.i1470
  %645 = add i64 %644, 3
  store i64 %645, i64* %PC.i1470
  %646 = inttoptr i64 %643 to i32*
  %647 = load i32, i32* %646
  %648 = zext i32 %647 to i64
  store i64 %648, i64* %RAX.i1471, align 8
  store %struct.Memory* %loadMem_44a780, %struct.Memory** %MEMORY
  %loadMem_44a783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %650 = getelementptr inbounds %struct.GPR, %struct.GPR* %649, i32 0, i32 33
  %651 = getelementptr inbounds %struct.Reg, %struct.Reg* %650, i32 0, i32 0
  %PC.i1467 = bitcast %union.anon* %651 to i64*
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %653 = getelementptr inbounds %struct.GPR, %struct.GPR* %652, i32 0, i32 5
  %654 = getelementptr inbounds %struct.Reg, %struct.Reg* %653, i32 0, i32 0
  %RCX.i1468 = bitcast %union.anon* %654 to i64*
  %655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %656 = getelementptr inbounds %struct.GPR, %struct.GPR* %655, i32 0, i32 15
  %657 = getelementptr inbounds %struct.Reg, %struct.Reg* %656, i32 0, i32 0
  %RBP.i1469 = bitcast %union.anon* %657 to i64*
  %658 = load i64, i64* %RBP.i1469
  %659 = sub i64 %658, 36
  %660 = load i64, i64* %PC.i1467
  %661 = add i64 %660, 3
  store i64 %661, i64* %PC.i1467
  %662 = inttoptr i64 %659 to i32*
  %663 = load i32, i32* %662
  %664 = zext i32 %663 to i64
  store i64 %664, i64* %RCX.i1468, align 8
  store %struct.Memory* %loadMem_44a783, %struct.Memory** %MEMORY
  %loadMem_44a786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %666 = getelementptr inbounds %struct.GPR, %struct.GPR* %665, i32 0, i32 33
  %667 = getelementptr inbounds %struct.Reg, %struct.Reg* %666, i32 0, i32 0
  %PC.i1465 = bitcast %union.anon* %667 to i64*
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %669 = getelementptr inbounds %struct.GPR, %struct.GPR* %668, i32 0, i32 5
  %670 = getelementptr inbounds %struct.Reg, %struct.Reg* %669, i32 0, i32 0
  %RCX.i1466 = bitcast %union.anon* %670 to i64*
  %671 = load i64, i64* %RCX.i1466
  %672 = load i64, i64* %PC.i1465
  %673 = add i64 %672, 3
  store i64 %673, i64* %PC.i1465
  %674 = trunc i64 %671 to i32
  %675 = sub i32 %674, 1
  %676 = zext i32 %675 to i64
  store i64 %676, i64* %RCX.i1466, align 8
  %677 = icmp ult i32 %674, 1
  %678 = zext i1 %677 to i8
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %678, i8* %679, align 1
  %680 = and i32 %675, 255
  %681 = call i32 @llvm.ctpop.i32(i32 %680)
  %682 = trunc i32 %681 to i8
  %683 = and i8 %682, 1
  %684 = xor i8 %683, 1
  %685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %684, i8* %685, align 1
  %686 = xor i64 1, %671
  %687 = trunc i64 %686 to i32
  %688 = xor i32 %687, %675
  %689 = lshr i32 %688, 4
  %690 = trunc i32 %689 to i8
  %691 = and i8 %690, 1
  %692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %691, i8* %692, align 1
  %693 = icmp eq i32 %675, 0
  %694 = zext i1 %693 to i8
  %695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %694, i8* %695, align 1
  %696 = lshr i32 %675, 31
  %697 = trunc i32 %696 to i8
  %698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %697, i8* %698, align 1
  %699 = lshr i32 %674, 31
  %700 = xor i32 %696, %699
  %701 = add i32 %700, %699
  %702 = icmp eq i32 %701, 2
  %703 = zext i1 %702 to i8
  %704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %703, i8* %704, align 1
  store %struct.Memory* %loadMem_44a786, %struct.Memory** %MEMORY
  %loadMem_44a789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %706 = getelementptr inbounds %struct.GPR, %struct.GPR* %705, i32 0, i32 33
  %707 = getelementptr inbounds %struct.Reg, %struct.Reg* %706, i32 0, i32 0
  %PC.i1462 = bitcast %union.anon* %707 to i64*
  %708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %709 = getelementptr inbounds %struct.GPR, %struct.GPR* %708, i32 0, i32 1
  %710 = getelementptr inbounds %struct.Reg, %struct.Reg* %709, i32 0, i32 0
  %EAX.i1463 = bitcast %union.anon* %710 to i32*
  %711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %712 = getelementptr inbounds %struct.GPR, %struct.GPR* %711, i32 0, i32 5
  %713 = getelementptr inbounds %struct.Reg, %struct.Reg* %712, i32 0, i32 0
  %ECX.i1464 = bitcast %union.anon* %713 to i32*
  %714 = load i32, i32* %EAX.i1463
  %715 = zext i32 %714 to i64
  %716 = load i32, i32* %ECX.i1464
  %717 = zext i32 %716 to i64
  %718 = load i64, i64* %PC.i1462
  %719 = add i64 %718, 2
  store i64 %719, i64* %PC.i1462
  %720 = sub i32 %714, %716
  %721 = icmp ult i32 %714, %716
  %722 = zext i1 %721 to i8
  %723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %722, i8* %723, align 1
  %724 = and i32 %720, 255
  %725 = call i32 @llvm.ctpop.i32(i32 %724)
  %726 = trunc i32 %725 to i8
  %727 = and i8 %726, 1
  %728 = xor i8 %727, 1
  %729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %728, i8* %729, align 1
  %730 = xor i64 %717, %715
  %731 = trunc i64 %730 to i32
  %732 = xor i32 %731, %720
  %733 = lshr i32 %732, 4
  %734 = trunc i32 %733 to i8
  %735 = and i8 %734, 1
  %736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %735, i8* %736, align 1
  %737 = icmp eq i32 %720, 0
  %738 = zext i1 %737 to i8
  %739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %738, i8* %739, align 1
  %740 = lshr i32 %720, 31
  %741 = trunc i32 %740 to i8
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %741, i8* %742, align 1
  %743 = lshr i32 %714, 31
  %744 = lshr i32 %716, 31
  %745 = xor i32 %744, %743
  %746 = xor i32 %740, %743
  %747 = add i32 %746, %745
  %748 = icmp eq i32 %747, 2
  %749 = zext i1 %748 to i8
  %750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %749, i8* %750, align 1
  store %struct.Memory* %loadMem_44a789, %struct.Memory** %MEMORY
  %loadMem_44a78b = load %struct.Memory*, %struct.Memory** %MEMORY
  %751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %752 = getelementptr inbounds %struct.GPR, %struct.GPR* %751, i32 0, i32 33
  %753 = getelementptr inbounds %struct.Reg, %struct.Reg* %752, i32 0, i32 0
  %PC.i1461 = bitcast %union.anon* %753 to i64*
  %754 = load i64, i64* %PC.i1461
  %755 = add i64 %754, 33
  %756 = load i64, i64* %PC.i1461
  %757 = add i64 %756, 6
  %758 = load i64, i64* %PC.i1461
  %759 = add i64 %758, 6
  store i64 %759, i64* %PC.i1461
  %760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %761 = load i8, i8* %760, align 1
  %762 = icmp ne i8 %761, 0
  %763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %764 = load i8, i8* %763, align 1
  %765 = icmp ne i8 %764, 0
  %766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %767 = load i8, i8* %766, align 1
  %768 = icmp ne i8 %767, 0
  %769 = xor i1 %765, %768
  %770 = or i1 %762, %769
  %771 = zext i1 %770 to i8
  store i8 %771, i8* %BRANCH_TAKEN, align 1
  %772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %773 = select i1 %770, i64 %755, i64 %757
  store i64 %773, i64* %772, align 8
  store %struct.Memory* %loadMem_44a78b, %struct.Memory** %MEMORY
  %loadBr_44a78b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a78b = icmp eq i8 %loadBr_44a78b, 1
  br i1 %cmpBr_44a78b, label %block_.L_44a7ac, label %block_44a791

block_44a791:                                     ; preds = %block_.L_44a780
  %loadMem_44a791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %775 = getelementptr inbounds %struct.GPR, %struct.GPR* %774, i32 0, i32 33
  %776 = getelementptr inbounds %struct.Reg, %struct.Reg* %775, i32 0, i32 0
  %PC.i1459 = bitcast %union.anon* %776 to i64*
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %778 = getelementptr inbounds %struct.GPR, %struct.GPR* %777, i32 0, i32 15
  %779 = getelementptr inbounds %struct.Reg, %struct.Reg* %778, i32 0, i32 0
  %RBP.i1460 = bitcast %union.anon* %779 to i64*
  %780 = load i64, i64* %RBP.i1460
  %781 = sub i64 %780, 12
  %782 = load i64, i64* %PC.i1459
  %783 = add i64 %782, 4
  store i64 %783, i64* %PC.i1459
  %784 = inttoptr i64 %781 to i32*
  %785 = load i32, i32* %784
  %786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %786, align 1
  %787 = and i32 %785, 255
  %788 = call i32 @llvm.ctpop.i32(i32 %787)
  %789 = trunc i32 %788 to i8
  %790 = and i8 %789, 1
  %791 = xor i8 %790, 1
  %792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %791, i8* %792, align 1
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %793, align 1
  %794 = icmp eq i32 %785, 0
  %795 = zext i1 %794 to i8
  %796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %795, i8* %796, align 1
  %797 = lshr i32 %785, 31
  %798 = trunc i32 %797 to i8
  %799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %798, i8* %799, align 1
  %800 = lshr i32 %785, 31
  %801 = xor i32 %797, %800
  %802 = add i32 %801, %800
  %803 = icmp eq i32 %802, 2
  %804 = zext i1 %803 to i8
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %804, i8* %805, align 1
  store %struct.Memory* %loadMem_44a791, %struct.Memory** %MEMORY
  %loadMem_44a795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %807 = getelementptr inbounds %struct.GPR, %struct.GPR* %806, i32 0, i32 33
  %808 = getelementptr inbounds %struct.Reg, %struct.Reg* %807, i32 0, i32 0
  %PC.i1458 = bitcast %union.anon* %808 to i64*
  %809 = load i64, i64* %PC.i1458
  %810 = add i64 %809, 23
  %811 = load i64, i64* %PC.i1458
  %812 = add i64 %811, 6
  %813 = load i64, i64* %PC.i1458
  %814 = add i64 %813, 6
  store i64 %814, i64* %PC.i1458
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %816 = load i8, i8* %815, align 1
  %817 = icmp ne i8 %816, 0
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %819 = load i8, i8* %818, align 1
  %820 = icmp ne i8 %819, 0
  %821 = xor i1 %817, %820
  %822 = zext i1 %821 to i8
  store i8 %822, i8* %BRANCH_TAKEN, align 1
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %824 = select i1 %821, i64 %810, i64 %812
  store i64 %824, i64* %823, align 8
  store %struct.Memory* %loadMem_44a795, %struct.Memory** %MEMORY
  %loadBr_44a795 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a795 = icmp eq i8 %loadBr_44a795, 1
  br i1 %cmpBr_44a795, label %block_.L_44a7ac, label %block_44a79b

block_44a79b:                                     ; preds = %block_44a791
  %loadMem_44a79b = load %struct.Memory*, %struct.Memory** %MEMORY
  %825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %826 = getelementptr inbounds %struct.GPR, %struct.GPR* %825, i32 0, i32 33
  %827 = getelementptr inbounds %struct.Reg, %struct.Reg* %826, i32 0, i32 0
  %PC.i1455 = bitcast %union.anon* %827 to i64*
  %828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %829 = getelementptr inbounds %struct.GPR, %struct.GPR* %828, i32 0, i32 1
  %830 = getelementptr inbounds %struct.Reg, %struct.Reg* %829, i32 0, i32 0
  %RAX.i1456 = bitcast %union.anon* %830 to i64*
  %831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %832 = getelementptr inbounds %struct.GPR, %struct.GPR* %831, i32 0, i32 15
  %833 = getelementptr inbounds %struct.Reg, %struct.Reg* %832, i32 0, i32 0
  %RBP.i1457 = bitcast %union.anon* %833 to i64*
  %834 = load i64, i64* %RBP.i1457
  %835 = sub i64 %834, 12
  %836 = load i64, i64* %PC.i1455
  %837 = add i64 %836, 3
  store i64 %837, i64* %PC.i1455
  %838 = inttoptr i64 %835 to i32*
  %839 = load i32, i32* %838
  %840 = zext i32 %839 to i64
  store i64 %840, i64* %RAX.i1456, align 8
  store %struct.Memory* %loadMem_44a79b, %struct.Memory** %MEMORY
  %loadMem_44a79e = load %struct.Memory*, %struct.Memory** %MEMORY
  %841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %842 = getelementptr inbounds %struct.GPR, %struct.GPR* %841, i32 0, i32 33
  %843 = getelementptr inbounds %struct.Reg, %struct.Reg* %842, i32 0, i32 0
  %PC.i1452 = bitcast %union.anon* %843 to i64*
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %845 = getelementptr inbounds %struct.GPR, %struct.GPR* %844, i32 0, i32 1
  %846 = getelementptr inbounds %struct.Reg, %struct.Reg* %845, i32 0, i32 0
  %EAX.i1453 = bitcast %union.anon* %846 to i32*
  %847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %848 = getelementptr inbounds %struct.GPR, %struct.GPR* %847, i32 0, i32 15
  %849 = getelementptr inbounds %struct.Reg, %struct.Reg* %848, i32 0, i32 0
  %RBP.i1454 = bitcast %union.anon* %849 to i64*
  %850 = load i32, i32* %EAX.i1453
  %851 = zext i32 %850 to i64
  %852 = load i64, i64* %RBP.i1454
  %853 = sub i64 %852, 40
  %854 = load i64, i64* %PC.i1452
  %855 = add i64 %854, 3
  store i64 %855, i64* %PC.i1452
  %856 = inttoptr i64 %853 to i32*
  %857 = load i32, i32* %856
  %858 = sub i32 %850, %857
  %859 = icmp ult i32 %850, %857
  %860 = zext i1 %859 to i8
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %860, i8* %861, align 1
  %862 = and i32 %858, 255
  %863 = call i32 @llvm.ctpop.i32(i32 %862)
  %864 = trunc i32 %863 to i8
  %865 = and i8 %864, 1
  %866 = xor i8 %865, 1
  %867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %866, i8* %867, align 1
  %868 = xor i32 %857, %850
  %869 = xor i32 %868, %858
  %870 = lshr i32 %869, 4
  %871 = trunc i32 %870 to i8
  %872 = and i8 %871, 1
  %873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %872, i8* %873, align 1
  %874 = icmp eq i32 %858, 0
  %875 = zext i1 %874 to i8
  %876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %875, i8* %876, align 1
  %877 = lshr i32 %858, 31
  %878 = trunc i32 %877 to i8
  %879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %878, i8* %879, align 1
  %880 = lshr i32 %850, 31
  %881 = lshr i32 %857, 31
  %882 = xor i32 %881, %880
  %883 = xor i32 %877, %880
  %884 = add i32 %883, %882
  %885 = icmp eq i32 %884, 2
  %886 = zext i1 %885 to i8
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %886, i8* %887, align 1
  store %struct.Memory* %loadMem_44a79e, %struct.Memory** %MEMORY
  %loadMem_44a7a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %889 = getelementptr inbounds %struct.GPR, %struct.GPR* %888, i32 0, i32 33
  %890 = getelementptr inbounds %struct.Reg, %struct.Reg* %889, i32 0, i32 0
  %PC.i1451 = bitcast %union.anon* %890 to i64*
  %891 = load i64, i64* %PC.i1451
  %892 = add i64 %891, 11
  %893 = load i64, i64* %PC.i1451
  %894 = add i64 %893, 6
  %895 = load i64, i64* %PC.i1451
  %896 = add i64 %895, 6
  store i64 %896, i64* %PC.i1451
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %898 = load i8, i8* %897, align 1
  %899 = icmp ne i8 %898, 0
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %901 = load i8, i8* %900, align 1
  %902 = icmp ne i8 %901, 0
  %903 = xor i1 %899, %902
  %904 = xor i1 %903, true
  %905 = zext i1 %904 to i8
  store i8 %905, i8* %BRANCH_TAKEN, align 1
  %906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %907 = select i1 %903, i64 %894, i64 %892
  store i64 %907, i64* %906, align 8
  store %struct.Memory* %loadMem_44a7a1, %struct.Memory** %MEMORY
  %loadBr_44a7a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a7a1 = icmp eq i8 %loadBr_44a7a1, 1
  br i1 %cmpBr_44a7a1, label %block_.L_44a7ac, label %block_44a7a7

block_44a7a7:                                     ; preds = %block_44a79b
  %loadMem_44a7a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %909 = getelementptr inbounds %struct.GPR, %struct.GPR* %908, i32 0, i32 33
  %910 = getelementptr inbounds %struct.Reg, %struct.Reg* %909, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %910 to i64*
  %911 = load i64, i64* %PC.i1450
  %912 = add i64 %911, 2556
  %913 = load i64, i64* %PC.i1450
  %914 = add i64 %913, 5
  store i64 %914, i64* %PC.i1450
  %915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %912, i64* %915, align 8
  store %struct.Memory* %loadMem_44a7a7, %struct.Memory** %MEMORY
  br label %block_.L_44b1a3

block_.L_44a7ac:                                  ; preds = %block_44a79b, %block_44a791, %block_.L_44a780
  %loadMem_44a7ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %917 = getelementptr inbounds %struct.GPR, %struct.GPR* %916, i32 0, i32 33
  %918 = getelementptr inbounds %struct.Reg, %struct.Reg* %917, i32 0, i32 0
  %PC.i1448 = bitcast %union.anon* %918 to i64*
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %920 = getelementptr inbounds %struct.GPR, %struct.GPR* %919, i32 0, i32 15
  %921 = getelementptr inbounds %struct.Reg, %struct.Reg* %920, i32 0, i32 0
  %RBP.i1449 = bitcast %union.anon* %921 to i64*
  %922 = load i64, i64* %RBP.i1449
  %923 = sub i64 %922, 8
  %924 = load i64, i64* %PC.i1448
  %925 = add i64 %924, 4
  store i64 %925, i64* %PC.i1448
  %926 = inttoptr i64 %923 to i32*
  %927 = load i32, i32* %926
  %928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %928, align 1
  %929 = and i32 %927, 255
  %930 = call i32 @llvm.ctpop.i32(i32 %929)
  %931 = trunc i32 %930 to i8
  %932 = and i8 %931, 1
  %933 = xor i8 %932, 1
  %934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %933, i8* %934, align 1
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %935, align 1
  %936 = icmp eq i32 %927, 0
  %937 = zext i1 %936 to i8
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %937, i8* %938, align 1
  %939 = lshr i32 %927, 31
  %940 = trunc i32 %939 to i8
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %940, i8* %941, align 1
  %942 = lshr i32 %927, 31
  %943 = xor i32 %939, %942
  %944 = add i32 %943, %942
  %945 = icmp eq i32 %944, 2
  %946 = zext i1 %945 to i8
  %947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %946, i8* %947, align 1
  store %struct.Memory* %loadMem_44a7ac, %struct.Memory** %MEMORY
  %loadMem_44a7b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %949 = getelementptr inbounds %struct.GPR, %struct.GPR* %948, i32 0, i32 33
  %950 = getelementptr inbounds %struct.Reg, %struct.Reg* %949, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %950 to i64*
  %951 = load i64, i64* %PC.i1447
  %952 = add i64 %951, 1342
  %953 = load i64, i64* %PC.i1447
  %954 = add i64 %953, 6
  %955 = load i64, i64* %PC.i1447
  %956 = add i64 %955, 6
  store i64 %956, i64* %PC.i1447
  %957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %958 = load i8, i8* %957, align 1
  %959 = icmp ne i8 %958, 0
  %960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %961 = load i8, i8* %960, align 1
  %962 = icmp ne i8 %961, 0
  %963 = xor i1 %959, %962
  %964 = xor i1 %963, true
  %965 = zext i1 %964 to i8
  store i8 %965, i8* %BRANCH_TAKEN, align 1
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %967 = select i1 %963, i64 %954, i64 %952
  store i64 %967, i64* %966, align 8
  store %struct.Memory* %loadMem_44a7b0, %struct.Memory** %MEMORY
  %loadBr_44a7b0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a7b0 = icmp eq i8 %loadBr_44a7b0, 1
  br i1 %cmpBr_44a7b0, label %block_.L_44acee, label %block_44a7b6

block_44a7b6:                                     ; preds = %block_.L_44a7ac
  %loadMem_44a7b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %969 = getelementptr inbounds %struct.GPR, %struct.GPR* %968, i32 0, i32 33
  %970 = getelementptr inbounds %struct.Reg, %struct.Reg* %969, i32 0, i32 0
  %PC.i1445 = bitcast %union.anon* %970 to i64*
  %971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %972 = getelementptr inbounds %struct.GPR, %struct.GPR* %971, i32 0, i32 15
  %973 = getelementptr inbounds %struct.Reg, %struct.Reg* %972, i32 0, i32 0
  %RBP.i1446 = bitcast %union.anon* %973 to i64*
  %974 = load i64, i64* %RBP.i1446
  %975 = sub i64 %974, 12
  %976 = load i64, i64* %PC.i1445
  %977 = add i64 %976, 4
  store i64 %977, i64* %PC.i1445
  %978 = inttoptr i64 %975 to i32*
  %979 = load i32, i32* %978
  %980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %980, align 1
  %981 = and i32 %979, 255
  %982 = call i32 @llvm.ctpop.i32(i32 %981)
  %983 = trunc i32 %982 to i8
  %984 = and i8 %983, 1
  %985 = xor i8 %984, 1
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %985, i8* %986, align 1
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %987, align 1
  %988 = icmp eq i32 %979, 0
  %989 = zext i1 %988 to i8
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %989, i8* %990, align 1
  %991 = lshr i32 %979, 31
  %992 = trunc i32 %991 to i8
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %992, i8* %993, align 1
  %994 = lshr i32 %979, 31
  %995 = xor i32 %991, %994
  %996 = add i32 %995, %994
  %997 = icmp eq i32 %996, 2
  %998 = zext i1 %997 to i8
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %998, i8* %999, align 1
  store %struct.Memory* %loadMem_44a7b6, %struct.Memory** %MEMORY
  %loadMem_44a7ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1001 = getelementptr inbounds %struct.GPR, %struct.GPR* %1000, i32 0, i32 33
  %1002 = getelementptr inbounds %struct.Reg, %struct.Reg* %1001, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %1002 to i64*
  %1003 = load i64, i64* %PC.i1444
  %1004 = add i64 %1003, 444
  %1005 = load i64, i64* %PC.i1444
  %1006 = add i64 %1005, 6
  %1007 = load i64, i64* %PC.i1444
  %1008 = add i64 %1007, 6
  store i64 %1008, i64* %PC.i1444
  %1009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1010 = load i8, i8* %1009, align 1
  %1011 = icmp ne i8 %1010, 0
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1013 = load i8, i8* %1012, align 1
  %1014 = icmp ne i8 %1013, 0
  %1015 = xor i1 %1011, %1014
  %1016 = xor i1 %1015, true
  %1017 = zext i1 %1016 to i8
  store i8 %1017, i8* %BRANCH_TAKEN, align 1
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1019 = select i1 %1015, i64 %1006, i64 %1004
  store i64 %1019, i64* %1018, align 8
  store %struct.Memory* %loadMem_44a7ba, %struct.Memory** %MEMORY
  %loadBr_44a7ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a7ba = icmp eq i8 %loadBr_44a7ba, 1
  br i1 %cmpBr_44a7ba, label %block_.L_44a976, label %block_44a7c0

block_44a7c0:                                     ; preds = %block_44a7b6
  %loadMem_44a7c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1021 = getelementptr inbounds %struct.GPR, %struct.GPR* %1020, i32 0, i32 33
  %1022 = getelementptr inbounds %struct.Reg, %struct.Reg* %1021, i32 0, i32 0
  %PC.i1441 = bitcast %union.anon* %1022 to i64*
  %1023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1024 = getelementptr inbounds %struct.GPR, %struct.GPR* %1023, i32 0, i32 1
  %1025 = getelementptr inbounds %struct.Reg, %struct.Reg* %1024, i32 0, i32 0
  %RAX.i1442 = bitcast %union.anon* %1025 to i64*
  %1026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1027 = getelementptr inbounds %struct.GPR, %struct.GPR* %1026, i32 0, i32 15
  %1028 = getelementptr inbounds %struct.Reg, %struct.Reg* %1027, i32 0, i32 0
  %RBP.i1443 = bitcast %union.anon* %1028 to i64*
  %1029 = load i64, i64* %RBP.i1443
  %1030 = sub i64 %1029, 32
  %1031 = load i64, i64* %PC.i1441
  %1032 = add i64 %1031, 4
  store i64 %1032, i64* %PC.i1441
  %1033 = inttoptr i64 %1030 to i64*
  %1034 = load i64, i64* %1033
  store i64 %1034, i64* %RAX.i1442, align 8
  store %struct.Memory* %loadMem_44a7c0, %struct.Memory** %MEMORY
  %loadMem_44a7c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1036 = getelementptr inbounds %struct.GPR, %struct.GPR* %1035, i32 0, i32 33
  %1037 = getelementptr inbounds %struct.Reg, %struct.Reg* %1036, i32 0, i32 0
  %PC.i1439 = bitcast %union.anon* %1037 to i64*
  %1038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1039 = getelementptr inbounds %struct.GPR, %struct.GPR* %1038, i32 0, i32 1
  %1040 = getelementptr inbounds %struct.Reg, %struct.Reg* %1039, i32 0, i32 0
  %RAX.i1440 = bitcast %union.anon* %1040 to i64*
  %1041 = load i64, i64* %RAX.i1440
  %1042 = add i64 %1041, 532
  %1043 = load i64, i64* %PC.i1439
  %1044 = add i64 %1043, 7
  store i64 %1044, i64* %PC.i1439
  %1045 = inttoptr i64 %1042 to i32*
  %1046 = load i32, i32* %1045
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1047, align 1
  %1048 = and i32 %1046, 255
  %1049 = call i32 @llvm.ctpop.i32(i32 %1048)
  %1050 = trunc i32 %1049 to i8
  %1051 = and i8 %1050, 1
  %1052 = xor i8 %1051, 1
  %1053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1052, i8* %1053, align 1
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1054, align 1
  %1055 = icmp eq i32 %1046, 0
  %1056 = zext i1 %1055 to i8
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1056, i8* %1057, align 1
  %1058 = lshr i32 %1046, 31
  %1059 = trunc i32 %1058 to i8
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1059, i8* %1060, align 1
  %1061 = lshr i32 %1046, 31
  %1062 = xor i32 %1058, %1061
  %1063 = add i32 %1062, %1061
  %1064 = icmp eq i32 %1063, 2
  %1065 = zext i1 %1064 to i8
  %1066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1065, i8* %1066, align 1
  store %struct.Memory* %loadMem_44a7c4, %struct.Memory** %MEMORY
  %loadMem_44a7cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1068 = getelementptr inbounds %struct.GPR, %struct.GPR* %1067, i32 0, i32 33
  %1069 = getelementptr inbounds %struct.Reg, %struct.Reg* %1068, i32 0, i32 0
  %PC.i1438 = bitcast %union.anon* %1069 to i64*
  %1070 = load i64, i64* %PC.i1438
  %1071 = add i64 %1070, 218
  %1072 = load i64, i64* %PC.i1438
  %1073 = add i64 %1072, 6
  %1074 = load i64, i64* %PC.i1438
  %1075 = add i64 %1074, 6
  store i64 %1075, i64* %PC.i1438
  %1076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1077 = load i8, i8* %1076, align 1
  %1078 = icmp eq i8 %1077, 0
  %1079 = zext i1 %1078 to i8
  store i8 %1079, i8* %BRANCH_TAKEN, align 1
  %1080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1081 = select i1 %1078, i64 %1071, i64 %1073
  store i64 %1081, i64* %1080, align 8
  store %struct.Memory* %loadMem_44a7cb, %struct.Memory** %MEMORY
  %loadBr_44a7cb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a7cb = icmp eq i8 %loadBr_44a7cb, 1
  br i1 %cmpBr_44a7cb, label %block_.L_44a8a5, label %block_44a7d1

block_44a7d1:                                     ; preds = %block_44a7c0
  %loadMem_44a7d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1083 = getelementptr inbounds %struct.GPR, %struct.GPR* %1082, i32 0, i32 33
  %1084 = getelementptr inbounds %struct.Reg, %struct.Reg* %1083, i32 0, i32 0
  %PC.i1435 = bitcast %union.anon* %1084 to i64*
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1086 = getelementptr inbounds %struct.GPR, %struct.GPR* %1085, i32 0, i32 1
  %1087 = getelementptr inbounds %struct.Reg, %struct.Reg* %1086, i32 0, i32 0
  %RAX.i1436 = bitcast %union.anon* %1087 to i64*
  %1088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1089 = getelementptr inbounds %struct.GPR, %struct.GPR* %1088, i32 0, i32 15
  %1090 = getelementptr inbounds %struct.Reg, %struct.Reg* %1089, i32 0, i32 0
  %RBP.i1437 = bitcast %union.anon* %1090 to i64*
  %1091 = load i64, i64* %RBP.i1437
  %1092 = sub i64 %1091, 4
  %1093 = load i64, i64* %PC.i1435
  %1094 = add i64 %1093, 3
  store i64 %1094, i64* %PC.i1435
  %1095 = inttoptr i64 %1092 to i32*
  %1096 = load i32, i32* %1095
  %1097 = zext i32 %1096 to i64
  store i64 %1097, i64* %RAX.i1436, align 8
  store %struct.Memory* %loadMem_44a7d1, %struct.Memory** %MEMORY
  %loadMem_44a7d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1099 = getelementptr inbounds %struct.GPR, %struct.GPR* %1098, i32 0, i32 33
  %1100 = getelementptr inbounds %struct.Reg, %struct.Reg* %1099, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %1100 to i64*
  %1101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1102 = getelementptr inbounds %struct.GPR, %struct.GPR* %1101, i32 0, i32 1
  %1103 = getelementptr inbounds %struct.Reg, %struct.Reg* %1102, i32 0, i32 0
  %RAX.i1434 = bitcast %union.anon* %1103 to i64*
  %1104 = load i64, i64* %RAX.i1434
  %1105 = load i64, i64* %PC.i1433
  %1106 = add i64 %1105, 3
  store i64 %1106, i64* %PC.i1433
  %1107 = and i64 1, %1104
  %1108 = trunc i64 %1107 to i32
  store i64 %1107, i64* %RAX.i1434, align 8
  %1109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1109, align 1
  %1110 = and i32 %1108, 255
  %1111 = call i32 @llvm.ctpop.i32(i32 %1110)
  %1112 = trunc i32 %1111 to i8
  %1113 = and i8 %1112, 1
  %1114 = xor i8 %1113, 1
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1114, i8* %1115, align 1
  %1116 = icmp eq i32 %1108, 0
  %1117 = zext i1 %1116 to i8
  %1118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1117, i8* %1118, align 1
  %1119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1119, align 1
  %1120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1120, align 1
  %1121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1121, align 1
  store %struct.Memory* %loadMem_44a7d4, %struct.Memory** %MEMORY
  %loadMem_44a7d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1123 = getelementptr inbounds %struct.GPR, %struct.GPR* %1122, i32 0, i32 33
  %1124 = getelementptr inbounds %struct.Reg, %struct.Reg* %1123, i32 0, i32 0
  %PC.i1431 = bitcast %union.anon* %1124 to i64*
  %1125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1126 = getelementptr inbounds %struct.GPR, %struct.GPR* %1125, i32 0, i32 1
  %1127 = getelementptr inbounds %struct.Reg, %struct.Reg* %1126, i32 0, i32 0
  %EAX.i1432 = bitcast %union.anon* %1127 to i32*
  %1128 = load i32, i32* %EAX.i1432
  %1129 = zext i32 %1128 to i64
  %1130 = load i64, i64* %PC.i1431
  %1131 = add i64 %1130, 3
  store i64 %1131, i64* %PC.i1431
  %1132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1132, align 1
  %1133 = and i32 %1128, 255
  %1134 = call i32 @llvm.ctpop.i32(i32 %1133)
  %1135 = trunc i32 %1134 to i8
  %1136 = and i8 %1135, 1
  %1137 = xor i8 %1136, 1
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1137, i8* %1138, align 1
  %1139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1139, align 1
  %1140 = icmp eq i32 %1128, 0
  %1141 = zext i1 %1140 to i8
  %1142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1141, i8* %1142, align 1
  %1143 = lshr i32 %1128, 31
  %1144 = trunc i32 %1143 to i8
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1144, i8* %1145, align 1
  %1146 = lshr i32 %1128, 31
  %1147 = xor i32 %1143, %1146
  %1148 = add i32 %1147, %1146
  %1149 = icmp eq i32 %1148, 2
  %1150 = zext i1 %1149 to i8
  %1151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1150, i8* %1151, align 1
  store %struct.Memory* %loadMem_44a7d7, %struct.Memory** %MEMORY
  %loadMem_44a7da = load %struct.Memory*, %struct.Memory** %MEMORY
  %1152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1153 = getelementptr inbounds %struct.GPR, %struct.GPR* %1152, i32 0, i32 33
  %1154 = getelementptr inbounds %struct.Reg, %struct.Reg* %1153, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %1154 to i64*
  %1155 = load i64, i64* %PC.i1430
  %1156 = add i64 %1155, 53
  %1157 = load i64, i64* %PC.i1430
  %1158 = add i64 %1157, 6
  %1159 = load i64, i64* %PC.i1430
  %1160 = add i64 %1159, 6
  store i64 %1160, i64* %PC.i1430
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1162 = load i8, i8* %1161, align 1
  %1163 = icmp eq i8 %1162, 0
  %1164 = zext i1 %1163 to i8
  store i8 %1164, i8* %BRANCH_TAKEN, align 1
  %1165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1166 = select i1 %1163, i64 %1156, i64 %1158
  store i64 %1166, i64* %1165, align 8
  store %struct.Memory* %loadMem_44a7da, %struct.Memory** %MEMORY
  %loadBr_44a7da = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a7da = icmp eq i8 %loadBr_44a7da, 1
  br i1 %cmpBr_44a7da, label %block_.L_44a80f, label %block_44a7e0

block_44a7e0:                                     ; preds = %block_44a7d1
  %loadMem_44a7e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1168 = getelementptr inbounds %struct.GPR, %struct.GPR* %1167, i32 0, i32 33
  %1169 = getelementptr inbounds %struct.Reg, %struct.Reg* %1168, i32 0, i32 0
  %PC.i1427 = bitcast %union.anon* %1169 to i64*
  %1170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1171 = getelementptr inbounds %struct.GPR, %struct.GPR* %1170, i32 0, i32 1
  %1172 = getelementptr inbounds %struct.Reg, %struct.Reg* %1171, i32 0, i32 0
  %RAX.i1428 = bitcast %union.anon* %1172 to i64*
  %1173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1174 = getelementptr inbounds %struct.GPR, %struct.GPR* %1173, i32 0, i32 15
  %1175 = getelementptr inbounds %struct.Reg, %struct.Reg* %1174, i32 0, i32 0
  %RBP.i1429 = bitcast %union.anon* %1175 to i64*
  %1176 = load i64, i64* %RBP.i1429
  %1177 = sub i64 %1176, 32
  %1178 = load i64, i64* %PC.i1427
  %1179 = add i64 %1178, 4
  store i64 %1179, i64* %PC.i1427
  %1180 = inttoptr i64 %1177 to i64*
  %1181 = load i64, i64* %1180
  store i64 %1181, i64* %RAX.i1428, align 8
  store %struct.Memory* %loadMem_44a7e0, %struct.Memory** %MEMORY
  %loadMem_44a7e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1183 = getelementptr inbounds %struct.GPR, %struct.GPR* %1182, i32 0, i32 33
  %1184 = getelementptr inbounds %struct.Reg, %struct.Reg* %1183, i32 0, i32 0
  %PC.i1424 = bitcast %union.anon* %1184 to i64*
  %1185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1186 = getelementptr inbounds %struct.GPR, %struct.GPR* %1185, i32 0, i32 1
  %1187 = getelementptr inbounds %struct.Reg, %struct.Reg* %1186, i32 0, i32 0
  %RAX.i1425 = bitcast %union.anon* %1187 to i64*
  %1188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1189 = getelementptr inbounds %struct.GPR, %struct.GPR* %1188, i32 0, i32 5
  %1190 = getelementptr inbounds %struct.Reg, %struct.Reg* %1189, i32 0, i32 0
  %RCX.i1426 = bitcast %union.anon* %1190 to i64*
  %1191 = load i64, i64* %RAX.i1425
  %1192 = add i64 %1191, 548
  %1193 = load i64, i64* %PC.i1424
  %1194 = add i64 %1193, 6
  store i64 %1194, i64* %PC.i1424
  %1195 = inttoptr i64 %1192 to i32*
  %1196 = load i32, i32* %1195
  %1197 = zext i32 %1196 to i64
  store i64 %1197, i64* %RCX.i1426, align 8
  store %struct.Memory* %loadMem_44a7e4, %struct.Memory** %MEMORY
  %loadMem_44a7ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %1198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1199 = getelementptr inbounds %struct.GPR, %struct.GPR* %1198, i32 0, i32 33
  %1200 = getelementptr inbounds %struct.Reg, %struct.Reg* %1199, i32 0, i32 0
  %PC.i1422 = bitcast %union.anon* %1200 to i64*
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1202 = getelementptr inbounds %struct.GPR, %struct.GPR* %1201, i32 0, i32 5
  %1203 = getelementptr inbounds %struct.Reg, %struct.Reg* %1202, i32 0, i32 0
  %RCX.i1423 = bitcast %union.anon* %1203 to i64*
  %1204 = load i64, i64* %RCX.i1423
  %1205 = load i64, i64* %PC.i1422
  %1206 = add i64 %1205, 3
  store i64 %1206, i64* %PC.i1422
  %1207 = trunc i64 %1204 to i32
  %1208 = add i32 1, %1207
  %1209 = zext i32 %1208 to i64
  store i64 %1209, i64* %RCX.i1423, align 8
  %1210 = icmp ult i32 %1208, %1207
  %1211 = icmp ult i32 %1208, 1
  %1212 = or i1 %1210, %1211
  %1213 = zext i1 %1212 to i8
  %1214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1213, i8* %1214, align 1
  %1215 = and i32 %1208, 255
  %1216 = call i32 @llvm.ctpop.i32(i32 %1215)
  %1217 = trunc i32 %1216 to i8
  %1218 = and i8 %1217, 1
  %1219 = xor i8 %1218, 1
  %1220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1219, i8* %1220, align 1
  %1221 = xor i64 1, %1204
  %1222 = trunc i64 %1221 to i32
  %1223 = xor i32 %1222, %1208
  %1224 = lshr i32 %1223, 4
  %1225 = trunc i32 %1224 to i8
  %1226 = and i8 %1225, 1
  %1227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1226, i8* %1227, align 1
  %1228 = icmp eq i32 %1208, 0
  %1229 = zext i1 %1228 to i8
  %1230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1229, i8* %1230, align 1
  %1231 = lshr i32 %1208, 31
  %1232 = trunc i32 %1231 to i8
  %1233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1232, i8* %1233, align 1
  %1234 = lshr i32 %1207, 31
  %1235 = xor i32 %1231, %1234
  %1236 = add i32 %1235, %1231
  %1237 = icmp eq i32 %1236, 2
  %1238 = zext i1 %1237 to i8
  %1239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1238, i8* %1239, align 1
  store %struct.Memory* %loadMem_44a7ea, %struct.Memory** %MEMORY
  %loadMem_44a7ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1241 = getelementptr inbounds %struct.GPR, %struct.GPR* %1240, i32 0, i32 33
  %1242 = getelementptr inbounds %struct.Reg, %struct.Reg* %1241, i32 0, i32 0
  %PC.i1419 = bitcast %union.anon* %1242 to i64*
  %1243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1244 = getelementptr inbounds %struct.GPR, %struct.GPR* %1243, i32 0, i32 1
  %1245 = getelementptr inbounds %struct.Reg, %struct.Reg* %1244, i32 0, i32 0
  %RAX.i1420 = bitcast %union.anon* %1245 to i64*
  %1246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1247 = getelementptr inbounds %struct.GPR, %struct.GPR* %1246, i32 0, i32 15
  %1248 = getelementptr inbounds %struct.Reg, %struct.Reg* %1247, i32 0, i32 0
  %RBP.i1421 = bitcast %union.anon* %1248 to i64*
  %1249 = load i64, i64* %RBP.i1421
  %1250 = sub i64 %1249, 24
  %1251 = load i64, i64* %PC.i1419
  %1252 = add i64 %1251, 4
  store i64 %1252, i64* %PC.i1419
  %1253 = inttoptr i64 %1250 to i64*
  %1254 = load i64, i64* %1253
  store i64 %1254, i64* %RAX.i1420, align 8
  store %struct.Memory* %loadMem_44a7ed, %struct.Memory** %MEMORY
  %loadMem_44a7f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1256 = getelementptr inbounds %struct.GPR, %struct.GPR* %1255, i32 0, i32 33
  %1257 = getelementptr inbounds %struct.Reg, %struct.Reg* %1256, i32 0, i32 0
  %PC.i1416 = bitcast %union.anon* %1257 to i64*
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1259 = getelementptr inbounds %struct.GPR, %struct.GPR* %1258, i32 0, i32 5
  %1260 = getelementptr inbounds %struct.Reg, %struct.Reg* %1259, i32 0, i32 0
  %ECX.i1417 = bitcast %union.anon* %1260 to i32*
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1262 = getelementptr inbounds %struct.GPR, %struct.GPR* %1261, i32 0, i32 1
  %1263 = getelementptr inbounds %struct.Reg, %struct.Reg* %1262, i32 0, i32 0
  %RAX.i1418 = bitcast %union.anon* %1263 to i64*
  %1264 = load i64, i64* %RAX.i1418
  %1265 = add i64 %1264, 4
  %1266 = load i32, i32* %ECX.i1417
  %1267 = zext i32 %1266 to i64
  %1268 = load i64, i64* %PC.i1416
  %1269 = add i64 %1268, 3
  store i64 %1269, i64* %PC.i1416
  %1270 = inttoptr i64 %1265 to i32*
  store i32 %1266, i32* %1270
  store %struct.Memory* %loadMem_44a7f1, %struct.Memory** %MEMORY
  %loadMem_44a7f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1272 = getelementptr inbounds %struct.GPR, %struct.GPR* %1271, i32 0, i32 33
  %1273 = getelementptr inbounds %struct.Reg, %struct.Reg* %1272, i32 0, i32 0
  %PC.i1413 = bitcast %union.anon* %1273 to i64*
  %1274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1275 = getelementptr inbounds %struct.GPR, %struct.GPR* %1274, i32 0, i32 1
  %1276 = getelementptr inbounds %struct.Reg, %struct.Reg* %1275, i32 0, i32 0
  %RAX.i1414 = bitcast %union.anon* %1276 to i64*
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1278 = getelementptr inbounds %struct.GPR, %struct.GPR* %1277, i32 0, i32 15
  %1279 = getelementptr inbounds %struct.Reg, %struct.Reg* %1278, i32 0, i32 0
  %RBP.i1415 = bitcast %union.anon* %1279 to i64*
  %1280 = load i64, i64* %RBP.i1415
  %1281 = sub i64 %1280, 32
  %1282 = load i64, i64* %PC.i1413
  %1283 = add i64 %1282, 4
  store i64 %1283, i64* %PC.i1413
  %1284 = inttoptr i64 %1281 to i64*
  %1285 = load i64, i64* %1284
  store i64 %1285, i64* %RAX.i1414, align 8
  store %struct.Memory* %loadMem_44a7f4, %struct.Memory** %MEMORY
  %loadMem_44a7f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1287 = getelementptr inbounds %struct.GPR, %struct.GPR* %1286, i32 0, i32 33
  %1288 = getelementptr inbounds %struct.Reg, %struct.Reg* %1287, i32 0, i32 0
  %PC.i1410 = bitcast %union.anon* %1288 to i64*
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1290 = getelementptr inbounds %struct.GPR, %struct.GPR* %1289, i32 0, i32 1
  %1291 = getelementptr inbounds %struct.Reg, %struct.Reg* %1290, i32 0, i32 0
  %RAX.i1411 = bitcast %union.anon* %1291 to i64*
  %1292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1293 = getelementptr inbounds %struct.GPR, %struct.GPR* %1292, i32 0, i32 5
  %1294 = getelementptr inbounds %struct.Reg, %struct.Reg* %1293, i32 0, i32 0
  %RCX.i1412 = bitcast %union.anon* %1294 to i64*
  %1295 = load i64, i64* %RAX.i1411
  %1296 = add i64 %1295, 564
  %1297 = load i64, i64* %PC.i1410
  %1298 = add i64 %1297, 6
  store i64 %1298, i64* %PC.i1410
  %1299 = inttoptr i64 %1296 to i32*
  %1300 = load i32, i32* %1299
  %1301 = zext i32 %1300 to i64
  store i64 %1301, i64* %RCX.i1412, align 8
  store %struct.Memory* %loadMem_44a7f8, %struct.Memory** %MEMORY
  %loadMem_44a7fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1303 = getelementptr inbounds %struct.GPR, %struct.GPR* %1302, i32 0, i32 33
  %1304 = getelementptr inbounds %struct.Reg, %struct.Reg* %1303, i32 0, i32 0
  %PC.i1407 = bitcast %union.anon* %1304 to i64*
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1306 = getelementptr inbounds %struct.GPR, %struct.GPR* %1305, i32 0, i32 1
  %1307 = getelementptr inbounds %struct.Reg, %struct.Reg* %1306, i32 0, i32 0
  %RAX.i1408 = bitcast %union.anon* %1307 to i64*
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1309 = getelementptr inbounds %struct.GPR, %struct.GPR* %1308, i32 0, i32 15
  %1310 = getelementptr inbounds %struct.Reg, %struct.Reg* %1309, i32 0, i32 0
  %RBP.i1409 = bitcast %union.anon* %1310 to i64*
  %1311 = load i64, i64* %RBP.i1409
  %1312 = sub i64 %1311, 24
  %1313 = load i64, i64* %PC.i1407
  %1314 = add i64 %1313, 4
  store i64 %1314, i64* %PC.i1407
  %1315 = inttoptr i64 %1312 to i64*
  %1316 = load i64, i64* %1315
  store i64 %1316, i64* %RAX.i1408, align 8
  store %struct.Memory* %loadMem_44a7fe, %struct.Memory** %MEMORY
  %loadMem_44a802 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1318 = getelementptr inbounds %struct.GPR, %struct.GPR* %1317, i32 0, i32 33
  %1319 = getelementptr inbounds %struct.Reg, %struct.Reg* %1318, i32 0, i32 0
  %PC.i1404 = bitcast %union.anon* %1319 to i64*
  %1320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1321 = getelementptr inbounds %struct.GPR, %struct.GPR* %1320, i32 0, i32 5
  %1322 = getelementptr inbounds %struct.Reg, %struct.Reg* %1321, i32 0, i32 0
  %ECX.i1405 = bitcast %union.anon* %1322 to i32*
  %1323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1324 = getelementptr inbounds %struct.GPR, %struct.GPR* %1323, i32 0, i32 1
  %1325 = getelementptr inbounds %struct.Reg, %struct.Reg* %1324, i32 0, i32 0
  %RAX.i1406 = bitcast %union.anon* %1325 to i64*
  %1326 = load i64, i64* %RAX.i1406
  %1327 = load i32, i32* %ECX.i1405
  %1328 = zext i32 %1327 to i64
  %1329 = load i64, i64* %PC.i1404
  %1330 = add i64 %1329, 2
  store i64 %1330, i64* %PC.i1404
  %1331 = inttoptr i64 %1326 to i32*
  store i32 %1327, i32* %1331
  store %struct.Memory* %loadMem_44a802, %struct.Memory** %MEMORY
  %loadMem_44a804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1333 = getelementptr inbounds %struct.GPR, %struct.GPR* %1332, i32 0, i32 33
  %1334 = getelementptr inbounds %struct.Reg, %struct.Reg* %1333, i32 0, i32 0
  %PC.i1401 = bitcast %union.anon* %1334 to i64*
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1336 = getelementptr inbounds %struct.GPR, %struct.GPR* %1335, i32 0, i32 5
  %1337 = getelementptr inbounds %struct.Reg, %struct.Reg* %1336, i32 0, i32 0
  %RCX.i1402 = bitcast %union.anon* %1337 to i64*
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1339 = getelementptr inbounds %struct.GPR, %struct.GPR* %1338, i32 0, i32 15
  %1340 = getelementptr inbounds %struct.Reg, %struct.Reg* %1339, i32 0, i32 0
  %RBP.i1403 = bitcast %union.anon* %1340 to i64*
  %1341 = load i64, i64* %RBP.i1403
  %1342 = sub i64 %1341, 12
  %1343 = load i64, i64* %PC.i1401
  %1344 = add i64 %1343, 3
  store i64 %1344, i64* %PC.i1401
  %1345 = inttoptr i64 %1342 to i32*
  %1346 = load i32, i32* %1345
  %1347 = zext i32 %1346 to i64
  store i64 %1347, i64* %RCX.i1402, align 8
  store %struct.Memory* %loadMem_44a804, %struct.Memory** %MEMORY
  %loadMem_44a807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1349 = getelementptr inbounds %struct.GPR, %struct.GPR* %1348, i32 0, i32 33
  %1350 = getelementptr inbounds %struct.Reg, %struct.Reg* %1349, i32 0, i32 0
  %PC.i1398 = bitcast %union.anon* %1350 to i64*
  %1351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1352 = getelementptr inbounds %struct.GPR, %struct.GPR* %1351, i32 0, i32 5
  %1353 = getelementptr inbounds %struct.Reg, %struct.Reg* %1352, i32 0, i32 0
  %ECX.i1399 = bitcast %union.anon* %1353 to i32*
  %1354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1355 = getelementptr inbounds %struct.GPR, %struct.GPR* %1354, i32 0, i32 15
  %1356 = getelementptr inbounds %struct.Reg, %struct.Reg* %1355, i32 0, i32 0
  %RBP.i1400 = bitcast %union.anon* %1356 to i64*
  %1357 = load i64, i64* %RBP.i1400
  %1358 = sub i64 %1357, 44
  %1359 = load i32, i32* %ECX.i1399
  %1360 = zext i32 %1359 to i64
  %1361 = load i64, i64* %PC.i1398
  %1362 = add i64 %1361, 3
  store i64 %1362, i64* %PC.i1398
  %1363 = inttoptr i64 %1358 to i32*
  store i32 %1359, i32* %1363
  store %struct.Memory* %loadMem_44a807, %struct.Memory** %MEMORY
  %loadMem_44a80a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1365 = getelementptr inbounds %struct.GPR, %struct.GPR* %1364, i32 0, i32 33
  %1366 = getelementptr inbounds %struct.Reg, %struct.Reg* %1365, i32 0, i32 0
  %PC.i1397 = bitcast %union.anon* %1366 to i64*
  %1367 = load i64, i64* %PC.i1397
  %1368 = add i64 %1367, 150
  %1369 = load i64, i64* %PC.i1397
  %1370 = add i64 %1369, 5
  store i64 %1370, i64* %PC.i1397
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1368, i64* %1371, align 8
  store %struct.Memory* %loadMem_44a80a, %struct.Memory** %MEMORY
  br label %block_.L_44a8a0

block_.L_44a80f:                                  ; preds = %block_44a7d1
  %loadMem_44a80f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1373 = getelementptr inbounds %struct.GPR, %struct.GPR* %1372, i32 0, i32 33
  %1374 = getelementptr inbounds %struct.Reg, %struct.Reg* %1373, i32 0, i32 0
  %PC.i1394 = bitcast %union.anon* %1374 to i64*
  %1375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1376 = getelementptr inbounds %struct.GPR, %struct.GPR* %1375, i32 0, i32 1
  %1377 = getelementptr inbounds %struct.Reg, %struct.Reg* %1376, i32 0, i32 0
  %RAX.i1395 = bitcast %union.anon* %1377 to i64*
  %1378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1379 = getelementptr inbounds %struct.GPR, %struct.GPR* %1378, i32 0, i32 15
  %1380 = getelementptr inbounds %struct.Reg, %struct.Reg* %1379, i32 0, i32 0
  %RBP.i1396 = bitcast %union.anon* %1380 to i64*
  %1381 = load i64, i64* %RBP.i1396
  %1382 = sub i64 %1381, 32
  %1383 = load i64, i64* %PC.i1394
  %1384 = add i64 %1383, 4
  store i64 %1384, i64* %PC.i1394
  %1385 = inttoptr i64 %1382 to i64*
  %1386 = load i64, i64* %1385
  store i64 %1386, i64* %RAX.i1395, align 8
  store %struct.Memory* %loadMem_44a80f, %struct.Memory** %MEMORY
  %loadMem_44a813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1388 = getelementptr inbounds %struct.GPR, %struct.GPR* %1387, i32 0, i32 33
  %1389 = getelementptr inbounds %struct.Reg, %struct.Reg* %1388, i32 0, i32 0
  %PC.i1391 = bitcast %union.anon* %1389 to i64*
  %1390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1391 = getelementptr inbounds %struct.GPR, %struct.GPR* %1390, i32 0, i32 1
  %1392 = getelementptr inbounds %struct.Reg, %struct.Reg* %1391, i32 0, i32 0
  %RAX.i1392 = bitcast %union.anon* %1392 to i64*
  %1393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1394 = getelementptr inbounds %struct.GPR, %struct.GPR* %1393, i32 0, i32 5
  %1395 = getelementptr inbounds %struct.Reg, %struct.Reg* %1394, i32 0, i32 0
  %RCX.i1393 = bitcast %union.anon* %1395 to i64*
  %1396 = load i64, i64* %RAX.i1392
  %1397 = add i64 %1396, 536
  %1398 = load i64, i64* %PC.i1391
  %1399 = add i64 %1398, 6
  store i64 %1399, i64* %PC.i1391
  %1400 = inttoptr i64 %1397 to i32*
  %1401 = load i32, i32* %1400
  %1402 = zext i32 %1401 to i64
  store i64 %1402, i64* %RCX.i1393, align 8
  store %struct.Memory* %loadMem_44a813, %struct.Memory** %MEMORY
  %loadMem_44a819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1404 = getelementptr inbounds %struct.GPR, %struct.GPR* %1403, i32 0, i32 33
  %1405 = getelementptr inbounds %struct.Reg, %struct.Reg* %1404, i32 0, i32 0
  %PC.i1388 = bitcast %union.anon* %1405 to i64*
  %1406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1407 = getelementptr inbounds %struct.GPR, %struct.GPR* %1406, i32 0, i32 1
  %1408 = getelementptr inbounds %struct.Reg, %struct.Reg* %1407, i32 0, i32 0
  %RAX.i1389 = bitcast %union.anon* %1408 to i64*
  %1409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1410 = getelementptr inbounds %struct.GPR, %struct.GPR* %1409, i32 0, i32 15
  %1411 = getelementptr inbounds %struct.Reg, %struct.Reg* %1410, i32 0, i32 0
  %RBP.i1390 = bitcast %union.anon* %1411 to i64*
  %1412 = load i64, i64* %RBP.i1390
  %1413 = sub i64 %1412, 24
  %1414 = load i64, i64* %PC.i1388
  %1415 = add i64 %1414, 4
  store i64 %1415, i64* %PC.i1388
  %1416 = inttoptr i64 %1413 to i64*
  %1417 = load i64, i64* %1416
  store i64 %1417, i64* %RAX.i1389, align 8
  store %struct.Memory* %loadMem_44a819, %struct.Memory** %MEMORY
  %loadMem_44a81d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1419 = getelementptr inbounds %struct.GPR, %struct.GPR* %1418, i32 0, i32 33
  %1420 = getelementptr inbounds %struct.Reg, %struct.Reg* %1419, i32 0, i32 0
  %PC.i1385 = bitcast %union.anon* %1420 to i64*
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1422 = getelementptr inbounds %struct.GPR, %struct.GPR* %1421, i32 0, i32 5
  %1423 = getelementptr inbounds %struct.Reg, %struct.Reg* %1422, i32 0, i32 0
  %ECX.i1386 = bitcast %union.anon* %1423 to i32*
  %1424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1425 = getelementptr inbounds %struct.GPR, %struct.GPR* %1424, i32 0, i32 1
  %1426 = getelementptr inbounds %struct.Reg, %struct.Reg* %1425, i32 0, i32 0
  %RAX.i1387 = bitcast %union.anon* %1426 to i64*
  %1427 = load i64, i64* %RAX.i1387
  %1428 = add i64 %1427, 4
  %1429 = load i32, i32* %ECX.i1386
  %1430 = zext i32 %1429 to i64
  %1431 = load i64, i64* %PC.i1385
  %1432 = add i64 %1431, 3
  store i64 %1432, i64* %PC.i1385
  %1433 = inttoptr i64 %1428 to i32*
  store i32 %1429, i32* %1433
  store %struct.Memory* %loadMem_44a81d, %struct.Memory** %MEMORY
  %loadMem_44a820 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1435 = getelementptr inbounds %struct.GPR, %struct.GPR* %1434, i32 0, i32 33
  %1436 = getelementptr inbounds %struct.Reg, %struct.Reg* %1435, i32 0, i32 0
  %PC.i1382 = bitcast %union.anon* %1436 to i64*
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1438 = getelementptr inbounds %struct.GPR, %struct.GPR* %1437, i32 0, i32 1
  %1439 = getelementptr inbounds %struct.Reg, %struct.Reg* %1438, i32 0, i32 0
  %RAX.i1383 = bitcast %union.anon* %1439 to i64*
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1441 = getelementptr inbounds %struct.GPR, %struct.GPR* %1440, i32 0, i32 15
  %1442 = getelementptr inbounds %struct.Reg, %struct.Reg* %1441, i32 0, i32 0
  %RBP.i1384 = bitcast %union.anon* %1442 to i64*
  %1443 = load i64, i64* %RBP.i1384
  %1444 = sub i64 %1443, 32
  %1445 = load i64, i64* %PC.i1382
  %1446 = add i64 %1445, 4
  store i64 %1446, i64* %PC.i1382
  %1447 = inttoptr i64 %1444 to i64*
  %1448 = load i64, i64* %1447
  store i64 %1448, i64* %RAX.i1383, align 8
  store %struct.Memory* %loadMem_44a820, %struct.Memory** %MEMORY
  %loadMem_44a824 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1450 = getelementptr inbounds %struct.GPR, %struct.GPR* %1449, i32 0, i32 33
  %1451 = getelementptr inbounds %struct.Reg, %struct.Reg* %1450, i32 0, i32 0
  %PC.i1379 = bitcast %union.anon* %1451 to i64*
  %1452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1453 = getelementptr inbounds %struct.GPR, %struct.GPR* %1452, i32 0, i32 1
  %1454 = getelementptr inbounds %struct.Reg, %struct.Reg* %1453, i32 0, i32 0
  %RAX.i1380 = bitcast %union.anon* %1454 to i64*
  %1455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1456 = getelementptr inbounds %struct.GPR, %struct.GPR* %1455, i32 0, i32 5
  %1457 = getelementptr inbounds %struct.Reg, %struct.Reg* %1456, i32 0, i32 0
  %RCX.i1381 = bitcast %union.anon* %1457 to i64*
  %1458 = load i64, i64* %RAX.i1380
  %1459 = add i64 %1458, 552
  %1460 = load i64, i64* %PC.i1379
  %1461 = add i64 %1460, 6
  store i64 %1461, i64* %PC.i1379
  %1462 = inttoptr i64 %1459 to i32*
  %1463 = load i32, i32* %1462
  %1464 = zext i32 %1463 to i64
  store i64 %1464, i64* %RCX.i1381, align 8
  store %struct.Memory* %loadMem_44a824, %struct.Memory** %MEMORY
  %loadMem_44a82a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1466 = getelementptr inbounds %struct.GPR, %struct.GPR* %1465, i32 0, i32 33
  %1467 = getelementptr inbounds %struct.Reg, %struct.Reg* %1466, i32 0, i32 0
  %PC.i1376 = bitcast %union.anon* %1467 to i64*
  %1468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1469 = getelementptr inbounds %struct.GPR, %struct.GPR* %1468, i32 0, i32 1
  %1470 = getelementptr inbounds %struct.Reg, %struct.Reg* %1469, i32 0, i32 0
  %RAX.i1377 = bitcast %union.anon* %1470 to i64*
  %1471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1472 = getelementptr inbounds %struct.GPR, %struct.GPR* %1471, i32 0, i32 15
  %1473 = getelementptr inbounds %struct.Reg, %struct.Reg* %1472, i32 0, i32 0
  %RBP.i1378 = bitcast %union.anon* %1473 to i64*
  %1474 = load i64, i64* %RBP.i1378
  %1475 = sub i64 %1474, 24
  %1476 = load i64, i64* %PC.i1376
  %1477 = add i64 %1476, 4
  store i64 %1477, i64* %PC.i1376
  %1478 = inttoptr i64 %1475 to i64*
  %1479 = load i64, i64* %1478
  store i64 %1479, i64* %RAX.i1377, align 8
  store %struct.Memory* %loadMem_44a82a, %struct.Memory** %MEMORY
  %loadMem_44a82e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1481 = getelementptr inbounds %struct.GPR, %struct.GPR* %1480, i32 0, i32 33
  %1482 = getelementptr inbounds %struct.Reg, %struct.Reg* %1481, i32 0, i32 0
  %PC.i1373 = bitcast %union.anon* %1482 to i64*
  %1483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1484 = getelementptr inbounds %struct.GPR, %struct.GPR* %1483, i32 0, i32 5
  %1485 = getelementptr inbounds %struct.Reg, %struct.Reg* %1484, i32 0, i32 0
  %ECX.i1374 = bitcast %union.anon* %1485 to i32*
  %1486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1487 = getelementptr inbounds %struct.GPR, %struct.GPR* %1486, i32 0, i32 1
  %1488 = getelementptr inbounds %struct.Reg, %struct.Reg* %1487, i32 0, i32 0
  %RAX.i1375 = bitcast %union.anon* %1488 to i64*
  %1489 = load i64, i64* %RAX.i1375
  %1490 = load i32, i32* %ECX.i1374
  %1491 = zext i32 %1490 to i64
  %1492 = load i64, i64* %PC.i1373
  %1493 = add i64 %1492, 2
  store i64 %1493, i64* %PC.i1373
  %1494 = inttoptr i64 %1489 to i32*
  store i32 %1490, i32* %1494
  store %struct.Memory* %loadMem_44a82e, %struct.Memory** %MEMORY
  %loadMem_44a830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1496 = getelementptr inbounds %struct.GPR, %struct.GPR* %1495, i32 0, i32 33
  %1497 = getelementptr inbounds %struct.Reg, %struct.Reg* %1496, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %1497 to i64*
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1499 = getelementptr inbounds %struct.GPR, %struct.GPR* %1498, i32 0, i32 1
  %1500 = getelementptr inbounds %struct.Reg, %struct.Reg* %1499, i32 0, i32 0
  %RAX.i1371 = bitcast %union.anon* %1500 to i64*
  %1501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1502 = getelementptr inbounds %struct.GPR, %struct.GPR* %1501, i32 0, i32 15
  %1503 = getelementptr inbounds %struct.Reg, %struct.Reg* %1502, i32 0, i32 0
  %RBP.i1372 = bitcast %union.anon* %1503 to i64*
  %1504 = load i64, i64* %RBP.i1372
  %1505 = sub i64 %1504, 32
  %1506 = load i64, i64* %PC.i1370
  %1507 = add i64 %1506, 4
  store i64 %1507, i64* %PC.i1370
  %1508 = inttoptr i64 %1505 to i64*
  %1509 = load i64, i64* %1508
  store i64 %1509, i64* %RAX.i1371, align 8
  store %struct.Memory* %loadMem_44a830, %struct.Memory** %MEMORY
  %loadMem_44a834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1511 = getelementptr inbounds %struct.GPR, %struct.GPR* %1510, i32 0, i32 33
  %1512 = getelementptr inbounds %struct.Reg, %struct.Reg* %1511, i32 0, i32 0
  %PC.i1368 = bitcast %union.anon* %1512 to i64*
  %1513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1514 = getelementptr inbounds %struct.GPR, %struct.GPR* %1513, i32 0, i32 1
  %1515 = getelementptr inbounds %struct.Reg, %struct.Reg* %1514, i32 0, i32 0
  %RAX.i1369 = bitcast %union.anon* %1515 to i64*
  %1516 = load i64, i64* %RAX.i1369
  %1517 = add i64 %1516, 552
  %1518 = load i64, i64* %PC.i1368
  %1519 = add i64 %1518, 7
  store i64 %1519, i64* %PC.i1368
  %1520 = inttoptr i64 %1517 to i32*
  %1521 = load i32, i32* %1520
  %1522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1522, align 1
  %1523 = and i32 %1521, 255
  %1524 = call i32 @llvm.ctpop.i32(i32 %1523)
  %1525 = trunc i32 %1524 to i8
  %1526 = and i8 %1525, 1
  %1527 = xor i8 %1526, 1
  %1528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1527, i8* %1528, align 1
  %1529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1529, align 1
  %1530 = icmp eq i32 %1521, 0
  %1531 = zext i1 %1530 to i8
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1531, i8* %1532, align 1
  %1533 = lshr i32 %1521, 31
  %1534 = trunc i32 %1533 to i8
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1534, i8* %1535, align 1
  %1536 = lshr i32 %1521, 31
  %1537 = xor i32 %1533, %1536
  %1538 = add i32 %1537, %1536
  %1539 = icmp eq i32 %1538, 2
  %1540 = zext i1 %1539 to i8
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1540, i8* %1541, align 1
  store %struct.Memory* %loadMem_44a834, %struct.Memory** %MEMORY
  %loadMem_44a83b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1543 = getelementptr inbounds %struct.GPR, %struct.GPR* %1542, i32 0, i32 33
  %1544 = getelementptr inbounds %struct.Reg, %struct.Reg* %1543, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %1544 to i64*
  %1545 = load i64, i64* %PC.i1367
  %1546 = add i64 %1545, 96
  %1547 = load i64, i64* %PC.i1367
  %1548 = add i64 %1547, 6
  %1549 = load i64, i64* %PC.i1367
  %1550 = add i64 %1549, 6
  store i64 %1550, i64* %PC.i1367
  %1551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1552 = load i8, i8* %1551, align 1
  store i8 %1552, i8* %BRANCH_TAKEN, align 1
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1554 = icmp ne i8 %1552, 0
  %1555 = select i1 %1554, i64 %1546, i64 %1548
  store i64 %1555, i64* %1553, align 8
  store %struct.Memory* %loadMem_44a83b, %struct.Memory** %MEMORY
  %loadBr_44a83b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a83b = icmp eq i8 %loadBr_44a83b, 1
  br i1 %cmpBr_44a83b, label %block_.L_44a89b, label %block_44a841

block_44a841:                                     ; preds = %block_.L_44a80f
  %loadMem_44a841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1557 = getelementptr inbounds %struct.GPR, %struct.GPR* %1556, i32 0, i32 33
  %1558 = getelementptr inbounds %struct.Reg, %struct.Reg* %1557, i32 0, i32 0
  %PC.i1365 = bitcast %union.anon* %1558 to i64*
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1560 = getelementptr inbounds %struct.GPR, %struct.GPR* %1559, i32 0, i32 1
  %1561 = getelementptr inbounds %struct.Reg, %struct.Reg* %1560, i32 0, i32 0
  %RAX.i1366 = bitcast %union.anon* %1561 to i64*
  %1562 = load i64, i64* %PC.i1365
  %1563 = add i64 %1562, 8
  store i64 %1563, i64* %PC.i1365
  %1564 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1564, i64* %RAX.i1366, align 8
  store %struct.Memory* %loadMem_44a841, %struct.Memory** %MEMORY
  %loadMem_44a849 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1566 = getelementptr inbounds %struct.GPR, %struct.GPR* %1565, i32 0, i32 33
  %1567 = getelementptr inbounds %struct.Reg, %struct.Reg* %1566, i32 0, i32 0
  %PC.i1363 = bitcast %union.anon* %1567 to i64*
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1569 = getelementptr inbounds %struct.GPR, %struct.GPR* %1568, i32 0, i32 1
  %1570 = getelementptr inbounds %struct.Reg, %struct.Reg* %1569, i32 0, i32 0
  %RAX.i1364 = bitcast %union.anon* %1570 to i64*
  %1571 = load i64, i64* %RAX.i1364
  %1572 = add i64 %1571, 14168
  %1573 = load i64, i64* %PC.i1363
  %1574 = add i64 %1573, 7
  store i64 %1574, i64* %PC.i1363
  %1575 = inttoptr i64 %1572 to i64*
  %1576 = load i64, i64* %1575
  store i64 %1576, i64* %RAX.i1364, align 8
  store %struct.Memory* %loadMem_44a849, %struct.Memory** %MEMORY
  %loadMem_44a850 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1578 = getelementptr inbounds %struct.GPR, %struct.GPR* %1577, i32 0, i32 33
  %1579 = getelementptr inbounds %struct.Reg, %struct.Reg* %1578, i32 0, i32 0
  %PC.i1360 = bitcast %union.anon* %1579 to i64*
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1581 = getelementptr inbounds %struct.GPR, %struct.GPR* %1580, i32 0, i32 5
  %1582 = getelementptr inbounds %struct.Reg, %struct.Reg* %1581, i32 0, i32 0
  %RCX.i1361 = bitcast %union.anon* %1582 to i64*
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1584 = getelementptr inbounds %struct.GPR, %struct.GPR* %1583, i32 0, i32 15
  %1585 = getelementptr inbounds %struct.Reg, %struct.Reg* %1584, i32 0, i32 0
  %RBP.i1362 = bitcast %union.anon* %1585 to i64*
  %1586 = load i64, i64* %RBP.i1362
  %1587 = sub i64 %1586, 32
  %1588 = load i64, i64* %PC.i1360
  %1589 = add i64 %1588, 4
  store i64 %1589, i64* %PC.i1360
  %1590 = inttoptr i64 %1587 to i64*
  %1591 = load i64, i64* %1590
  store i64 %1591, i64* %RCX.i1361, align 8
  store %struct.Memory* %loadMem_44a850, %struct.Memory** %MEMORY
  %loadMem_44a854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1593 = getelementptr inbounds %struct.GPR, %struct.GPR* %1592, i32 0, i32 33
  %1594 = getelementptr inbounds %struct.Reg, %struct.Reg* %1593, i32 0, i32 0
  %PC.i1358 = bitcast %union.anon* %1594 to i64*
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1596 = getelementptr inbounds %struct.GPR, %struct.GPR* %1595, i32 0, i32 5
  %1597 = getelementptr inbounds %struct.Reg, %struct.Reg* %1596, i32 0, i32 0
  %RCX.i1359 = bitcast %union.anon* %1597 to i64*
  %1598 = load i64, i64* %RCX.i1359
  %1599 = add i64 %1598, 536
  %1600 = load i64, i64* %PC.i1358
  %1601 = add i64 %1600, 7
  store i64 %1601, i64* %PC.i1358
  %1602 = inttoptr i64 %1599 to i32*
  %1603 = load i32, i32* %1602
  %1604 = sext i32 %1603 to i64
  store i64 %1604, i64* %RCX.i1359, align 8
  store %struct.Memory* %loadMem_44a854, %struct.Memory** %MEMORY
  %loadMem_44a85b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1606 = getelementptr inbounds %struct.GPR, %struct.GPR* %1605, i32 0, i32 33
  %1607 = getelementptr inbounds %struct.Reg, %struct.Reg* %1606, i32 0, i32 0
  %PC.i1356 = bitcast %union.anon* %1607 to i64*
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1609 = getelementptr inbounds %struct.GPR, %struct.GPR* %1608, i32 0, i32 5
  %1610 = getelementptr inbounds %struct.Reg, %struct.Reg* %1609, i32 0, i32 0
  %RCX.i1357 = bitcast %union.anon* %1610 to i64*
  %1611 = load i64, i64* %RCX.i1357
  %1612 = load i64, i64* %PC.i1356
  %1613 = add i64 %1612, 7
  store i64 %1613, i64* %PC.i1356
  %1614 = sext i64 %1611 to i128
  %1615 = and i128 %1614, -18446744073709551616
  %1616 = zext i64 %1611 to i128
  %1617 = or i128 %1615, %1616
  %1618 = mul i128 632, %1617
  %1619 = trunc i128 %1618 to i64
  store i64 %1619, i64* %RCX.i1357, align 8
  %1620 = sext i64 %1619 to i128
  %1621 = icmp ne i128 %1620, %1618
  %1622 = zext i1 %1621 to i8
  %1623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1622, i8* %1623, align 1
  %1624 = trunc i128 %1618 to i32
  %1625 = and i32 %1624, 255
  %1626 = call i32 @llvm.ctpop.i32(i32 %1625)
  %1627 = trunc i32 %1626 to i8
  %1628 = and i8 %1627, 1
  %1629 = xor i8 %1628, 1
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1629, i8* %1630, align 1
  %1631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1631, align 1
  %1632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1632, align 1
  %1633 = lshr i64 %1619, 63
  %1634 = trunc i64 %1633 to i8
  %1635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1634, i8* %1635, align 1
  %1636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1622, i8* %1636, align 1
  store %struct.Memory* %loadMem_44a85b, %struct.Memory** %MEMORY
  %loadMem_44a862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1638 = getelementptr inbounds %struct.GPR, %struct.GPR* %1637, i32 0, i32 33
  %1639 = getelementptr inbounds %struct.Reg, %struct.Reg* %1638, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %1639 to i64*
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1641 = getelementptr inbounds %struct.GPR, %struct.GPR* %1640, i32 0, i32 1
  %1642 = getelementptr inbounds %struct.Reg, %struct.Reg* %1641, i32 0, i32 0
  %RAX.i1354 = bitcast %union.anon* %1642 to i64*
  %1643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1644 = getelementptr inbounds %struct.GPR, %struct.GPR* %1643, i32 0, i32 5
  %1645 = getelementptr inbounds %struct.Reg, %struct.Reg* %1644, i32 0, i32 0
  %RCX.i1355 = bitcast %union.anon* %1645 to i64*
  %1646 = load i64, i64* %RAX.i1354
  %1647 = load i64, i64* %RCX.i1355
  %1648 = load i64, i64* %PC.i1353
  %1649 = add i64 %1648, 3
  store i64 %1649, i64* %PC.i1353
  %1650 = add i64 %1647, %1646
  store i64 %1650, i64* %RAX.i1354, align 8
  %1651 = icmp ult i64 %1650, %1646
  %1652 = icmp ult i64 %1650, %1647
  %1653 = or i1 %1651, %1652
  %1654 = zext i1 %1653 to i8
  %1655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1654, i8* %1655, align 1
  %1656 = trunc i64 %1650 to i32
  %1657 = and i32 %1656, 255
  %1658 = call i32 @llvm.ctpop.i32(i32 %1657)
  %1659 = trunc i32 %1658 to i8
  %1660 = and i8 %1659, 1
  %1661 = xor i8 %1660, 1
  %1662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1661, i8* %1662, align 1
  %1663 = xor i64 %1647, %1646
  %1664 = xor i64 %1663, %1650
  %1665 = lshr i64 %1664, 4
  %1666 = trunc i64 %1665 to i8
  %1667 = and i8 %1666, 1
  %1668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1667, i8* %1668, align 1
  %1669 = icmp eq i64 %1650, 0
  %1670 = zext i1 %1669 to i8
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1670, i8* %1671, align 1
  %1672 = lshr i64 %1650, 63
  %1673 = trunc i64 %1672 to i8
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1673, i8* %1674, align 1
  %1675 = lshr i64 %1646, 63
  %1676 = lshr i64 %1647, 63
  %1677 = xor i64 %1672, %1675
  %1678 = xor i64 %1672, %1676
  %1679 = add i64 %1677, %1678
  %1680 = icmp eq i64 %1679, 2
  %1681 = zext i1 %1680 to i8
  %1682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1681, i8* %1682, align 1
  store %struct.Memory* %loadMem_44a862, %struct.Memory** %MEMORY
  %loadMem_44a865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1684 = getelementptr inbounds %struct.GPR, %struct.GPR* %1683, i32 0, i32 33
  %1685 = getelementptr inbounds %struct.Reg, %struct.Reg* %1684, i32 0, i32 0
  %PC.i1351 = bitcast %union.anon* %1685 to i64*
  %1686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1687 = getelementptr inbounds %struct.GPR, %struct.GPR* %1686, i32 0, i32 1
  %1688 = getelementptr inbounds %struct.Reg, %struct.Reg* %1687, i32 0, i32 0
  %RAX.i1352 = bitcast %union.anon* %1688 to i64*
  %1689 = load i64, i64* %RAX.i1352
  %1690 = add i64 %1689, 532
  %1691 = load i64, i64* %PC.i1351
  %1692 = add i64 %1691, 7
  store i64 %1692, i64* %PC.i1351
  %1693 = inttoptr i64 %1690 to i32*
  %1694 = load i32, i32* %1693
  %1695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1695, align 1
  %1696 = and i32 %1694, 255
  %1697 = call i32 @llvm.ctpop.i32(i32 %1696)
  %1698 = trunc i32 %1697 to i8
  %1699 = and i8 %1698, 1
  %1700 = xor i8 %1699, 1
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1700, i8* %1701, align 1
  %1702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1702, align 1
  %1703 = icmp eq i32 %1694, 0
  %1704 = zext i1 %1703 to i8
  %1705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1704, i8* %1705, align 1
  %1706 = lshr i32 %1694, 31
  %1707 = trunc i32 %1706 to i8
  %1708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1707, i8* %1708, align 1
  %1709 = lshr i32 %1694, 31
  %1710 = xor i32 %1706, %1709
  %1711 = add i32 %1710, %1709
  %1712 = icmp eq i32 %1711, 2
  %1713 = zext i1 %1712 to i8
  %1714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1713, i8* %1714, align 1
  store %struct.Memory* %loadMem_44a865, %struct.Memory** %MEMORY
  %loadMem_44a86c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1716 = getelementptr inbounds %struct.GPR, %struct.GPR* %1715, i32 0, i32 33
  %1717 = getelementptr inbounds %struct.Reg, %struct.Reg* %1716, i32 0, i32 0
  %PC.i1350 = bitcast %union.anon* %1717 to i64*
  %1718 = load i64, i64* %PC.i1350
  %1719 = add i64 %1718, 17
  %1720 = load i64, i64* %PC.i1350
  %1721 = add i64 %1720, 6
  %1722 = load i64, i64* %PC.i1350
  %1723 = add i64 %1722, 6
  store i64 %1723, i64* %PC.i1350
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1725 = load i8, i8* %1724, align 1
  %1726 = icmp eq i8 %1725, 0
  %1727 = zext i1 %1726 to i8
  store i8 %1727, i8* %BRANCH_TAKEN, align 1
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1729 = select i1 %1726, i64 %1719, i64 %1721
  store i64 %1729, i64* %1728, align 8
  store %struct.Memory* %loadMem_44a86c, %struct.Memory** %MEMORY
  %loadBr_44a86c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a86c = icmp eq i8 %loadBr_44a86c, 1
  br i1 %cmpBr_44a86c, label %block_.L_44a87d, label %block_44a872

block_44a872:                                     ; preds = %block_44a841
  %loadMem_44a872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1731 = getelementptr inbounds %struct.GPR, %struct.GPR* %1730, i32 0, i32 33
  %1732 = getelementptr inbounds %struct.Reg, %struct.Reg* %1731, i32 0, i32 0
  %PC.i1347 = bitcast %union.anon* %1732 to i64*
  %1733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1734 = getelementptr inbounds %struct.GPR, %struct.GPR* %1733, i32 0, i32 1
  %1735 = getelementptr inbounds %struct.Reg, %struct.Reg* %1734, i32 0, i32 0
  %RAX.i1348 = bitcast %union.anon* %1735 to i64*
  %1736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1737 = getelementptr inbounds %struct.GPR, %struct.GPR* %1736, i32 0, i32 15
  %1738 = getelementptr inbounds %struct.Reg, %struct.Reg* %1737, i32 0, i32 0
  %RBP.i1349 = bitcast %union.anon* %1738 to i64*
  %1739 = load i64, i64* %RBP.i1349
  %1740 = sub i64 %1739, 12
  %1741 = load i64, i64* %PC.i1347
  %1742 = add i64 %1741, 3
  store i64 %1742, i64* %PC.i1347
  %1743 = inttoptr i64 %1740 to i32*
  %1744 = load i32, i32* %1743
  %1745 = zext i32 %1744 to i64
  store i64 %1745, i64* %RAX.i1348, align 8
  store %struct.Memory* %loadMem_44a872, %struct.Memory** %MEMORY
  %loadMem_44a875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1747 = getelementptr inbounds %struct.GPR, %struct.GPR* %1746, i32 0, i32 33
  %1748 = getelementptr inbounds %struct.Reg, %struct.Reg* %1747, i32 0, i32 0
  %PC.i1344 = bitcast %union.anon* %1748 to i64*
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1750 = getelementptr inbounds %struct.GPR, %struct.GPR* %1749, i32 0, i32 1
  %1751 = getelementptr inbounds %struct.Reg, %struct.Reg* %1750, i32 0, i32 0
  %EAX.i1345 = bitcast %union.anon* %1751 to i32*
  %1752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1753 = getelementptr inbounds %struct.GPR, %struct.GPR* %1752, i32 0, i32 15
  %1754 = getelementptr inbounds %struct.Reg, %struct.Reg* %1753, i32 0, i32 0
  %RBP.i1346 = bitcast %union.anon* %1754 to i64*
  %1755 = load i64, i64* %RBP.i1346
  %1756 = sub i64 %1755, 44
  %1757 = load i32, i32* %EAX.i1345
  %1758 = zext i32 %1757 to i64
  %1759 = load i64, i64* %PC.i1344
  %1760 = add i64 %1759, 3
  store i64 %1760, i64* %PC.i1344
  %1761 = inttoptr i64 %1756 to i32*
  store i32 %1757, i32* %1761
  store %struct.Memory* %loadMem_44a875, %struct.Memory** %MEMORY
  %loadMem_44a878 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1763 = getelementptr inbounds %struct.GPR, %struct.GPR* %1762, i32 0, i32 33
  %1764 = getelementptr inbounds %struct.Reg, %struct.Reg* %1763, i32 0, i32 0
  %PC.i1343 = bitcast %union.anon* %1764 to i64*
  %1765 = load i64, i64* %PC.i1343
  %1766 = add i64 %1765, 30
  %1767 = load i64, i64* %PC.i1343
  %1768 = add i64 %1767, 5
  store i64 %1768, i64* %PC.i1343
  %1769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1766, i64* %1769, align 8
  store %struct.Memory* %loadMem_44a878, %struct.Memory** %MEMORY
  br label %block_.L_44a896

block_.L_44a87d:                                  ; preds = %block_44a841
  %loadMem_44a87d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1771 = getelementptr inbounds %struct.GPR, %struct.GPR* %1770, i32 0, i32 33
  %1772 = getelementptr inbounds %struct.Reg, %struct.Reg* %1771, i32 0, i32 0
  %PC.i1340 = bitcast %union.anon* %1772 to i64*
  %1773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1774 = getelementptr inbounds %struct.GPR, %struct.GPR* %1773, i32 0, i32 1
  %1775 = getelementptr inbounds %struct.Reg, %struct.Reg* %1774, i32 0, i32 0
  %RAX.i1341 = bitcast %union.anon* %1775 to i64*
  %1776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1777 = getelementptr inbounds %struct.GPR, %struct.GPR* %1776, i32 0, i32 15
  %1778 = getelementptr inbounds %struct.Reg, %struct.Reg* %1777, i32 0, i32 0
  %RBP.i1342 = bitcast %union.anon* %1778 to i64*
  %1779 = load i64, i64* %RBP.i1342
  %1780 = sub i64 %1779, 24
  %1781 = load i64, i64* %PC.i1340
  %1782 = add i64 %1781, 4
  store i64 %1782, i64* %PC.i1340
  %1783 = inttoptr i64 %1780 to i64*
  %1784 = load i64, i64* %1783
  store i64 %1784, i64* %RAX.i1341, align 8
  store %struct.Memory* %loadMem_44a87d, %struct.Memory** %MEMORY
  %loadMem_44a881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1786 = getelementptr inbounds %struct.GPR, %struct.GPR* %1785, i32 0, i32 33
  %1787 = getelementptr inbounds %struct.Reg, %struct.Reg* %1786, i32 0, i32 0
  %PC.i1337 = bitcast %union.anon* %1787 to i64*
  %1788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1789 = getelementptr inbounds %struct.GPR, %struct.GPR* %1788, i32 0, i32 1
  %1790 = getelementptr inbounds %struct.Reg, %struct.Reg* %1789, i32 0, i32 0
  %RAX.i1338 = bitcast %union.anon* %1790 to i64*
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1792 = getelementptr inbounds %struct.GPR, %struct.GPR* %1791, i32 0, i32 5
  %1793 = getelementptr inbounds %struct.Reg, %struct.Reg* %1792, i32 0, i32 0
  %RCX.i1339 = bitcast %union.anon* %1793 to i64*
  %1794 = load i64, i64* %RAX.i1338
  %1795 = add i64 %1794, 4
  %1796 = load i64, i64* %PC.i1337
  %1797 = add i64 %1796, 3
  store i64 %1797, i64* %PC.i1337
  %1798 = inttoptr i64 %1795 to i32*
  %1799 = load i32, i32* %1798
  %1800 = zext i32 %1799 to i64
  store i64 %1800, i64* %RCX.i1339, align 8
  store %struct.Memory* %loadMem_44a881, %struct.Memory** %MEMORY
  %loadMem_44a884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1802 = getelementptr inbounds %struct.GPR, %struct.GPR* %1801, i32 0, i32 33
  %1803 = getelementptr inbounds %struct.Reg, %struct.Reg* %1802, i32 0, i32 0
  %PC.i1335 = bitcast %union.anon* %1803 to i64*
  %1804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1805 = getelementptr inbounds %struct.GPR, %struct.GPR* %1804, i32 0, i32 5
  %1806 = getelementptr inbounds %struct.Reg, %struct.Reg* %1805, i32 0, i32 0
  %RCX.i1336 = bitcast %union.anon* %1806 to i64*
  %1807 = load i64, i64* %RCX.i1336
  %1808 = load i64, i64* %PC.i1335
  %1809 = add i64 %1808, 3
  store i64 %1809, i64* %PC.i1335
  %1810 = trunc i64 %1807 to i32
  %1811 = add i32 1, %1810
  %1812 = zext i32 %1811 to i64
  store i64 %1812, i64* %RCX.i1336, align 8
  %1813 = icmp ult i32 %1811, %1810
  %1814 = icmp ult i32 %1811, 1
  %1815 = or i1 %1813, %1814
  %1816 = zext i1 %1815 to i8
  %1817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1816, i8* %1817, align 1
  %1818 = and i32 %1811, 255
  %1819 = call i32 @llvm.ctpop.i32(i32 %1818)
  %1820 = trunc i32 %1819 to i8
  %1821 = and i8 %1820, 1
  %1822 = xor i8 %1821, 1
  %1823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1822, i8* %1823, align 1
  %1824 = xor i64 1, %1807
  %1825 = trunc i64 %1824 to i32
  %1826 = xor i32 %1825, %1811
  %1827 = lshr i32 %1826, 4
  %1828 = trunc i32 %1827 to i8
  %1829 = and i8 %1828, 1
  %1830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1829, i8* %1830, align 1
  %1831 = icmp eq i32 %1811, 0
  %1832 = zext i1 %1831 to i8
  %1833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1832, i8* %1833, align 1
  %1834 = lshr i32 %1811, 31
  %1835 = trunc i32 %1834 to i8
  %1836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1835, i8* %1836, align 1
  %1837 = lshr i32 %1810, 31
  %1838 = xor i32 %1834, %1837
  %1839 = add i32 %1838, %1834
  %1840 = icmp eq i32 %1839, 2
  %1841 = zext i1 %1840 to i8
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1841, i8* %1842, align 1
  store %struct.Memory* %loadMem_44a884, %struct.Memory** %MEMORY
  %loadMem_44a887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1844 = getelementptr inbounds %struct.GPR, %struct.GPR* %1843, i32 0, i32 33
  %1845 = getelementptr inbounds %struct.Reg, %struct.Reg* %1844, i32 0, i32 0
  %PC.i1332 = bitcast %union.anon* %1845 to i64*
  %1846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1847 = getelementptr inbounds %struct.GPR, %struct.GPR* %1846, i32 0, i32 5
  %1848 = getelementptr inbounds %struct.Reg, %struct.Reg* %1847, i32 0, i32 0
  %ECX.i1333 = bitcast %union.anon* %1848 to i32*
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1850 = getelementptr inbounds %struct.GPR, %struct.GPR* %1849, i32 0, i32 1
  %1851 = getelementptr inbounds %struct.Reg, %struct.Reg* %1850, i32 0, i32 0
  %RAX.i1334 = bitcast %union.anon* %1851 to i64*
  %1852 = load i64, i64* %RAX.i1334
  %1853 = add i64 %1852, 4
  %1854 = load i32, i32* %ECX.i1333
  %1855 = zext i32 %1854 to i64
  %1856 = load i64, i64* %PC.i1332
  %1857 = add i64 %1856, 3
  store i64 %1857, i64* %PC.i1332
  %1858 = inttoptr i64 %1853 to i32*
  store i32 %1854, i32* %1858
  store %struct.Memory* %loadMem_44a887, %struct.Memory** %MEMORY
  %loadMem_44a88a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1860 = getelementptr inbounds %struct.GPR, %struct.GPR* %1859, i32 0, i32 33
  %1861 = getelementptr inbounds %struct.Reg, %struct.Reg* %1860, i32 0, i32 0
  %PC.i1329 = bitcast %union.anon* %1861 to i64*
  %1862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1863 = getelementptr inbounds %struct.GPR, %struct.GPR* %1862, i32 0, i32 5
  %1864 = getelementptr inbounds %struct.Reg, %struct.Reg* %1863, i32 0, i32 0
  %RCX.i1330 = bitcast %union.anon* %1864 to i64*
  %1865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1866 = getelementptr inbounds %struct.GPR, %struct.GPR* %1865, i32 0, i32 15
  %1867 = getelementptr inbounds %struct.Reg, %struct.Reg* %1866, i32 0, i32 0
  %RBP.i1331 = bitcast %union.anon* %1867 to i64*
  %1868 = load i64, i64* %RBP.i1331
  %1869 = sub i64 %1868, 12
  %1870 = load i64, i64* %PC.i1329
  %1871 = add i64 %1870, 3
  store i64 %1871, i64* %PC.i1329
  %1872 = inttoptr i64 %1869 to i32*
  %1873 = load i32, i32* %1872
  %1874 = zext i32 %1873 to i64
  store i64 %1874, i64* %RCX.i1330, align 8
  store %struct.Memory* %loadMem_44a88a, %struct.Memory** %MEMORY
  %loadMem_44a88d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1876 = getelementptr inbounds %struct.GPR, %struct.GPR* %1875, i32 0, i32 33
  %1877 = getelementptr inbounds %struct.Reg, %struct.Reg* %1876, i32 0, i32 0
  %PC.i1326 = bitcast %union.anon* %1877 to i64*
  %1878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1879 = getelementptr inbounds %struct.GPR, %struct.GPR* %1878, i32 0, i32 5
  %1880 = getelementptr inbounds %struct.Reg, %struct.Reg* %1879, i32 0, i32 0
  %RCX.i1327 = bitcast %union.anon* %1880 to i64*
  %1881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1882 = getelementptr inbounds %struct.GPR, %struct.GPR* %1881, i32 0, i32 15
  %1883 = getelementptr inbounds %struct.Reg, %struct.Reg* %1882, i32 0, i32 0
  %RBP.i1328 = bitcast %union.anon* %1883 to i64*
  %1884 = load i64, i64* %RCX.i1327
  %1885 = load i64, i64* %RBP.i1328
  %1886 = sub i64 %1885, 40
  %1887 = load i64, i64* %PC.i1326
  %1888 = add i64 %1887, 3
  store i64 %1888, i64* %PC.i1326
  %1889 = trunc i64 %1884 to i32
  %1890 = inttoptr i64 %1886 to i32*
  %1891 = load i32, i32* %1890
  %1892 = add i32 %1891, %1889
  %1893 = zext i32 %1892 to i64
  store i64 %1893, i64* %RCX.i1327, align 8
  %1894 = icmp ult i32 %1892, %1889
  %1895 = icmp ult i32 %1892, %1891
  %1896 = or i1 %1894, %1895
  %1897 = zext i1 %1896 to i8
  %1898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1897, i8* %1898, align 1
  %1899 = and i32 %1892, 255
  %1900 = call i32 @llvm.ctpop.i32(i32 %1899)
  %1901 = trunc i32 %1900 to i8
  %1902 = and i8 %1901, 1
  %1903 = xor i8 %1902, 1
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1903, i8* %1904, align 1
  %1905 = xor i32 %1891, %1889
  %1906 = xor i32 %1905, %1892
  %1907 = lshr i32 %1906, 4
  %1908 = trunc i32 %1907 to i8
  %1909 = and i8 %1908, 1
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1909, i8* %1910, align 1
  %1911 = icmp eq i32 %1892, 0
  %1912 = zext i1 %1911 to i8
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1912, i8* %1913, align 1
  %1914 = lshr i32 %1892, 31
  %1915 = trunc i32 %1914 to i8
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1915, i8* %1916, align 1
  %1917 = lshr i32 %1889, 31
  %1918 = lshr i32 %1891, 31
  %1919 = xor i32 %1914, %1917
  %1920 = xor i32 %1914, %1918
  %1921 = add i32 %1919, %1920
  %1922 = icmp eq i32 %1921, 2
  %1923 = zext i1 %1922 to i8
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1923, i8* %1924, align 1
  store %struct.Memory* %loadMem_44a88d, %struct.Memory** %MEMORY
  %loadMem_44a890 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1926 = getelementptr inbounds %struct.GPR, %struct.GPR* %1925, i32 0, i32 33
  %1927 = getelementptr inbounds %struct.Reg, %struct.Reg* %1926, i32 0, i32 0
  %PC.i1324 = bitcast %union.anon* %1927 to i64*
  %1928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1929 = getelementptr inbounds %struct.GPR, %struct.GPR* %1928, i32 0, i32 5
  %1930 = getelementptr inbounds %struct.Reg, %struct.Reg* %1929, i32 0, i32 0
  %RCX.i1325 = bitcast %union.anon* %1930 to i64*
  %1931 = load i64, i64* %RCX.i1325
  %1932 = load i64, i64* %PC.i1324
  %1933 = add i64 %1932, 2
  store i64 %1933, i64* %PC.i1324
  %1934 = shl i64 %1931, 32
  %1935 = ashr i64 %1934, 33
  %1936 = trunc i64 %1931 to i8
  %1937 = and i8 %1936, 1
  %1938 = trunc i64 %1935 to i32
  %1939 = and i64 %1935, 4294967295
  store i64 %1939, i64* %RCX.i1325, align 8
  %1940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1937, i8* %1940, align 1
  %1941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1942 = and i32 %1938, 255
  %1943 = call i32 @llvm.ctpop.i32(i32 %1942)
  %1944 = trunc i32 %1943 to i8
  %1945 = and i8 %1944, 1
  %1946 = xor i8 %1945, 1
  store i8 %1946, i8* %1941, align 1
  %1947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1947, align 1
  %1948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1949 = icmp eq i32 %1938, 0
  %1950 = zext i1 %1949 to i8
  store i8 %1950, i8* %1948, align 1
  %1951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1952 = lshr i32 %1938, 31
  %1953 = trunc i32 %1952 to i8
  store i8 %1953, i8* %1951, align 1
  %1954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1954, align 1
  store %struct.Memory* %loadMem_44a890, %struct.Memory** %MEMORY
  %loadMem_44a893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1956 = getelementptr inbounds %struct.GPR, %struct.GPR* %1955, i32 0, i32 33
  %1957 = getelementptr inbounds %struct.Reg, %struct.Reg* %1956, i32 0, i32 0
  %PC.i1321 = bitcast %union.anon* %1957 to i64*
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1959 = getelementptr inbounds %struct.GPR, %struct.GPR* %1958, i32 0, i32 5
  %1960 = getelementptr inbounds %struct.Reg, %struct.Reg* %1959, i32 0, i32 0
  %ECX.i1322 = bitcast %union.anon* %1960 to i32*
  %1961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1962 = getelementptr inbounds %struct.GPR, %struct.GPR* %1961, i32 0, i32 15
  %1963 = getelementptr inbounds %struct.Reg, %struct.Reg* %1962, i32 0, i32 0
  %RBP.i1323 = bitcast %union.anon* %1963 to i64*
  %1964 = load i64, i64* %RBP.i1323
  %1965 = sub i64 %1964, 44
  %1966 = load i32, i32* %ECX.i1322
  %1967 = zext i32 %1966 to i64
  %1968 = load i64, i64* %PC.i1321
  %1969 = add i64 %1968, 3
  store i64 %1969, i64* %PC.i1321
  %1970 = inttoptr i64 %1965 to i32*
  store i32 %1966, i32* %1970
  store %struct.Memory* %loadMem_44a893, %struct.Memory** %MEMORY
  br label %block_.L_44a896

block_.L_44a896:                                  ; preds = %block_.L_44a87d, %block_44a872
  %loadMem_44a896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1972 = getelementptr inbounds %struct.GPR, %struct.GPR* %1971, i32 0, i32 33
  %1973 = getelementptr inbounds %struct.Reg, %struct.Reg* %1972, i32 0, i32 0
  %PC.i1320 = bitcast %union.anon* %1973 to i64*
  %1974 = load i64, i64* %PC.i1320
  %1975 = add i64 %1974, 5
  %1976 = load i64, i64* %PC.i1320
  %1977 = add i64 %1976, 5
  store i64 %1977, i64* %PC.i1320
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1975, i64* %1978, align 8
  store %struct.Memory* %loadMem_44a896, %struct.Memory** %MEMORY
  br label %block_.L_44a89b

block_.L_44a89b:                                  ; preds = %block_.L_44a896, %block_.L_44a80f
  %loadMem_44a89b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1980 = getelementptr inbounds %struct.GPR, %struct.GPR* %1979, i32 0, i32 33
  %1981 = getelementptr inbounds %struct.Reg, %struct.Reg* %1980, i32 0, i32 0
  %PC.i1319 = bitcast %union.anon* %1981 to i64*
  %1982 = load i64, i64* %PC.i1319
  %1983 = add i64 %1982, 5
  %1984 = load i64, i64* %PC.i1319
  %1985 = add i64 %1984, 5
  store i64 %1985, i64* %PC.i1319
  %1986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1983, i64* %1986, align 8
  store %struct.Memory* %loadMem_44a89b, %struct.Memory** %MEMORY
  br label %block_.L_44a8a0

block_.L_44a8a0:                                  ; preds = %block_.L_44a89b, %block_44a7e0
  %loadMem_44a8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1988 = getelementptr inbounds %struct.GPR, %struct.GPR* %1987, i32 0, i32 33
  %1989 = getelementptr inbounds %struct.Reg, %struct.Reg* %1988, i32 0, i32 0
  %PC.i1318 = bitcast %union.anon* %1989 to i64*
  %1990 = load i64, i64* %PC.i1318
  %1991 = add i64 %1990, 209
  %1992 = load i64, i64* %PC.i1318
  %1993 = add i64 %1992, 5
  store i64 %1993, i64* %PC.i1318
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1991, i64* %1994, align 8
  store %struct.Memory* %loadMem_44a8a0, %struct.Memory** %MEMORY
  br label %block_.L_44a971

block_.L_44a8a5:                                  ; preds = %block_44a7c0
  %loadMem_44a8a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1996 = getelementptr inbounds %struct.GPR, %struct.GPR* %1995, i32 0, i32 33
  %1997 = getelementptr inbounds %struct.Reg, %struct.Reg* %1996, i32 0, i32 0
  %PC.i1315 = bitcast %union.anon* %1997 to i64*
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1999 = getelementptr inbounds %struct.GPR, %struct.GPR* %1998, i32 0, i32 1
  %2000 = getelementptr inbounds %struct.Reg, %struct.Reg* %1999, i32 0, i32 0
  %RAX.i1316 = bitcast %union.anon* %2000 to i64*
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2002 = getelementptr inbounds %struct.GPR, %struct.GPR* %2001, i32 0, i32 15
  %2003 = getelementptr inbounds %struct.Reg, %struct.Reg* %2002, i32 0, i32 0
  %RBP.i1317 = bitcast %union.anon* %2003 to i64*
  %2004 = load i64, i64* %RBP.i1317
  %2005 = sub i64 %2004, 4
  %2006 = load i64, i64* %PC.i1315
  %2007 = add i64 %2006, 3
  store i64 %2007, i64* %PC.i1315
  %2008 = inttoptr i64 %2005 to i32*
  %2009 = load i32, i32* %2008
  %2010 = zext i32 %2009 to i64
  store i64 %2010, i64* %RAX.i1316, align 8
  store %struct.Memory* %loadMem_44a8a5, %struct.Memory** %MEMORY
  %loadMem_44a8a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2012 = getelementptr inbounds %struct.GPR, %struct.GPR* %2011, i32 0, i32 33
  %2013 = getelementptr inbounds %struct.Reg, %struct.Reg* %2012, i32 0, i32 0
  %PC.i1313 = bitcast %union.anon* %2013 to i64*
  %2014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2015 = getelementptr inbounds %struct.GPR, %struct.GPR* %2014, i32 0, i32 1
  %2016 = getelementptr inbounds %struct.Reg, %struct.Reg* %2015, i32 0, i32 0
  %RAX.i1314 = bitcast %union.anon* %2016 to i64*
  %2017 = load i64, i64* %RAX.i1314
  %2018 = load i64, i64* %PC.i1313
  %2019 = add i64 %2018, 3
  store i64 %2019, i64* %PC.i1313
  %2020 = and i64 1, %2017
  %2021 = trunc i64 %2020 to i32
  store i64 %2020, i64* %RAX.i1314, align 8
  %2022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2022, align 1
  %2023 = and i32 %2021, 255
  %2024 = call i32 @llvm.ctpop.i32(i32 %2023)
  %2025 = trunc i32 %2024 to i8
  %2026 = and i8 %2025, 1
  %2027 = xor i8 %2026, 1
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2027, i8* %2028, align 1
  %2029 = icmp eq i32 %2021, 0
  %2030 = zext i1 %2029 to i8
  %2031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2030, i8* %2031, align 1
  %2032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2032, align 1
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2033, align 1
  %2034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2034, align 1
  store %struct.Memory* %loadMem_44a8a8, %struct.Memory** %MEMORY
  %loadMem_44a8ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %2035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2036 = getelementptr inbounds %struct.GPR, %struct.GPR* %2035, i32 0, i32 33
  %2037 = getelementptr inbounds %struct.Reg, %struct.Reg* %2036, i32 0, i32 0
  %PC.i1311 = bitcast %union.anon* %2037 to i64*
  %2038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2039 = getelementptr inbounds %struct.GPR, %struct.GPR* %2038, i32 0, i32 1
  %2040 = getelementptr inbounds %struct.Reg, %struct.Reg* %2039, i32 0, i32 0
  %EAX.i1312 = bitcast %union.anon* %2040 to i32*
  %2041 = load i32, i32* %EAX.i1312
  %2042 = zext i32 %2041 to i64
  %2043 = load i64, i64* %PC.i1311
  %2044 = add i64 %2043, 3
  store i64 %2044, i64* %PC.i1311
  %2045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2045, align 1
  %2046 = and i32 %2041, 255
  %2047 = call i32 @llvm.ctpop.i32(i32 %2046)
  %2048 = trunc i32 %2047 to i8
  %2049 = and i8 %2048, 1
  %2050 = xor i8 %2049, 1
  %2051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2050, i8* %2051, align 1
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2052, align 1
  %2053 = icmp eq i32 %2041, 0
  %2054 = zext i1 %2053 to i8
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2054, i8* %2055, align 1
  %2056 = lshr i32 %2041, 31
  %2057 = trunc i32 %2056 to i8
  %2058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2057, i8* %2058, align 1
  %2059 = lshr i32 %2041, 31
  %2060 = xor i32 %2056, %2059
  %2061 = add i32 %2060, %2059
  %2062 = icmp eq i32 %2061, 2
  %2063 = zext i1 %2062 to i8
  %2064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2063, i8* %2064, align 1
  store %struct.Memory* %loadMem_44a8ab, %struct.Memory** %MEMORY
  %loadMem_44a8ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2066 = getelementptr inbounds %struct.GPR, %struct.GPR* %2065, i32 0, i32 33
  %2067 = getelementptr inbounds %struct.Reg, %struct.Reg* %2066, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %2067 to i64*
  %2068 = load i64, i64* %PC.i1310
  %2069 = add i64 %2068, 148
  %2070 = load i64, i64* %PC.i1310
  %2071 = add i64 %2070, 6
  %2072 = load i64, i64* %PC.i1310
  %2073 = add i64 %2072, 6
  store i64 %2073, i64* %PC.i1310
  %2074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2075 = load i8, i8* %2074, align 1
  %2076 = icmp eq i8 %2075, 0
  %2077 = zext i1 %2076 to i8
  store i8 %2077, i8* %BRANCH_TAKEN, align 1
  %2078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2079 = select i1 %2076, i64 %2069, i64 %2071
  store i64 %2079, i64* %2078, align 8
  store %struct.Memory* %loadMem_44a8ae, %struct.Memory** %MEMORY
  %loadBr_44a8ae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a8ae = icmp eq i8 %loadBr_44a8ae, 1
  br i1 %cmpBr_44a8ae, label %block_.L_44a942, label %block_44a8b4

block_44a8b4:                                     ; preds = %block_.L_44a8a5
  %loadMem_44a8b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2081 = getelementptr inbounds %struct.GPR, %struct.GPR* %2080, i32 0, i32 33
  %2082 = getelementptr inbounds %struct.Reg, %struct.Reg* %2081, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %2082 to i64*
  %2083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2084 = getelementptr inbounds %struct.GPR, %struct.GPR* %2083, i32 0, i32 1
  %2085 = getelementptr inbounds %struct.Reg, %struct.Reg* %2084, i32 0, i32 0
  %RAX.i1308 = bitcast %union.anon* %2085 to i64*
  %2086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2087 = getelementptr inbounds %struct.GPR, %struct.GPR* %2086, i32 0, i32 15
  %2088 = getelementptr inbounds %struct.Reg, %struct.Reg* %2087, i32 0, i32 0
  %RBP.i1309 = bitcast %union.anon* %2088 to i64*
  %2089 = load i64, i64* %RBP.i1309
  %2090 = sub i64 %2089, 32
  %2091 = load i64, i64* %PC.i1307
  %2092 = add i64 %2091, 4
  store i64 %2092, i64* %PC.i1307
  %2093 = inttoptr i64 %2090 to i64*
  %2094 = load i64, i64* %2093
  store i64 %2094, i64* %RAX.i1308, align 8
  store %struct.Memory* %loadMem_44a8b4, %struct.Memory** %MEMORY
  %loadMem_44a8b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2096 = getelementptr inbounds %struct.GPR, %struct.GPR* %2095, i32 0, i32 33
  %2097 = getelementptr inbounds %struct.Reg, %struct.Reg* %2096, i32 0, i32 0
  %PC.i1304 = bitcast %union.anon* %2097 to i64*
  %2098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2099 = getelementptr inbounds %struct.GPR, %struct.GPR* %2098, i32 0, i32 1
  %2100 = getelementptr inbounds %struct.Reg, %struct.Reg* %2099, i32 0, i32 0
  %RAX.i1305 = bitcast %union.anon* %2100 to i64*
  %2101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2102 = getelementptr inbounds %struct.GPR, %struct.GPR* %2101, i32 0, i32 5
  %2103 = getelementptr inbounds %struct.Reg, %struct.Reg* %2102, i32 0, i32 0
  %RCX.i1306 = bitcast %union.anon* %2103 to i64*
  %2104 = load i64, i64* %RAX.i1305
  %2105 = add i64 %2104, 548
  %2106 = load i64, i64* %PC.i1304
  %2107 = add i64 %2106, 6
  store i64 %2107, i64* %PC.i1304
  %2108 = inttoptr i64 %2105 to i32*
  %2109 = load i32, i32* %2108
  %2110 = zext i32 %2109 to i64
  store i64 %2110, i64* %RCX.i1306, align 8
  store %struct.Memory* %loadMem_44a8b8, %struct.Memory** %MEMORY
  %loadMem_44a8be = load %struct.Memory*, %struct.Memory** %MEMORY
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2112 = getelementptr inbounds %struct.GPR, %struct.GPR* %2111, i32 0, i32 33
  %2113 = getelementptr inbounds %struct.Reg, %struct.Reg* %2112, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %2113 to i64*
  %2114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2115 = getelementptr inbounds %struct.GPR, %struct.GPR* %2114, i32 0, i32 1
  %2116 = getelementptr inbounds %struct.Reg, %struct.Reg* %2115, i32 0, i32 0
  %RAX.i1302 = bitcast %union.anon* %2116 to i64*
  %2117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2118 = getelementptr inbounds %struct.GPR, %struct.GPR* %2117, i32 0, i32 15
  %2119 = getelementptr inbounds %struct.Reg, %struct.Reg* %2118, i32 0, i32 0
  %RBP.i1303 = bitcast %union.anon* %2119 to i64*
  %2120 = load i64, i64* %RBP.i1303
  %2121 = sub i64 %2120, 24
  %2122 = load i64, i64* %PC.i1301
  %2123 = add i64 %2122, 4
  store i64 %2123, i64* %PC.i1301
  %2124 = inttoptr i64 %2121 to i64*
  %2125 = load i64, i64* %2124
  store i64 %2125, i64* %RAX.i1302, align 8
  store %struct.Memory* %loadMem_44a8be, %struct.Memory** %MEMORY
  %loadMem_44a8c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2127 = getelementptr inbounds %struct.GPR, %struct.GPR* %2126, i32 0, i32 33
  %2128 = getelementptr inbounds %struct.Reg, %struct.Reg* %2127, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %2128 to i64*
  %2129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2130 = getelementptr inbounds %struct.GPR, %struct.GPR* %2129, i32 0, i32 5
  %2131 = getelementptr inbounds %struct.Reg, %struct.Reg* %2130, i32 0, i32 0
  %ECX.i1299 = bitcast %union.anon* %2131 to i32*
  %2132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2133 = getelementptr inbounds %struct.GPR, %struct.GPR* %2132, i32 0, i32 1
  %2134 = getelementptr inbounds %struct.Reg, %struct.Reg* %2133, i32 0, i32 0
  %RAX.i1300 = bitcast %union.anon* %2134 to i64*
  %2135 = load i64, i64* %RAX.i1300
  %2136 = add i64 %2135, 4
  %2137 = load i32, i32* %ECX.i1299
  %2138 = zext i32 %2137 to i64
  %2139 = load i64, i64* %PC.i1298
  %2140 = add i64 %2139, 3
  store i64 %2140, i64* %PC.i1298
  %2141 = inttoptr i64 %2136 to i32*
  store i32 %2137, i32* %2141
  store %struct.Memory* %loadMem_44a8c2, %struct.Memory** %MEMORY
  %loadMem_44a8c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2143 = getelementptr inbounds %struct.GPR, %struct.GPR* %2142, i32 0, i32 33
  %2144 = getelementptr inbounds %struct.Reg, %struct.Reg* %2143, i32 0, i32 0
  %PC.i1295 = bitcast %union.anon* %2144 to i64*
  %2145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2146 = getelementptr inbounds %struct.GPR, %struct.GPR* %2145, i32 0, i32 1
  %2147 = getelementptr inbounds %struct.Reg, %struct.Reg* %2146, i32 0, i32 0
  %RAX.i1296 = bitcast %union.anon* %2147 to i64*
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2149 = getelementptr inbounds %struct.GPR, %struct.GPR* %2148, i32 0, i32 15
  %2150 = getelementptr inbounds %struct.Reg, %struct.Reg* %2149, i32 0, i32 0
  %RBP.i1297 = bitcast %union.anon* %2150 to i64*
  %2151 = load i64, i64* %RBP.i1297
  %2152 = sub i64 %2151, 32
  %2153 = load i64, i64* %PC.i1295
  %2154 = add i64 %2153, 4
  store i64 %2154, i64* %PC.i1295
  %2155 = inttoptr i64 %2152 to i64*
  %2156 = load i64, i64* %2155
  store i64 %2156, i64* %RAX.i1296, align 8
  store %struct.Memory* %loadMem_44a8c5, %struct.Memory** %MEMORY
  %loadMem_44a8c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2158 = getelementptr inbounds %struct.GPR, %struct.GPR* %2157, i32 0, i32 33
  %2159 = getelementptr inbounds %struct.Reg, %struct.Reg* %2158, i32 0, i32 0
  %PC.i1292 = bitcast %union.anon* %2159 to i64*
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2161 = getelementptr inbounds %struct.GPR, %struct.GPR* %2160, i32 0, i32 1
  %2162 = getelementptr inbounds %struct.Reg, %struct.Reg* %2161, i32 0, i32 0
  %RAX.i1293 = bitcast %union.anon* %2162 to i64*
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2164 = getelementptr inbounds %struct.GPR, %struct.GPR* %2163, i32 0, i32 5
  %2165 = getelementptr inbounds %struct.Reg, %struct.Reg* %2164, i32 0, i32 0
  %RCX.i1294 = bitcast %union.anon* %2165 to i64*
  %2166 = load i64, i64* %RAX.i1293
  %2167 = add i64 %2166, 564
  %2168 = load i64, i64* %PC.i1292
  %2169 = add i64 %2168, 6
  store i64 %2169, i64* %PC.i1292
  %2170 = inttoptr i64 %2167 to i32*
  %2171 = load i32, i32* %2170
  %2172 = zext i32 %2171 to i64
  store i64 %2172, i64* %RCX.i1294, align 8
  store %struct.Memory* %loadMem_44a8c9, %struct.Memory** %MEMORY
  %loadMem_44a8cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2174 = getelementptr inbounds %struct.GPR, %struct.GPR* %2173, i32 0, i32 33
  %2175 = getelementptr inbounds %struct.Reg, %struct.Reg* %2174, i32 0, i32 0
  %PC.i1289 = bitcast %union.anon* %2175 to i64*
  %2176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2177 = getelementptr inbounds %struct.GPR, %struct.GPR* %2176, i32 0, i32 1
  %2178 = getelementptr inbounds %struct.Reg, %struct.Reg* %2177, i32 0, i32 0
  %RAX.i1290 = bitcast %union.anon* %2178 to i64*
  %2179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2180 = getelementptr inbounds %struct.GPR, %struct.GPR* %2179, i32 0, i32 15
  %2181 = getelementptr inbounds %struct.Reg, %struct.Reg* %2180, i32 0, i32 0
  %RBP.i1291 = bitcast %union.anon* %2181 to i64*
  %2182 = load i64, i64* %RBP.i1291
  %2183 = sub i64 %2182, 24
  %2184 = load i64, i64* %PC.i1289
  %2185 = add i64 %2184, 4
  store i64 %2185, i64* %PC.i1289
  %2186 = inttoptr i64 %2183 to i64*
  %2187 = load i64, i64* %2186
  store i64 %2187, i64* %RAX.i1290, align 8
  store %struct.Memory* %loadMem_44a8cf, %struct.Memory** %MEMORY
  %loadMem_44a8d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2189 = getelementptr inbounds %struct.GPR, %struct.GPR* %2188, i32 0, i32 33
  %2190 = getelementptr inbounds %struct.Reg, %struct.Reg* %2189, i32 0, i32 0
  %PC.i1286 = bitcast %union.anon* %2190 to i64*
  %2191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2192 = getelementptr inbounds %struct.GPR, %struct.GPR* %2191, i32 0, i32 5
  %2193 = getelementptr inbounds %struct.Reg, %struct.Reg* %2192, i32 0, i32 0
  %ECX.i1287 = bitcast %union.anon* %2193 to i32*
  %2194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2195 = getelementptr inbounds %struct.GPR, %struct.GPR* %2194, i32 0, i32 1
  %2196 = getelementptr inbounds %struct.Reg, %struct.Reg* %2195, i32 0, i32 0
  %RAX.i1288 = bitcast %union.anon* %2196 to i64*
  %2197 = load i64, i64* %RAX.i1288
  %2198 = load i32, i32* %ECX.i1287
  %2199 = zext i32 %2198 to i64
  %2200 = load i64, i64* %PC.i1286
  %2201 = add i64 %2200, 2
  store i64 %2201, i64* %PC.i1286
  %2202 = inttoptr i64 %2197 to i32*
  store i32 %2198, i32* %2202
  store %struct.Memory* %loadMem_44a8d3, %struct.Memory** %MEMORY
  %loadMem_44a8d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2204 = getelementptr inbounds %struct.GPR, %struct.GPR* %2203, i32 0, i32 33
  %2205 = getelementptr inbounds %struct.Reg, %struct.Reg* %2204, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %2205 to i64*
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2207 = getelementptr inbounds %struct.GPR, %struct.GPR* %2206, i32 0, i32 1
  %2208 = getelementptr inbounds %struct.Reg, %struct.Reg* %2207, i32 0, i32 0
  %RAX.i1284 = bitcast %union.anon* %2208 to i64*
  %2209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2210 = getelementptr inbounds %struct.GPR, %struct.GPR* %2209, i32 0, i32 15
  %2211 = getelementptr inbounds %struct.Reg, %struct.Reg* %2210, i32 0, i32 0
  %RBP.i1285 = bitcast %union.anon* %2211 to i64*
  %2212 = load i64, i64* %RBP.i1285
  %2213 = sub i64 %2212, 32
  %2214 = load i64, i64* %PC.i1283
  %2215 = add i64 %2214, 4
  store i64 %2215, i64* %PC.i1283
  %2216 = inttoptr i64 %2213 to i64*
  %2217 = load i64, i64* %2216
  store i64 %2217, i64* %RAX.i1284, align 8
  store %struct.Memory* %loadMem_44a8d5, %struct.Memory** %MEMORY
  %loadMem_44a8d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2219 = getelementptr inbounds %struct.GPR, %struct.GPR* %2218, i32 0, i32 33
  %2220 = getelementptr inbounds %struct.Reg, %struct.Reg* %2219, i32 0, i32 0
  %PC.i1281 = bitcast %union.anon* %2220 to i64*
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2222 = getelementptr inbounds %struct.GPR, %struct.GPR* %2221, i32 0, i32 1
  %2223 = getelementptr inbounds %struct.Reg, %struct.Reg* %2222, i32 0, i32 0
  %RAX.i1282 = bitcast %union.anon* %2223 to i64*
  %2224 = load i64, i64* %RAX.i1282
  %2225 = add i64 %2224, 564
  %2226 = load i64, i64* %PC.i1281
  %2227 = add i64 %2226, 7
  store i64 %2227, i64* %PC.i1281
  %2228 = inttoptr i64 %2225 to i32*
  %2229 = load i32, i32* %2228
  %2230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2230, align 1
  %2231 = and i32 %2229, 255
  %2232 = call i32 @llvm.ctpop.i32(i32 %2231)
  %2233 = trunc i32 %2232 to i8
  %2234 = and i8 %2233, 1
  %2235 = xor i8 %2234, 1
  %2236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2235, i8* %2236, align 1
  %2237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2237, align 1
  %2238 = icmp eq i32 %2229, 0
  %2239 = zext i1 %2238 to i8
  %2240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2239, i8* %2240, align 1
  %2241 = lshr i32 %2229, 31
  %2242 = trunc i32 %2241 to i8
  %2243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2242, i8* %2243, align 1
  %2244 = lshr i32 %2229, 31
  %2245 = xor i32 %2241, %2244
  %2246 = add i32 %2245, %2244
  %2247 = icmp eq i32 %2246, 2
  %2248 = zext i1 %2247 to i8
  %2249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2248, i8* %2249, align 1
  store %struct.Memory* %loadMem_44a8d9, %struct.Memory** %MEMORY
  %loadMem_44a8e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2251 = getelementptr inbounds %struct.GPR, %struct.GPR* %2250, i32 0, i32 33
  %2252 = getelementptr inbounds %struct.Reg, %struct.Reg* %2251, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %2252 to i64*
  %2253 = load i64, i64* %PC.i1280
  %2254 = add i64 %2253, 93
  %2255 = load i64, i64* %PC.i1280
  %2256 = add i64 %2255, 6
  %2257 = load i64, i64* %PC.i1280
  %2258 = add i64 %2257, 6
  store i64 %2258, i64* %PC.i1280
  %2259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2260 = load i8, i8* %2259, align 1
  store i8 %2260, i8* %BRANCH_TAKEN, align 1
  %2261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2262 = icmp ne i8 %2260, 0
  %2263 = select i1 %2262, i64 %2254, i64 %2256
  store i64 %2263, i64* %2261, align 8
  store %struct.Memory* %loadMem_44a8e0, %struct.Memory** %MEMORY
  %loadBr_44a8e0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a8e0 = icmp eq i8 %loadBr_44a8e0, 1
  br i1 %cmpBr_44a8e0, label %block_.L_44a93d, label %block_44a8e6

block_44a8e6:                                     ; preds = %block_44a8b4
  %loadMem_44a8e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2265 = getelementptr inbounds %struct.GPR, %struct.GPR* %2264, i32 0, i32 33
  %2266 = getelementptr inbounds %struct.Reg, %struct.Reg* %2265, i32 0, i32 0
  %PC.i1278 = bitcast %union.anon* %2266 to i64*
  %2267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2268 = getelementptr inbounds %struct.GPR, %struct.GPR* %2267, i32 0, i32 1
  %2269 = getelementptr inbounds %struct.Reg, %struct.Reg* %2268, i32 0, i32 0
  %RAX.i1279 = bitcast %union.anon* %2269 to i64*
  %2270 = load i64, i64* %PC.i1278
  %2271 = add i64 %2270, 8
  store i64 %2271, i64* %PC.i1278
  %2272 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2272, i64* %RAX.i1279, align 8
  store %struct.Memory* %loadMem_44a8e6, %struct.Memory** %MEMORY
  %loadMem_44a8ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %2273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2274 = getelementptr inbounds %struct.GPR, %struct.GPR* %2273, i32 0, i32 33
  %2275 = getelementptr inbounds %struct.Reg, %struct.Reg* %2274, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %2275 to i64*
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2277 = getelementptr inbounds %struct.GPR, %struct.GPR* %2276, i32 0, i32 1
  %2278 = getelementptr inbounds %struct.Reg, %struct.Reg* %2277, i32 0, i32 0
  %RAX.i1277 = bitcast %union.anon* %2278 to i64*
  %2279 = load i64, i64* %RAX.i1277
  %2280 = add i64 %2279, 14168
  %2281 = load i64, i64* %PC.i1276
  %2282 = add i64 %2281, 7
  store i64 %2282, i64* %PC.i1276
  %2283 = inttoptr i64 %2280 to i64*
  %2284 = load i64, i64* %2283
  store i64 %2284, i64* %RAX.i1277, align 8
  store %struct.Memory* %loadMem_44a8ee, %struct.Memory** %MEMORY
  %loadMem_44a8f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2286 = getelementptr inbounds %struct.GPR, %struct.GPR* %2285, i32 0, i32 33
  %2287 = getelementptr inbounds %struct.Reg, %struct.Reg* %2286, i32 0, i32 0
  %PC.i1273 = bitcast %union.anon* %2287 to i64*
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2289 = getelementptr inbounds %struct.GPR, %struct.GPR* %2288, i32 0, i32 5
  %2290 = getelementptr inbounds %struct.Reg, %struct.Reg* %2289, i32 0, i32 0
  %RCX.i1274 = bitcast %union.anon* %2290 to i64*
  %2291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2292 = getelementptr inbounds %struct.GPR, %struct.GPR* %2291, i32 0, i32 15
  %2293 = getelementptr inbounds %struct.Reg, %struct.Reg* %2292, i32 0, i32 0
  %RBP.i1275 = bitcast %union.anon* %2293 to i64*
  %2294 = load i64, i64* %RBP.i1275
  %2295 = sub i64 %2294, 32
  %2296 = load i64, i64* %PC.i1273
  %2297 = add i64 %2296, 4
  store i64 %2297, i64* %PC.i1273
  %2298 = inttoptr i64 %2295 to i64*
  %2299 = load i64, i64* %2298
  store i64 %2299, i64* %RCX.i1274, align 8
  store %struct.Memory* %loadMem_44a8f5, %struct.Memory** %MEMORY
  %loadMem_44a8f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2301 = getelementptr inbounds %struct.GPR, %struct.GPR* %2300, i32 0, i32 33
  %2302 = getelementptr inbounds %struct.Reg, %struct.Reg* %2301, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %2302 to i64*
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2304 = getelementptr inbounds %struct.GPR, %struct.GPR* %2303, i32 0, i32 5
  %2305 = getelementptr inbounds %struct.Reg, %struct.Reg* %2304, i32 0, i32 0
  %RCX.i1272 = bitcast %union.anon* %2305 to i64*
  %2306 = load i64, i64* %RCX.i1272
  %2307 = add i64 %2306, 548
  %2308 = load i64, i64* %PC.i1271
  %2309 = add i64 %2308, 7
  store i64 %2309, i64* %PC.i1271
  %2310 = inttoptr i64 %2307 to i32*
  %2311 = load i32, i32* %2310
  %2312 = sext i32 %2311 to i64
  store i64 %2312, i64* %RCX.i1272, align 8
  store %struct.Memory* %loadMem_44a8f9, %struct.Memory** %MEMORY
  %loadMem_44a900 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2314 = getelementptr inbounds %struct.GPR, %struct.GPR* %2313, i32 0, i32 33
  %2315 = getelementptr inbounds %struct.Reg, %struct.Reg* %2314, i32 0, i32 0
  %PC.i1269 = bitcast %union.anon* %2315 to i64*
  %2316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2317 = getelementptr inbounds %struct.GPR, %struct.GPR* %2316, i32 0, i32 5
  %2318 = getelementptr inbounds %struct.Reg, %struct.Reg* %2317, i32 0, i32 0
  %RCX.i1270 = bitcast %union.anon* %2318 to i64*
  %2319 = load i64, i64* %RCX.i1270
  %2320 = load i64, i64* %PC.i1269
  %2321 = add i64 %2320, 7
  store i64 %2321, i64* %PC.i1269
  %2322 = sext i64 %2319 to i128
  %2323 = and i128 %2322, -18446744073709551616
  %2324 = zext i64 %2319 to i128
  %2325 = or i128 %2323, %2324
  %2326 = mul i128 632, %2325
  %2327 = trunc i128 %2326 to i64
  store i64 %2327, i64* %RCX.i1270, align 8
  %2328 = sext i64 %2327 to i128
  %2329 = icmp ne i128 %2328, %2326
  %2330 = zext i1 %2329 to i8
  %2331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2330, i8* %2331, align 1
  %2332 = trunc i128 %2326 to i32
  %2333 = and i32 %2332, 255
  %2334 = call i32 @llvm.ctpop.i32(i32 %2333)
  %2335 = trunc i32 %2334 to i8
  %2336 = and i8 %2335, 1
  %2337 = xor i8 %2336, 1
  %2338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2337, i8* %2338, align 1
  %2339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2339, align 1
  %2340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2340, align 1
  %2341 = lshr i64 %2327, 63
  %2342 = trunc i64 %2341 to i8
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2342, i8* %2343, align 1
  %2344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2330, i8* %2344, align 1
  store %struct.Memory* %loadMem_44a900, %struct.Memory** %MEMORY
  %loadMem_44a907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2346 = getelementptr inbounds %struct.GPR, %struct.GPR* %2345, i32 0, i32 33
  %2347 = getelementptr inbounds %struct.Reg, %struct.Reg* %2346, i32 0, i32 0
  %PC.i1266 = bitcast %union.anon* %2347 to i64*
  %2348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2349 = getelementptr inbounds %struct.GPR, %struct.GPR* %2348, i32 0, i32 1
  %2350 = getelementptr inbounds %struct.Reg, %struct.Reg* %2349, i32 0, i32 0
  %RAX.i1267 = bitcast %union.anon* %2350 to i64*
  %2351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2352 = getelementptr inbounds %struct.GPR, %struct.GPR* %2351, i32 0, i32 5
  %2353 = getelementptr inbounds %struct.Reg, %struct.Reg* %2352, i32 0, i32 0
  %RCX.i1268 = bitcast %union.anon* %2353 to i64*
  %2354 = load i64, i64* %RAX.i1267
  %2355 = load i64, i64* %RCX.i1268
  %2356 = load i64, i64* %PC.i1266
  %2357 = add i64 %2356, 3
  store i64 %2357, i64* %PC.i1266
  %2358 = add i64 %2355, %2354
  store i64 %2358, i64* %RAX.i1267, align 8
  %2359 = icmp ult i64 %2358, %2354
  %2360 = icmp ult i64 %2358, %2355
  %2361 = or i1 %2359, %2360
  %2362 = zext i1 %2361 to i8
  %2363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2362, i8* %2363, align 1
  %2364 = trunc i64 %2358 to i32
  %2365 = and i32 %2364, 255
  %2366 = call i32 @llvm.ctpop.i32(i32 %2365)
  %2367 = trunc i32 %2366 to i8
  %2368 = and i8 %2367, 1
  %2369 = xor i8 %2368, 1
  %2370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2369, i8* %2370, align 1
  %2371 = xor i64 %2355, %2354
  %2372 = xor i64 %2371, %2358
  %2373 = lshr i64 %2372, 4
  %2374 = trunc i64 %2373 to i8
  %2375 = and i8 %2374, 1
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2375, i8* %2376, align 1
  %2377 = icmp eq i64 %2358, 0
  %2378 = zext i1 %2377 to i8
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2378, i8* %2379, align 1
  %2380 = lshr i64 %2358, 63
  %2381 = trunc i64 %2380 to i8
  %2382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2381, i8* %2382, align 1
  %2383 = lshr i64 %2354, 63
  %2384 = lshr i64 %2355, 63
  %2385 = xor i64 %2380, %2383
  %2386 = xor i64 %2380, %2384
  %2387 = add i64 %2385, %2386
  %2388 = icmp eq i64 %2387, 2
  %2389 = zext i1 %2388 to i8
  %2390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2389, i8* %2390, align 1
  store %struct.Memory* %loadMem_44a907, %struct.Memory** %MEMORY
  %loadMem_44a90a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2392 = getelementptr inbounds %struct.GPR, %struct.GPR* %2391, i32 0, i32 33
  %2393 = getelementptr inbounds %struct.Reg, %struct.Reg* %2392, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %2393 to i64*
  %2394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2395 = getelementptr inbounds %struct.GPR, %struct.GPR* %2394, i32 0, i32 1
  %2396 = getelementptr inbounds %struct.Reg, %struct.Reg* %2395, i32 0, i32 0
  %RAX.i1265 = bitcast %union.anon* %2396 to i64*
  %2397 = load i64, i64* %RAX.i1265
  %2398 = add i64 %2397, 532
  %2399 = load i64, i64* %PC.i1264
  %2400 = add i64 %2399, 7
  store i64 %2400, i64* %PC.i1264
  %2401 = inttoptr i64 %2398 to i32*
  %2402 = load i32, i32* %2401
  %2403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2403, align 1
  %2404 = and i32 %2402, 255
  %2405 = call i32 @llvm.ctpop.i32(i32 %2404)
  %2406 = trunc i32 %2405 to i8
  %2407 = and i8 %2406, 1
  %2408 = xor i8 %2407, 1
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2408, i8* %2409, align 1
  %2410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2410, align 1
  %2411 = icmp eq i32 %2402, 0
  %2412 = zext i1 %2411 to i8
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2412, i8* %2413, align 1
  %2414 = lshr i32 %2402, 31
  %2415 = trunc i32 %2414 to i8
  %2416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2415, i8* %2416, align 1
  %2417 = lshr i32 %2402, 31
  %2418 = xor i32 %2414, %2417
  %2419 = add i32 %2418, %2417
  %2420 = icmp eq i32 %2419, 2
  %2421 = zext i1 %2420 to i8
  %2422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2421, i8* %2422, align 1
  store %struct.Memory* %loadMem_44a90a, %struct.Memory** %MEMORY
  %loadMem_44a911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2424 = getelementptr inbounds %struct.GPR, %struct.GPR* %2423, i32 0, i32 33
  %2425 = getelementptr inbounds %struct.Reg, %struct.Reg* %2424, i32 0, i32 0
  %PC.i1263 = bitcast %union.anon* %2425 to i64*
  %2426 = load i64, i64* %PC.i1263
  %2427 = add i64 %2426, 33
  %2428 = load i64, i64* %PC.i1263
  %2429 = add i64 %2428, 6
  %2430 = load i64, i64* %PC.i1263
  %2431 = add i64 %2430, 6
  store i64 %2431, i64* %PC.i1263
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2433 = load i8, i8* %2432, align 1
  %2434 = icmp eq i8 %2433, 0
  %2435 = zext i1 %2434 to i8
  store i8 %2435, i8* %BRANCH_TAKEN, align 1
  %2436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2437 = select i1 %2434, i64 %2427, i64 %2429
  store i64 %2437, i64* %2436, align 8
  store %struct.Memory* %loadMem_44a911, %struct.Memory** %MEMORY
  %loadBr_44a911 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a911 = icmp eq i8 %loadBr_44a911, 1
  br i1 %cmpBr_44a911, label %block_.L_44a932, label %block_44a917

block_44a917:                                     ; preds = %block_44a8e6
  %loadMem_44a917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2439 = getelementptr inbounds %struct.GPR, %struct.GPR* %2438, i32 0, i32 33
  %2440 = getelementptr inbounds %struct.Reg, %struct.Reg* %2439, i32 0, i32 0
  %PC.i1260 = bitcast %union.anon* %2440 to i64*
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2442 = getelementptr inbounds %struct.GPR, %struct.GPR* %2441, i32 0, i32 1
  %2443 = getelementptr inbounds %struct.Reg, %struct.Reg* %2442, i32 0, i32 0
  %RAX.i1261 = bitcast %union.anon* %2443 to i64*
  %2444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2445 = getelementptr inbounds %struct.GPR, %struct.GPR* %2444, i32 0, i32 15
  %2446 = getelementptr inbounds %struct.Reg, %struct.Reg* %2445, i32 0, i32 0
  %RBP.i1262 = bitcast %union.anon* %2446 to i64*
  %2447 = load i64, i64* %RBP.i1262
  %2448 = sub i64 %2447, 24
  %2449 = load i64, i64* %PC.i1260
  %2450 = add i64 %2449, 4
  store i64 %2450, i64* %PC.i1260
  %2451 = inttoptr i64 %2448 to i64*
  %2452 = load i64, i64* %2451
  store i64 %2452, i64* %RAX.i1261, align 8
  store %struct.Memory* %loadMem_44a917, %struct.Memory** %MEMORY
  %loadMem_44a91b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2454 = getelementptr inbounds %struct.GPR, %struct.GPR* %2453, i32 0, i32 33
  %2455 = getelementptr inbounds %struct.Reg, %struct.Reg* %2454, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %2455 to i64*
  %2456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2457 = getelementptr inbounds %struct.GPR, %struct.GPR* %2456, i32 0, i32 1
  %2458 = getelementptr inbounds %struct.Reg, %struct.Reg* %2457, i32 0, i32 0
  %RAX.i1258 = bitcast %union.anon* %2458 to i64*
  %2459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2460 = getelementptr inbounds %struct.GPR, %struct.GPR* %2459, i32 0, i32 5
  %2461 = getelementptr inbounds %struct.Reg, %struct.Reg* %2460, i32 0, i32 0
  %RCX.i1259 = bitcast %union.anon* %2461 to i64*
  %2462 = load i64, i64* %RAX.i1258
  %2463 = add i64 %2462, 4
  %2464 = load i64, i64* %PC.i1257
  %2465 = add i64 %2464, 3
  store i64 %2465, i64* %PC.i1257
  %2466 = inttoptr i64 %2463 to i32*
  %2467 = load i32, i32* %2466
  %2468 = zext i32 %2467 to i64
  store i64 %2468, i64* %RCX.i1259, align 8
  store %struct.Memory* %loadMem_44a91b, %struct.Memory** %MEMORY
  %loadMem_44a91e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2470 = getelementptr inbounds %struct.GPR, %struct.GPR* %2469, i32 0, i32 33
  %2471 = getelementptr inbounds %struct.Reg, %struct.Reg* %2470, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %2471 to i64*
  %2472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2473 = getelementptr inbounds %struct.GPR, %struct.GPR* %2472, i32 0, i32 5
  %2474 = getelementptr inbounds %struct.Reg, %struct.Reg* %2473, i32 0, i32 0
  %RCX.i1256 = bitcast %union.anon* %2474 to i64*
  %2475 = load i64, i64* %RCX.i1256
  %2476 = load i64, i64* %PC.i1255
  %2477 = add i64 %2476, 3
  store i64 %2477, i64* %PC.i1255
  %2478 = trunc i64 %2475 to i32
  %2479 = add i32 1, %2478
  %2480 = zext i32 %2479 to i64
  store i64 %2480, i64* %RCX.i1256, align 8
  %2481 = icmp ult i32 %2479, %2478
  %2482 = icmp ult i32 %2479, 1
  %2483 = or i1 %2481, %2482
  %2484 = zext i1 %2483 to i8
  %2485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2484, i8* %2485, align 1
  %2486 = and i32 %2479, 255
  %2487 = call i32 @llvm.ctpop.i32(i32 %2486)
  %2488 = trunc i32 %2487 to i8
  %2489 = and i8 %2488, 1
  %2490 = xor i8 %2489, 1
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2490, i8* %2491, align 1
  %2492 = xor i64 1, %2475
  %2493 = trunc i64 %2492 to i32
  %2494 = xor i32 %2493, %2479
  %2495 = lshr i32 %2494, 4
  %2496 = trunc i32 %2495 to i8
  %2497 = and i8 %2496, 1
  %2498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2497, i8* %2498, align 1
  %2499 = icmp eq i32 %2479, 0
  %2500 = zext i1 %2499 to i8
  %2501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2500, i8* %2501, align 1
  %2502 = lshr i32 %2479, 31
  %2503 = trunc i32 %2502 to i8
  %2504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2503, i8* %2504, align 1
  %2505 = lshr i32 %2478, 31
  %2506 = xor i32 %2502, %2505
  %2507 = add i32 %2506, %2502
  %2508 = icmp eq i32 %2507, 2
  %2509 = zext i1 %2508 to i8
  %2510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2509, i8* %2510, align 1
  store %struct.Memory* %loadMem_44a91e, %struct.Memory** %MEMORY
  %loadMem_44a921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2512 = getelementptr inbounds %struct.GPR, %struct.GPR* %2511, i32 0, i32 33
  %2513 = getelementptr inbounds %struct.Reg, %struct.Reg* %2512, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %2513 to i64*
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2515 = getelementptr inbounds %struct.GPR, %struct.GPR* %2514, i32 0, i32 5
  %2516 = getelementptr inbounds %struct.Reg, %struct.Reg* %2515, i32 0, i32 0
  %ECX.i1253 = bitcast %union.anon* %2516 to i32*
  %2517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2518 = getelementptr inbounds %struct.GPR, %struct.GPR* %2517, i32 0, i32 1
  %2519 = getelementptr inbounds %struct.Reg, %struct.Reg* %2518, i32 0, i32 0
  %RAX.i1254 = bitcast %union.anon* %2519 to i64*
  %2520 = load i64, i64* %RAX.i1254
  %2521 = add i64 %2520, 4
  %2522 = load i32, i32* %ECX.i1253
  %2523 = zext i32 %2522 to i64
  %2524 = load i64, i64* %PC.i1252
  %2525 = add i64 %2524, 3
  store i64 %2525, i64* %PC.i1252
  %2526 = inttoptr i64 %2521 to i32*
  store i32 %2522, i32* %2526
  store %struct.Memory* %loadMem_44a921, %struct.Memory** %MEMORY
  %loadMem_44a924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2528 = getelementptr inbounds %struct.GPR, %struct.GPR* %2527, i32 0, i32 33
  %2529 = getelementptr inbounds %struct.Reg, %struct.Reg* %2528, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %2529 to i64*
  %2530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2531 = getelementptr inbounds %struct.GPR, %struct.GPR* %2530, i32 0, i32 5
  %2532 = getelementptr inbounds %struct.Reg, %struct.Reg* %2531, i32 0, i32 0
  %RCX.i1250 = bitcast %union.anon* %2532 to i64*
  %2533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2534 = getelementptr inbounds %struct.GPR, %struct.GPR* %2533, i32 0, i32 15
  %2535 = getelementptr inbounds %struct.Reg, %struct.Reg* %2534, i32 0, i32 0
  %RBP.i1251 = bitcast %union.anon* %2535 to i64*
  %2536 = load i64, i64* %RBP.i1251
  %2537 = sub i64 %2536, 12
  %2538 = load i64, i64* %PC.i1249
  %2539 = add i64 %2538, 3
  store i64 %2539, i64* %PC.i1249
  %2540 = inttoptr i64 %2537 to i32*
  %2541 = load i32, i32* %2540
  %2542 = zext i32 %2541 to i64
  store i64 %2542, i64* %RCX.i1250, align 8
  store %struct.Memory* %loadMem_44a924, %struct.Memory** %MEMORY
  %loadMem_44a927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2544 = getelementptr inbounds %struct.GPR, %struct.GPR* %2543, i32 0, i32 33
  %2545 = getelementptr inbounds %struct.Reg, %struct.Reg* %2544, i32 0, i32 0
  %PC.i1247 = bitcast %union.anon* %2545 to i64*
  %2546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2547 = getelementptr inbounds %struct.GPR, %struct.GPR* %2546, i32 0, i32 5
  %2548 = getelementptr inbounds %struct.Reg, %struct.Reg* %2547, i32 0, i32 0
  %RCX.i1248 = bitcast %union.anon* %2548 to i64*
  %2549 = load i64, i64* %RCX.i1248
  %2550 = load i64, i64* %PC.i1247
  %2551 = add i64 %2550, 2
  store i64 %2551, i64* %PC.i1247
  %2552 = trunc i64 %2549 to i32
  %2553 = shl i32 %2552, 1
  %2554 = icmp slt i32 %2552, 0
  %2555 = icmp slt i32 %2553, 0
  %2556 = xor i1 %2554, %2555
  %2557 = zext i32 %2553 to i64
  store i64 %2557, i64* %RCX.i1248, align 8
  %2558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2559 = zext i1 %2554 to i8
  store i8 %2559, i8* %2558, align 1
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2561 = and i32 %2553, 254
  %2562 = call i32 @llvm.ctpop.i32(i32 %2561)
  %2563 = trunc i32 %2562 to i8
  %2564 = and i8 %2563, 1
  %2565 = xor i8 %2564, 1
  store i8 %2565, i8* %2560, align 1
  %2566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2566, align 1
  %2567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2568 = icmp eq i32 %2553, 0
  %2569 = zext i1 %2568 to i8
  store i8 %2569, i8* %2567, align 1
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2571 = lshr i32 %2553, 31
  %2572 = trunc i32 %2571 to i8
  store i8 %2572, i8* %2570, align 1
  %2573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2574 = zext i1 %2556 to i8
  store i8 %2574, i8* %2573, align 1
  store %struct.Memory* %loadMem_44a927, %struct.Memory** %MEMORY
  %loadMem_44a92a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2576 = getelementptr inbounds %struct.GPR, %struct.GPR* %2575, i32 0, i32 33
  %2577 = getelementptr inbounds %struct.Reg, %struct.Reg* %2576, i32 0, i32 0
  %PC.i1244 = bitcast %union.anon* %2577 to i64*
  %2578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2579 = getelementptr inbounds %struct.GPR, %struct.GPR* %2578, i32 0, i32 5
  %2580 = getelementptr inbounds %struct.Reg, %struct.Reg* %2579, i32 0, i32 0
  %ECX.i1245 = bitcast %union.anon* %2580 to i32*
  %2581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2582 = getelementptr inbounds %struct.GPR, %struct.GPR* %2581, i32 0, i32 15
  %2583 = getelementptr inbounds %struct.Reg, %struct.Reg* %2582, i32 0, i32 0
  %RBP.i1246 = bitcast %union.anon* %2583 to i64*
  %2584 = load i64, i64* %RBP.i1246
  %2585 = sub i64 %2584, 44
  %2586 = load i32, i32* %ECX.i1245
  %2587 = zext i32 %2586 to i64
  %2588 = load i64, i64* %PC.i1244
  %2589 = add i64 %2588, 3
  store i64 %2589, i64* %PC.i1244
  %2590 = inttoptr i64 %2585 to i32*
  store i32 %2586, i32* %2590
  store %struct.Memory* %loadMem_44a92a, %struct.Memory** %MEMORY
  %loadMem_44a92d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2592 = getelementptr inbounds %struct.GPR, %struct.GPR* %2591, i32 0, i32 33
  %2593 = getelementptr inbounds %struct.Reg, %struct.Reg* %2592, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %2593 to i64*
  %2594 = load i64, i64* %PC.i1243
  %2595 = add i64 %2594, 11
  %2596 = load i64, i64* %PC.i1243
  %2597 = add i64 %2596, 5
  store i64 %2597, i64* %PC.i1243
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2595, i64* %2598, align 8
  store %struct.Memory* %loadMem_44a92d, %struct.Memory** %MEMORY
  br label %block_.L_44a938

block_.L_44a932:                                  ; preds = %block_44a8e6
  %loadMem_44a932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2600 = getelementptr inbounds %struct.GPR, %struct.GPR* %2599, i32 0, i32 33
  %2601 = getelementptr inbounds %struct.Reg, %struct.Reg* %2600, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %2601 to i64*
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2603 = getelementptr inbounds %struct.GPR, %struct.GPR* %2602, i32 0, i32 1
  %2604 = getelementptr inbounds %struct.Reg, %struct.Reg* %2603, i32 0, i32 0
  %RAX.i1241 = bitcast %union.anon* %2604 to i64*
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2606 = getelementptr inbounds %struct.GPR, %struct.GPR* %2605, i32 0, i32 15
  %2607 = getelementptr inbounds %struct.Reg, %struct.Reg* %2606, i32 0, i32 0
  %RBP.i1242 = bitcast %union.anon* %2607 to i64*
  %2608 = load i64, i64* %RBP.i1242
  %2609 = sub i64 %2608, 12
  %2610 = load i64, i64* %PC.i1240
  %2611 = add i64 %2610, 3
  store i64 %2611, i64* %PC.i1240
  %2612 = inttoptr i64 %2609 to i32*
  %2613 = load i32, i32* %2612
  %2614 = zext i32 %2613 to i64
  store i64 %2614, i64* %RAX.i1241, align 8
  store %struct.Memory* %loadMem_44a932, %struct.Memory** %MEMORY
  %loadMem_44a935 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2616 = getelementptr inbounds %struct.GPR, %struct.GPR* %2615, i32 0, i32 33
  %2617 = getelementptr inbounds %struct.Reg, %struct.Reg* %2616, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %2617 to i64*
  %2618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2619 = getelementptr inbounds %struct.GPR, %struct.GPR* %2618, i32 0, i32 1
  %2620 = getelementptr inbounds %struct.Reg, %struct.Reg* %2619, i32 0, i32 0
  %EAX.i1238 = bitcast %union.anon* %2620 to i32*
  %2621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2622 = getelementptr inbounds %struct.GPR, %struct.GPR* %2621, i32 0, i32 15
  %2623 = getelementptr inbounds %struct.Reg, %struct.Reg* %2622, i32 0, i32 0
  %RBP.i1239 = bitcast %union.anon* %2623 to i64*
  %2624 = load i64, i64* %RBP.i1239
  %2625 = sub i64 %2624, 44
  %2626 = load i32, i32* %EAX.i1238
  %2627 = zext i32 %2626 to i64
  %2628 = load i64, i64* %PC.i1237
  %2629 = add i64 %2628, 3
  store i64 %2629, i64* %PC.i1237
  %2630 = inttoptr i64 %2625 to i32*
  store i32 %2626, i32* %2630
  store %struct.Memory* %loadMem_44a935, %struct.Memory** %MEMORY
  br label %block_.L_44a938

block_.L_44a938:                                  ; preds = %block_.L_44a932, %block_44a917
  %loadMem_44a938 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2632 = getelementptr inbounds %struct.GPR, %struct.GPR* %2631, i32 0, i32 33
  %2633 = getelementptr inbounds %struct.Reg, %struct.Reg* %2632, i32 0, i32 0
  %PC.i1236 = bitcast %union.anon* %2633 to i64*
  %2634 = load i64, i64* %PC.i1236
  %2635 = add i64 %2634, 5
  %2636 = load i64, i64* %PC.i1236
  %2637 = add i64 %2636, 5
  store i64 %2637, i64* %PC.i1236
  %2638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2635, i64* %2638, align 8
  store %struct.Memory* %loadMem_44a938, %struct.Memory** %MEMORY
  br label %block_.L_44a93d

block_.L_44a93d:                                  ; preds = %block_.L_44a938, %block_44a8b4
  %loadMem_44a93d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2640 = getelementptr inbounds %struct.GPR, %struct.GPR* %2639, i32 0, i32 33
  %2641 = getelementptr inbounds %struct.Reg, %struct.Reg* %2640, i32 0, i32 0
  %PC.i1235 = bitcast %union.anon* %2641 to i64*
  %2642 = load i64, i64* %PC.i1235
  %2643 = add i64 %2642, 47
  %2644 = load i64, i64* %PC.i1235
  %2645 = add i64 %2644, 5
  store i64 %2645, i64* %PC.i1235
  %2646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2643, i64* %2646, align 8
  store %struct.Memory* %loadMem_44a93d, %struct.Memory** %MEMORY
  br label %block_.L_44a96c

block_.L_44a942:                                  ; preds = %block_.L_44a8a5
  %loadMem_44a942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2648 = getelementptr inbounds %struct.GPR, %struct.GPR* %2647, i32 0, i32 33
  %2649 = getelementptr inbounds %struct.Reg, %struct.Reg* %2648, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %2649 to i64*
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2651 = getelementptr inbounds %struct.GPR, %struct.GPR* %2650, i32 0, i32 1
  %2652 = getelementptr inbounds %struct.Reg, %struct.Reg* %2651, i32 0, i32 0
  %RAX.i1233 = bitcast %union.anon* %2652 to i64*
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2654 = getelementptr inbounds %struct.GPR, %struct.GPR* %2653, i32 0, i32 15
  %2655 = getelementptr inbounds %struct.Reg, %struct.Reg* %2654, i32 0, i32 0
  %RBP.i1234 = bitcast %union.anon* %2655 to i64*
  %2656 = load i64, i64* %RBP.i1234
  %2657 = sub i64 %2656, 32
  %2658 = load i64, i64* %PC.i1232
  %2659 = add i64 %2658, 4
  store i64 %2659, i64* %PC.i1232
  %2660 = inttoptr i64 %2657 to i64*
  %2661 = load i64, i64* %2660
  store i64 %2661, i64* %RAX.i1233, align 8
  store %struct.Memory* %loadMem_44a942, %struct.Memory** %MEMORY
  %loadMem_44a946 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2663 = getelementptr inbounds %struct.GPR, %struct.GPR* %2662, i32 0, i32 33
  %2664 = getelementptr inbounds %struct.Reg, %struct.Reg* %2663, i32 0, i32 0
  %PC.i1229 = bitcast %union.anon* %2664 to i64*
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2666 = getelementptr inbounds %struct.GPR, %struct.GPR* %2665, i32 0, i32 1
  %2667 = getelementptr inbounds %struct.Reg, %struct.Reg* %2666, i32 0, i32 0
  %RAX.i1230 = bitcast %union.anon* %2667 to i64*
  %2668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2669 = getelementptr inbounds %struct.GPR, %struct.GPR* %2668, i32 0, i32 5
  %2670 = getelementptr inbounds %struct.Reg, %struct.Reg* %2669, i32 0, i32 0
  %RCX.i1231 = bitcast %union.anon* %2670 to i64*
  %2671 = load i64, i64* %RAX.i1230
  %2672 = add i64 %2671, 548
  %2673 = load i64, i64* %PC.i1229
  %2674 = add i64 %2673, 6
  store i64 %2674, i64* %PC.i1229
  %2675 = inttoptr i64 %2672 to i32*
  %2676 = load i32, i32* %2675
  %2677 = zext i32 %2676 to i64
  store i64 %2677, i64* %RCX.i1231, align 8
  store %struct.Memory* %loadMem_44a946, %struct.Memory** %MEMORY
  %loadMem_44a94c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2679 = getelementptr inbounds %struct.GPR, %struct.GPR* %2678, i32 0, i32 33
  %2680 = getelementptr inbounds %struct.Reg, %struct.Reg* %2679, i32 0, i32 0
  %PC.i1227 = bitcast %union.anon* %2680 to i64*
  %2681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2682 = getelementptr inbounds %struct.GPR, %struct.GPR* %2681, i32 0, i32 5
  %2683 = getelementptr inbounds %struct.Reg, %struct.Reg* %2682, i32 0, i32 0
  %RCX.i1228 = bitcast %union.anon* %2683 to i64*
  %2684 = load i64, i64* %RCX.i1228
  %2685 = load i64, i64* %PC.i1227
  %2686 = add i64 %2685, 3
  store i64 %2686, i64* %PC.i1227
  %2687 = trunc i64 %2684 to i32
  %2688 = add i32 1, %2687
  %2689 = zext i32 %2688 to i64
  store i64 %2689, i64* %RCX.i1228, align 8
  %2690 = icmp ult i32 %2688, %2687
  %2691 = icmp ult i32 %2688, 1
  %2692 = or i1 %2690, %2691
  %2693 = zext i1 %2692 to i8
  %2694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2693, i8* %2694, align 1
  %2695 = and i32 %2688, 255
  %2696 = call i32 @llvm.ctpop.i32(i32 %2695)
  %2697 = trunc i32 %2696 to i8
  %2698 = and i8 %2697, 1
  %2699 = xor i8 %2698, 1
  %2700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2699, i8* %2700, align 1
  %2701 = xor i64 1, %2684
  %2702 = trunc i64 %2701 to i32
  %2703 = xor i32 %2702, %2688
  %2704 = lshr i32 %2703, 4
  %2705 = trunc i32 %2704 to i8
  %2706 = and i8 %2705, 1
  %2707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2706, i8* %2707, align 1
  %2708 = icmp eq i32 %2688, 0
  %2709 = zext i1 %2708 to i8
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2709, i8* %2710, align 1
  %2711 = lshr i32 %2688, 31
  %2712 = trunc i32 %2711 to i8
  %2713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2712, i8* %2713, align 1
  %2714 = lshr i32 %2687, 31
  %2715 = xor i32 %2711, %2714
  %2716 = add i32 %2715, %2711
  %2717 = icmp eq i32 %2716, 2
  %2718 = zext i1 %2717 to i8
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2718, i8* %2719, align 1
  store %struct.Memory* %loadMem_44a94c, %struct.Memory** %MEMORY
  %loadMem_44a94f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2721 = getelementptr inbounds %struct.GPR, %struct.GPR* %2720, i32 0, i32 33
  %2722 = getelementptr inbounds %struct.Reg, %struct.Reg* %2721, i32 0, i32 0
  %PC.i1224 = bitcast %union.anon* %2722 to i64*
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2724 = getelementptr inbounds %struct.GPR, %struct.GPR* %2723, i32 0, i32 1
  %2725 = getelementptr inbounds %struct.Reg, %struct.Reg* %2724, i32 0, i32 0
  %RAX.i1225 = bitcast %union.anon* %2725 to i64*
  %2726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2727 = getelementptr inbounds %struct.GPR, %struct.GPR* %2726, i32 0, i32 15
  %2728 = getelementptr inbounds %struct.Reg, %struct.Reg* %2727, i32 0, i32 0
  %RBP.i1226 = bitcast %union.anon* %2728 to i64*
  %2729 = load i64, i64* %RBP.i1226
  %2730 = sub i64 %2729, 24
  %2731 = load i64, i64* %PC.i1224
  %2732 = add i64 %2731, 4
  store i64 %2732, i64* %PC.i1224
  %2733 = inttoptr i64 %2730 to i64*
  %2734 = load i64, i64* %2733
  store i64 %2734, i64* %RAX.i1225, align 8
  store %struct.Memory* %loadMem_44a94f, %struct.Memory** %MEMORY
  %loadMem_44a953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2736 = getelementptr inbounds %struct.GPR, %struct.GPR* %2735, i32 0, i32 33
  %2737 = getelementptr inbounds %struct.Reg, %struct.Reg* %2736, i32 0, i32 0
  %PC.i1221 = bitcast %union.anon* %2737 to i64*
  %2738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2739 = getelementptr inbounds %struct.GPR, %struct.GPR* %2738, i32 0, i32 5
  %2740 = getelementptr inbounds %struct.Reg, %struct.Reg* %2739, i32 0, i32 0
  %ECX.i1222 = bitcast %union.anon* %2740 to i32*
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2742 = getelementptr inbounds %struct.GPR, %struct.GPR* %2741, i32 0, i32 1
  %2743 = getelementptr inbounds %struct.Reg, %struct.Reg* %2742, i32 0, i32 0
  %RAX.i1223 = bitcast %union.anon* %2743 to i64*
  %2744 = load i64, i64* %RAX.i1223
  %2745 = add i64 %2744, 4
  %2746 = load i32, i32* %ECX.i1222
  %2747 = zext i32 %2746 to i64
  %2748 = load i64, i64* %PC.i1221
  %2749 = add i64 %2748, 3
  store i64 %2749, i64* %PC.i1221
  %2750 = inttoptr i64 %2745 to i32*
  store i32 %2746, i32* %2750
  store %struct.Memory* %loadMem_44a953, %struct.Memory** %MEMORY
  %loadMem_44a956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2752 = getelementptr inbounds %struct.GPR, %struct.GPR* %2751, i32 0, i32 33
  %2753 = getelementptr inbounds %struct.Reg, %struct.Reg* %2752, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %2753 to i64*
  %2754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2755 = getelementptr inbounds %struct.GPR, %struct.GPR* %2754, i32 0, i32 1
  %2756 = getelementptr inbounds %struct.Reg, %struct.Reg* %2755, i32 0, i32 0
  %RAX.i1219 = bitcast %union.anon* %2756 to i64*
  %2757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2758 = getelementptr inbounds %struct.GPR, %struct.GPR* %2757, i32 0, i32 15
  %2759 = getelementptr inbounds %struct.Reg, %struct.Reg* %2758, i32 0, i32 0
  %RBP.i1220 = bitcast %union.anon* %2759 to i64*
  %2760 = load i64, i64* %RBP.i1220
  %2761 = sub i64 %2760, 32
  %2762 = load i64, i64* %PC.i1218
  %2763 = add i64 %2762, 4
  store i64 %2763, i64* %PC.i1218
  %2764 = inttoptr i64 %2761 to i64*
  %2765 = load i64, i64* %2764
  store i64 %2765, i64* %RAX.i1219, align 8
  store %struct.Memory* %loadMem_44a956, %struct.Memory** %MEMORY
  %loadMem_44a95a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2767 = getelementptr inbounds %struct.GPR, %struct.GPR* %2766, i32 0, i32 33
  %2768 = getelementptr inbounds %struct.Reg, %struct.Reg* %2767, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %2768 to i64*
  %2769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2770 = getelementptr inbounds %struct.GPR, %struct.GPR* %2769, i32 0, i32 1
  %2771 = getelementptr inbounds %struct.Reg, %struct.Reg* %2770, i32 0, i32 0
  %RAX.i1216 = bitcast %union.anon* %2771 to i64*
  %2772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2773 = getelementptr inbounds %struct.GPR, %struct.GPR* %2772, i32 0, i32 5
  %2774 = getelementptr inbounds %struct.Reg, %struct.Reg* %2773, i32 0, i32 0
  %RCX.i1217 = bitcast %union.anon* %2774 to i64*
  %2775 = load i64, i64* %RAX.i1216
  %2776 = add i64 %2775, 564
  %2777 = load i64, i64* %PC.i1215
  %2778 = add i64 %2777, 6
  store i64 %2778, i64* %PC.i1215
  %2779 = inttoptr i64 %2776 to i32*
  %2780 = load i32, i32* %2779
  %2781 = zext i32 %2780 to i64
  store i64 %2781, i64* %RCX.i1217, align 8
  store %struct.Memory* %loadMem_44a95a, %struct.Memory** %MEMORY
  %loadMem_44a960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2783 = getelementptr inbounds %struct.GPR, %struct.GPR* %2782, i32 0, i32 33
  %2784 = getelementptr inbounds %struct.Reg, %struct.Reg* %2783, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %2784 to i64*
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2786 = getelementptr inbounds %struct.GPR, %struct.GPR* %2785, i32 0, i32 1
  %2787 = getelementptr inbounds %struct.Reg, %struct.Reg* %2786, i32 0, i32 0
  %RAX.i1213 = bitcast %union.anon* %2787 to i64*
  %2788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2789 = getelementptr inbounds %struct.GPR, %struct.GPR* %2788, i32 0, i32 15
  %2790 = getelementptr inbounds %struct.Reg, %struct.Reg* %2789, i32 0, i32 0
  %RBP.i1214 = bitcast %union.anon* %2790 to i64*
  %2791 = load i64, i64* %RBP.i1214
  %2792 = sub i64 %2791, 24
  %2793 = load i64, i64* %PC.i1212
  %2794 = add i64 %2793, 4
  store i64 %2794, i64* %PC.i1212
  %2795 = inttoptr i64 %2792 to i64*
  %2796 = load i64, i64* %2795
  store i64 %2796, i64* %RAX.i1213, align 8
  store %struct.Memory* %loadMem_44a960, %struct.Memory** %MEMORY
  %loadMem_44a964 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2798 = getelementptr inbounds %struct.GPR, %struct.GPR* %2797, i32 0, i32 33
  %2799 = getelementptr inbounds %struct.Reg, %struct.Reg* %2798, i32 0, i32 0
  %PC.i1209 = bitcast %union.anon* %2799 to i64*
  %2800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2801 = getelementptr inbounds %struct.GPR, %struct.GPR* %2800, i32 0, i32 5
  %2802 = getelementptr inbounds %struct.Reg, %struct.Reg* %2801, i32 0, i32 0
  %ECX.i1210 = bitcast %union.anon* %2802 to i32*
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2804 = getelementptr inbounds %struct.GPR, %struct.GPR* %2803, i32 0, i32 1
  %2805 = getelementptr inbounds %struct.Reg, %struct.Reg* %2804, i32 0, i32 0
  %RAX.i1211 = bitcast %union.anon* %2805 to i64*
  %2806 = load i64, i64* %RAX.i1211
  %2807 = load i32, i32* %ECX.i1210
  %2808 = zext i32 %2807 to i64
  %2809 = load i64, i64* %PC.i1209
  %2810 = add i64 %2809, 2
  store i64 %2810, i64* %PC.i1209
  %2811 = inttoptr i64 %2806 to i32*
  store i32 %2807, i32* %2811
  store %struct.Memory* %loadMem_44a964, %struct.Memory** %MEMORY
  %loadMem_44a966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2813 = getelementptr inbounds %struct.GPR, %struct.GPR* %2812, i32 0, i32 33
  %2814 = getelementptr inbounds %struct.Reg, %struct.Reg* %2813, i32 0, i32 0
  %PC.i1206 = bitcast %union.anon* %2814 to i64*
  %2815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2816 = getelementptr inbounds %struct.GPR, %struct.GPR* %2815, i32 0, i32 5
  %2817 = getelementptr inbounds %struct.Reg, %struct.Reg* %2816, i32 0, i32 0
  %RCX.i1207 = bitcast %union.anon* %2817 to i64*
  %2818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2819 = getelementptr inbounds %struct.GPR, %struct.GPR* %2818, i32 0, i32 15
  %2820 = getelementptr inbounds %struct.Reg, %struct.Reg* %2819, i32 0, i32 0
  %RBP.i1208 = bitcast %union.anon* %2820 to i64*
  %2821 = load i64, i64* %RBP.i1208
  %2822 = sub i64 %2821, 12
  %2823 = load i64, i64* %PC.i1206
  %2824 = add i64 %2823, 3
  store i64 %2824, i64* %PC.i1206
  %2825 = inttoptr i64 %2822 to i32*
  %2826 = load i32, i32* %2825
  %2827 = zext i32 %2826 to i64
  store i64 %2827, i64* %RCX.i1207, align 8
  store %struct.Memory* %loadMem_44a966, %struct.Memory** %MEMORY
  %loadMem_44a969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2829 = getelementptr inbounds %struct.GPR, %struct.GPR* %2828, i32 0, i32 33
  %2830 = getelementptr inbounds %struct.Reg, %struct.Reg* %2829, i32 0, i32 0
  %PC.i1203 = bitcast %union.anon* %2830 to i64*
  %2831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2832 = getelementptr inbounds %struct.GPR, %struct.GPR* %2831, i32 0, i32 5
  %2833 = getelementptr inbounds %struct.Reg, %struct.Reg* %2832, i32 0, i32 0
  %ECX.i1204 = bitcast %union.anon* %2833 to i32*
  %2834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2835 = getelementptr inbounds %struct.GPR, %struct.GPR* %2834, i32 0, i32 15
  %2836 = getelementptr inbounds %struct.Reg, %struct.Reg* %2835, i32 0, i32 0
  %RBP.i1205 = bitcast %union.anon* %2836 to i64*
  %2837 = load i64, i64* %RBP.i1205
  %2838 = sub i64 %2837, 44
  %2839 = load i32, i32* %ECX.i1204
  %2840 = zext i32 %2839 to i64
  %2841 = load i64, i64* %PC.i1203
  %2842 = add i64 %2841, 3
  store i64 %2842, i64* %PC.i1203
  %2843 = inttoptr i64 %2838 to i32*
  store i32 %2839, i32* %2843
  store %struct.Memory* %loadMem_44a969, %struct.Memory** %MEMORY
  br label %block_.L_44a96c

block_.L_44a96c:                                  ; preds = %block_.L_44a942, %block_.L_44a93d
  %loadMem_44a96c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2845 = getelementptr inbounds %struct.GPR, %struct.GPR* %2844, i32 0, i32 33
  %2846 = getelementptr inbounds %struct.Reg, %struct.Reg* %2845, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %2846 to i64*
  %2847 = load i64, i64* %PC.i1202
  %2848 = add i64 %2847, 5
  %2849 = load i64, i64* %PC.i1202
  %2850 = add i64 %2849, 5
  store i64 %2850, i64* %PC.i1202
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2848, i64* %2851, align 8
  store %struct.Memory* %loadMem_44a96c, %struct.Memory** %MEMORY
  br label %block_.L_44a971

block_.L_44a971:                                  ; preds = %block_.L_44a96c, %block_.L_44a8a0
  %loadMem_44a971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2853 = getelementptr inbounds %struct.GPR, %struct.GPR* %2852, i32 0, i32 33
  %2854 = getelementptr inbounds %struct.Reg, %struct.Reg* %2853, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %2854 to i64*
  %2855 = load i64, i64* %PC.i1201
  %2856 = add i64 %2855, 888
  %2857 = load i64, i64* %PC.i1201
  %2858 = add i64 %2857, 5
  store i64 %2858, i64* %PC.i1201
  %2859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2856, i64* %2859, align 8
  store %struct.Memory* %loadMem_44a971, %struct.Memory** %MEMORY
  br label %block_.L_44ace9

block_.L_44a976:                                  ; preds = %block_44a7b6
  %loadMem_44a976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2861 = getelementptr inbounds %struct.GPR, %struct.GPR* %2860, i32 0, i32 33
  %2862 = getelementptr inbounds %struct.Reg, %struct.Reg* %2861, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %2862 to i64*
  %2863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2864 = getelementptr inbounds %struct.GPR, %struct.GPR* %2863, i32 0, i32 15
  %2865 = getelementptr inbounds %struct.Reg, %struct.Reg* %2864, i32 0, i32 0
  %RBP.i1200 = bitcast %union.anon* %2865 to i64*
  %2866 = load i64, i64* %RBP.i1200
  %2867 = sub i64 %2866, 12
  %2868 = load i64, i64* %PC.i1199
  %2869 = add i64 %2868, 4
  store i64 %2869, i64* %PC.i1199
  %2870 = inttoptr i64 %2867 to i32*
  %2871 = load i32, i32* %2870
  %2872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2872, align 1
  %2873 = and i32 %2871, 255
  %2874 = call i32 @llvm.ctpop.i32(i32 %2873)
  %2875 = trunc i32 %2874 to i8
  %2876 = and i8 %2875, 1
  %2877 = xor i8 %2876, 1
  %2878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2877, i8* %2878, align 1
  %2879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2879, align 1
  %2880 = icmp eq i32 %2871, 0
  %2881 = zext i1 %2880 to i8
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2881, i8* %2882, align 1
  %2883 = lshr i32 %2871, 31
  %2884 = trunc i32 %2883 to i8
  %2885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2884, i8* %2885, align 1
  %2886 = lshr i32 %2871, 31
  %2887 = xor i32 %2883, %2886
  %2888 = add i32 %2887, %2886
  %2889 = icmp eq i32 %2888, 2
  %2890 = zext i1 %2889 to i8
  %2891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2890, i8* %2891, align 1
  store %struct.Memory* %loadMem_44a976, %struct.Memory** %MEMORY
  %loadMem_44a97a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2893 = getelementptr inbounds %struct.GPR, %struct.GPR* %2892, i32 0, i32 33
  %2894 = getelementptr inbounds %struct.Reg, %struct.Reg* %2893, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %2894 to i64*
  %2895 = load i64, i64* %PC.i1198
  %2896 = add i64 %2895, 874
  %2897 = load i64, i64* %PC.i1198
  %2898 = add i64 %2897, 6
  %2899 = load i64, i64* %PC.i1198
  %2900 = add i64 %2899, 6
  store i64 %2900, i64* %PC.i1198
  %2901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2902 = load i8, i8* %2901, align 1
  %2903 = icmp ne i8 %2902, 0
  %2904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2905 = load i8, i8* %2904, align 1
  %2906 = icmp ne i8 %2905, 0
  %2907 = xor i1 %2903, %2906
  %2908 = zext i1 %2907 to i8
  store i8 %2908, i8* %BRANCH_TAKEN, align 1
  %2909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2910 = select i1 %2907, i64 %2896, i64 %2898
  store i64 %2910, i64* %2909, align 8
  store %struct.Memory* %loadMem_44a97a, %struct.Memory** %MEMORY
  %loadBr_44a97a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a97a = icmp eq i8 %loadBr_44a97a, 1
  br i1 %cmpBr_44a97a, label %block_.L_44ace4, label %block_44a980

block_44a980:                                     ; preds = %block_.L_44a976
  %loadMem_44a980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2912 = getelementptr inbounds %struct.GPR, %struct.GPR* %2911, i32 0, i32 33
  %2913 = getelementptr inbounds %struct.Reg, %struct.Reg* %2912, i32 0, i32 0
  %PC.i1195 = bitcast %union.anon* %2913 to i64*
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2915 = getelementptr inbounds %struct.GPR, %struct.GPR* %2914, i32 0, i32 1
  %2916 = getelementptr inbounds %struct.Reg, %struct.Reg* %2915, i32 0, i32 0
  %RAX.i1196 = bitcast %union.anon* %2916 to i64*
  %2917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2918 = getelementptr inbounds %struct.GPR, %struct.GPR* %2917, i32 0, i32 15
  %2919 = getelementptr inbounds %struct.Reg, %struct.Reg* %2918, i32 0, i32 0
  %RBP.i1197 = bitcast %union.anon* %2919 to i64*
  %2920 = load i64, i64* %RBP.i1197
  %2921 = sub i64 %2920, 12
  %2922 = load i64, i64* %PC.i1195
  %2923 = add i64 %2922, 3
  store i64 %2923, i64* %PC.i1195
  %2924 = inttoptr i64 %2921 to i32*
  %2925 = load i32, i32* %2924
  %2926 = zext i32 %2925 to i64
  store i64 %2926, i64* %RAX.i1196, align 8
  store %struct.Memory* %loadMem_44a980, %struct.Memory** %MEMORY
  %loadMem_44a983 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2928 = getelementptr inbounds %struct.GPR, %struct.GPR* %2927, i32 0, i32 33
  %2929 = getelementptr inbounds %struct.Reg, %struct.Reg* %2928, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %2929 to i64*
  %2930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2931 = getelementptr inbounds %struct.GPR, %struct.GPR* %2930, i32 0, i32 1
  %2932 = getelementptr inbounds %struct.Reg, %struct.Reg* %2931, i32 0, i32 0
  %EAX.i1193 = bitcast %union.anon* %2932 to i32*
  %2933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2934 = getelementptr inbounds %struct.GPR, %struct.GPR* %2933, i32 0, i32 15
  %2935 = getelementptr inbounds %struct.Reg, %struct.Reg* %2934, i32 0, i32 0
  %RBP.i1194 = bitcast %union.anon* %2935 to i64*
  %2936 = load i32, i32* %EAX.i1193
  %2937 = zext i32 %2936 to i64
  %2938 = load i64, i64* %RBP.i1194
  %2939 = sub i64 %2938, 40
  %2940 = load i64, i64* %PC.i1192
  %2941 = add i64 %2940, 3
  store i64 %2941, i64* %PC.i1192
  %2942 = inttoptr i64 %2939 to i32*
  %2943 = load i32, i32* %2942
  %2944 = sub i32 %2936, %2943
  %2945 = icmp ult i32 %2936, %2943
  %2946 = zext i1 %2945 to i8
  %2947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2946, i8* %2947, align 1
  %2948 = and i32 %2944, 255
  %2949 = call i32 @llvm.ctpop.i32(i32 %2948)
  %2950 = trunc i32 %2949 to i8
  %2951 = and i8 %2950, 1
  %2952 = xor i8 %2951, 1
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2952, i8* %2953, align 1
  %2954 = xor i32 %2943, %2936
  %2955 = xor i32 %2954, %2944
  %2956 = lshr i32 %2955, 4
  %2957 = trunc i32 %2956 to i8
  %2958 = and i8 %2957, 1
  %2959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2958, i8* %2959, align 1
  %2960 = icmp eq i32 %2944, 0
  %2961 = zext i1 %2960 to i8
  %2962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2961, i8* %2962, align 1
  %2963 = lshr i32 %2944, 31
  %2964 = trunc i32 %2963 to i8
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2964, i8* %2965, align 1
  %2966 = lshr i32 %2936, 31
  %2967 = lshr i32 %2943, 31
  %2968 = xor i32 %2967, %2966
  %2969 = xor i32 %2963, %2966
  %2970 = add i32 %2969, %2968
  %2971 = icmp eq i32 %2970, 2
  %2972 = zext i1 %2971 to i8
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2972, i8* %2973, align 1
  store %struct.Memory* %loadMem_44a983, %struct.Memory** %MEMORY
  %loadMem_44a986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2975 = getelementptr inbounds %struct.GPR, %struct.GPR* %2974, i32 0, i32 33
  %2976 = getelementptr inbounds %struct.Reg, %struct.Reg* %2975, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %2976 to i64*
  %2977 = load i64, i64* %PC.i1191
  %2978 = add i64 %2977, 862
  %2979 = load i64, i64* %PC.i1191
  %2980 = add i64 %2979, 6
  %2981 = load i64, i64* %PC.i1191
  %2982 = add i64 %2981, 6
  store i64 %2982, i64* %PC.i1191
  %2983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2984 = load i8, i8* %2983, align 1
  %2985 = icmp ne i8 %2984, 0
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2987 = load i8, i8* %2986, align 1
  %2988 = icmp ne i8 %2987, 0
  %2989 = xor i1 %2985, %2988
  %2990 = xor i1 %2989, true
  %2991 = zext i1 %2990 to i8
  store i8 %2991, i8* %BRANCH_TAKEN, align 1
  %2992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2993 = select i1 %2989, i64 %2980, i64 %2978
  store i64 %2993, i64* %2992, align 8
  store %struct.Memory* %loadMem_44a986, %struct.Memory** %MEMORY
  %loadBr_44a986 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a986 = icmp eq i8 %loadBr_44a986, 1
  br i1 %cmpBr_44a986, label %block_.L_44ace4, label %block_44a98c

block_44a98c:                                     ; preds = %block_44a980
  %loadMem_44a98c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2995 = getelementptr inbounds %struct.GPR, %struct.GPR* %2994, i32 0, i32 33
  %2996 = getelementptr inbounds %struct.Reg, %struct.Reg* %2995, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %2996 to i64*
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2998 = getelementptr inbounds %struct.GPR, %struct.GPR* %2997, i32 0, i32 1
  %2999 = getelementptr inbounds %struct.Reg, %struct.Reg* %2998, i32 0, i32 0
  %RAX.i1189 = bitcast %union.anon* %2999 to i64*
  %3000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3001 = getelementptr inbounds %struct.GPR, %struct.GPR* %3000, i32 0, i32 15
  %3002 = getelementptr inbounds %struct.Reg, %struct.Reg* %3001, i32 0, i32 0
  %RBP.i1190 = bitcast %union.anon* %3002 to i64*
  %3003 = load i64, i64* %RBP.i1190
  %3004 = sub i64 %3003, 32
  %3005 = load i64, i64* %PC.i1188
  %3006 = add i64 %3005, 4
  store i64 %3006, i64* %PC.i1188
  %3007 = inttoptr i64 %3004 to i64*
  %3008 = load i64, i64* %3007
  store i64 %3008, i64* %RAX.i1189, align 8
  store %struct.Memory* %loadMem_44a98c, %struct.Memory** %MEMORY
  %loadMem_44a990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3010 = getelementptr inbounds %struct.GPR, %struct.GPR* %3009, i32 0, i32 33
  %3011 = getelementptr inbounds %struct.Reg, %struct.Reg* %3010, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %3011 to i64*
  %3012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3013 = getelementptr inbounds %struct.GPR, %struct.GPR* %3012, i32 0, i32 1
  %3014 = getelementptr inbounds %struct.Reg, %struct.Reg* %3013, i32 0, i32 0
  %RAX.i1187 = bitcast %union.anon* %3014 to i64*
  %3015 = load i64, i64* %RAX.i1187
  %3016 = add i64 %3015, 532
  %3017 = load i64, i64* %PC.i1186
  %3018 = add i64 %3017, 7
  store i64 %3018, i64* %PC.i1186
  %3019 = inttoptr i64 %3016 to i32*
  %3020 = load i32, i32* %3019
  %3021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3021, align 1
  %3022 = and i32 %3020, 255
  %3023 = call i32 @llvm.ctpop.i32(i32 %3022)
  %3024 = trunc i32 %3023 to i8
  %3025 = and i8 %3024, 1
  %3026 = xor i8 %3025, 1
  %3027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3026, i8* %3027, align 1
  %3028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3028, align 1
  %3029 = icmp eq i32 %3020, 0
  %3030 = zext i1 %3029 to i8
  %3031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3030, i8* %3031, align 1
  %3032 = lshr i32 %3020, 31
  %3033 = trunc i32 %3032 to i8
  %3034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3033, i8* %3034, align 1
  %3035 = lshr i32 %3020, 31
  %3036 = xor i32 %3032, %3035
  %3037 = add i32 %3036, %3035
  %3038 = icmp eq i32 %3037, 2
  %3039 = zext i1 %3038 to i8
  %3040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3039, i8* %3040, align 1
  store %struct.Memory* %loadMem_44a990, %struct.Memory** %MEMORY
  %loadMem_44a997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3042 = getelementptr inbounds %struct.GPR, %struct.GPR* %3041, i32 0, i32 33
  %3043 = getelementptr inbounds %struct.Reg, %struct.Reg* %3042, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %3043 to i64*
  %3044 = load i64, i64* %PC.i1185
  %3045 = add i64 %3044, 423
  %3046 = load i64, i64* %PC.i1185
  %3047 = add i64 %3046, 6
  %3048 = load i64, i64* %PC.i1185
  %3049 = add i64 %3048, 6
  store i64 %3049, i64* %PC.i1185
  %3050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3051 = load i8, i8* %3050, align 1
  %3052 = icmp eq i8 %3051, 0
  %3053 = zext i1 %3052 to i8
  store i8 %3053, i8* %BRANCH_TAKEN, align 1
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3055 = select i1 %3052, i64 %3045, i64 %3047
  store i64 %3055, i64* %3054, align 8
  store %struct.Memory* %loadMem_44a997, %struct.Memory** %MEMORY
  %loadBr_44a997 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a997 = icmp eq i8 %loadBr_44a997, 1
  br i1 %cmpBr_44a997, label %block_.L_44ab3e, label %block_44a99d

block_44a99d:                                     ; preds = %block_44a98c
  %loadMem_44a99d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3057 = getelementptr inbounds %struct.GPR, %struct.GPR* %3056, i32 0, i32 33
  %3058 = getelementptr inbounds %struct.Reg, %struct.Reg* %3057, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %3058 to i64*
  %3059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3060 = getelementptr inbounds %struct.GPR, %struct.GPR* %3059, i32 0, i32 1
  %3061 = getelementptr inbounds %struct.Reg, %struct.Reg* %3060, i32 0, i32 0
  %RAX.i1183 = bitcast %union.anon* %3061 to i64*
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3063 = getelementptr inbounds %struct.GPR, %struct.GPR* %3062, i32 0, i32 15
  %3064 = getelementptr inbounds %struct.Reg, %struct.Reg* %3063, i32 0, i32 0
  %RBP.i1184 = bitcast %union.anon* %3064 to i64*
  %3065 = load i64, i64* %RBP.i1184
  %3066 = sub i64 %3065, 4
  %3067 = load i64, i64* %PC.i1182
  %3068 = add i64 %3067, 3
  store i64 %3068, i64* %PC.i1182
  %3069 = inttoptr i64 %3066 to i32*
  %3070 = load i32, i32* %3069
  %3071 = zext i32 %3070 to i64
  store i64 %3071, i64* %RAX.i1183, align 8
  store %struct.Memory* %loadMem_44a99d, %struct.Memory** %MEMORY
  %loadMem_44a9a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3073 = getelementptr inbounds %struct.GPR, %struct.GPR* %3072, i32 0, i32 33
  %3074 = getelementptr inbounds %struct.Reg, %struct.Reg* %3073, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %3074 to i64*
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3076 = getelementptr inbounds %struct.GPR, %struct.GPR* %3075, i32 0, i32 1
  %3077 = getelementptr inbounds %struct.Reg, %struct.Reg* %3076, i32 0, i32 0
  %RAX.i1181 = bitcast %union.anon* %3077 to i64*
  %3078 = load i64, i64* %RAX.i1181
  %3079 = load i64, i64* %PC.i1180
  %3080 = add i64 %3079, 3
  store i64 %3080, i64* %PC.i1180
  %3081 = and i64 1, %3078
  %3082 = trunc i64 %3081 to i32
  store i64 %3081, i64* %RAX.i1181, align 8
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3083, align 1
  %3084 = and i32 %3082, 255
  %3085 = call i32 @llvm.ctpop.i32(i32 %3084)
  %3086 = trunc i32 %3085 to i8
  %3087 = and i8 %3086, 1
  %3088 = xor i8 %3087, 1
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3088, i8* %3089, align 1
  %3090 = icmp eq i32 %3082, 0
  %3091 = zext i1 %3090 to i8
  %3092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3091, i8* %3092, align 1
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3093, align 1
  %3094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3094, align 1
  %3095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3095, align 1
  store %struct.Memory* %loadMem_44a9a0, %struct.Memory** %MEMORY
  %loadMem_44a9a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3097 = getelementptr inbounds %struct.GPR, %struct.GPR* %3096, i32 0, i32 33
  %3098 = getelementptr inbounds %struct.Reg, %struct.Reg* %3097, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %3098 to i64*
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3100 = getelementptr inbounds %struct.GPR, %struct.GPR* %3099, i32 0, i32 1
  %3101 = getelementptr inbounds %struct.Reg, %struct.Reg* %3100, i32 0, i32 0
  %EAX.i1179 = bitcast %union.anon* %3101 to i32*
  %3102 = load i32, i32* %EAX.i1179
  %3103 = zext i32 %3102 to i64
  %3104 = load i64, i64* %PC.i1178
  %3105 = add i64 %3104, 3
  store i64 %3105, i64* %PC.i1178
  %3106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3106, align 1
  %3107 = and i32 %3102, 255
  %3108 = call i32 @llvm.ctpop.i32(i32 %3107)
  %3109 = trunc i32 %3108 to i8
  %3110 = and i8 %3109, 1
  %3111 = xor i8 %3110, 1
  %3112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3111, i8* %3112, align 1
  %3113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3113, align 1
  %3114 = icmp eq i32 %3102, 0
  %3115 = zext i1 %3114 to i8
  %3116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3115, i8* %3116, align 1
  %3117 = lshr i32 %3102, 31
  %3118 = trunc i32 %3117 to i8
  %3119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3118, i8* %3119, align 1
  %3120 = lshr i32 %3102, 31
  %3121 = xor i32 %3117, %3120
  %3122 = add i32 %3121, %3120
  %3123 = icmp eq i32 %3122, 2
  %3124 = zext i1 %3123 to i8
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3124, i8* %3125, align 1
  store %struct.Memory* %loadMem_44a9a3, %struct.Memory** %MEMORY
  %loadMem_44a9a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3127 = getelementptr inbounds %struct.GPR, %struct.GPR* %3126, i32 0, i32 33
  %3128 = getelementptr inbounds %struct.Reg, %struct.Reg* %3127, i32 0, i32 0
  %PC.i1177 = bitcast %union.anon* %3128 to i64*
  %3129 = load i64, i64* %PC.i1177
  %3130 = add i64 %3129, 195
  %3131 = load i64, i64* %PC.i1177
  %3132 = add i64 %3131, 6
  %3133 = load i64, i64* %PC.i1177
  %3134 = add i64 %3133, 6
  store i64 %3134, i64* %PC.i1177
  %3135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3136 = load i8, i8* %3135, align 1
  %3137 = icmp eq i8 %3136, 0
  %3138 = zext i1 %3137 to i8
  store i8 %3138, i8* %BRANCH_TAKEN, align 1
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3140 = select i1 %3137, i64 %3130, i64 %3132
  store i64 %3140, i64* %3139, align 8
  store %struct.Memory* %loadMem_44a9a6, %struct.Memory** %MEMORY
  %loadBr_44a9a6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a9a6 = icmp eq i8 %loadBr_44a9a6, 1
  br i1 %cmpBr_44a9a6, label %block_.L_44aa69, label %block_44a9ac

block_44a9ac:                                     ; preds = %block_44a99d
  %loadMem_44a9ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %3141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3142 = getelementptr inbounds %struct.GPR, %struct.GPR* %3141, i32 0, i32 33
  %3143 = getelementptr inbounds %struct.Reg, %struct.Reg* %3142, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %3143 to i64*
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3145 = getelementptr inbounds %struct.GPR, %struct.GPR* %3144, i32 0, i32 1
  %3146 = getelementptr inbounds %struct.Reg, %struct.Reg* %3145, i32 0, i32 0
  %RAX.i1175 = bitcast %union.anon* %3146 to i64*
  %3147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3148 = getelementptr inbounds %struct.GPR, %struct.GPR* %3147, i32 0, i32 15
  %3149 = getelementptr inbounds %struct.Reg, %struct.Reg* %3148, i32 0, i32 0
  %RBP.i1176 = bitcast %union.anon* %3149 to i64*
  %3150 = load i64, i64* %RBP.i1176
  %3151 = sub i64 %3150, 32
  %3152 = load i64, i64* %PC.i1174
  %3153 = add i64 %3152, 4
  store i64 %3153, i64* %PC.i1174
  %3154 = inttoptr i64 %3151 to i64*
  %3155 = load i64, i64* %3154
  store i64 %3155, i64* %RAX.i1175, align 8
  store %struct.Memory* %loadMem_44a9ac, %struct.Memory** %MEMORY
  %loadMem_44a9b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3157 = getelementptr inbounds %struct.GPR, %struct.GPR* %3156, i32 0, i32 33
  %3158 = getelementptr inbounds %struct.Reg, %struct.Reg* %3157, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %3158 to i64*
  %3159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3160 = getelementptr inbounds %struct.GPR, %struct.GPR* %3159, i32 0, i32 1
  %3161 = getelementptr inbounds %struct.Reg, %struct.Reg* %3160, i32 0, i32 0
  %RAX.i1172 = bitcast %union.anon* %3161 to i64*
  %3162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3163 = getelementptr inbounds %struct.GPR, %struct.GPR* %3162, i32 0, i32 5
  %3164 = getelementptr inbounds %struct.Reg, %struct.Reg* %3163, i32 0, i32 0
  %RCX.i1173 = bitcast %union.anon* %3164 to i64*
  %3165 = load i64, i64* %RAX.i1172
  %3166 = add i64 %3165, 536
  %3167 = load i64, i64* %PC.i1171
  %3168 = add i64 %3167, 6
  store i64 %3168, i64* %PC.i1171
  %3169 = inttoptr i64 %3166 to i32*
  %3170 = load i32, i32* %3169
  %3171 = zext i32 %3170 to i64
  store i64 %3171, i64* %RCX.i1173, align 8
  store %struct.Memory* %loadMem_44a9b0, %struct.Memory** %MEMORY
  %loadMem_44a9b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3173 = getelementptr inbounds %struct.GPR, %struct.GPR* %3172, i32 0, i32 33
  %3174 = getelementptr inbounds %struct.Reg, %struct.Reg* %3173, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %3174 to i64*
  %3175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3176 = getelementptr inbounds %struct.GPR, %struct.GPR* %3175, i32 0, i32 1
  %3177 = getelementptr inbounds %struct.Reg, %struct.Reg* %3176, i32 0, i32 0
  %RAX.i1169 = bitcast %union.anon* %3177 to i64*
  %3178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3179 = getelementptr inbounds %struct.GPR, %struct.GPR* %3178, i32 0, i32 15
  %3180 = getelementptr inbounds %struct.Reg, %struct.Reg* %3179, i32 0, i32 0
  %RBP.i1170 = bitcast %union.anon* %3180 to i64*
  %3181 = load i64, i64* %RBP.i1170
  %3182 = sub i64 %3181, 24
  %3183 = load i64, i64* %PC.i1168
  %3184 = add i64 %3183, 4
  store i64 %3184, i64* %PC.i1168
  %3185 = inttoptr i64 %3182 to i64*
  %3186 = load i64, i64* %3185
  store i64 %3186, i64* %RAX.i1169, align 8
  store %struct.Memory* %loadMem_44a9b6, %struct.Memory** %MEMORY
  %loadMem_44a9ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %3187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3188 = getelementptr inbounds %struct.GPR, %struct.GPR* %3187, i32 0, i32 33
  %3189 = getelementptr inbounds %struct.Reg, %struct.Reg* %3188, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %3189 to i64*
  %3190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3191 = getelementptr inbounds %struct.GPR, %struct.GPR* %3190, i32 0, i32 5
  %3192 = getelementptr inbounds %struct.Reg, %struct.Reg* %3191, i32 0, i32 0
  %ECX.i1166 = bitcast %union.anon* %3192 to i32*
  %3193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3194 = getelementptr inbounds %struct.GPR, %struct.GPR* %3193, i32 0, i32 1
  %3195 = getelementptr inbounds %struct.Reg, %struct.Reg* %3194, i32 0, i32 0
  %RAX.i1167 = bitcast %union.anon* %3195 to i64*
  %3196 = load i64, i64* %RAX.i1167
  %3197 = add i64 %3196, 4
  %3198 = load i32, i32* %ECX.i1166
  %3199 = zext i32 %3198 to i64
  %3200 = load i64, i64* %PC.i1165
  %3201 = add i64 %3200, 3
  store i64 %3201, i64* %PC.i1165
  %3202 = inttoptr i64 %3197 to i32*
  store i32 %3198, i32* %3202
  store %struct.Memory* %loadMem_44a9ba, %struct.Memory** %MEMORY
  %loadMem_44a9bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3204 = getelementptr inbounds %struct.GPR, %struct.GPR* %3203, i32 0, i32 33
  %3205 = getelementptr inbounds %struct.Reg, %struct.Reg* %3204, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %3205 to i64*
  %3206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3207 = getelementptr inbounds %struct.GPR, %struct.GPR* %3206, i32 0, i32 1
  %3208 = getelementptr inbounds %struct.Reg, %struct.Reg* %3207, i32 0, i32 0
  %RAX.i1163 = bitcast %union.anon* %3208 to i64*
  %3209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3210 = getelementptr inbounds %struct.GPR, %struct.GPR* %3209, i32 0, i32 15
  %3211 = getelementptr inbounds %struct.Reg, %struct.Reg* %3210, i32 0, i32 0
  %RBP.i1164 = bitcast %union.anon* %3211 to i64*
  %3212 = load i64, i64* %RBP.i1164
  %3213 = sub i64 %3212, 32
  %3214 = load i64, i64* %PC.i1162
  %3215 = add i64 %3214, 4
  store i64 %3215, i64* %PC.i1162
  %3216 = inttoptr i64 %3213 to i64*
  %3217 = load i64, i64* %3216
  store i64 %3217, i64* %RAX.i1163, align 8
  store %struct.Memory* %loadMem_44a9bd, %struct.Memory** %MEMORY
  %loadMem_44a9c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3219 = getelementptr inbounds %struct.GPR, %struct.GPR* %3218, i32 0, i32 33
  %3220 = getelementptr inbounds %struct.Reg, %struct.Reg* %3219, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %3220 to i64*
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3222 = getelementptr inbounds %struct.GPR, %struct.GPR* %3221, i32 0, i32 1
  %3223 = getelementptr inbounds %struct.Reg, %struct.Reg* %3222, i32 0, i32 0
  %RAX.i1160 = bitcast %union.anon* %3223 to i64*
  %3224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3225 = getelementptr inbounds %struct.GPR, %struct.GPR* %3224, i32 0, i32 5
  %3226 = getelementptr inbounds %struct.Reg, %struct.Reg* %3225, i32 0, i32 0
  %RCX.i1161 = bitcast %union.anon* %3226 to i64*
  %3227 = load i64, i64* %RAX.i1160
  %3228 = add i64 %3227, 552
  %3229 = load i64, i64* %PC.i1159
  %3230 = add i64 %3229, 6
  store i64 %3230, i64* %PC.i1159
  %3231 = inttoptr i64 %3228 to i32*
  %3232 = load i32, i32* %3231
  %3233 = zext i32 %3232 to i64
  store i64 %3233, i64* %RCX.i1161, align 8
  store %struct.Memory* %loadMem_44a9c1, %struct.Memory** %MEMORY
  %loadMem_44a9c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3235 = getelementptr inbounds %struct.GPR, %struct.GPR* %3234, i32 0, i32 33
  %3236 = getelementptr inbounds %struct.Reg, %struct.Reg* %3235, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %3236 to i64*
  %3237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3238 = getelementptr inbounds %struct.GPR, %struct.GPR* %3237, i32 0, i32 1
  %3239 = getelementptr inbounds %struct.Reg, %struct.Reg* %3238, i32 0, i32 0
  %RAX.i1157 = bitcast %union.anon* %3239 to i64*
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3241 = getelementptr inbounds %struct.GPR, %struct.GPR* %3240, i32 0, i32 15
  %3242 = getelementptr inbounds %struct.Reg, %struct.Reg* %3241, i32 0, i32 0
  %RBP.i1158 = bitcast %union.anon* %3242 to i64*
  %3243 = load i64, i64* %RBP.i1158
  %3244 = sub i64 %3243, 24
  %3245 = load i64, i64* %PC.i1156
  %3246 = add i64 %3245, 4
  store i64 %3246, i64* %PC.i1156
  %3247 = inttoptr i64 %3244 to i64*
  %3248 = load i64, i64* %3247
  store i64 %3248, i64* %RAX.i1157, align 8
  store %struct.Memory* %loadMem_44a9c7, %struct.Memory** %MEMORY
  %loadMem_44a9cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3250 = getelementptr inbounds %struct.GPR, %struct.GPR* %3249, i32 0, i32 33
  %3251 = getelementptr inbounds %struct.Reg, %struct.Reg* %3250, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %3251 to i64*
  %3252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3253 = getelementptr inbounds %struct.GPR, %struct.GPR* %3252, i32 0, i32 5
  %3254 = getelementptr inbounds %struct.Reg, %struct.Reg* %3253, i32 0, i32 0
  %ECX.i1154 = bitcast %union.anon* %3254 to i32*
  %3255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3256 = getelementptr inbounds %struct.GPR, %struct.GPR* %3255, i32 0, i32 1
  %3257 = getelementptr inbounds %struct.Reg, %struct.Reg* %3256, i32 0, i32 0
  %RAX.i1155 = bitcast %union.anon* %3257 to i64*
  %3258 = load i64, i64* %RAX.i1155
  %3259 = load i32, i32* %ECX.i1154
  %3260 = zext i32 %3259 to i64
  %3261 = load i64, i64* %PC.i1153
  %3262 = add i64 %3261, 2
  store i64 %3262, i64* %PC.i1153
  %3263 = inttoptr i64 %3258 to i32*
  store i32 %3259, i32* %3263
  store %struct.Memory* %loadMem_44a9cb, %struct.Memory** %MEMORY
  %loadMem_44a9cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3265 = getelementptr inbounds %struct.GPR, %struct.GPR* %3264, i32 0, i32 33
  %3266 = getelementptr inbounds %struct.Reg, %struct.Reg* %3265, i32 0, i32 0
  %PC.i1150 = bitcast %union.anon* %3266 to i64*
  %3267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3268 = getelementptr inbounds %struct.GPR, %struct.GPR* %3267, i32 0, i32 1
  %3269 = getelementptr inbounds %struct.Reg, %struct.Reg* %3268, i32 0, i32 0
  %RAX.i1151 = bitcast %union.anon* %3269 to i64*
  %3270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3271 = getelementptr inbounds %struct.GPR, %struct.GPR* %3270, i32 0, i32 15
  %3272 = getelementptr inbounds %struct.Reg, %struct.Reg* %3271, i32 0, i32 0
  %RBP.i1152 = bitcast %union.anon* %3272 to i64*
  %3273 = load i64, i64* %RBP.i1152
  %3274 = sub i64 %3273, 32
  %3275 = load i64, i64* %PC.i1150
  %3276 = add i64 %3275, 4
  store i64 %3276, i64* %PC.i1150
  %3277 = inttoptr i64 %3274 to i64*
  %3278 = load i64, i64* %3277
  store i64 %3278, i64* %RAX.i1151, align 8
  store %struct.Memory* %loadMem_44a9cd, %struct.Memory** %MEMORY
  %loadMem_44a9d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3280 = getelementptr inbounds %struct.GPR, %struct.GPR* %3279, i32 0, i32 33
  %3281 = getelementptr inbounds %struct.Reg, %struct.Reg* %3280, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %3281 to i64*
  %3282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3283 = getelementptr inbounds %struct.GPR, %struct.GPR* %3282, i32 0, i32 1
  %3284 = getelementptr inbounds %struct.Reg, %struct.Reg* %3283, i32 0, i32 0
  %RAX.i1149 = bitcast %union.anon* %3284 to i64*
  %3285 = load i64, i64* %RAX.i1149
  %3286 = add i64 %3285, 552
  %3287 = load i64, i64* %PC.i1148
  %3288 = add i64 %3287, 7
  store i64 %3288, i64* %PC.i1148
  %3289 = inttoptr i64 %3286 to i32*
  %3290 = load i32, i32* %3289
  %3291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3291, align 1
  %3292 = and i32 %3290, 255
  %3293 = call i32 @llvm.ctpop.i32(i32 %3292)
  %3294 = trunc i32 %3293 to i8
  %3295 = and i8 %3294, 1
  %3296 = xor i8 %3295, 1
  %3297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3296, i8* %3297, align 1
  %3298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3298, align 1
  %3299 = icmp eq i32 %3290, 0
  %3300 = zext i1 %3299 to i8
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3300, i8* %3301, align 1
  %3302 = lshr i32 %3290, 31
  %3303 = trunc i32 %3302 to i8
  %3304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3303, i8* %3304, align 1
  %3305 = lshr i32 %3290, 31
  %3306 = xor i32 %3302, %3305
  %3307 = add i32 %3306, %3305
  %3308 = icmp eq i32 %3307, 2
  %3309 = zext i1 %3308 to i8
  %3310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3309, i8* %3310, align 1
  store %struct.Memory* %loadMem_44a9d1, %struct.Memory** %MEMORY
  %loadMem_44a9d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3312 = getelementptr inbounds %struct.GPR, %struct.GPR* %3311, i32 0, i32 33
  %3313 = getelementptr inbounds %struct.Reg, %struct.Reg* %3312, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %3313 to i64*
  %3314 = load i64, i64* %PC.i1147
  %3315 = add i64 %3314, 140
  %3316 = load i64, i64* %PC.i1147
  %3317 = add i64 %3316, 6
  %3318 = load i64, i64* %PC.i1147
  %3319 = add i64 %3318, 6
  store i64 %3319, i64* %PC.i1147
  %3320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3321 = load i8, i8* %3320, align 1
  store i8 %3321, i8* %BRANCH_TAKEN, align 1
  %3322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3323 = icmp ne i8 %3321, 0
  %3324 = select i1 %3323, i64 %3315, i64 %3317
  store i64 %3324, i64* %3322, align 8
  store %struct.Memory* %loadMem_44a9d8, %struct.Memory** %MEMORY
  %loadBr_44a9d8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44a9d8 = icmp eq i8 %loadBr_44a9d8, 1
  br i1 %cmpBr_44a9d8, label %block_.L_44aa64, label %block_44a9de

block_44a9de:                                     ; preds = %block_44a9ac
  %loadMem_44a9de = load %struct.Memory*, %struct.Memory** %MEMORY
  %3325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3326 = getelementptr inbounds %struct.GPR, %struct.GPR* %3325, i32 0, i32 33
  %3327 = getelementptr inbounds %struct.Reg, %struct.Reg* %3326, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %3327 to i64*
  %3328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3329 = getelementptr inbounds %struct.GPR, %struct.GPR* %3328, i32 0, i32 1
  %3330 = getelementptr inbounds %struct.Reg, %struct.Reg* %3329, i32 0, i32 0
  %RAX.i1146 = bitcast %union.anon* %3330 to i64*
  %3331 = load i64, i64* %PC.i1145
  %3332 = add i64 %3331, 8
  store i64 %3332, i64* %PC.i1145
  %3333 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3333, i64* %RAX.i1146, align 8
  store %struct.Memory* %loadMem_44a9de, %struct.Memory** %MEMORY
  %loadMem_44a9e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3335 = getelementptr inbounds %struct.GPR, %struct.GPR* %3334, i32 0, i32 33
  %3336 = getelementptr inbounds %struct.Reg, %struct.Reg* %3335, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %3336 to i64*
  %3337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3338 = getelementptr inbounds %struct.GPR, %struct.GPR* %3337, i32 0, i32 1
  %3339 = getelementptr inbounds %struct.Reg, %struct.Reg* %3338, i32 0, i32 0
  %RAX.i1144 = bitcast %union.anon* %3339 to i64*
  %3340 = load i64, i64* %RAX.i1144
  %3341 = add i64 %3340, 14168
  %3342 = load i64, i64* %PC.i1143
  %3343 = add i64 %3342, 7
  store i64 %3343, i64* %PC.i1143
  %3344 = inttoptr i64 %3341 to i64*
  %3345 = load i64, i64* %3344
  store i64 %3345, i64* %RAX.i1144, align 8
  store %struct.Memory* %loadMem_44a9e6, %struct.Memory** %MEMORY
  %loadMem_44a9ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %3346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3347 = getelementptr inbounds %struct.GPR, %struct.GPR* %3346, i32 0, i32 33
  %3348 = getelementptr inbounds %struct.Reg, %struct.Reg* %3347, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %3348 to i64*
  %3349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3350 = getelementptr inbounds %struct.GPR, %struct.GPR* %3349, i32 0, i32 5
  %3351 = getelementptr inbounds %struct.Reg, %struct.Reg* %3350, i32 0, i32 0
  %RCX.i1141 = bitcast %union.anon* %3351 to i64*
  %3352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3353 = getelementptr inbounds %struct.GPR, %struct.GPR* %3352, i32 0, i32 15
  %3354 = getelementptr inbounds %struct.Reg, %struct.Reg* %3353, i32 0, i32 0
  %RBP.i1142 = bitcast %union.anon* %3354 to i64*
  %3355 = load i64, i64* %RBP.i1142
  %3356 = sub i64 %3355, 32
  %3357 = load i64, i64* %PC.i1140
  %3358 = add i64 %3357, 4
  store i64 %3358, i64* %PC.i1140
  %3359 = inttoptr i64 %3356 to i64*
  %3360 = load i64, i64* %3359
  store i64 %3360, i64* %RCX.i1141, align 8
  store %struct.Memory* %loadMem_44a9ed, %struct.Memory** %MEMORY
  %loadMem_44a9f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3362 = getelementptr inbounds %struct.GPR, %struct.GPR* %3361, i32 0, i32 33
  %3363 = getelementptr inbounds %struct.Reg, %struct.Reg* %3362, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %3363 to i64*
  %3364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3365 = getelementptr inbounds %struct.GPR, %struct.GPR* %3364, i32 0, i32 5
  %3366 = getelementptr inbounds %struct.Reg, %struct.Reg* %3365, i32 0, i32 0
  %RCX.i1139 = bitcast %union.anon* %3366 to i64*
  %3367 = load i64, i64* %RCX.i1139
  %3368 = add i64 %3367, 536
  %3369 = load i64, i64* %PC.i1138
  %3370 = add i64 %3369, 7
  store i64 %3370, i64* %PC.i1138
  %3371 = inttoptr i64 %3368 to i32*
  %3372 = load i32, i32* %3371
  %3373 = sext i32 %3372 to i64
  store i64 %3373, i64* %RCX.i1139, align 8
  store %struct.Memory* %loadMem_44a9f1, %struct.Memory** %MEMORY
  %loadMem_44a9f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3375 = getelementptr inbounds %struct.GPR, %struct.GPR* %3374, i32 0, i32 33
  %3376 = getelementptr inbounds %struct.Reg, %struct.Reg* %3375, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %3376 to i64*
  %3377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3378 = getelementptr inbounds %struct.GPR, %struct.GPR* %3377, i32 0, i32 5
  %3379 = getelementptr inbounds %struct.Reg, %struct.Reg* %3378, i32 0, i32 0
  %RCX.i1137 = bitcast %union.anon* %3379 to i64*
  %3380 = load i64, i64* %RCX.i1137
  %3381 = load i64, i64* %PC.i1136
  %3382 = add i64 %3381, 7
  store i64 %3382, i64* %PC.i1136
  %3383 = sext i64 %3380 to i128
  %3384 = and i128 %3383, -18446744073709551616
  %3385 = zext i64 %3380 to i128
  %3386 = or i128 %3384, %3385
  %3387 = mul i128 632, %3386
  %3388 = trunc i128 %3387 to i64
  store i64 %3388, i64* %RCX.i1137, align 8
  %3389 = sext i64 %3388 to i128
  %3390 = icmp ne i128 %3389, %3387
  %3391 = zext i1 %3390 to i8
  %3392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3391, i8* %3392, align 1
  %3393 = trunc i128 %3387 to i32
  %3394 = and i32 %3393, 255
  %3395 = call i32 @llvm.ctpop.i32(i32 %3394)
  %3396 = trunc i32 %3395 to i8
  %3397 = and i8 %3396, 1
  %3398 = xor i8 %3397, 1
  %3399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3398, i8* %3399, align 1
  %3400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3400, align 1
  %3401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3401, align 1
  %3402 = lshr i64 %3388, 63
  %3403 = trunc i64 %3402 to i8
  %3404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3403, i8* %3404, align 1
  %3405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3391, i8* %3405, align 1
  store %struct.Memory* %loadMem_44a9f8, %struct.Memory** %MEMORY
  %loadMem_44a9ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %3406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3407 = getelementptr inbounds %struct.GPR, %struct.GPR* %3406, i32 0, i32 33
  %3408 = getelementptr inbounds %struct.Reg, %struct.Reg* %3407, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %3408 to i64*
  %3409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3410 = getelementptr inbounds %struct.GPR, %struct.GPR* %3409, i32 0, i32 1
  %3411 = getelementptr inbounds %struct.Reg, %struct.Reg* %3410, i32 0, i32 0
  %RAX.i1134 = bitcast %union.anon* %3411 to i64*
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3413 = getelementptr inbounds %struct.GPR, %struct.GPR* %3412, i32 0, i32 5
  %3414 = getelementptr inbounds %struct.Reg, %struct.Reg* %3413, i32 0, i32 0
  %RCX.i1135 = bitcast %union.anon* %3414 to i64*
  %3415 = load i64, i64* %RAX.i1134
  %3416 = load i64, i64* %RCX.i1135
  %3417 = load i64, i64* %PC.i1133
  %3418 = add i64 %3417, 3
  store i64 %3418, i64* %PC.i1133
  %3419 = add i64 %3416, %3415
  store i64 %3419, i64* %RAX.i1134, align 8
  %3420 = icmp ult i64 %3419, %3415
  %3421 = icmp ult i64 %3419, %3416
  %3422 = or i1 %3420, %3421
  %3423 = zext i1 %3422 to i8
  %3424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3423, i8* %3424, align 1
  %3425 = trunc i64 %3419 to i32
  %3426 = and i32 %3425, 255
  %3427 = call i32 @llvm.ctpop.i32(i32 %3426)
  %3428 = trunc i32 %3427 to i8
  %3429 = and i8 %3428, 1
  %3430 = xor i8 %3429, 1
  %3431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3430, i8* %3431, align 1
  %3432 = xor i64 %3416, %3415
  %3433 = xor i64 %3432, %3419
  %3434 = lshr i64 %3433, 4
  %3435 = trunc i64 %3434 to i8
  %3436 = and i8 %3435, 1
  %3437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3436, i8* %3437, align 1
  %3438 = icmp eq i64 %3419, 0
  %3439 = zext i1 %3438 to i8
  %3440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3439, i8* %3440, align 1
  %3441 = lshr i64 %3419, 63
  %3442 = trunc i64 %3441 to i8
  %3443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3442, i8* %3443, align 1
  %3444 = lshr i64 %3415, 63
  %3445 = lshr i64 %3416, 63
  %3446 = xor i64 %3441, %3444
  %3447 = xor i64 %3441, %3445
  %3448 = add i64 %3446, %3447
  %3449 = icmp eq i64 %3448, 2
  %3450 = zext i1 %3449 to i8
  %3451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3450, i8* %3451, align 1
  store %struct.Memory* %loadMem_44a9ff, %struct.Memory** %MEMORY
  %loadMem_44aa02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3453 = getelementptr inbounds %struct.GPR, %struct.GPR* %3452, i32 0, i32 33
  %3454 = getelementptr inbounds %struct.Reg, %struct.Reg* %3453, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %3454 to i64*
  %3455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3456 = getelementptr inbounds %struct.GPR, %struct.GPR* %3455, i32 0, i32 1
  %3457 = getelementptr inbounds %struct.Reg, %struct.Reg* %3456, i32 0, i32 0
  %RAX.i1132 = bitcast %union.anon* %3457 to i64*
  %3458 = load i64, i64* %RAX.i1132
  %3459 = add i64 %3458, 532
  %3460 = load i64, i64* %PC.i1131
  %3461 = add i64 %3460, 7
  store i64 %3461, i64* %PC.i1131
  %3462 = inttoptr i64 %3459 to i32*
  %3463 = load i32, i32* %3462
  %3464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3464, align 1
  %3465 = and i32 %3463, 255
  %3466 = call i32 @llvm.ctpop.i32(i32 %3465)
  %3467 = trunc i32 %3466 to i8
  %3468 = and i8 %3467, 1
  %3469 = xor i8 %3468, 1
  %3470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3469, i8* %3470, align 1
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3471, align 1
  %3472 = icmp eq i32 %3463, 0
  %3473 = zext i1 %3472 to i8
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3473, i8* %3474, align 1
  %3475 = lshr i32 %3463, 31
  %3476 = trunc i32 %3475 to i8
  %3477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3476, i8* %3477, align 1
  %3478 = lshr i32 %3463, 31
  %3479 = xor i32 %3475, %3478
  %3480 = add i32 %3479, %3478
  %3481 = icmp eq i32 %3480, 2
  %3482 = zext i1 %3481 to i8
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3482, i8* %3483, align 1
  store %struct.Memory* %loadMem_44aa02, %struct.Memory** %MEMORY
  %loadMem_44aa09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3485 = getelementptr inbounds %struct.GPR, %struct.GPR* %3484, i32 0, i32 33
  %3486 = getelementptr inbounds %struct.Reg, %struct.Reg* %3485, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %3486 to i64*
  %3487 = load i64, i64* %PC.i1130
  %3488 = add i64 %3487, 17
  %3489 = load i64, i64* %PC.i1130
  %3490 = add i64 %3489, 6
  %3491 = load i64, i64* %PC.i1130
  %3492 = add i64 %3491, 6
  store i64 %3492, i64* %PC.i1130
  %3493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3494 = load i8, i8* %3493, align 1
  %3495 = icmp eq i8 %3494, 0
  %3496 = zext i1 %3495 to i8
  store i8 %3496, i8* %BRANCH_TAKEN, align 1
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3498 = select i1 %3495, i64 %3488, i64 %3490
  store i64 %3498, i64* %3497, align 8
  store %struct.Memory* %loadMem_44aa09, %struct.Memory** %MEMORY
  %loadBr_44aa09 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44aa09 = icmp eq i8 %loadBr_44aa09, 1
  br i1 %cmpBr_44aa09, label %block_.L_44aa1a, label %block_44aa0f

block_44aa0f:                                     ; preds = %block_44a9de
  %loadMem_44aa0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3500 = getelementptr inbounds %struct.GPR, %struct.GPR* %3499, i32 0, i32 33
  %3501 = getelementptr inbounds %struct.Reg, %struct.Reg* %3500, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %3501 to i64*
  %3502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3503 = getelementptr inbounds %struct.GPR, %struct.GPR* %3502, i32 0, i32 1
  %3504 = getelementptr inbounds %struct.Reg, %struct.Reg* %3503, i32 0, i32 0
  %RAX.i1128 = bitcast %union.anon* %3504 to i64*
  %3505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3506 = getelementptr inbounds %struct.GPR, %struct.GPR* %3505, i32 0, i32 15
  %3507 = getelementptr inbounds %struct.Reg, %struct.Reg* %3506, i32 0, i32 0
  %RBP.i1129 = bitcast %union.anon* %3507 to i64*
  %3508 = load i64, i64* %RBP.i1129
  %3509 = sub i64 %3508, 12
  %3510 = load i64, i64* %PC.i1127
  %3511 = add i64 %3510, 3
  store i64 %3511, i64* %PC.i1127
  %3512 = inttoptr i64 %3509 to i32*
  %3513 = load i32, i32* %3512
  %3514 = zext i32 %3513 to i64
  store i64 %3514, i64* %RAX.i1128, align 8
  store %struct.Memory* %loadMem_44aa0f, %struct.Memory** %MEMORY
  %loadMem_44aa12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3516 = getelementptr inbounds %struct.GPR, %struct.GPR* %3515, i32 0, i32 33
  %3517 = getelementptr inbounds %struct.Reg, %struct.Reg* %3516, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %3517 to i64*
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3519 = getelementptr inbounds %struct.GPR, %struct.GPR* %3518, i32 0, i32 1
  %3520 = getelementptr inbounds %struct.Reg, %struct.Reg* %3519, i32 0, i32 0
  %EAX.i1125 = bitcast %union.anon* %3520 to i32*
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3522 = getelementptr inbounds %struct.GPR, %struct.GPR* %3521, i32 0, i32 15
  %3523 = getelementptr inbounds %struct.Reg, %struct.Reg* %3522, i32 0, i32 0
  %RBP.i1126 = bitcast %union.anon* %3523 to i64*
  %3524 = load i64, i64* %RBP.i1126
  %3525 = sub i64 %3524, 44
  %3526 = load i32, i32* %EAX.i1125
  %3527 = zext i32 %3526 to i64
  %3528 = load i64, i64* %PC.i1124
  %3529 = add i64 %3528, 3
  store i64 %3529, i64* %PC.i1124
  %3530 = inttoptr i64 %3525 to i32*
  store i32 %3526, i32* %3530
  store %struct.Memory* %loadMem_44aa12, %struct.Memory** %MEMORY
  %loadMem_44aa15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3532 = getelementptr inbounds %struct.GPR, %struct.GPR* %3531, i32 0, i32 33
  %3533 = getelementptr inbounds %struct.Reg, %struct.Reg* %3532, i32 0, i32 0
  %PC.i1123 = bitcast %union.anon* %3533 to i64*
  %3534 = load i64, i64* %PC.i1123
  %3535 = add i64 %3534, 74
  %3536 = load i64, i64* %PC.i1123
  %3537 = add i64 %3536, 5
  store i64 %3537, i64* %PC.i1123
  %3538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3535, i64* %3538, align 8
  store %struct.Memory* %loadMem_44aa15, %struct.Memory** %MEMORY
  br label %block_.L_44aa5f

block_.L_44aa1a:                                  ; preds = %block_44a9de
  %loadMem_44aa1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3540 = getelementptr inbounds %struct.GPR, %struct.GPR* %3539, i32 0, i32 33
  %3541 = getelementptr inbounds %struct.Reg, %struct.Reg* %3540, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %3541 to i64*
  %3542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3543 = getelementptr inbounds %struct.GPR, %struct.GPR* %3542, i32 0, i32 1
  %3544 = getelementptr inbounds %struct.Reg, %struct.Reg* %3543, i32 0, i32 0
  %RAX.i1122 = bitcast %union.anon* %3544 to i64*
  %3545 = load i64, i64* %PC.i1121
  %3546 = add i64 %3545, 5
  store i64 %3546, i64* %PC.i1121
  store i64 2, i64* %RAX.i1122, align 8
  store %struct.Memory* %loadMem_44aa1a, %struct.Memory** %MEMORY
  %loadMem_44aa1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3548 = getelementptr inbounds %struct.GPR, %struct.GPR* %3547, i32 0, i32 33
  %3549 = getelementptr inbounds %struct.Reg, %struct.Reg* %3548, i32 0, i32 0
  %PC.i1118 = bitcast %union.anon* %3549 to i64*
  %3550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3551 = getelementptr inbounds %struct.GPR, %struct.GPR* %3550, i32 0, i32 5
  %3552 = getelementptr inbounds %struct.Reg, %struct.Reg* %3551, i32 0, i32 0
  %RCX.i1119 = bitcast %union.anon* %3552 to i64*
  %3553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3554 = getelementptr inbounds %struct.GPR, %struct.GPR* %3553, i32 0, i32 15
  %3555 = getelementptr inbounds %struct.Reg, %struct.Reg* %3554, i32 0, i32 0
  %RBP.i1120 = bitcast %union.anon* %3555 to i64*
  %3556 = load i64, i64* %RBP.i1120
  %3557 = sub i64 %3556, 12
  %3558 = load i64, i64* %PC.i1118
  %3559 = add i64 %3558, 3
  store i64 %3559, i64* %PC.i1118
  %3560 = inttoptr i64 %3557 to i32*
  %3561 = load i32, i32* %3560
  %3562 = zext i32 %3561 to i64
  store i64 %3562, i64* %RCX.i1119, align 8
  store %struct.Memory* %loadMem_44aa1f, %struct.Memory** %MEMORY
  %loadMem_44aa22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3564 = getelementptr inbounds %struct.GPR, %struct.GPR* %3563, i32 0, i32 33
  %3565 = getelementptr inbounds %struct.Reg, %struct.Reg* %3564, i32 0, i32 0
  %PC.i1115 = bitcast %union.anon* %3565 to i64*
  %3566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3567 = getelementptr inbounds %struct.GPR, %struct.GPR* %3566, i32 0, i32 1
  %3568 = getelementptr inbounds %struct.Reg, %struct.Reg* %3567, i32 0, i32 0
  %EAX.i1116 = bitcast %union.anon* %3568 to i32*
  %3569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3570 = getelementptr inbounds %struct.GPR, %struct.GPR* %3569, i32 0, i32 15
  %3571 = getelementptr inbounds %struct.Reg, %struct.Reg* %3570, i32 0, i32 0
  %RBP.i1117 = bitcast %union.anon* %3571 to i64*
  %3572 = load i64, i64* %RBP.i1117
  %3573 = sub i64 %3572, 48
  %3574 = load i32, i32* %EAX.i1116
  %3575 = zext i32 %3574 to i64
  %3576 = load i64, i64* %PC.i1115
  %3577 = add i64 %3576, 3
  store i64 %3577, i64* %PC.i1115
  %3578 = inttoptr i64 %3573 to i32*
  store i32 %3574, i32* %3578
  store %struct.Memory* %loadMem_44aa22, %struct.Memory** %MEMORY
  %loadMem_44aa25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3580 = getelementptr inbounds %struct.GPR, %struct.GPR* %3579, i32 0, i32 33
  %3581 = getelementptr inbounds %struct.Reg, %struct.Reg* %3580, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %3581 to i64*
  %3582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3583 = getelementptr inbounds %struct.GPR, %struct.GPR* %3582, i32 0, i32 5
  %3584 = getelementptr inbounds %struct.Reg, %struct.Reg* %3583, i32 0, i32 0
  %ECX.i1113 = bitcast %union.anon* %3584 to i32*
  %3585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3586 = getelementptr inbounds %struct.GPR, %struct.GPR* %3585, i32 0, i32 1
  %3587 = getelementptr inbounds %struct.Reg, %struct.Reg* %3586, i32 0, i32 0
  %RAX.i1114 = bitcast %union.anon* %3587 to i64*
  %3588 = load i32, i32* %ECX.i1113
  %3589 = zext i32 %3588 to i64
  %3590 = load i64, i64* %PC.i1112
  %3591 = add i64 %3590, 2
  store i64 %3591, i64* %PC.i1112
  %3592 = and i64 %3589, 4294967295
  store i64 %3592, i64* %RAX.i1114, align 8
  store %struct.Memory* %loadMem_44aa25, %struct.Memory** %MEMORY
  %loadMem_44aa27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3594 = getelementptr inbounds %struct.GPR, %struct.GPR* %3593, i32 0, i32 33
  %3595 = getelementptr inbounds %struct.Reg, %struct.Reg* %3594, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %3595 to i64*
  %3596 = load i64, i64* %PC.i1111
  %3597 = add i64 %3596, 1
  store i64 %3597, i64* %PC.i1111
  %3598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3600 = bitcast %union.anon* %3599 to i32*
  %3601 = load i32, i32* %3600, align 8
  %3602 = sext i32 %3601 to i64
  %3603 = lshr i64 %3602, 32
  store i64 %3603, i64* %3598, align 8
  store %struct.Memory* %loadMem_44aa27, %struct.Memory** %MEMORY
  %loadMem_44aa28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3605 = getelementptr inbounds %struct.GPR, %struct.GPR* %3604, i32 0, i32 33
  %3606 = getelementptr inbounds %struct.Reg, %struct.Reg* %3605, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %3606 to i64*
  %3607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3608 = getelementptr inbounds %struct.GPR, %struct.GPR* %3607, i32 0, i32 5
  %3609 = getelementptr inbounds %struct.Reg, %struct.Reg* %3608, i32 0, i32 0
  %RCX.i1109 = bitcast %union.anon* %3609 to i64*
  %3610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3611 = getelementptr inbounds %struct.GPR, %struct.GPR* %3610, i32 0, i32 15
  %3612 = getelementptr inbounds %struct.Reg, %struct.Reg* %3611, i32 0, i32 0
  %RBP.i1110 = bitcast %union.anon* %3612 to i64*
  %3613 = load i64, i64* %RBP.i1110
  %3614 = sub i64 %3613, 48
  %3615 = load i64, i64* %PC.i1108
  %3616 = add i64 %3615, 3
  store i64 %3616, i64* %PC.i1108
  %3617 = inttoptr i64 %3614 to i32*
  %3618 = load i32, i32* %3617
  %3619 = zext i32 %3618 to i64
  store i64 %3619, i64* %RCX.i1109, align 8
  store %struct.Memory* %loadMem_44aa28, %struct.Memory** %MEMORY
  %loadMem_44aa2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3621 = getelementptr inbounds %struct.GPR, %struct.GPR* %3620, i32 0, i32 33
  %3622 = getelementptr inbounds %struct.Reg, %struct.Reg* %3621, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %3622 to i64*
  %3623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3624 = getelementptr inbounds %struct.GPR, %struct.GPR* %3623, i32 0, i32 5
  %3625 = getelementptr inbounds %struct.Reg, %struct.Reg* %3624, i32 0, i32 0
  %ECX.i1103 = bitcast %union.anon* %3625 to i32*
  %3626 = load i32, i32* %ECX.i1103
  %3627 = zext i32 %3626 to i64
  %3628 = load i64, i64* %PC.i1102
  %3629 = add i64 %3628, 2
  store i64 %3629, i64* %PC.i1102
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3631 = bitcast %union.anon* %3630 to i32*
  %3632 = load i32, i32* %3631, align 8
  %3633 = zext i32 %3632 to i64
  %3634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %3635 = bitcast %union.anon* %3634 to i32*
  %3636 = load i32, i32* %3635, align 8
  %3637 = zext i32 %3636 to i64
  %3638 = shl i64 %3627, 32
  %3639 = ashr exact i64 %3638, 32
  %3640 = shl i64 %3637, 32
  %3641 = or i64 %3640, %3633
  %3642 = sdiv i64 %3641, %3639
  %3643 = shl i64 %3642, 32
  %3644 = ashr exact i64 %3643, 32
  %3645 = icmp eq i64 %3642, %3644
  br i1 %3645, label %3650, label %3646

; <label>:3646:                                   ; preds = %block_.L_44aa1a
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3648 = load i64, i64* %3647, align 8
  %3649 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3648, %struct.Memory* %loadMem_44aa2b)
  br label %routine_idivl__ecx.exit1104

; <label>:3650:                                   ; preds = %block_.L_44aa1a
  %3651 = srem i64 %3641, %3639
  %3652 = getelementptr inbounds %union.anon, %union.anon* %3630, i64 0, i32 0
  %3653 = and i64 %3642, 4294967295
  store i64 %3653, i64* %3652, align 8
  %3654 = getelementptr inbounds %union.anon, %union.anon* %3634, i64 0, i32 0
  %3655 = and i64 %3651, 4294967295
  store i64 %3655, i64* %3654, align 8
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3656, align 1
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %3657, align 1
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3658, align 1
  %3659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3659, align 1
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3660, align 1
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3661, align 1
  br label %routine_idivl__ecx.exit1104

routine_idivl__ecx.exit1104:                      ; preds = %3646, %3650
  %3662 = phi %struct.Memory* [ %3649, %3646 ], [ %loadMem_44aa2b, %3650 ]
  store %struct.Memory* %3662, %struct.Memory** %MEMORY
  %loadMem_44aa2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3664 = getelementptr inbounds %struct.GPR, %struct.GPR* %3663, i32 0, i32 33
  %3665 = getelementptr inbounds %struct.Reg, %struct.Reg* %3664, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %3665 to i64*
  %3666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3667 = getelementptr inbounds %struct.GPR, %struct.GPR* %3666, i32 0, i32 7
  %3668 = getelementptr inbounds %struct.Reg, %struct.Reg* %3667, i32 0, i32 0
  %EDX.i1101 = bitcast %union.anon* %3668 to i32*
  %3669 = load i32, i32* %EDX.i1101
  %3670 = zext i32 %3669 to i64
  %3671 = load i64, i64* %PC.i1100
  %3672 = add i64 %3671, 3
  store i64 %3672, i64* %PC.i1100
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3673, align 1
  %3674 = and i32 %3669, 255
  %3675 = call i32 @llvm.ctpop.i32(i32 %3674)
  %3676 = trunc i32 %3675 to i8
  %3677 = and i8 %3676, 1
  %3678 = xor i8 %3677, 1
  %3679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3678, i8* %3679, align 1
  %3680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3680, align 1
  %3681 = icmp eq i32 %3669, 0
  %3682 = zext i1 %3681 to i8
  %3683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3682, i8* %3683, align 1
  %3684 = lshr i32 %3669, 31
  %3685 = trunc i32 %3684 to i8
  %3686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3685, i8* %3686, align 1
  %3687 = lshr i32 %3669, 31
  %3688 = xor i32 %3684, %3687
  %3689 = add i32 %3688, %3687
  %3690 = icmp eq i32 %3689, 2
  %3691 = zext i1 %3690 to i8
  %3692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3691, i8* %3692, align 1
  store %struct.Memory* %loadMem_44aa2d, %struct.Memory** %MEMORY
  %loadMem_44aa30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3694 = getelementptr inbounds %struct.GPR, %struct.GPR* %3693, i32 0, i32 33
  %3695 = getelementptr inbounds %struct.Reg, %struct.Reg* %3694, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %3695 to i64*
  %3696 = load i64, i64* %PC.i1099
  %3697 = add i64 %3696, 20
  %3698 = load i64, i64* %PC.i1099
  %3699 = add i64 %3698, 6
  %3700 = load i64, i64* %PC.i1099
  %3701 = add i64 %3700, 6
  store i64 %3701, i64* %PC.i1099
  %3702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3703 = load i8, i8* %3702, align 1
  %3704 = icmp eq i8 %3703, 0
  %3705 = zext i1 %3704 to i8
  store i8 %3705, i8* %BRANCH_TAKEN, align 1
  %3706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3707 = select i1 %3704, i64 %3697, i64 %3699
  store i64 %3707, i64* %3706, align 8
  store %struct.Memory* %loadMem_44aa30, %struct.Memory** %MEMORY
  %loadBr_44aa30 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44aa30 = icmp eq i8 %loadBr_44aa30, 1
  br i1 %cmpBr_44aa30, label %block_.L_44aa44, label %block_44aa36

block_44aa36:                                     ; preds = %routine_idivl__ecx.exit1104
  %loadMem_44aa36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3709 = getelementptr inbounds %struct.GPR, %struct.GPR* %3708, i32 0, i32 33
  %3710 = getelementptr inbounds %struct.Reg, %struct.Reg* %3709, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %3710 to i64*
  %3711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3712 = getelementptr inbounds %struct.GPR, %struct.GPR* %3711, i32 0, i32 1
  %3713 = getelementptr inbounds %struct.Reg, %struct.Reg* %3712, i32 0, i32 0
  %RAX.i1097 = bitcast %union.anon* %3713 to i64*
  %3714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3715 = getelementptr inbounds %struct.GPR, %struct.GPR* %3714, i32 0, i32 15
  %3716 = getelementptr inbounds %struct.Reg, %struct.Reg* %3715, i32 0, i32 0
  %RBP.i1098 = bitcast %union.anon* %3716 to i64*
  %3717 = load i64, i64* %RBP.i1098
  %3718 = sub i64 %3717, 12
  %3719 = load i64, i64* %PC.i1096
  %3720 = add i64 %3719, 3
  store i64 %3720, i64* %PC.i1096
  %3721 = inttoptr i64 %3718 to i32*
  %3722 = load i32, i32* %3721
  %3723 = zext i32 %3722 to i64
  store i64 %3723, i64* %RAX.i1097, align 8
  store %struct.Memory* %loadMem_44aa36, %struct.Memory** %MEMORY
  %loadMem_44aa39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3725 = getelementptr inbounds %struct.GPR, %struct.GPR* %3724, i32 0, i32 33
  %3726 = getelementptr inbounds %struct.Reg, %struct.Reg* %3725, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %3726 to i64*
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3728 = getelementptr inbounds %struct.GPR, %struct.GPR* %3727, i32 0, i32 1
  %3729 = getelementptr inbounds %struct.Reg, %struct.Reg* %3728, i32 0, i32 0
  %RAX.i1095 = bitcast %union.anon* %3729 to i64*
  %3730 = load i64, i64* %RAX.i1095
  %3731 = load i64, i64* %PC.i1094
  %3732 = add i64 %3731, 2
  store i64 %3732, i64* %PC.i1094
  %3733 = shl i64 %3730, 32
  %3734 = ashr i64 %3733, 33
  %3735 = trunc i64 %3730 to i8
  %3736 = and i8 %3735, 1
  %3737 = trunc i64 %3734 to i32
  %3738 = and i64 %3734, 4294967295
  store i64 %3738, i64* %RAX.i1095, align 8
  %3739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3736, i8* %3739, align 1
  %3740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3741 = and i32 %3737, 255
  %3742 = call i32 @llvm.ctpop.i32(i32 %3741)
  %3743 = trunc i32 %3742 to i8
  %3744 = and i8 %3743, 1
  %3745 = xor i8 %3744, 1
  store i8 %3745, i8* %3740, align 1
  %3746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3746, align 1
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3748 = icmp eq i32 %3737, 0
  %3749 = zext i1 %3748 to i8
  store i8 %3749, i8* %3747, align 1
  %3750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3751 = lshr i32 %3737, 31
  %3752 = trunc i32 %3751 to i8
  store i8 %3752, i8* %3750, align 1
  %3753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3753, align 1
  store %struct.Memory* %loadMem_44aa39, %struct.Memory** %MEMORY
  %loadMem_44aa3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3755 = getelementptr inbounds %struct.GPR, %struct.GPR* %3754, i32 0, i32 33
  %3756 = getelementptr inbounds %struct.Reg, %struct.Reg* %3755, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %3756 to i64*
  %3757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3758 = getelementptr inbounds %struct.GPR, %struct.GPR* %3757, i32 0, i32 1
  %3759 = getelementptr inbounds %struct.Reg, %struct.Reg* %3758, i32 0, i32 0
  %EAX.i1092 = bitcast %union.anon* %3759 to i32*
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3761 = getelementptr inbounds %struct.GPR, %struct.GPR* %3760, i32 0, i32 15
  %3762 = getelementptr inbounds %struct.Reg, %struct.Reg* %3761, i32 0, i32 0
  %RBP.i1093 = bitcast %union.anon* %3762 to i64*
  %3763 = load i64, i64* %RBP.i1093
  %3764 = sub i64 %3763, 44
  %3765 = load i32, i32* %EAX.i1092
  %3766 = zext i32 %3765 to i64
  %3767 = load i64, i64* %PC.i1091
  %3768 = add i64 %3767, 3
  store i64 %3768, i64* %PC.i1091
  %3769 = inttoptr i64 %3764 to i32*
  store i32 %3765, i32* %3769
  store %struct.Memory* %loadMem_44aa3c, %struct.Memory** %MEMORY
  %loadMem_44aa3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3771 = getelementptr inbounds %struct.GPR, %struct.GPR* %3770, i32 0, i32 33
  %3772 = getelementptr inbounds %struct.Reg, %struct.Reg* %3771, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %3772 to i64*
  %3773 = load i64, i64* %PC.i1090
  %3774 = add i64 %3773, 27
  %3775 = load i64, i64* %PC.i1090
  %3776 = add i64 %3775, 5
  store i64 %3776, i64* %PC.i1090
  %3777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3774, i64* %3777, align 8
  store %struct.Memory* %loadMem_44aa3f, %struct.Memory** %MEMORY
  br label %block_.L_44aa5a

block_.L_44aa44:                                  ; preds = %routine_idivl__ecx.exit1104
  %loadMem_44aa44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3779 = getelementptr inbounds %struct.GPR, %struct.GPR* %3778, i32 0, i32 33
  %3780 = getelementptr inbounds %struct.Reg, %struct.Reg* %3779, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %3780 to i64*
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3782 = getelementptr inbounds %struct.GPR, %struct.GPR* %3781, i32 0, i32 1
  %3783 = getelementptr inbounds %struct.Reg, %struct.Reg* %3782, i32 0, i32 0
  %RAX.i1088 = bitcast %union.anon* %3783 to i64*
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3785 = getelementptr inbounds %struct.GPR, %struct.GPR* %3784, i32 0, i32 15
  %3786 = getelementptr inbounds %struct.Reg, %struct.Reg* %3785, i32 0, i32 0
  %RBP.i1089 = bitcast %union.anon* %3786 to i64*
  %3787 = load i64, i64* %RBP.i1089
  %3788 = sub i64 %3787, 24
  %3789 = load i64, i64* %PC.i1087
  %3790 = add i64 %3789, 4
  store i64 %3790, i64* %PC.i1087
  %3791 = inttoptr i64 %3788 to i64*
  %3792 = load i64, i64* %3791
  store i64 %3792, i64* %RAX.i1088, align 8
  store %struct.Memory* %loadMem_44aa44, %struct.Memory** %MEMORY
  %loadMem_44aa48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3794 = getelementptr inbounds %struct.GPR, %struct.GPR* %3793, i32 0, i32 33
  %3795 = getelementptr inbounds %struct.Reg, %struct.Reg* %3794, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %3795 to i64*
  %3796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3797 = getelementptr inbounds %struct.GPR, %struct.GPR* %3796, i32 0, i32 1
  %3798 = getelementptr inbounds %struct.Reg, %struct.Reg* %3797, i32 0, i32 0
  %RAX.i1085 = bitcast %union.anon* %3798 to i64*
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3800 = getelementptr inbounds %struct.GPR, %struct.GPR* %3799, i32 0, i32 5
  %3801 = getelementptr inbounds %struct.Reg, %struct.Reg* %3800, i32 0, i32 0
  %RCX.i1086 = bitcast %union.anon* %3801 to i64*
  %3802 = load i64, i64* %RAX.i1085
  %3803 = add i64 %3802, 4
  %3804 = load i64, i64* %PC.i1084
  %3805 = add i64 %3804, 3
  store i64 %3805, i64* %PC.i1084
  %3806 = inttoptr i64 %3803 to i32*
  %3807 = load i32, i32* %3806
  %3808 = zext i32 %3807 to i64
  store i64 %3808, i64* %RCX.i1086, align 8
  store %struct.Memory* %loadMem_44aa48, %struct.Memory** %MEMORY
  %loadMem_44aa4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3810 = getelementptr inbounds %struct.GPR, %struct.GPR* %3809, i32 0, i32 33
  %3811 = getelementptr inbounds %struct.Reg, %struct.Reg* %3810, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %3811 to i64*
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3813 = getelementptr inbounds %struct.GPR, %struct.GPR* %3812, i32 0, i32 5
  %3814 = getelementptr inbounds %struct.Reg, %struct.Reg* %3813, i32 0, i32 0
  %RCX.i1083 = bitcast %union.anon* %3814 to i64*
  %3815 = load i64, i64* %RCX.i1083
  %3816 = load i64, i64* %PC.i1082
  %3817 = add i64 %3816, 3
  store i64 %3817, i64* %PC.i1082
  %3818 = trunc i64 %3815 to i32
  %3819 = add i32 1, %3818
  %3820 = zext i32 %3819 to i64
  store i64 %3820, i64* %RCX.i1083, align 8
  %3821 = icmp ult i32 %3819, %3818
  %3822 = icmp ult i32 %3819, 1
  %3823 = or i1 %3821, %3822
  %3824 = zext i1 %3823 to i8
  %3825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3824, i8* %3825, align 1
  %3826 = and i32 %3819, 255
  %3827 = call i32 @llvm.ctpop.i32(i32 %3826)
  %3828 = trunc i32 %3827 to i8
  %3829 = and i8 %3828, 1
  %3830 = xor i8 %3829, 1
  %3831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3830, i8* %3831, align 1
  %3832 = xor i64 1, %3815
  %3833 = trunc i64 %3832 to i32
  %3834 = xor i32 %3833, %3819
  %3835 = lshr i32 %3834, 4
  %3836 = trunc i32 %3835 to i8
  %3837 = and i8 %3836, 1
  %3838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3837, i8* %3838, align 1
  %3839 = icmp eq i32 %3819, 0
  %3840 = zext i1 %3839 to i8
  %3841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3840, i8* %3841, align 1
  %3842 = lshr i32 %3819, 31
  %3843 = trunc i32 %3842 to i8
  %3844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3843, i8* %3844, align 1
  %3845 = lshr i32 %3818, 31
  %3846 = xor i32 %3842, %3845
  %3847 = add i32 %3846, %3842
  %3848 = icmp eq i32 %3847, 2
  %3849 = zext i1 %3848 to i8
  %3850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3849, i8* %3850, align 1
  store %struct.Memory* %loadMem_44aa4b, %struct.Memory** %MEMORY
  %loadMem_44aa4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3852 = getelementptr inbounds %struct.GPR, %struct.GPR* %3851, i32 0, i32 33
  %3853 = getelementptr inbounds %struct.Reg, %struct.Reg* %3852, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %3853 to i64*
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3855 = getelementptr inbounds %struct.GPR, %struct.GPR* %3854, i32 0, i32 5
  %3856 = getelementptr inbounds %struct.Reg, %struct.Reg* %3855, i32 0, i32 0
  %ECX.i1080 = bitcast %union.anon* %3856 to i32*
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3858 = getelementptr inbounds %struct.GPR, %struct.GPR* %3857, i32 0, i32 1
  %3859 = getelementptr inbounds %struct.Reg, %struct.Reg* %3858, i32 0, i32 0
  %RAX.i1081 = bitcast %union.anon* %3859 to i64*
  %3860 = load i64, i64* %RAX.i1081
  %3861 = add i64 %3860, 4
  %3862 = load i32, i32* %ECX.i1080
  %3863 = zext i32 %3862 to i64
  %3864 = load i64, i64* %PC.i1079
  %3865 = add i64 %3864, 3
  store i64 %3865, i64* %PC.i1079
  %3866 = inttoptr i64 %3861 to i32*
  store i32 %3862, i32* %3866
  store %struct.Memory* %loadMem_44aa4e, %struct.Memory** %MEMORY
  %loadMem_44aa51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3868 = getelementptr inbounds %struct.GPR, %struct.GPR* %3867, i32 0, i32 33
  %3869 = getelementptr inbounds %struct.Reg, %struct.Reg* %3868, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %3869 to i64*
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3871 = getelementptr inbounds %struct.GPR, %struct.GPR* %3870, i32 0, i32 5
  %3872 = getelementptr inbounds %struct.Reg, %struct.Reg* %3871, i32 0, i32 0
  %RCX.i1077 = bitcast %union.anon* %3872 to i64*
  %3873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3874 = getelementptr inbounds %struct.GPR, %struct.GPR* %3873, i32 0, i32 15
  %3875 = getelementptr inbounds %struct.Reg, %struct.Reg* %3874, i32 0, i32 0
  %RBP.i1078 = bitcast %union.anon* %3875 to i64*
  %3876 = load i64, i64* %RBP.i1078
  %3877 = sub i64 %3876, 12
  %3878 = load i64, i64* %PC.i1076
  %3879 = add i64 %3878, 3
  store i64 %3879, i64* %PC.i1076
  %3880 = inttoptr i64 %3877 to i32*
  %3881 = load i32, i32* %3880
  %3882 = zext i32 %3881 to i64
  store i64 %3882, i64* %RCX.i1077, align 8
  store %struct.Memory* %loadMem_44aa51, %struct.Memory** %MEMORY
  %loadMem_44aa54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3884 = getelementptr inbounds %struct.GPR, %struct.GPR* %3883, i32 0, i32 33
  %3885 = getelementptr inbounds %struct.Reg, %struct.Reg* %3884, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %3885 to i64*
  %3886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3887 = getelementptr inbounds %struct.GPR, %struct.GPR* %3886, i32 0, i32 5
  %3888 = getelementptr inbounds %struct.Reg, %struct.Reg* %3887, i32 0, i32 0
  %RCX.i1075 = bitcast %union.anon* %3888 to i64*
  %3889 = load i64, i64* %RCX.i1075
  %3890 = load i64, i64* %PC.i1074
  %3891 = add i64 %3890, 2
  store i64 %3891, i64* %PC.i1074
  %3892 = shl i64 %3889, 32
  %3893 = ashr i64 %3892, 33
  %3894 = trunc i64 %3889 to i8
  %3895 = and i8 %3894, 1
  %3896 = trunc i64 %3893 to i32
  %3897 = and i64 %3893, 4294967295
  store i64 %3897, i64* %RCX.i1075, align 8
  %3898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3895, i8* %3898, align 1
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3900 = and i32 %3896, 255
  %3901 = call i32 @llvm.ctpop.i32(i32 %3900)
  %3902 = trunc i32 %3901 to i8
  %3903 = and i8 %3902, 1
  %3904 = xor i8 %3903, 1
  store i8 %3904, i8* %3899, align 1
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3905, align 1
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3907 = icmp eq i32 %3896, 0
  %3908 = zext i1 %3907 to i8
  store i8 %3908, i8* %3906, align 1
  %3909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3910 = lshr i32 %3896, 31
  %3911 = trunc i32 %3910 to i8
  store i8 %3911, i8* %3909, align 1
  %3912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3912, align 1
  store %struct.Memory* %loadMem_44aa54, %struct.Memory** %MEMORY
  %loadMem_44aa57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3914 = getelementptr inbounds %struct.GPR, %struct.GPR* %3913, i32 0, i32 33
  %3915 = getelementptr inbounds %struct.Reg, %struct.Reg* %3914, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %3915 to i64*
  %3916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3917 = getelementptr inbounds %struct.GPR, %struct.GPR* %3916, i32 0, i32 5
  %3918 = getelementptr inbounds %struct.Reg, %struct.Reg* %3917, i32 0, i32 0
  %ECX.i1072 = bitcast %union.anon* %3918 to i32*
  %3919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3920 = getelementptr inbounds %struct.GPR, %struct.GPR* %3919, i32 0, i32 15
  %3921 = getelementptr inbounds %struct.Reg, %struct.Reg* %3920, i32 0, i32 0
  %RBP.i1073 = bitcast %union.anon* %3921 to i64*
  %3922 = load i64, i64* %RBP.i1073
  %3923 = sub i64 %3922, 44
  %3924 = load i32, i32* %ECX.i1072
  %3925 = zext i32 %3924 to i64
  %3926 = load i64, i64* %PC.i1071
  %3927 = add i64 %3926, 3
  store i64 %3927, i64* %PC.i1071
  %3928 = inttoptr i64 %3923 to i32*
  store i32 %3924, i32* %3928
  store %struct.Memory* %loadMem_44aa57, %struct.Memory** %MEMORY
  br label %block_.L_44aa5a

block_.L_44aa5a:                                  ; preds = %block_.L_44aa44, %block_44aa36
  %loadMem_44aa5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3930 = getelementptr inbounds %struct.GPR, %struct.GPR* %3929, i32 0, i32 33
  %3931 = getelementptr inbounds %struct.Reg, %struct.Reg* %3930, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %3931 to i64*
  %3932 = load i64, i64* %PC.i1070
  %3933 = add i64 %3932, 5
  %3934 = load i64, i64* %PC.i1070
  %3935 = add i64 %3934, 5
  store i64 %3935, i64* %PC.i1070
  %3936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3933, i64* %3936, align 8
  store %struct.Memory* %loadMem_44aa5a, %struct.Memory** %MEMORY
  br label %block_.L_44aa5f

block_.L_44aa5f:                                  ; preds = %block_.L_44aa5a, %block_44aa0f
  %loadMem_44aa5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3938 = getelementptr inbounds %struct.GPR, %struct.GPR* %3937, i32 0, i32 33
  %3939 = getelementptr inbounds %struct.Reg, %struct.Reg* %3938, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %3939 to i64*
  %3940 = load i64, i64* %PC.i1069
  %3941 = add i64 %3940, 5
  %3942 = load i64, i64* %PC.i1069
  %3943 = add i64 %3942, 5
  store i64 %3943, i64* %PC.i1069
  %3944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3941, i64* %3944, align 8
  store %struct.Memory* %loadMem_44aa5f, %struct.Memory** %MEMORY
  br label %block_.L_44aa64

block_.L_44aa64:                                  ; preds = %block_.L_44aa5f, %block_44a9ac
  %loadMem_44aa64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3946 = getelementptr inbounds %struct.GPR, %struct.GPR* %3945, i32 0, i32 33
  %3947 = getelementptr inbounds %struct.Reg, %struct.Reg* %3946, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %3947 to i64*
  %3948 = load i64, i64* %PC.i1068
  %3949 = add i64 %3948, 213
  %3950 = load i64, i64* %PC.i1068
  %3951 = add i64 %3950, 5
  store i64 %3951, i64* %PC.i1068
  %3952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3949, i64* %3952, align 8
  store %struct.Memory* %loadMem_44aa64, %struct.Memory** %MEMORY
  br label %block_.L_44ab39

block_.L_44aa69:                                  ; preds = %block_44a99d
  %loadMem_44aa69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3954 = getelementptr inbounds %struct.GPR, %struct.GPR* %3953, i32 0, i32 33
  %3955 = getelementptr inbounds %struct.Reg, %struct.Reg* %3954, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %3955 to i64*
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3957 = getelementptr inbounds %struct.GPR, %struct.GPR* %3956, i32 0, i32 1
  %3958 = getelementptr inbounds %struct.Reg, %struct.Reg* %3957, i32 0, i32 0
  %RAX.i1066 = bitcast %union.anon* %3958 to i64*
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3960 = getelementptr inbounds %struct.GPR, %struct.GPR* %3959, i32 0, i32 15
  %3961 = getelementptr inbounds %struct.Reg, %struct.Reg* %3960, i32 0, i32 0
  %RBP.i1067 = bitcast %union.anon* %3961 to i64*
  %3962 = load i64, i64* %RBP.i1067
  %3963 = sub i64 %3962, 32
  %3964 = load i64, i64* %PC.i1065
  %3965 = add i64 %3964, 4
  store i64 %3965, i64* %PC.i1065
  %3966 = inttoptr i64 %3963 to i64*
  %3967 = load i64, i64* %3966
  store i64 %3967, i64* %RAX.i1066, align 8
  store %struct.Memory* %loadMem_44aa69, %struct.Memory** %MEMORY
  %loadMem_44aa6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3969 = getelementptr inbounds %struct.GPR, %struct.GPR* %3968, i32 0, i32 33
  %3970 = getelementptr inbounds %struct.Reg, %struct.Reg* %3969, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %3970 to i64*
  %3971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3972 = getelementptr inbounds %struct.GPR, %struct.GPR* %3971, i32 0, i32 1
  %3973 = getelementptr inbounds %struct.Reg, %struct.Reg* %3972, i32 0, i32 0
  %RAX.i1063 = bitcast %union.anon* %3973 to i64*
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3975 = getelementptr inbounds %struct.GPR, %struct.GPR* %3974, i32 0, i32 5
  %3976 = getelementptr inbounds %struct.Reg, %struct.Reg* %3975, i32 0, i32 0
  %RCX.i1064 = bitcast %union.anon* %3976 to i64*
  %3977 = load i64, i64* %RAX.i1063
  %3978 = add i64 %3977, 536
  %3979 = load i64, i64* %PC.i1062
  %3980 = add i64 %3979, 6
  store i64 %3980, i64* %PC.i1062
  %3981 = inttoptr i64 %3978 to i32*
  %3982 = load i32, i32* %3981
  %3983 = zext i32 %3982 to i64
  store i64 %3983, i64* %RCX.i1064, align 8
  store %struct.Memory* %loadMem_44aa6d, %struct.Memory** %MEMORY
  %loadMem_44aa73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3985 = getelementptr inbounds %struct.GPR, %struct.GPR* %3984, i32 0, i32 33
  %3986 = getelementptr inbounds %struct.Reg, %struct.Reg* %3985, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %3986 to i64*
  %3987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3988 = getelementptr inbounds %struct.GPR, %struct.GPR* %3987, i32 0, i32 1
  %3989 = getelementptr inbounds %struct.Reg, %struct.Reg* %3988, i32 0, i32 0
  %RAX.i1060 = bitcast %union.anon* %3989 to i64*
  %3990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3991 = getelementptr inbounds %struct.GPR, %struct.GPR* %3990, i32 0, i32 15
  %3992 = getelementptr inbounds %struct.Reg, %struct.Reg* %3991, i32 0, i32 0
  %RBP.i1061 = bitcast %union.anon* %3992 to i64*
  %3993 = load i64, i64* %RBP.i1061
  %3994 = sub i64 %3993, 24
  %3995 = load i64, i64* %PC.i1059
  %3996 = add i64 %3995, 4
  store i64 %3996, i64* %PC.i1059
  %3997 = inttoptr i64 %3994 to i64*
  %3998 = load i64, i64* %3997
  store i64 %3998, i64* %RAX.i1060, align 8
  store %struct.Memory* %loadMem_44aa73, %struct.Memory** %MEMORY
  %loadMem_44aa77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4000 = getelementptr inbounds %struct.GPR, %struct.GPR* %3999, i32 0, i32 33
  %4001 = getelementptr inbounds %struct.Reg, %struct.Reg* %4000, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %4001 to i64*
  %4002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4003 = getelementptr inbounds %struct.GPR, %struct.GPR* %4002, i32 0, i32 5
  %4004 = getelementptr inbounds %struct.Reg, %struct.Reg* %4003, i32 0, i32 0
  %ECX.i1057 = bitcast %union.anon* %4004 to i32*
  %4005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4006 = getelementptr inbounds %struct.GPR, %struct.GPR* %4005, i32 0, i32 1
  %4007 = getelementptr inbounds %struct.Reg, %struct.Reg* %4006, i32 0, i32 0
  %RAX.i1058 = bitcast %union.anon* %4007 to i64*
  %4008 = load i64, i64* %RAX.i1058
  %4009 = add i64 %4008, 4
  %4010 = load i32, i32* %ECX.i1057
  %4011 = zext i32 %4010 to i64
  %4012 = load i64, i64* %PC.i1056
  %4013 = add i64 %4012, 3
  store i64 %4013, i64* %PC.i1056
  %4014 = inttoptr i64 %4009 to i32*
  store i32 %4010, i32* %4014
  store %struct.Memory* %loadMem_44aa77, %struct.Memory** %MEMORY
  %loadMem_44aa7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4016 = getelementptr inbounds %struct.GPR, %struct.GPR* %4015, i32 0, i32 33
  %4017 = getelementptr inbounds %struct.Reg, %struct.Reg* %4016, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %4017 to i64*
  %4018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4019 = getelementptr inbounds %struct.GPR, %struct.GPR* %4018, i32 0, i32 1
  %4020 = getelementptr inbounds %struct.Reg, %struct.Reg* %4019, i32 0, i32 0
  %RAX.i1054 = bitcast %union.anon* %4020 to i64*
  %4021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4022 = getelementptr inbounds %struct.GPR, %struct.GPR* %4021, i32 0, i32 15
  %4023 = getelementptr inbounds %struct.Reg, %struct.Reg* %4022, i32 0, i32 0
  %RBP.i1055 = bitcast %union.anon* %4023 to i64*
  %4024 = load i64, i64* %RBP.i1055
  %4025 = sub i64 %4024, 32
  %4026 = load i64, i64* %PC.i1053
  %4027 = add i64 %4026, 4
  store i64 %4027, i64* %PC.i1053
  %4028 = inttoptr i64 %4025 to i64*
  %4029 = load i64, i64* %4028
  store i64 %4029, i64* %RAX.i1054, align 8
  store %struct.Memory* %loadMem_44aa7a, %struct.Memory** %MEMORY
  %loadMem_44aa7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4031 = getelementptr inbounds %struct.GPR, %struct.GPR* %4030, i32 0, i32 33
  %4032 = getelementptr inbounds %struct.Reg, %struct.Reg* %4031, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %4032 to i64*
  %4033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4034 = getelementptr inbounds %struct.GPR, %struct.GPR* %4033, i32 0, i32 1
  %4035 = getelementptr inbounds %struct.Reg, %struct.Reg* %4034, i32 0, i32 0
  %RAX.i1051 = bitcast %union.anon* %4035 to i64*
  %4036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4037 = getelementptr inbounds %struct.GPR, %struct.GPR* %4036, i32 0, i32 5
  %4038 = getelementptr inbounds %struct.Reg, %struct.Reg* %4037, i32 0, i32 0
  %RCX.i1052 = bitcast %union.anon* %4038 to i64*
  %4039 = load i64, i64* %RAX.i1051
  %4040 = add i64 %4039, 552
  %4041 = load i64, i64* %PC.i1050
  %4042 = add i64 %4041, 6
  store i64 %4042, i64* %PC.i1050
  %4043 = inttoptr i64 %4040 to i32*
  %4044 = load i32, i32* %4043
  %4045 = zext i32 %4044 to i64
  store i64 %4045, i64* %RCX.i1052, align 8
  store %struct.Memory* %loadMem_44aa7e, %struct.Memory** %MEMORY
  %loadMem_44aa84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4047 = getelementptr inbounds %struct.GPR, %struct.GPR* %4046, i32 0, i32 33
  %4048 = getelementptr inbounds %struct.Reg, %struct.Reg* %4047, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %4048 to i64*
  %4049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4050 = getelementptr inbounds %struct.GPR, %struct.GPR* %4049, i32 0, i32 1
  %4051 = getelementptr inbounds %struct.Reg, %struct.Reg* %4050, i32 0, i32 0
  %RAX.i1048 = bitcast %union.anon* %4051 to i64*
  %4052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4053 = getelementptr inbounds %struct.GPR, %struct.GPR* %4052, i32 0, i32 15
  %4054 = getelementptr inbounds %struct.Reg, %struct.Reg* %4053, i32 0, i32 0
  %RBP.i1049 = bitcast %union.anon* %4054 to i64*
  %4055 = load i64, i64* %RBP.i1049
  %4056 = sub i64 %4055, 24
  %4057 = load i64, i64* %PC.i1047
  %4058 = add i64 %4057, 4
  store i64 %4058, i64* %PC.i1047
  %4059 = inttoptr i64 %4056 to i64*
  %4060 = load i64, i64* %4059
  store i64 %4060, i64* %RAX.i1048, align 8
  store %struct.Memory* %loadMem_44aa84, %struct.Memory** %MEMORY
  %loadMem_44aa88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4062 = getelementptr inbounds %struct.GPR, %struct.GPR* %4061, i32 0, i32 33
  %4063 = getelementptr inbounds %struct.Reg, %struct.Reg* %4062, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %4063 to i64*
  %4064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4065 = getelementptr inbounds %struct.GPR, %struct.GPR* %4064, i32 0, i32 5
  %4066 = getelementptr inbounds %struct.Reg, %struct.Reg* %4065, i32 0, i32 0
  %ECX.i1045 = bitcast %union.anon* %4066 to i32*
  %4067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4068 = getelementptr inbounds %struct.GPR, %struct.GPR* %4067, i32 0, i32 1
  %4069 = getelementptr inbounds %struct.Reg, %struct.Reg* %4068, i32 0, i32 0
  %RAX.i1046 = bitcast %union.anon* %4069 to i64*
  %4070 = load i64, i64* %RAX.i1046
  %4071 = load i32, i32* %ECX.i1045
  %4072 = zext i32 %4071 to i64
  %4073 = load i64, i64* %PC.i1044
  %4074 = add i64 %4073, 2
  store i64 %4074, i64* %PC.i1044
  %4075 = inttoptr i64 %4070 to i32*
  store i32 %4071, i32* %4075
  store %struct.Memory* %loadMem_44aa88, %struct.Memory** %MEMORY
  %loadMem_44aa8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4077 = getelementptr inbounds %struct.GPR, %struct.GPR* %4076, i32 0, i32 33
  %4078 = getelementptr inbounds %struct.Reg, %struct.Reg* %4077, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %4078 to i64*
  %4079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4080 = getelementptr inbounds %struct.GPR, %struct.GPR* %4079, i32 0, i32 1
  %4081 = getelementptr inbounds %struct.Reg, %struct.Reg* %4080, i32 0, i32 0
  %RAX.i1042 = bitcast %union.anon* %4081 to i64*
  %4082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4083 = getelementptr inbounds %struct.GPR, %struct.GPR* %4082, i32 0, i32 15
  %4084 = getelementptr inbounds %struct.Reg, %struct.Reg* %4083, i32 0, i32 0
  %RBP.i1043 = bitcast %union.anon* %4084 to i64*
  %4085 = load i64, i64* %RBP.i1043
  %4086 = sub i64 %4085, 32
  %4087 = load i64, i64* %PC.i1041
  %4088 = add i64 %4087, 4
  store i64 %4088, i64* %PC.i1041
  %4089 = inttoptr i64 %4086 to i64*
  %4090 = load i64, i64* %4089
  store i64 %4090, i64* %RAX.i1042, align 8
  store %struct.Memory* %loadMem_44aa8a, %struct.Memory** %MEMORY
  %loadMem_44aa8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4092 = getelementptr inbounds %struct.GPR, %struct.GPR* %4091, i32 0, i32 33
  %4093 = getelementptr inbounds %struct.Reg, %struct.Reg* %4092, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %4093 to i64*
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4095 = getelementptr inbounds %struct.GPR, %struct.GPR* %4094, i32 0, i32 1
  %4096 = getelementptr inbounds %struct.Reg, %struct.Reg* %4095, i32 0, i32 0
  %RAX.i1040 = bitcast %union.anon* %4096 to i64*
  %4097 = load i64, i64* %RAX.i1040
  %4098 = add i64 %4097, 552
  %4099 = load i64, i64* %PC.i1039
  %4100 = add i64 %4099, 7
  store i64 %4100, i64* %PC.i1039
  %4101 = inttoptr i64 %4098 to i32*
  %4102 = load i32, i32* %4101
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4103, align 1
  %4104 = and i32 %4102, 255
  %4105 = call i32 @llvm.ctpop.i32(i32 %4104)
  %4106 = trunc i32 %4105 to i8
  %4107 = and i8 %4106, 1
  %4108 = xor i8 %4107, 1
  %4109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4108, i8* %4109, align 1
  %4110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4110, align 1
  %4111 = icmp eq i32 %4102, 0
  %4112 = zext i1 %4111 to i8
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4112, i8* %4113, align 1
  %4114 = lshr i32 %4102, 31
  %4115 = trunc i32 %4114 to i8
  %4116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4115, i8* %4116, align 1
  %4117 = lshr i32 %4102, 31
  %4118 = xor i32 %4114, %4117
  %4119 = add i32 %4118, %4117
  %4120 = icmp eq i32 %4119, 2
  %4121 = zext i1 %4120 to i8
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4121, i8* %4122, align 1
  store %struct.Memory* %loadMem_44aa8e, %struct.Memory** %MEMORY
  %loadMem_44aa95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4124 = getelementptr inbounds %struct.GPR, %struct.GPR* %4123, i32 0, i32 33
  %4125 = getelementptr inbounds %struct.Reg, %struct.Reg* %4124, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %4125 to i64*
  %4126 = load i64, i64* %PC.i1038
  %4127 = add i64 %4126, 159
  %4128 = load i64, i64* %PC.i1038
  %4129 = add i64 %4128, 6
  %4130 = load i64, i64* %PC.i1038
  %4131 = add i64 %4130, 6
  store i64 %4131, i64* %PC.i1038
  %4132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4133 = load i8, i8* %4132, align 1
  store i8 %4133, i8* %BRANCH_TAKEN, align 1
  %4134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4135 = icmp ne i8 %4133, 0
  %4136 = select i1 %4135, i64 %4127, i64 %4129
  store i64 %4136, i64* %4134, align 8
  store %struct.Memory* %loadMem_44aa95, %struct.Memory** %MEMORY
  %loadBr_44aa95 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44aa95 = icmp eq i8 %loadBr_44aa95, 1
  br i1 %cmpBr_44aa95, label %block_.L_44ab34, label %block_44aa9b

block_44aa9b:                                     ; preds = %block_.L_44aa69
  %loadMem_44aa9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4138 = getelementptr inbounds %struct.GPR, %struct.GPR* %4137, i32 0, i32 33
  %4139 = getelementptr inbounds %struct.Reg, %struct.Reg* %4138, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %4139 to i64*
  %4140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4141 = getelementptr inbounds %struct.GPR, %struct.GPR* %4140, i32 0, i32 1
  %4142 = getelementptr inbounds %struct.Reg, %struct.Reg* %4141, i32 0, i32 0
  %RAX.i1037 = bitcast %union.anon* %4142 to i64*
  %4143 = load i64, i64* %PC.i1036
  %4144 = add i64 %4143, 8
  store i64 %4144, i64* %PC.i1036
  %4145 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4145, i64* %RAX.i1037, align 8
  store %struct.Memory* %loadMem_44aa9b, %struct.Memory** %MEMORY
  %loadMem_44aaa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4147 = getelementptr inbounds %struct.GPR, %struct.GPR* %4146, i32 0, i32 33
  %4148 = getelementptr inbounds %struct.Reg, %struct.Reg* %4147, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %4148 to i64*
  %4149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4150 = getelementptr inbounds %struct.GPR, %struct.GPR* %4149, i32 0, i32 1
  %4151 = getelementptr inbounds %struct.Reg, %struct.Reg* %4150, i32 0, i32 0
  %RAX.i1035 = bitcast %union.anon* %4151 to i64*
  %4152 = load i64, i64* %RAX.i1035
  %4153 = add i64 %4152, 14168
  %4154 = load i64, i64* %PC.i1034
  %4155 = add i64 %4154, 7
  store i64 %4155, i64* %PC.i1034
  %4156 = inttoptr i64 %4153 to i64*
  %4157 = load i64, i64* %4156
  store i64 %4157, i64* %RAX.i1035, align 8
  store %struct.Memory* %loadMem_44aaa3, %struct.Memory** %MEMORY
  %loadMem_44aaaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4159 = getelementptr inbounds %struct.GPR, %struct.GPR* %4158, i32 0, i32 33
  %4160 = getelementptr inbounds %struct.Reg, %struct.Reg* %4159, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %4160 to i64*
  %4161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4162 = getelementptr inbounds %struct.GPR, %struct.GPR* %4161, i32 0, i32 5
  %4163 = getelementptr inbounds %struct.Reg, %struct.Reg* %4162, i32 0, i32 0
  %RCX.i1032 = bitcast %union.anon* %4163 to i64*
  %4164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4165 = getelementptr inbounds %struct.GPR, %struct.GPR* %4164, i32 0, i32 15
  %4166 = getelementptr inbounds %struct.Reg, %struct.Reg* %4165, i32 0, i32 0
  %RBP.i1033 = bitcast %union.anon* %4166 to i64*
  %4167 = load i64, i64* %RBP.i1033
  %4168 = sub i64 %4167, 32
  %4169 = load i64, i64* %PC.i1031
  %4170 = add i64 %4169, 4
  store i64 %4170, i64* %PC.i1031
  %4171 = inttoptr i64 %4168 to i64*
  %4172 = load i64, i64* %4171
  store i64 %4172, i64* %RCX.i1032, align 8
  store %struct.Memory* %loadMem_44aaaa, %struct.Memory** %MEMORY
  %loadMem_44aaae = load %struct.Memory*, %struct.Memory** %MEMORY
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4174 = getelementptr inbounds %struct.GPR, %struct.GPR* %4173, i32 0, i32 33
  %4175 = getelementptr inbounds %struct.Reg, %struct.Reg* %4174, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %4175 to i64*
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4177 = getelementptr inbounds %struct.GPR, %struct.GPR* %4176, i32 0, i32 5
  %4178 = getelementptr inbounds %struct.Reg, %struct.Reg* %4177, i32 0, i32 0
  %RCX.i1030 = bitcast %union.anon* %4178 to i64*
  %4179 = load i64, i64* %RCX.i1030
  %4180 = add i64 %4179, 536
  %4181 = load i64, i64* %PC.i1029
  %4182 = add i64 %4181, 7
  store i64 %4182, i64* %PC.i1029
  %4183 = inttoptr i64 %4180 to i32*
  %4184 = load i32, i32* %4183
  %4185 = sext i32 %4184 to i64
  store i64 %4185, i64* %RCX.i1030, align 8
  store %struct.Memory* %loadMem_44aaae, %struct.Memory** %MEMORY
  %loadMem_44aab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4187 = getelementptr inbounds %struct.GPR, %struct.GPR* %4186, i32 0, i32 33
  %4188 = getelementptr inbounds %struct.Reg, %struct.Reg* %4187, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %4188 to i64*
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4190 = getelementptr inbounds %struct.GPR, %struct.GPR* %4189, i32 0, i32 5
  %4191 = getelementptr inbounds %struct.Reg, %struct.Reg* %4190, i32 0, i32 0
  %RCX.i1028 = bitcast %union.anon* %4191 to i64*
  %4192 = load i64, i64* %RCX.i1028
  %4193 = load i64, i64* %PC.i1027
  %4194 = add i64 %4193, 7
  store i64 %4194, i64* %PC.i1027
  %4195 = sext i64 %4192 to i128
  %4196 = and i128 %4195, -18446744073709551616
  %4197 = zext i64 %4192 to i128
  %4198 = or i128 %4196, %4197
  %4199 = mul i128 632, %4198
  %4200 = trunc i128 %4199 to i64
  store i64 %4200, i64* %RCX.i1028, align 8
  %4201 = sext i64 %4200 to i128
  %4202 = icmp ne i128 %4201, %4199
  %4203 = zext i1 %4202 to i8
  %4204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4203, i8* %4204, align 1
  %4205 = trunc i128 %4199 to i32
  %4206 = and i32 %4205, 255
  %4207 = call i32 @llvm.ctpop.i32(i32 %4206)
  %4208 = trunc i32 %4207 to i8
  %4209 = and i8 %4208, 1
  %4210 = xor i8 %4209, 1
  %4211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4210, i8* %4211, align 1
  %4212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4212, align 1
  %4213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4213, align 1
  %4214 = lshr i64 %4200, 63
  %4215 = trunc i64 %4214 to i8
  %4216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4215, i8* %4216, align 1
  %4217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4203, i8* %4217, align 1
  store %struct.Memory* %loadMem_44aab5, %struct.Memory** %MEMORY
  %loadMem_44aabc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4219 = getelementptr inbounds %struct.GPR, %struct.GPR* %4218, i32 0, i32 33
  %4220 = getelementptr inbounds %struct.Reg, %struct.Reg* %4219, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %4220 to i64*
  %4221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4222 = getelementptr inbounds %struct.GPR, %struct.GPR* %4221, i32 0, i32 1
  %4223 = getelementptr inbounds %struct.Reg, %struct.Reg* %4222, i32 0, i32 0
  %RAX.i1025 = bitcast %union.anon* %4223 to i64*
  %4224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4225 = getelementptr inbounds %struct.GPR, %struct.GPR* %4224, i32 0, i32 5
  %4226 = getelementptr inbounds %struct.Reg, %struct.Reg* %4225, i32 0, i32 0
  %RCX.i1026 = bitcast %union.anon* %4226 to i64*
  %4227 = load i64, i64* %RAX.i1025
  %4228 = load i64, i64* %RCX.i1026
  %4229 = load i64, i64* %PC.i1024
  %4230 = add i64 %4229, 3
  store i64 %4230, i64* %PC.i1024
  %4231 = add i64 %4228, %4227
  store i64 %4231, i64* %RAX.i1025, align 8
  %4232 = icmp ult i64 %4231, %4227
  %4233 = icmp ult i64 %4231, %4228
  %4234 = or i1 %4232, %4233
  %4235 = zext i1 %4234 to i8
  %4236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4235, i8* %4236, align 1
  %4237 = trunc i64 %4231 to i32
  %4238 = and i32 %4237, 255
  %4239 = call i32 @llvm.ctpop.i32(i32 %4238)
  %4240 = trunc i32 %4239 to i8
  %4241 = and i8 %4240, 1
  %4242 = xor i8 %4241, 1
  %4243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4242, i8* %4243, align 1
  %4244 = xor i64 %4228, %4227
  %4245 = xor i64 %4244, %4231
  %4246 = lshr i64 %4245, 4
  %4247 = trunc i64 %4246 to i8
  %4248 = and i8 %4247, 1
  %4249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4248, i8* %4249, align 1
  %4250 = icmp eq i64 %4231, 0
  %4251 = zext i1 %4250 to i8
  %4252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4251, i8* %4252, align 1
  %4253 = lshr i64 %4231, 63
  %4254 = trunc i64 %4253 to i8
  %4255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4254, i8* %4255, align 1
  %4256 = lshr i64 %4227, 63
  %4257 = lshr i64 %4228, 63
  %4258 = xor i64 %4253, %4256
  %4259 = xor i64 %4253, %4257
  %4260 = add i64 %4258, %4259
  %4261 = icmp eq i64 %4260, 2
  %4262 = zext i1 %4261 to i8
  %4263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4262, i8* %4263, align 1
  store %struct.Memory* %loadMem_44aabc, %struct.Memory** %MEMORY
  %loadMem_44aabf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4265 = getelementptr inbounds %struct.GPR, %struct.GPR* %4264, i32 0, i32 33
  %4266 = getelementptr inbounds %struct.Reg, %struct.Reg* %4265, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %4266 to i64*
  %4267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4268 = getelementptr inbounds %struct.GPR, %struct.GPR* %4267, i32 0, i32 1
  %4269 = getelementptr inbounds %struct.Reg, %struct.Reg* %4268, i32 0, i32 0
  %RAX.i1023 = bitcast %union.anon* %4269 to i64*
  %4270 = load i64, i64* %RAX.i1023
  %4271 = add i64 %4270, 532
  %4272 = load i64, i64* %PC.i1022
  %4273 = add i64 %4272, 7
  store i64 %4273, i64* %PC.i1022
  %4274 = inttoptr i64 %4271 to i32*
  %4275 = load i32, i32* %4274
  %4276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4276, align 1
  %4277 = and i32 %4275, 255
  %4278 = call i32 @llvm.ctpop.i32(i32 %4277)
  %4279 = trunc i32 %4278 to i8
  %4280 = and i8 %4279, 1
  %4281 = xor i8 %4280, 1
  %4282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4281, i8* %4282, align 1
  %4283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4283, align 1
  %4284 = icmp eq i32 %4275, 0
  %4285 = zext i1 %4284 to i8
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4285, i8* %4286, align 1
  %4287 = lshr i32 %4275, 31
  %4288 = trunc i32 %4287 to i8
  %4289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4288, i8* %4289, align 1
  %4290 = lshr i32 %4275, 31
  %4291 = xor i32 %4287, %4290
  %4292 = add i32 %4291, %4290
  %4293 = icmp eq i32 %4292, 2
  %4294 = zext i1 %4293 to i8
  %4295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4294, i8* %4295, align 1
  store %struct.Memory* %loadMem_44aabf, %struct.Memory** %MEMORY
  %loadMem_44aac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4297 = getelementptr inbounds %struct.GPR, %struct.GPR* %4296, i32 0, i32 33
  %4298 = getelementptr inbounds %struct.Reg, %struct.Reg* %4297, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %4298 to i64*
  %4299 = load i64, i64* %PC.i1021
  %4300 = add i64 %4299, 30
  %4301 = load i64, i64* %PC.i1021
  %4302 = add i64 %4301, 6
  %4303 = load i64, i64* %PC.i1021
  %4304 = add i64 %4303, 6
  store i64 %4304, i64* %PC.i1021
  %4305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4306 = load i8, i8* %4305, align 1
  %4307 = icmp eq i8 %4306, 0
  %4308 = zext i1 %4307 to i8
  store i8 %4308, i8* %BRANCH_TAKEN, align 1
  %4309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4310 = select i1 %4307, i64 %4300, i64 %4302
  store i64 %4310, i64* %4309, align 8
  store %struct.Memory* %loadMem_44aac6, %struct.Memory** %MEMORY
  %loadBr_44aac6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44aac6 = icmp eq i8 %loadBr_44aac6, 1
  br i1 %cmpBr_44aac6, label %block_.L_44aae4, label %block_44aacc

block_44aacc:                                     ; preds = %block_44aa9b
  %loadMem_44aacc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4312 = getelementptr inbounds %struct.GPR, %struct.GPR* %4311, i32 0, i32 33
  %4313 = getelementptr inbounds %struct.Reg, %struct.Reg* %4312, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %4313 to i64*
  %4314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4315 = getelementptr inbounds %struct.GPR, %struct.GPR* %4314, i32 0, i32 1
  %4316 = getelementptr inbounds %struct.Reg, %struct.Reg* %4315, i32 0, i32 0
  %RAX.i1019 = bitcast %union.anon* %4316 to i64*
  %4317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4318 = getelementptr inbounds %struct.GPR, %struct.GPR* %4317, i32 0, i32 15
  %4319 = getelementptr inbounds %struct.Reg, %struct.Reg* %4318, i32 0, i32 0
  %RBP.i1020 = bitcast %union.anon* %4319 to i64*
  %4320 = load i64, i64* %RBP.i1020
  %4321 = sub i64 %4320, 24
  %4322 = load i64, i64* %PC.i1018
  %4323 = add i64 %4322, 4
  store i64 %4323, i64* %PC.i1018
  %4324 = inttoptr i64 %4321 to i64*
  %4325 = load i64, i64* %4324
  store i64 %4325, i64* %RAX.i1019, align 8
  store %struct.Memory* %loadMem_44aacc, %struct.Memory** %MEMORY
  %loadMem_44aad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4327 = getelementptr inbounds %struct.GPR, %struct.GPR* %4326, i32 0, i32 33
  %4328 = getelementptr inbounds %struct.Reg, %struct.Reg* %4327, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %4328 to i64*
  %4329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4330 = getelementptr inbounds %struct.GPR, %struct.GPR* %4329, i32 0, i32 1
  %4331 = getelementptr inbounds %struct.Reg, %struct.Reg* %4330, i32 0, i32 0
  %RAX.i1016 = bitcast %union.anon* %4331 to i64*
  %4332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4333 = getelementptr inbounds %struct.GPR, %struct.GPR* %4332, i32 0, i32 5
  %4334 = getelementptr inbounds %struct.Reg, %struct.Reg* %4333, i32 0, i32 0
  %RCX.i1017 = bitcast %union.anon* %4334 to i64*
  %4335 = load i64, i64* %RAX.i1016
  %4336 = add i64 %4335, 4
  %4337 = load i64, i64* %PC.i1015
  %4338 = add i64 %4337, 3
  store i64 %4338, i64* %PC.i1015
  %4339 = inttoptr i64 %4336 to i32*
  %4340 = load i32, i32* %4339
  %4341 = zext i32 %4340 to i64
  store i64 %4341, i64* %RCX.i1017, align 8
  store %struct.Memory* %loadMem_44aad0, %struct.Memory** %MEMORY
  %loadMem_44aad3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4343 = getelementptr inbounds %struct.GPR, %struct.GPR* %4342, i32 0, i32 33
  %4344 = getelementptr inbounds %struct.Reg, %struct.Reg* %4343, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %4344 to i64*
  %4345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4346 = getelementptr inbounds %struct.GPR, %struct.GPR* %4345, i32 0, i32 5
  %4347 = getelementptr inbounds %struct.Reg, %struct.Reg* %4346, i32 0, i32 0
  %RCX.i1014 = bitcast %union.anon* %4347 to i64*
  %4348 = load i64, i64* %RCX.i1014
  %4349 = load i64, i64* %PC.i1013
  %4350 = add i64 %4349, 3
  store i64 %4350, i64* %PC.i1013
  %4351 = trunc i64 %4348 to i32
  %4352 = add i32 1, %4351
  %4353 = zext i32 %4352 to i64
  store i64 %4353, i64* %RCX.i1014, align 8
  %4354 = icmp ult i32 %4352, %4351
  %4355 = icmp ult i32 %4352, 1
  %4356 = or i1 %4354, %4355
  %4357 = zext i1 %4356 to i8
  %4358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4357, i8* %4358, align 1
  %4359 = and i32 %4352, 255
  %4360 = call i32 @llvm.ctpop.i32(i32 %4359)
  %4361 = trunc i32 %4360 to i8
  %4362 = and i8 %4361, 1
  %4363 = xor i8 %4362, 1
  %4364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4363, i8* %4364, align 1
  %4365 = xor i64 1, %4348
  %4366 = trunc i64 %4365 to i32
  %4367 = xor i32 %4366, %4352
  %4368 = lshr i32 %4367, 4
  %4369 = trunc i32 %4368 to i8
  %4370 = and i8 %4369, 1
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4370, i8* %4371, align 1
  %4372 = icmp eq i32 %4352, 0
  %4373 = zext i1 %4372 to i8
  %4374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4373, i8* %4374, align 1
  %4375 = lshr i32 %4352, 31
  %4376 = trunc i32 %4375 to i8
  %4377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4376, i8* %4377, align 1
  %4378 = lshr i32 %4351, 31
  %4379 = xor i32 %4375, %4378
  %4380 = add i32 %4379, %4375
  %4381 = icmp eq i32 %4380, 2
  %4382 = zext i1 %4381 to i8
  %4383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4382, i8* %4383, align 1
  store %struct.Memory* %loadMem_44aad3, %struct.Memory** %MEMORY
  %loadMem_44aad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4385 = getelementptr inbounds %struct.GPR, %struct.GPR* %4384, i32 0, i32 33
  %4386 = getelementptr inbounds %struct.Reg, %struct.Reg* %4385, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %4386 to i64*
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4388 = getelementptr inbounds %struct.GPR, %struct.GPR* %4387, i32 0, i32 5
  %4389 = getelementptr inbounds %struct.Reg, %struct.Reg* %4388, i32 0, i32 0
  %ECX.i1011 = bitcast %union.anon* %4389 to i32*
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4391 = getelementptr inbounds %struct.GPR, %struct.GPR* %4390, i32 0, i32 1
  %4392 = getelementptr inbounds %struct.Reg, %struct.Reg* %4391, i32 0, i32 0
  %RAX.i1012 = bitcast %union.anon* %4392 to i64*
  %4393 = load i64, i64* %RAX.i1012
  %4394 = add i64 %4393, 4
  %4395 = load i32, i32* %ECX.i1011
  %4396 = zext i32 %4395 to i64
  %4397 = load i64, i64* %PC.i1010
  %4398 = add i64 %4397, 3
  store i64 %4398, i64* %PC.i1010
  %4399 = inttoptr i64 %4394 to i32*
  store i32 %4395, i32* %4399
  store %struct.Memory* %loadMem_44aad6, %struct.Memory** %MEMORY
  %loadMem_44aad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4401 = getelementptr inbounds %struct.GPR, %struct.GPR* %4400, i32 0, i32 33
  %4402 = getelementptr inbounds %struct.Reg, %struct.Reg* %4401, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %4402 to i64*
  %4403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4404 = getelementptr inbounds %struct.GPR, %struct.GPR* %4403, i32 0, i32 5
  %4405 = getelementptr inbounds %struct.Reg, %struct.Reg* %4404, i32 0, i32 0
  %RCX.i1008 = bitcast %union.anon* %4405 to i64*
  %4406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4407 = getelementptr inbounds %struct.GPR, %struct.GPR* %4406, i32 0, i32 15
  %4408 = getelementptr inbounds %struct.Reg, %struct.Reg* %4407, i32 0, i32 0
  %RBP.i1009 = bitcast %union.anon* %4408 to i64*
  %4409 = load i64, i64* %RBP.i1009
  %4410 = sub i64 %4409, 12
  %4411 = load i64, i64* %PC.i1007
  %4412 = add i64 %4411, 3
  store i64 %4412, i64* %PC.i1007
  %4413 = inttoptr i64 %4410 to i32*
  %4414 = load i32, i32* %4413
  %4415 = zext i32 %4414 to i64
  store i64 %4415, i64* %RCX.i1008, align 8
  store %struct.Memory* %loadMem_44aad9, %struct.Memory** %MEMORY
  %loadMem_44aadc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4417 = getelementptr inbounds %struct.GPR, %struct.GPR* %4416, i32 0, i32 33
  %4418 = getelementptr inbounds %struct.Reg, %struct.Reg* %4417, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %4418 to i64*
  %4419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4420 = getelementptr inbounds %struct.GPR, %struct.GPR* %4419, i32 0, i32 5
  %4421 = getelementptr inbounds %struct.Reg, %struct.Reg* %4420, i32 0, i32 0
  %ECX.i1005 = bitcast %union.anon* %4421 to i32*
  %4422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4423 = getelementptr inbounds %struct.GPR, %struct.GPR* %4422, i32 0, i32 15
  %4424 = getelementptr inbounds %struct.Reg, %struct.Reg* %4423, i32 0, i32 0
  %RBP.i1006 = bitcast %union.anon* %4424 to i64*
  %4425 = load i64, i64* %RBP.i1006
  %4426 = sub i64 %4425, 44
  %4427 = load i32, i32* %ECX.i1005
  %4428 = zext i32 %4427 to i64
  %4429 = load i64, i64* %PC.i1004
  %4430 = add i64 %4429, 3
  store i64 %4430, i64* %PC.i1004
  %4431 = inttoptr i64 %4426 to i32*
  store i32 %4427, i32* %4431
  store %struct.Memory* %loadMem_44aadc, %struct.Memory** %MEMORY
  %loadMem_44aadf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4433 = getelementptr inbounds %struct.GPR, %struct.GPR* %4432, i32 0, i32 33
  %4434 = getelementptr inbounds %struct.Reg, %struct.Reg* %4433, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %4434 to i64*
  %4435 = load i64, i64* %PC.i1003
  %4436 = add i64 %4435, 80
  %4437 = load i64, i64* %PC.i1003
  %4438 = add i64 %4437, 5
  store i64 %4438, i64* %PC.i1003
  %4439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4436, i64* %4439, align 8
  store %struct.Memory* %loadMem_44aadf, %struct.Memory** %MEMORY
  br label %block_.L_44ab2f

block_.L_44aae4:                                  ; preds = %block_44aa9b
  %loadMem_44aae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4441 = getelementptr inbounds %struct.GPR, %struct.GPR* %4440, i32 0, i32 33
  %4442 = getelementptr inbounds %struct.Reg, %struct.Reg* %4441, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %4442 to i64*
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4444 = getelementptr inbounds %struct.GPR, %struct.GPR* %4443, i32 0, i32 1
  %4445 = getelementptr inbounds %struct.Reg, %struct.Reg* %4444, i32 0, i32 0
  %RAX.i1002 = bitcast %union.anon* %4445 to i64*
  %4446 = load i64, i64* %PC.i1001
  %4447 = add i64 %4446, 5
  store i64 %4447, i64* %PC.i1001
  store i64 2, i64* %RAX.i1002, align 8
  store %struct.Memory* %loadMem_44aae4, %struct.Memory** %MEMORY
  %loadMem_44aae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4449 = getelementptr inbounds %struct.GPR, %struct.GPR* %4448, i32 0, i32 33
  %4450 = getelementptr inbounds %struct.Reg, %struct.Reg* %4449, i32 0, i32 0
  %PC.i998 = bitcast %union.anon* %4450 to i64*
  %4451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4452 = getelementptr inbounds %struct.GPR, %struct.GPR* %4451, i32 0, i32 5
  %4453 = getelementptr inbounds %struct.Reg, %struct.Reg* %4452, i32 0, i32 0
  %RCX.i999 = bitcast %union.anon* %4453 to i64*
  %4454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4455 = getelementptr inbounds %struct.GPR, %struct.GPR* %4454, i32 0, i32 15
  %4456 = getelementptr inbounds %struct.Reg, %struct.Reg* %4455, i32 0, i32 0
  %RBP.i1000 = bitcast %union.anon* %4456 to i64*
  %4457 = load i64, i64* %RBP.i1000
  %4458 = sub i64 %4457, 12
  %4459 = load i64, i64* %PC.i998
  %4460 = add i64 %4459, 3
  store i64 %4460, i64* %PC.i998
  %4461 = inttoptr i64 %4458 to i32*
  %4462 = load i32, i32* %4461
  %4463 = zext i32 %4462 to i64
  store i64 %4463, i64* %RCX.i999, align 8
  store %struct.Memory* %loadMem_44aae9, %struct.Memory** %MEMORY
  %loadMem_44aaec = load %struct.Memory*, %struct.Memory** %MEMORY
  %4464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4465 = getelementptr inbounds %struct.GPR, %struct.GPR* %4464, i32 0, i32 33
  %4466 = getelementptr inbounds %struct.Reg, %struct.Reg* %4465, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %4466 to i64*
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4468 = getelementptr inbounds %struct.GPR, %struct.GPR* %4467, i32 0, i32 1
  %4469 = getelementptr inbounds %struct.Reg, %struct.Reg* %4468, i32 0, i32 0
  %EAX.i996 = bitcast %union.anon* %4469 to i32*
  %4470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4471 = getelementptr inbounds %struct.GPR, %struct.GPR* %4470, i32 0, i32 15
  %4472 = getelementptr inbounds %struct.Reg, %struct.Reg* %4471, i32 0, i32 0
  %RBP.i997 = bitcast %union.anon* %4472 to i64*
  %4473 = load i64, i64* %RBP.i997
  %4474 = sub i64 %4473, 52
  %4475 = load i32, i32* %EAX.i996
  %4476 = zext i32 %4475 to i64
  %4477 = load i64, i64* %PC.i995
  %4478 = add i64 %4477, 3
  store i64 %4478, i64* %PC.i995
  %4479 = inttoptr i64 %4474 to i32*
  store i32 %4475, i32* %4479
  store %struct.Memory* %loadMem_44aaec, %struct.Memory** %MEMORY
  %loadMem_44aaef = load %struct.Memory*, %struct.Memory** %MEMORY
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4481 = getelementptr inbounds %struct.GPR, %struct.GPR* %4480, i32 0, i32 33
  %4482 = getelementptr inbounds %struct.Reg, %struct.Reg* %4481, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %4482 to i64*
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4484 = getelementptr inbounds %struct.GPR, %struct.GPR* %4483, i32 0, i32 5
  %4485 = getelementptr inbounds %struct.Reg, %struct.Reg* %4484, i32 0, i32 0
  %ECX.i993 = bitcast %union.anon* %4485 to i32*
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4487 = getelementptr inbounds %struct.GPR, %struct.GPR* %4486, i32 0, i32 1
  %4488 = getelementptr inbounds %struct.Reg, %struct.Reg* %4487, i32 0, i32 0
  %RAX.i994 = bitcast %union.anon* %4488 to i64*
  %4489 = load i32, i32* %ECX.i993
  %4490 = zext i32 %4489 to i64
  %4491 = load i64, i64* %PC.i992
  %4492 = add i64 %4491, 2
  store i64 %4492, i64* %PC.i992
  %4493 = and i64 %4490, 4294967295
  store i64 %4493, i64* %RAX.i994, align 8
  store %struct.Memory* %loadMem_44aaef, %struct.Memory** %MEMORY
  %loadMem_44aaf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4495 = getelementptr inbounds %struct.GPR, %struct.GPR* %4494, i32 0, i32 33
  %4496 = getelementptr inbounds %struct.Reg, %struct.Reg* %4495, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %4496 to i64*
  %4497 = load i64, i64* %PC.i991
  %4498 = add i64 %4497, 1
  store i64 %4498, i64* %PC.i991
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %4501 = bitcast %union.anon* %4500 to i32*
  %4502 = load i32, i32* %4501, align 8
  %4503 = sext i32 %4502 to i64
  %4504 = lshr i64 %4503, 32
  store i64 %4504, i64* %4499, align 8
  store %struct.Memory* %loadMem_44aaf1, %struct.Memory** %MEMORY
  %loadMem_44aaf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4506 = getelementptr inbounds %struct.GPR, %struct.GPR* %4505, i32 0, i32 33
  %4507 = getelementptr inbounds %struct.Reg, %struct.Reg* %4506, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %4507 to i64*
  %4508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4509 = getelementptr inbounds %struct.GPR, %struct.GPR* %4508, i32 0, i32 5
  %4510 = getelementptr inbounds %struct.Reg, %struct.Reg* %4509, i32 0, i32 0
  %RCX.i989 = bitcast %union.anon* %4510 to i64*
  %4511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4512 = getelementptr inbounds %struct.GPR, %struct.GPR* %4511, i32 0, i32 15
  %4513 = getelementptr inbounds %struct.Reg, %struct.Reg* %4512, i32 0, i32 0
  %RBP.i990 = bitcast %union.anon* %4513 to i64*
  %4514 = load i64, i64* %RBP.i990
  %4515 = sub i64 %4514, 52
  %4516 = load i64, i64* %PC.i988
  %4517 = add i64 %4516, 3
  store i64 %4517, i64* %PC.i988
  %4518 = inttoptr i64 %4515 to i32*
  %4519 = load i32, i32* %4518
  %4520 = zext i32 %4519 to i64
  store i64 %4520, i64* %RCX.i989, align 8
  store %struct.Memory* %loadMem_44aaf2, %struct.Memory** %MEMORY
  %loadMem_44aaf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4522 = getelementptr inbounds %struct.GPR, %struct.GPR* %4521, i32 0, i32 33
  %4523 = getelementptr inbounds %struct.Reg, %struct.Reg* %4522, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %4523 to i64*
  %4524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4525 = getelementptr inbounds %struct.GPR, %struct.GPR* %4524, i32 0, i32 5
  %4526 = getelementptr inbounds %struct.Reg, %struct.Reg* %4525, i32 0, i32 0
  %ECX.i985 = bitcast %union.anon* %4526 to i32*
  %4527 = load i32, i32* %ECX.i985
  %4528 = zext i32 %4527 to i64
  %4529 = load i64, i64* %PC.i984
  %4530 = add i64 %4529, 2
  store i64 %4530, i64* %PC.i984
  %4531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %4532 = bitcast %union.anon* %4531 to i32*
  %4533 = load i32, i32* %4532, align 8
  %4534 = zext i32 %4533 to i64
  %4535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %4536 = bitcast %union.anon* %4535 to i32*
  %4537 = load i32, i32* %4536, align 8
  %4538 = zext i32 %4537 to i64
  %4539 = shl i64 %4528, 32
  %4540 = ashr exact i64 %4539, 32
  %4541 = shl i64 %4538, 32
  %4542 = or i64 %4541, %4534
  %4543 = sdiv i64 %4542, %4540
  %4544 = shl i64 %4543, 32
  %4545 = ashr exact i64 %4544, 32
  %4546 = icmp eq i64 %4543, %4545
  br i1 %4546, label %4551, label %4547

; <label>:4547:                                   ; preds = %block_.L_44aae4
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4549 = load i64, i64* %4548, align 8
  %4550 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4549, %struct.Memory* %loadMem_44aaf5)
  br label %routine_idivl__ecx.exit

; <label>:4551:                                   ; preds = %block_.L_44aae4
  %4552 = srem i64 %4542, %4540
  %4553 = getelementptr inbounds %union.anon, %union.anon* %4531, i64 0, i32 0
  %4554 = and i64 %4543, 4294967295
  store i64 %4554, i64* %4553, align 8
  %4555 = getelementptr inbounds %union.anon, %union.anon* %4535, i64 0, i32 0
  %4556 = and i64 %4552, 4294967295
  store i64 %4556, i64* %4555, align 8
  %4557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4557, align 1
  %4558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %4558, align 1
  %4559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4559, align 1
  %4560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4560, align 1
  %4561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4561, align 1
  %4562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4562, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %4547, %4551
  %4563 = phi %struct.Memory* [ %4550, %4547 ], [ %loadMem_44aaf5, %4551 ]
  store %struct.Memory* %4563, %struct.Memory** %MEMORY
  %loadMem_44aaf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4565 = getelementptr inbounds %struct.GPR, %struct.GPR* %4564, i32 0, i32 33
  %4566 = getelementptr inbounds %struct.Reg, %struct.Reg* %4565, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %4566 to i64*
  %4567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4568 = getelementptr inbounds %struct.GPR, %struct.GPR* %4567, i32 0, i32 7
  %4569 = getelementptr inbounds %struct.Reg, %struct.Reg* %4568, i32 0, i32 0
  %EDX.i983 = bitcast %union.anon* %4569 to i32*
  %4570 = load i32, i32* %EDX.i983
  %4571 = zext i32 %4570 to i64
  %4572 = load i64, i64* %PC.i982
  %4573 = add i64 %4572, 3
  store i64 %4573, i64* %PC.i982
  %4574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4574, align 1
  %4575 = and i32 %4570, 255
  %4576 = call i32 @llvm.ctpop.i32(i32 %4575)
  %4577 = trunc i32 %4576 to i8
  %4578 = and i8 %4577, 1
  %4579 = xor i8 %4578, 1
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4579, i8* %4580, align 1
  %4581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4581, align 1
  %4582 = icmp eq i32 %4570, 0
  %4583 = zext i1 %4582 to i8
  %4584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4583, i8* %4584, align 1
  %4585 = lshr i32 %4570, 31
  %4586 = trunc i32 %4585 to i8
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4586, i8* %4587, align 1
  %4588 = lshr i32 %4570, 31
  %4589 = xor i32 %4585, %4588
  %4590 = add i32 %4589, %4588
  %4591 = icmp eq i32 %4590, 2
  %4592 = zext i1 %4591 to i8
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4592, i8* %4593, align 1
  store %struct.Memory* %loadMem_44aaf7, %struct.Memory** %MEMORY
  %loadMem_44aafa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4595 = getelementptr inbounds %struct.GPR, %struct.GPR* %4594, i32 0, i32 33
  %4596 = getelementptr inbounds %struct.Reg, %struct.Reg* %4595, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %4596 to i64*
  %4597 = load i64, i64* %PC.i981
  %4598 = add i64 %4597, 23
  %4599 = load i64, i64* %PC.i981
  %4600 = add i64 %4599, 6
  %4601 = load i64, i64* %PC.i981
  %4602 = add i64 %4601, 6
  store i64 %4602, i64* %PC.i981
  %4603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4604 = load i8, i8* %4603, align 1
  %4605 = icmp eq i8 %4604, 0
  %4606 = zext i1 %4605 to i8
  store i8 %4606, i8* %BRANCH_TAKEN, align 1
  %4607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4608 = select i1 %4605, i64 %4598, i64 %4600
  store i64 %4608, i64* %4607, align 8
  store %struct.Memory* %loadMem_44aafa, %struct.Memory** %MEMORY
  %loadBr_44aafa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44aafa = icmp eq i8 %loadBr_44aafa, 1
  br i1 %cmpBr_44aafa, label %block_.L_44ab11, label %block_44ab00

block_44ab00:                                     ; preds = %routine_idivl__ecx.exit
  %loadMem_44ab00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4610 = getelementptr inbounds %struct.GPR, %struct.GPR* %4609, i32 0, i32 33
  %4611 = getelementptr inbounds %struct.Reg, %struct.Reg* %4610, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %4611 to i64*
  %4612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4613 = getelementptr inbounds %struct.GPR, %struct.GPR* %4612, i32 0, i32 1
  %4614 = getelementptr inbounds %struct.Reg, %struct.Reg* %4613, i32 0, i32 0
  %RAX.i979 = bitcast %union.anon* %4614 to i64*
  %4615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4616 = getelementptr inbounds %struct.GPR, %struct.GPR* %4615, i32 0, i32 15
  %4617 = getelementptr inbounds %struct.Reg, %struct.Reg* %4616, i32 0, i32 0
  %RBP.i980 = bitcast %union.anon* %4617 to i64*
  %4618 = load i64, i64* %RBP.i980
  %4619 = sub i64 %4618, 12
  %4620 = load i64, i64* %PC.i978
  %4621 = add i64 %4620, 3
  store i64 %4621, i64* %PC.i978
  %4622 = inttoptr i64 %4619 to i32*
  %4623 = load i32, i32* %4622
  %4624 = zext i32 %4623 to i64
  store i64 %4624, i64* %RAX.i979, align 8
  store %struct.Memory* %loadMem_44ab00, %struct.Memory** %MEMORY
  %loadMem_44ab03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4626 = getelementptr inbounds %struct.GPR, %struct.GPR* %4625, i32 0, i32 33
  %4627 = getelementptr inbounds %struct.Reg, %struct.Reg* %4626, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %4627 to i64*
  %4628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4629 = getelementptr inbounds %struct.GPR, %struct.GPR* %4628, i32 0, i32 1
  %4630 = getelementptr inbounds %struct.Reg, %struct.Reg* %4629, i32 0, i32 0
  %RAX.i976 = bitcast %union.anon* %4630 to i64*
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4632 = getelementptr inbounds %struct.GPR, %struct.GPR* %4631, i32 0, i32 15
  %4633 = getelementptr inbounds %struct.Reg, %struct.Reg* %4632, i32 0, i32 0
  %RBP.i977 = bitcast %union.anon* %4633 to i64*
  %4634 = load i64, i64* %RAX.i976
  %4635 = load i64, i64* %RBP.i977
  %4636 = sub i64 %4635, 40
  %4637 = load i64, i64* %PC.i975
  %4638 = add i64 %4637, 3
  store i64 %4638, i64* %PC.i975
  %4639 = trunc i64 %4634 to i32
  %4640 = inttoptr i64 %4636 to i32*
  %4641 = load i32, i32* %4640
  %4642 = add i32 %4641, %4639
  %4643 = zext i32 %4642 to i64
  store i64 %4643, i64* %RAX.i976, align 8
  %4644 = icmp ult i32 %4642, %4639
  %4645 = icmp ult i32 %4642, %4641
  %4646 = or i1 %4644, %4645
  %4647 = zext i1 %4646 to i8
  %4648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4647, i8* %4648, align 1
  %4649 = and i32 %4642, 255
  %4650 = call i32 @llvm.ctpop.i32(i32 %4649)
  %4651 = trunc i32 %4650 to i8
  %4652 = and i8 %4651, 1
  %4653 = xor i8 %4652, 1
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4653, i8* %4654, align 1
  %4655 = xor i32 %4641, %4639
  %4656 = xor i32 %4655, %4642
  %4657 = lshr i32 %4656, 4
  %4658 = trunc i32 %4657 to i8
  %4659 = and i8 %4658, 1
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4659, i8* %4660, align 1
  %4661 = icmp eq i32 %4642, 0
  %4662 = zext i1 %4661 to i8
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4662, i8* %4663, align 1
  %4664 = lshr i32 %4642, 31
  %4665 = trunc i32 %4664 to i8
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4665, i8* %4666, align 1
  %4667 = lshr i32 %4639, 31
  %4668 = lshr i32 %4641, 31
  %4669 = xor i32 %4664, %4667
  %4670 = xor i32 %4664, %4668
  %4671 = add i32 %4669, %4670
  %4672 = icmp eq i32 %4671, 2
  %4673 = zext i1 %4672 to i8
  %4674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4673, i8* %4674, align 1
  store %struct.Memory* %loadMem_44ab03, %struct.Memory** %MEMORY
  %loadMem_44ab06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4676 = getelementptr inbounds %struct.GPR, %struct.GPR* %4675, i32 0, i32 33
  %4677 = getelementptr inbounds %struct.Reg, %struct.Reg* %4676, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %4677 to i64*
  %4678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4679 = getelementptr inbounds %struct.GPR, %struct.GPR* %4678, i32 0, i32 1
  %4680 = getelementptr inbounds %struct.Reg, %struct.Reg* %4679, i32 0, i32 0
  %RAX.i974 = bitcast %union.anon* %4680 to i64*
  %4681 = load i64, i64* %RAX.i974
  %4682 = load i64, i64* %PC.i973
  %4683 = add i64 %4682, 2
  store i64 %4683, i64* %PC.i973
  %4684 = shl i64 %4681, 32
  %4685 = ashr i64 %4684, 33
  %4686 = trunc i64 %4681 to i8
  %4687 = and i8 %4686, 1
  %4688 = trunc i64 %4685 to i32
  %4689 = and i64 %4685, 4294967295
  store i64 %4689, i64* %RAX.i974, align 8
  %4690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4687, i8* %4690, align 1
  %4691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4692 = and i32 %4688, 255
  %4693 = call i32 @llvm.ctpop.i32(i32 %4692)
  %4694 = trunc i32 %4693 to i8
  %4695 = and i8 %4694, 1
  %4696 = xor i8 %4695, 1
  store i8 %4696, i8* %4691, align 1
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4697, align 1
  %4698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4699 = icmp eq i32 %4688, 0
  %4700 = zext i1 %4699 to i8
  store i8 %4700, i8* %4698, align 1
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4702 = lshr i32 %4688, 31
  %4703 = trunc i32 %4702 to i8
  store i8 %4703, i8* %4701, align 1
  %4704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4704, align 1
  store %struct.Memory* %loadMem_44ab06, %struct.Memory** %MEMORY
  %loadMem_44ab09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4706 = getelementptr inbounds %struct.GPR, %struct.GPR* %4705, i32 0, i32 33
  %4707 = getelementptr inbounds %struct.Reg, %struct.Reg* %4706, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %4707 to i64*
  %4708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4709 = getelementptr inbounds %struct.GPR, %struct.GPR* %4708, i32 0, i32 1
  %4710 = getelementptr inbounds %struct.Reg, %struct.Reg* %4709, i32 0, i32 0
  %EAX.i971 = bitcast %union.anon* %4710 to i32*
  %4711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4712 = getelementptr inbounds %struct.GPR, %struct.GPR* %4711, i32 0, i32 15
  %4713 = getelementptr inbounds %struct.Reg, %struct.Reg* %4712, i32 0, i32 0
  %RBP.i972 = bitcast %union.anon* %4713 to i64*
  %4714 = load i64, i64* %RBP.i972
  %4715 = sub i64 %4714, 44
  %4716 = load i32, i32* %EAX.i971
  %4717 = zext i32 %4716 to i64
  %4718 = load i64, i64* %PC.i970
  %4719 = add i64 %4718, 3
  store i64 %4719, i64* %PC.i970
  %4720 = inttoptr i64 %4715 to i32*
  store i32 %4716, i32* %4720
  store %struct.Memory* %loadMem_44ab09, %struct.Memory** %MEMORY
  %loadMem_44ab0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4722 = getelementptr inbounds %struct.GPR, %struct.GPR* %4721, i32 0, i32 33
  %4723 = getelementptr inbounds %struct.Reg, %struct.Reg* %4722, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %4723 to i64*
  %4724 = load i64, i64* %PC.i969
  %4725 = add i64 %4724, 30
  %4726 = load i64, i64* %PC.i969
  %4727 = add i64 %4726, 5
  store i64 %4727, i64* %PC.i969
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4725, i64* %4728, align 8
  store %struct.Memory* %loadMem_44ab0c, %struct.Memory** %MEMORY
  br label %block_.L_44ab2a

block_.L_44ab11:                                  ; preds = %routine_idivl__ecx.exit
  %loadMem_44ab11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4730 = getelementptr inbounds %struct.GPR, %struct.GPR* %4729, i32 0, i32 33
  %4731 = getelementptr inbounds %struct.Reg, %struct.Reg* %4730, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %4731 to i64*
  %4732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4733 = getelementptr inbounds %struct.GPR, %struct.GPR* %4732, i32 0, i32 1
  %4734 = getelementptr inbounds %struct.Reg, %struct.Reg* %4733, i32 0, i32 0
  %RAX.i967 = bitcast %union.anon* %4734 to i64*
  %4735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4736 = getelementptr inbounds %struct.GPR, %struct.GPR* %4735, i32 0, i32 15
  %4737 = getelementptr inbounds %struct.Reg, %struct.Reg* %4736, i32 0, i32 0
  %RBP.i968 = bitcast %union.anon* %4737 to i64*
  %4738 = load i64, i64* %RBP.i968
  %4739 = sub i64 %4738, 24
  %4740 = load i64, i64* %PC.i966
  %4741 = add i64 %4740, 4
  store i64 %4741, i64* %PC.i966
  %4742 = inttoptr i64 %4739 to i64*
  %4743 = load i64, i64* %4742
  store i64 %4743, i64* %RAX.i967, align 8
  store %struct.Memory* %loadMem_44ab11, %struct.Memory** %MEMORY
  %loadMem_44ab15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4745 = getelementptr inbounds %struct.GPR, %struct.GPR* %4744, i32 0, i32 33
  %4746 = getelementptr inbounds %struct.Reg, %struct.Reg* %4745, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %4746 to i64*
  %4747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4748 = getelementptr inbounds %struct.GPR, %struct.GPR* %4747, i32 0, i32 1
  %4749 = getelementptr inbounds %struct.Reg, %struct.Reg* %4748, i32 0, i32 0
  %RAX.i964 = bitcast %union.anon* %4749 to i64*
  %4750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4751 = getelementptr inbounds %struct.GPR, %struct.GPR* %4750, i32 0, i32 5
  %4752 = getelementptr inbounds %struct.Reg, %struct.Reg* %4751, i32 0, i32 0
  %RCX.i965 = bitcast %union.anon* %4752 to i64*
  %4753 = load i64, i64* %RAX.i964
  %4754 = add i64 %4753, 4
  %4755 = load i64, i64* %PC.i963
  %4756 = add i64 %4755, 3
  store i64 %4756, i64* %PC.i963
  %4757 = inttoptr i64 %4754 to i32*
  %4758 = load i32, i32* %4757
  %4759 = zext i32 %4758 to i64
  store i64 %4759, i64* %RCX.i965, align 8
  store %struct.Memory* %loadMem_44ab15, %struct.Memory** %MEMORY
  %loadMem_44ab18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4761 = getelementptr inbounds %struct.GPR, %struct.GPR* %4760, i32 0, i32 33
  %4762 = getelementptr inbounds %struct.Reg, %struct.Reg* %4761, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %4762 to i64*
  %4763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4764 = getelementptr inbounds %struct.GPR, %struct.GPR* %4763, i32 0, i32 5
  %4765 = getelementptr inbounds %struct.Reg, %struct.Reg* %4764, i32 0, i32 0
  %RCX.i962 = bitcast %union.anon* %4765 to i64*
  %4766 = load i64, i64* %RCX.i962
  %4767 = load i64, i64* %PC.i961
  %4768 = add i64 %4767, 3
  store i64 %4768, i64* %PC.i961
  %4769 = trunc i64 %4766 to i32
  %4770 = add i32 1, %4769
  %4771 = zext i32 %4770 to i64
  store i64 %4771, i64* %RCX.i962, align 8
  %4772 = icmp ult i32 %4770, %4769
  %4773 = icmp ult i32 %4770, 1
  %4774 = or i1 %4772, %4773
  %4775 = zext i1 %4774 to i8
  %4776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4775, i8* %4776, align 1
  %4777 = and i32 %4770, 255
  %4778 = call i32 @llvm.ctpop.i32(i32 %4777)
  %4779 = trunc i32 %4778 to i8
  %4780 = and i8 %4779, 1
  %4781 = xor i8 %4780, 1
  %4782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4781, i8* %4782, align 1
  %4783 = xor i64 1, %4766
  %4784 = trunc i64 %4783 to i32
  %4785 = xor i32 %4784, %4770
  %4786 = lshr i32 %4785, 4
  %4787 = trunc i32 %4786 to i8
  %4788 = and i8 %4787, 1
  %4789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4788, i8* %4789, align 1
  %4790 = icmp eq i32 %4770, 0
  %4791 = zext i1 %4790 to i8
  %4792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4791, i8* %4792, align 1
  %4793 = lshr i32 %4770, 31
  %4794 = trunc i32 %4793 to i8
  %4795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4794, i8* %4795, align 1
  %4796 = lshr i32 %4769, 31
  %4797 = xor i32 %4793, %4796
  %4798 = add i32 %4797, %4793
  %4799 = icmp eq i32 %4798, 2
  %4800 = zext i1 %4799 to i8
  %4801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4800, i8* %4801, align 1
  store %struct.Memory* %loadMem_44ab18, %struct.Memory** %MEMORY
  %loadMem_44ab1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4803 = getelementptr inbounds %struct.GPR, %struct.GPR* %4802, i32 0, i32 33
  %4804 = getelementptr inbounds %struct.Reg, %struct.Reg* %4803, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %4804 to i64*
  %4805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4806 = getelementptr inbounds %struct.GPR, %struct.GPR* %4805, i32 0, i32 5
  %4807 = getelementptr inbounds %struct.Reg, %struct.Reg* %4806, i32 0, i32 0
  %ECX.i959 = bitcast %union.anon* %4807 to i32*
  %4808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4809 = getelementptr inbounds %struct.GPR, %struct.GPR* %4808, i32 0, i32 1
  %4810 = getelementptr inbounds %struct.Reg, %struct.Reg* %4809, i32 0, i32 0
  %RAX.i960 = bitcast %union.anon* %4810 to i64*
  %4811 = load i64, i64* %RAX.i960
  %4812 = add i64 %4811, 4
  %4813 = load i32, i32* %ECX.i959
  %4814 = zext i32 %4813 to i64
  %4815 = load i64, i64* %PC.i958
  %4816 = add i64 %4815, 3
  store i64 %4816, i64* %PC.i958
  %4817 = inttoptr i64 %4812 to i32*
  store i32 %4813, i32* %4817
  store %struct.Memory* %loadMem_44ab1b, %struct.Memory** %MEMORY
  %loadMem_44ab1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4819 = getelementptr inbounds %struct.GPR, %struct.GPR* %4818, i32 0, i32 33
  %4820 = getelementptr inbounds %struct.Reg, %struct.Reg* %4819, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %4820 to i64*
  %4821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4822 = getelementptr inbounds %struct.GPR, %struct.GPR* %4821, i32 0, i32 5
  %4823 = getelementptr inbounds %struct.Reg, %struct.Reg* %4822, i32 0, i32 0
  %RCX.i956 = bitcast %union.anon* %4823 to i64*
  %4824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4825 = getelementptr inbounds %struct.GPR, %struct.GPR* %4824, i32 0, i32 15
  %4826 = getelementptr inbounds %struct.Reg, %struct.Reg* %4825, i32 0, i32 0
  %RBP.i957 = bitcast %union.anon* %4826 to i64*
  %4827 = load i64, i64* %RBP.i957
  %4828 = sub i64 %4827, 12
  %4829 = load i64, i64* %PC.i955
  %4830 = add i64 %4829, 3
  store i64 %4830, i64* %PC.i955
  %4831 = inttoptr i64 %4828 to i32*
  %4832 = load i32, i32* %4831
  %4833 = zext i32 %4832 to i64
  store i64 %4833, i64* %RCX.i956, align 8
  store %struct.Memory* %loadMem_44ab1e, %struct.Memory** %MEMORY
  %loadMem_44ab21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4835 = getelementptr inbounds %struct.GPR, %struct.GPR* %4834, i32 0, i32 33
  %4836 = getelementptr inbounds %struct.Reg, %struct.Reg* %4835, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %4836 to i64*
  %4837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4838 = getelementptr inbounds %struct.GPR, %struct.GPR* %4837, i32 0, i32 5
  %4839 = getelementptr inbounds %struct.Reg, %struct.Reg* %4838, i32 0, i32 0
  %RCX.i953 = bitcast %union.anon* %4839 to i64*
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4841 = getelementptr inbounds %struct.GPR, %struct.GPR* %4840, i32 0, i32 15
  %4842 = getelementptr inbounds %struct.Reg, %struct.Reg* %4841, i32 0, i32 0
  %RBP.i954 = bitcast %union.anon* %4842 to i64*
  %4843 = load i64, i64* %RCX.i953
  %4844 = load i64, i64* %RBP.i954
  %4845 = sub i64 %4844, 40
  %4846 = load i64, i64* %PC.i952
  %4847 = add i64 %4846, 3
  store i64 %4847, i64* %PC.i952
  %4848 = trunc i64 %4843 to i32
  %4849 = inttoptr i64 %4845 to i32*
  %4850 = load i32, i32* %4849
  %4851 = add i32 %4850, %4848
  %4852 = zext i32 %4851 to i64
  store i64 %4852, i64* %RCX.i953, align 8
  %4853 = icmp ult i32 %4851, %4848
  %4854 = icmp ult i32 %4851, %4850
  %4855 = or i1 %4853, %4854
  %4856 = zext i1 %4855 to i8
  %4857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4856, i8* %4857, align 1
  %4858 = and i32 %4851, 255
  %4859 = call i32 @llvm.ctpop.i32(i32 %4858)
  %4860 = trunc i32 %4859 to i8
  %4861 = and i8 %4860, 1
  %4862 = xor i8 %4861, 1
  %4863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4862, i8* %4863, align 1
  %4864 = xor i32 %4850, %4848
  %4865 = xor i32 %4864, %4851
  %4866 = lshr i32 %4865, 4
  %4867 = trunc i32 %4866 to i8
  %4868 = and i8 %4867, 1
  %4869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4868, i8* %4869, align 1
  %4870 = icmp eq i32 %4851, 0
  %4871 = zext i1 %4870 to i8
  %4872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4871, i8* %4872, align 1
  %4873 = lshr i32 %4851, 31
  %4874 = trunc i32 %4873 to i8
  %4875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4874, i8* %4875, align 1
  %4876 = lshr i32 %4848, 31
  %4877 = lshr i32 %4850, 31
  %4878 = xor i32 %4873, %4876
  %4879 = xor i32 %4873, %4877
  %4880 = add i32 %4878, %4879
  %4881 = icmp eq i32 %4880, 2
  %4882 = zext i1 %4881 to i8
  %4883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4882, i8* %4883, align 1
  store %struct.Memory* %loadMem_44ab21, %struct.Memory** %MEMORY
  %loadMem_44ab24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4885 = getelementptr inbounds %struct.GPR, %struct.GPR* %4884, i32 0, i32 33
  %4886 = getelementptr inbounds %struct.Reg, %struct.Reg* %4885, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %4886 to i64*
  %4887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4888 = getelementptr inbounds %struct.GPR, %struct.GPR* %4887, i32 0, i32 5
  %4889 = getelementptr inbounds %struct.Reg, %struct.Reg* %4888, i32 0, i32 0
  %RCX.i951 = bitcast %union.anon* %4889 to i64*
  %4890 = load i64, i64* %RCX.i951
  %4891 = load i64, i64* %PC.i950
  %4892 = add i64 %4891, 2
  store i64 %4892, i64* %PC.i950
  %4893 = shl i64 %4890, 32
  %4894 = ashr i64 %4893, 33
  %4895 = trunc i64 %4890 to i8
  %4896 = and i8 %4895, 1
  %4897 = trunc i64 %4894 to i32
  %4898 = and i64 %4894, 4294967295
  store i64 %4898, i64* %RCX.i951, align 8
  %4899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4896, i8* %4899, align 1
  %4900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4901 = and i32 %4897, 255
  %4902 = call i32 @llvm.ctpop.i32(i32 %4901)
  %4903 = trunc i32 %4902 to i8
  %4904 = and i8 %4903, 1
  %4905 = xor i8 %4904, 1
  store i8 %4905, i8* %4900, align 1
  %4906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4906, align 1
  %4907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4908 = icmp eq i32 %4897, 0
  %4909 = zext i1 %4908 to i8
  store i8 %4909, i8* %4907, align 1
  %4910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4911 = lshr i32 %4897, 31
  %4912 = trunc i32 %4911 to i8
  store i8 %4912, i8* %4910, align 1
  %4913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4913, align 1
  store %struct.Memory* %loadMem_44ab24, %struct.Memory** %MEMORY
  %loadMem_44ab27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4915 = getelementptr inbounds %struct.GPR, %struct.GPR* %4914, i32 0, i32 33
  %4916 = getelementptr inbounds %struct.Reg, %struct.Reg* %4915, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %4916 to i64*
  %4917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4918 = getelementptr inbounds %struct.GPR, %struct.GPR* %4917, i32 0, i32 5
  %4919 = getelementptr inbounds %struct.Reg, %struct.Reg* %4918, i32 0, i32 0
  %ECX.i948 = bitcast %union.anon* %4919 to i32*
  %4920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4921 = getelementptr inbounds %struct.GPR, %struct.GPR* %4920, i32 0, i32 15
  %4922 = getelementptr inbounds %struct.Reg, %struct.Reg* %4921, i32 0, i32 0
  %RBP.i949 = bitcast %union.anon* %4922 to i64*
  %4923 = load i64, i64* %RBP.i949
  %4924 = sub i64 %4923, 44
  %4925 = load i32, i32* %ECX.i948
  %4926 = zext i32 %4925 to i64
  %4927 = load i64, i64* %PC.i947
  %4928 = add i64 %4927, 3
  store i64 %4928, i64* %PC.i947
  %4929 = inttoptr i64 %4924 to i32*
  store i32 %4925, i32* %4929
  store %struct.Memory* %loadMem_44ab27, %struct.Memory** %MEMORY
  br label %block_.L_44ab2a

block_.L_44ab2a:                                  ; preds = %block_.L_44ab11, %block_44ab00
  %loadMem_44ab2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4931 = getelementptr inbounds %struct.GPR, %struct.GPR* %4930, i32 0, i32 33
  %4932 = getelementptr inbounds %struct.Reg, %struct.Reg* %4931, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %4932 to i64*
  %4933 = load i64, i64* %PC.i946
  %4934 = add i64 %4933, 5
  %4935 = load i64, i64* %PC.i946
  %4936 = add i64 %4935, 5
  store i64 %4936, i64* %PC.i946
  %4937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4934, i64* %4937, align 8
  store %struct.Memory* %loadMem_44ab2a, %struct.Memory** %MEMORY
  br label %block_.L_44ab2f

block_.L_44ab2f:                                  ; preds = %block_.L_44ab2a, %block_44aacc
  %loadMem_44ab2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4939 = getelementptr inbounds %struct.GPR, %struct.GPR* %4938, i32 0, i32 33
  %4940 = getelementptr inbounds %struct.Reg, %struct.Reg* %4939, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %4940 to i64*
  %4941 = load i64, i64* %PC.i945
  %4942 = add i64 %4941, 5
  %4943 = load i64, i64* %PC.i945
  %4944 = add i64 %4943, 5
  store i64 %4944, i64* %PC.i945
  %4945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4942, i64* %4945, align 8
  store %struct.Memory* %loadMem_44ab2f, %struct.Memory** %MEMORY
  br label %block_.L_44ab34

block_.L_44ab34:                                  ; preds = %block_.L_44ab2f, %block_.L_44aa69
  %loadMem_44ab34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4947 = getelementptr inbounds %struct.GPR, %struct.GPR* %4946, i32 0, i32 33
  %4948 = getelementptr inbounds %struct.Reg, %struct.Reg* %4947, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %4948 to i64*
  %4949 = load i64, i64* %PC.i944
  %4950 = add i64 %4949, 5
  %4951 = load i64, i64* %PC.i944
  %4952 = add i64 %4951, 5
  store i64 %4952, i64* %PC.i944
  %4953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4950, i64* %4953, align 8
  store %struct.Memory* %loadMem_44ab34, %struct.Memory** %MEMORY
  br label %block_.L_44ab39

block_.L_44ab39:                                  ; preds = %block_.L_44ab34, %block_.L_44aa64
  %loadMem_44ab39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4955 = getelementptr inbounds %struct.GPR, %struct.GPR* %4954, i32 0, i32 33
  %4956 = getelementptr inbounds %struct.Reg, %struct.Reg* %4955, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %4956 to i64*
  %4957 = load i64, i64* %PC.i943
  %4958 = add i64 %4957, 422
  %4959 = load i64, i64* %PC.i943
  %4960 = add i64 %4959, 5
  store i64 %4960, i64* %PC.i943
  %4961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4958, i64* %4961, align 8
  store %struct.Memory* %loadMem_44ab39, %struct.Memory** %MEMORY
  br label %block_.L_44acdf

block_.L_44ab3e:                                  ; preds = %block_44a98c
  %loadMem_44ab3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4963 = getelementptr inbounds %struct.GPR, %struct.GPR* %4962, i32 0, i32 33
  %4964 = getelementptr inbounds %struct.Reg, %struct.Reg* %4963, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %4964 to i64*
  %4965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4966 = getelementptr inbounds %struct.GPR, %struct.GPR* %4965, i32 0, i32 1
  %4967 = getelementptr inbounds %struct.Reg, %struct.Reg* %4966, i32 0, i32 0
  %RAX.i941 = bitcast %union.anon* %4967 to i64*
  %4968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4969 = getelementptr inbounds %struct.GPR, %struct.GPR* %4968, i32 0, i32 15
  %4970 = getelementptr inbounds %struct.Reg, %struct.Reg* %4969, i32 0, i32 0
  %RBP.i942 = bitcast %union.anon* %4970 to i64*
  %4971 = load i64, i64* %RBP.i942
  %4972 = sub i64 %4971, 4
  %4973 = load i64, i64* %PC.i940
  %4974 = add i64 %4973, 3
  store i64 %4974, i64* %PC.i940
  %4975 = inttoptr i64 %4972 to i32*
  %4976 = load i32, i32* %4975
  %4977 = zext i32 %4976 to i64
  store i64 %4977, i64* %RAX.i941, align 8
  store %struct.Memory* %loadMem_44ab3e, %struct.Memory** %MEMORY
  %loadMem_44ab41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4979 = getelementptr inbounds %struct.GPR, %struct.GPR* %4978, i32 0, i32 33
  %4980 = getelementptr inbounds %struct.Reg, %struct.Reg* %4979, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %4980 to i64*
  %4981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4982 = getelementptr inbounds %struct.GPR, %struct.GPR* %4981, i32 0, i32 1
  %4983 = getelementptr inbounds %struct.Reg, %struct.Reg* %4982, i32 0, i32 0
  %RAX.i939 = bitcast %union.anon* %4983 to i64*
  %4984 = load i64, i64* %RAX.i939
  %4985 = load i64, i64* %PC.i938
  %4986 = add i64 %4985, 3
  store i64 %4986, i64* %PC.i938
  %4987 = and i64 1, %4984
  %4988 = trunc i64 %4987 to i32
  store i64 %4987, i64* %RAX.i939, align 8
  %4989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4989, align 1
  %4990 = and i32 %4988, 255
  %4991 = call i32 @llvm.ctpop.i32(i32 %4990)
  %4992 = trunc i32 %4991 to i8
  %4993 = and i8 %4992, 1
  %4994 = xor i8 %4993, 1
  %4995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4994, i8* %4995, align 1
  %4996 = icmp eq i32 %4988, 0
  %4997 = zext i1 %4996 to i8
  %4998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4997, i8* %4998, align 1
  %4999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4999, align 1
  %5000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5000, align 1
  %5001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5001, align 1
  store %struct.Memory* %loadMem_44ab41, %struct.Memory** %MEMORY
  %loadMem_44ab44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5003 = getelementptr inbounds %struct.GPR, %struct.GPR* %5002, i32 0, i32 33
  %5004 = getelementptr inbounds %struct.Reg, %struct.Reg* %5003, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %5004 to i64*
  %5005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5006 = getelementptr inbounds %struct.GPR, %struct.GPR* %5005, i32 0, i32 1
  %5007 = getelementptr inbounds %struct.Reg, %struct.Reg* %5006, i32 0, i32 0
  %EAX.i937 = bitcast %union.anon* %5007 to i32*
  %5008 = load i32, i32* %EAX.i937
  %5009 = zext i32 %5008 to i64
  %5010 = load i64, i64* %PC.i936
  %5011 = add i64 %5010, 3
  store i64 %5011, i64* %PC.i936
  %5012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5012, align 1
  %5013 = and i32 %5008, 255
  %5014 = call i32 @llvm.ctpop.i32(i32 %5013)
  %5015 = trunc i32 %5014 to i8
  %5016 = and i8 %5015, 1
  %5017 = xor i8 %5016, 1
  %5018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5017, i8* %5018, align 1
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5019, align 1
  %5020 = icmp eq i32 %5008, 0
  %5021 = zext i1 %5020 to i8
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5021, i8* %5022, align 1
  %5023 = lshr i32 %5008, 31
  %5024 = trunc i32 %5023 to i8
  %5025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5024, i8* %5025, align 1
  %5026 = lshr i32 %5008, 31
  %5027 = xor i32 %5023, %5026
  %5028 = add i32 %5027, %5026
  %5029 = icmp eq i32 %5028, 2
  %5030 = zext i1 %5029 to i8
  %5031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5030, i8* %5031, align 1
  store %struct.Memory* %loadMem_44ab44, %struct.Memory** %MEMORY
  %loadMem_44ab47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5033 = getelementptr inbounds %struct.GPR, %struct.GPR* %5032, i32 0, i32 33
  %5034 = getelementptr inbounds %struct.Reg, %struct.Reg* %5033, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %5034 to i64*
  %5035 = load i64, i64* %PC.i935
  %5036 = add i64 %5035, 195
  %5037 = load i64, i64* %PC.i935
  %5038 = add i64 %5037, 6
  %5039 = load i64, i64* %PC.i935
  %5040 = add i64 %5039, 6
  store i64 %5040, i64* %PC.i935
  %5041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5042 = load i8, i8* %5041, align 1
  %5043 = icmp eq i8 %5042, 0
  %5044 = zext i1 %5043 to i8
  store i8 %5044, i8* %BRANCH_TAKEN, align 1
  %5045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5046 = select i1 %5043, i64 %5036, i64 %5038
  store i64 %5046, i64* %5045, align 8
  store %struct.Memory* %loadMem_44ab47, %struct.Memory** %MEMORY
  %loadBr_44ab47 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ab47 = icmp eq i8 %loadBr_44ab47, 1
  br i1 %cmpBr_44ab47, label %block_.L_44ac0a, label %block_44ab4d

block_44ab4d:                                     ; preds = %block_.L_44ab3e
  %loadMem_44ab4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5048 = getelementptr inbounds %struct.GPR, %struct.GPR* %5047, i32 0, i32 33
  %5049 = getelementptr inbounds %struct.Reg, %struct.Reg* %5048, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %5049 to i64*
  %5050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5051 = getelementptr inbounds %struct.GPR, %struct.GPR* %5050, i32 0, i32 1
  %5052 = getelementptr inbounds %struct.Reg, %struct.Reg* %5051, i32 0, i32 0
  %RAX.i933 = bitcast %union.anon* %5052 to i64*
  %5053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5054 = getelementptr inbounds %struct.GPR, %struct.GPR* %5053, i32 0, i32 15
  %5055 = getelementptr inbounds %struct.Reg, %struct.Reg* %5054, i32 0, i32 0
  %RBP.i934 = bitcast %union.anon* %5055 to i64*
  %5056 = load i64, i64* %RBP.i934
  %5057 = sub i64 %5056, 32
  %5058 = load i64, i64* %PC.i932
  %5059 = add i64 %5058, 4
  store i64 %5059, i64* %PC.i932
  %5060 = inttoptr i64 %5057 to i64*
  %5061 = load i64, i64* %5060
  store i64 %5061, i64* %RAX.i933, align 8
  store %struct.Memory* %loadMem_44ab4d, %struct.Memory** %MEMORY
  %loadMem_44ab51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5063 = getelementptr inbounds %struct.GPR, %struct.GPR* %5062, i32 0, i32 33
  %5064 = getelementptr inbounds %struct.Reg, %struct.Reg* %5063, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %5064 to i64*
  %5065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5066 = getelementptr inbounds %struct.GPR, %struct.GPR* %5065, i32 0, i32 1
  %5067 = getelementptr inbounds %struct.Reg, %struct.Reg* %5066, i32 0, i32 0
  %RAX.i930 = bitcast %union.anon* %5067 to i64*
  %5068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5069 = getelementptr inbounds %struct.GPR, %struct.GPR* %5068, i32 0, i32 5
  %5070 = getelementptr inbounds %struct.Reg, %struct.Reg* %5069, i32 0, i32 0
  %RCX.i931 = bitcast %union.anon* %5070 to i64*
  %5071 = load i64, i64* %RAX.i930
  %5072 = add i64 %5071, 536
  %5073 = load i64, i64* %PC.i929
  %5074 = add i64 %5073, 6
  store i64 %5074, i64* %PC.i929
  %5075 = inttoptr i64 %5072 to i32*
  %5076 = load i32, i32* %5075
  %5077 = zext i32 %5076 to i64
  store i64 %5077, i64* %RCX.i931, align 8
  store %struct.Memory* %loadMem_44ab51, %struct.Memory** %MEMORY
  %loadMem_44ab57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5079 = getelementptr inbounds %struct.GPR, %struct.GPR* %5078, i32 0, i32 33
  %5080 = getelementptr inbounds %struct.Reg, %struct.Reg* %5079, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %5080 to i64*
  %5081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5082 = getelementptr inbounds %struct.GPR, %struct.GPR* %5081, i32 0, i32 1
  %5083 = getelementptr inbounds %struct.Reg, %struct.Reg* %5082, i32 0, i32 0
  %RAX.i927 = bitcast %union.anon* %5083 to i64*
  %5084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5085 = getelementptr inbounds %struct.GPR, %struct.GPR* %5084, i32 0, i32 15
  %5086 = getelementptr inbounds %struct.Reg, %struct.Reg* %5085, i32 0, i32 0
  %RBP.i928 = bitcast %union.anon* %5086 to i64*
  %5087 = load i64, i64* %RBP.i928
  %5088 = sub i64 %5087, 24
  %5089 = load i64, i64* %PC.i926
  %5090 = add i64 %5089, 4
  store i64 %5090, i64* %PC.i926
  %5091 = inttoptr i64 %5088 to i64*
  %5092 = load i64, i64* %5091
  store i64 %5092, i64* %RAX.i927, align 8
  store %struct.Memory* %loadMem_44ab57, %struct.Memory** %MEMORY
  %loadMem_44ab5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5094 = getelementptr inbounds %struct.GPR, %struct.GPR* %5093, i32 0, i32 33
  %5095 = getelementptr inbounds %struct.Reg, %struct.Reg* %5094, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %5095 to i64*
  %5096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5097 = getelementptr inbounds %struct.GPR, %struct.GPR* %5096, i32 0, i32 5
  %5098 = getelementptr inbounds %struct.Reg, %struct.Reg* %5097, i32 0, i32 0
  %ECX.i924 = bitcast %union.anon* %5098 to i32*
  %5099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5100 = getelementptr inbounds %struct.GPR, %struct.GPR* %5099, i32 0, i32 1
  %5101 = getelementptr inbounds %struct.Reg, %struct.Reg* %5100, i32 0, i32 0
  %RAX.i925 = bitcast %union.anon* %5101 to i64*
  %5102 = load i64, i64* %RAX.i925
  %5103 = add i64 %5102, 4
  %5104 = load i32, i32* %ECX.i924
  %5105 = zext i32 %5104 to i64
  %5106 = load i64, i64* %PC.i923
  %5107 = add i64 %5106, 3
  store i64 %5107, i64* %PC.i923
  %5108 = inttoptr i64 %5103 to i32*
  store i32 %5104, i32* %5108
  store %struct.Memory* %loadMem_44ab5b, %struct.Memory** %MEMORY
  %loadMem_44ab5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5110 = getelementptr inbounds %struct.GPR, %struct.GPR* %5109, i32 0, i32 33
  %5111 = getelementptr inbounds %struct.Reg, %struct.Reg* %5110, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %5111 to i64*
  %5112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5113 = getelementptr inbounds %struct.GPR, %struct.GPR* %5112, i32 0, i32 1
  %5114 = getelementptr inbounds %struct.Reg, %struct.Reg* %5113, i32 0, i32 0
  %RAX.i921 = bitcast %union.anon* %5114 to i64*
  %5115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5116 = getelementptr inbounds %struct.GPR, %struct.GPR* %5115, i32 0, i32 15
  %5117 = getelementptr inbounds %struct.Reg, %struct.Reg* %5116, i32 0, i32 0
  %RBP.i922 = bitcast %union.anon* %5117 to i64*
  %5118 = load i64, i64* %RBP.i922
  %5119 = sub i64 %5118, 32
  %5120 = load i64, i64* %PC.i920
  %5121 = add i64 %5120, 4
  store i64 %5121, i64* %PC.i920
  %5122 = inttoptr i64 %5119 to i64*
  %5123 = load i64, i64* %5122
  store i64 %5123, i64* %RAX.i921, align 8
  store %struct.Memory* %loadMem_44ab5e, %struct.Memory** %MEMORY
  %loadMem_44ab62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5125 = getelementptr inbounds %struct.GPR, %struct.GPR* %5124, i32 0, i32 33
  %5126 = getelementptr inbounds %struct.Reg, %struct.Reg* %5125, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %5126 to i64*
  %5127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5128 = getelementptr inbounds %struct.GPR, %struct.GPR* %5127, i32 0, i32 1
  %5129 = getelementptr inbounds %struct.Reg, %struct.Reg* %5128, i32 0, i32 0
  %RAX.i918 = bitcast %union.anon* %5129 to i64*
  %5130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5131 = getelementptr inbounds %struct.GPR, %struct.GPR* %5130, i32 0, i32 5
  %5132 = getelementptr inbounds %struct.Reg, %struct.Reg* %5131, i32 0, i32 0
  %RCX.i919 = bitcast %union.anon* %5132 to i64*
  %5133 = load i64, i64* %RAX.i918
  %5134 = add i64 %5133, 552
  %5135 = load i64, i64* %PC.i917
  %5136 = add i64 %5135, 6
  store i64 %5136, i64* %PC.i917
  %5137 = inttoptr i64 %5134 to i32*
  %5138 = load i32, i32* %5137
  %5139 = zext i32 %5138 to i64
  store i64 %5139, i64* %RCX.i919, align 8
  store %struct.Memory* %loadMem_44ab62, %struct.Memory** %MEMORY
  %loadMem_44ab68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5141 = getelementptr inbounds %struct.GPR, %struct.GPR* %5140, i32 0, i32 33
  %5142 = getelementptr inbounds %struct.Reg, %struct.Reg* %5141, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %5142 to i64*
  %5143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5144 = getelementptr inbounds %struct.GPR, %struct.GPR* %5143, i32 0, i32 1
  %5145 = getelementptr inbounds %struct.Reg, %struct.Reg* %5144, i32 0, i32 0
  %RAX.i915 = bitcast %union.anon* %5145 to i64*
  %5146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5147 = getelementptr inbounds %struct.GPR, %struct.GPR* %5146, i32 0, i32 15
  %5148 = getelementptr inbounds %struct.Reg, %struct.Reg* %5147, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %5148 to i64*
  %5149 = load i64, i64* %RBP.i916
  %5150 = sub i64 %5149, 24
  %5151 = load i64, i64* %PC.i914
  %5152 = add i64 %5151, 4
  store i64 %5152, i64* %PC.i914
  %5153 = inttoptr i64 %5150 to i64*
  %5154 = load i64, i64* %5153
  store i64 %5154, i64* %RAX.i915, align 8
  store %struct.Memory* %loadMem_44ab68, %struct.Memory** %MEMORY
  %loadMem_44ab6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5156 = getelementptr inbounds %struct.GPR, %struct.GPR* %5155, i32 0, i32 33
  %5157 = getelementptr inbounds %struct.Reg, %struct.Reg* %5156, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %5157 to i64*
  %5158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5159 = getelementptr inbounds %struct.GPR, %struct.GPR* %5158, i32 0, i32 5
  %5160 = getelementptr inbounds %struct.Reg, %struct.Reg* %5159, i32 0, i32 0
  %ECX.i912 = bitcast %union.anon* %5160 to i32*
  %5161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5162 = getelementptr inbounds %struct.GPR, %struct.GPR* %5161, i32 0, i32 1
  %5163 = getelementptr inbounds %struct.Reg, %struct.Reg* %5162, i32 0, i32 0
  %RAX.i913 = bitcast %union.anon* %5163 to i64*
  %5164 = load i64, i64* %RAX.i913
  %5165 = load i32, i32* %ECX.i912
  %5166 = zext i32 %5165 to i64
  %5167 = load i64, i64* %PC.i911
  %5168 = add i64 %5167, 2
  store i64 %5168, i64* %PC.i911
  %5169 = inttoptr i64 %5164 to i32*
  store i32 %5165, i32* %5169
  store %struct.Memory* %loadMem_44ab6c, %struct.Memory** %MEMORY
  %loadMem_44ab6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5171 = getelementptr inbounds %struct.GPR, %struct.GPR* %5170, i32 0, i32 33
  %5172 = getelementptr inbounds %struct.Reg, %struct.Reg* %5171, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %5172 to i64*
  %5173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5174 = getelementptr inbounds %struct.GPR, %struct.GPR* %5173, i32 0, i32 1
  %5175 = getelementptr inbounds %struct.Reg, %struct.Reg* %5174, i32 0, i32 0
  %RAX.i909 = bitcast %union.anon* %5175 to i64*
  %5176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5177 = getelementptr inbounds %struct.GPR, %struct.GPR* %5176, i32 0, i32 15
  %5178 = getelementptr inbounds %struct.Reg, %struct.Reg* %5177, i32 0, i32 0
  %RBP.i910 = bitcast %union.anon* %5178 to i64*
  %5179 = load i64, i64* %RBP.i910
  %5180 = sub i64 %5179, 32
  %5181 = load i64, i64* %PC.i908
  %5182 = add i64 %5181, 4
  store i64 %5182, i64* %PC.i908
  %5183 = inttoptr i64 %5180 to i64*
  %5184 = load i64, i64* %5183
  store i64 %5184, i64* %RAX.i909, align 8
  store %struct.Memory* %loadMem_44ab6e, %struct.Memory** %MEMORY
  %loadMem_44ab72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5186 = getelementptr inbounds %struct.GPR, %struct.GPR* %5185, i32 0, i32 33
  %5187 = getelementptr inbounds %struct.Reg, %struct.Reg* %5186, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %5187 to i64*
  %5188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5189 = getelementptr inbounds %struct.GPR, %struct.GPR* %5188, i32 0, i32 1
  %5190 = getelementptr inbounds %struct.Reg, %struct.Reg* %5189, i32 0, i32 0
  %RAX.i907 = bitcast %union.anon* %5190 to i64*
  %5191 = load i64, i64* %RAX.i907
  %5192 = add i64 %5191, 552
  %5193 = load i64, i64* %PC.i906
  %5194 = add i64 %5193, 7
  store i64 %5194, i64* %PC.i906
  %5195 = inttoptr i64 %5192 to i32*
  %5196 = load i32, i32* %5195
  %5197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5197, align 1
  %5198 = and i32 %5196, 255
  %5199 = call i32 @llvm.ctpop.i32(i32 %5198)
  %5200 = trunc i32 %5199 to i8
  %5201 = and i8 %5200, 1
  %5202 = xor i8 %5201, 1
  %5203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5202, i8* %5203, align 1
  %5204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5204, align 1
  %5205 = icmp eq i32 %5196, 0
  %5206 = zext i1 %5205 to i8
  %5207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5206, i8* %5207, align 1
  %5208 = lshr i32 %5196, 31
  %5209 = trunc i32 %5208 to i8
  %5210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5209, i8* %5210, align 1
  %5211 = lshr i32 %5196, 31
  %5212 = xor i32 %5208, %5211
  %5213 = add i32 %5212, %5211
  %5214 = icmp eq i32 %5213, 2
  %5215 = zext i1 %5214 to i8
  %5216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5215, i8* %5216, align 1
  store %struct.Memory* %loadMem_44ab72, %struct.Memory** %MEMORY
  %loadMem_44ab79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5218 = getelementptr inbounds %struct.GPR, %struct.GPR* %5217, i32 0, i32 33
  %5219 = getelementptr inbounds %struct.Reg, %struct.Reg* %5218, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %5219 to i64*
  %5220 = load i64, i64* %PC.i905
  %5221 = add i64 %5220, 140
  %5222 = load i64, i64* %PC.i905
  %5223 = add i64 %5222, 6
  %5224 = load i64, i64* %PC.i905
  %5225 = add i64 %5224, 6
  store i64 %5225, i64* %PC.i905
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5227 = load i8, i8* %5226, align 1
  store i8 %5227, i8* %BRANCH_TAKEN, align 1
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5229 = icmp ne i8 %5227, 0
  %5230 = select i1 %5229, i64 %5221, i64 %5223
  store i64 %5230, i64* %5228, align 8
  store %struct.Memory* %loadMem_44ab79, %struct.Memory** %MEMORY
  %loadBr_44ab79 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ab79 = icmp eq i8 %loadBr_44ab79, 1
  br i1 %cmpBr_44ab79, label %block_.L_44ac05, label %block_44ab7f

block_44ab7f:                                     ; preds = %block_44ab4d
  %loadMem_44ab7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5232 = getelementptr inbounds %struct.GPR, %struct.GPR* %5231, i32 0, i32 33
  %5233 = getelementptr inbounds %struct.Reg, %struct.Reg* %5232, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %5233 to i64*
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5235 = getelementptr inbounds %struct.GPR, %struct.GPR* %5234, i32 0, i32 1
  %5236 = getelementptr inbounds %struct.Reg, %struct.Reg* %5235, i32 0, i32 0
  %RAX.i904 = bitcast %union.anon* %5236 to i64*
  %5237 = load i64, i64* %PC.i903
  %5238 = add i64 %5237, 8
  store i64 %5238, i64* %PC.i903
  %5239 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5239, i64* %RAX.i904, align 8
  store %struct.Memory* %loadMem_44ab7f, %struct.Memory** %MEMORY
  %loadMem_44ab87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5241 = getelementptr inbounds %struct.GPR, %struct.GPR* %5240, i32 0, i32 33
  %5242 = getelementptr inbounds %struct.Reg, %struct.Reg* %5241, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %5242 to i64*
  %5243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5244 = getelementptr inbounds %struct.GPR, %struct.GPR* %5243, i32 0, i32 1
  %5245 = getelementptr inbounds %struct.Reg, %struct.Reg* %5244, i32 0, i32 0
  %RAX.i902 = bitcast %union.anon* %5245 to i64*
  %5246 = load i64, i64* %RAX.i902
  %5247 = add i64 %5246, 14168
  %5248 = load i64, i64* %PC.i901
  %5249 = add i64 %5248, 7
  store i64 %5249, i64* %PC.i901
  %5250 = inttoptr i64 %5247 to i64*
  %5251 = load i64, i64* %5250
  store i64 %5251, i64* %RAX.i902, align 8
  store %struct.Memory* %loadMem_44ab87, %struct.Memory** %MEMORY
  %loadMem_44ab8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5253 = getelementptr inbounds %struct.GPR, %struct.GPR* %5252, i32 0, i32 33
  %5254 = getelementptr inbounds %struct.Reg, %struct.Reg* %5253, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %5254 to i64*
  %5255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5256 = getelementptr inbounds %struct.GPR, %struct.GPR* %5255, i32 0, i32 5
  %5257 = getelementptr inbounds %struct.Reg, %struct.Reg* %5256, i32 0, i32 0
  %RCX.i899 = bitcast %union.anon* %5257 to i64*
  %5258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5259 = getelementptr inbounds %struct.GPR, %struct.GPR* %5258, i32 0, i32 15
  %5260 = getelementptr inbounds %struct.Reg, %struct.Reg* %5259, i32 0, i32 0
  %RBP.i900 = bitcast %union.anon* %5260 to i64*
  %5261 = load i64, i64* %RBP.i900
  %5262 = sub i64 %5261, 32
  %5263 = load i64, i64* %PC.i898
  %5264 = add i64 %5263, 4
  store i64 %5264, i64* %PC.i898
  %5265 = inttoptr i64 %5262 to i64*
  %5266 = load i64, i64* %5265
  store i64 %5266, i64* %RCX.i899, align 8
  store %struct.Memory* %loadMem_44ab8e, %struct.Memory** %MEMORY
  %loadMem_44ab92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5268 = getelementptr inbounds %struct.GPR, %struct.GPR* %5267, i32 0, i32 33
  %5269 = getelementptr inbounds %struct.Reg, %struct.Reg* %5268, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %5269 to i64*
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5271 = getelementptr inbounds %struct.GPR, %struct.GPR* %5270, i32 0, i32 5
  %5272 = getelementptr inbounds %struct.Reg, %struct.Reg* %5271, i32 0, i32 0
  %RCX.i897 = bitcast %union.anon* %5272 to i64*
  %5273 = load i64, i64* %RCX.i897
  %5274 = add i64 %5273, 536
  %5275 = load i64, i64* %PC.i896
  %5276 = add i64 %5275, 7
  store i64 %5276, i64* %PC.i896
  %5277 = inttoptr i64 %5274 to i32*
  %5278 = load i32, i32* %5277
  %5279 = sext i32 %5278 to i64
  store i64 %5279, i64* %RCX.i897, align 8
  store %struct.Memory* %loadMem_44ab92, %struct.Memory** %MEMORY
  %loadMem_44ab99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5281 = getelementptr inbounds %struct.GPR, %struct.GPR* %5280, i32 0, i32 33
  %5282 = getelementptr inbounds %struct.Reg, %struct.Reg* %5281, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %5282 to i64*
  %5283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5284 = getelementptr inbounds %struct.GPR, %struct.GPR* %5283, i32 0, i32 5
  %5285 = getelementptr inbounds %struct.Reg, %struct.Reg* %5284, i32 0, i32 0
  %RCX.i895 = bitcast %union.anon* %5285 to i64*
  %5286 = load i64, i64* %RCX.i895
  %5287 = load i64, i64* %PC.i894
  %5288 = add i64 %5287, 7
  store i64 %5288, i64* %PC.i894
  %5289 = sext i64 %5286 to i128
  %5290 = and i128 %5289, -18446744073709551616
  %5291 = zext i64 %5286 to i128
  %5292 = or i128 %5290, %5291
  %5293 = mul i128 632, %5292
  %5294 = trunc i128 %5293 to i64
  store i64 %5294, i64* %RCX.i895, align 8
  %5295 = sext i64 %5294 to i128
  %5296 = icmp ne i128 %5295, %5293
  %5297 = zext i1 %5296 to i8
  %5298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5297, i8* %5298, align 1
  %5299 = trunc i128 %5293 to i32
  %5300 = and i32 %5299, 255
  %5301 = call i32 @llvm.ctpop.i32(i32 %5300)
  %5302 = trunc i32 %5301 to i8
  %5303 = and i8 %5302, 1
  %5304 = xor i8 %5303, 1
  %5305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5304, i8* %5305, align 1
  %5306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5306, align 1
  %5307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5307, align 1
  %5308 = lshr i64 %5294, 63
  %5309 = trunc i64 %5308 to i8
  %5310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5309, i8* %5310, align 1
  %5311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5297, i8* %5311, align 1
  store %struct.Memory* %loadMem_44ab99, %struct.Memory** %MEMORY
  %loadMem_44aba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5313 = getelementptr inbounds %struct.GPR, %struct.GPR* %5312, i32 0, i32 33
  %5314 = getelementptr inbounds %struct.Reg, %struct.Reg* %5313, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %5314 to i64*
  %5315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5316 = getelementptr inbounds %struct.GPR, %struct.GPR* %5315, i32 0, i32 1
  %5317 = getelementptr inbounds %struct.Reg, %struct.Reg* %5316, i32 0, i32 0
  %RAX.i892 = bitcast %union.anon* %5317 to i64*
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5319 = getelementptr inbounds %struct.GPR, %struct.GPR* %5318, i32 0, i32 5
  %5320 = getelementptr inbounds %struct.Reg, %struct.Reg* %5319, i32 0, i32 0
  %RCX.i893 = bitcast %union.anon* %5320 to i64*
  %5321 = load i64, i64* %RAX.i892
  %5322 = load i64, i64* %RCX.i893
  %5323 = load i64, i64* %PC.i891
  %5324 = add i64 %5323, 3
  store i64 %5324, i64* %PC.i891
  %5325 = add i64 %5322, %5321
  store i64 %5325, i64* %RAX.i892, align 8
  %5326 = icmp ult i64 %5325, %5321
  %5327 = icmp ult i64 %5325, %5322
  %5328 = or i1 %5326, %5327
  %5329 = zext i1 %5328 to i8
  %5330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5329, i8* %5330, align 1
  %5331 = trunc i64 %5325 to i32
  %5332 = and i32 %5331, 255
  %5333 = call i32 @llvm.ctpop.i32(i32 %5332)
  %5334 = trunc i32 %5333 to i8
  %5335 = and i8 %5334, 1
  %5336 = xor i8 %5335, 1
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5336, i8* %5337, align 1
  %5338 = xor i64 %5322, %5321
  %5339 = xor i64 %5338, %5325
  %5340 = lshr i64 %5339, 4
  %5341 = trunc i64 %5340 to i8
  %5342 = and i8 %5341, 1
  %5343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5342, i8* %5343, align 1
  %5344 = icmp eq i64 %5325, 0
  %5345 = zext i1 %5344 to i8
  %5346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5345, i8* %5346, align 1
  %5347 = lshr i64 %5325, 63
  %5348 = trunc i64 %5347 to i8
  %5349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5348, i8* %5349, align 1
  %5350 = lshr i64 %5321, 63
  %5351 = lshr i64 %5322, 63
  %5352 = xor i64 %5347, %5350
  %5353 = xor i64 %5347, %5351
  %5354 = add i64 %5352, %5353
  %5355 = icmp eq i64 %5354, 2
  %5356 = zext i1 %5355 to i8
  %5357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5356, i8* %5357, align 1
  store %struct.Memory* %loadMem_44aba0, %struct.Memory** %MEMORY
  %loadMem_44aba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5359 = getelementptr inbounds %struct.GPR, %struct.GPR* %5358, i32 0, i32 33
  %5360 = getelementptr inbounds %struct.Reg, %struct.Reg* %5359, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %5360 to i64*
  %5361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5362 = getelementptr inbounds %struct.GPR, %struct.GPR* %5361, i32 0, i32 1
  %5363 = getelementptr inbounds %struct.Reg, %struct.Reg* %5362, i32 0, i32 0
  %RAX.i890 = bitcast %union.anon* %5363 to i64*
  %5364 = load i64, i64* %RAX.i890
  %5365 = add i64 %5364, 532
  %5366 = load i64, i64* %PC.i889
  %5367 = add i64 %5366, 7
  store i64 %5367, i64* %PC.i889
  %5368 = inttoptr i64 %5365 to i32*
  %5369 = load i32, i32* %5368
  %5370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5370, align 1
  %5371 = and i32 %5369, 255
  %5372 = call i32 @llvm.ctpop.i32(i32 %5371)
  %5373 = trunc i32 %5372 to i8
  %5374 = and i8 %5373, 1
  %5375 = xor i8 %5374, 1
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5375, i8* %5376, align 1
  %5377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5377, align 1
  %5378 = icmp eq i32 %5369, 0
  %5379 = zext i1 %5378 to i8
  %5380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5379, i8* %5380, align 1
  %5381 = lshr i32 %5369, 31
  %5382 = trunc i32 %5381 to i8
  %5383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5382, i8* %5383, align 1
  %5384 = lshr i32 %5369, 31
  %5385 = xor i32 %5381, %5384
  %5386 = add i32 %5385, %5384
  %5387 = icmp eq i32 %5386, 2
  %5388 = zext i1 %5387 to i8
  %5389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5388, i8* %5389, align 1
  store %struct.Memory* %loadMem_44aba3, %struct.Memory** %MEMORY
  %loadMem_44abaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5391 = getelementptr inbounds %struct.GPR, %struct.GPR* %5390, i32 0, i32 33
  %5392 = getelementptr inbounds %struct.Reg, %struct.Reg* %5391, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %5392 to i64*
  %5393 = load i64, i64* %PC.i888
  %5394 = add i64 %5393, 80
  %5395 = load i64, i64* %PC.i888
  %5396 = add i64 %5395, 6
  %5397 = load i64, i64* %PC.i888
  %5398 = add i64 %5397, 6
  store i64 %5398, i64* %PC.i888
  %5399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5400 = load i8, i8* %5399, align 1
  %5401 = icmp eq i8 %5400, 0
  %5402 = zext i1 %5401 to i8
  store i8 %5402, i8* %BRANCH_TAKEN, align 1
  %5403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5404 = select i1 %5401, i64 %5394, i64 %5396
  store i64 %5404, i64* %5403, align 8
  store %struct.Memory* %loadMem_44abaa, %struct.Memory** %MEMORY
  %loadBr_44abaa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44abaa = icmp eq i8 %loadBr_44abaa, 1
  br i1 %cmpBr_44abaa, label %block_.L_44abfa, label %block_44abb0

block_44abb0:                                     ; preds = %block_44ab7f
  %loadMem_44abb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5406 = getelementptr inbounds %struct.GPR, %struct.GPR* %5405, i32 0, i32 33
  %5407 = getelementptr inbounds %struct.Reg, %struct.Reg* %5406, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %5407 to i64*
  %5408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5409 = getelementptr inbounds %struct.GPR, %struct.GPR* %5408, i32 0, i32 1
  %5410 = getelementptr inbounds %struct.Reg, %struct.Reg* %5409, i32 0, i32 0
  %RAX.i887 = bitcast %union.anon* %5410 to i64*
  %5411 = load i64, i64* %PC.i886
  %5412 = add i64 %5411, 5
  store i64 %5412, i64* %PC.i886
  store i64 2, i64* %RAX.i887, align 8
  store %struct.Memory* %loadMem_44abb0, %struct.Memory** %MEMORY
  %loadMem_44abb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5414 = getelementptr inbounds %struct.GPR, %struct.GPR* %5413, i32 0, i32 33
  %5415 = getelementptr inbounds %struct.Reg, %struct.Reg* %5414, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %5415 to i64*
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5417 = getelementptr inbounds %struct.GPR, %struct.GPR* %5416, i32 0, i32 5
  %5418 = getelementptr inbounds %struct.Reg, %struct.Reg* %5417, i32 0, i32 0
  %RCX.i884 = bitcast %union.anon* %5418 to i64*
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5420 = getelementptr inbounds %struct.GPR, %struct.GPR* %5419, i32 0, i32 15
  %5421 = getelementptr inbounds %struct.Reg, %struct.Reg* %5420, i32 0, i32 0
  %RBP.i885 = bitcast %union.anon* %5421 to i64*
  %5422 = load i64, i64* %RBP.i885
  %5423 = sub i64 %5422, 12
  %5424 = load i64, i64* %PC.i883
  %5425 = add i64 %5424, 3
  store i64 %5425, i64* %PC.i883
  %5426 = inttoptr i64 %5423 to i32*
  %5427 = load i32, i32* %5426
  %5428 = zext i32 %5427 to i64
  store i64 %5428, i64* %RCX.i884, align 8
  store %struct.Memory* %loadMem_44abb5, %struct.Memory** %MEMORY
  %loadMem_44abb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5430 = getelementptr inbounds %struct.GPR, %struct.GPR* %5429, i32 0, i32 33
  %5431 = getelementptr inbounds %struct.Reg, %struct.Reg* %5430, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %5431 to i64*
  %5432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5433 = getelementptr inbounds %struct.GPR, %struct.GPR* %5432, i32 0, i32 7
  %5434 = getelementptr inbounds %struct.Reg, %struct.Reg* %5433, i32 0, i32 0
  %RDX.i881 = bitcast %union.anon* %5434 to i64*
  %5435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5436 = getelementptr inbounds %struct.GPR, %struct.GPR* %5435, i32 0, i32 15
  %5437 = getelementptr inbounds %struct.Reg, %struct.Reg* %5436, i32 0, i32 0
  %RBP.i882 = bitcast %union.anon* %5437 to i64*
  %5438 = load i64, i64* %RBP.i882
  %5439 = sub i64 %5438, 40
  %5440 = load i64, i64* %PC.i880
  %5441 = add i64 %5440, 3
  store i64 %5441, i64* %PC.i880
  %5442 = inttoptr i64 %5439 to i32*
  %5443 = load i32, i32* %5442
  %5444 = zext i32 %5443 to i64
  store i64 %5444, i64* %RDX.i881, align 8
  store %struct.Memory* %loadMem_44abb8, %struct.Memory** %MEMORY
  %loadMem_44abbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5446 = getelementptr inbounds %struct.GPR, %struct.GPR* %5445, i32 0, i32 33
  %5447 = getelementptr inbounds %struct.Reg, %struct.Reg* %5446, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %5447 to i64*
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5449 = getelementptr inbounds %struct.GPR, %struct.GPR* %5448, i32 0, i32 1
  %5450 = getelementptr inbounds %struct.Reg, %struct.Reg* %5449, i32 0, i32 0
  %EAX.i878 = bitcast %union.anon* %5450 to i32*
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5452 = getelementptr inbounds %struct.GPR, %struct.GPR* %5451, i32 0, i32 15
  %5453 = getelementptr inbounds %struct.Reg, %struct.Reg* %5452, i32 0, i32 0
  %RBP.i879 = bitcast %union.anon* %5453 to i64*
  %5454 = load i64, i64* %RBP.i879
  %5455 = sub i64 %5454, 56
  %5456 = load i32, i32* %EAX.i878
  %5457 = zext i32 %5456 to i64
  %5458 = load i64, i64* %PC.i877
  %5459 = add i64 %5458, 3
  store i64 %5459, i64* %PC.i877
  %5460 = inttoptr i64 %5455 to i32*
  store i32 %5456, i32* %5460
  store %struct.Memory* %loadMem_44abbb, %struct.Memory** %MEMORY
  %loadMem_44abbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5462 = getelementptr inbounds %struct.GPR, %struct.GPR* %5461, i32 0, i32 33
  %5463 = getelementptr inbounds %struct.Reg, %struct.Reg* %5462, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %5463 to i64*
  %5464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5465 = getelementptr inbounds %struct.GPR, %struct.GPR* %5464, i32 0, i32 7
  %5466 = getelementptr inbounds %struct.Reg, %struct.Reg* %5465, i32 0, i32 0
  %EDX.i875 = bitcast %union.anon* %5466 to i32*
  %5467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5468 = getelementptr inbounds %struct.GPR, %struct.GPR* %5467, i32 0, i32 1
  %5469 = getelementptr inbounds %struct.Reg, %struct.Reg* %5468, i32 0, i32 0
  %RAX.i876 = bitcast %union.anon* %5469 to i64*
  %5470 = load i32, i32* %EDX.i875
  %5471 = zext i32 %5470 to i64
  %5472 = load i64, i64* %PC.i874
  %5473 = add i64 %5472, 2
  store i64 %5473, i64* %PC.i874
  %5474 = and i64 %5471, 4294967295
  store i64 %5474, i64* %RAX.i876, align 8
  store %struct.Memory* %loadMem_44abbe, %struct.Memory** %MEMORY
  %loadMem_44abc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5476 = getelementptr inbounds %struct.GPR, %struct.GPR* %5475, i32 0, i32 33
  %5477 = getelementptr inbounds %struct.Reg, %struct.Reg* %5476, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %5477 to i64*
  %5478 = load i64, i64* %PC.i873
  %5479 = add i64 %5478, 1
  store i64 %5479, i64* %PC.i873
  %5480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %5481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5482 = bitcast %union.anon* %5481 to i32*
  %5483 = load i32, i32* %5482, align 8
  %5484 = sext i32 %5483 to i64
  %5485 = lshr i64 %5484, 32
  store i64 %5485, i64* %5480, align 8
  store %struct.Memory* %loadMem_44abc0, %struct.Memory** %MEMORY
  %loadMem_44abc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5487 = getelementptr inbounds %struct.GPR, %struct.GPR* %5486, i32 0, i32 33
  %5488 = getelementptr inbounds %struct.Reg, %struct.Reg* %5487, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %5488 to i64*
  %5489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5490 = getelementptr inbounds %struct.GPR, %struct.GPR* %5489, i32 0, i32 9
  %5491 = getelementptr inbounds %struct.Reg, %struct.Reg* %5490, i32 0, i32 0
  %RSI.i871 = bitcast %union.anon* %5491 to i64*
  %5492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5493 = getelementptr inbounds %struct.GPR, %struct.GPR* %5492, i32 0, i32 15
  %5494 = getelementptr inbounds %struct.Reg, %struct.Reg* %5493, i32 0, i32 0
  %RBP.i872 = bitcast %union.anon* %5494 to i64*
  %5495 = load i64, i64* %RBP.i872
  %5496 = sub i64 %5495, 56
  %5497 = load i64, i64* %PC.i870
  %5498 = add i64 %5497, 3
  store i64 %5498, i64* %PC.i870
  %5499 = inttoptr i64 %5496 to i32*
  %5500 = load i32, i32* %5499
  %5501 = zext i32 %5500 to i64
  store i64 %5501, i64* %RSI.i871, align 8
  store %struct.Memory* %loadMem_44abc1, %struct.Memory** %MEMORY
  %loadMem_44abc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5503 = getelementptr inbounds %struct.GPR, %struct.GPR* %5502, i32 0, i32 33
  %5504 = getelementptr inbounds %struct.Reg, %struct.Reg* %5503, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %5504 to i64*
  %5505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5506 = getelementptr inbounds %struct.GPR, %struct.GPR* %5505, i32 0, i32 9
  %5507 = getelementptr inbounds %struct.Reg, %struct.Reg* %5506, i32 0, i32 0
  %ESI.i866 = bitcast %union.anon* %5507 to i32*
  %5508 = load i32, i32* %ESI.i866
  %5509 = zext i32 %5508 to i64
  %5510 = load i64, i64* %PC.i865
  %5511 = add i64 %5510, 2
  store i64 %5511, i64* %PC.i865
  %5512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5513 = bitcast %union.anon* %5512 to i32*
  %5514 = load i32, i32* %5513, align 8
  %5515 = zext i32 %5514 to i64
  %5516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %5517 = bitcast %union.anon* %5516 to i32*
  %5518 = load i32, i32* %5517, align 8
  %5519 = zext i32 %5518 to i64
  %5520 = shl i64 %5509, 32
  %5521 = ashr exact i64 %5520, 32
  %5522 = shl i64 %5519, 32
  %5523 = or i64 %5522, %5515
  %5524 = sdiv i64 %5523, %5521
  %5525 = shl i64 %5524, 32
  %5526 = ashr exact i64 %5525, 32
  %5527 = icmp eq i64 %5524, %5526
  br i1 %5527, label %5532, label %5528

; <label>:5528:                                   ; preds = %block_44abb0
  %5529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5530 = load i64, i64* %5529, align 8
  %5531 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5530, %struct.Memory* %loadMem_44abc4)
  br label %routine_idivl__esi.exit867

; <label>:5532:                                   ; preds = %block_44abb0
  %5533 = srem i64 %5523, %5521
  %5534 = getelementptr inbounds %union.anon, %union.anon* %5512, i64 0, i32 0
  %5535 = and i64 %5524, 4294967295
  store i64 %5535, i64* %5534, align 8
  %5536 = getelementptr inbounds %union.anon, %union.anon* %5516, i64 0, i32 0
  %5537 = and i64 %5533, 4294967295
  store i64 %5537, i64* %5536, align 8
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5538, align 1
  %5539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %5539, align 1
  %5540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5540, align 1
  %5541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5541, align 1
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5542, align 1
  %5543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5543, align 1
  br label %routine_idivl__esi.exit867

routine_idivl__esi.exit867:                       ; preds = %5528, %5532
  %5544 = phi %struct.Memory* [ %5531, %5528 ], [ %loadMem_44abc4, %5532 ]
  store %struct.Memory* %5544, %struct.Memory** %MEMORY
  %loadMem_44abc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5546 = getelementptr inbounds %struct.GPR, %struct.GPR* %5545, i32 0, i32 33
  %5547 = getelementptr inbounds %struct.Reg, %struct.Reg* %5546, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %5547 to i64*
  %5548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5549 = getelementptr inbounds %struct.GPR, %struct.GPR* %5548, i32 0, i32 1
  %5550 = getelementptr inbounds %struct.Reg, %struct.Reg* %5549, i32 0, i32 0
  %EAX.i863 = bitcast %union.anon* %5550 to i32*
  %5551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5552 = getelementptr inbounds %struct.GPR, %struct.GPR* %5551, i32 0, i32 5
  %5553 = getelementptr inbounds %struct.Reg, %struct.Reg* %5552, i32 0, i32 0
  %ECX.i864 = bitcast %union.anon* %5553 to i32*
  %5554 = load i32, i32* %ECX.i864
  %5555 = zext i32 %5554 to i64
  %5556 = load i32, i32* %EAX.i863
  %5557 = zext i32 %5556 to i64
  %5558 = load i64, i64* %PC.i862
  %5559 = add i64 %5558, 2
  store i64 %5559, i64* %PC.i862
  %5560 = sub i32 %5554, %5556
  %5561 = icmp ult i32 %5554, %5556
  %5562 = zext i1 %5561 to i8
  %5563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5562, i8* %5563, align 1
  %5564 = and i32 %5560, 255
  %5565 = call i32 @llvm.ctpop.i32(i32 %5564)
  %5566 = trunc i32 %5565 to i8
  %5567 = and i8 %5566, 1
  %5568 = xor i8 %5567, 1
  %5569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5568, i8* %5569, align 1
  %5570 = xor i64 %5557, %5555
  %5571 = trunc i64 %5570 to i32
  %5572 = xor i32 %5571, %5560
  %5573 = lshr i32 %5572, 4
  %5574 = trunc i32 %5573 to i8
  %5575 = and i8 %5574, 1
  %5576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5575, i8* %5576, align 1
  %5577 = icmp eq i32 %5560, 0
  %5578 = zext i1 %5577 to i8
  %5579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5578, i8* %5579, align 1
  %5580 = lshr i32 %5560, 31
  %5581 = trunc i32 %5580 to i8
  %5582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5581, i8* %5582, align 1
  %5583 = lshr i32 %5554, 31
  %5584 = lshr i32 %5556, 31
  %5585 = xor i32 %5584, %5583
  %5586 = xor i32 %5580, %5583
  %5587 = add i32 %5586, %5585
  %5588 = icmp eq i32 %5587, 2
  %5589 = zext i1 %5588 to i8
  %5590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5589, i8* %5590, align 1
  store %struct.Memory* %loadMem_44abc6, %struct.Memory** %MEMORY
  %loadMem_44abc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5592 = getelementptr inbounds %struct.GPR, %struct.GPR* %5591, i32 0, i32 33
  %5593 = getelementptr inbounds %struct.Reg, %struct.Reg* %5592, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %5593 to i64*
  %5594 = load i64, i64* %PC.i861
  %5595 = add i64 %5594, 20
  %5596 = load i64, i64* %PC.i861
  %5597 = add i64 %5596, 6
  %5598 = load i64, i64* %PC.i861
  %5599 = add i64 %5598, 6
  store i64 %5599, i64* %PC.i861
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5601 = load i8, i8* %5600, align 1
  %5602 = icmp ne i8 %5601, 0
  %5603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5604 = load i8, i8* %5603, align 1
  %5605 = icmp ne i8 %5604, 0
  %5606 = xor i1 %5602, %5605
  %5607 = xor i1 %5606, true
  %5608 = zext i1 %5607 to i8
  store i8 %5608, i8* %BRANCH_TAKEN, align 1
  %5609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5610 = select i1 %5606, i64 %5597, i64 %5595
  store i64 %5610, i64* %5609, align 8
  store %struct.Memory* %loadMem_44abc8, %struct.Memory** %MEMORY
  %loadBr_44abc8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44abc8 = icmp eq i8 %loadBr_44abc8, 1
  br i1 %cmpBr_44abc8, label %block_.L_44abdc, label %block_44abce

block_44abce:                                     ; preds = %routine_idivl__esi.exit867
  %loadMem_44abce = load %struct.Memory*, %struct.Memory** %MEMORY
  %5611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5612 = getelementptr inbounds %struct.GPR, %struct.GPR* %5611, i32 0, i32 33
  %5613 = getelementptr inbounds %struct.Reg, %struct.Reg* %5612, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %5613 to i64*
  %5614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5615 = getelementptr inbounds %struct.GPR, %struct.GPR* %5614, i32 0, i32 1
  %5616 = getelementptr inbounds %struct.Reg, %struct.Reg* %5615, i32 0, i32 0
  %RAX.i859 = bitcast %union.anon* %5616 to i64*
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5618 = getelementptr inbounds %struct.GPR, %struct.GPR* %5617, i32 0, i32 15
  %5619 = getelementptr inbounds %struct.Reg, %struct.Reg* %5618, i32 0, i32 0
  %RBP.i860 = bitcast %union.anon* %5619 to i64*
  %5620 = load i64, i64* %RBP.i860
  %5621 = sub i64 %5620, 12
  %5622 = load i64, i64* %PC.i858
  %5623 = add i64 %5622, 3
  store i64 %5623, i64* %PC.i858
  %5624 = inttoptr i64 %5621 to i32*
  %5625 = load i32, i32* %5624
  %5626 = zext i32 %5625 to i64
  store i64 %5626, i64* %RAX.i859, align 8
  store %struct.Memory* %loadMem_44abce, %struct.Memory** %MEMORY
  %loadMem_44abd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5628 = getelementptr inbounds %struct.GPR, %struct.GPR* %5627, i32 0, i32 33
  %5629 = getelementptr inbounds %struct.Reg, %struct.Reg* %5628, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %5629 to i64*
  %5630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5631 = getelementptr inbounds %struct.GPR, %struct.GPR* %5630, i32 0, i32 1
  %5632 = getelementptr inbounds %struct.Reg, %struct.Reg* %5631, i32 0, i32 0
  %RAX.i857 = bitcast %union.anon* %5632 to i64*
  %5633 = load i64, i64* %RAX.i857
  %5634 = load i64, i64* %PC.i856
  %5635 = add i64 %5634, 2
  store i64 %5635, i64* %PC.i856
  %5636 = trunc i64 %5633 to i32
  %5637 = shl i32 %5636, 1
  %5638 = icmp slt i32 %5636, 0
  %5639 = icmp slt i32 %5637, 0
  %5640 = xor i1 %5638, %5639
  %5641 = zext i32 %5637 to i64
  store i64 %5641, i64* %RAX.i857, align 8
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5643 = zext i1 %5638 to i8
  store i8 %5643, i8* %5642, align 1
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5645 = and i32 %5637, 254
  %5646 = call i32 @llvm.ctpop.i32(i32 %5645)
  %5647 = trunc i32 %5646 to i8
  %5648 = and i8 %5647, 1
  %5649 = xor i8 %5648, 1
  store i8 %5649, i8* %5644, align 1
  %5650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5650, align 1
  %5651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5652 = icmp eq i32 %5637, 0
  %5653 = zext i1 %5652 to i8
  store i8 %5653, i8* %5651, align 1
  %5654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5655 = lshr i32 %5637, 31
  %5656 = trunc i32 %5655 to i8
  store i8 %5656, i8* %5654, align 1
  %5657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5658 = zext i1 %5640 to i8
  store i8 %5658, i8* %5657, align 1
  store %struct.Memory* %loadMem_44abd1, %struct.Memory** %MEMORY
  %loadMem_44abd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5660 = getelementptr inbounds %struct.GPR, %struct.GPR* %5659, i32 0, i32 33
  %5661 = getelementptr inbounds %struct.Reg, %struct.Reg* %5660, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %5661 to i64*
  %5662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5663 = getelementptr inbounds %struct.GPR, %struct.GPR* %5662, i32 0, i32 1
  %5664 = getelementptr inbounds %struct.Reg, %struct.Reg* %5663, i32 0, i32 0
  %EAX.i854 = bitcast %union.anon* %5664 to i32*
  %5665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5666 = getelementptr inbounds %struct.GPR, %struct.GPR* %5665, i32 0, i32 15
  %5667 = getelementptr inbounds %struct.Reg, %struct.Reg* %5666, i32 0, i32 0
  %RBP.i855 = bitcast %union.anon* %5667 to i64*
  %5668 = load i64, i64* %RBP.i855
  %5669 = sub i64 %5668, 44
  %5670 = load i32, i32* %EAX.i854
  %5671 = zext i32 %5670 to i64
  %5672 = load i64, i64* %PC.i853
  %5673 = add i64 %5672, 3
  store i64 %5673, i64* %PC.i853
  %5674 = inttoptr i64 %5669 to i32*
  store i32 %5670, i32* %5674
  store %struct.Memory* %loadMem_44abd4, %struct.Memory** %MEMORY
  %loadMem_44abd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5676 = getelementptr inbounds %struct.GPR, %struct.GPR* %5675, i32 0, i32 33
  %5677 = getelementptr inbounds %struct.Reg, %struct.Reg* %5676, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %5677 to i64*
  %5678 = load i64, i64* %PC.i852
  %5679 = add i64 %5678, 30
  %5680 = load i64, i64* %PC.i852
  %5681 = add i64 %5680, 5
  store i64 %5681, i64* %PC.i852
  %5682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5679, i64* %5682, align 8
  store %struct.Memory* %loadMem_44abd7, %struct.Memory** %MEMORY
  br label %block_.L_44abf5

block_.L_44abdc:                                  ; preds = %routine_idivl__esi.exit867
  %loadMem_44abdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5684 = getelementptr inbounds %struct.GPR, %struct.GPR* %5683, i32 0, i32 33
  %5685 = getelementptr inbounds %struct.Reg, %struct.Reg* %5684, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %5685 to i64*
  %5686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5687 = getelementptr inbounds %struct.GPR, %struct.GPR* %5686, i32 0, i32 1
  %5688 = getelementptr inbounds %struct.Reg, %struct.Reg* %5687, i32 0, i32 0
  %RAX.i850 = bitcast %union.anon* %5688 to i64*
  %5689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5690 = getelementptr inbounds %struct.GPR, %struct.GPR* %5689, i32 0, i32 15
  %5691 = getelementptr inbounds %struct.Reg, %struct.Reg* %5690, i32 0, i32 0
  %RBP.i851 = bitcast %union.anon* %5691 to i64*
  %5692 = load i64, i64* %RBP.i851
  %5693 = sub i64 %5692, 24
  %5694 = load i64, i64* %PC.i849
  %5695 = add i64 %5694, 4
  store i64 %5695, i64* %PC.i849
  %5696 = inttoptr i64 %5693 to i64*
  %5697 = load i64, i64* %5696
  store i64 %5697, i64* %RAX.i850, align 8
  store %struct.Memory* %loadMem_44abdc, %struct.Memory** %MEMORY
  %loadMem_44abe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5699 = getelementptr inbounds %struct.GPR, %struct.GPR* %5698, i32 0, i32 33
  %5700 = getelementptr inbounds %struct.Reg, %struct.Reg* %5699, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %5700 to i64*
  %5701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5702 = getelementptr inbounds %struct.GPR, %struct.GPR* %5701, i32 0, i32 1
  %5703 = getelementptr inbounds %struct.Reg, %struct.Reg* %5702, i32 0, i32 0
  %RAX.i847 = bitcast %union.anon* %5703 to i64*
  %5704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5705 = getelementptr inbounds %struct.GPR, %struct.GPR* %5704, i32 0, i32 5
  %5706 = getelementptr inbounds %struct.Reg, %struct.Reg* %5705, i32 0, i32 0
  %RCX.i848 = bitcast %union.anon* %5706 to i64*
  %5707 = load i64, i64* %RAX.i847
  %5708 = add i64 %5707, 4
  %5709 = load i64, i64* %PC.i846
  %5710 = add i64 %5709, 3
  store i64 %5710, i64* %PC.i846
  %5711 = inttoptr i64 %5708 to i32*
  %5712 = load i32, i32* %5711
  %5713 = zext i32 %5712 to i64
  store i64 %5713, i64* %RCX.i848, align 8
  store %struct.Memory* %loadMem_44abe0, %struct.Memory** %MEMORY
  %loadMem_44abe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5715 = getelementptr inbounds %struct.GPR, %struct.GPR* %5714, i32 0, i32 33
  %5716 = getelementptr inbounds %struct.Reg, %struct.Reg* %5715, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %5716 to i64*
  %5717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5718 = getelementptr inbounds %struct.GPR, %struct.GPR* %5717, i32 0, i32 5
  %5719 = getelementptr inbounds %struct.Reg, %struct.Reg* %5718, i32 0, i32 0
  %RCX.i845 = bitcast %union.anon* %5719 to i64*
  %5720 = load i64, i64* %RCX.i845
  %5721 = load i64, i64* %PC.i844
  %5722 = add i64 %5721, 3
  store i64 %5722, i64* %PC.i844
  %5723 = trunc i64 %5720 to i32
  %5724 = add i32 1, %5723
  %5725 = zext i32 %5724 to i64
  store i64 %5725, i64* %RCX.i845, align 8
  %5726 = icmp ult i32 %5724, %5723
  %5727 = icmp ult i32 %5724, 1
  %5728 = or i1 %5726, %5727
  %5729 = zext i1 %5728 to i8
  %5730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5729, i8* %5730, align 1
  %5731 = and i32 %5724, 255
  %5732 = call i32 @llvm.ctpop.i32(i32 %5731)
  %5733 = trunc i32 %5732 to i8
  %5734 = and i8 %5733, 1
  %5735 = xor i8 %5734, 1
  %5736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5735, i8* %5736, align 1
  %5737 = xor i64 1, %5720
  %5738 = trunc i64 %5737 to i32
  %5739 = xor i32 %5738, %5724
  %5740 = lshr i32 %5739, 4
  %5741 = trunc i32 %5740 to i8
  %5742 = and i8 %5741, 1
  %5743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5742, i8* %5743, align 1
  %5744 = icmp eq i32 %5724, 0
  %5745 = zext i1 %5744 to i8
  %5746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5745, i8* %5746, align 1
  %5747 = lshr i32 %5724, 31
  %5748 = trunc i32 %5747 to i8
  %5749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5748, i8* %5749, align 1
  %5750 = lshr i32 %5723, 31
  %5751 = xor i32 %5747, %5750
  %5752 = add i32 %5751, %5747
  %5753 = icmp eq i32 %5752, 2
  %5754 = zext i1 %5753 to i8
  %5755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5754, i8* %5755, align 1
  store %struct.Memory* %loadMem_44abe3, %struct.Memory** %MEMORY
  %loadMem_44abe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5757 = getelementptr inbounds %struct.GPR, %struct.GPR* %5756, i32 0, i32 33
  %5758 = getelementptr inbounds %struct.Reg, %struct.Reg* %5757, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %5758 to i64*
  %5759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5760 = getelementptr inbounds %struct.GPR, %struct.GPR* %5759, i32 0, i32 5
  %5761 = getelementptr inbounds %struct.Reg, %struct.Reg* %5760, i32 0, i32 0
  %ECX.i842 = bitcast %union.anon* %5761 to i32*
  %5762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5763 = getelementptr inbounds %struct.GPR, %struct.GPR* %5762, i32 0, i32 1
  %5764 = getelementptr inbounds %struct.Reg, %struct.Reg* %5763, i32 0, i32 0
  %RAX.i843 = bitcast %union.anon* %5764 to i64*
  %5765 = load i64, i64* %RAX.i843
  %5766 = add i64 %5765, 4
  %5767 = load i32, i32* %ECX.i842
  %5768 = zext i32 %5767 to i64
  %5769 = load i64, i64* %PC.i841
  %5770 = add i64 %5769, 3
  store i64 %5770, i64* %PC.i841
  %5771 = inttoptr i64 %5766 to i32*
  store i32 %5767, i32* %5771
  store %struct.Memory* %loadMem_44abe6, %struct.Memory** %MEMORY
  %loadMem_44abe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5773 = getelementptr inbounds %struct.GPR, %struct.GPR* %5772, i32 0, i32 33
  %5774 = getelementptr inbounds %struct.Reg, %struct.Reg* %5773, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %5774 to i64*
  %5775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5776 = getelementptr inbounds %struct.GPR, %struct.GPR* %5775, i32 0, i32 5
  %5777 = getelementptr inbounds %struct.Reg, %struct.Reg* %5776, i32 0, i32 0
  %RCX.i839 = bitcast %union.anon* %5777 to i64*
  %5778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5779 = getelementptr inbounds %struct.GPR, %struct.GPR* %5778, i32 0, i32 15
  %5780 = getelementptr inbounds %struct.Reg, %struct.Reg* %5779, i32 0, i32 0
  %RBP.i840 = bitcast %union.anon* %5780 to i64*
  %5781 = load i64, i64* %RBP.i840
  %5782 = sub i64 %5781, 12
  %5783 = load i64, i64* %PC.i838
  %5784 = add i64 %5783, 3
  store i64 %5784, i64* %PC.i838
  %5785 = inttoptr i64 %5782 to i32*
  %5786 = load i32, i32* %5785
  %5787 = zext i32 %5786 to i64
  store i64 %5787, i64* %RCX.i839, align 8
  store %struct.Memory* %loadMem_44abe9, %struct.Memory** %MEMORY
  %loadMem_44abec = load %struct.Memory*, %struct.Memory** %MEMORY
  %5788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5789 = getelementptr inbounds %struct.GPR, %struct.GPR* %5788, i32 0, i32 33
  %5790 = getelementptr inbounds %struct.Reg, %struct.Reg* %5789, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %5790 to i64*
  %5791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5792 = getelementptr inbounds %struct.GPR, %struct.GPR* %5791, i32 0, i32 5
  %5793 = getelementptr inbounds %struct.Reg, %struct.Reg* %5792, i32 0, i32 0
  %RCX.i837 = bitcast %union.anon* %5793 to i64*
  %5794 = load i64, i64* %RCX.i837
  %5795 = load i64, i64* %PC.i836
  %5796 = add i64 %5795, 2
  store i64 %5796, i64* %PC.i836
  %5797 = trunc i64 %5794 to i32
  %5798 = shl i32 %5797, 1
  %5799 = icmp slt i32 %5797, 0
  %5800 = icmp slt i32 %5798, 0
  %5801 = xor i1 %5799, %5800
  %5802 = zext i32 %5798 to i64
  store i64 %5802, i64* %RCX.i837, align 8
  %5803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5804 = zext i1 %5799 to i8
  store i8 %5804, i8* %5803, align 1
  %5805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5806 = and i32 %5798, 254
  %5807 = call i32 @llvm.ctpop.i32(i32 %5806)
  %5808 = trunc i32 %5807 to i8
  %5809 = and i8 %5808, 1
  %5810 = xor i8 %5809, 1
  store i8 %5810, i8* %5805, align 1
  %5811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5811, align 1
  %5812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5813 = icmp eq i32 %5798, 0
  %5814 = zext i1 %5813 to i8
  store i8 %5814, i8* %5812, align 1
  %5815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5816 = lshr i32 %5798, 31
  %5817 = trunc i32 %5816 to i8
  store i8 %5817, i8* %5815, align 1
  %5818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5819 = zext i1 %5801 to i8
  store i8 %5819, i8* %5818, align 1
  store %struct.Memory* %loadMem_44abec, %struct.Memory** %MEMORY
  %loadMem_44abef = load %struct.Memory*, %struct.Memory** %MEMORY
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5821 = getelementptr inbounds %struct.GPR, %struct.GPR* %5820, i32 0, i32 33
  %5822 = getelementptr inbounds %struct.Reg, %struct.Reg* %5821, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %5822 to i64*
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5824 = getelementptr inbounds %struct.GPR, %struct.GPR* %5823, i32 0, i32 5
  %5825 = getelementptr inbounds %struct.Reg, %struct.Reg* %5824, i32 0, i32 0
  %RCX.i834 = bitcast %union.anon* %5825 to i64*
  %5826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5827 = getelementptr inbounds %struct.GPR, %struct.GPR* %5826, i32 0, i32 15
  %5828 = getelementptr inbounds %struct.Reg, %struct.Reg* %5827, i32 0, i32 0
  %RBP.i835 = bitcast %union.anon* %5828 to i64*
  %5829 = load i64, i64* %RCX.i834
  %5830 = load i64, i64* %RBP.i835
  %5831 = sub i64 %5830, 40
  %5832 = load i64, i64* %PC.i833
  %5833 = add i64 %5832, 3
  store i64 %5833, i64* %PC.i833
  %5834 = trunc i64 %5829 to i32
  %5835 = inttoptr i64 %5831 to i32*
  %5836 = load i32, i32* %5835
  %5837 = sub i32 %5834, %5836
  %5838 = zext i32 %5837 to i64
  store i64 %5838, i64* %RCX.i834, align 8
  %5839 = icmp ult i32 %5834, %5836
  %5840 = zext i1 %5839 to i8
  %5841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5840, i8* %5841, align 1
  %5842 = and i32 %5837, 255
  %5843 = call i32 @llvm.ctpop.i32(i32 %5842)
  %5844 = trunc i32 %5843 to i8
  %5845 = and i8 %5844, 1
  %5846 = xor i8 %5845, 1
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5846, i8* %5847, align 1
  %5848 = xor i32 %5836, %5834
  %5849 = xor i32 %5848, %5837
  %5850 = lshr i32 %5849, 4
  %5851 = trunc i32 %5850 to i8
  %5852 = and i8 %5851, 1
  %5853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5852, i8* %5853, align 1
  %5854 = icmp eq i32 %5837, 0
  %5855 = zext i1 %5854 to i8
  %5856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5855, i8* %5856, align 1
  %5857 = lshr i32 %5837, 31
  %5858 = trunc i32 %5857 to i8
  %5859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5858, i8* %5859, align 1
  %5860 = lshr i32 %5834, 31
  %5861 = lshr i32 %5836, 31
  %5862 = xor i32 %5861, %5860
  %5863 = xor i32 %5857, %5860
  %5864 = add i32 %5863, %5862
  %5865 = icmp eq i32 %5864, 2
  %5866 = zext i1 %5865 to i8
  %5867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5866, i8* %5867, align 1
  store %struct.Memory* %loadMem_44abef, %struct.Memory** %MEMORY
  %loadMem_44abf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5869 = getelementptr inbounds %struct.GPR, %struct.GPR* %5868, i32 0, i32 33
  %5870 = getelementptr inbounds %struct.Reg, %struct.Reg* %5869, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %5870 to i64*
  %5871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5872 = getelementptr inbounds %struct.GPR, %struct.GPR* %5871, i32 0, i32 5
  %5873 = getelementptr inbounds %struct.Reg, %struct.Reg* %5872, i32 0, i32 0
  %ECX.i831 = bitcast %union.anon* %5873 to i32*
  %5874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5875 = getelementptr inbounds %struct.GPR, %struct.GPR* %5874, i32 0, i32 15
  %5876 = getelementptr inbounds %struct.Reg, %struct.Reg* %5875, i32 0, i32 0
  %RBP.i832 = bitcast %union.anon* %5876 to i64*
  %5877 = load i64, i64* %RBP.i832
  %5878 = sub i64 %5877, 44
  %5879 = load i32, i32* %ECX.i831
  %5880 = zext i32 %5879 to i64
  %5881 = load i64, i64* %PC.i830
  %5882 = add i64 %5881, 3
  store i64 %5882, i64* %PC.i830
  %5883 = inttoptr i64 %5878 to i32*
  store i32 %5879, i32* %5883
  store %struct.Memory* %loadMem_44abf2, %struct.Memory** %MEMORY
  br label %block_.L_44abf5

block_.L_44abf5:                                  ; preds = %block_.L_44abdc, %block_44abce
  %loadMem_44abf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5885 = getelementptr inbounds %struct.GPR, %struct.GPR* %5884, i32 0, i32 33
  %5886 = getelementptr inbounds %struct.Reg, %struct.Reg* %5885, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %5886 to i64*
  %5887 = load i64, i64* %PC.i829
  %5888 = add i64 %5887, 11
  %5889 = load i64, i64* %PC.i829
  %5890 = add i64 %5889, 5
  store i64 %5890, i64* %PC.i829
  %5891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5888, i64* %5891, align 8
  store %struct.Memory* %loadMem_44abf5, %struct.Memory** %MEMORY
  br label %block_.L_44ac00

block_.L_44abfa:                                  ; preds = %block_44ab7f
  %loadMem_44abfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5893 = getelementptr inbounds %struct.GPR, %struct.GPR* %5892, i32 0, i32 33
  %5894 = getelementptr inbounds %struct.Reg, %struct.Reg* %5893, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %5894 to i64*
  %5895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5896 = getelementptr inbounds %struct.GPR, %struct.GPR* %5895, i32 0, i32 1
  %5897 = getelementptr inbounds %struct.Reg, %struct.Reg* %5896, i32 0, i32 0
  %RAX.i827 = bitcast %union.anon* %5897 to i64*
  %5898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5899 = getelementptr inbounds %struct.GPR, %struct.GPR* %5898, i32 0, i32 15
  %5900 = getelementptr inbounds %struct.Reg, %struct.Reg* %5899, i32 0, i32 0
  %RBP.i828 = bitcast %union.anon* %5900 to i64*
  %5901 = load i64, i64* %RBP.i828
  %5902 = sub i64 %5901, 12
  %5903 = load i64, i64* %PC.i826
  %5904 = add i64 %5903, 3
  store i64 %5904, i64* %PC.i826
  %5905 = inttoptr i64 %5902 to i32*
  %5906 = load i32, i32* %5905
  %5907 = zext i32 %5906 to i64
  store i64 %5907, i64* %RAX.i827, align 8
  store %struct.Memory* %loadMem_44abfa, %struct.Memory** %MEMORY
  %loadMem_44abfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5909 = getelementptr inbounds %struct.GPR, %struct.GPR* %5908, i32 0, i32 33
  %5910 = getelementptr inbounds %struct.Reg, %struct.Reg* %5909, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %5910 to i64*
  %5911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5912 = getelementptr inbounds %struct.GPR, %struct.GPR* %5911, i32 0, i32 1
  %5913 = getelementptr inbounds %struct.Reg, %struct.Reg* %5912, i32 0, i32 0
  %EAX.i824 = bitcast %union.anon* %5913 to i32*
  %5914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5915 = getelementptr inbounds %struct.GPR, %struct.GPR* %5914, i32 0, i32 15
  %5916 = getelementptr inbounds %struct.Reg, %struct.Reg* %5915, i32 0, i32 0
  %RBP.i825 = bitcast %union.anon* %5916 to i64*
  %5917 = load i64, i64* %RBP.i825
  %5918 = sub i64 %5917, 44
  %5919 = load i32, i32* %EAX.i824
  %5920 = zext i32 %5919 to i64
  %5921 = load i64, i64* %PC.i823
  %5922 = add i64 %5921, 3
  store i64 %5922, i64* %PC.i823
  %5923 = inttoptr i64 %5918 to i32*
  store i32 %5919, i32* %5923
  store %struct.Memory* %loadMem_44abfd, %struct.Memory** %MEMORY
  br label %block_.L_44ac00

block_.L_44ac00:                                  ; preds = %block_.L_44abfa, %block_.L_44abf5
  %loadMem_44ac00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5925 = getelementptr inbounds %struct.GPR, %struct.GPR* %5924, i32 0, i32 33
  %5926 = getelementptr inbounds %struct.Reg, %struct.Reg* %5925, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %5926 to i64*
  %5927 = load i64, i64* %PC.i822
  %5928 = add i64 %5927, 5
  %5929 = load i64, i64* %PC.i822
  %5930 = add i64 %5929, 5
  store i64 %5930, i64* %PC.i822
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5928, i64* %5931, align 8
  store %struct.Memory* %loadMem_44ac00, %struct.Memory** %MEMORY
  br label %block_.L_44ac05

block_.L_44ac05:                                  ; preds = %block_.L_44ac00, %block_44ab4d
  %loadMem_44ac05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5933 = getelementptr inbounds %struct.GPR, %struct.GPR* %5932, i32 0, i32 33
  %5934 = getelementptr inbounds %struct.Reg, %struct.Reg* %5933, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %5934 to i64*
  %5935 = load i64, i64* %PC.i821
  %5936 = add i64 %5935, 213
  %5937 = load i64, i64* %PC.i821
  %5938 = add i64 %5937, 5
  store i64 %5938, i64* %PC.i821
  %5939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5936, i64* %5939, align 8
  store %struct.Memory* %loadMem_44ac05, %struct.Memory** %MEMORY
  br label %block_.L_44acda

block_.L_44ac0a:                                  ; preds = %block_.L_44ab3e
  %loadMem_44ac0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5941 = getelementptr inbounds %struct.GPR, %struct.GPR* %5940, i32 0, i32 33
  %5942 = getelementptr inbounds %struct.Reg, %struct.Reg* %5941, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %5942 to i64*
  %5943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5944 = getelementptr inbounds %struct.GPR, %struct.GPR* %5943, i32 0, i32 1
  %5945 = getelementptr inbounds %struct.Reg, %struct.Reg* %5944, i32 0, i32 0
  %RAX.i819 = bitcast %union.anon* %5945 to i64*
  %5946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5947 = getelementptr inbounds %struct.GPR, %struct.GPR* %5946, i32 0, i32 15
  %5948 = getelementptr inbounds %struct.Reg, %struct.Reg* %5947, i32 0, i32 0
  %RBP.i820 = bitcast %union.anon* %5948 to i64*
  %5949 = load i64, i64* %RBP.i820
  %5950 = sub i64 %5949, 32
  %5951 = load i64, i64* %PC.i818
  %5952 = add i64 %5951, 4
  store i64 %5952, i64* %PC.i818
  %5953 = inttoptr i64 %5950 to i64*
  %5954 = load i64, i64* %5953
  store i64 %5954, i64* %RAX.i819, align 8
  store %struct.Memory* %loadMem_44ac0a, %struct.Memory** %MEMORY
  %loadMem_44ac0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5956 = getelementptr inbounds %struct.GPR, %struct.GPR* %5955, i32 0, i32 33
  %5957 = getelementptr inbounds %struct.Reg, %struct.Reg* %5956, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %5957 to i64*
  %5958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5959 = getelementptr inbounds %struct.GPR, %struct.GPR* %5958, i32 0, i32 1
  %5960 = getelementptr inbounds %struct.Reg, %struct.Reg* %5959, i32 0, i32 0
  %RAX.i816 = bitcast %union.anon* %5960 to i64*
  %5961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5962 = getelementptr inbounds %struct.GPR, %struct.GPR* %5961, i32 0, i32 5
  %5963 = getelementptr inbounds %struct.Reg, %struct.Reg* %5962, i32 0, i32 0
  %RCX.i817 = bitcast %union.anon* %5963 to i64*
  %5964 = load i64, i64* %RAX.i816
  %5965 = add i64 %5964, 536
  %5966 = load i64, i64* %PC.i815
  %5967 = add i64 %5966, 6
  store i64 %5967, i64* %PC.i815
  %5968 = inttoptr i64 %5965 to i32*
  %5969 = load i32, i32* %5968
  %5970 = zext i32 %5969 to i64
  store i64 %5970, i64* %RCX.i817, align 8
  store %struct.Memory* %loadMem_44ac0e, %struct.Memory** %MEMORY
  %loadMem_44ac14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5972 = getelementptr inbounds %struct.GPR, %struct.GPR* %5971, i32 0, i32 33
  %5973 = getelementptr inbounds %struct.Reg, %struct.Reg* %5972, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %5973 to i64*
  %5974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5975 = getelementptr inbounds %struct.GPR, %struct.GPR* %5974, i32 0, i32 1
  %5976 = getelementptr inbounds %struct.Reg, %struct.Reg* %5975, i32 0, i32 0
  %RAX.i813 = bitcast %union.anon* %5976 to i64*
  %5977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5978 = getelementptr inbounds %struct.GPR, %struct.GPR* %5977, i32 0, i32 15
  %5979 = getelementptr inbounds %struct.Reg, %struct.Reg* %5978, i32 0, i32 0
  %RBP.i814 = bitcast %union.anon* %5979 to i64*
  %5980 = load i64, i64* %RBP.i814
  %5981 = sub i64 %5980, 24
  %5982 = load i64, i64* %PC.i812
  %5983 = add i64 %5982, 4
  store i64 %5983, i64* %PC.i812
  %5984 = inttoptr i64 %5981 to i64*
  %5985 = load i64, i64* %5984
  store i64 %5985, i64* %RAX.i813, align 8
  store %struct.Memory* %loadMem_44ac14, %struct.Memory** %MEMORY
  %loadMem_44ac18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5987 = getelementptr inbounds %struct.GPR, %struct.GPR* %5986, i32 0, i32 33
  %5988 = getelementptr inbounds %struct.Reg, %struct.Reg* %5987, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %5988 to i64*
  %5989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5990 = getelementptr inbounds %struct.GPR, %struct.GPR* %5989, i32 0, i32 5
  %5991 = getelementptr inbounds %struct.Reg, %struct.Reg* %5990, i32 0, i32 0
  %ECX.i810 = bitcast %union.anon* %5991 to i32*
  %5992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5993 = getelementptr inbounds %struct.GPR, %struct.GPR* %5992, i32 0, i32 1
  %5994 = getelementptr inbounds %struct.Reg, %struct.Reg* %5993, i32 0, i32 0
  %RAX.i811 = bitcast %union.anon* %5994 to i64*
  %5995 = load i64, i64* %RAX.i811
  %5996 = add i64 %5995, 4
  %5997 = load i32, i32* %ECX.i810
  %5998 = zext i32 %5997 to i64
  %5999 = load i64, i64* %PC.i809
  %6000 = add i64 %5999, 3
  store i64 %6000, i64* %PC.i809
  %6001 = inttoptr i64 %5996 to i32*
  store i32 %5997, i32* %6001
  store %struct.Memory* %loadMem_44ac18, %struct.Memory** %MEMORY
  %loadMem_44ac1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6003 = getelementptr inbounds %struct.GPR, %struct.GPR* %6002, i32 0, i32 33
  %6004 = getelementptr inbounds %struct.Reg, %struct.Reg* %6003, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %6004 to i64*
  %6005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6006 = getelementptr inbounds %struct.GPR, %struct.GPR* %6005, i32 0, i32 1
  %6007 = getelementptr inbounds %struct.Reg, %struct.Reg* %6006, i32 0, i32 0
  %RAX.i807 = bitcast %union.anon* %6007 to i64*
  %6008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6009 = getelementptr inbounds %struct.GPR, %struct.GPR* %6008, i32 0, i32 15
  %6010 = getelementptr inbounds %struct.Reg, %struct.Reg* %6009, i32 0, i32 0
  %RBP.i808 = bitcast %union.anon* %6010 to i64*
  %6011 = load i64, i64* %RBP.i808
  %6012 = sub i64 %6011, 32
  %6013 = load i64, i64* %PC.i806
  %6014 = add i64 %6013, 4
  store i64 %6014, i64* %PC.i806
  %6015 = inttoptr i64 %6012 to i64*
  %6016 = load i64, i64* %6015
  store i64 %6016, i64* %RAX.i807, align 8
  store %struct.Memory* %loadMem_44ac1b, %struct.Memory** %MEMORY
  %loadMem_44ac1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6018 = getelementptr inbounds %struct.GPR, %struct.GPR* %6017, i32 0, i32 33
  %6019 = getelementptr inbounds %struct.Reg, %struct.Reg* %6018, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %6019 to i64*
  %6020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6021 = getelementptr inbounds %struct.GPR, %struct.GPR* %6020, i32 0, i32 1
  %6022 = getelementptr inbounds %struct.Reg, %struct.Reg* %6021, i32 0, i32 0
  %RAX.i804 = bitcast %union.anon* %6022 to i64*
  %6023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6024 = getelementptr inbounds %struct.GPR, %struct.GPR* %6023, i32 0, i32 5
  %6025 = getelementptr inbounds %struct.Reg, %struct.Reg* %6024, i32 0, i32 0
  %RCX.i805 = bitcast %union.anon* %6025 to i64*
  %6026 = load i64, i64* %RAX.i804
  %6027 = add i64 %6026, 552
  %6028 = load i64, i64* %PC.i803
  %6029 = add i64 %6028, 6
  store i64 %6029, i64* %PC.i803
  %6030 = inttoptr i64 %6027 to i32*
  %6031 = load i32, i32* %6030
  %6032 = zext i32 %6031 to i64
  store i64 %6032, i64* %RCX.i805, align 8
  store %struct.Memory* %loadMem_44ac1f, %struct.Memory** %MEMORY
  %loadMem_44ac25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6034 = getelementptr inbounds %struct.GPR, %struct.GPR* %6033, i32 0, i32 33
  %6035 = getelementptr inbounds %struct.Reg, %struct.Reg* %6034, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %6035 to i64*
  %6036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6037 = getelementptr inbounds %struct.GPR, %struct.GPR* %6036, i32 0, i32 1
  %6038 = getelementptr inbounds %struct.Reg, %struct.Reg* %6037, i32 0, i32 0
  %RAX.i801 = bitcast %union.anon* %6038 to i64*
  %6039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6040 = getelementptr inbounds %struct.GPR, %struct.GPR* %6039, i32 0, i32 15
  %6041 = getelementptr inbounds %struct.Reg, %struct.Reg* %6040, i32 0, i32 0
  %RBP.i802 = bitcast %union.anon* %6041 to i64*
  %6042 = load i64, i64* %RBP.i802
  %6043 = sub i64 %6042, 24
  %6044 = load i64, i64* %PC.i800
  %6045 = add i64 %6044, 4
  store i64 %6045, i64* %PC.i800
  %6046 = inttoptr i64 %6043 to i64*
  %6047 = load i64, i64* %6046
  store i64 %6047, i64* %RAX.i801, align 8
  store %struct.Memory* %loadMem_44ac25, %struct.Memory** %MEMORY
  %loadMem_44ac29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6049 = getelementptr inbounds %struct.GPR, %struct.GPR* %6048, i32 0, i32 33
  %6050 = getelementptr inbounds %struct.Reg, %struct.Reg* %6049, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %6050 to i64*
  %6051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6052 = getelementptr inbounds %struct.GPR, %struct.GPR* %6051, i32 0, i32 5
  %6053 = getelementptr inbounds %struct.Reg, %struct.Reg* %6052, i32 0, i32 0
  %ECX.i798 = bitcast %union.anon* %6053 to i32*
  %6054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6055 = getelementptr inbounds %struct.GPR, %struct.GPR* %6054, i32 0, i32 1
  %6056 = getelementptr inbounds %struct.Reg, %struct.Reg* %6055, i32 0, i32 0
  %RAX.i799 = bitcast %union.anon* %6056 to i64*
  %6057 = load i64, i64* %RAX.i799
  %6058 = load i32, i32* %ECX.i798
  %6059 = zext i32 %6058 to i64
  %6060 = load i64, i64* %PC.i797
  %6061 = add i64 %6060, 2
  store i64 %6061, i64* %PC.i797
  %6062 = inttoptr i64 %6057 to i32*
  store i32 %6058, i32* %6062
  store %struct.Memory* %loadMem_44ac29, %struct.Memory** %MEMORY
  %loadMem_44ac2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6064 = getelementptr inbounds %struct.GPR, %struct.GPR* %6063, i32 0, i32 33
  %6065 = getelementptr inbounds %struct.Reg, %struct.Reg* %6064, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %6065 to i64*
  %6066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6067 = getelementptr inbounds %struct.GPR, %struct.GPR* %6066, i32 0, i32 1
  %6068 = getelementptr inbounds %struct.Reg, %struct.Reg* %6067, i32 0, i32 0
  %RAX.i795 = bitcast %union.anon* %6068 to i64*
  %6069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6070 = getelementptr inbounds %struct.GPR, %struct.GPR* %6069, i32 0, i32 15
  %6071 = getelementptr inbounds %struct.Reg, %struct.Reg* %6070, i32 0, i32 0
  %RBP.i796 = bitcast %union.anon* %6071 to i64*
  %6072 = load i64, i64* %RBP.i796
  %6073 = sub i64 %6072, 32
  %6074 = load i64, i64* %PC.i794
  %6075 = add i64 %6074, 4
  store i64 %6075, i64* %PC.i794
  %6076 = inttoptr i64 %6073 to i64*
  %6077 = load i64, i64* %6076
  store i64 %6077, i64* %RAX.i795, align 8
  store %struct.Memory* %loadMem_44ac2b, %struct.Memory** %MEMORY
  %loadMem_44ac2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6079 = getelementptr inbounds %struct.GPR, %struct.GPR* %6078, i32 0, i32 33
  %6080 = getelementptr inbounds %struct.Reg, %struct.Reg* %6079, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %6080 to i64*
  %6081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6082 = getelementptr inbounds %struct.GPR, %struct.GPR* %6081, i32 0, i32 1
  %6083 = getelementptr inbounds %struct.Reg, %struct.Reg* %6082, i32 0, i32 0
  %RAX.i793 = bitcast %union.anon* %6083 to i64*
  %6084 = load i64, i64* %RAX.i793
  %6085 = add i64 %6084, 552
  %6086 = load i64, i64* %PC.i792
  %6087 = add i64 %6086, 7
  store i64 %6087, i64* %PC.i792
  %6088 = inttoptr i64 %6085 to i32*
  %6089 = load i32, i32* %6088
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6090, align 1
  %6091 = and i32 %6089, 255
  %6092 = call i32 @llvm.ctpop.i32(i32 %6091)
  %6093 = trunc i32 %6092 to i8
  %6094 = and i8 %6093, 1
  %6095 = xor i8 %6094, 1
  %6096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6095, i8* %6096, align 1
  %6097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6097, align 1
  %6098 = icmp eq i32 %6089, 0
  %6099 = zext i1 %6098 to i8
  %6100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6099, i8* %6100, align 1
  %6101 = lshr i32 %6089, 31
  %6102 = trunc i32 %6101 to i8
  %6103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6102, i8* %6103, align 1
  %6104 = lshr i32 %6089, 31
  %6105 = xor i32 %6101, %6104
  %6106 = add i32 %6105, %6104
  %6107 = icmp eq i32 %6106, 2
  %6108 = zext i1 %6107 to i8
  %6109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6108, i8* %6109, align 1
  store %struct.Memory* %loadMem_44ac2f, %struct.Memory** %MEMORY
  %loadMem_44ac36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6111 = getelementptr inbounds %struct.GPR, %struct.GPR* %6110, i32 0, i32 33
  %6112 = getelementptr inbounds %struct.Reg, %struct.Reg* %6111, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %6112 to i64*
  %6113 = load i64, i64* %PC.i791
  %6114 = add i64 %6113, 159
  %6115 = load i64, i64* %PC.i791
  %6116 = add i64 %6115, 6
  %6117 = load i64, i64* %PC.i791
  %6118 = add i64 %6117, 6
  store i64 %6118, i64* %PC.i791
  %6119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6120 = load i8, i8* %6119, align 1
  store i8 %6120, i8* %BRANCH_TAKEN, align 1
  %6121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6122 = icmp ne i8 %6120, 0
  %6123 = select i1 %6122, i64 %6114, i64 %6116
  store i64 %6123, i64* %6121, align 8
  store %struct.Memory* %loadMem_44ac36, %struct.Memory** %MEMORY
  %loadBr_44ac36 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ac36 = icmp eq i8 %loadBr_44ac36, 1
  br i1 %cmpBr_44ac36, label %block_.L_44acd5, label %block_44ac3c

block_44ac3c:                                     ; preds = %block_.L_44ac0a
  %loadMem_44ac3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6125 = getelementptr inbounds %struct.GPR, %struct.GPR* %6124, i32 0, i32 33
  %6126 = getelementptr inbounds %struct.Reg, %struct.Reg* %6125, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %6126 to i64*
  %6127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6128 = getelementptr inbounds %struct.GPR, %struct.GPR* %6127, i32 0, i32 1
  %6129 = getelementptr inbounds %struct.Reg, %struct.Reg* %6128, i32 0, i32 0
  %RAX.i790 = bitcast %union.anon* %6129 to i64*
  %6130 = load i64, i64* %PC.i789
  %6131 = add i64 %6130, 8
  store i64 %6131, i64* %PC.i789
  %6132 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6132, i64* %RAX.i790, align 8
  store %struct.Memory* %loadMem_44ac3c, %struct.Memory** %MEMORY
  %loadMem_44ac44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6134 = getelementptr inbounds %struct.GPR, %struct.GPR* %6133, i32 0, i32 33
  %6135 = getelementptr inbounds %struct.Reg, %struct.Reg* %6134, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %6135 to i64*
  %6136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6137 = getelementptr inbounds %struct.GPR, %struct.GPR* %6136, i32 0, i32 1
  %6138 = getelementptr inbounds %struct.Reg, %struct.Reg* %6137, i32 0, i32 0
  %RAX.i788 = bitcast %union.anon* %6138 to i64*
  %6139 = load i64, i64* %RAX.i788
  %6140 = add i64 %6139, 14168
  %6141 = load i64, i64* %PC.i787
  %6142 = add i64 %6141, 7
  store i64 %6142, i64* %PC.i787
  %6143 = inttoptr i64 %6140 to i64*
  %6144 = load i64, i64* %6143
  store i64 %6144, i64* %RAX.i788, align 8
  store %struct.Memory* %loadMem_44ac44, %struct.Memory** %MEMORY
  %loadMem_44ac4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6146 = getelementptr inbounds %struct.GPR, %struct.GPR* %6145, i32 0, i32 33
  %6147 = getelementptr inbounds %struct.Reg, %struct.Reg* %6146, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %6147 to i64*
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6149 = getelementptr inbounds %struct.GPR, %struct.GPR* %6148, i32 0, i32 5
  %6150 = getelementptr inbounds %struct.Reg, %struct.Reg* %6149, i32 0, i32 0
  %RCX.i785 = bitcast %union.anon* %6150 to i64*
  %6151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6152 = getelementptr inbounds %struct.GPR, %struct.GPR* %6151, i32 0, i32 15
  %6153 = getelementptr inbounds %struct.Reg, %struct.Reg* %6152, i32 0, i32 0
  %RBP.i786 = bitcast %union.anon* %6153 to i64*
  %6154 = load i64, i64* %RBP.i786
  %6155 = sub i64 %6154, 32
  %6156 = load i64, i64* %PC.i784
  %6157 = add i64 %6156, 4
  store i64 %6157, i64* %PC.i784
  %6158 = inttoptr i64 %6155 to i64*
  %6159 = load i64, i64* %6158
  store i64 %6159, i64* %RCX.i785, align 8
  store %struct.Memory* %loadMem_44ac4b, %struct.Memory** %MEMORY
  %loadMem_44ac4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6161 = getelementptr inbounds %struct.GPR, %struct.GPR* %6160, i32 0, i32 33
  %6162 = getelementptr inbounds %struct.Reg, %struct.Reg* %6161, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %6162 to i64*
  %6163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6164 = getelementptr inbounds %struct.GPR, %struct.GPR* %6163, i32 0, i32 5
  %6165 = getelementptr inbounds %struct.Reg, %struct.Reg* %6164, i32 0, i32 0
  %RCX.i783 = bitcast %union.anon* %6165 to i64*
  %6166 = load i64, i64* %RCX.i783
  %6167 = add i64 %6166, 536
  %6168 = load i64, i64* %PC.i782
  %6169 = add i64 %6168, 7
  store i64 %6169, i64* %PC.i782
  %6170 = inttoptr i64 %6167 to i32*
  %6171 = load i32, i32* %6170
  %6172 = sext i32 %6171 to i64
  store i64 %6172, i64* %RCX.i783, align 8
  store %struct.Memory* %loadMem_44ac4f, %struct.Memory** %MEMORY
  %loadMem_44ac56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6174 = getelementptr inbounds %struct.GPR, %struct.GPR* %6173, i32 0, i32 33
  %6175 = getelementptr inbounds %struct.Reg, %struct.Reg* %6174, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %6175 to i64*
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6177 = getelementptr inbounds %struct.GPR, %struct.GPR* %6176, i32 0, i32 5
  %6178 = getelementptr inbounds %struct.Reg, %struct.Reg* %6177, i32 0, i32 0
  %RCX.i781 = bitcast %union.anon* %6178 to i64*
  %6179 = load i64, i64* %RCX.i781
  %6180 = load i64, i64* %PC.i780
  %6181 = add i64 %6180, 7
  store i64 %6181, i64* %PC.i780
  %6182 = sext i64 %6179 to i128
  %6183 = and i128 %6182, -18446744073709551616
  %6184 = zext i64 %6179 to i128
  %6185 = or i128 %6183, %6184
  %6186 = mul i128 632, %6185
  %6187 = trunc i128 %6186 to i64
  store i64 %6187, i64* %RCX.i781, align 8
  %6188 = sext i64 %6187 to i128
  %6189 = icmp ne i128 %6188, %6186
  %6190 = zext i1 %6189 to i8
  %6191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6190, i8* %6191, align 1
  %6192 = trunc i128 %6186 to i32
  %6193 = and i32 %6192, 255
  %6194 = call i32 @llvm.ctpop.i32(i32 %6193)
  %6195 = trunc i32 %6194 to i8
  %6196 = and i8 %6195, 1
  %6197 = xor i8 %6196, 1
  %6198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6197, i8* %6198, align 1
  %6199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6199, align 1
  %6200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6200, align 1
  %6201 = lshr i64 %6187, 63
  %6202 = trunc i64 %6201 to i8
  %6203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6202, i8* %6203, align 1
  %6204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6190, i8* %6204, align 1
  store %struct.Memory* %loadMem_44ac56, %struct.Memory** %MEMORY
  %loadMem_44ac5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6206 = getelementptr inbounds %struct.GPR, %struct.GPR* %6205, i32 0, i32 33
  %6207 = getelementptr inbounds %struct.Reg, %struct.Reg* %6206, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %6207 to i64*
  %6208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6209 = getelementptr inbounds %struct.GPR, %struct.GPR* %6208, i32 0, i32 1
  %6210 = getelementptr inbounds %struct.Reg, %struct.Reg* %6209, i32 0, i32 0
  %RAX.i778 = bitcast %union.anon* %6210 to i64*
  %6211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6212 = getelementptr inbounds %struct.GPR, %struct.GPR* %6211, i32 0, i32 5
  %6213 = getelementptr inbounds %struct.Reg, %struct.Reg* %6212, i32 0, i32 0
  %RCX.i779 = bitcast %union.anon* %6213 to i64*
  %6214 = load i64, i64* %RAX.i778
  %6215 = load i64, i64* %RCX.i779
  %6216 = load i64, i64* %PC.i777
  %6217 = add i64 %6216, 3
  store i64 %6217, i64* %PC.i777
  %6218 = add i64 %6215, %6214
  store i64 %6218, i64* %RAX.i778, align 8
  %6219 = icmp ult i64 %6218, %6214
  %6220 = icmp ult i64 %6218, %6215
  %6221 = or i1 %6219, %6220
  %6222 = zext i1 %6221 to i8
  %6223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6222, i8* %6223, align 1
  %6224 = trunc i64 %6218 to i32
  %6225 = and i32 %6224, 255
  %6226 = call i32 @llvm.ctpop.i32(i32 %6225)
  %6227 = trunc i32 %6226 to i8
  %6228 = and i8 %6227, 1
  %6229 = xor i8 %6228, 1
  %6230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6229, i8* %6230, align 1
  %6231 = xor i64 %6215, %6214
  %6232 = xor i64 %6231, %6218
  %6233 = lshr i64 %6232, 4
  %6234 = trunc i64 %6233 to i8
  %6235 = and i8 %6234, 1
  %6236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6235, i8* %6236, align 1
  %6237 = icmp eq i64 %6218, 0
  %6238 = zext i1 %6237 to i8
  %6239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6238, i8* %6239, align 1
  %6240 = lshr i64 %6218, 63
  %6241 = trunc i64 %6240 to i8
  %6242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6241, i8* %6242, align 1
  %6243 = lshr i64 %6214, 63
  %6244 = lshr i64 %6215, 63
  %6245 = xor i64 %6240, %6243
  %6246 = xor i64 %6240, %6244
  %6247 = add i64 %6245, %6246
  %6248 = icmp eq i64 %6247, 2
  %6249 = zext i1 %6248 to i8
  %6250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6249, i8* %6250, align 1
  store %struct.Memory* %loadMem_44ac5d, %struct.Memory** %MEMORY
  %loadMem_44ac60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6252 = getelementptr inbounds %struct.GPR, %struct.GPR* %6251, i32 0, i32 33
  %6253 = getelementptr inbounds %struct.Reg, %struct.Reg* %6252, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %6253 to i64*
  %6254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6255 = getelementptr inbounds %struct.GPR, %struct.GPR* %6254, i32 0, i32 1
  %6256 = getelementptr inbounds %struct.Reg, %struct.Reg* %6255, i32 0, i32 0
  %RAX.i776 = bitcast %union.anon* %6256 to i64*
  %6257 = load i64, i64* %RAX.i776
  %6258 = add i64 %6257, 532
  %6259 = load i64, i64* %PC.i775
  %6260 = add i64 %6259, 7
  store i64 %6260, i64* %PC.i775
  %6261 = inttoptr i64 %6258 to i32*
  %6262 = load i32, i32* %6261
  %6263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6263, align 1
  %6264 = and i32 %6262, 255
  %6265 = call i32 @llvm.ctpop.i32(i32 %6264)
  %6266 = trunc i32 %6265 to i8
  %6267 = and i8 %6266, 1
  %6268 = xor i8 %6267, 1
  %6269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6268, i8* %6269, align 1
  %6270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6270, align 1
  %6271 = icmp eq i32 %6262, 0
  %6272 = zext i1 %6271 to i8
  %6273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6272, i8* %6273, align 1
  %6274 = lshr i32 %6262, 31
  %6275 = trunc i32 %6274 to i8
  %6276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6275, i8* %6276, align 1
  %6277 = lshr i32 %6262, 31
  %6278 = xor i32 %6274, %6277
  %6279 = add i32 %6278, %6277
  %6280 = icmp eq i32 %6279, 2
  %6281 = zext i1 %6280 to i8
  %6282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6281, i8* %6282, align 1
  store %struct.Memory* %loadMem_44ac60, %struct.Memory** %MEMORY
  %loadMem_44ac67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6284 = getelementptr inbounds %struct.GPR, %struct.GPR* %6283, i32 0, i32 33
  %6285 = getelementptr inbounds %struct.Reg, %struct.Reg* %6284, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %6285 to i64*
  %6286 = load i64, i64* %PC.i774
  %6287 = add i64 %6286, 86
  %6288 = load i64, i64* %PC.i774
  %6289 = add i64 %6288, 6
  %6290 = load i64, i64* %PC.i774
  %6291 = add i64 %6290, 6
  store i64 %6291, i64* %PC.i774
  %6292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6293 = load i8, i8* %6292, align 1
  %6294 = icmp eq i8 %6293, 0
  %6295 = zext i1 %6294 to i8
  store i8 %6295, i8* %BRANCH_TAKEN, align 1
  %6296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6297 = select i1 %6294, i64 %6287, i64 %6289
  store i64 %6297, i64* %6296, align 8
  store %struct.Memory* %loadMem_44ac67, %struct.Memory** %MEMORY
  %loadBr_44ac67 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ac67 = icmp eq i8 %loadBr_44ac67, 1
  br i1 %cmpBr_44ac67, label %block_.L_44acbd, label %block_44ac6d

block_44ac6d:                                     ; preds = %block_44ac3c
  %loadMem_44ac6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6299 = getelementptr inbounds %struct.GPR, %struct.GPR* %6298, i32 0, i32 33
  %6300 = getelementptr inbounds %struct.Reg, %struct.Reg* %6299, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %6300 to i64*
  %6301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6302 = getelementptr inbounds %struct.GPR, %struct.GPR* %6301, i32 0, i32 1
  %6303 = getelementptr inbounds %struct.Reg, %struct.Reg* %6302, i32 0, i32 0
  %RAX.i773 = bitcast %union.anon* %6303 to i64*
  %6304 = load i64, i64* %PC.i772
  %6305 = add i64 %6304, 5
  store i64 %6305, i64* %PC.i772
  store i64 2, i64* %RAX.i773, align 8
  store %struct.Memory* %loadMem_44ac6d, %struct.Memory** %MEMORY
  %loadMem_44ac72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6307 = getelementptr inbounds %struct.GPR, %struct.GPR* %6306, i32 0, i32 33
  %6308 = getelementptr inbounds %struct.Reg, %struct.Reg* %6307, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %6308 to i64*
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6310 = getelementptr inbounds %struct.GPR, %struct.GPR* %6309, i32 0, i32 5
  %6311 = getelementptr inbounds %struct.Reg, %struct.Reg* %6310, i32 0, i32 0
  %RCX.i770 = bitcast %union.anon* %6311 to i64*
  %6312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6313 = getelementptr inbounds %struct.GPR, %struct.GPR* %6312, i32 0, i32 15
  %6314 = getelementptr inbounds %struct.Reg, %struct.Reg* %6313, i32 0, i32 0
  %RBP.i771 = bitcast %union.anon* %6314 to i64*
  %6315 = load i64, i64* %RBP.i771
  %6316 = sub i64 %6315, 12
  %6317 = load i64, i64* %PC.i769
  %6318 = add i64 %6317, 3
  store i64 %6318, i64* %PC.i769
  %6319 = inttoptr i64 %6316 to i32*
  %6320 = load i32, i32* %6319
  %6321 = zext i32 %6320 to i64
  store i64 %6321, i64* %RCX.i770, align 8
  store %struct.Memory* %loadMem_44ac72, %struct.Memory** %MEMORY
  %loadMem_44ac75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6323 = getelementptr inbounds %struct.GPR, %struct.GPR* %6322, i32 0, i32 33
  %6324 = getelementptr inbounds %struct.Reg, %struct.Reg* %6323, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %6324 to i64*
  %6325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6326 = getelementptr inbounds %struct.GPR, %struct.GPR* %6325, i32 0, i32 7
  %6327 = getelementptr inbounds %struct.Reg, %struct.Reg* %6326, i32 0, i32 0
  %RDX.i767 = bitcast %union.anon* %6327 to i64*
  %6328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6329 = getelementptr inbounds %struct.GPR, %struct.GPR* %6328, i32 0, i32 15
  %6330 = getelementptr inbounds %struct.Reg, %struct.Reg* %6329, i32 0, i32 0
  %RBP.i768 = bitcast %union.anon* %6330 to i64*
  %6331 = load i64, i64* %RBP.i768
  %6332 = sub i64 %6331, 40
  %6333 = load i64, i64* %PC.i766
  %6334 = add i64 %6333, 3
  store i64 %6334, i64* %PC.i766
  %6335 = inttoptr i64 %6332 to i32*
  %6336 = load i32, i32* %6335
  %6337 = zext i32 %6336 to i64
  store i64 %6337, i64* %RDX.i767, align 8
  store %struct.Memory* %loadMem_44ac75, %struct.Memory** %MEMORY
  %loadMem_44ac78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6339 = getelementptr inbounds %struct.GPR, %struct.GPR* %6338, i32 0, i32 33
  %6340 = getelementptr inbounds %struct.Reg, %struct.Reg* %6339, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %6340 to i64*
  %6341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6342 = getelementptr inbounds %struct.GPR, %struct.GPR* %6341, i32 0, i32 1
  %6343 = getelementptr inbounds %struct.Reg, %struct.Reg* %6342, i32 0, i32 0
  %EAX.i764 = bitcast %union.anon* %6343 to i32*
  %6344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6345 = getelementptr inbounds %struct.GPR, %struct.GPR* %6344, i32 0, i32 15
  %6346 = getelementptr inbounds %struct.Reg, %struct.Reg* %6345, i32 0, i32 0
  %RBP.i765 = bitcast %union.anon* %6346 to i64*
  %6347 = load i64, i64* %RBP.i765
  %6348 = sub i64 %6347, 60
  %6349 = load i32, i32* %EAX.i764
  %6350 = zext i32 %6349 to i64
  %6351 = load i64, i64* %PC.i763
  %6352 = add i64 %6351, 3
  store i64 %6352, i64* %PC.i763
  %6353 = inttoptr i64 %6348 to i32*
  store i32 %6349, i32* %6353
  store %struct.Memory* %loadMem_44ac78, %struct.Memory** %MEMORY
  %loadMem_44ac7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6355 = getelementptr inbounds %struct.GPR, %struct.GPR* %6354, i32 0, i32 33
  %6356 = getelementptr inbounds %struct.Reg, %struct.Reg* %6355, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %6356 to i64*
  %6357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6358 = getelementptr inbounds %struct.GPR, %struct.GPR* %6357, i32 0, i32 7
  %6359 = getelementptr inbounds %struct.Reg, %struct.Reg* %6358, i32 0, i32 0
  %EDX.i761 = bitcast %union.anon* %6359 to i32*
  %6360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6361 = getelementptr inbounds %struct.GPR, %struct.GPR* %6360, i32 0, i32 1
  %6362 = getelementptr inbounds %struct.Reg, %struct.Reg* %6361, i32 0, i32 0
  %RAX.i762 = bitcast %union.anon* %6362 to i64*
  %6363 = load i32, i32* %EDX.i761
  %6364 = zext i32 %6363 to i64
  %6365 = load i64, i64* %PC.i760
  %6366 = add i64 %6365, 2
  store i64 %6366, i64* %PC.i760
  %6367 = and i64 %6364, 4294967295
  store i64 %6367, i64* %RAX.i762, align 8
  store %struct.Memory* %loadMem_44ac7b, %struct.Memory** %MEMORY
  %loadMem_44ac7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6369 = getelementptr inbounds %struct.GPR, %struct.GPR* %6368, i32 0, i32 33
  %6370 = getelementptr inbounds %struct.Reg, %struct.Reg* %6369, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %6370 to i64*
  %6371 = load i64, i64* %PC.i759
  %6372 = add i64 %6371, 1
  store i64 %6372, i64* %PC.i759
  %6373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %6374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %6375 = bitcast %union.anon* %6374 to i32*
  %6376 = load i32, i32* %6375, align 8
  %6377 = sext i32 %6376 to i64
  %6378 = lshr i64 %6377, 32
  store i64 %6378, i64* %6373, align 8
  store %struct.Memory* %loadMem_44ac7d, %struct.Memory** %MEMORY
  %loadMem_44ac7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6380 = getelementptr inbounds %struct.GPR, %struct.GPR* %6379, i32 0, i32 33
  %6381 = getelementptr inbounds %struct.Reg, %struct.Reg* %6380, i32 0, i32 0
  %PC.i756 = bitcast %union.anon* %6381 to i64*
  %6382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6383 = getelementptr inbounds %struct.GPR, %struct.GPR* %6382, i32 0, i32 9
  %6384 = getelementptr inbounds %struct.Reg, %struct.Reg* %6383, i32 0, i32 0
  %RSI.i757 = bitcast %union.anon* %6384 to i64*
  %6385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6386 = getelementptr inbounds %struct.GPR, %struct.GPR* %6385, i32 0, i32 15
  %6387 = getelementptr inbounds %struct.Reg, %struct.Reg* %6386, i32 0, i32 0
  %RBP.i758 = bitcast %union.anon* %6387 to i64*
  %6388 = load i64, i64* %RBP.i758
  %6389 = sub i64 %6388, 60
  %6390 = load i64, i64* %PC.i756
  %6391 = add i64 %6390, 3
  store i64 %6391, i64* %PC.i756
  %6392 = inttoptr i64 %6389 to i32*
  %6393 = load i32, i32* %6392
  %6394 = zext i32 %6393 to i64
  store i64 %6394, i64* %RSI.i757, align 8
  store %struct.Memory* %loadMem_44ac7e, %struct.Memory** %MEMORY
  %loadMem_44ac81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6396 = getelementptr inbounds %struct.GPR, %struct.GPR* %6395, i32 0, i32 33
  %6397 = getelementptr inbounds %struct.Reg, %struct.Reg* %6396, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %6397 to i64*
  %6398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6399 = getelementptr inbounds %struct.GPR, %struct.GPR* %6398, i32 0, i32 9
  %6400 = getelementptr inbounds %struct.Reg, %struct.Reg* %6399, i32 0, i32 0
  %ESI.i753 = bitcast %union.anon* %6400 to i32*
  %6401 = load i32, i32* %ESI.i753
  %6402 = zext i32 %6401 to i64
  %6403 = load i64, i64* %PC.i752
  %6404 = add i64 %6403, 2
  store i64 %6404, i64* %PC.i752
  %6405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %6406 = bitcast %union.anon* %6405 to i32*
  %6407 = load i32, i32* %6406, align 8
  %6408 = zext i32 %6407 to i64
  %6409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %6410 = bitcast %union.anon* %6409 to i32*
  %6411 = load i32, i32* %6410, align 8
  %6412 = zext i32 %6411 to i64
  %6413 = shl i64 %6402, 32
  %6414 = ashr exact i64 %6413, 32
  %6415 = shl i64 %6412, 32
  %6416 = or i64 %6415, %6408
  %6417 = sdiv i64 %6416, %6414
  %6418 = shl i64 %6417, 32
  %6419 = ashr exact i64 %6418, 32
  %6420 = icmp eq i64 %6417, %6419
  br i1 %6420, label %6425, label %6421

; <label>:6421:                                   ; preds = %block_44ac6d
  %6422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6423 = load i64, i64* %6422, align 8
  %6424 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6423, %struct.Memory* %loadMem_44ac81)
  br label %routine_idivl__esi.exit

; <label>:6425:                                   ; preds = %block_44ac6d
  %6426 = srem i64 %6416, %6414
  %6427 = getelementptr inbounds %union.anon, %union.anon* %6405, i64 0, i32 0
  %6428 = and i64 %6417, 4294967295
  store i64 %6428, i64* %6427, align 8
  %6429 = getelementptr inbounds %union.anon, %union.anon* %6409, i64 0, i32 0
  %6430 = and i64 %6426, 4294967295
  store i64 %6430, i64* %6429, align 8
  %6431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6431, align 1
  %6432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %6432, align 1
  %6433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6433, align 1
  %6434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6434, align 1
  %6435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %6435, align 1
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6436, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %6421, %6425
  %6437 = phi %struct.Memory* [ %6424, %6421 ], [ %loadMem_44ac81, %6425 ]
  store %struct.Memory* %6437, %struct.Memory** %MEMORY
  %loadMem_44ac83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6439 = getelementptr inbounds %struct.GPR, %struct.GPR* %6438, i32 0, i32 33
  %6440 = getelementptr inbounds %struct.Reg, %struct.Reg* %6439, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %6440 to i64*
  %6441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6442 = getelementptr inbounds %struct.GPR, %struct.GPR* %6441, i32 0, i32 1
  %6443 = getelementptr inbounds %struct.Reg, %struct.Reg* %6442, i32 0, i32 0
  %EAX.i750 = bitcast %union.anon* %6443 to i32*
  %6444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6445 = getelementptr inbounds %struct.GPR, %struct.GPR* %6444, i32 0, i32 5
  %6446 = getelementptr inbounds %struct.Reg, %struct.Reg* %6445, i32 0, i32 0
  %ECX.i751 = bitcast %union.anon* %6446 to i32*
  %6447 = load i32, i32* %ECX.i751
  %6448 = zext i32 %6447 to i64
  %6449 = load i32, i32* %EAX.i750
  %6450 = zext i32 %6449 to i64
  %6451 = load i64, i64* %PC.i749
  %6452 = add i64 %6451, 2
  store i64 %6452, i64* %PC.i749
  %6453 = sub i32 %6447, %6449
  %6454 = icmp ult i32 %6447, %6449
  %6455 = zext i1 %6454 to i8
  %6456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6455, i8* %6456, align 1
  %6457 = and i32 %6453, 255
  %6458 = call i32 @llvm.ctpop.i32(i32 %6457)
  %6459 = trunc i32 %6458 to i8
  %6460 = and i8 %6459, 1
  %6461 = xor i8 %6460, 1
  %6462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6461, i8* %6462, align 1
  %6463 = xor i64 %6450, %6448
  %6464 = trunc i64 %6463 to i32
  %6465 = xor i32 %6464, %6453
  %6466 = lshr i32 %6465, 4
  %6467 = trunc i32 %6466 to i8
  %6468 = and i8 %6467, 1
  %6469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6468, i8* %6469, align 1
  %6470 = icmp eq i32 %6453, 0
  %6471 = zext i1 %6470 to i8
  %6472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6471, i8* %6472, align 1
  %6473 = lshr i32 %6453, 31
  %6474 = trunc i32 %6473 to i8
  %6475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6474, i8* %6475, align 1
  %6476 = lshr i32 %6447, 31
  %6477 = lshr i32 %6449, 31
  %6478 = xor i32 %6477, %6476
  %6479 = xor i32 %6473, %6476
  %6480 = add i32 %6479, %6478
  %6481 = icmp eq i32 %6480, 2
  %6482 = zext i1 %6481 to i8
  %6483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6482, i8* %6483, align 1
  store %struct.Memory* %loadMem_44ac83, %struct.Memory** %MEMORY
  %loadMem_44ac85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6485 = getelementptr inbounds %struct.GPR, %struct.GPR* %6484, i32 0, i32 33
  %6486 = getelementptr inbounds %struct.Reg, %struct.Reg* %6485, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %6486 to i64*
  %6487 = load i64, i64* %PC.i748
  %6488 = add i64 %6487, 23
  %6489 = load i64, i64* %PC.i748
  %6490 = add i64 %6489, 6
  %6491 = load i64, i64* %PC.i748
  %6492 = add i64 %6491, 6
  store i64 %6492, i64* %PC.i748
  %6493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6494 = load i8, i8* %6493, align 1
  %6495 = icmp ne i8 %6494, 0
  %6496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6497 = load i8, i8* %6496, align 1
  %6498 = icmp ne i8 %6497, 0
  %6499 = xor i1 %6495, %6498
  %6500 = xor i1 %6499, true
  %6501 = zext i1 %6500 to i8
  store i8 %6501, i8* %BRANCH_TAKEN, align 1
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6503 = select i1 %6499, i64 %6490, i64 %6488
  store i64 %6503, i64* %6502, align 8
  store %struct.Memory* %loadMem_44ac85, %struct.Memory** %MEMORY
  %loadBr_44ac85 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ac85 = icmp eq i8 %loadBr_44ac85, 1
  br i1 %cmpBr_44ac85, label %block_.L_44ac9c, label %block_44ac8b

block_44ac8b:                                     ; preds = %routine_idivl__esi.exit
  %loadMem_44ac8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6505 = getelementptr inbounds %struct.GPR, %struct.GPR* %6504, i32 0, i32 33
  %6506 = getelementptr inbounds %struct.Reg, %struct.Reg* %6505, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %6506 to i64*
  %6507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6508 = getelementptr inbounds %struct.GPR, %struct.GPR* %6507, i32 0, i32 1
  %6509 = getelementptr inbounds %struct.Reg, %struct.Reg* %6508, i32 0, i32 0
  %RAX.i746 = bitcast %union.anon* %6509 to i64*
  %6510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6511 = getelementptr inbounds %struct.GPR, %struct.GPR* %6510, i32 0, i32 15
  %6512 = getelementptr inbounds %struct.Reg, %struct.Reg* %6511, i32 0, i32 0
  %RBP.i747 = bitcast %union.anon* %6512 to i64*
  %6513 = load i64, i64* %RBP.i747
  %6514 = sub i64 %6513, 12
  %6515 = load i64, i64* %PC.i745
  %6516 = add i64 %6515, 3
  store i64 %6516, i64* %PC.i745
  %6517 = inttoptr i64 %6514 to i32*
  %6518 = load i32, i32* %6517
  %6519 = zext i32 %6518 to i64
  store i64 %6519, i64* %RAX.i746, align 8
  store %struct.Memory* %loadMem_44ac8b, %struct.Memory** %MEMORY
  %loadMem_44ac8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6521 = getelementptr inbounds %struct.GPR, %struct.GPR* %6520, i32 0, i32 33
  %6522 = getelementptr inbounds %struct.Reg, %struct.Reg* %6521, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %6522 to i64*
  %6523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6524 = getelementptr inbounds %struct.GPR, %struct.GPR* %6523, i32 0, i32 1
  %6525 = getelementptr inbounds %struct.Reg, %struct.Reg* %6524, i32 0, i32 0
  %RAX.i744 = bitcast %union.anon* %6525 to i64*
  %6526 = load i64, i64* %RAX.i744
  %6527 = load i64, i64* %PC.i743
  %6528 = add i64 %6527, 2
  store i64 %6528, i64* %PC.i743
  %6529 = trunc i64 %6526 to i32
  %6530 = shl i32 %6529, 1
  %6531 = icmp slt i32 %6529, 0
  %6532 = icmp slt i32 %6530, 0
  %6533 = xor i1 %6531, %6532
  %6534 = zext i32 %6530 to i64
  store i64 %6534, i64* %RAX.i744, align 8
  %6535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6536 = zext i1 %6531 to i8
  store i8 %6536, i8* %6535, align 1
  %6537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6538 = and i32 %6530, 254
  %6539 = call i32 @llvm.ctpop.i32(i32 %6538)
  %6540 = trunc i32 %6539 to i8
  %6541 = and i8 %6540, 1
  %6542 = xor i8 %6541, 1
  store i8 %6542, i8* %6537, align 1
  %6543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6543, align 1
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6545 = icmp eq i32 %6530, 0
  %6546 = zext i1 %6545 to i8
  store i8 %6546, i8* %6544, align 1
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6548 = lshr i32 %6530, 31
  %6549 = trunc i32 %6548 to i8
  store i8 %6549, i8* %6547, align 1
  %6550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6551 = zext i1 %6533 to i8
  store i8 %6551, i8* %6550, align 1
  store %struct.Memory* %loadMem_44ac8e, %struct.Memory** %MEMORY
  %loadMem_44ac91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6553 = getelementptr inbounds %struct.GPR, %struct.GPR* %6552, i32 0, i32 33
  %6554 = getelementptr inbounds %struct.Reg, %struct.Reg* %6553, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %6554 to i64*
  %6555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6556 = getelementptr inbounds %struct.GPR, %struct.GPR* %6555, i32 0, i32 1
  %6557 = getelementptr inbounds %struct.Reg, %struct.Reg* %6556, i32 0, i32 0
  %RAX.i742 = bitcast %union.anon* %6557 to i64*
  %6558 = load i64, i64* %RAX.i742
  %6559 = load i64, i64* %PC.i741
  %6560 = add i64 %6559, 3
  store i64 %6560, i64* %PC.i741
  %6561 = trunc i64 %6558 to i32
  %6562 = add i32 1, %6561
  %6563 = zext i32 %6562 to i64
  store i64 %6563, i64* %RAX.i742, align 8
  %6564 = icmp ult i32 %6562, %6561
  %6565 = icmp ult i32 %6562, 1
  %6566 = or i1 %6564, %6565
  %6567 = zext i1 %6566 to i8
  %6568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6567, i8* %6568, align 1
  %6569 = and i32 %6562, 255
  %6570 = call i32 @llvm.ctpop.i32(i32 %6569)
  %6571 = trunc i32 %6570 to i8
  %6572 = and i8 %6571, 1
  %6573 = xor i8 %6572, 1
  %6574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6573, i8* %6574, align 1
  %6575 = xor i64 1, %6558
  %6576 = trunc i64 %6575 to i32
  %6577 = xor i32 %6576, %6562
  %6578 = lshr i32 %6577, 4
  %6579 = trunc i32 %6578 to i8
  %6580 = and i8 %6579, 1
  %6581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6580, i8* %6581, align 1
  %6582 = icmp eq i32 %6562, 0
  %6583 = zext i1 %6582 to i8
  %6584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6583, i8* %6584, align 1
  %6585 = lshr i32 %6562, 31
  %6586 = trunc i32 %6585 to i8
  %6587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6586, i8* %6587, align 1
  %6588 = lshr i32 %6561, 31
  %6589 = xor i32 %6585, %6588
  %6590 = add i32 %6589, %6585
  %6591 = icmp eq i32 %6590, 2
  %6592 = zext i1 %6591 to i8
  %6593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6592, i8* %6593, align 1
  store %struct.Memory* %loadMem_44ac91, %struct.Memory** %MEMORY
  %loadMem_44ac94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6595 = getelementptr inbounds %struct.GPR, %struct.GPR* %6594, i32 0, i32 33
  %6596 = getelementptr inbounds %struct.Reg, %struct.Reg* %6595, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %6596 to i64*
  %6597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6598 = getelementptr inbounds %struct.GPR, %struct.GPR* %6597, i32 0, i32 1
  %6599 = getelementptr inbounds %struct.Reg, %struct.Reg* %6598, i32 0, i32 0
  %EAX.i739 = bitcast %union.anon* %6599 to i32*
  %6600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6601 = getelementptr inbounds %struct.GPR, %struct.GPR* %6600, i32 0, i32 15
  %6602 = getelementptr inbounds %struct.Reg, %struct.Reg* %6601, i32 0, i32 0
  %RBP.i740 = bitcast %union.anon* %6602 to i64*
  %6603 = load i64, i64* %RBP.i740
  %6604 = sub i64 %6603, 44
  %6605 = load i32, i32* %EAX.i739
  %6606 = zext i32 %6605 to i64
  %6607 = load i64, i64* %PC.i738
  %6608 = add i64 %6607, 3
  store i64 %6608, i64* %PC.i738
  %6609 = inttoptr i64 %6604 to i32*
  store i32 %6605, i32* %6609
  store %struct.Memory* %loadMem_44ac94, %struct.Memory** %MEMORY
  %loadMem_44ac97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6611 = getelementptr inbounds %struct.GPR, %struct.GPR* %6610, i32 0, i32 33
  %6612 = getelementptr inbounds %struct.Reg, %struct.Reg* %6611, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %6612 to i64*
  %6613 = load i64, i64* %PC.i737
  %6614 = add i64 %6613, 33
  %6615 = load i64, i64* %PC.i737
  %6616 = add i64 %6615, 5
  store i64 %6616, i64* %PC.i737
  %6617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6614, i64* %6617, align 8
  store %struct.Memory* %loadMem_44ac97, %struct.Memory** %MEMORY
  br label %block_.L_44acb8

block_.L_44ac9c:                                  ; preds = %routine_idivl__esi.exit
  %loadMem_44ac9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6619 = getelementptr inbounds %struct.GPR, %struct.GPR* %6618, i32 0, i32 33
  %6620 = getelementptr inbounds %struct.Reg, %struct.Reg* %6619, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %6620 to i64*
  %6621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6622 = getelementptr inbounds %struct.GPR, %struct.GPR* %6621, i32 0, i32 1
  %6623 = getelementptr inbounds %struct.Reg, %struct.Reg* %6622, i32 0, i32 0
  %RAX.i735 = bitcast %union.anon* %6623 to i64*
  %6624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6625 = getelementptr inbounds %struct.GPR, %struct.GPR* %6624, i32 0, i32 15
  %6626 = getelementptr inbounds %struct.Reg, %struct.Reg* %6625, i32 0, i32 0
  %RBP.i736 = bitcast %union.anon* %6626 to i64*
  %6627 = load i64, i64* %RBP.i736
  %6628 = sub i64 %6627, 24
  %6629 = load i64, i64* %PC.i734
  %6630 = add i64 %6629, 4
  store i64 %6630, i64* %PC.i734
  %6631 = inttoptr i64 %6628 to i64*
  %6632 = load i64, i64* %6631
  store i64 %6632, i64* %RAX.i735, align 8
  store %struct.Memory* %loadMem_44ac9c, %struct.Memory** %MEMORY
  %loadMem_44aca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6634 = getelementptr inbounds %struct.GPR, %struct.GPR* %6633, i32 0, i32 33
  %6635 = getelementptr inbounds %struct.Reg, %struct.Reg* %6634, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %6635 to i64*
  %6636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6637 = getelementptr inbounds %struct.GPR, %struct.GPR* %6636, i32 0, i32 1
  %6638 = getelementptr inbounds %struct.Reg, %struct.Reg* %6637, i32 0, i32 0
  %RAX.i732 = bitcast %union.anon* %6638 to i64*
  %6639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6640 = getelementptr inbounds %struct.GPR, %struct.GPR* %6639, i32 0, i32 5
  %6641 = getelementptr inbounds %struct.Reg, %struct.Reg* %6640, i32 0, i32 0
  %RCX.i733 = bitcast %union.anon* %6641 to i64*
  %6642 = load i64, i64* %RAX.i732
  %6643 = add i64 %6642, 4
  %6644 = load i64, i64* %PC.i731
  %6645 = add i64 %6644, 3
  store i64 %6645, i64* %PC.i731
  %6646 = inttoptr i64 %6643 to i32*
  %6647 = load i32, i32* %6646
  %6648 = zext i32 %6647 to i64
  store i64 %6648, i64* %RCX.i733, align 8
  store %struct.Memory* %loadMem_44aca0, %struct.Memory** %MEMORY
  %loadMem_44aca3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6650 = getelementptr inbounds %struct.GPR, %struct.GPR* %6649, i32 0, i32 33
  %6651 = getelementptr inbounds %struct.Reg, %struct.Reg* %6650, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %6651 to i64*
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6653 = getelementptr inbounds %struct.GPR, %struct.GPR* %6652, i32 0, i32 5
  %6654 = getelementptr inbounds %struct.Reg, %struct.Reg* %6653, i32 0, i32 0
  %RCX.i730 = bitcast %union.anon* %6654 to i64*
  %6655 = load i64, i64* %RCX.i730
  %6656 = load i64, i64* %PC.i729
  %6657 = add i64 %6656, 3
  store i64 %6657, i64* %PC.i729
  %6658 = trunc i64 %6655 to i32
  %6659 = add i32 1, %6658
  %6660 = zext i32 %6659 to i64
  store i64 %6660, i64* %RCX.i730, align 8
  %6661 = icmp ult i32 %6659, %6658
  %6662 = icmp ult i32 %6659, 1
  %6663 = or i1 %6661, %6662
  %6664 = zext i1 %6663 to i8
  %6665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6664, i8* %6665, align 1
  %6666 = and i32 %6659, 255
  %6667 = call i32 @llvm.ctpop.i32(i32 %6666)
  %6668 = trunc i32 %6667 to i8
  %6669 = and i8 %6668, 1
  %6670 = xor i8 %6669, 1
  %6671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6670, i8* %6671, align 1
  %6672 = xor i64 1, %6655
  %6673 = trunc i64 %6672 to i32
  %6674 = xor i32 %6673, %6659
  %6675 = lshr i32 %6674, 4
  %6676 = trunc i32 %6675 to i8
  %6677 = and i8 %6676, 1
  %6678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6677, i8* %6678, align 1
  %6679 = icmp eq i32 %6659, 0
  %6680 = zext i1 %6679 to i8
  %6681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6680, i8* %6681, align 1
  %6682 = lshr i32 %6659, 31
  %6683 = trunc i32 %6682 to i8
  %6684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6683, i8* %6684, align 1
  %6685 = lshr i32 %6658, 31
  %6686 = xor i32 %6682, %6685
  %6687 = add i32 %6686, %6682
  %6688 = icmp eq i32 %6687, 2
  %6689 = zext i1 %6688 to i8
  %6690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6689, i8* %6690, align 1
  store %struct.Memory* %loadMem_44aca3, %struct.Memory** %MEMORY
  %loadMem_44aca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6692 = getelementptr inbounds %struct.GPR, %struct.GPR* %6691, i32 0, i32 33
  %6693 = getelementptr inbounds %struct.Reg, %struct.Reg* %6692, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %6693 to i64*
  %6694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6695 = getelementptr inbounds %struct.GPR, %struct.GPR* %6694, i32 0, i32 5
  %6696 = getelementptr inbounds %struct.Reg, %struct.Reg* %6695, i32 0, i32 0
  %ECX.i727 = bitcast %union.anon* %6696 to i32*
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6698 = getelementptr inbounds %struct.GPR, %struct.GPR* %6697, i32 0, i32 1
  %6699 = getelementptr inbounds %struct.Reg, %struct.Reg* %6698, i32 0, i32 0
  %RAX.i728 = bitcast %union.anon* %6699 to i64*
  %6700 = load i64, i64* %RAX.i728
  %6701 = add i64 %6700, 4
  %6702 = load i32, i32* %ECX.i727
  %6703 = zext i32 %6702 to i64
  %6704 = load i64, i64* %PC.i726
  %6705 = add i64 %6704, 3
  store i64 %6705, i64* %PC.i726
  %6706 = inttoptr i64 %6701 to i32*
  store i32 %6702, i32* %6706
  store %struct.Memory* %loadMem_44aca6, %struct.Memory** %MEMORY
  %loadMem_44aca9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6708 = getelementptr inbounds %struct.GPR, %struct.GPR* %6707, i32 0, i32 33
  %6709 = getelementptr inbounds %struct.Reg, %struct.Reg* %6708, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %6709 to i64*
  %6710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6711 = getelementptr inbounds %struct.GPR, %struct.GPR* %6710, i32 0, i32 5
  %6712 = getelementptr inbounds %struct.Reg, %struct.Reg* %6711, i32 0, i32 0
  %RCX.i724 = bitcast %union.anon* %6712 to i64*
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6714 = getelementptr inbounds %struct.GPR, %struct.GPR* %6713, i32 0, i32 15
  %6715 = getelementptr inbounds %struct.Reg, %struct.Reg* %6714, i32 0, i32 0
  %RBP.i725 = bitcast %union.anon* %6715 to i64*
  %6716 = load i64, i64* %RBP.i725
  %6717 = sub i64 %6716, 12
  %6718 = load i64, i64* %PC.i723
  %6719 = add i64 %6718, 3
  store i64 %6719, i64* %PC.i723
  %6720 = inttoptr i64 %6717 to i32*
  %6721 = load i32, i32* %6720
  %6722 = zext i32 %6721 to i64
  store i64 %6722, i64* %RCX.i724, align 8
  store %struct.Memory* %loadMem_44aca9, %struct.Memory** %MEMORY
  %loadMem_44acac = load %struct.Memory*, %struct.Memory** %MEMORY
  %6723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6724 = getelementptr inbounds %struct.GPR, %struct.GPR* %6723, i32 0, i32 33
  %6725 = getelementptr inbounds %struct.Reg, %struct.Reg* %6724, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %6725 to i64*
  %6726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6727 = getelementptr inbounds %struct.GPR, %struct.GPR* %6726, i32 0, i32 5
  %6728 = getelementptr inbounds %struct.Reg, %struct.Reg* %6727, i32 0, i32 0
  %RCX.i722 = bitcast %union.anon* %6728 to i64*
  %6729 = load i64, i64* %RCX.i722
  %6730 = load i64, i64* %PC.i721
  %6731 = add i64 %6730, 2
  store i64 %6731, i64* %PC.i721
  %6732 = trunc i64 %6729 to i32
  %6733 = shl i32 %6732, 1
  %6734 = icmp slt i32 %6732, 0
  %6735 = icmp slt i32 %6733, 0
  %6736 = xor i1 %6734, %6735
  %6737 = zext i32 %6733 to i64
  store i64 %6737, i64* %RCX.i722, align 8
  %6738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6739 = zext i1 %6734 to i8
  store i8 %6739, i8* %6738, align 1
  %6740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6741 = and i32 %6733, 254
  %6742 = call i32 @llvm.ctpop.i32(i32 %6741)
  %6743 = trunc i32 %6742 to i8
  %6744 = and i8 %6743, 1
  %6745 = xor i8 %6744, 1
  store i8 %6745, i8* %6740, align 1
  %6746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6746, align 1
  %6747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6748 = icmp eq i32 %6733, 0
  %6749 = zext i1 %6748 to i8
  store i8 %6749, i8* %6747, align 1
  %6750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6751 = lshr i32 %6733, 31
  %6752 = trunc i32 %6751 to i8
  store i8 %6752, i8* %6750, align 1
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6754 = zext i1 %6736 to i8
  store i8 %6754, i8* %6753, align 1
  store %struct.Memory* %loadMem_44acac, %struct.Memory** %MEMORY
  %loadMem_44acaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6756 = getelementptr inbounds %struct.GPR, %struct.GPR* %6755, i32 0, i32 33
  %6757 = getelementptr inbounds %struct.Reg, %struct.Reg* %6756, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %6757 to i64*
  %6758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6759 = getelementptr inbounds %struct.GPR, %struct.GPR* %6758, i32 0, i32 5
  %6760 = getelementptr inbounds %struct.Reg, %struct.Reg* %6759, i32 0, i32 0
  %RCX.i720 = bitcast %union.anon* %6760 to i64*
  %6761 = load i64, i64* %RCX.i720
  %6762 = load i64, i64* %PC.i719
  %6763 = add i64 %6762, 3
  store i64 %6763, i64* %PC.i719
  %6764 = trunc i64 %6761 to i32
  %6765 = add i32 1, %6764
  %6766 = zext i32 %6765 to i64
  store i64 %6766, i64* %RCX.i720, align 8
  %6767 = icmp ult i32 %6765, %6764
  %6768 = icmp ult i32 %6765, 1
  %6769 = or i1 %6767, %6768
  %6770 = zext i1 %6769 to i8
  %6771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6770, i8* %6771, align 1
  %6772 = and i32 %6765, 255
  %6773 = call i32 @llvm.ctpop.i32(i32 %6772)
  %6774 = trunc i32 %6773 to i8
  %6775 = and i8 %6774, 1
  %6776 = xor i8 %6775, 1
  %6777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6776, i8* %6777, align 1
  %6778 = xor i64 1, %6761
  %6779 = trunc i64 %6778 to i32
  %6780 = xor i32 %6779, %6765
  %6781 = lshr i32 %6780, 4
  %6782 = trunc i32 %6781 to i8
  %6783 = and i8 %6782, 1
  %6784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6783, i8* %6784, align 1
  %6785 = icmp eq i32 %6765, 0
  %6786 = zext i1 %6785 to i8
  %6787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6786, i8* %6787, align 1
  %6788 = lshr i32 %6765, 31
  %6789 = trunc i32 %6788 to i8
  %6790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6789, i8* %6790, align 1
  %6791 = lshr i32 %6764, 31
  %6792 = xor i32 %6788, %6791
  %6793 = add i32 %6792, %6788
  %6794 = icmp eq i32 %6793, 2
  %6795 = zext i1 %6794 to i8
  %6796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6795, i8* %6796, align 1
  store %struct.Memory* %loadMem_44acaf, %struct.Memory** %MEMORY
  %loadMem_44acb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6798 = getelementptr inbounds %struct.GPR, %struct.GPR* %6797, i32 0, i32 33
  %6799 = getelementptr inbounds %struct.Reg, %struct.Reg* %6798, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %6799 to i64*
  %6800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6801 = getelementptr inbounds %struct.GPR, %struct.GPR* %6800, i32 0, i32 5
  %6802 = getelementptr inbounds %struct.Reg, %struct.Reg* %6801, i32 0, i32 0
  %RCX.i717 = bitcast %union.anon* %6802 to i64*
  %6803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6804 = getelementptr inbounds %struct.GPR, %struct.GPR* %6803, i32 0, i32 15
  %6805 = getelementptr inbounds %struct.Reg, %struct.Reg* %6804, i32 0, i32 0
  %RBP.i718 = bitcast %union.anon* %6805 to i64*
  %6806 = load i64, i64* %RCX.i717
  %6807 = load i64, i64* %RBP.i718
  %6808 = sub i64 %6807, 40
  %6809 = load i64, i64* %PC.i716
  %6810 = add i64 %6809, 3
  store i64 %6810, i64* %PC.i716
  %6811 = trunc i64 %6806 to i32
  %6812 = inttoptr i64 %6808 to i32*
  %6813 = load i32, i32* %6812
  %6814 = sub i32 %6811, %6813
  %6815 = zext i32 %6814 to i64
  store i64 %6815, i64* %RCX.i717, align 8
  %6816 = icmp ult i32 %6811, %6813
  %6817 = zext i1 %6816 to i8
  %6818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6817, i8* %6818, align 1
  %6819 = and i32 %6814, 255
  %6820 = call i32 @llvm.ctpop.i32(i32 %6819)
  %6821 = trunc i32 %6820 to i8
  %6822 = and i8 %6821, 1
  %6823 = xor i8 %6822, 1
  %6824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6823, i8* %6824, align 1
  %6825 = xor i32 %6813, %6811
  %6826 = xor i32 %6825, %6814
  %6827 = lshr i32 %6826, 4
  %6828 = trunc i32 %6827 to i8
  %6829 = and i8 %6828, 1
  %6830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6829, i8* %6830, align 1
  %6831 = icmp eq i32 %6814, 0
  %6832 = zext i1 %6831 to i8
  %6833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6832, i8* %6833, align 1
  %6834 = lshr i32 %6814, 31
  %6835 = trunc i32 %6834 to i8
  %6836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6835, i8* %6836, align 1
  %6837 = lshr i32 %6811, 31
  %6838 = lshr i32 %6813, 31
  %6839 = xor i32 %6838, %6837
  %6840 = xor i32 %6834, %6837
  %6841 = add i32 %6840, %6839
  %6842 = icmp eq i32 %6841, 2
  %6843 = zext i1 %6842 to i8
  %6844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6843, i8* %6844, align 1
  store %struct.Memory* %loadMem_44acb2, %struct.Memory** %MEMORY
  %loadMem_44acb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 33
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %6847 to i64*
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6849 = getelementptr inbounds %struct.GPR, %struct.GPR* %6848, i32 0, i32 5
  %6850 = getelementptr inbounds %struct.Reg, %struct.Reg* %6849, i32 0, i32 0
  %ECX.i714 = bitcast %union.anon* %6850 to i32*
  %6851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6852 = getelementptr inbounds %struct.GPR, %struct.GPR* %6851, i32 0, i32 15
  %6853 = getelementptr inbounds %struct.Reg, %struct.Reg* %6852, i32 0, i32 0
  %RBP.i715 = bitcast %union.anon* %6853 to i64*
  %6854 = load i64, i64* %RBP.i715
  %6855 = sub i64 %6854, 44
  %6856 = load i32, i32* %ECX.i714
  %6857 = zext i32 %6856 to i64
  %6858 = load i64, i64* %PC.i713
  %6859 = add i64 %6858, 3
  store i64 %6859, i64* %PC.i713
  %6860 = inttoptr i64 %6855 to i32*
  store i32 %6856, i32* %6860
  store %struct.Memory* %loadMem_44acb5, %struct.Memory** %MEMORY
  br label %block_.L_44acb8

block_.L_44acb8:                                  ; preds = %block_.L_44ac9c, %block_44ac8b
  %loadMem_44acb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6862 = getelementptr inbounds %struct.GPR, %struct.GPR* %6861, i32 0, i32 33
  %6863 = getelementptr inbounds %struct.Reg, %struct.Reg* %6862, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %6863 to i64*
  %6864 = load i64, i64* %PC.i712
  %6865 = add i64 %6864, 24
  %6866 = load i64, i64* %PC.i712
  %6867 = add i64 %6866, 5
  store i64 %6867, i64* %PC.i712
  %6868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6865, i64* %6868, align 8
  store %struct.Memory* %loadMem_44acb8, %struct.Memory** %MEMORY
  br label %block_.L_44acd0

block_.L_44acbd:                                  ; preds = %block_44ac3c
  %loadMem_44acbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6870 = getelementptr inbounds %struct.GPR, %struct.GPR* %6869, i32 0, i32 33
  %6871 = getelementptr inbounds %struct.Reg, %struct.Reg* %6870, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %6871 to i64*
  %6872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6873 = getelementptr inbounds %struct.GPR, %struct.GPR* %6872, i32 0, i32 1
  %6874 = getelementptr inbounds %struct.Reg, %struct.Reg* %6873, i32 0, i32 0
  %RAX.i710 = bitcast %union.anon* %6874 to i64*
  %6875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6876 = getelementptr inbounds %struct.GPR, %struct.GPR* %6875, i32 0, i32 15
  %6877 = getelementptr inbounds %struct.Reg, %struct.Reg* %6876, i32 0, i32 0
  %RBP.i711 = bitcast %union.anon* %6877 to i64*
  %6878 = load i64, i64* %RBP.i711
  %6879 = sub i64 %6878, 24
  %6880 = load i64, i64* %PC.i709
  %6881 = add i64 %6880, 4
  store i64 %6881, i64* %PC.i709
  %6882 = inttoptr i64 %6879 to i64*
  %6883 = load i64, i64* %6882
  store i64 %6883, i64* %RAX.i710, align 8
  store %struct.Memory* %loadMem_44acbd, %struct.Memory** %MEMORY
  %loadMem_44acc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6885 = getelementptr inbounds %struct.GPR, %struct.GPR* %6884, i32 0, i32 33
  %6886 = getelementptr inbounds %struct.Reg, %struct.Reg* %6885, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %6886 to i64*
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6888 = getelementptr inbounds %struct.GPR, %struct.GPR* %6887, i32 0, i32 1
  %6889 = getelementptr inbounds %struct.Reg, %struct.Reg* %6888, i32 0, i32 0
  %RAX.i707 = bitcast %union.anon* %6889 to i64*
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6891 = getelementptr inbounds %struct.GPR, %struct.GPR* %6890, i32 0, i32 5
  %6892 = getelementptr inbounds %struct.Reg, %struct.Reg* %6891, i32 0, i32 0
  %RCX.i708 = bitcast %union.anon* %6892 to i64*
  %6893 = load i64, i64* %RAX.i707
  %6894 = add i64 %6893, 4
  %6895 = load i64, i64* %PC.i706
  %6896 = add i64 %6895, 3
  store i64 %6896, i64* %PC.i706
  %6897 = inttoptr i64 %6894 to i32*
  %6898 = load i32, i32* %6897
  %6899 = zext i32 %6898 to i64
  store i64 %6899, i64* %RCX.i708, align 8
  store %struct.Memory* %loadMem_44acc1, %struct.Memory** %MEMORY
  %loadMem_44acc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6901 = getelementptr inbounds %struct.GPR, %struct.GPR* %6900, i32 0, i32 33
  %6902 = getelementptr inbounds %struct.Reg, %struct.Reg* %6901, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %6902 to i64*
  %6903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6904 = getelementptr inbounds %struct.GPR, %struct.GPR* %6903, i32 0, i32 5
  %6905 = getelementptr inbounds %struct.Reg, %struct.Reg* %6904, i32 0, i32 0
  %RCX.i705 = bitcast %union.anon* %6905 to i64*
  %6906 = load i64, i64* %RCX.i705
  %6907 = load i64, i64* %PC.i704
  %6908 = add i64 %6907, 3
  store i64 %6908, i64* %PC.i704
  %6909 = trunc i64 %6906 to i32
  %6910 = add i32 1, %6909
  %6911 = zext i32 %6910 to i64
  store i64 %6911, i64* %RCX.i705, align 8
  %6912 = icmp ult i32 %6910, %6909
  %6913 = icmp ult i32 %6910, 1
  %6914 = or i1 %6912, %6913
  %6915 = zext i1 %6914 to i8
  %6916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6915, i8* %6916, align 1
  %6917 = and i32 %6910, 255
  %6918 = call i32 @llvm.ctpop.i32(i32 %6917)
  %6919 = trunc i32 %6918 to i8
  %6920 = and i8 %6919, 1
  %6921 = xor i8 %6920, 1
  %6922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6921, i8* %6922, align 1
  %6923 = xor i64 1, %6906
  %6924 = trunc i64 %6923 to i32
  %6925 = xor i32 %6924, %6910
  %6926 = lshr i32 %6925, 4
  %6927 = trunc i32 %6926 to i8
  %6928 = and i8 %6927, 1
  %6929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6928, i8* %6929, align 1
  %6930 = icmp eq i32 %6910, 0
  %6931 = zext i1 %6930 to i8
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6931, i8* %6932, align 1
  %6933 = lshr i32 %6910, 31
  %6934 = trunc i32 %6933 to i8
  %6935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6934, i8* %6935, align 1
  %6936 = lshr i32 %6909, 31
  %6937 = xor i32 %6933, %6936
  %6938 = add i32 %6937, %6933
  %6939 = icmp eq i32 %6938, 2
  %6940 = zext i1 %6939 to i8
  %6941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6940, i8* %6941, align 1
  store %struct.Memory* %loadMem_44acc4, %struct.Memory** %MEMORY
  %loadMem_44acc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6943 = getelementptr inbounds %struct.GPR, %struct.GPR* %6942, i32 0, i32 33
  %6944 = getelementptr inbounds %struct.Reg, %struct.Reg* %6943, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %6944 to i64*
  %6945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6946 = getelementptr inbounds %struct.GPR, %struct.GPR* %6945, i32 0, i32 5
  %6947 = getelementptr inbounds %struct.Reg, %struct.Reg* %6946, i32 0, i32 0
  %ECX.i702 = bitcast %union.anon* %6947 to i32*
  %6948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6949 = getelementptr inbounds %struct.GPR, %struct.GPR* %6948, i32 0, i32 1
  %6950 = getelementptr inbounds %struct.Reg, %struct.Reg* %6949, i32 0, i32 0
  %RAX.i703 = bitcast %union.anon* %6950 to i64*
  %6951 = load i64, i64* %RAX.i703
  %6952 = add i64 %6951, 4
  %6953 = load i32, i32* %ECX.i702
  %6954 = zext i32 %6953 to i64
  %6955 = load i64, i64* %PC.i701
  %6956 = add i64 %6955, 3
  store i64 %6956, i64* %PC.i701
  %6957 = inttoptr i64 %6952 to i32*
  store i32 %6953, i32* %6957
  store %struct.Memory* %loadMem_44acc7, %struct.Memory** %MEMORY
  %loadMem_44acca = load %struct.Memory*, %struct.Memory** %MEMORY
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6959 = getelementptr inbounds %struct.GPR, %struct.GPR* %6958, i32 0, i32 33
  %6960 = getelementptr inbounds %struct.Reg, %struct.Reg* %6959, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %6960 to i64*
  %6961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6962 = getelementptr inbounds %struct.GPR, %struct.GPR* %6961, i32 0, i32 5
  %6963 = getelementptr inbounds %struct.Reg, %struct.Reg* %6962, i32 0, i32 0
  %RCX.i699 = bitcast %union.anon* %6963 to i64*
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6965 = getelementptr inbounds %struct.GPR, %struct.GPR* %6964, i32 0, i32 15
  %6966 = getelementptr inbounds %struct.Reg, %struct.Reg* %6965, i32 0, i32 0
  %RBP.i700 = bitcast %union.anon* %6966 to i64*
  %6967 = load i64, i64* %RBP.i700
  %6968 = sub i64 %6967, 12
  %6969 = load i64, i64* %PC.i698
  %6970 = add i64 %6969, 3
  store i64 %6970, i64* %PC.i698
  %6971 = inttoptr i64 %6968 to i32*
  %6972 = load i32, i32* %6971
  %6973 = zext i32 %6972 to i64
  store i64 %6973, i64* %RCX.i699, align 8
  store %struct.Memory* %loadMem_44acca, %struct.Memory** %MEMORY
  %loadMem_44accd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6975 = getelementptr inbounds %struct.GPR, %struct.GPR* %6974, i32 0, i32 33
  %6976 = getelementptr inbounds %struct.Reg, %struct.Reg* %6975, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %6976 to i64*
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6978 = getelementptr inbounds %struct.GPR, %struct.GPR* %6977, i32 0, i32 5
  %6979 = getelementptr inbounds %struct.Reg, %struct.Reg* %6978, i32 0, i32 0
  %ECX.i696 = bitcast %union.anon* %6979 to i32*
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6981 = getelementptr inbounds %struct.GPR, %struct.GPR* %6980, i32 0, i32 15
  %6982 = getelementptr inbounds %struct.Reg, %struct.Reg* %6981, i32 0, i32 0
  %RBP.i697 = bitcast %union.anon* %6982 to i64*
  %6983 = load i64, i64* %RBP.i697
  %6984 = sub i64 %6983, 44
  %6985 = load i32, i32* %ECX.i696
  %6986 = zext i32 %6985 to i64
  %6987 = load i64, i64* %PC.i695
  %6988 = add i64 %6987, 3
  store i64 %6988, i64* %PC.i695
  %6989 = inttoptr i64 %6984 to i32*
  store i32 %6985, i32* %6989
  store %struct.Memory* %loadMem_44accd, %struct.Memory** %MEMORY
  br label %block_.L_44acd0

block_.L_44acd0:                                  ; preds = %block_.L_44acbd, %block_.L_44acb8
  %loadMem_44acd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6991 = getelementptr inbounds %struct.GPR, %struct.GPR* %6990, i32 0, i32 33
  %6992 = getelementptr inbounds %struct.Reg, %struct.Reg* %6991, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %6992 to i64*
  %6993 = load i64, i64* %PC.i694
  %6994 = add i64 %6993, 5
  %6995 = load i64, i64* %PC.i694
  %6996 = add i64 %6995, 5
  store i64 %6996, i64* %PC.i694
  %6997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6994, i64* %6997, align 8
  store %struct.Memory* %loadMem_44acd0, %struct.Memory** %MEMORY
  br label %block_.L_44acd5

block_.L_44acd5:                                  ; preds = %block_.L_44acd0, %block_.L_44ac0a
  %loadMem_44acd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6999 = getelementptr inbounds %struct.GPR, %struct.GPR* %6998, i32 0, i32 33
  %7000 = getelementptr inbounds %struct.Reg, %struct.Reg* %6999, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %7000 to i64*
  %7001 = load i64, i64* %PC.i693
  %7002 = add i64 %7001, 5
  %7003 = load i64, i64* %PC.i693
  %7004 = add i64 %7003, 5
  store i64 %7004, i64* %PC.i693
  %7005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7002, i64* %7005, align 8
  store %struct.Memory* %loadMem_44acd5, %struct.Memory** %MEMORY
  br label %block_.L_44acda

block_.L_44acda:                                  ; preds = %block_.L_44acd5, %block_.L_44ac05
  %loadMem_44acda = load %struct.Memory*, %struct.Memory** %MEMORY
  %7006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7007 = getelementptr inbounds %struct.GPR, %struct.GPR* %7006, i32 0, i32 33
  %7008 = getelementptr inbounds %struct.Reg, %struct.Reg* %7007, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %7008 to i64*
  %7009 = load i64, i64* %PC.i692
  %7010 = add i64 %7009, 5
  %7011 = load i64, i64* %PC.i692
  %7012 = add i64 %7011, 5
  store i64 %7012, i64* %PC.i692
  %7013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7010, i64* %7013, align 8
  store %struct.Memory* %loadMem_44acda, %struct.Memory** %MEMORY
  br label %block_.L_44acdf

block_.L_44acdf:                                  ; preds = %block_.L_44acda, %block_.L_44ab39
  %loadMem_44acdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7015 = getelementptr inbounds %struct.GPR, %struct.GPR* %7014, i32 0, i32 33
  %7016 = getelementptr inbounds %struct.Reg, %struct.Reg* %7015, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %7016 to i64*
  %7017 = load i64, i64* %PC.i691
  %7018 = add i64 %7017, 5
  %7019 = load i64, i64* %PC.i691
  %7020 = add i64 %7019, 5
  store i64 %7020, i64* %PC.i691
  %7021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7018, i64* %7021, align 8
  store %struct.Memory* %loadMem_44acdf, %struct.Memory** %MEMORY
  br label %block_.L_44ace4

block_.L_44ace4:                                  ; preds = %block_.L_44acdf, %block_44a980, %block_.L_44a976
  %loadMem_44ace4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7023 = getelementptr inbounds %struct.GPR, %struct.GPR* %7022, i32 0, i32 33
  %7024 = getelementptr inbounds %struct.Reg, %struct.Reg* %7023, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %7024 to i64*
  %7025 = load i64, i64* %PC.i690
  %7026 = add i64 %7025, 5
  %7027 = load i64, i64* %PC.i690
  %7028 = add i64 %7027, 5
  store i64 %7028, i64* %PC.i690
  %7029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7026, i64* %7029, align 8
  store %struct.Memory* %loadMem_44ace4, %struct.Memory** %MEMORY
  br label %block_.L_44ace9

block_.L_44ace9:                                  ; preds = %block_.L_44ace4, %block_.L_44a971
  %loadMem_44ace9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7031 = getelementptr inbounds %struct.GPR, %struct.GPR* %7030, i32 0, i32 33
  %7032 = getelementptr inbounds %struct.Reg, %struct.Reg* %7031, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %7032 to i64*
  %7033 = load i64, i64* %PC.i689
  %7034 = add i64 %7033, 922
  %7035 = load i64, i64* %PC.i689
  %7036 = add i64 %7035, 5
  store i64 %7036, i64* %PC.i689
  %7037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7034, i64* %7037, align 8
  store %struct.Memory* %loadMem_44ace9, %struct.Memory** %MEMORY
  br label %block_.L_44b083

block_.L_44acee:                                  ; preds = %block_.L_44a7ac
  %loadMem_44acee = load %struct.Memory*, %struct.Memory** %MEMORY
  %7038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7039 = getelementptr inbounds %struct.GPR, %struct.GPR* %7038, i32 0, i32 33
  %7040 = getelementptr inbounds %struct.Reg, %struct.Reg* %7039, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %7040 to i64*
  %7041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7042 = getelementptr inbounds %struct.GPR, %struct.GPR* %7041, i32 0, i32 15
  %7043 = getelementptr inbounds %struct.Reg, %struct.Reg* %7042, i32 0, i32 0
  %RBP.i688 = bitcast %union.anon* %7043 to i64*
  %7044 = load i64, i64* %RBP.i688
  %7045 = sub i64 %7044, 8
  %7046 = load i64, i64* %PC.i687
  %7047 = add i64 %7046, 4
  store i64 %7047, i64* %PC.i687
  %7048 = inttoptr i64 %7045 to i32*
  %7049 = load i32, i32* %7048
  %7050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7050, align 1
  %7051 = and i32 %7049, 255
  %7052 = call i32 @llvm.ctpop.i32(i32 %7051)
  %7053 = trunc i32 %7052 to i8
  %7054 = and i8 %7053, 1
  %7055 = xor i8 %7054, 1
  %7056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7055, i8* %7056, align 1
  %7057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7057, align 1
  %7058 = icmp eq i32 %7049, 0
  %7059 = zext i1 %7058 to i8
  %7060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7059, i8* %7060, align 1
  %7061 = lshr i32 %7049, 31
  %7062 = trunc i32 %7061 to i8
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7062, i8* %7063, align 1
  %7064 = lshr i32 %7049, 31
  %7065 = xor i32 %7061, %7064
  %7066 = add i32 %7065, %7064
  %7067 = icmp eq i32 %7066, 2
  %7068 = zext i1 %7067 to i8
  %7069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7068, i8* %7069, align 1
  store %struct.Memory* %loadMem_44acee, %struct.Memory** %MEMORY
  %loadMem_44acf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7071 = getelementptr inbounds %struct.GPR, %struct.GPR* %7070, i32 0, i32 33
  %7072 = getelementptr inbounds %struct.Reg, %struct.Reg* %7071, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %7072 to i64*
  %7073 = load i64, i64* %PC.i686
  %7074 = add i64 %7073, 590
  %7075 = load i64, i64* %PC.i686
  %7076 = add i64 %7075, 6
  %7077 = load i64, i64* %PC.i686
  %7078 = add i64 %7077, 6
  store i64 %7078, i64* %PC.i686
  %7079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7080 = load i8, i8* %7079, align 1
  %7081 = icmp ne i8 %7080, 0
  %7082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7083 = load i8, i8* %7082, align 1
  %7084 = icmp ne i8 %7083, 0
  %7085 = xor i1 %7081, %7084
  %7086 = zext i1 %7085 to i8
  store i8 %7086, i8* %BRANCH_TAKEN, align 1
  %7087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7088 = select i1 %7085, i64 %7074, i64 %7076
  store i64 %7088, i64* %7087, align 8
  store %struct.Memory* %loadMem_44acf2, %struct.Memory** %MEMORY
  %loadBr_44acf2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44acf2 = icmp eq i8 %loadBr_44acf2, 1
  br i1 %cmpBr_44acf2, label %block_.L_44af40, label %block_44acf8

block_44acf8:                                     ; preds = %block_.L_44acee
  %loadMem_44acf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7090 = getelementptr inbounds %struct.GPR, %struct.GPR* %7089, i32 0, i32 33
  %7091 = getelementptr inbounds %struct.Reg, %struct.Reg* %7090, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %7091 to i64*
  %7092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7093 = getelementptr inbounds %struct.GPR, %struct.GPR* %7092, i32 0, i32 1
  %7094 = getelementptr inbounds %struct.Reg, %struct.Reg* %7093, i32 0, i32 0
  %RAX.i684 = bitcast %union.anon* %7094 to i64*
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7096 = getelementptr inbounds %struct.GPR, %struct.GPR* %7095, i32 0, i32 15
  %7097 = getelementptr inbounds %struct.Reg, %struct.Reg* %7096, i32 0, i32 0
  %RBP.i685 = bitcast %union.anon* %7097 to i64*
  %7098 = load i64, i64* %RBP.i685
  %7099 = sub i64 %7098, 8
  %7100 = load i64, i64* %PC.i683
  %7101 = add i64 %7100, 3
  store i64 %7101, i64* %PC.i683
  %7102 = inttoptr i64 %7099 to i32*
  %7103 = load i32, i32* %7102
  %7104 = zext i32 %7103 to i64
  store i64 %7104, i64* %RAX.i684, align 8
  store %struct.Memory* %loadMem_44acf8, %struct.Memory** %MEMORY
  %loadMem_44acfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7106 = getelementptr inbounds %struct.GPR, %struct.GPR* %7105, i32 0, i32 33
  %7107 = getelementptr inbounds %struct.Reg, %struct.Reg* %7106, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %7107 to i64*
  %7108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7109 = getelementptr inbounds %struct.GPR, %struct.GPR* %7108, i32 0, i32 1
  %7110 = getelementptr inbounds %struct.Reg, %struct.Reg* %7109, i32 0, i32 0
  %EAX.i681 = bitcast %union.anon* %7110 to i32*
  %7111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7112 = getelementptr inbounds %struct.GPR, %struct.GPR* %7111, i32 0, i32 15
  %7113 = getelementptr inbounds %struct.Reg, %struct.Reg* %7112, i32 0, i32 0
  %RBP.i682 = bitcast %union.anon* %7113 to i64*
  %7114 = load i32, i32* %EAX.i681
  %7115 = zext i32 %7114 to i64
  %7116 = load i64, i64* %RBP.i682
  %7117 = sub i64 %7116, 36
  %7118 = load i64, i64* %PC.i680
  %7119 = add i64 %7118, 3
  store i64 %7119, i64* %PC.i680
  %7120 = inttoptr i64 %7117 to i32*
  %7121 = load i32, i32* %7120
  %7122 = sub i32 %7114, %7121
  %7123 = icmp ult i32 %7114, %7121
  %7124 = zext i1 %7123 to i8
  %7125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7124, i8* %7125, align 1
  %7126 = and i32 %7122, 255
  %7127 = call i32 @llvm.ctpop.i32(i32 %7126)
  %7128 = trunc i32 %7127 to i8
  %7129 = and i8 %7128, 1
  %7130 = xor i8 %7129, 1
  %7131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7130, i8* %7131, align 1
  %7132 = xor i32 %7121, %7114
  %7133 = xor i32 %7132, %7122
  %7134 = lshr i32 %7133, 4
  %7135 = trunc i32 %7134 to i8
  %7136 = and i8 %7135, 1
  %7137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7136, i8* %7137, align 1
  %7138 = icmp eq i32 %7122, 0
  %7139 = zext i1 %7138 to i8
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7139, i8* %7140, align 1
  %7141 = lshr i32 %7122, 31
  %7142 = trunc i32 %7141 to i8
  %7143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7142, i8* %7143, align 1
  %7144 = lshr i32 %7114, 31
  %7145 = lshr i32 %7121, 31
  %7146 = xor i32 %7145, %7144
  %7147 = xor i32 %7141, %7144
  %7148 = add i32 %7147, %7146
  %7149 = icmp eq i32 %7148, 2
  %7150 = zext i1 %7149 to i8
  %7151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7150, i8* %7151, align 1
  store %struct.Memory* %loadMem_44acfb, %struct.Memory** %MEMORY
  %loadMem_44acfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %7152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7153 = getelementptr inbounds %struct.GPR, %struct.GPR* %7152, i32 0, i32 33
  %7154 = getelementptr inbounds %struct.Reg, %struct.Reg* %7153, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %7154 to i64*
  %7155 = load i64, i64* %PC.i679
  %7156 = add i64 %7155, 578
  %7157 = load i64, i64* %PC.i679
  %7158 = add i64 %7157, 6
  %7159 = load i64, i64* %PC.i679
  %7160 = add i64 %7159, 6
  store i64 %7160, i64* %PC.i679
  %7161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7162 = load i8, i8* %7161, align 1
  %7163 = icmp ne i8 %7162, 0
  %7164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7165 = load i8, i8* %7164, align 1
  %7166 = icmp ne i8 %7165, 0
  %7167 = xor i1 %7163, %7166
  %7168 = xor i1 %7167, true
  %7169 = zext i1 %7168 to i8
  store i8 %7169, i8* %BRANCH_TAKEN, align 1
  %7170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7171 = select i1 %7167, i64 %7158, i64 %7156
  store i64 %7171, i64* %7170, align 8
  store %struct.Memory* %loadMem_44acfe, %struct.Memory** %MEMORY
  %loadBr_44acfe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44acfe = icmp eq i8 %loadBr_44acfe, 1
  br i1 %cmpBr_44acfe, label %block_.L_44af40, label %block_44ad04

block_44ad04:                                     ; preds = %block_44acf8
  %loadMem_44ad04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7173 = getelementptr inbounds %struct.GPR, %struct.GPR* %7172, i32 0, i32 33
  %7174 = getelementptr inbounds %struct.Reg, %struct.Reg* %7173, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %7174 to i64*
  %7175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7176 = getelementptr inbounds %struct.GPR, %struct.GPR* %7175, i32 0, i32 15
  %7177 = getelementptr inbounds %struct.Reg, %struct.Reg* %7176, i32 0, i32 0
  %RBP.i678 = bitcast %union.anon* %7177 to i64*
  %7178 = load i64, i64* %RBP.i678
  %7179 = sub i64 %7178, 12
  %7180 = load i64, i64* %PC.i677
  %7181 = add i64 %7180, 4
  store i64 %7181, i64* %PC.i677
  %7182 = inttoptr i64 %7179 to i32*
  %7183 = load i32, i32* %7182
  %7184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7184, align 1
  %7185 = and i32 %7183, 255
  %7186 = call i32 @llvm.ctpop.i32(i32 %7185)
  %7187 = trunc i32 %7186 to i8
  %7188 = and i8 %7187, 1
  %7189 = xor i8 %7188, 1
  %7190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7189, i8* %7190, align 1
  %7191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7191, align 1
  %7192 = icmp eq i32 %7183, 0
  %7193 = zext i1 %7192 to i8
  %7194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7193, i8* %7194, align 1
  %7195 = lshr i32 %7183, 31
  %7196 = trunc i32 %7195 to i8
  %7197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7196, i8* %7197, align 1
  %7198 = lshr i32 %7183, 31
  %7199 = xor i32 %7195, %7198
  %7200 = add i32 %7199, %7198
  %7201 = icmp eq i32 %7200, 2
  %7202 = zext i1 %7201 to i8
  %7203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7202, i8* %7203, align 1
  store %struct.Memory* %loadMem_44ad04, %struct.Memory** %MEMORY
  %loadMem_44ad08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7205 = getelementptr inbounds %struct.GPR, %struct.GPR* %7204, i32 0, i32 33
  %7206 = getelementptr inbounds %struct.Reg, %struct.Reg* %7205, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %7206 to i64*
  %7207 = load i64, i64* %PC.i676
  %7208 = add i64 %7207, 430
  %7209 = load i64, i64* %PC.i676
  %7210 = add i64 %7209, 6
  %7211 = load i64, i64* %PC.i676
  %7212 = add i64 %7211, 6
  store i64 %7212, i64* %PC.i676
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7214 = load i8, i8* %7213, align 1
  %7215 = icmp ne i8 %7214, 0
  %7216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7217 = load i8, i8* %7216, align 1
  %7218 = icmp ne i8 %7217, 0
  %7219 = xor i1 %7215, %7218
  %7220 = xor i1 %7219, true
  %7221 = zext i1 %7220 to i8
  store i8 %7221, i8* %BRANCH_TAKEN, align 1
  %7222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7223 = select i1 %7219, i64 %7210, i64 %7208
  store i64 %7223, i64* %7222, align 8
  store %struct.Memory* %loadMem_44ad08, %struct.Memory** %MEMORY
  %loadBr_44ad08 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ad08 = icmp eq i8 %loadBr_44ad08, 1
  br i1 %cmpBr_44ad08, label %block_.L_44aeb6, label %block_44ad0e

block_44ad0e:                                     ; preds = %block_44ad04
  %loadMem_44ad0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7225 = getelementptr inbounds %struct.GPR, %struct.GPR* %7224, i32 0, i32 33
  %7226 = getelementptr inbounds %struct.Reg, %struct.Reg* %7225, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %7226 to i64*
  %7227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7228 = getelementptr inbounds %struct.GPR, %struct.GPR* %7227, i32 0, i32 1
  %7229 = getelementptr inbounds %struct.Reg, %struct.Reg* %7228, i32 0, i32 0
  %RAX.i674 = bitcast %union.anon* %7229 to i64*
  %7230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7231 = getelementptr inbounds %struct.GPR, %struct.GPR* %7230, i32 0, i32 15
  %7232 = getelementptr inbounds %struct.Reg, %struct.Reg* %7231, i32 0, i32 0
  %RBP.i675 = bitcast %union.anon* %7232 to i64*
  %7233 = load i64, i64* %RBP.i675
  %7234 = sub i64 %7233, 32
  %7235 = load i64, i64* %PC.i673
  %7236 = add i64 %7235, 4
  store i64 %7236, i64* %PC.i673
  %7237 = inttoptr i64 %7234 to i64*
  %7238 = load i64, i64* %7237
  store i64 %7238, i64* %RAX.i674, align 8
  store %struct.Memory* %loadMem_44ad0e, %struct.Memory** %MEMORY
  %loadMem_44ad12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7240 = getelementptr inbounds %struct.GPR, %struct.GPR* %7239, i32 0, i32 33
  %7241 = getelementptr inbounds %struct.Reg, %struct.Reg* %7240, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %7241 to i64*
  %7242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7243 = getelementptr inbounds %struct.GPR, %struct.GPR* %7242, i32 0, i32 1
  %7244 = getelementptr inbounds %struct.Reg, %struct.Reg* %7243, i32 0, i32 0
  %RAX.i672 = bitcast %union.anon* %7244 to i64*
  %7245 = load i64, i64* %RAX.i672
  %7246 = add i64 %7245, 532
  %7247 = load i64, i64* %PC.i671
  %7248 = add i64 %7247, 7
  store i64 %7248, i64* %PC.i671
  %7249 = inttoptr i64 %7246 to i32*
  %7250 = load i32, i32* %7249
  %7251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7251, align 1
  %7252 = and i32 %7250, 255
  %7253 = call i32 @llvm.ctpop.i32(i32 %7252)
  %7254 = trunc i32 %7253 to i8
  %7255 = and i8 %7254, 1
  %7256 = xor i8 %7255, 1
  %7257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7256, i8* %7257, align 1
  %7258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7258, align 1
  %7259 = icmp eq i32 %7250, 0
  %7260 = zext i1 %7259 to i8
  %7261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7260, i8* %7261, align 1
  %7262 = lshr i32 %7250, 31
  %7263 = trunc i32 %7262 to i8
  %7264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7263, i8* %7264, align 1
  %7265 = lshr i32 %7250, 31
  %7266 = xor i32 %7262, %7265
  %7267 = add i32 %7266, %7265
  %7268 = icmp eq i32 %7267, 2
  %7269 = zext i1 %7268 to i8
  %7270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7269, i8* %7270, align 1
  store %struct.Memory* %loadMem_44ad12, %struct.Memory** %MEMORY
  %loadMem_44ad19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7272 = getelementptr inbounds %struct.GPR, %struct.GPR* %7271, i32 0, i32 33
  %7273 = getelementptr inbounds %struct.Reg, %struct.Reg* %7272, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %7273 to i64*
  %7274 = load i64, i64* %PC.i670
  %7275 = add i64 %7274, 204
  %7276 = load i64, i64* %PC.i670
  %7277 = add i64 %7276, 6
  %7278 = load i64, i64* %PC.i670
  %7279 = add i64 %7278, 6
  store i64 %7279, i64* %PC.i670
  %7280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7281 = load i8, i8* %7280, align 1
  %7282 = icmp eq i8 %7281, 0
  %7283 = zext i1 %7282 to i8
  store i8 %7283, i8* %BRANCH_TAKEN, align 1
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7285 = select i1 %7282, i64 %7275, i64 %7277
  store i64 %7285, i64* %7284, align 8
  store %struct.Memory* %loadMem_44ad19, %struct.Memory** %MEMORY
  %loadBr_44ad19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ad19 = icmp eq i8 %loadBr_44ad19, 1
  br i1 %cmpBr_44ad19, label %block_.L_44ade5, label %block_44ad1f

block_44ad1f:                                     ; preds = %block_44ad0e
  %loadMem_44ad1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7287 = getelementptr inbounds %struct.GPR, %struct.GPR* %7286, i32 0, i32 33
  %7288 = getelementptr inbounds %struct.Reg, %struct.Reg* %7287, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %7288 to i64*
  %7289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7290 = getelementptr inbounds %struct.GPR, %struct.GPR* %7289, i32 0, i32 1
  %7291 = getelementptr inbounds %struct.Reg, %struct.Reg* %7290, i32 0, i32 0
  %RAX.i668 = bitcast %union.anon* %7291 to i64*
  %7292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7293 = getelementptr inbounds %struct.GPR, %struct.GPR* %7292, i32 0, i32 15
  %7294 = getelementptr inbounds %struct.Reg, %struct.Reg* %7293, i32 0, i32 0
  %RBP.i669 = bitcast %union.anon* %7294 to i64*
  %7295 = load i64, i64* %RBP.i669
  %7296 = sub i64 %7295, 4
  %7297 = load i64, i64* %PC.i667
  %7298 = add i64 %7297, 3
  store i64 %7298, i64* %PC.i667
  %7299 = inttoptr i64 %7296 to i32*
  %7300 = load i32, i32* %7299
  %7301 = zext i32 %7300 to i64
  store i64 %7301, i64* %RAX.i668, align 8
  store %struct.Memory* %loadMem_44ad1f, %struct.Memory** %MEMORY
  %loadMem_44ad22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7303 = getelementptr inbounds %struct.GPR, %struct.GPR* %7302, i32 0, i32 33
  %7304 = getelementptr inbounds %struct.Reg, %struct.Reg* %7303, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %7304 to i64*
  %7305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7306 = getelementptr inbounds %struct.GPR, %struct.GPR* %7305, i32 0, i32 1
  %7307 = getelementptr inbounds %struct.Reg, %struct.Reg* %7306, i32 0, i32 0
  %RAX.i666 = bitcast %union.anon* %7307 to i64*
  %7308 = load i64, i64* %RAX.i666
  %7309 = load i64, i64* %PC.i665
  %7310 = add i64 %7309, 3
  store i64 %7310, i64* %PC.i665
  %7311 = and i64 1, %7308
  %7312 = trunc i64 %7311 to i32
  store i64 %7311, i64* %RAX.i666, align 8
  %7313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7313, align 1
  %7314 = and i32 %7312, 255
  %7315 = call i32 @llvm.ctpop.i32(i32 %7314)
  %7316 = trunc i32 %7315 to i8
  %7317 = and i8 %7316, 1
  %7318 = xor i8 %7317, 1
  %7319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7318, i8* %7319, align 1
  %7320 = icmp eq i32 %7312, 0
  %7321 = zext i1 %7320 to i8
  %7322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7321, i8* %7322, align 1
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7323, align 1
  %7324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7324, align 1
  %7325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7325, align 1
  store %struct.Memory* %loadMem_44ad22, %struct.Memory** %MEMORY
  %loadMem_44ad25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7327 = getelementptr inbounds %struct.GPR, %struct.GPR* %7326, i32 0, i32 33
  %7328 = getelementptr inbounds %struct.Reg, %struct.Reg* %7327, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %7328 to i64*
  %7329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7330 = getelementptr inbounds %struct.GPR, %struct.GPR* %7329, i32 0, i32 1
  %7331 = getelementptr inbounds %struct.Reg, %struct.Reg* %7330, i32 0, i32 0
  %EAX.i664 = bitcast %union.anon* %7331 to i32*
  %7332 = load i32, i32* %EAX.i664
  %7333 = zext i32 %7332 to i64
  %7334 = load i64, i64* %PC.i663
  %7335 = add i64 %7334, 3
  store i64 %7335, i64* %PC.i663
  %7336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7336, align 1
  %7337 = and i32 %7332, 255
  %7338 = call i32 @llvm.ctpop.i32(i32 %7337)
  %7339 = trunc i32 %7338 to i8
  %7340 = and i8 %7339, 1
  %7341 = xor i8 %7340, 1
  %7342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7341, i8* %7342, align 1
  %7343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7343, align 1
  %7344 = icmp eq i32 %7332, 0
  %7345 = zext i1 %7344 to i8
  %7346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7345, i8* %7346, align 1
  %7347 = lshr i32 %7332, 31
  %7348 = trunc i32 %7347 to i8
  %7349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7348, i8* %7349, align 1
  %7350 = lshr i32 %7332, 31
  %7351 = xor i32 %7347, %7350
  %7352 = add i32 %7351, %7350
  %7353 = icmp eq i32 %7352, 2
  %7354 = zext i1 %7353 to i8
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7354, i8* %7355, align 1
  store %struct.Memory* %loadMem_44ad25, %struct.Memory** %MEMORY
  %loadMem_44ad28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7357 = getelementptr inbounds %struct.GPR, %struct.GPR* %7356, i32 0, i32 33
  %7358 = getelementptr inbounds %struct.Reg, %struct.Reg* %7357, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %7358 to i64*
  %7359 = load i64, i64* %PC.i662
  %7360 = add i64 %7359, 155
  %7361 = load i64, i64* %PC.i662
  %7362 = add i64 %7361, 6
  %7363 = load i64, i64* %PC.i662
  %7364 = add i64 %7363, 6
  store i64 %7364, i64* %PC.i662
  %7365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7366 = load i8, i8* %7365, align 1
  %7367 = icmp eq i8 %7366, 0
  %7368 = zext i1 %7367 to i8
  store i8 %7368, i8* %BRANCH_TAKEN, align 1
  %7369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7370 = select i1 %7367, i64 %7360, i64 %7362
  store i64 %7370, i64* %7369, align 8
  store %struct.Memory* %loadMem_44ad28, %struct.Memory** %MEMORY
  %loadBr_44ad28 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ad28 = icmp eq i8 %loadBr_44ad28, 1
  br i1 %cmpBr_44ad28, label %block_.L_44adc3, label %block_44ad2e

block_44ad2e:                                     ; preds = %block_44ad1f
  %loadMem_44ad2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7372 = getelementptr inbounds %struct.GPR, %struct.GPR* %7371, i32 0, i32 33
  %7373 = getelementptr inbounds %struct.Reg, %struct.Reg* %7372, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %7373 to i64*
  %7374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7375 = getelementptr inbounds %struct.GPR, %struct.GPR* %7374, i32 0, i32 1
  %7376 = getelementptr inbounds %struct.Reg, %struct.Reg* %7375, i32 0, i32 0
  %RAX.i660 = bitcast %union.anon* %7376 to i64*
  %7377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7378 = getelementptr inbounds %struct.GPR, %struct.GPR* %7377, i32 0, i32 15
  %7379 = getelementptr inbounds %struct.Reg, %struct.Reg* %7378, i32 0, i32 0
  %RBP.i661 = bitcast %union.anon* %7379 to i64*
  %7380 = load i64, i64* %RBP.i661
  %7381 = sub i64 %7380, 32
  %7382 = load i64, i64* %PC.i659
  %7383 = add i64 %7382, 4
  store i64 %7383, i64* %PC.i659
  %7384 = inttoptr i64 %7381 to i64*
  %7385 = load i64, i64* %7384
  store i64 %7385, i64* %RAX.i660, align 8
  store %struct.Memory* %loadMem_44ad2e, %struct.Memory** %MEMORY
  %loadMem_44ad32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7387 = getelementptr inbounds %struct.GPR, %struct.GPR* %7386, i32 0, i32 33
  %7388 = getelementptr inbounds %struct.Reg, %struct.Reg* %7387, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %7388 to i64*
  %7389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7390 = getelementptr inbounds %struct.GPR, %struct.GPR* %7389, i32 0, i32 1
  %7391 = getelementptr inbounds %struct.Reg, %struct.Reg* %7390, i32 0, i32 0
  %RAX.i657 = bitcast %union.anon* %7391 to i64*
  %7392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7393 = getelementptr inbounds %struct.GPR, %struct.GPR* %7392, i32 0, i32 5
  %7394 = getelementptr inbounds %struct.Reg, %struct.Reg* %7393, i32 0, i32 0
  %RCX.i658 = bitcast %union.anon* %7394 to i64*
  %7395 = load i64, i64* %RAX.i657
  %7396 = add i64 %7395, 540
  %7397 = load i64, i64* %PC.i656
  %7398 = add i64 %7397, 6
  store i64 %7398, i64* %PC.i656
  %7399 = inttoptr i64 %7396 to i32*
  %7400 = load i32, i32* %7399
  %7401 = zext i32 %7400 to i64
  store i64 %7401, i64* %RCX.i658, align 8
  store %struct.Memory* %loadMem_44ad32, %struct.Memory** %MEMORY
  %loadMem_44ad38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7403 = getelementptr inbounds %struct.GPR, %struct.GPR* %7402, i32 0, i32 33
  %7404 = getelementptr inbounds %struct.Reg, %struct.Reg* %7403, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %7404 to i64*
  %7405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7406 = getelementptr inbounds %struct.GPR, %struct.GPR* %7405, i32 0, i32 1
  %7407 = getelementptr inbounds %struct.Reg, %struct.Reg* %7406, i32 0, i32 0
  %RAX.i654 = bitcast %union.anon* %7407 to i64*
  %7408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7409 = getelementptr inbounds %struct.GPR, %struct.GPR* %7408, i32 0, i32 15
  %7410 = getelementptr inbounds %struct.Reg, %struct.Reg* %7409, i32 0, i32 0
  %RBP.i655 = bitcast %union.anon* %7410 to i64*
  %7411 = load i64, i64* %RBP.i655
  %7412 = sub i64 %7411, 24
  %7413 = load i64, i64* %PC.i653
  %7414 = add i64 %7413, 4
  store i64 %7414, i64* %PC.i653
  %7415 = inttoptr i64 %7412 to i64*
  %7416 = load i64, i64* %7415
  store i64 %7416, i64* %RAX.i654, align 8
  store %struct.Memory* %loadMem_44ad38, %struct.Memory** %MEMORY
  %loadMem_44ad3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7418 = getelementptr inbounds %struct.GPR, %struct.GPR* %7417, i32 0, i32 33
  %7419 = getelementptr inbounds %struct.Reg, %struct.Reg* %7418, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %7419 to i64*
  %7420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7421 = getelementptr inbounds %struct.GPR, %struct.GPR* %7420, i32 0, i32 5
  %7422 = getelementptr inbounds %struct.Reg, %struct.Reg* %7421, i32 0, i32 0
  %ECX.i651 = bitcast %union.anon* %7422 to i32*
  %7423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7424 = getelementptr inbounds %struct.GPR, %struct.GPR* %7423, i32 0, i32 1
  %7425 = getelementptr inbounds %struct.Reg, %struct.Reg* %7424, i32 0, i32 0
  %RAX.i652 = bitcast %union.anon* %7425 to i64*
  %7426 = load i64, i64* %RAX.i652
  %7427 = add i64 %7426, 4
  %7428 = load i32, i32* %ECX.i651
  %7429 = zext i32 %7428 to i64
  %7430 = load i64, i64* %PC.i650
  %7431 = add i64 %7430, 3
  store i64 %7431, i64* %PC.i650
  %7432 = inttoptr i64 %7427 to i32*
  store i32 %7428, i32* %7432
  store %struct.Memory* %loadMem_44ad3c, %struct.Memory** %MEMORY
  %loadMem_44ad3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7434 = getelementptr inbounds %struct.GPR, %struct.GPR* %7433, i32 0, i32 33
  %7435 = getelementptr inbounds %struct.Reg, %struct.Reg* %7434, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %7435 to i64*
  %7436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7437 = getelementptr inbounds %struct.GPR, %struct.GPR* %7436, i32 0, i32 1
  %7438 = getelementptr inbounds %struct.Reg, %struct.Reg* %7437, i32 0, i32 0
  %RAX.i648 = bitcast %union.anon* %7438 to i64*
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7440 = getelementptr inbounds %struct.GPR, %struct.GPR* %7439, i32 0, i32 15
  %7441 = getelementptr inbounds %struct.Reg, %struct.Reg* %7440, i32 0, i32 0
  %RBP.i649 = bitcast %union.anon* %7441 to i64*
  %7442 = load i64, i64* %RBP.i649
  %7443 = sub i64 %7442, 32
  %7444 = load i64, i64* %PC.i647
  %7445 = add i64 %7444, 4
  store i64 %7445, i64* %PC.i647
  %7446 = inttoptr i64 %7443 to i64*
  %7447 = load i64, i64* %7446
  store i64 %7447, i64* %RAX.i648, align 8
  store %struct.Memory* %loadMem_44ad3f, %struct.Memory** %MEMORY
  %loadMem_44ad43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7449 = getelementptr inbounds %struct.GPR, %struct.GPR* %7448, i32 0, i32 33
  %7450 = getelementptr inbounds %struct.Reg, %struct.Reg* %7449, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %7450 to i64*
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7452 = getelementptr inbounds %struct.GPR, %struct.GPR* %7451, i32 0, i32 1
  %7453 = getelementptr inbounds %struct.Reg, %struct.Reg* %7452, i32 0, i32 0
  %RAX.i646 = bitcast %union.anon* %7453 to i64*
  %7454 = load i64, i64* %RAX.i646
  %7455 = add i64 %7454, 556
  %7456 = load i64, i64* %PC.i645
  %7457 = add i64 %7456, 7
  store i64 %7457, i64* %PC.i645
  %7458 = inttoptr i64 %7455 to i32*
  %7459 = load i32, i32* %7458
  %7460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7460, align 1
  %7461 = and i32 %7459, 255
  %7462 = call i32 @llvm.ctpop.i32(i32 %7461)
  %7463 = trunc i32 %7462 to i8
  %7464 = and i8 %7463, 1
  %7465 = xor i8 %7464, 1
  %7466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7465, i8* %7466, align 1
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7467, align 1
  %7468 = icmp eq i32 %7459, 0
  %7469 = zext i1 %7468 to i8
  %7470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7469, i8* %7470, align 1
  %7471 = lshr i32 %7459, 31
  %7472 = trunc i32 %7471 to i8
  %7473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7472, i8* %7473, align 1
  %7474 = lshr i32 %7459, 31
  %7475 = xor i32 %7471, %7474
  %7476 = add i32 %7475, %7474
  %7477 = icmp eq i32 %7476, 2
  %7478 = zext i1 %7477 to i8
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7478, i8* %7479, align 1
  store %struct.Memory* %loadMem_44ad43, %struct.Memory** %MEMORY
  %loadMem_44ad4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7481 = getelementptr inbounds %struct.GPR, %struct.GPR* %7480, i32 0, i32 33
  %7482 = getelementptr inbounds %struct.Reg, %struct.Reg* %7481, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %7482 to i64*
  %7483 = load i64, i64* %PC.i644
  %7484 = add i64 %7483, 94
  %7485 = load i64, i64* %PC.i644
  %7486 = add i64 %7485, 6
  %7487 = load i64, i64* %PC.i644
  %7488 = add i64 %7487, 6
  store i64 %7488, i64* %PC.i644
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7490 = load i8, i8* %7489, align 1
  store i8 %7490, i8* %BRANCH_TAKEN, align 1
  %7491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7492 = icmp ne i8 %7490, 0
  %7493 = select i1 %7492, i64 %7484, i64 %7486
  store i64 %7493, i64* %7491, align 8
  store %struct.Memory* %loadMem_44ad4a, %struct.Memory** %MEMORY
  %loadBr_44ad4a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ad4a = icmp eq i8 %loadBr_44ad4a, 1
  br i1 %cmpBr_44ad4a, label %block_.L_44ada8, label %block_44ad50

block_44ad50:                                     ; preds = %block_44ad2e
  %loadMem_44ad50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7495 = getelementptr inbounds %struct.GPR, %struct.GPR* %7494, i32 0, i32 33
  %7496 = getelementptr inbounds %struct.Reg, %struct.Reg* %7495, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %7496 to i64*
  %7497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7498 = getelementptr inbounds %struct.GPR, %struct.GPR* %7497, i32 0, i32 1
  %7499 = getelementptr inbounds %struct.Reg, %struct.Reg* %7498, i32 0, i32 0
  %RAX.i643 = bitcast %union.anon* %7499 to i64*
  %7500 = load i64, i64* %PC.i642
  %7501 = add i64 %7500, 8
  store i64 %7501, i64* %PC.i642
  %7502 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7502, i64* %RAX.i643, align 8
  store %struct.Memory* %loadMem_44ad50, %struct.Memory** %MEMORY
  %loadMem_44ad58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7504 = getelementptr inbounds %struct.GPR, %struct.GPR* %7503, i32 0, i32 33
  %7505 = getelementptr inbounds %struct.Reg, %struct.Reg* %7504, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %7505 to i64*
  %7506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7507 = getelementptr inbounds %struct.GPR, %struct.GPR* %7506, i32 0, i32 1
  %7508 = getelementptr inbounds %struct.Reg, %struct.Reg* %7507, i32 0, i32 0
  %RAX.i641 = bitcast %union.anon* %7508 to i64*
  %7509 = load i64, i64* %RAX.i641
  %7510 = add i64 %7509, 72636
  %7511 = load i64, i64* %PC.i640
  %7512 = add i64 %7511, 7
  store i64 %7512, i64* %PC.i640
  %7513 = inttoptr i64 %7510 to i32*
  %7514 = load i32, i32* %7513
  %7515 = sub i32 %7514, 1
  %7516 = icmp ult i32 %7514, 1
  %7517 = zext i1 %7516 to i8
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7517, i8* %7518, align 1
  %7519 = and i32 %7515, 255
  %7520 = call i32 @llvm.ctpop.i32(i32 %7519)
  %7521 = trunc i32 %7520 to i8
  %7522 = and i8 %7521, 1
  %7523 = xor i8 %7522, 1
  %7524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7523, i8* %7524, align 1
  %7525 = xor i32 %7514, 1
  %7526 = xor i32 %7525, %7515
  %7527 = lshr i32 %7526, 4
  %7528 = trunc i32 %7527 to i8
  %7529 = and i8 %7528, 1
  %7530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7529, i8* %7530, align 1
  %7531 = icmp eq i32 %7515, 0
  %7532 = zext i1 %7531 to i8
  %7533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7532, i8* %7533, align 1
  %7534 = lshr i32 %7515, 31
  %7535 = trunc i32 %7534 to i8
  %7536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7535, i8* %7536, align 1
  %7537 = lshr i32 %7514, 31
  %7538 = xor i32 %7534, %7537
  %7539 = add i32 %7538, %7537
  %7540 = icmp eq i32 %7539, 2
  %7541 = zext i1 %7540 to i8
  %7542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7541, i8* %7542, align 1
  store %struct.Memory* %loadMem_44ad58, %struct.Memory** %MEMORY
  %loadMem_44ad5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7544 = getelementptr inbounds %struct.GPR, %struct.GPR* %7543, i32 0, i32 33
  %7545 = getelementptr inbounds %struct.Reg, %struct.Reg* %7544, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %7545 to i64*
  %7546 = load i64, i64* %PC.i639
  %7547 = add i64 %7546, 55
  %7548 = load i64, i64* %PC.i639
  %7549 = add i64 %7548, 6
  %7550 = load i64, i64* %PC.i639
  %7551 = add i64 %7550, 6
  store i64 %7551, i64* %PC.i639
  %7552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7553 = load i8, i8* %7552, align 1
  %7554 = icmp eq i8 %7553, 0
  %7555 = zext i1 %7554 to i8
  store i8 %7555, i8* %BRANCH_TAKEN, align 1
  %7556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7557 = select i1 %7554, i64 %7547, i64 %7549
  store i64 %7557, i64* %7556, align 8
  store %struct.Memory* %loadMem_44ad5f, %struct.Memory** %MEMORY
  %loadBr_44ad5f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ad5f = icmp eq i8 %loadBr_44ad5f, 1
  br i1 %cmpBr_44ad5f, label %block_.L_44ad96, label %block_44ad65

block_44ad65:                                     ; preds = %block_44ad50
  %loadMem_44ad65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7559 = getelementptr inbounds %struct.GPR, %struct.GPR* %7558, i32 0, i32 33
  %7560 = getelementptr inbounds %struct.Reg, %struct.Reg* %7559, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %7560 to i64*
  %7561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7562 = getelementptr inbounds %struct.GPR, %struct.GPR* %7561, i32 0, i32 1
  %7563 = getelementptr inbounds %struct.Reg, %struct.Reg* %7562, i32 0, i32 0
  %RAX.i638 = bitcast %union.anon* %7563 to i64*
  %7564 = load i64, i64* %PC.i637
  %7565 = add i64 %7564, 8
  store i64 %7565, i64* %PC.i637
  %7566 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7566, i64* %RAX.i638, align 8
  store %struct.Memory* %loadMem_44ad65, %struct.Memory** %MEMORY
  %loadMem_44ad6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7568 = getelementptr inbounds %struct.GPR, %struct.GPR* %7567, i32 0, i32 33
  %7569 = getelementptr inbounds %struct.Reg, %struct.Reg* %7568, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %7569 to i64*
  %7570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7571 = getelementptr inbounds %struct.GPR, %struct.GPR* %7570, i32 0, i32 1
  %7572 = getelementptr inbounds %struct.Reg, %struct.Reg* %7571, i32 0, i32 0
  %RAX.i636 = bitcast %union.anon* %7572 to i64*
  %7573 = load i64, i64* %RAX.i636
  %7574 = add i64 %7573, 14168
  %7575 = load i64, i64* %PC.i635
  %7576 = add i64 %7575, 7
  store i64 %7576, i64* %PC.i635
  %7577 = inttoptr i64 %7574 to i64*
  %7578 = load i64, i64* %7577
  store i64 %7578, i64* %RAX.i636, align 8
  store %struct.Memory* %loadMem_44ad6d, %struct.Memory** %MEMORY
  %loadMem_44ad74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7580 = getelementptr inbounds %struct.GPR, %struct.GPR* %7579, i32 0, i32 33
  %7581 = getelementptr inbounds %struct.Reg, %struct.Reg* %7580, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %7581 to i64*
  %7582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7583 = getelementptr inbounds %struct.GPR, %struct.GPR* %7582, i32 0, i32 5
  %7584 = getelementptr inbounds %struct.Reg, %struct.Reg* %7583, i32 0, i32 0
  %RCX.i633 = bitcast %union.anon* %7584 to i64*
  %7585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7586 = getelementptr inbounds %struct.GPR, %struct.GPR* %7585, i32 0, i32 15
  %7587 = getelementptr inbounds %struct.Reg, %struct.Reg* %7586, i32 0, i32 0
  %RBP.i634 = bitcast %union.anon* %7587 to i64*
  %7588 = load i64, i64* %RBP.i634
  %7589 = sub i64 %7588, 32
  %7590 = load i64, i64* %PC.i632
  %7591 = add i64 %7590, 4
  store i64 %7591, i64* %PC.i632
  %7592 = inttoptr i64 %7589 to i64*
  %7593 = load i64, i64* %7592
  store i64 %7593, i64* %RCX.i633, align 8
  store %struct.Memory* %loadMem_44ad74, %struct.Memory** %MEMORY
  %loadMem_44ad78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7595 = getelementptr inbounds %struct.GPR, %struct.GPR* %7594, i32 0, i32 33
  %7596 = getelementptr inbounds %struct.Reg, %struct.Reg* %7595, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %7596 to i64*
  %7597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7598 = getelementptr inbounds %struct.GPR, %struct.GPR* %7597, i32 0, i32 5
  %7599 = getelementptr inbounds %struct.Reg, %struct.Reg* %7598, i32 0, i32 0
  %RCX.i631 = bitcast %union.anon* %7599 to i64*
  %7600 = load i64, i64* %RCX.i631
  %7601 = add i64 %7600, 540
  %7602 = load i64, i64* %PC.i630
  %7603 = add i64 %7602, 7
  store i64 %7603, i64* %PC.i630
  %7604 = inttoptr i64 %7601 to i32*
  %7605 = load i32, i32* %7604
  %7606 = sext i32 %7605 to i64
  store i64 %7606, i64* %RCX.i631, align 8
  store %struct.Memory* %loadMem_44ad78, %struct.Memory** %MEMORY
  %loadMem_44ad7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7608 = getelementptr inbounds %struct.GPR, %struct.GPR* %7607, i32 0, i32 33
  %7609 = getelementptr inbounds %struct.Reg, %struct.Reg* %7608, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %7609 to i64*
  %7610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7611 = getelementptr inbounds %struct.GPR, %struct.GPR* %7610, i32 0, i32 5
  %7612 = getelementptr inbounds %struct.Reg, %struct.Reg* %7611, i32 0, i32 0
  %RCX.i629 = bitcast %union.anon* %7612 to i64*
  %7613 = load i64, i64* %RCX.i629
  %7614 = load i64, i64* %PC.i628
  %7615 = add i64 %7614, 7
  store i64 %7615, i64* %PC.i628
  %7616 = sext i64 %7613 to i128
  %7617 = and i128 %7616, -18446744073709551616
  %7618 = zext i64 %7613 to i128
  %7619 = or i128 %7617, %7618
  %7620 = mul i128 632, %7619
  %7621 = trunc i128 %7620 to i64
  store i64 %7621, i64* %RCX.i629, align 8
  %7622 = sext i64 %7621 to i128
  %7623 = icmp ne i128 %7622, %7620
  %7624 = zext i1 %7623 to i8
  %7625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7624, i8* %7625, align 1
  %7626 = trunc i128 %7620 to i32
  %7627 = and i32 %7626, 255
  %7628 = call i32 @llvm.ctpop.i32(i32 %7627)
  %7629 = trunc i32 %7628 to i8
  %7630 = and i8 %7629, 1
  %7631 = xor i8 %7630, 1
  %7632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7631, i8* %7632, align 1
  %7633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7633, align 1
  %7634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7634, align 1
  %7635 = lshr i64 %7621, 63
  %7636 = trunc i64 %7635 to i8
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7636, i8* %7637, align 1
  %7638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7624, i8* %7638, align 1
  store %struct.Memory* %loadMem_44ad7f, %struct.Memory** %MEMORY
  %loadMem_44ad86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7640 = getelementptr inbounds %struct.GPR, %struct.GPR* %7639, i32 0, i32 33
  %7641 = getelementptr inbounds %struct.Reg, %struct.Reg* %7640, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %7641 to i64*
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7643 = getelementptr inbounds %struct.GPR, %struct.GPR* %7642, i32 0, i32 1
  %7644 = getelementptr inbounds %struct.Reg, %struct.Reg* %7643, i32 0, i32 0
  %RAX.i626 = bitcast %union.anon* %7644 to i64*
  %7645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7646 = getelementptr inbounds %struct.GPR, %struct.GPR* %7645, i32 0, i32 5
  %7647 = getelementptr inbounds %struct.Reg, %struct.Reg* %7646, i32 0, i32 0
  %RCX.i627 = bitcast %union.anon* %7647 to i64*
  %7648 = load i64, i64* %RAX.i626
  %7649 = load i64, i64* %RCX.i627
  %7650 = load i64, i64* %PC.i625
  %7651 = add i64 %7650, 3
  store i64 %7651, i64* %PC.i625
  %7652 = add i64 %7649, %7648
  store i64 %7652, i64* %RAX.i626, align 8
  %7653 = icmp ult i64 %7652, %7648
  %7654 = icmp ult i64 %7652, %7649
  %7655 = or i1 %7653, %7654
  %7656 = zext i1 %7655 to i8
  %7657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7656, i8* %7657, align 1
  %7658 = trunc i64 %7652 to i32
  %7659 = and i32 %7658, 255
  %7660 = call i32 @llvm.ctpop.i32(i32 %7659)
  %7661 = trunc i32 %7660 to i8
  %7662 = and i8 %7661, 1
  %7663 = xor i8 %7662, 1
  %7664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7663, i8* %7664, align 1
  %7665 = xor i64 %7649, %7648
  %7666 = xor i64 %7665, %7652
  %7667 = lshr i64 %7666, 4
  %7668 = trunc i64 %7667 to i8
  %7669 = and i8 %7668, 1
  %7670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7669, i8* %7670, align 1
  %7671 = icmp eq i64 %7652, 0
  %7672 = zext i1 %7671 to i8
  %7673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7672, i8* %7673, align 1
  %7674 = lshr i64 %7652, 63
  %7675 = trunc i64 %7674 to i8
  %7676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7675, i8* %7676, align 1
  %7677 = lshr i64 %7648, 63
  %7678 = lshr i64 %7649, 63
  %7679 = xor i64 %7674, %7677
  %7680 = xor i64 %7674, %7678
  %7681 = add i64 %7679, %7680
  %7682 = icmp eq i64 %7681, 2
  %7683 = zext i1 %7682 to i8
  %7684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7683, i8* %7684, align 1
  store %struct.Memory* %loadMem_44ad86, %struct.Memory** %MEMORY
  %loadMem_44ad89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7686 = getelementptr inbounds %struct.GPR, %struct.GPR* %7685, i32 0, i32 33
  %7687 = getelementptr inbounds %struct.Reg, %struct.Reg* %7686, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %7687 to i64*
  %7688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7689 = getelementptr inbounds %struct.GPR, %struct.GPR* %7688, i32 0, i32 1
  %7690 = getelementptr inbounds %struct.Reg, %struct.Reg* %7689, i32 0, i32 0
  %RAX.i624 = bitcast %union.anon* %7690 to i64*
  %7691 = load i64, i64* %RAX.i624
  %7692 = add i64 %7691, 532
  %7693 = load i64, i64* %PC.i623
  %7694 = add i64 %7693, 7
  store i64 %7694, i64* %PC.i623
  %7695 = inttoptr i64 %7692 to i32*
  %7696 = load i32, i32* %7695
  %7697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7697, align 1
  %7698 = and i32 %7696, 255
  %7699 = call i32 @llvm.ctpop.i32(i32 %7698)
  %7700 = trunc i32 %7699 to i8
  %7701 = and i8 %7700, 1
  %7702 = xor i8 %7701, 1
  %7703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7702, i8* %7703, align 1
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7704, align 1
  %7705 = icmp eq i32 %7696, 0
  %7706 = zext i1 %7705 to i8
  %7707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7706, i8* %7707, align 1
  %7708 = lshr i32 %7696, 31
  %7709 = trunc i32 %7708 to i8
  %7710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7709, i8* %7710, align 1
  %7711 = lshr i32 %7696, 31
  %7712 = xor i32 %7708, %7711
  %7713 = add i32 %7712, %7711
  %7714 = icmp eq i32 %7713, 2
  %7715 = zext i1 %7714 to i8
  %7716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7715, i8* %7716, align 1
  store %struct.Memory* %loadMem_44ad89, %struct.Memory** %MEMORY
  %loadMem_44ad90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7718 = getelementptr inbounds %struct.GPR, %struct.GPR* %7717, i32 0, i32 33
  %7719 = getelementptr inbounds %struct.Reg, %struct.Reg* %7718, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %7719 to i64*
  %7720 = load i64, i64* %PC.i622
  %7721 = add i64 %7720, 19
  %7722 = load i64, i64* %PC.i622
  %7723 = add i64 %7722, 6
  %7724 = load i64, i64* %PC.i622
  %7725 = add i64 %7724, 6
  store i64 %7725, i64* %PC.i622
  %7726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7727 = load i8, i8* %7726, align 1
  %7728 = icmp eq i8 %7727, 0
  %7729 = zext i1 %7728 to i8
  store i8 %7729, i8* %BRANCH_TAKEN, align 1
  %7730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7731 = select i1 %7728, i64 %7721, i64 %7723
  store i64 %7731, i64* %7730, align 8
  store %struct.Memory* %loadMem_44ad90, %struct.Memory** %MEMORY
  %loadBr_44ad90 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ad90 = icmp eq i8 %loadBr_44ad90, 1
  br i1 %cmpBr_44ad90, label %block_.L_44ada3, label %block_.L_44ad96

block_.L_44ad96:                                  ; preds = %block_44ad65, %block_44ad50
  %loadMem_44ad96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7733 = getelementptr inbounds %struct.GPR, %struct.GPR* %7732, i32 0, i32 33
  %7734 = getelementptr inbounds %struct.Reg, %struct.Reg* %7733, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %7734 to i64*
  %7735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7736 = getelementptr inbounds %struct.GPR, %struct.GPR* %7735, i32 0, i32 1
  %7737 = getelementptr inbounds %struct.Reg, %struct.Reg* %7736, i32 0, i32 0
  %RAX.i620 = bitcast %union.anon* %7737 to i64*
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7739 = getelementptr inbounds %struct.GPR, %struct.GPR* %7738, i32 0, i32 15
  %7740 = getelementptr inbounds %struct.Reg, %struct.Reg* %7739, i32 0, i32 0
  %RBP.i621 = bitcast %union.anon* %7740 to i64*
  %7741 = load i64, i64* %RBP.i621
  %7742 = sub i64 %7741, 24
  %7743 = load i64, i64* %PC.i619
  %7744 = add i64 %7743, 4
  store i64 %7744, i64* %PC.i619
  %7745 = inttoptr i64 %7742 to i64*
  %7746 = load i64, i64* %7745
  store i64 %7746, i64* %RAX.i620, align 8
  store %struct.Memory* %loadMem_44ad96, %struct.Memory** %MEMORY
  %loadMem_44ad9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7748 = getelementptr inbounds %struct.GPR, %struct.GPR* %7747, i32 0, i32 33
  %7749 = getelementptr inbounds %struct.Reg, %struct.Reg* %7748, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %7749 to i64*
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7751 = getelementptr inbounds %struct.GPR, %struct.GPR* %7750, i32 0, i32 1
  %7752 = getelementptr inbounds %struct.Reg, %struct.Reg* %7751, i32 0, i32 0
  %RAX.i617 = bitcast %union.anon* %7752 to i64*
  %7753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7754 = getelementptr inbounds %struct.GPR, %struct.GPR* %7753, i32 0, i32 5
  %7755 = getelementptr inbounds %struct.Reg, %struct.Reg* %7754, i32 0, i32 0
  %RCX.i618 = bitcast %union.anon* %7755 to i64*
  %7756 = load i64, i64* %RAX.i617
  %7757 = add i64 %7756, 4
  %7758 = load i64, i64* %PC.i616
  %7759 = add i64 %7758, 3
  store i64 %7759, i64* %PC.i616
  %7760 = inttoptr i64 %7757 to i32*
  %7761 = load i32, i32* %7760
  %7762 = zext i32 %7761 to i64
  store i64 %7762, i64* %RCX.i618, align 8
  store %struct.Memory* %loadMem_44ad9a, %struct.Memory** %MEMORY
  %loadMem_44ad9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7764 = getelementptr inbounds %struct.GPR, %struct.GPR* %7763, i32 0, i32 33
  %7765 = getelementptr inbounds %struct.Reg, %struct.Reg* %7764, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %7765 to i64*
  %7766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7767 = getelementptr inbounds %struct.GPR, %struct.GPR* %7766, i32 0, i32 5
  %7768 = getelementptr inbounds %struct.Reg, %struct.Reg* %7767, i32 0, i32 0
  %RCX.i615 = bitcast %union.anon* %7768 to i64*
  %7769 = load i64, i64* %RCX.i615
  %7770 = load i64, i64* %PC.i614
  %7771 = add i64 %7770, 3
  store i64 %7771, i64* %PC.i614
  %7772 = trunc i64 %7769 to i32
  %7773 = add i32 1, %7772
  %7774 = zext i32 %7773 to i64
  store i64 %7774, i64* %RCX.i615, align 8
  %7775 = icmp ult i32 %7773, %7772
  %7776 = icmp ult i32 %7773, 1
  %7777 = or i1 %7775, %7776
  %7778 = zext i1 %7777 to i8
  %7779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7778, i8* %7779, align 1
  %7780 = and i32 %7773, 255
  %7781 = call i32 @llvm.ctpop.i32(i32 %7780)
  %7782 = trunc i32 %7781 to i8
  %7783 = and i8 %7782, 1
  %7784 = xor i8 %7783, 1
  %7785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7784, i8* %7785, align 1
  %7786 = xor i64 1, %7769
  %7787 = trunc i64 %7786 to i32
  %7788 = xor i32 %7787, %7773
  %7789 = lshr i32 %7788, 4
  %7790 = trunc i32 %7789 to i8
  %7791 = and i8 %7790, 1
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7791, i8* %7792, align 1
  %7793 = icmp eq i32 %7773, 0
  %7794 = zext i1 %7793 to i8
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7794, i8* %7795, align 1
  %7796 = lshr i32 %7773, 31
  %7797 = trunc i32 %7796 to i8
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7797, i8* %7798, align 1
  %7799 = lshr i32 %7772, 31
  %7800 = xor i32 %7796, %7799
  %7801 = add i32 %7800, %7796
  %7802 = icmp eq i32 %7801, 2
  %7803 = zext i1 %7802 to i8
  %7804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7803, i8* %7804, align 1
  store %struct.Memory* %loadMem_44ad9d, %struct.Memory** %MEMORY
  %loadMem_44ada0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7806 = getelementptr inbounds %struct.GPR, %struct.GPR* %7805, i32 0, i32 33
  %7807 = getelementptr inbounds %struct.Reg, %struct.Reg* %7806, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %7807 to i64*
  %7808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7809 = getelementptr inbounds %struct.GPR, %struct.GPR* %7808, i32 0, i32 5
  %7810 = getelementptr inbounds %struct.Reg, %struct.Reg* %7809, i32 0, i32 0
  %ECX.i612 = bitcast %union.anon* %7810 to i32*
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7812 = getelementptr inbounds %struct.GPR, %struct.GPR* %7811, i32 0, i32 1
  %7813 = getelementptr inbounds %struct.Reg, %struct.Reg* %7812, i32 0, i32 0
  %RAX.i613 = bitcast %union.anon* %7813 to i64*
  %7814 = load i64, i64* %RAX.i613
  %7815 = add i64 %7814, 4
  %7816 = load i32, i32* %ECX.i612
  %7817 = zext i32 %7816 to i64
  %7818 = load i64, i64* %PC.i611
  %7819 = add i64 %7818, 3
  store i64 %7819, i64* %PC.i611
  %7820 = inttoptr i64 %7815 to i32*
  store i32 %7816, i32* %7820
  store %struct.Memory* %loadMem_44ada0, %struct.Memory** %MEMORY
  br label %block_.L_44ada3

block_.L_44ada3:                                  ; preds = %block_.L_44ad96, %block_44ad65
  %loadMem_44ada3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7822 = getelementptr inbounds %struct.GPR, %struct.GPR* %7821, i32 0, i32 33
  %7823 = getelementptr inbounds %struct.Reg, %struct.Reg* %7822, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %7823 to i64*
  %7824 = load i64, i64* %PC.i610
  %7825 = add i64 %7824, 5
  %7826 = load i64, i64* %PC.i610
  %7827 = add i64 %7826, 5
  store i64 %7827, i64* %PC.i610
  %7828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7825, i64* %7828, align 8
  store %struct.Memory* %loadMem_44ada3, %struct.Memory** %MEMORY
  br label %block_.L_44ada8

block_.L_44ada8:                                  ; preds = %block_.L_44ada3, %block_44ad2e
  %loadMem_44ada8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7830 = getelementptr inbounds %struct.GPR, %struct.GPR* %7829, i32 0, i32 33
  %7831 = getelementptr inbounds %struct.Reg, %struct.Reg* %7830, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %7831 to i64*
  %7832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7833 = getelementptr inbounds %struct.GPR, %struct.GPR* %7832, i32 0, i32 1
  %7834 = getelementptr inbounds %struct.Reg, %struct.Reg* %7833, i32 0, i32 0
  %RAX.i608 = bitcast %union.anon* %7834 to i64*
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7836 = getelementptr inbounds %struct.GPR, %struct.GPR* %7835, i32 0, i32 15
  %7837 = getelementptr inbounds %struct.Reg, %struct.Reg* %7836, i32 0, i32 0
  %RBP.i609 = bitcast %union.anon* %7837 to i64*
  %7838 = load i64, i64* %RBP.i609
  %7839 = sub i64 %7838, 32
  %7840 = load i64, i64* %PC.i607
  %7841 = add i64 %7840, 4
  store i64 %7841, i64* %PC.i607
  %7842 = inttoptr i64 %7839 to i64*
  %7843 = load i64, i64* %7842
  store i64 %7843, i64* %RAX.i608, align 8
  store %struct.Memory* %loadMem_44ada8, %struct.Memory** %MEMORY
  %loadMem_44adac = load %struct.Memory*, %struct.Memory** %MEMORY
  %7844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7845 = getelementptr inbounds %struct.GPR, %struct.GPR* %7844, i32 0, i32 33
  %7846 = getelementptr inbounds %struct.Reg, %struct.Reg* %7845, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %7846 to i64*
  %7847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7848 = getelementptr inbounds %struct.GPR, %struct.GPR* %7847, i32 0, i32 1
  %7849 = getelementptr inbounds %struct.Reg, %struct.Reg* %7848, i32 0, i32 0
  %RAX.i605 = bitcast %union.anon* %7849 to i64*
  %7850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7851 = getelementptr inbounds %struct.GPR, %struct.GPR* %7850, i32 0, i32 5
  %7852 = getelementptr inbounds %struct.Reg, %struct.Reg* %7851, i32 0, i32 0
  %RCX.i606 = bitcast %union.anon* %7852 to i64*
  %7853 = load i64, i64* %RAX.i605
  %7854 = add i64 %7853, 556
  %7855 = load i64, i64* %PC.i604
  %7856 = add i64 %7855, 6
  store i64 %7856, i64* %PC.i604
  %7857 = inttoptr i64 %7854 to i32*
  %7858 = load i32, i32* %7857
  %7859 = zext i32 %7858 to i64
  store i64 %7859, i64* %RCX.i606, align 8
  store %struct.Memory* %loadMem_44adac, %struct.Memory** %MEMORY
  %loadMem_44adb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7861 = getelementptr inbounds %struct.GPR, %struct.GPR* %7860, i32 0, i32 33
  %7862 = getelementptr inbounds %struct.Reg, %struct.Reg* %7861, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %7862 to i64*
  %7863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7864 = getelementptr inbounds %struct.GPR, %struct.GPR* %7863, i32 0, i32 1
  %7865 = getelementptr inbounds %struct.Reg, %struct.Reg* %7864, i32 0, i32 0
  %RAX.i602 = bitcast %union.anon* %7865 to i64*
  %7866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7867 = getelementptr inbounds %struct.GPR, %struct.GPR* %7866, i32 0, i32 15
  %7868 = getelementptr inbounds %struct.Reg, %struct.Reg* %7867, i32 0, i32 0
  %RBP.i603 = bitcast %union.anon* %7868 to i64*
  %7869 = load i64, i64* %RBP.i603
  %7870 = sub i64 %7869, 24
  %7871 = load i64, i64* %PC.i601
  %7872 = add i64 %7871, 4
  store i64 %7872, i64* %PC.i601
  %7873 = inttoptr i64 %7870 to i64*
  %7874 = load i64, i64* %7873
  store i64 %7874, i64* %RAX.i602, align 8
  store %struct.Memory* %loadMem_44adb2, %struct.Memory** %MEMORY
  %loadMem_44adb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7876 = getelementptr inbounds %struct.GPR, %struct.GPR* %7875, i32 0, i32 33
  %7877 = getelementptr inbounds %struct.Reg, %struct.Reg* %7876, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %7877 to i64*
  %7878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7879 = getelementptr inbounds %struct.GPR, %struct.GPR* %7878, i32 0, i32 5
  %7880 = getelementptr inbounds %struct.Reg, %struct.Reg* %7879, i32 0, i32 0
  %ECX.i599 = bitcast %union.anon* %7880 to i32*
  %7881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7882 = getelementptr inbounds %struct.GPR, %struct.GPR* %7881, i32 0, i32 1
  %7883 = getelementptr inbounds %struct.Reg, %struct.Reg* %7882, i32 0, i32 0
  %RAX.i600 = bitcast %union.anon* %7883 to i64*
  %7884 = load i64, i64* %RAX.i600
  %7885 = load i32, i32* %ECX.i599
  %7886 = zext i32 %7885 to i64
  %7887 = load i64, i64* %PC.i598
  %7888 = add i64 %7887, 2
  store i64 %7888, i64* %PC.i598
  %7889 = inttoptr i64 %7884 to i32*
  store i32 %7885, i32* %7889
  store %struct.Memory* %loadMem_44adb6, %struct.Memory** %MEMORY
  %loadMem_44adb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7891 = getelementptr inbounds %struct.GPR, %struct.GPR* %7890, i32 0, i32 33
  %7892 = getelementptr inbounds %struct.Reg, %struct.Reg* %7891, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %7892 to i64*
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7894 = getelementptr inbounds %struct.GPR, %struct.GPR* %7893, i32 0, i32 5
  %7895 = getelementptr inbounds %struct.Reg, %struct.Reg* %7894, i32 0, i32 0
  %RCX.i596 = bitcast %union.anon* %7895 to i64*
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7897 = getelementptr inbounds %struct.GPR, %struct.GPR* %7896, i32 0, i32 15
  %7898 = getelementptr inbounds %struct.Reg, %struct.Reg* %7897, i32 0, i32 0
  %RBP.i597 = bitcast %union.anon* %7898 to i64*
  %7899 = load i64, i64* %RBP.i597
  %7900 = sub i64 %7899, 12
  %7901 = load i64, i64* %PC.i595
  %7902 = add i64 %7901, 3
  store i64 %7902, i64* %PC.i595
  %7903 = inttoptr i64 %7900 to i32*
  %7904 = load i32, i32* %7903
  %7905 = zext i32 %7904 to i64
  store i64 %7905, i64* %RCX.i596, align 8
  store %struct.Memory* %loadMem_44adb8, %struct.Memory** %MEMORY
  %loadMem_44adbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7907 = getelementptr inbounds %struct.GPR, %struct.GPR* %7906, i32 0, i32 33
  %7908 = getelementptr inbounds %struct.Reg, %struct.Reg* %7907, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %7908 to i64*
  %7909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7910 = getelementptr inbounds %struct.GPR, %struct.GPR* %7909, i32 0, i32 5
  %7911 = getelementptr inbounds %struct.Reg, %struct.Reg* %7910, i32 0, i32 0
  %ECX.i593 = bitcast %union.anon* %7911 to i32*
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7913 = getelementptr inbounds %struct.GPR, %struct.GPR* %7912, i32 0, i32 15
  %7914 = getelementptr inbounds %struct.Reg, %struct.Reg* %7913, i32 0, i32 0
  %RBP.i594 = bitcast %union.anon* %7914 to i64*
  %7915 = load i64, i64* %RBP.i594
  %7916 = sub i64 %7915, 44
  %7917 = load i32, i32* %ECX.i593
  %7918 = zext i32 %7917 to i64
  %7919 = load i64, i64* %PC.i592
  %7920 = add i64 %7919, 3
  store i64 %7920, i64* %PC.i592
  %7921 = inttoptr i64 %7916 to i32*
  store i32 %7917, i32* %7921
  store %struct.Memory* %loadMem_44adbb, %struct.Memory** %MEMORY
  %loadMem_44adbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %7922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7923 = getelementptr inbounds %struct.GPR, %struct.GPR* %7922, i32 0, i32 33
  %7924 = getelementptr inbounds %struct.Reg, %struct.Reg* %7923, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %7924 to i64*
  %7925 = load i64, i64* %PC.i591
  %7926 = add i64 %7925, 34
  %7927 = load i64, i64* %PC.i591
  %7928 = add i64 %7927, 5
  store i64 %7928, i64* %PC.i591
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7926, i64* %7929, align 8
  store %struct.Memory* %loadMem_44adbe, %struct.Memory** %MEMORY
  br label %block_.L_44ade0

block_.L_44adc3:                                  ; preds = %block_44ad1f
  %loadMem_44adc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7931 = getelementptr inbounds %struct.GPR, %struct.GPR* %7930, i32 0, i32 33
  %7932 = getelementptr inbounds %struct.Reg, %struct.Reg* %7931, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %7932 to i64*
  %7933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7934 = getelementptr inbounds %struct.GPR, %struct.GPR* %7933, i32 0, i32 1
  %7935 = getelementptr inbounds %struct.Reg, %struct.Reg* %7934, i32 0, i32 0
  %RAX.i589 = bitcast %union.anon* %7935 to i64*
  %7936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7937 = getelementptr inbounds %struct.GPR, %struct.GPR* %7936, i32 0, i32 15
  %7938 = getelementptr inbounds %struct.Reg, %struct.Reg* %7937, i32 0, i32 0
  %RBP.i590 = bitcast %union.anon* %7938 to i64*
  %7939 = load i64, i64* %RBP.i590
  %7940 = sub i64 %7939, 4
  %7941 = load i64, i64* %PC.i588
  %7942 = add i64 %7941, 3
  store i64 %7942, i64* %PC.i588
  %7943 = inttoptr i64 %7940 to i32*
  %7944 = load i32, i32* %7943
  %7945 = zext i32 %7944 to i64
  store i64 %7945, i64* %RAX.i589, align 8
  store %struct.Memory* %loadMem_44adc3, %struct.Memory** %MEMORY
  %loadMem_44adc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7947 = getelementptr inbounds %struct.GPR, %struct.GPR* %7946, i32 0, i32 33
  %7948 = getelementptr inbounds %struct.Reg, %struct.Reg* %7947, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %7948 to i64*
  %7949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7950 = getelementptr inbounds %struct.GPR, %struct.GPR* %7949, i32 0, i32 1
  %7951 = getelementptr inbounds %struct.Reg, %struct.Reg* %7950, i32 0, i32 0
  %RAX.i587 = bitcast %union.anon* %7951 to i64*
  %7952 = load i64, i64* %RAX.i587
  %7953 = load i64, i64* %PC.i586
  %7954 = add i64 %7953, 3
  store i64 %7954, i64* %PC.i586
  %7955 = trunc i64 %7952 to i32
  %7956 = sub i32 %7955, 1
  %7957 = zext i32 %7956 to i64
  store i64 %7957, i64* %RAX.i587, align 8
  %7958 = icmp ult i32 %7955, 1
  %7959 = zext i1 %7958 to i8
  %7960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7959, i8* %7960, align 1
  %7961 = and i32 %7956, 255
  %7962 = call i32 @llvm.ctpop.i32(i32 %7961)
  %7963 = trunc i32 %7962 to i8
  %7964 = and i8 %7963, 1
  %7965 = xor i8 %7964, 1
  %7966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7965, i8* %7966, align 1
  %7967 = xor i64 1, %7952
  %7968 = trunc i64 %7967 to i32
  %7969 = xor i32 %7968, %7956
  %7970 = lshr i32 %7969, 4
  %7971 = trunc i32 %7970 to i8
  %7972 = and i8 %7971, 1
  %7973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7972, i8* %7973, align 1
  %7974 = icmp eq i32 %7956, 0
  %7975 = zext i1 %7974 to i8
  %7976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7975, i8* %7976, align 1
  %7977 = lshr i32 %7956, 31
  %7978 = trunc i32 %7977 to i8
  %7979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7978, i8* %7979, align 1
  %7980 = lshr i32 %7955, 31
  %7981 = xor i32 %7977, %7980
  %7982 = add i32 %7981, %7980
  %7983 = icmp eq i32 %7982, 2
  %7984 = zext i1 %7983 to i8
  %7985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7984, i8* %7985, align 1
  store %struct.Memory* %loadMem_44adc6, %struct.Memory** %MEMORY
  %loadMem_44adc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7987 = getelementptr inbounds %struct.GPR, %struct.GPR* %7986, i32 0, i32 33
  %7988 = getelementptr inbounds %struct.Reg, %struct.Reg* %7987, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %7988 to i64*
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7990 = getelementptr inbounds %struct.GPR, %struct.GPR* %7989, i32 0, i32 5
  %7991 = getelementptr inbounds %struct.Reg, %struct.Reg* %7990, i32 0, i32 0
  %RCX.i584 = bitcast %union.anon* %7991 to i64*
  %7992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7993 = getelementptr inbounds %struct.GPR, %struct.GPR* %7992, i32 0, i32 15
  %7994 = getelementptr inbounds %struct.Reg, %struct.Reg* %7993, i32 0, i32 0
  %RBP.i585 = bitcast %union.anon* %7994 to i64*
  %7995 = load i64, i64* %RBP.i585
  %7996 = sub i64 %7995, 24
  %7997 = load i64, i64* %PC.i583
  %7998 = add i64 %7997, 4
  store i64 %7998, i64* %PC.i583
  %7999 = inttoptr i64 %7996 to i64*
  %8000 = load i64, i64* %7999
  store i64 %8000, i64* %RCX.i584, align 8
  store %struct.Memory* %loadMem_44adc9, %struct.Memory** %MEMORY
  %loadMem_44adcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8002 = getelementptr inbounds %struct.GPR, %struct.GPR* %8001, i32 0, i32 33
  %8003 = getelementptr inbounds %struct.Reg, %struct.Reg* %8002, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %8003 to i64*
  %8004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8005 = getelementptr inbounds %struct.GPR, %struct.GPR* %8004, i32 0, i32 1
  %8006 = getelementptr inbounds %struct.Reg, %struct.Reg* %8005, i32 0, i32 0
  %EAX.i581 = bitcast %union.anon* %8006 to i32*
  %8007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8008 = getelementptr inbounds %struct.GPR, %struct.GPR* %8007, i32 0, i32 5
  %8009 = getelementptr inbounds %struct.Reg, %struct.Reg* %8008, i32 0, i32 0
  %RCX.i582 = bitcast %union.anon* %8009 to i64*
  %8010 = load i64, i64* %RCX.i582
  %8011 = add i64 %8010, 4
  %8012 = load i32, i32* %EAX.i581
  %8013 = zext i32 %8012 to i64
  %8014 = load i64, i64* %PC.i580
  %8015 = add i64 %8014, 3
  store i64 %8015, i64* %PC.i580
  %8016 = inttoptr i64 %8011 to i32*
  store i32 %8012, i32* %8016
  store %struct.Memory* %loadMem_44adcd, %struct.Memory** %MEMORY
  %loadMem_44add0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8018 = getelementptr inbounds %struct.GPR, %struct.GPR* %8017, i32 0, i32 33
  %8019 = getelementptr inbounds %struct.Reg, %struct.Reg* %8018, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %8019 to i64*
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8021 = getelementptr inbounds %struct.GPR, %struct.GPR* %8020, i32 0, i32 5
  %8022 = getelementptr inbounds %struct.Reg, %struct.Reg* %8021, i32 0, i32 0
  %RCX.i578 = bitcast %union.anon* %8022 to i64*
  %8023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8024 = getelementptr inbounds %struct.GPR, %struct.GPR* %8023, i32 0, i32 15
  %8025 = getelementptr inbounds %struct.Reg, %struct.Reg* %8024, i32 0, i32 0
  %RBP.i579 = bitcast %union.anon* %8025 to i64*
  %8026 = load i64, i64* %RBP.i579
  %8027 = sub i64 %8026, 24
  %8028 = load i64, i64* %PC.i577
  %8029 = add i64 %8028, 4
  store i64 %8029, i64* %PC.i577
  %8030 = inttoptr i64 %8027 to i64*
  %8031 = load i64, i64* %8030
  store i64 %8031, i64* %RCX.i578, align 8
  store %struct.Memory* %loadMem_44add0, %struct.Memory** %MEMORY
  %loadMem_44add4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8033 = getelementptr inbounds %struct.GPR, %struct.GPR* %8032, i32 0, i32 33
  %8034 = getelementptr inbounds %struct.Reg, %struct.Reg* %8033, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %8034 to i64*
  %8035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8036 = getelementptr inbounds %struct.GPR, %struct.GPR* %8035, i32 0, i32 5
  %8037 = getelementptr inbounds %struct.Reg, %struct.Reg* %8036, i32 0, i32 0
  %RCX.i576 = bitcast %union.anon* %8037 to i64*
  %8038 = load i64, i64* %RCX.i576
  %8039 = load i64, i64* %PC.i575
  %8040 = add i64 %8039, 6
  store i64 %8040, i64* %PC.i575
  %8041 = inttoptr i64 %8038 to i32*
  store i32 1, i32* %8041
  store %struct.Memory* %loadMem_44add4, %struct.Memory** %MEMORY
  %loadMem_44adda = load %struct.Memory*, %struct.Memory** %MEMORY
  %8042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8043 = getelementptr inbounds %struct.GPR, %struct.GPR* %8042, i32 0, i32 33
  %8044 = getelementptr inbounds %struct.Reg, %struct.Reg* %8043, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %8044 to i64*
  %8045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8046 = getelementptr inbounds %struct.GPR, %struct.GPR* %8045, i32 0, i32 1
  %8047 = getelementptr inbounds %struct.Reg, %struct.Reg* %8046, i32 0, i32 0
  %RAX.i573 = bitcast %union.anon* %8047 to i64*
  %8048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8049 = getelementptr inbounds %struct.GPR, %struct.GPR* %8048, i32 0, i32 15
  %8050 = getelementptr inbounds %struct.Reg, %struct.Reg* %8049, i32 0, i32 0
  %RBP.i574 = bitcast %union.anon* %8050 to i64*
  %8051 = load i64, i64* %RBP.i574
  %8052 = sub i64 %8051, 12
  %8053 = load i64, i64* %PC.i572
  %8054 = add i64 %8053, 3
  store i64 %8054, i64* %PC.i572
  %8055 = inttoptr i64 %8052 to i32*
  %8056 = load i32, i32* %8055
  %8057 = zext i32 %8056 to i64
  store i64 %8057, i64* %RAX.i573, align 8
  store %struct.Memory* %loadMem_44adda, %struct.Memory** %MEMORY
  %loadMem_44addd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8059 = getelementptr inbounds %struct.GPR, %struct.GPR* %8058, i32 0, i32 33
  %8060 = getelementptr inbounds %struct.Reg, %struct.Reg* %8059, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %8060 to i64*
  %8061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8062 = getelementptr inbounds %struct.GPR, %struct.GPR* %8061, i32 0, i32 1
  %8063 = getelementptr inbounds %struct.Reg, %struct.Reg* %8062, i32 0, i32 0
  %EAX.i570 = bitcast %union.anon* %8063 to i32*
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8065 = getelementptr inbounds %struct.GPR, %struct.GPR* %8064, i32 0, i32 15
  %8066 = getelementptr inbounds %struct.Reg, %struct.Reg* %8065, i32 0, i32 0
  %RBP.i571 = bitcast %union.anon* %8066 to i64*
  %8067 = load i64, i64* %RBP.i571
  %8068 = sub i64 %8067, 44
  %8069 = load i32, i32* %EAX.i570
  %8070 = zext i32 %8069 to i64
  %8071 = load i64, i64* %PC.i569
  %8072 = add i64 %8071, 3
  store i64 %8072, i64* %PC.i569
  %8073 = inttoptr i64 %8068 to i32*
  store i32 %8069, i32* %8073
  store %struct.Memory* %loadMem_44addd, %struct.Memory** %MEMORY
  br label %block_.L_44ade0

block_.L_44ade0:                                  ; preds = %block_.L_44adc3, %block_.L_44ada8
  %loadMem_44ade0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8075 = getelementptr inbounds %struct.GPR, %struct.GPR* %8074, i32 0, i32 33
  %8076 = getelementptr inbounds %struct.Reg, %struct.Reg* %8075, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %8076 to i64*
  %8077 = load i64, i64* %PC.i568
  %8078 = add i64 %8077, 209
  %8079 = load i64, i64* %PC.i568
  %8080 = add i64 %8079, 5
  store i64 %8080, i64* %PC.i568
  %8081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8078, i64* %8081, align 8
  store %struct.Memory* %loadMem_44ade0, %struct.Memory** %MEMORY
  br label %block_.L_44aeb1

block_.L_44ade5:                                  ; preds = %block_44ad0e
  %loadMem_44ade5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8083 = getelementptr inbounds %struct.GPR, %struct.GPR* %8082, i32 0, i32 33
  %8084 = getelementptr inbounds %struct.Reg, %struct.Reg* %8083, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %8084 to i64*
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8086 = getelementptr inbounds %struct.GPR, %struct.GPR* %8085, i32 0, i32 1
  %8087 = getelementptr inbounds %struct.Reg, %struct.Reg* %8086, i32 0, i32 0
  %RAX.i566 = bitcast %union.anon* %8087 to i64*
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8089 = getelementptr inbounds %struct.GPR, %struct.GPR* %8088, i32 0, i32 15
  %8090 = getelementptr inbounds %struct.Reg, %struct.Reg* %8089, i32 0, i32 0
  %RBP.i567 = bitcast %union.anon* %8090 to i64*
  %8091 = load i64, i64* %RBP.i567
  %8092 = sub i64 %8091, 4
  %8093 = load i64, i64* %PC.i565
  %8094 = add i64 %8093, 3
  store i64 %8094, i64* %PC.i565
  %8095 = inttoptr i64 %8092 to i32*
  %8096 = load i32, i32* %8095
  %8097 = zext i32 %8096 to i64
  store i64 %8097, i64* %RAX.i566, align 8
  store %struct.Memory* %loadMem_44ade5, %struct.Memory** %MEMORY
  %loadMem_44ade8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8099 = getelementptr inbounds %struct.GPR, %struct.GPR* %8098, i32 0, i32 33
  %8100 = getelementptr inbounds %struct.Reg, %struct.Reg* %8099, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %8100 to i64*
  %8101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8102 = getelementptr inbounds %struct.GPR, %struct.GPR* %8101, i32 0, i32 1
  %8103 = getelementptr inbounds %struct.Reg, %struct.Reg* %8102, i32 0, i32 0
  %RAX.i564 = bitcast %union.anon* %8103 to i64*
  %8104 = load i64, i64* %RAX.i564
  %8105 = load i64, i64* %PC.i563
  %8106 = add i64 %8105, 3
  store i64 %8106, i64* %PC.i563
  %8107 = and i64 1, %8104
  %8108 = trunc i64 %8107 to i32
  store i64 %8107, i64* %RAX.i564, align 8
  %8109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8109, align 1
  %8110 = and i32 %8108, 255
  %8111 = call i32 @llvm.ctpop.i32(i32 %8110)
  %8112 = trunc i32 %8111 to i8
  %8113 = and i8 %8112, 1
  %8114 = xor i8 %8113, 1
  %8115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8114, i8* %8115, align 1
  %8116 = icmp eq i32 %8108, 0
  %8117 = zext i1 %8116 to i8
  %8118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8117, i8* %8118, align 1
  %8119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8119, align 1
  %8120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8120, align 1
  %8121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8121, align 1
  store %struct.Memory* %loadMem_44ade8, %struct.Memory** %MEMORY
  %loadMem_44adeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8123 = getelementptr inbounds %struct.GPR, %struct.GPR* %8122, i32 0, i32 33
  %8124 = getelementptr inbounds %struct.Reg, %struct.Reg* %8123, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %8124 to i64*
  %8125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8126 = getelementptr inbounds %struct.GPR, %struct.GPR* %8125, i32 0, i32 1
  %8127 = getelementptr inbounds %struct.Reg, %struct.Reg* %8126, i32 0, i32 0
  %EAX.i562 = bitcast %union.anon* %8127 to i32*
  %8128 = load i32, i32* %EAX.i562
  %8129 = zext i32 %8128 to i64
  %8130 = load i64, i64* %PC.i561
  %8131 = add i64 %8130, 3
  store i64 %8131, i64* %PC.i561
  %8132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8132, align 1
  %8133 = and i32 %8128, 255
  %8134 = call i32 @llvm.ctpop.i32(i32 %8133)
  %8135 = trunc i32 %8134 to i8
  %8136 = and i8 %8135, 1
  %8137 = xor i8 %8136, 1
  %8138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8137, i8* %8138, align 1
  %8139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8139, align 1
  %8140 = icmp eq i32 %8128, 0
  %8141 = zext i1 %8140 to i8
  %8142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8141, i8* %8142, align 1
  %8143 = lshr i32 %8128, 31
  %8144 = trunc i32 %8143 to i8
  %8145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8144, i8* %8145, align 1
  %8146 = lshr i32 %8128, 31
  %8147 = xor i32 %8143, %8146
  %8148 = add i32 %8147, %8146
  %8149 = icmp eq i32 %8148, 2
  %8150 = zext i1 %8149 to i8
  %8151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8150, i8* %8151, align 1
  store %struct.Memory* %loadMem_44adeb, %struct.Memory** %MEMORY
  %loadMem_44adee = load %struct.Memory*, %struct.Memory** %MEMORY
  %8152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8153 = getelementptr inbounds %struct.GPR, %struct.GPR* %8152, i32 0, i32 33
  %8154 = getelementptr inbounds %struct.Reg, %struct.Reg* %8153, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %8154 to i64*
  %8155 = load i64, i64* %PC.i560
  %8156 = add i64 %8155, 148
  %8157 = load i64, i64* %PC.i560
  %8158 = add i64 %8157, 6
  %8159 = load i64, i64* %PC.i560
  %8160 = add i64 %8159, 6
  store i64 %8160, i64* %PC.i560
  %8161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8162 = load i8, i8* %8161, align 1
  %8163 = icmp eq i8 %8162, 0
  %8164 = zext i1 %8163 to i8
  store i8 %8164, i8* %BRANCH_TAKEN, align 1
  %8165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8166 = select i1 %8163, i64 %8156, i64 %8158
  store i64 %8166, i64* %8165, align 8
  store %struct.Memory* %loadMem_44adee, %struct.Memory** %MEMORY
  %loadBr_44adee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44adee = icmp eq i8 %loadBr_44adee, 1
  br i1 %cmpBr_44adee, label %block_.L_44ae82, label %block_44adf4

block_44adf4:                                     ; preds = %block_.L_44ade5
  %loadMem_44adf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8168 = getelementptr inbounds %struct.GPR, %struct.GPR* %8167, i32 0, i32 33
  %8169 = getelementptr inbounds %struct.Reg, %struct.Reg* %8168, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %8169 to i64*
  %8170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8171 = getelementptr inbounds %struct.GPR, %struct.GPR* %8170, i32 0, i32 1
  %8172 = getelementptr inbounds %struct.Reg, %struct.Reg* %8171, i32 0, i32 0
  %RAX.i558 = bitcast %union.anon* %8172 to i64*
  %8173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8174 = getelementptr inbounds %struct.GPR, %struct.GPR* %8173, i32 0, i32 15
  %8175 = getelementptr inbounds %struct.Reg, %struct.Reg* %8174, i32 0, i32 0
  %RBP.i559 = bitcast %union.anon* %8175 to i64*
  %8176 = load i64, i64* %RBP.i559
  %8177 = sub i64 %8176, 32
  %8178 = load i64, i64* %PC.i557
  %8179 = add i64 %8178, 4
  store i64 %8179, i64* %PC.i557
  %8180 = inttoptr i64 %8177 to i64*
  %8181 = load i64, i64* %8180
  store i64 %8181, i64* %RAX.i558, align 8
  store %struct.Memory* %loadMem_44adf4, %struct.Memory** %MEMORY
  %loadMem_44adf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8183 = getelementptr inbounds %struct.GPR, %struct.GPR* %8182, i32 0, i32 33
  %8184 = getelementptr inbounds %struct.Reg, %struct.Reg* %8183, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %8184 to i64*
  %8185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8186 = getelementptr inbounds %struct.GPR, %struct.GPR* %8185, i32 0, i32 1
  %8187 = getelementptr inbounds %struct.Reg, %struct.Reg* %8186, i32 0, i32 0
  %RAX.i555 = bitcast %union.anon* %8187 to i64*
  %8188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8189 = getelementptr inbounds %struct.GPR, %struct.GPR* %8188, i32 0, i32 5
  %8190 = getelementptr inbounds %struct.Reg, %struct.Reg* %8189, i32 0, i32 0
  %RCX.i556 = bitcast %union.anon* %8190 to i64*
  %8191 = load i64, i64* %RAX.i555
  %8192 = add i64 %8191, 540
  %8193 = load i64, i64* %PC.i554
  %8194 = add i64 %8193, 6
  store i64 %8194, i64* %PC.i554
  %8195 = inttoptr i64 %8192 to i32*
  %8196 = load i32, i32* %8195
  %8197 = zext i32 %8196 to i64
  store i64 %8197, i64* %RCX.i556, align 8
  store %struct.Memory* %loadMem_44adf8, %struct.Memory** %MEMORY
  %loadMem_44adfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8199 = getelementptr inbounds %struct.GPR, %struct.GPR* %8198, i32 0, i32 33
  %8200 = getelementptr inbounds %struct.Reg, %struct.Reg* %8199, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %8200 to i64*
  %8201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8202 = getelementptr inbounds %struct.GPR, %struct.GPR* %8201, i32 0, i32 1
  %8203 = getelementptr inbounds %struct.Reg, %struct.Reg* %8202, i32 0, i32 0
  %RAX.i552 = bitcast %union.anon* %8203 to i64*
  %8204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8205 = getelementptr inbounds %struct.GPR, %struct.GPR* %8204, i32 0, i32 15
  %8206 = getelementptr inbounds %struct.Reg, %struct.Reg* %8205, i32 0, i32 0
  %RBP.i553 = bitcast %union.anon* %8206 to i64*
  %8207 = load i64, i64* %RBP.i553
  %8208 = sub i64 %8207, 24
  %8209 = load i64, i64* %PC.i551
  %8210 = add i64 %8209, 4
  store i64 %8210, i64* %PC.i551
  %8211 = inttoptr i64 %8208 to i64*
  %8212 = load i64, i64* %8211
  store i64 %8212, i64* %RAX.i552, align 8
  store %struct.Memory* %loadMem_44adfe, %struct.Memory** %MEMORY
  %loadMem_44ae02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8214 = getelementptr inbounds %struct.GPR, %struct.GPR* %8213, i32 0, i32 33
  %8215 = getelementptr inbounds %struct.Reg, %struct.Reg* %8214, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %8215 to i64*
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8217 = getelementptr inbounds %struct.GPR, %struct.GPR* %8216, i32 0, i32 5
  %8218 = getelementptr inbounds %struct.Reg, %struct.Reg* %8217, i32 0, i32 0
  %ECX.i549 = bitcast %union.anon* %8218 to i32*
  %8219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8220 = getelementptr inbounds %struct.GPR, %struct.GPR* %8219, i32 0, i32 1
  %8221 = getelementptr inbounds %struct.Reg, %struct.Reg* %8220, i32 0, i32 0
  %RAX.i550 = bitcast %union.anon* %8221 to i64*
  %8222 = load i64, i64* %RAX.i550
  %8223 = add i64 %8222, 4
  %8224 = load i32, i32* %ECX.i549
  %8225 = zext i32 %8224 to i64
  %8226 = load i64, i64* %PC.i548
  %8227 = add i64 %8226, 3
  store i64 %8227, i64* %PC.i548
  %8228 = inttoptr i64 %8223 to i32*
  store i32 %8224, i32* %8228
  store %struct.Memory* %loadMem_44ae02, %struct.Memory** %MEMORY
  %loadMem_44ae05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8230 = getelementptr inbounds %struct.GPR, %struct.GPR* %8229, i32 0, i32 33
  %8231 = getelementptr inbounds %struct.Reg, %struct.Reg* %8230, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %8231 to i64*
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8233 = getelementptr inbounds %struct.GPR, %struct.GPR* %8232, i32 0, i32 1
  %8234 = getelementptr inbounds %struct.Reg, %struct.Reg* %8233, i32 0, i32 0
  %RAX.i546 = bitcast %union.anon* %8234 to i64*
  %8235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8236 = getelementptr inbounds %struct.GPR, %struct.GPR* %8235, i32 0, i32 15
  %8237 = getelementptr inbounds %struct.Reg, %struct.Reg* %8236, i32 0, i32 0
  %RBP.i547 = bitcast %union.anon* %8237 to i64*
  %8238 = load i64, i64* %RBP.i547
  %8239 = sub i64 %8238, 32
  %8240 = load i64, i64* %PC.i545
  %8241 = add i64 %8240, 4
  store i64 %8241, i64* %PC.i545
  %8242 = inttoptr i64 %8239 to i64*
  %8243 = load i64, i64* %8242
  store i64 %8243, i64* %RAX.i546, align 8
  store %struct.Memory* %loadMem_44ae05, %struct.Memory** %MEMORY
  %loadMem_44ae09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8245 = getelementptr inbounds %struct.GPR, %struct.GPR* %8244, i32 0, i32 33
  %8246 = getelementptr inbounds %struct.Reg, %struct.Reg* %8245, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %8246 to i64*
  %8247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8248 = getelementptr inbounds %struct.GPR, %struct.GPR* %8247, i32 0, i32 1
  %8249 = getelementptr inbounds %struct.Reg, %struct.Reg* %8248, i32 0, i32 0
  %RAX.i543 = bitcast %union.anon* %8249 to i64*
  %8250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8251 = getelementptr inbounds %struct.GPR, %struct.GPR* %8250, i32 0, i32 5
  %8252 = getelementptr inbounds %struct.Reg, %struct.Reg* %8251, i32 0, i32 0
  %RCX.i544 = bitcast %union.anon* %8252 to i64*
  %8253 = load i64, i64* %RAX.i543
  %8254 = add i64 %8253, 556
  %8255 = load i64, i64* %PC.i542
  %8256 = add i64 %8255, 6
  store i64 %8256, i64* %PC.i542
  %8257 = inttoptr i64 %8254 to i32*
  %8258 = load i32, i32* %8257
  %8259 = zext i32 %8258 to i64
  store i64 %8259, i64* %RCX.i544, align 8
  store %struct.Memory* %loadMem_44ae09, %struct.Memory** %MEMORY
  %loadMem_44ae0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8261 = getelementptr inbounds %struct.GPR, %struct.GPR* %8260, i32 0, i32 33
  %8262 = getelementptr inbounds %struct.Reg, %struct.Reg* %8261, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %8262 to i64*
  %8263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8264 = getelementptr inbounds %struct.GPR, %struct.GPR* %8263, i32 0, i32 1
  %8265 = getelementptr inbounds %struct.Reg, %struct.Reg* %8264, i32 0, i32 0
  %RAX.i540 = bitcast %union.anon* %8265 to i64*
  %8266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8267 = getelementptr inbounds %struct.GPR, %struct.GPR* %8266, i32 0, i32 15
  %8268 = getelementptr inbounds %struct.Reg, %struct.Reg* %8267, i32 0, i32 0
  %RBP.i541 = bitcast %union.anon* %8268 to i64*
  %8269 = load i64, i64* %RBP.i541
  %8270 = sub i64 %8269, 24
  %8271 = load i64, i64* %PC.i539
  %8272 = add i64 %8271, 4
  store i64 %8272, i64* %PC.i539
  %8273 = inttoptr i64 %8270 to i64*
  %8274 = load i64, i64* %8273
  store i64 %8274, i64* %RAX.i540, align 8
  store %struct.Memory* %loadMem_44ae0f, %struct.Memory** %MEMORY
  %loadMem_44ae13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8276 = getelementptr inbounds %struct.GPR, %struct.GPR* %8275, i32 0, i32 33
  %8277 = getelementptr inbounds %struct.Reg, %struct.Reg* %8276, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %8277 to i64*
  %8278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8279 = getelementptr inbounds %struct.GPR, %struct.GPR* %8278, i32 0, i32 5
  %8280 = getelementptr inbounds %struct.Reg, %struct.Reg* %8279, i32 0, i32 0
  %ECX.i537 = bitcast %union.anon* %8280 to i32*
  %8281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8282 = getelementptr inbounds %struct.GPR, %struct.GPR* %8281, i32 0, i32 1
  %8283 = getelementptr inbounds %struct.Reg, %struct.Reg* %8282, i32 0, i32 0
  %RAX.i538 = bitcast %union.anon* %8283 to i64*
  %8284 = load i64, i64* %RAX.i538
  %8285 = load i32, i32* %ECX.i537
  %8286 = zext i32 %8285 to i64
  %8287 = load i64, i64* %PC.i536
  %8288 = add i64 %8287, 2
  store i64 %8288, i64* %PC.i536
  %8289 = inttoptr i64 %8284 to i32*
  store i32 %8285, i32* %8289
  store %struct.Memory* %loadMem_44ae13, %struct.Memory** %MEMORY
  %loadMem_44ae15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8291 = getelementptr inbounds %struct.GPR, %struct.GPR* %8290, i32 0, i32 33
  %8292 = getelementptr inbounds %struct.Reg, %struct.Reg* %8291, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %8292 to i64*
  %8293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8294 = getelementptr inbounds %struct.GPR, %struct.GPR* %8293, i32 0, i32 1
  %8295 = getelementptr inbounds %struct.Reg, %struct.Reg* %8294, i32 0, i32 0
  %RAX.i534 = bitcast %union.anon* %8295 to i64*
  %8296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8297 = getelementptr inbounds %struct.GPR, %struct.GPR* %8296, i32 0, i32 15
  %8298 = getelementptr inbounds %struct.Reg, %struct.Reg* %8297, i32 0, i32 0
  %RBP.i535 = bitcast %union.anon* %8298 to i64*
  %8299 = load i64, i64* %RBP.i535
  %8300 = sub i64 %8299, 32
  %8301 = load i64, i64* %PC.i533
  %8302 = add i64 %8301, 4
  store i64 %8302, i64* %PC.i533
  %8303 = inttoptr i64 %8300 to i64*
  %8304 = load i64, i64* %8303
  store i64 %8304, i64* %RAX.i534, align 8
  store %struct.Memory* %loadMem_44ae15, %struct.Memory** %MEMORY
  %loadMem_44ae19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8306 = getelementptr inbounds %struct.GPR, %struct.GPR* %8305, i32 0, i32 33
  %8307 = getelementptr inbounds %struct.Reg, %struct.Reg* %8306, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %8307 to i64*
  %8308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8309 = getelementptr inbounds %struct.GPR, %struct.GPR* %8308, i32 0, i32 1
  %8310 = getelementptr inbounds %struct.Reg, %struct.Reg* %8309, i32 0, i32 0
  %RAX.i532 = bitcast %union.anon* %8310 to i64*
  %8311 = load i64, i64* %RAX.i532
  %8312 = add i64 %8311, 556
  %8313 = load i64, i64* %PC.i531
  %8314 = add i64 %8313, 7
  store i64 %8314, i64* %PC.i531
  %8315 = inttoptr i64 %8312 to i32*
  %8316 = load i32, i32* %8315
  %8317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8317, align 1
  %8318 = and i32 %8316, 255
  %8319 = call i32 @llvm.ctpop.i32(i32 %8318)
  %8320 = trunc i32 %8319 to i8
  %8321 = and i8 %8320, 1
  %8322 = xor i8 %8321, 1
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8322, i8* %8323, align 1
  %8324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8324, align 1
  %8325 = icmp eq i32 %8316, 0
  %8326 = zext i1 %8325 to i8
  %8327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8326, i8* %8327, align 1
  %8328 = lshr i32 %8316, 31
  %8329 = trunc i32 %8328 to i8
  %8330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8329, i8* %8330, align 1
  %8331 = lshr i32 %8316, 31
  %8332 = xor i32 %8328, %8331
  %8333 = add i32 %8332, %8331
  %8334 = icmp eq i32 %8333, 2
  %8335 = zext i1 %8334 to i8
  %8336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8335, i8* %8336, align 1
  store %struct.Memory* %loadMem_44ae19, %struct.Memory** %MEMORY
  %loadMem_44ae20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8338 = getelementptr inbounds %struct.GPR, %struct.GPR* %8337, i32 0, i32 33
  %8339 = getelementptr inbounds %struct.Reg, %struct.Reg* %8338, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %8339 to i64*
  %8340 = load i64, i64* %PC.i530
  %8341 = add i64 %8340, 93
  %8342 = load i64, i64* %PC.i530
  %8343 = add i64 %8342, 6
  %8344 = load i64, i64* %PC.i530
  %8345 = add i64 %8344, 6
  store i64 %8345, i64* %PC.i530
  %8346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8347 = load i8, i8* %8346, align 1
  store i8 %8347, i8* %BRANCH_TAKEN, align 1
  %8348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8349 = icmp ne i8 %8347, 0
  %8350 = select i1 %8349, i64 %8341, i64 %8343
  store i64 %8350, i64* %8348, align 8
  store %struct.Memory* %loadMem_44ae20, %struct.Memory** %MEMORY
  %loadBr_44ae20 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ae20 = icmp eq i8 %loadBr_44ae20, 1
  br i1 %cmpBr_44ae20, label %block_.L_44ae7d, label %block_44ae26

block_44ae26:                                     ; preds = %block_44adf4
  %loadMem_44ae26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8352 = getelementptr inbounds %struct.GPR, %struct.GPR* %8351, i32 0, i32 33
  %8353 = getelementptr inbounds %struct.Reg, %struct.Reg* %8352, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %8353 to i64*
  %8354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8355 = getelementptr inbounds %struct.GPR, %struct.GPR* %8354, i32 0, i32 1
  %8356 = getelementptr inbounds %struct.Reg, %struct.Reg* %8355, i32 0, i32 0
  %RAX.i529 = bitcast %union.anon* %8356 to i64*
  %8357 = load i64, i64* %PC.i528
  %8358 = add i64 %8357, 8
  store i64 %8358, i64* %PC.i528
  %8359 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8359, i64* %RAX.i529, align 8
  store %struct.Memory* %loadMem_44ae26, %struct.Memory** %MEMORY
  %loadMem_44ae2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8361 = getelementptr inbounds %struct.GPR, %struct.GPR* %8360, i32 0, i32 33
  %8362 = getelementptr inbounds %struct.Reg, %struct.Reg* %8361, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %8362 to i64*
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8364 = getelementptr inbounds %struct.GPR, %struct.GPR* %8363, i32 0, i32 1
  %8365 = getelementptr inbounds %struct.Reg, %struct.Reg* %8364, i32 0, i32 0
  %RAX.i527 = bitcast %union.anon* %8365 to i64*
  %8366 = load i64, i64* %RAX.i527
  %8367 = add i64 %8366, 14168
  %8368 = load i64, i64* %PC.i526
  %8369 = add i64 %8368, 7
  store i64 %8369, i64* %PC.i526
  %8370 = inttoptr i64 %8367 to i64*
  %8371 = load i64, i64* %8370
  store i64 %8371, i64* %RAX.i527, align 8
  store %struct.Memory* %loadMem_44ae2e, %struct.Memory** %MEMORY
  %loadMem_44ae35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8373 = getelementptr inbounds %struct.GPR, %struct.GPR* %8372, i32 0, i32 33
  %8374 = getelementptr inbounds %struct.Reg, %struct.Reg* %8373, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %8374 to i64*
  %8375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8376 = getelementptr inbounds %struct.GPR, %struct.GPR* %8375, i32 0, i32 5
  %8377 = getelementptr inbounds %struct.Reg, %struct.Reg* %8376, i32 0, i32 0
  %RCX.i524 = bitcast %union.anon* %8377 to i64*
  %8378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8379 = getelementptr inbounds %struct.GPR, %struct.GPR* %8378, i32 0, i32 15
  %8380 = getelementptr inbounds %struct.Reg, %struct.Reg* %8379, i32 0, i32 0
  %RBP.i525 = bitcast %union.anon* %8380 to i64*
  %8381 = load i64, i64* %RBP.i525
  %8382 = sub i64 %8381, 32
  %8383 = load i64, i64* %PC.i523
  %8384 = add i64 %8383, 4
  store i64 %8384, i64* %PC.i523
  %8385 = inttoptr i64 %8382 to i64*
  %8386 = load i64, i64* %8385
  store i64 %8386, i64* %RCX.i524, align 8
  store %struct.Memory* %loadMem_44ae35, %struct.Memory** %MEMORY
  %loadMem_44ae39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8388 = getelementptr inbounds %struct.GPR, %struct.GPR* %8387, i32 0, i32 33
  %8389 = getelementptr inbounds %struct.Reg, %struct.Reg* %8388, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %8389 to i64*
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8391 = getelementptr inbounds %struct.GPR, %struct.GPR* %8390, i32 0, i32 5
  %8392 = getelementptr inbounds %struct.Reg, %struct.Reg* %8391, i32 0, i32 0
  %RCX.i522 = bitcast %union.anon* %8392 to i64*
  %8393 = load i64, i64* %RCX.i522
  %8394 = add i64 %8393, 540
  %8395 = load i64, i64* %PC.i521
  %8396 = add i64 %8395, 7
  store i64 %8396, i64* %PC.i521
  %8397 = inttoptr i64 %8394 to i32*
  %8398 = load i32, i32* %8397
  %8399 = sext i32 %8398 to i64
  store i64 %8399, i64* %RCX.i522, align 8
  store %struct.Memory* %loadMem_44ae39, %struct.Memory** %MEMORY
  %loadMem_44ae40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8401 = getelementptr inbounds %struct.GPR, %struct.GPR* %8400, i32 0, i32 33
  %8402 = getelementptr inbounds %struct.Reg, %struct.Reg* %8401, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %8402 to i64*
  %8403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8404 = getelementptr inbounds %struct.GPR, %struct.GPR* %8403, i32 0, i32 5
  %8405 = getelementptr inbounds %struct.Reg, %struct.Reg* %8404, i32 0, i32 0
  %RCX.i520 = bitcast %union.anon* %8405 to i64*
  %8406 = load i64, i64* %RCX.i520
  %8407 = load i64, i64* %PC.i519
  %8408 = add i64 %8407, 7
  store i64 %8408, i64* %PC.i519
  %8409 = sext i64 %8406 to i128
  %8410 = and i128 %8409, -18446744073709551616
  %8411 = zext i64 %8406 to i128
  %8412 = or i128 %8410, %8411
  %8413 = mul i128 632, %8412
  %8414 = trunc i128 %8413 to i64
  store i64 %8414, i64* %RCX.i520, align 8
  %8415 = sext i64 %8414 to i128
  %8416 = icmp ne i128 %8415, %8413
  %8417 = zext i1 %8416 to i8
  %8418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8417, i8* %8418, align 1
  %8419 = trunc i128 %8413 to i32
  %8420 = and i32 %8419, 255
  %8421 = call i32 @llvm.ctpop.i32(i32 %8420)
  %8422 = trunc i32 %8421 to i8
  %8423 = and i8 %8422, 1
  %8424 = xor i8 %8423, 1
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8424, i8* %8425, align 1
  %8426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8426, align 1
  %8427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8427, align 1
  %8428 = lshr i64 %8414, 63
  %8429 = trunc i64 %8428 to i8
  %8430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8429, i8* %8430, align 1
  %8431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8417, i8* %8431, align 1
  store %struct.Memory* %loadMem_44ae40, %struct.Memory** %MEMORY
  %loadMem_44ae47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8433 = getelementptr inbounds %struct.GPR, %struct.GPR* %8432, i32 0, i32 33
  %8434 = getelementptr inbounds %struct.Reg, %struct.Reg* %8433, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %8434 to i64*
  %8435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8436 = getelementptr inbounds %struct.GPR, %struct.GPR* %8435, i32 0, i32 1
  %8437 = getelementptr inbounds %struct.Reg, %struct.Reg* %8436, i32 0, i32 0
  %RAX.i517 = bitcast %union.anon* %8437 to i64*
  %8438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8439 = getelementptr inbounds %struct.GPR, %struct.GPR* %8438, i32 0, i32 5
  %8440 = getelementptr inbounds %struct.Reg, %struct.Reg* %8439, i32 0, i32 0
  %RCX.i518 = bitcast %union.anon* %8440 to i64*
  %8441 = load i64, i64* %RAX.i517
  %8442 = load i64, i64* %RCX.i518
  %8443 = load i64, i64* %PC.i516
  %8444 = add i64 %8443, 3
  store i64 %8444, i64* %PC.i516
  %8445 = add i64 %8442, %8441
  store i64 %8445, i64* %RAX.i517, align 8
  %8446 = icmp ult i64 %8445, %8441
  %8447 = icmp ult i64 %8445, %8442
  %8448 = or i1 %8446, %8447
  %8449 = zext i1 %8448 to i8
  %8450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8449, i8* %8450, align 1
  %8451 = trunc i64 %8445 to i32
  %8452 = and i32 %8451, 255
  %8453 = call i32 @llvm.ctpop.i32(i32 %8452)
  %8454 = trunc i32 %8453 to i8
  %8455 = and i8 %8454, 1
  %8456 = xor i8 %8455, 1
  %8457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8456, i8* %8457, align 1
  %8458 = xor i64 %8442, %8441
  %8459 = xor i64 %8458, %8445
  %8460 = lshr i64 %8459, 4
  %8461 = trunc i64 %8460 to i8
  %8462 = and i8 %8461, 1
  %8463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8462, i8* %8463, align 1
  %8464 = icmp eq i64 %8445, 0
  %8465 = zext i1 %8464 to i8
  %8466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8465, i8* %8466, align 1
  %8467 = lshr i64 %8445, 63
  %8468 = trunc i64 %8467 to i8
  %8469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8468, i8* %8469, align 1
  %8470 = lshr i64 %8441, 63
  %8471 = lshr i64 %8442, 63
  %8472 = xor i64 %8467, %8470
  %8473 = xor i64 %8467, %8471
  %8474 = add i64 %8472, %8473
  %8475 = icmp eq i64 %8474, 2
  %8476 = zext i1 %8475 to i8
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8476, i8* %8477, align 1
  store %struct.Memory* %loadMem_44ae47, %struct.Memory** %MEMORY
  %loadMem_44ae4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8479 = getelementptr inbounds %struct.GPR, %struct.GPR* %8478, i32 0, i32 33
  %8480 = getelementptr inbounds %struct.Reg, %struct.Reg* %8479, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %8480 to i64*
  %8481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8482 = getelementptr inbounds %struct.GPR, %struct.GPR* %8481, i32 0, i32 1
  %8483 = getelementptr inbounds %struct.Reg, %struct.Reg* %8482, i32 0, i32 0
  %RAX.i515 = bitcast %union.anon* %8483 to i64*
  %8484 = load i64, i64* %RAX.i515
  %8485 = add i64 %8484, 532
  %8486 = load i64, i64* %PC.i514
  %8487 = add i64 %8486, 7
  store i64 %8487, i64* %PC.i514
  %8488 = inttoptr i64 %8485 to i32*
  %8489 = load i32, i32* %8488
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8490, align 1
  %8491 = and i32 %8489, 255
  %8492 = call i32 @llvm.ctpop.i32(i32 %8491)
  %8493 = trunc i32 %8492 to i8
  %8494 = and i8 %8493, 1
  %8495 = xor i8 %8494, 1
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8495, i8* %8496, align 1
  %8497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8497, align 1
  %8498 = icmp eq i32 %8489, 0
  %8499 = zext i1 %8498 to i8
  %8500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8499, i8* %8500, align 1
  %8501 = lshr i32 %8489, 31
  %8502 = trunc i32 %8501 to i8
  %8503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8502, i8* %8503, align 1
  %8504 = lshr i32 %8489, 31
  %8505 = xor i32 %8501, %8504
  %8506 = add i32 %8505, %8504
  %8507 = icmp eq i32 %8506, 2
  %8508 = zext i1 %8507 to i8
  %8509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8508, i8* %8509, align 1
  store %struct.Memory* %loadMem_44ae4a, %struct.Memory** %MEMORY
  %loadMem_44ae51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8511 = getelementptr inbounds %struct.GPR, %struct.GPR* %8510, i32 0, i32 33
  %8512 = getelementptr inbounds %struct.Reg, %struct.Reg* %8511, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %8512 to i64*
  %8513 = load i64, i64* %PC.i513
  %8514 = add i64 %8513, 33
  %8515 = load i64, i64* %PC.i513
  %8516 = add i64 %8515, 6
  %8517 = load i64, i64* %PC.i513
  %8518 = add i64 %8517, 6
  store i64 %8518, i64* %PC.i513
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8520 = load i8, i8* %8519, align 1
  %8521 = icmp eq i8 %8520, 0
  %8522 = zext i1 %8521 to i8
  store i8 %8522, i8* %BRANCH_TAKEN, align 1
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8524 = select i1 %8521, i64 %8514, i64 %8516
  store i64 %8524, i64* %8523, align 8
  store %struct.Memory* %loadMem_44ae51, %struct.Memory** %MEMORY
  %loadBr_44ae51 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ae51 = icmp eq i8 %loadBr_44ae51, 1
  br i1 %cmpBr_44ae51, label %block_.L_44ae72, label %block_44ae57

block_44ae57:                                     ; preds = %block_44ae26
  %loadMem_44ae57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8526 = getelementptr inbounds %struct.GPR, %struct.GPR* %8525, i32 0, i32 33
  %8527 = getelementptr inbounds %struct.Reg, %struct.Reg* %8526, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %8527 to i64*
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8529 = getelementptr inbounds %struct.GPR, %struct.GPR* %8528, i32 0, i32 1
  %8530 = getelementptr inbounds %struct.Reg, %struct.Reg* %8529, i32 0, i32 0
  %RAX.i511 = bitcast %union.anon* %8530 to i64*
  %8531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8532 = getelementptr inbounds %struct.GPR, %struct.GPR* %8531, i32 0, i32 15
  %8533 = getelementptr inbounds %struct.Reg, %struct.Reg* %8532, i32 0, i32 0
  %RBP.i512 = bitcast %union.anon* %8533 to i64*
  %8534 = load i64, i64* %RBP.i512
  %8535 = sub i64 %8534, 24
  %8536 = load i64, i64* %PC.i510
  %8537 = add i64 %8536, 4
  store i64 %8537, i64* %PC.i510
  %8538 = inttoptr i64 %8535 to i64*
  %8539 = load i64, i64* %8538
  store i64 %8539, i64* %RAX.i511, align 8
  store %struct.Memory* %loadMem_44ae57, %struct.Memory** %MEMORY
  %loadMem_44ae5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8541 = getelementptr inbounds %struct.GPR, %struct.GPR* %8540, i32 0, i32 33
  %8542 = getelementptr inbounds %struct.Reg, %struct.Reg* %8541, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %8542 to i64*
  %8543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8544 = getelementptr inbounds %struct.GPR, %struct.GPR* %8543, i32 0, i32 1
  %8545 = getelementptr inbounds %struct.Reg, %struct.Reg* %8544, i32 0, i32 0
  %RAX.i508 = bitcast %union.anon* %8545 to i64*
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8547 = getelementptr inbounds %struct.GPR, %struct.GPR* %8546, i32 0, i32 5
  %8548 = getelementptr inbounds %struct.Reg, %struct.Reg* %8547, i32 0, i32 0
  %RCX.i509 = bitcast %union.anon* %8548 to i64*
  %8549 = load i64, i64* %RAX.i508
  %8550 = add i64 %8549, 4
  %8551 = load i64, i64* %PC.i507
  %8552 = add i64 %8551, 3
  store i64 %8552, i64* %PC.i507
  %8553 = inttoptr i64 %8550 to i32*
  %8554 = load i32, i32* %8553
  %8555 = zext i32 %8554 to i64
  store i64 %8555, i64* %RCX.i509, align 8
  store %struct.Memory* %loadMem_44ae5b, %struct.Memory** %MEMORY
  %loadMem_44ae5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8557 = getelementptr inbounds %struct.GPR, %struct.GPR* %8556, i32 0, i32 33
  %8558 = getelementptr inbounds %struct.Reg, %struct.Reg* %8557, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %8558 to i64*
  %8559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8560 = getelementptr inbounds %struct.GPR, %struct.GPR* %8559, i32 0, i32 5
  %8561 = getelementptr inbounds %struct.Reg, %struct.Reg* %8560, i32 0, i32 0
  %RCX.i506 = bitcast %union.anon* %8561 to i64*
  %8562 = load i64, i64* %RCX.i506
  %8563 = load i64, i64* %PC.i505
  %8564 = add i64 %8563, 3
  store i64 %8564, i64* %PC.i505
  %8565 = trunc i64 %8562 to i32
  %8566 = add i32 1, %8565
  %8567 = zext i32 %8566 to i64
  store i64 %8567, i64* %RCX.i506, align 8
  %8568 = icmp ult i32 %8566, %8565
  %8569 = icmp ult i32 %8566, 1
  %8570 = or i1 %8568, %8569
  %8571 = zext i1 %8570 to i8
  %8572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8571, i8* %8572, align 1
  %8573 = and i32 %8566, 255
  %8574 = call i32 @llvm.ctpop.i32(i32 %8573)
  %8575 = trunc i32 %8574 to i8
  %8576 = and i8 %8575, 1
  %8577 = xor i8 %8576, 1
  %8578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8577, i8* %8578, align 1
  %8579 = xor i64 1, %8562
  %8580 = trunc i64 %8579 to i32
  %8581 = xor i32 %8580, %8566
  %8582 = lshr i32 %8581, 4
  %8583 = trunc i32 %8582 to i8
  %8584 = and i8 %8583, 1
  %8585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8584, i8* %8585, align 1
  %8586 = icmp eq i32 %8566, 0
  %8587 = zext i1 %8586 to i8
  %8588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8587, i8* %8588, align 1
  %8589 = lshr i32 %8566, 31
  %8590 = trunc i32 %8589 to i8
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8590, i8* %8591, align 1
  %8592 = lshr i32 %8565, 31
  %8593 = xor i32 %8589, %8592
  %8594 = add i32 %8593, %8589
  %8595 = icmp eq i32 %8594, 2
  %8596 = zext i1 %8595 to i8
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8596, i8* %8597, align 1
  store %struct.Memory* %loadMem_44ae5e, %struct.Memory** %MEMORY
  %loadMem_44ae61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8599 = getelementptr inbounds %struct.GPR, %struct.GPR* %8598, i32 0, i32 33
  %8600 = getelementptr inbounds %struct.Reg, %struct.Reg* %8599, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %8600 to i64*
  %8601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8602 = getelementptr inbounds %struct.GPR, %struct.GPR* %8601, i32 0, i32 5
  %8603 = getelementptr inbounds %struct.Reg, %struct.Reg* %8602, i32 0, i32 0
  %ECX.i503 = bitcast %union.anon* %8603 to i32*
  %8604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8605 = getelementptr inbounds %struct.GPR, %struct.GPR* %8604, i32 0, i32 1
  %8606 = getelementptr inbounds %struct.Reg, %struct.Reg* %8605, i32 0, i32 0
  %RAX.i504 = bitcast %union.anon* %8606 to i64*
  %8607 = load i64, i64* %RAX.i504
  %8608 = add i64 %8607, 4
  %8609 = load i32, i32* %ECX.i503
  %8610 = zext i32 %8609 to i64
  %8611 = load i64, i64* %PC.i502
  %8612 = add i64 %8611, 3
  store i64 %8612, i64* %PC.i502
  %8613 = inttoptr i64 %8608 to i32*
  store i32 %8609, i32* %8613
  store %struct.Memory* %loadMem_44ae61, %struct.Memory** %MEMORY
  %loadMem_44ae64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8615 = getelementptr inbounds %struct.GPR, %struct.GPR* %8614, i32 0, i32 33
  %8616 = getelementptr inbounds %struct.Reg, %struct.Reg* %8615, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %8616 to i64*
  %8617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8618 = getelementptr inbounds %struct.GPR, %struct.GPR* %8617, i32 0, i32 5
  %8619 = getelementptr inbounds %struct.Reg, %struct.Reg* %8618, i32 0, i32 0
  %RCX.i500 = bitcast %union.anon* %8619 to i64*
  %8620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8621 = getelementptr inbounds %struct.GPR, %struct.GPR* %8620, i32 0, i32 15
  %8622 = getelementptr inbounds %struct.Reg, %struct.Reg* %8621, i32 0, i32 0
  %RBP.i501 = bitcast %union.anon* %8622 to i64*
  %8623 = load i64, i64* %RBP.i501
  %8624 = sub i64 %8623, 12
  %8625 = load i64, i64* %PC.i499
  %8626 = add i64 %8625, 3
  store i64 %8626, i64* %PC.i499
  %8627 = inttoptr i64 %8624 to i32*
  %8628 = load i32, i32* %8627
  %8629 = zext i32 %8628 to i64
  store i64 %8629, i64* %RCX.i500, align 8
  store %struct.Memory* %loadMem_44ae64, %struct.Memory** %MEMORY
  %loadMem_44ae67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8631 = getelementptr inbounds %struct.GPR, %struct.GPR* %8630, i32 0, i32 33
  %8632 = getelementptr inbounds %struct.Reg, %struct.Reg* %8631, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %8632 to i64*
  %8633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8634 = getelementptr inbounds %struct.GPR, %struct.GPR* %8633, i32 0, i32 5
  %8635 = getelementptr inbounds %struct.Reg, %struct.Reg* %8634, i32 0, i32 0
  %RCX.i498 = bitcast %union.anon* %8635 to i64*
  %8636 = load i64, i64* %RCX.i498
  %8637 = load i64, i64* %PC.i497
  %8638 = add i64 %8637, 2
  store i64 %8638, i64* %PC.i497
  %8639 = trunc i64 %8636 to i32
  %8640 = shl i32 %8639, 1
  %8641 = icmp slt i32 %8639, 0
  %8642 = icmp slt i32 %8640, 0
  %8643 = xor i1 %8641, %8642
  %8644 = zext i32 %8640 to i64
  store i64 %8644, i64* %RCX.i498, align 8
  %8645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8646 = zext i1 %8641 to i8
  store i8 %8646, i8* %8645, align 1
  %8647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8648 = and i32 %8640, 254
  %8649 = call i32 @llvm.ctpop.i32(i32 %8648)
  %8650 = trunc i32 %8649 to i8
  %8651 = and i8 %8650, 1
  %8652 = xor i8 %8651, 1
  store i8 %8652, i8* %8647, align 1
  %8653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8653, align 1
  %8654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8655 = icmp eq i32 %8640, 0
  %8656 = zext i1 %8655 to i8
  store i8 %8656, i8* %8654, align 1
  %8657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8658 = lshr i32 %8640, 31
  %8659 = trunc i32 %8658 to i8
  store i8 %8659, i8* %8657, align 1
  %8660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8661 = zext i1 %8643 to i8
  store i8 %8661, i8* %8660, align 1
  store %struct.Memory* %loadMem_44ae67, %struct.Memory** %MEMORY
  %loadMem_44ae6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8663 = getelementptr inbounds %struct.GPR, %struct.GPR* %8662, i32 0, i32 33
  %8664 = getelementptr inbounds %struct.Reg, %struct.Reg* %8663, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %8664 to i64*
  %8665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8666 = getelementptr inbounds %struct.GPR, %struct.GPR* %8665, i32 0, i32 5
  %8667 = getelementptr inbounds %struct.Reg, %struct.Reg* %8666, i32 0, i32 0
  %ECX.i495 = bitcast %union.anon* %8667 to i32*
  %8668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8669 = getelementptr inbounds %struct.GPR, %struct.GPR* %8668, i32 0, i32 15
  %8670 = getelementptr inbounds %struct.Reg, %struct.Reg* %8669, i32 0, i32 0
  %RBP.i496 = bitcast %union.anon* %8670 to i64*
  %8671 = load i64, i64* %RBP.i496
  %8672 = sub i64 %8671, 44
  %8673 = load i32, i32* %ECX.i495
  %8674 = zext i32 %8673 to i64
  %8675 = load i64, i64* %PC.i494
  %8676 = add i64 %8675, 3
  store i64 %8676, i64* %PC.i494
  %8677 = inttoptr i64 %8672 to i32*
  store i32 %8673, i32* %8677
  store %struct.Memory* %loadMem_44ae6a, %struct.Memory** %MEMORY
  %loadMem_44ae6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8679 = getelementptr inbounds %struct.GPR, %struct.GPR* %8678, i32 0, i32 33
  %8680 = getelementptr inbounds %struct.Reg, %struct.Reg* %8679, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %8680 to i64*
  %8681 = load i64, i64* %PC.i493
  %8682 = add i64 %8681, 11
  %8683 = load i64, i64* %PC.i493
  %8684 = add i64 %8683, 5
  store i64 %8684, i64* %PC.i493
  %8685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8682, i64* %8685, align 8
  store %struct.Memory* %loadMem_44ae6d, %struct.Memory** %MEMORY
  br label %block_.L_44ae78

block_.L_44ae72:                                  ; preds = %block_44ae26
  %loadMem_44ae72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8687 = getelementptr inbounds %struct.GPR, %struct.GPR* %8686, i32 0, i32 33
  %8688 = getelementptr inbounds %struct.Reg, %struct.Reg* %8687, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %8688 to i64*
  %8689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8690 = getelementptr inbounds %struct.GPR, %struct.GPR* %8689, i32 0, i32 1
  %8691 = getelementptr inbounds %struct.Reg, %struct.Reg* %8690, i32 0, i32 0
  %RAX.i491 = bitcast %union.anon* %8691 to i64*
  %8692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8693 = getelementptr inbounds %struct.GPR, %struct.GPR* %8692, i32 0, i32 15
  %8694 = getelementptr inbounds %struct.Reg, %struct.Reg* %8693, i32 0, i32 0
  %RBP.i492 = bitcast %union.anon* %8694 to i64*
  %8695 = load i64, i64* %RBP.i492
  %8696 = sub i64 %8695, 12
  %8697 = load i64, i64* %PC.i490
  %8698 = add i64 %8697, 3
  store i64 %8698, i64* %PC.i490
  %8699 = inttoptr i64 %8696 to i32*
  %8700 = load i32, i32* %8699
  %8701 = zext i32 %8700 to i64
  store i64 %8701, i64* %RAX.i491, align 8
  store %struct.Memory* %loadMem_44ae72, %struct.Memory** %MEMORY
  %loadMem_44ae75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8703 = getelementptr inbounds %struct.GPR, %struct.GPR* %8702, i32 0, i32 33
  %8704 = getelementptr inbounds %struct.Reg, %struct.Reg* %8703, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %8704 to i64*
  %8705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8706 = getelementptr inbounds %struct.GPR, %struct.GPR* %8705, i32 0, i32 1
  %8707 = getelementptr inbounds %struct.Reg, %struct.Reg* %8706, i32 0, i32 0
  %EAX.i488 = bitcast %union.anon* %8707 to i32*
  %8708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8709 = getelementptr inbounds %struct.GPR, %struct.GPR* %8708, i32 0, i32 15
  %8710 = getelementptr inbounds %struct.Reg, %struct.Reg* %8709, i32 0, i32 0
  %RBP.i489 = bitcast %union.anon* %8710 to i64*
  %8711 = load i64, i64* %RBP.i489
  %8712 = sub i64 %8711, 44
  %8713 = load i32, i32* %EAX.i488
  %8714 = zext i32 %8713 to i64
  %8715 = load i64, i64* %PC.i487
  %8716 = add i64 %8715, 3
  store i64 %8716, i64* %PC.i487
  %8717 = inttoptr i64 %8712 to i32*
  store i32 %8713, i32* %8717
  store %struct.Memory* %loadMem_44ae75, %struct.Memory** %MEMORY
  br label %block_.L_44ae78

block_.L_44ae78:                                  ; preds = %block_.L_44ae72, %block_44ae57
  %loadMem_44ae78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8719 = getelementptr inbounds %struct.GPR, %struct.GPR* %8718, i32 0, i32 33
  %8720 = getelementptr inbounds %struct.Reg, %struct.Reg* %8719, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %8720 to i64*
  %8721 = load i64, i64* %PC.i486
  %8722 = add i64 %8721, 5
  %8723 = load i64, i64* %PC.i486
  %8724 = add i64 %8723, 5
  store i64 %8724, i64* %PC.i486
  %8725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8722, i64* %8725, align 8
  store %struct.Memory* %loadMem_44ae78, %struct.Memory** %MEMORY
  br label %block_.L_44ae7d

block_.L_44ae7d:                                  ; preds = %block_.L_44ae78, %block_44adf4
  %loadMem_44ae7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8727 = getelementptr inbounds %struct.GPR, %struct.GPR* %8726, i32 0, i32 33
  %8728 = getelementptr inbounds %struct.Reg, %struct.Reg* %8727, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %8728 to i64*
  %8729 = load i64, i64* %PC.i485
  %8730 = add i64 %8729, 47
  %8731 = load i64, i64* %PC.i485
  %8732 = add i64 %8731, 5
  store i64 %8732, i64* %PC.i485
  %8733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8730, i64* %8733, align 8
  store %struct.Memory* %loadMem_44ae7d, %struct.Memory** %MEMORY
  br label %block_.L_44aeac

block_.L_44ae82:                                  ; preds = %block_.L_44ade5
  %loadMem_44ae82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8735 = getelementptr inbounds %struct.GPR, %struct.GPR* %8734, i32 0, i32 33
  %8736 = getelementptr inbounds %struct.Reg, %struct.Reg* %8735, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %8736 to i64*
  %8737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8738 = getelementptr inbounds %struct.GPR, %struct.GPR* %8737, i32 0, i32 1
  %8739 = getelementptr inbounds %struct.Reg, %struct.Reg* %8738, i32 0, i32 0
  %RAX.i483 = bitcast %union.anon* %8739 to i64*
  %8740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8741 = getelementptr inbounds %struct.GPR, %struct.GPR* %8740, i32 0, i32 15
  %8742 = getelementptr inbounds %struct.Reg, %struct.Reg* %8741, i32 0, i32 0
  %RBP.i484 = bitcast %union.anon* %8742 to i64*
  %8743 = load i64, i64* %RBP.i484
  %8744 = sub i64 %8743, 32
  %8745 = load i64, i64* %PC.i482
  %8746 = add i64 %8745, 4
  store i64 %8746, i64* %PC.i482
  %8747 = inttoptr i64 %8744 to i64*
  %8748 = load i64, i64* %8747
  store i64 %8748, i64* %RAX.i483, align 8
  store %struct.Memory* %loadMem_44ae82, %struct.Memory** %MEMORY
  %loadMem_44ae86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8750 = getelementptr inbounds %struct.GPR, %struct.GPR* %8749, i32 0, i32 33
  %8751 = getelementptr inbounds %struct.Reg, %struct.Reg* %8750, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %8751 to i64*
  %8752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8753 = getelementptr inbounds %struct.GPR, %struct.GPR* %8752, i32 0, i32 1
  %8754 = getelementptr inbounds %struct.Reg, %struct.Reg* %8753, i32 0, i32 0
  %RAX.i480 = bitcast %union.anon* %8754 to i64*
  %8755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8756 = getelementptr inbounds %struct.GPR, %struct.GPR* %8755, i32 0, i32 5
  %8757 = getelementptr inbounds %struct.Reg, %struct.Reg* %8756, i32 0, i32 0
  %RCX.i481 = bitcast %union.anon* %8757 to i64*
  %8758 = load i64, i64* %RAX.i480
  %8759 = add i64 %8758, 540
  %8760 = load i64, i64* %PC.i479
  %8761 = add i64 %8760, 6
  store i64 %8761, i64* %PC.i479
  %8762 = inttoptr i64 %8759 to i32*
  %8763 = load i32, i32* %8762
  %8764 = zext i32 %8763 to i64
  store i64 %8764, i64* %RCX.i481, align 8
  store %struct.Memory* %loadMem_44ae86, %struct.Memory** %MEMORY
  %loadMem_44ae8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8766 = getelementptr inbounds %struct.GPR, %struct.GPR* %8765, i32 0, i32 33
  %8767 = getelementptr inbounds %struct.Reg, %struct.Reg* %8766, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %8767 to i64*
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8769 = getelementptr inbounds %struct.GPR, %struct.GPR* %8768, i32 0, i32 5
  %8770 = getelementptr inbounds %struct.Reg, %struct.Reg* %8769, i32 0, i32 0
  %RCX.i478 = bitcast %union.anon* %8770 to i64*
  %8771 = load i64, i64* %RCX.i478
  %8772 = load i64, i64* %PC.i477
  %8773 = add i64 %8772, 3
  store i64 %8773, i64* %PC.i477
  %8774 = trunc i64 %8771 to i32
  %8775 = add i32 1, %8774
  %8776 = zext i32 %8775 to i64
  store i64 %8776, i64* %RCX.i478, align 8
  %8777 = icmp ult i32 %8775, %8774
  %8778 = icmp ult i32 %8775, 1
  %8779 = or i1 %8777, %8778
  %8780 = zext i1 %8779 to i8
  %8781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8780, i8* %8781, align 1
  %8782 = and i32 %8775, 255
  %8783 = call i32 @llvm.ctpop.i32(i32 %8782)
  %8784 = trunc i32 %8783 to i8
  %8785 = and i8 %8784, 1
  %8786 = xor i8 %8785, 1
  %8787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8786, i8* %8787, align 1
  %8788 = xor i64 1, %8771
  %8789 = trunc i64 %8788 to i32
  %8790 = xor i32 %8789, %8775
  %8791 = lshr i32 %8790, 4
  %8792 = trunc i32 %8791 to i8
  %8793 = and i8 %8792, 1
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8793, i8* %8794, align 1
  %8795 = icmp eq i32 %8775, 0
  %8796 = zext i1 %8795 to i8
  %8797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8796, i8* %8797, align 1
  %8798 = lshr i32 %8775, 31
  %8799 = trunc i32 %8798 to i8
  %8800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8799, i8* %8800, align 1
  %8801 = lshr i32 %8774, 31
  %8802 = xor i32 %8798, %8801
  %8803 = add i32 %8802, %8798
  %8804 = icmp eq i32 %8803, 2
  %8805 = zext i1 %8804 to i8
  %8806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8805, i8* %8806, align 1
  store %struct.Memory* %loadMem_44ae8c, %struct.Memory** %MEMORY
  %loadMem_44ae8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8808 = getelementptr inbounds %struct.GPR, %struct.GPR* %8807, i32 0, i32 33
  %8809 = getelementptr inbounds %struct.Reg, %struct.Reg* %8808, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %8809 to i64*
  %8810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8811 = getelementptr inbounds %struct.GPR, %struct.GPR* %8810, i32 0, i32 1
  %8812 = getelementptr inbounds %struct.Reg, %struct.Reg* %8811, i32 0, i32 0
  %RAX.i475 = bitcast %union.anon* %8812 to i64*
  %8813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8814 = getelementptr inbounds %struct.GPR, %struct.GPR* %8813, i32 0, i32 15
  %8815 = getelementptr inbounds %struct.Reg, %struct.Reg* %8814, i32 0, i32 0
  %RBP.i476 = bitcast %union.anon* %8815 to i64*
  %8816 = load i64, i64* %RBP.i476
  %8817 = sub i64 %8816, 24
  %8818 = load i64, i64* %PC.i474
  %8819 = add i64 %8818, 4
  store i64 %8819, i64* %PC.i474
  %8820 = inttoptr i64 %8817 to i64*
  %8821 = load i64, i64* %8820
  store i64 %8821, i64* %RAX.i475, align 8
  store %struct.Memory* %loadMem_44ae8f, %struct.Memory** %MEMORY
  %loadMem_44ae93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8823 = getelementptr inbounds %struct.GPR, %struct.GPR* %8822, i32 0, i32 33
  %8824 = getelementptr inbounds %struct.Reg, %struct.Reg* %8823, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %8824 to i64*
  %8825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8826 = getelementptr inbounds %struct.GPR, %struct.GPR* %8825, i32 0, i32 5
  %8827 = getelementptr inbounds %struct.Reg, %struct.Reg* %8826, i32 0, i32 0
  %ECX.i472 = bitcast %union.anon* %8827 to i32*
  %8828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8829 = getelementptr inbounds %struct.GPR, %struct.GPR* %8828, i32 0, i32 1
  %8830 = getelementptr inbounds %struct.Reg, %struct.Reg* %8829, i32 0, i32 0
  %RAX.i473 = bitcast %union.anon* %8830 to i64*
  %8831 = load i64, i64* %RAX.i473
  %8832 = add i64 %8831, 4
  %8833 = load i32, i32* %ECX.i472
  %8834 = zext i32 %8833 to i64
  %8835 = load i64, i64* %PC.i471
  %8836 = add i64 %8835, 3
  store i64 %8836, i64* %PC.i471
  %8837 = inttoptr i64 %8832 to i32*
  store i32 %8833, i32* %8837
  store %struct.Memory* %loadMem_44ae93, %struct.Memory** %MEMORY
  %loadMem_44ae96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8839 = getelementptr inbounds %struct.GPR, %struct.GPR* %8838, i32 0, i32 33
  %8840 = getelementptr inbounds %struct.Reg, %struct.Reg* %8839, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %8840 to i64*
  %8841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8842 = getelementptr inbounds %struct.GPR, %struct.GPR* %8841, i32 0, i32 1
  %8843 = getelementptr inbounds %struct.Reg, %struct.Reg* %8842, i32 0, i32 0
  %RAX.i469 = bitcast %union.anon* %8843 to i64*
  %8844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8845 = getelementptr inbounds %struct.GPR, %struct.GPR* %8844, i32 0, i32 15
  %8846 = getelementptr inbounds %struct.Reg, %struct.Reg* %8845, i32 0, i32 0
  %RBP.i470 = bitcast %union.anon* %8846 to i64*
  %8847 = load i64, i64* %RBP.i470
  %8848 = sub i64 %8847, 32
  %8849 = load i64, i64* %PC.i468
  %8850 = add i64 %8849, 4
  store i64 %8850, i64* %PC.i468
  %8851 = inttoptr i64 %8848 to i64*
  %8852 = load i64, i64* %8851
  store i64 %8852, i64* %RAX.i469, align 8
  store %struct.Memory* %loadMem_44ae96, %struct.Memory** %MEMORY
  %loadMem_44ae9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8854 = getelementptr inbounds %struct.GPR, %struct.GPR* %8853, i32 0, i32 33
  %8855 = getelementptr inbounds %struct.Reg, %struct.Reg* %8854, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %8855 to i64*
  %8856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8857 = getelementptr inbounds %struct.GPR, %struct.GPR* %8856, i32 0, i32 1
  %8858 = getelementptr inbounds %struct.Reg, %struct.Reg* %8857, i32 0, i32 0
  %RAX.i466 = bitcast %union.anon* %8858 to i64*
  %8859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8860 = getelementptr inbounds %struct.GPR, %struct.GPR* %8859, i32 0, i32 5
  %8861 = getelementptr inbounds %struct.Reg, %struct.Reg* %8860, i32 0, i32 0
  %RCX.i467 = bitcast %union.anon* %8861 to i64*
  %8862 = load i64, i64* %RAX.i466
  %8863 = add i64 %8862, 556
  %8864 = load i64, i64* %PC.i465
  %8865 = add i64 %8864, 6
  store i64 %8865, i64* %PC.i465
  %8866 = inttoptr i64 %8863 to i32*
  %8867 = load i32, i32* %8866
  %8868 = zext i32 %8867 to i64
  store i64 %8868, i64* %RCX.i467, align 8
  store %struct.Memory* %loadMem_44ae9a, %struct.Memory** %MEMORY
  %loadMem_44aea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8870 = getelementptr inbounds %struct.GPR, %struct.GPR* %8869, i32 0, i32 33
  %8871 = getelementptr inbounds %struct.Reg, %struct.Reg* %8870, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %8871 to i64*
  %8872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8873 = getelementptr inbounds %struct.GPR, %struct.GPR* %8872, i32 0, i32 1
  %8874 = getelementptr inbounds %struct.Reg, %struct.Reg* %8873, i32 0, i32 0
  %RAX.i463 = bitcast %union.anon* %8874 to i64*
  %8875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8876 = getelementptr inbounds %struct.GPR, %struct.GPR* %8875, i32 0, i32 15
  %8877 = getelementptr inbounds %struct.Reg, %struct.Reg* %8876, i32 0, i32 0
  %RBP.i464 = bitcast %union.anon* %8877 to i64*
  %8878 = load i64, i64* %RBP.i464
  %8879 = sub i64 %8878, 24
  %8880 = load i64, i64* %PC.i462
  %8881 = add i64 %8880, 4
  store i64 %8881, i64* %PC.i462
  %8882 = inttoptr i64 %8879 to i64*
  %8883 = load i64, i64* %8882
  store i64 %8883, i64* %RAX.i463, align 8
  store %struct.Memory* %loadMem_44aea0, %struct.Memory** %MEMORY
  %loadMem_44aea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8885 = getelementptr inbounds %struct.GPR, %struct.GPR* %8884, i32 0, i32 33
  %8886 = getelementptr inbounds %struct.Reg, %struct.Reg* %8885, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %8886 to i64*
  %8887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8888 = getelementptr inbounds %struct.GPR, %struct.GPR* %8887, i32 0, i32 5
  %8889 = getelementptr inbounds %struct.Reg, %struct.Reg* %8888, i32 0, i32 0
  %ECX.i460 = bitcast %union.anon* %8889 to i32*
  %8890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8891 = getelementptr inbounds %struct.GPR, %struct.GPR* %8890, i32 0, i32 1
  %8892 = getelementptr inbounds %struct.Reg, %struct.Reg* %8891, i32 0, i32 0
  %RAX.i461 = bitcast %union.anon* %8892 to i64*
  %8893 = load i64, i64* %RAX.i461
  %8894 = load i32, i32* %ECX.i460
  %8895 = zext i32 %8894 to i64
  %8896 = load i64, i64* %PC.i459
  %8897 = add i64 %8896, 2
  store i64 %8897, i64* %PC.i459
  %8898 = inttoptr i64 %8893 to i32*
  store i32 %8894, i32* %8898
  store %struct.Memory* %loadMem_44aea4, %struct.Memory** %MEMORY
  %loadMem_44aea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8900 = getelementptr inbounds %struct.GPR, %struct.GPR* %8899, i32 0, i32 33
  %8901 = getelementptr inbounds %struct.Reg, %struct.Reg* %8900, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %8901 to i64*
  %8902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8903 = getelementptr inbounds %struct.GPR, %struct.GPR* %8902, i32 0, i32 5
  %8904 = getelementptr inbounds %struct.Reg, %struct.Reg* %8903, i32 0, i32 0
  %RCX.i457 = bitcast %union.anon* %8904 to i64*
  %8905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8906 = getelementptr inbounds %struct.GPR, %struct.GPR* %8905, i32 0, i32 15
  %8907 = getelementptr inbounds %struct.Reg, %struct.Reg* %8906, i32 0, i32 0
  %RBP.i458 = bitcast %union.anon* %8907 to i64*
  %8908 = load i64, i64* %RBP.i458
  %8909 = sub i64 %8908, 12
  %8910 = load i64, i64* %PC.i456
  %8911 = add i64 %8910, 3
  store i64 %8911, i64* %PC.i456
  %8912 = inttoptr i64 %8909 to i32*
  %8913 = load i32, i32* %8912
  %8914 = zext i32 %8913 to i64
  store i64 %8914, i64* %RCX.i457, align 8
  store %struct.Memory* %loadMem_44aea6, %struct.Memory** %MEMORY
  %loadMem_44aea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8916 = getelementptr inbounds %struct.GPR, %struct.GPR* %8915, i32 0, i32 33
  %8917 = getelementptr inbounds %struct.Reg, %struct.Reg* %8916, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %8917 to i64*
  %8918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8919 = getelementptr inbounds %struct.GPR, %struct.GPR* %8918, i32 0, i32 5
  %8920 = getelementptr inbounds %struct.Reg, %struct.Reg* %8919, i32 0, i32 0
  %ECX.i454 = bitcast %union.anon* %8920 to i32*
  %8921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8922 = getelementptr inbounds %struct.GPR, %struct.GPR* %8921, i32 0, i32 15
  %8923 = getelementptr inbounds %struct.Reg, %struct.Reg* %8922, i32 0, i32 0
  %RBP.i455 = bitcast %union.anon* %8923 to i64*
  %8924 = load i64, i64* %RBP.i455
  %8925 = sub i64 %8924, 44
  %8926 = load i32, i32* %ECX.i454
  %8927 = zext i32 %8926 to i64
  %8928 = load i64, i64* %PC.i453
  %8929 = add i64 %8928, 3
  store i64 %8929, i64* %PC.i453
  %8930 = inttoptr i64 %8925 to i32*
  store i32 %8926, i32* %8930
  store %struct.Memory* %loadMem_44aea9, %struct.Memory** %MEMORY
  br label %block_.L_44aeac

block_.L_44aeac:                                  ; preds = %block_.L_44ae82, %block_.L_44ae7d
  %loadMem_44aeac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8932 = getelementptr inbounds %struct.GPR, %struct.GPR* %8931, i32 0, i32 33
  %8933 = getelementptr inbounds %struct.Reg, %struct.Reg* %8932, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %8933 to i64*
  %8934 = load i64, i64* %PC.i452
  %8935 = add i64 %8934, 5
  %8936 = load i64, i64* %PC.i452
  %8937 = add i64 %8936, 5
  store i64 %8937, i64* %PC.i452
  %8938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8935, i64* %8938, align 8
  store %struct.Memory* %loadMem_44aeac, %struct.Memory** %MEMORY
  br label %block_.L_44aeb1

block_.L_44aeb1:                                  ; preds = %block_.L_44aeac, %block_.L_44ade0
  %loadMem_44aeb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8940 = getelementptr inbounds %struct.GPR, %struct.GPR* %8939, i32 0, i32 33
  %8941 = getelementptr inbounds %struct.Reg, %struct.Reg* %8940, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %8941 to i64*
  %8942 = load i64, i64* %PC.i451
  %8943 = add i64 %8942, 138
  %8944 = load i64, i64* %PC.i451
  %8945 = add i64 %8944, 5
  store i64 %8945, i64* %PC.i451
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8943, i64* %8946, align 8
  store %struct.Memory* %loadMem_44aeb1, %struct.Memory** %MEMORY
  br label %block_.L_44af3b

block_.L_44aeb6:                                  ; preds = %block_44ad04
  %loadMem_44aeb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8948 = getelementptr inbounds %struct.GPR, %struct.GPR* %8947, i32 0, i32 33
  %8949 = getelementptr inbounds %struct.Reg, %struct.Reg* %8948, i32 0, i32 0
  %PC.i449 = bitcast %union.anon* %8949 to i64*
  %8950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8951 = getelementptr inbounds %struct.GPR, %struct.GPR* %8950, i32 0, i32 15
  %8952 = getelementptr inbounds %struct.Reg, %struct.Reg* %8951, i32 0, i32 0
  %RBP.i450 = bitcast %union.anon* %8952 to i64*
  %8953 = load i64, i64* %RBP.i450
  %8954 = sub i64 %8953, 12
  %8955 = load i64, i64* %PC.i449
  %8956 = add i64 %8955, 4
  store i64 %8956, i64* %PC.i449
  %8957 = inttoptr i64 %8954 to i32*
  %8958 = load i32, i32* %8957
  %8959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8959, align 1
  %8960 = and i32 %8958, 255
  %8961 = call i32 @llvm.ctpop.i32(i32 %8960)
  %8962 = trunc i32 %8961 to i8
  %8963 = and i8 %8962, 1
  %8964 = xor i8 %8963, 1
  %8965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8964, i8* %8965, align 1
  %8966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8966, align 1
  %8967 = icmp eq i32 %8958, 0
  %8968 = zext i1 %8967 to i8
  %8969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8968, i8* %8969, align 1
  %8970 = lshr i32 %8958, 31
  %8971 = trunc i32 %8970 to i8
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8971, i8* %8972, align 1
  %8973 = lshr i32 %8958, 31
  %8974 = xor i32 %8970, %8973
  %8975 = add i32 %8974, %8973
  %8976 = icmp eq i32 %8975, 2
  %8977 = zext i1 %8976 to i8
  %8978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8977, i8* %8978, align 1
  store %struct.Memory* %loadMem_44aeb6, %struct.Memory** %MEMORY
  %loadMem_44aeba = load %struct.Memory*, %struct.Memory** %MEMORY
  %8979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8980 = getelementptr inbounds %struct.GPR, %struct.GPR* %8979, i32 0, i32 33
  %8981 = getelementptr inbounds %struct.Reg, %struct.Reg* %8980, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %8981 to i64*
  %8982 = load i64, i64* %PC.i448
  %8983 = add i64 %8982, 71
  %8984 = load i64, i64* %PC.i448
  %8985 = add i64 %8984, 6
  %8986 = load i64, i64* %PC.i448
  %8987 = add i64 %8986, 6
  store i64 %8987, i64* %PC.i448
  %8988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8989 = load i8, i8* %8988, align 1
  %8990 = icmp eq i8 %8989, 0
  %8991 = zext i1 %8990 to i8
  store i8 %8991, i8* %BRANCH_TAKEN, align 1
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8993 = select i1 %8990, i64 %8983, i64 %8985
  store i64 %8993, i64* %8992, align 8
  store %struct.Memory* %loadMem_44aeba, %struct.Memory** %MEMORY
  %loadBr_44aeba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44aeba = icmp eq i8 %loadBr_44aeba, 1
  br i1 %cmpBr_44aeba, label %block_.L_44af01, label %block_44aec0

block_44aec0:                                     ; preds = %block_.L_44aeb6
  %loadMem_44aec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8995 = getelementptr inbounds %struct.GPR, %struct.GPR* %8994, i32 0, i32 33
  %8996 = getelementptr inbounds %struct.Reg, %struct.Reg* %8995, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %8996 to i64*
  %8997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8998 = getelementptr inbounds %struct.GPR, %struct.GPR* %8997, i32 0, i32 1
  %8999 = getelementptr inbounds %struct.Reg, %struct.Reg* %8998, i32 0, i32 0
  %RAX.i447 = bitcast %union.anon* %8999 to i64*
  %9000 = load i64, i64* %PC.i446
  %9001 = add i64 %9000, 8
  store i64 %9001, i64* %PC.i446
  %9002 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9002, i64* %RAX.i447, align 8
  store %struct.Memory* %loadMem_44aec0, %struct.Memory** %MEMORY
  %loadMem_44aec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9004 = getelementptr inbounds %struct.GPR, %struct.GPR* %9003, i32 0, i32 33
  %9005 = getelementptr inbounds %struct.Reg, %struct.Reg* %9004, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %9005 to i64*
  %9006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9007 = getelementptr inbounds %struct.GPR, %struct.GPR* %9006, i32 0, i32 1
  %9008 = getelementptr inbounds %struct.Reg, %struct.Reg* %9007, i32 0, i32 0
  %RAX.i445 = bitcast %union.anon* %9008 to i64*
  %9009 = load i64, i64* %RAX.i445
  %9010 = add i64 %9009, 72636
  %9011 = load i64, i64* %PC.i444
  %9012 = add i64 %9011, 7
  store i64 %9012, i64* %PC.i444
  %9013 = inttoptr i64 %9010 to i32*
  %9014 = load i32, i32* %9013
  %9015 = sub i32 %9014, 2
  %9016 = icmp ult i32 %9014, 2
  %9017 = zext i1 %9016 to i8
  %9018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9017, i8* %9018, align 1
  %9019 = and i32 %9015, 255
  %9020 = call i32 @llvm.ctpop.i32(i32 %9019)
  %9021 = trunc i32 %9020 to i8
  %9022 = and i8 %9021, 1
  %9023 = xor i8 %9022, 1
  %9024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9023, i8* %9024, align 1
  %9025 = xor i32 %9014, 2
  %9026 = xor i32 %9025, %9015
  %9027 = lshr i32 %9026, 4
  %9028 = trunc i32 %9027 to i8
  %9029 = and i8 %9028, 1
  %9030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9029, i8* %9030, align 1
  %9031 = icmp eq i32 %9015, 0
  %9032 = zext i1 %9031 to i8
  %9033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9032, i8* %9033, align 1
  %9034 = lshr i32 %9015, 31
  %9035 = trunc i32 %9034 to i8
  %9036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9035, i8* %9036, align 1
  %9037 = lshr i32 %9014, 31
  %9038 = xor i32 %9034, %9037
  %9039 = add i32 %9038, %9037
  %9040 = icmp eq i32 %9039, 2
  %9041 = zext i1 %9040 to i8
  %9042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9041, i8* %9042, align 1
  store %struct.Memory* %loadMem_44aec8, %struct.Memory** %MEMORY
  %loadMem_44aecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9044 = getelementptr inbounds %struct.GPR, %struct.GPR* %9043, i32 0, i32 33
  %9045 = getelementptr inbounds %struct.Reg, %struct.Reg* %9044, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %9045 to i64*
  %9046 = load i64, i64* %PC.i443
  %9047 = add i64 %9046, 50
  %9048 = load i64, i64* %PC.i443
  %9049 = add i64 %9048, 6
  %9050 = load i64, i64* %PC.i443
  %9051 = add i64 %9050, 6
  store i64 %9051, i64* %PC.i443
  %9052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9053 = load i8, i8* %9052, align 1
  %9054 = icmp eq i8 %9053, 0
  %9055 = zext i1 %9054 to i8
  store i8 %9055, i8* %BRANCH_TAKEN, align 1
  %9056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9057 = select i1 %9054, i64 %9047, i64 %9049
  store i64 %9057, i64* %9056, align 8
  store %struct.Memory* %loadMem_44aecf, %struct.Memory** %MEMORY
  %loadBr_44aecf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44aecf = icmp eq i8 %loadBr_44aecf, 1
  br i1 %cmpBr_44aecf, label %block_.L_44af01, label %block_44aed5

block_44aed5:                                     ; preds = %block_44aec0
  %loadMem_44aed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9059 = getelementptr inbounds %struct.GPR, %struct.GPR* %9058, i32 0, i32 33
  %9060 = getelementptr inbounds %struct.Reg, %struct.Reg* %9059, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %9060 to i64*
  %9061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9062 = getelementptr inbounds %struct.GPR, %struct.GPR* %9061, i32 0, i32 1
  %9063 = getelementptr inbounds %struct.Reg, %struct.Reg* %9062, i32 0, i32 0
  %RAX.i441 = bitcast %union.anon* %9063 to i64*
  %9064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9065 = getelementptr inbounds %struct.GPR, %struct.GPR* %9064, i32 0, i32 15
  %9066 = getelementptr inbounds %struct.Reg, %struct.Reg* %9065, i32 0, i32 0
  %RBP.i442 = bitcast %union.anon* %9066 to i64*
  %9067 = load i64, i64* %RBP.i442
  %9068 = sub i64 %9067, 32
  %9069 = load i64, i64* %PC.i440
  %9070 = add i64 %9069, 4
  store i64 %9070, i64* %PC.i440
  %9071 = inttoptr i64 %9068 to i64*
  %9072 = load i64, i64* %9071
  store i64 %9072, i64* %RAX.i441, align 8
  store %struct.Memory* %loadMem_44aed5, %struct.Memory** %MEMORY
  %loadMem_44aed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9074 = getelementptr inbounds %struct.GPR, %struct.GPR* %9073, i32 0, i32 33
  %9075 = getelementptr inbounds %struct.Reg, %struct.Reg* %9074, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %9075 to i64*
  %9076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9077 = getelementptr inbounds %struct.GPR, %struct.GPR* %9076, i32 0, i32 1
  %9078 = getelementptr inbounds %struct.Reg, %struct.Reg* %9077, i32 0, i32 0
  %RAX.i438 = bitcast %union.anon* %9078 to i64*
  %9079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9080 = getelementptr inbounds %struct.GPR, %struct.GPR* %9079, i32 0, i32 5
  %9081 = getelementptr inbounds %struct.Reg, %struct.Reg* %9080, i32 0, i32 0
  %RCX.i439 = bitcast %union.anon* %9081 to i64*
  %9082 = load i64, i64* %RAX.i438
  %9083 = add i64 %9082, 540
  %9084 = load i64, i64* %PC.i437
  %9085 = add i64 %9084, 6
  store i64 %9085, i64* %PC.i437
  %9086 = inttoptr i64 %9083 to i32*
  %9087 = load i32, i32* %9086
  %9088 = zext i32 %9087 to i64
  store i64 %9088, i64* %RCX.i439, align 8
  store %struct.Memory* %loadMem_44aed9, %struct.Memory** %MEMORY
  %loadMem_44aedf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9090 = getelementptr inbounds %struct.GPR, %struct.GPR* %9089, i32 0, i32 33
  %9091 = getelementptr inbounds %struct.Reg, %struct.Reg* %9090, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %9091 to i64*
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9093 = getelementptr inbounds %struct.GPR, %struct.GPR* %9092, i32 0, i32 5
  %9094 = getelementptr inbounds %struct.Reg, %struct.Reg* %9093, i32 0, i32 0
  %RCX.i436 = bitcast %union.anon* %9094 to i64*
  %9095 = load i64, i64* %RCX.i436
  %9096 = load i64, i64* %PC.i435
  %9097 = add i64 %9096, 3
  store i64 %9097, i64* %PC.i435
  %9098 = trunc i64 %9095 to i32
  %9099 = add i32 1, %9098
  %9100 = zext i32 %9099 to i64
  store i64 %9100, i64* %RCX.i436, align 8
  %9101 = icmp ult i32 %9099, %9098
  %9102 = icmp ult i32 %9099, 1
  %9103 = or i1 %9101, %9102
  %9104 = zext i1 %9103 to i8
  %9105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9104, i8* %9105, align 1
  %9106 = and i32 %9099, 255
  %9107 = call i32 @llvm.ctpop.i32(i32 %9106)
  %9108 = trunc i32 %9107 to i8
  %9109 = and i8 %9108, 1
  %9110 = xor i8 %9109, 1
  %9111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9110, i8* %9111, align 1
  %9112 = xor i64 1, %9095
  %9113 = trunc i64 %9112 to i32
  %9114 = xor i32 %9113, %9099
  %9115 = lshr i32 %9114, 4
  %9116 = trunc i32 %9115 to i8
  %9117 = and i8 %9116, 1
  %9118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9117, i8* %9118, align 1
  %9119 = icmp eq i32 %9099, 0
  %9120 = zext i1 %9119 to i8
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9120, i8* %9121, align 1
  %9122 = lshr i32 %9099, 31
  %9123 = trunc i32 %9122 to i8
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9123, i8* %9124, align 1
  %9125 = lshr i32 %9098, 31
  %9126 = xor i32 %9122, %9125
  %9127 = add i32 %9126, %9122
  %9128 = icmp eq i32 %9127, 2
  %9129 = zext i1 %9128 to i8
  %9130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9129, i8* %9130, align 1
  store %struct.Memory* %loadMem_44aedf, %struct.Memory** %MEMORY
  %loadMem_44aee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9132 = getelementptr inbounds %struct.GPR, %struct.GPR* %9131, i32 0, i32 33
  %9133 = getelementptr inbounds %struct.Reg, %struct.Reg* %9132, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %9133 to i64*
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9135 = getelementptr inbounds %struct.GPR, %struct.GPR* %9134, i32 0, i32 1
  %9136 = getelementptr inbounds %struct.Reg, %struct.Reg* %9135, i32 0, i32 0
  %RAX.i433 = bitcast %union.anon* %9136 to i64*
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9138 = getelementptr inbounds %struct.GPR, %struct.GPR* %9137, i32 0, i32 15
  %9139 = getelementptr inbounds %struct.Reg, %struct.Reg* %9138, i32 0, i32 0
  %RBP.i434 = bitcast %union.anon* %9139 to i64*
  %9140 = load i64, i64* %RBP.i434
  %9141 = sub i64 %9140, 24
  %9142 = load i64, i64* %PC.i432
  %9143 = add i64 %9142, 4
  store i64 %9143, i64* %PC.i432
  %9144 = inttoptr i64 %9141 to i64*
  %9145 = load i64, i64* %9144
  store i64 %9145, i64* %RAX.i433, align 8
  store %struct.Memory* %loadMem_44aee2, %struct.Memory** %MEMORY
  %loadMem_44aee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9147 = getelementptr inbounds %struct.GPR, %struct.GPR* %9146, i32 0, i32 33
  %9148 = getelementptr inbounds %struct.Reg, %struct.Reg* %9147, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %9148 to i64*
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9150 = getelementptr inbounds %struct.GPR, %struct.GPR* %9149, i32 0, i32 5
  %9151 = getelementptr inbounds %struct.Reg, %struct.Reg* %9150, i32 0, i32 0
  %ECX.i430 = bitcast %union.anon* %9151 to i32*
  %9152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9153 = getelementptr inbounds %struct.GPR, %struct.GPR* %9152, i32 0, i32 1
  %9154 = getelementptr inbounds %struct.Reg, %struct.Reg* %9153, i32 0, i32 0
  %RAX.i431 = bitcast %union.anon* %9154 to i64*
  %9155 = load i64, i64* %RAX.i431
  %9156 = add i64 %9155, 4
  %9157 = load i32, i32* %ECX.i430
  %9158 = zext i32 %9157 to i64
  %9159 = load i64, i64* %PC.i429
  %9160 = add i64 %9159, 3
  store i64 %9160, i64* %PC.i429
  %9161 = inttoptr i64 %9156 to i32*
  store i32 %9157, i32* %9161
  store %struct.Memory* %loadMem_44aee6, %struct.Memory** %MEMORY
  %loadMem_44aee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9163 = getelementptr inbounds %struct.GPR, %struct.GPR* %9162, i32 0, i32 33
  %9164 = getelementptr inbounds %struct.Reg, %struct.Reg* %9163, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %9164 to i64*
  %9165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9166 = getelementptr inbounds %struct.GPR, %struct.GPR* %9165, i32 0, i32 1
  %9167 = getelementptr inbounds %struct.Reg, %struct.Reg* %9166, i32 0, i32 0
  %RAX.i427 = bitcast %union.anon* %9167 to i64*
  %9168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9169 = getelementptr inbounds %struct.GPR, %struct.GPR* %9168, i32 0, i32 15
  %9170 = getelementptr inbounds %struct.Reg, %struct.Reg* %9169, i32 0, i32 0
  %RBP.i428 = bitcast %union.anon* %9170 to i64*
  %9171 = load i64, i64* %RBP.i428
  %9172 = sub i64 %9171, 24
  %9173 = load i64, i64* %PC.i426
  %9174 = add i64 %9173, 4
  store i64 %9174, i64* %PC.i426
  %9175 = inttoptr i64 %9172 to i64*
  %9176 = load i64, i64* %9175
  store i64 %9176, i64* %RAX.i427, align 8
  store %struct.Memory* %loadMem_44aee9, %struct.Memory** %MEMORY
  %loadMem_44aeed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9178 = getelementptr inbounds %struct.GPR, %struct.GPR* %9177, i32 0, i32 33
  %9179 = getelementptr inbounds %struct.Reg, %struct.Reg* %9178, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %9179 to i64*
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9181 = getelementptr inbounds %struct.GPR, %struct.GPR* %9180, i32 0, i32 1
  %9182 = getelementptr inbounds %struct.Reg, %struct.Reg* %9181, i32 0, i32 0
  %RAX.i425 = bitcast %union.anon* %9182 to i64*
  %9183 = load i64, i64* %RAX.i425
  %9184 = load i64, i64* %PC.i424
  %9185 = add i64 %9184, 6
  store i64 %9185, i64* %PC.i424
  %9186 = inttoptr i64 %9183 to i32*
  store i32 1, i32* %9186
  store %struct.Memory* %loadMem_44aeed, %struct.Memory** %MEMORY
  %loadMem_44aef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9188 = getelementptr inbounds %struct.GPR, %struct.GPR* %9187, i32 0, i32 33
  %9189 = getelementptr inbounds %struct.Reg, %struct.Reg* %9188, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %9189 to i64*
  %9190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9191 = getelementptr inbounds %struct.GPR, %struct.GPR* %9190, i32 0, i32 5
  %9192 = getelementptr inbounds %struct.Reg, %struct.Reg* %9191, i32 0, i32 0
  %RCX.i422 = bitcast %union.anon* %9192 to i64*
  %9193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9194 = getelementptr inbounds %struct.GPR, %struct.GPR* %9193, i32 0, i32 15
  %9195 = getelementptr inbounds %struct.Reg, %struct.Reg* %9194, i32 0, i32 0
  %RBP.i423 = bitcast %union.anon* %9195 to i64*
  %9196 = load i64, i64* %RBP.i423
  %9197 = sub i64 %9196, 12
  %9198 = load i64, i64* %PC.i421
  %9199 = add i64 %9198, 3
  store i64 %9199, i64* %PC.i421
  %9200 = inttoptr i64 %9197 to i32*
  %9201 = load i32, i32* %9200
  %9202 = zext i32 %9201 to i64
  store i64 %9202, i64* %RCX.i422, align 8
  store %struct.Memory* %loadMem_44aef3, %struct.Memory** %MEMORY
  %loadMem_44aef6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9204 = getelementptr inbounds %struct.GPR, %struct.GPR* %9203, i32 0, i32 33
  %9205 = getelementptr inbounds %struct.Reg, %struct.Reg* %9204, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %9205 to i64*
  %9206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9207 = getelementptr inbounds %struct.GPR, %struct.GPR* %9206, i32 0, i32 5
  %9208 = getelementptr inbounds %struct.Reg, %struct.Reg* %9207, i32 0, i32 0
  %RCX.i420 = bitcast %union.anon* %9208 to i64*
  %9209 = load i64, i64* %RCX.i420
  %9210 = load i64, i64* %PC.i419
  %9211 = add i64 %9210, 3
  store i64 %9211, i64* %PC.i419
  %9212 = trunc i64 %9209 to i32
  %9213 = sub i32 %9212, 1
  %9214 = zext i32 %9213 to i64
  store i64 %9214, i64* %RCX.i420, align 8
  %9215 = icmp ult i32 %9212, 1
  %9216 = zext i1 %9215 to i8
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9216, i8* %9217, align 1
  %9218 = and i32 %9213, 255
  %9219 = call i32 @llvm.ctpop.i32(i32 %9218)
  %9220 = trunc i32 %9219 to i8
  %9221 = and i8 %9220, 1
  %9222 = xor i8 %9221, 1
  %9223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9222, i8* %9223, align 1
  %9224 = xor i64 1, %9209
  %9225 = trunc i64 %9224 to i32
  %9226 = xor i32 %9225, %9213
  %9227 = lshr i32 %9226, 4
  %9228 = trunc i32 %9227 to i8
  %9229 = and i8 %9228, 1
  %9230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9229, i8* %9230, align 1
  %9231 = icmp eq i32 %9213, 0
  %9232 = zext i1 %9231 to i8
  %9233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9232, i8* %9233, align 1
  %9234 = lshr i32 %9213, 31
  %9235 = trunc i32 %9234 to i8
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9235, i8* %9236, align 1
  %9237 = lshr i32 %9212, 31
  %9238 = xor i32 %9234, %9237
  %9239 = add i32 %9238, %9237
  %9240 = icmp eq i32 %9239, 2
  %9241 = zext i1 %9240 to i8
  %9242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9241, i8* %9242, align 1
  store %struct.Memory* %loadMem_44aef6, %struct.Memory** %MEMORY
  %loadMem_44aef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9244 = getelementptr inbounds %struct.GPR, %struct.GPR* %9243, i32 0, i32 33
  %9245 = getelementptr inbounds %struct.Reg, %struct.Reg* %9244, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %9245 to i64*
  %9246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9247 = getelementptr inbounds %struct.GPR, %struct.GPR* %9246, i32 0, i32 5
  %9248 = getelementptr inbounds %struct.Reg, %struct.Reg* %9247, i32 0, i32 0
  %ECX.i417 = bitcast %union.anon* %9248 to i32*
  %9249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9250 = getelementptr inbounds %struct.GPR, %struct.GPR* %9249, i32 0, i32 15
  %9251 = getelementptr inbounds %struct.Reg, %struct.Reg* %9250, i32 0, i32 0
  %RBP.i418 = bitcast %union.anon* %9251 to i64*
  %9252 = load i64, i64* %RBP.i418
  %9253 = sub i64 %9252, 44
  %9254 = load i32, i32* %ECX.i417
  %9255 = zext i32 %9254 to i64
  %9256 = load i64, i64* %PC.i416
  %9257 = add i64 %9256, 3
  store i64 %9257, i64* %PC.i416
  %9258 = inttoptr i64 %9253 to i32*
  store i32 %9254, i32* %9258
  store %struct.Memory* %loadMem_44aef9, %struct.Memory** %MEMORY
  %loadMem_44aefc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9260 = getelementptr inbounds %struct.GPR, %struct.GPR* %9259, i32 0, i32 33
  %9261 = getelementptr inbounds %struct.Reg, %struct.Reg* %9260, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %9261 to i64*
  %9262 = load i64, i64* %PC.i415
  %9263 = add i64 %9262, 58
  %9264 = load i64, i64* %PC.i415
  %9265 = add i64 %9264, 5
  store i64 %9265, i64* %PC.i415
  %9266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9263, i64* %9266, align 8
  store %struct.Memory* %loadMem_44aefc, %struct.Memory** %MEMORY
  br label %block_.L_44af36

block_.L_44af01:                                  ; preds = %block_44aec0, %block_.L_44aeb6
  %loadMem_44af01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9268 = getelementptr inbounds %struct.GPR, %struct.GPR* %9267, i32 0, i32 33
  %9269 = getelementptr inbounds %struct.Reg, %struct.Reg* %9268, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %9269 to i64*
  %9270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9271 = getelementptr inbounds %struct.GPR, %struct.GPR* %9270, i32 0, i32 15
  %9272 = getelementptr inbounds %struct.Reg, %struct.Reg* %9271, i32 0, i32 0
  %RBP.i414 = bitcast %union.anon* %9272 to i64*
  %9273 = load i64, i64* %RBP.i414
  %9274 = sub i64 %9273, 12
  %9275 = load i64, i64* %PC.i413
  %9276 = add i64 %9275, 4
  store i64 %9276, i64* %PC.i413
  %9277 = inttoptr i64 %9274 to i32*
  %9278 = load i32, i32* %9277
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9279, align 1
  %9280 = and i32 %9278, 255
  %9281 = call i32 @llvm.ctpop.i32(i32 %9280)
  %9282 = trunc i32 %9281 to i8
  %9283 = and i8 %9282, 1
  %9284 = xor i8 %9283, 1
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9284, i8* %9285, align 1
  %9286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9286, align 1
  %9287 = icmp eq i32 %9278, 0
  %9288 = zext i1 %9287 to i8
  %9289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9288, i8* %9289, align 1
  %9290 = lshr i32 %9278, 31
  %9291 = trunc i32 %9290 to i8
  %9292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9291, i8* %9292, align 1
  %9293 = lshr i32 %9278, 31
  %9294 = xor i32 %9290, %9293
  %9295 = add i32 %9294, %9293
  %9296 = icmp eq i32 %9295, 2
  %9297 = zext i1 %9296 to i8
  %9298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9297, i8* %9298, align 1
  store %struct.Memory* %loadMem_44af01, %struct.Memory** %MEMORY
  %loadMem_44af05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9300 = getelementptr inbounds %struct.GPR, %struct.GPR* %9299, i32 0, i32 33
  %9301 = getelementptr inbounds %struct.Reg, %struct.Reg* %9300, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %9301 to i64*
  %9302 = load i64, i64* %PC.i412
  %9303 = add i64 %9302, 44
  %9304 = load i64, i64* %PC.i412
  %9305 = add i64 %9304, 6
  %9306 = load i64, i64* %PC.i412
  %9307 = add i64 %9306, 6
  store i64 %9307, i64* %PC.i412
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9309 = load i8, i8* %9308, align 1
  %9310 = icmp ne i8 %9309, 0
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9312 = load i8, i8* %9311, align 1
  %9313 = icmp ne i8 %9312, 0
  %9314 = xor i1 %9310, %9313
  %9315 = zext i1 %9314 to i8
  store i8 %9315, i8* %BRANCH_TAKEN, align 1
  %9316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9317 = select i1 %9314, i64 %9303, i64 %9305
  store i64 %9317, i64* %9316, align 8
  store %struct.Memory* %loadMem_44af05, %struct.Memory** %MEMORY
  %loadBr_44af05 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44af05 = icmp eq i8 %loadBr_44af05, 1
  br i1 %cmpBr_44af05, label %block_.L_44af31, label %block_44af0b

block_44af0b:                                     ; preds = %block_.L_44af01
  %loadMem_44af0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9319 = getelementptr inbounds %struct.GPR, %struct.GPR* %9318, i32 0, i32 33
  %9320 = getelementptr inbounds %struct.Reg, %struct.Reg* %9319, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %9320 to i64*
  %9321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9322 = getelementptr inbounds %struct.GPR, %struct.GPR* %9321, i32 0, i32 1
  %9323 = getelementptr inbounds %struct.Reg, %struct.Reg* %9322, i32 0, i32 0
  %RAX.i410 = bitcast %union.anon* %9323 to i64*
  %9324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9325 = getelementptr inbounds %struct.GPR, %struct.GPR* %9324, i32 0, i32 15
  %9326 = getelementptr inbounds %struct.Reg, %struct.Reg* %9325, i32 0, i32 0
  %RBP.i411 = bitcast %union.anon* %9326 to i64*
  %9327 = load i64, i64* %RBP.i411
  %9328 = sub i64 %9327, 12
  %9329 = load i64, i64* %PC.i409
  %9330 = add i64 %9329, 3
  store i64 %9330, i64* %PC.i409
  %9331 = inttoptr i64 %9328 to i32*
  %9332 = load i32, i32* %9331
  %9333 = zext i32 %9332 to i64
  store i64 %9333, i64* %RAX.i410, align 8
  store %struct.Memory* %loadMem_44af0b, %struct.Memory** %MEMORY
  %loadMem_44af0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9335 = getelementptr inbounds %struct.GPR, %struct.GPR* %9334, i32 0, i32 33
  %9336 = getelementptr inbounds %struct.Reg, %struct.Reg* %9335, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %9336 to i64*
  %9337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9338 = getelementptr inbounds %struct.GPR, %struct.GPR* %9337, i32 0, i32 1
  %9339 = getelementptr inbounds %struct.Reg, %struct.Reg* %9338, i32 0, i32 0
  %EAX.i407 = bitcast %union.anon* %9339 to i32*
  %9340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9341 = getelementptr inbounds %struct.GPR, %struct.GPR* %9340, i32 0, i32 15
  %9342 = getelementptr inbounds %struct.Reg, %struct.Reg* %9341, i32 0, i32 0
  %RBP.i408 = bitcast %union.anon* %9342 to i64*
  %9343 = load i32, i32* %EAX.i407
  %9344 = zext i32 %9343 to i64
  %9345 = load i64, i64* %RBP.i408
  %9346 = sub i64 %9345, 40
  %9347 = load i64, i64* %PC.i406
  %9348 = add i64 %9347, 3
  store i64 %9348, i64* %PC.i406
  %9349 = inttoptr i64 %9346 to i32*
  %9350 = load i32, i32* %9349
  %9351 = sub i32 %9343, %9350
  %9352 = icmp ult i32 %9343, %9350
  %9353 = zext i1 %9352 to i8
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9353, i8* %9354, align 1
  %9355 = and i32 %9351, 255
  %9356 = call i32 @llvm.ctpop.i32(i32 %9355)
  %9357 = trunc i32 %9356 to i8
  %9358 = and i8 %9357, 1
  %9359 = xor i8 %9358, 1
  %9360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9359, i8* %9360, align 1
  %9361 = xor i32 %9350, %9343
  %9362 = xor i32 %9361, %9351
  %9363 = lshr i32 %9362, 4
  %9364 = trunc i32 %9363 to i8
  %9365 = and i8 %9364, 1
  %9366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9365, i8* %9366, align 1
  %9367 = icmp eq i32 %9351, 0
  %9368 = zext i1 %9367 to i8
  %9369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9368, i8* %9369, align 1
  %9370 = lshr i32 %9351, 31
  %9371 = trunc i32 %9370 to i8
  %9372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9371, i8* %9372, align 1
  %9373 = lshr i32 %9343, 31
  %9374 = lshr i32 %9350, 31
  %9375 = xor i32 %9374, %9373
  %9376 = xor i32 %9370, %9373
  %9377 = add i32 %9376, %9375
  %9378 = icmp eq i32 %9377, 2
  %9379 = zext i1 %9378 to i8
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9379, i8* %9380, align 1
  store %struct.Memory* %loadMem_44af0e, %struct.Memory** %MEMORY
  %loadMem_44af11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9382 = getelementptr inbounds %struct.GPR, %struct.GPR* %9381, i32 0, i32 33
  %9383 = getelementptr inbounds %struct.Reg, %struct.Reg* %9382, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %9383 to i64*
  %9384 = load i64, i64* %PC.i405
  %9385 = add i64 %9384, 32
  %9386 = load i64, i64* %PC.i405
  %9387 = add i64 %9386, 6
  %9388 = load i64, i64* %PC.i405
  %9389 = add i64 %9388, 6
  store i64 %9389, i64* %PC.i405
  %9390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9391 = load i8, i8* %9390, align 1
  %9392 = icmp ne i8 %9391, 0
  %9393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9394 = load i8, i8* %9393, align 1
  %9395 = icmp ne i8 %9394, 0
  %9396 = xor i1 %9392, %9395
  %9397 = xor i1 %9396, true
  %9398 = zext i1 %9397 to i8
  store i8 %9398, i8* %BRANCH_TAKEN, align 1
  %9399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9400 = select i1 %9396, i64 %9387, i64 %9385
  store i64 %9400, i64* %9399, align 8
  store %struct.Memory* %loadMem_44af11, %struct.Memory** %MEMORY
  %loadBr_44af11 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44af11 = icmp eq i8 %loadBr_44af11, 1
  br i1 %cmpBr_44af11, label %block_.L_44af31, label %block_44af17

block_44af17:                                     ; preds = %block_44af0b
  %loadMem_44af17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9402 = getelementptr inbounds %struct.GPR, %struct.GPR* %9401, i32 0, i32 33
  %9403 = getelementptr inbounds %struct.Reg, %struct.Reg* %9402, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %9403 to i64*
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9405 = getelementptr inbounds %struct.GPR, %struct.GPR* %9404, i32 0, i32 1
  %9406 = getelementptr inbounds %struct.Reg, %struct.Reg* %9405, i32 0, i32 0
  %RAX.i403 = bitcast %union.anon* %9406 to i64*
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9408 = getelementptr inbounds %struct.GPR, %struct.GPR* %9407, i32 0, i32 15
  %9409 = getelementptr inbounds %struct.Reg, %struct.Reg* %9408, i32 0, i32 0
  %RBP.i404 = bitcast %union.anon* %9409 to i64*
  %9410 = load i64, i64* %RBP.i404
  %9411 = sub i64 %9410, 4
  %9412 = load i64, i64* %PC.i402
  %9413 = add i64 %9412, 3
  store i64 %9413, i64* %PC.i402
  %9414 = inttoptr i64 %9411 to i32*
  %9415 = load i32, i32* %9414
  %9416 = zext i32 %9415 to i64
  store i64 %9416, i64* %RAX.i403, align 8
  store %struct.Memory* %loadMem_44af17, %struct.Memory** %MEMORY
  %loadMem_44af1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9418 = getelementptr inbounds %struct.GPR, %struct.GPR* %9417, i32 0, i32 33
  %9419 = getelementptr inbounds %struct.Reg, %struct.Reg* %9418, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %9419 to i64*
  %9420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9421 = getelementptr inbounds %struct.GPR, %struct.GPR* %9420, i32 0, i32 5
  %9422 = getelementptr inbounds %struct.Reg, %struct.Reg* %9421, i32 0, i32 0
  %RCX.i400 = bitcast %union.anon* %9422 to i64*
  %9423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9424 = getelementptr inbounds %struct.GPR, %struct.GPR* %9423, i32 0, i32 15
  %9425 = getelementptr inbounds %struct.Reg, %struct.Reg* %9424, i32 0, i32 0
  %RBP.i401 = bitcast %union.anon* %9425 to i64*
  %9426 = load i64, i64* %RBP.i401
  %9427 = sub i64 %9426, 24
  %9428 = load i64, i64* %PC.i399
  %9429 = add i64 %9428, 4
  store i64 %9429, i64* %PC.i399
  %9430 = inttoptr i64 %9427 to i64*
  %9431 = load i64, i64* %9430
  store i64 %9431, i64* %RCX.i400, align 8
  store %struct.Memory* %loadMem_44af1a, %struct.Memory** %MEMORY
  %loadMem_44af1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9433 = getelementptr inbounds %struct.GPR, %struct.GPR* %9432, i32 0, i32 33
  %9434 = getelementptr inbounds %struct.Reg, %struct.Reg* %9433, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %9434 to i64*
  %9435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9436 = getelementptr inbounds %struct.GPR, %struct.GPR* %9435, i32 0, i32 1
  %9437 = getelementptr inbounds %struct.Reg, %struct.Reg* %9436, i32 0, i32 0
  %EAX.i397 = bitcast %union.anon* %9437 to i32*
  %9438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9439 = getelementptr inbounds %struct.GPR, %struct.GPR* %9438, i32 0, i32 5
  %9440 = getelementptr inbounds %struct.Reg, %struct.Reg* %9439, i32 0, i32 0
  %RCX.i398 = bitcast %union.anon* %9440 to i64*
  %9441 = load i64, i64* %RCX.i398
  %9442 = add i64 %9441, 4
  %9443 = load i32, i32* %EAX.i397
  %9444 = zext i32 %9443 to i64
  %9445 = load i64, i64* %PC.i396
  %9446 = add i64 %9445, 3
  store i64 %9446, i64* %PC.i396
  %9447 = inttoptr i64 %9442 to i32*
  store i32 %9443, i32* %9447
  store %struct.Memory* %loadMem_44af1e, %struct.Memory** %MEMORY
  %loadMem_44af21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9449 = getelementptr inbounds %struct.GPR, %struct.GPR* %9448, i32 0, i32 33
  %9450 = getelementptr inbounds %struct.Reg, %struct.Reg* %9449, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %9450 to i64*
  %9451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9452 = getelementptr inbounds %struct.GPR, %struct.GPR* %9451, i32 0, i32 5
  %9453 = getelementptr inbounds %struct.Reg, %struct.Reg* %9452, i32 0, i32 0
  %RCX.i394 = bitcast %union.anon* %9453 to i64*
  %9454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9455 = getelementptr inbounds %struct.GPR, %struct.GPR* %9454, i32 0, i32 15
  %9456 = getelementptr inbounds %struct.Reg, %struct.Reg* %9455, i32 0, i32 0
  %RBP.i395 = bitcast %union.anon* %9456 to i64*
  %9457 = load i64, i64* %RBP.i395
  %9458 = sub i64 %9457, 24
  %9459 = load i64, i64* %PC.i393
  %9460 = add i64 %9459, 4
  store i64 %9460, i64* %PC.i393
  %9461 = inttoptr i64 %9458 to i64*
  %9462 = load i64, i64* %9461
  store i64 %9462, i64* %RCX.i394, align 8
  store %struct.Memory* %loadMem_44af21, %struct.Memory** %MEMORY
  %loadMem_44af25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9464 = getelementptr inbounds %struct.GPR, %struct.GPR* %9463, i32 0, i32 33
  %9465 = getelementptr inbounds %struct.Reg, %struct.Reg* %9464, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %9465 to i64*
  %9466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9467 = getelementptr inbounds %struct.GPR, %struct.GPR* %9466, i32 0, i32 5
  %9468 = getelementptr inbounds %struct.Reg, %struct.Reg* %9467, i32 0, i32 0
  %RCX.i392 = bitcast %union.anon* %9468 to i64*
  %9469 = load i64, i64* %RCX.i392
  %9470 = load i64, i64* %PC.i391
  %9471 = add i64 %9470, 6
  store i64 %9471, i64* %PC.i391
  %9472 = inttoptr i64 %9469 to i32*
  store i32 1, i32* %9472
  store %struct.Memory* %loadMem_44af25, %struct.Memory** %MEMORY
  %loadMem_44af2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9474 = getelementptr inbounds %struct.GPR, %struct.GPR* %9473, i32 0, i32 33
  %9475 = getelementptr inbounds %struct.Reg, %struct.Reg* %9474, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %9475 to i64*
  %9476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9477 = getelementptr inbounds %struct.GPR, %struct.GPR* %9476, i32 0, i32 1
  %9478 = getelementptr inbounds %struct.Reg, %struct.Reg* %9477, i32 0, i32 0
  %RAX.i389 = bitcast %union.anon* %9478 to i64*
  %9479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9480 = getelementptr inbounds %struct.GPR, %struct.GPR* %9479, i32 0, i32 15
  %9481 = getelementptr inbounds %struct.Reg, %struct.Reg* %9480, i32 0, i32 0
  %RBP.i390 = bitcast %union.anon* %9481 to i64*
  %9482 = load i64, i64* %RBP.i390
  %9483 = sub i64 %9482, 12
  %9484 = load i64, i64* %PC.i388
  %9485 = add i64 %9484, 3
  store i64 %9485, i64* %PC.i388
  %9486 = inttoptr i64 %9483 to i32*
  %9487 = load i32, i32* %9486
  %9488 = zext i32 %9487 to i64
  store i64 %9488, i64* %RAX.i389, align 8
  store %struct.Memory* %loadMem_44af2b, %struct.Memory** %MEMORY
  %loadMem_44af2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9490 = getelementptr inbounds %struct.GPR, %struct.GPR* %9489, i32 0, i32 33
  %9491 = getelementptr inbounds %struct.Reg, %struct.Reg* %9490, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %9491 to i64*
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9493 = getelementptr inbounds %struct.GPR, %struct.GPR* %9492, i32 0, i32 1
  %9494 = getelementptr inbounds %struct.Reg, %struct.Reg* %9493, i32 0, i32 0
  %EAX.i386 = bitcast %union.anon* %9494 to i32*
  %9495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9496 = getelementptr inbounds %struct.GPR, %struct.GPR* %9495, i32 0, i32 15
  %9497 = getelementptr inbounds %struct.Reg, %struct.Reg* %9496, i32 0, i32 0
  %RBP.i387 = bitcast %union.anon* %9497 to i64*
  %9498 = load i64, i64* %RBP.i387
  %9499 = sub i64 %9498, 44
  %9500 = load i32, i32* %EAX.i386
  %9501 = zext i32 %9500 to i64
  %9502 = load i64, i64* %PC.i385
  %9503 = add i64 %9502, 3
  store i64 %9503, i64* %PC.i385
  %9504 = inttoptr i64 %9499 to i32*
  store i32 %9500, i32* %9504
  store %struct.Memory* %loadMem_44af2e, %struct.Memory** %MEMORY
  br label %block_.L_44af31

block_.L_44af31:                                  ; preds = %block_44af17, %block_44af0b, %block_.L_44af01
  %loadMem_44af31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9506 = getelementptr inbounds %struct.GPR, %struct.GPR* %9505, i32 0, i32 33
  %9507 = getelementptr inbounds %struct.Reg, %struct.Reg* %9506, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %9507 to i64*
  %9508 = load i64, i64* %PC.i384
  %9509 = add i64 %9508, 5
  %9510 = load i64, i64* %PC.i384
  %9511 = add i64 %9510, 5
  store i64 %9511, i64* %PC.i384
  %9512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9509, i64* %9512, align 8
  store %struct.Memory* %loadMem_44af31, %struct.Memory** %MEMORY
  br label %block_.L_44af36

block_.L_44af36:                                  ; preds = %block_.L_44af31, %block_44aed5
  %loadMem_44af36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9514 = getelementptr inbounds %struct.GPR, %struct.GPR* %9513, i32 0, i32 33
  %9515 = getelementptr inbounds %struct.Reg, %struct.Reg* %9514, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %9515 to i64*
  %9516 = load i64, i64* %PC.i383
  %9517 = add i64 %9516, 5
  %9518 = load i64, i64* %PC.i383
  %9519 = add i64 %9518, 5
  store i64 %9519, i64* %PC.i383
  %9520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9517, i64* %9520, align 8
  store %struct.Memory* %loadMem_44af36, %struct.Memory** %MEMORY
  br label %block_.L_44af3b

block_.L_44af3b:                                  ; preds = %block_.L_44af36, %block_.L_44aeb1
  %loadMem_44af3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9522 = getelementptr inbounds %struct.GPR, %struct.GPR* %9521, i32 0, i32 33
  %9523 = getelementptr inbounds %struct.Reg, %struct.Reg* %9522, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %9523 to i64*
  %9524 = load i64, i64* %PC.i382
  %9525 = add i64 %9524, 323
  %9526 = load i64, i64* %PC.i382
  %9527 = add i64 %9526, 5
  store i64 %9527, i64* %PC.i382
  %9528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9525, i64* %9528, align 8
  store %struct.Memory* %loadMem_44af3b, %struct.Memory** %MEMORY
  br label %block_.L_44b07e

block_.L_44af40:                                  ; preds = %block_44acf8, %block_.L_44acee
  %loadMem_44af40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9530 = getelementptr inbounds %struct.GPR, %struct.GPR* %9529, i32 0, i32 33
  %9531 = getelementptr inbounds %struct.Reg, %struct.Reg* %9530, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %9531 to i64*
  %9532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9533 = getelementptr inbounds %struct.GPR, %struct.GPR* %9532, i32 0, i32 15
  %9534 = getelementptr inbounds %struct.Reg, %struct.Reg* %9533, i32 0, i32 0
  %RBP.i381 = bitcast %union.anon* %9534 to i64*
  %9535 = load i64, i64* %RBP.i381
  %9536 = sub i64 %9535, 12
  %9537 = load i64, i64* %PC.i380
  %9538 = add i64 %9537, 4
  store i64 %9538, i64* %PC.i380
  %9539 = inttoptr i64 %9536 to i32*
  %9540 = load i32, i32* %9539
  %9541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9541, align 1
  %9542 = and i32 %9540, 255
  %9543 = call i32 @llvm.ctpop.i32(i32 %9542)
  %9544 = trunc i32 %9543 to i8
  %9545 = and i8 %9544, 1
  %9546 = xor i8 %9545, 1
  %9547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9546, i8* %9547, align 1
  %9548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9548, align 1
  %9549 = icmp eq i32 %9540, 0
  %9550 = zext i1 %9549 to i8
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9550, i8* %9551, align 1
  %9552 = lshr i32 %9540, 31
  %9553 = trunc i32 %9552 to i8
  %9554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9553, i8* %9554, align 1
  %9555 = lshr i32 %9540, 31
  %9556 = xor i32 %9552, %9555
  %9557 = add i32 %9556, %9555
  %9558 = icmp eq i32 %9557, 2
  %9559 = zext i1 %9558 to i8
  %9560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9559, i8* %9560, align 1
  store %struct.Memory* %loadMem_44af40, %struct.Memory** %MEMORY
  %loadMem_44af44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9562 = getelementptr inbounds %struct.GPR, %struct.GPR* %9561, i32 0, i32 33
  %9563 = getelementptr inbounds %struct.Reg, %struct.Reg* %9562, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %9563 to i64*
  %9564 = load i64, i64* %PC.i379
  %9565 = add i64 %9564, 309
  %9566 = load i64, i64* %PC.i379
  %9567 = add i64 %9566, 6
  %9568 = load i64, i64* %PC.i379
  %9569 = add i64 %9568, 6
  store i64 %9569, i64* %PC.i379
  %9570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9571 = load i8, i8* %9570, align 1
  %9572 = icmp ne i8 %9571, 0
  %9573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9574 = load i8, i8* %9573, align 1
  %9575 = icmp ne i8 %9574, 0
  %9576 = xor i1 %9572, %9575
  %9577 = xor i1 %9576, true
  %9578 = zext i1 %9577 to i8
  store i8 %9578, i8* %BRANCH_TAKEN, align 1
  %9579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9580 = select i1 %9576, i64 %9567, i64 %9565
  store i64 %9580, i64* %9579, align 8
  store %struct.Memory* %loadMem_44af44, %struct.Memory** %MEMORY
  %loadBr_44af44 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44af44 = icmp eq i8 %loadBr_44af44, 1
  br i1 %cmpBr_44af44, label %block_.L_44b079, label %block_44af4a

block_44af4a:                                     ; preds = %block_.L_44af40
  %loadMem_44af4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9582 = getelementptr inbounds %struct.GPR, %struct.GPR* %9581, i32 0, i32 33
  %9583 = getelementptr inbounds %struct.Reg, %struct.Reg* %9582, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %9583 to i64*
  %9584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9585 = getelementptr inbounds %struct.GPR, %struct.GPR* %9584, i32 0, i32 1
  %9586 = getelementptr inbounds %struct.Reg, %struct.Reg* %9585, i32 0, i32 0
  %RAX.i377 = bitcast %union.anon* %9586 to i64*
  %9587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9588 = getelementptr inbounds %struct.GPR, %struct.GPR* %9587, i32 0, i32 15
  %9589 = getelementptr inbounds %struct.Reg, %struct.Reg* %9588, i32 0, i32 0
  %RBP.i378 = bitcast %union.anon* %9589 to i64*
  %9590 = load i64, i64* %RBP.i378
  %9591 = sub i64 %9590, 32
  %9592 = load i64, i64* %PC.i376
  %9593 = add i64 %9592, 4
  store i64 %9593, i64* %PC.i376
  %9594 = inttoptr i64 %9591 to i64*
  %9595 = load i64, i64* %9594
  store i64 %9595, i64* %RAX.i377, align 8
  store %struct.Memory* %loadMem_44af4a, %struct.Memory** %MEMORY
  %loadMem_44af4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9597 = getelementptr inbounds %struct.GPR, %struct.GPR* %9596, i32 0, i32 33
  %9598 = getelementptr inbounds %struct.Reg, %struct.Reg* %9597, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %9598 to i64*
  %9599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9600 = getelementptr inbounds %struct.GPR, %struct.GPR* %9599, i32 0, i32 1
  %9601 = getelementptr inbounds %struct.Reg, %struct.Reg* %9600, i32 0, i32 0
  %RAX.i375 = bitcast %union.anon* %9601 to i64*
  %9602 = load i64, i64* %RAX.i375
  %9603 = add i64 %9602, 532
  %9604 = load i64, i64* %PC.i374
  %9605 = add i64 %9604, 7
  store i64 %9605, i64* %PC.i374
  %9606 = inttoptr i64 %9603 to i32*
  %9607 = load i32, i32* %9606
  %9608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9608, align 1
  %9609 = and i32 %9607, 255
  %9610 = call i32 @llvm.ctpop.i32(i32 %9609)
  %9611 = trunc i32 %9610 to i8
  %9612 = and i8 %9611, 1
  %9613 = xor i8 %9612, 1
  %9614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9613, i8* %9614, align 1
  %9615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9615, align 1
  %9616 = icmp eq i32 %9607, 0
  %9617 = zext i1 %9616 to i8
  %9618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9617, i8* %9618, align 1
  %9619 = lshr i32 %9607, 31
  %9620 = trunc i32 %9619 to i8
  %9621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9620, i8* %9621, align 1
  %9622 = lshr i32 %9607, 31
  %9623 = xor i32 %9619, %9622
  %9624 = add i32 %9623, %9622
  %9625 = icmp eq i32 %9624, 2
  %9626 = zext i1 %9625 to i8
  %9627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9626, i8* %9627, align 1
  store %struct.Memory* %loadMem_44af4e, %struct.Memory** %MEMORY
  %loadMem_44af55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9629 = getelementptr inbounds %struct.GPR, %struct.GPR* %9628, i32 0, i32 33
  %9630 = getelementptr inbounds %struct.Reg, %struct.Reg* %9629, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %9630 to i64*
  %9631 = load i64, i64* %PC.i373
  %9632 = add i64 %9631, 83
  %9633 = load i64, i64* %PC.i373
  %9634 = add i64 %9633, 6
  %9635 = load i64, i64* %PC.i373
  %9636 = add i64 %9635, 6
  store i64 %9636, i64* %PC.i373
  %9637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9638 = load i8, i8* %9637, align 1
  %9639 = icmp eq i8 %9638, 0
  %9640 = zext i1 %9639 to i8
  store i8 %9640, i8* %BRANCH_TAKEN, align 1
  %9641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9642 = select i1 %9639, i64 %9632, i64 %9634
  store i64 %9642, i64* %9641, align 8
  store %struct.Memory* %loadMem_44af55, %struct.Memory** %MEMORY
  %loadBr_44af55 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44af55 = icmp eq i8 %loadBr_44af55, 1
  br i1 %cmpBr_44af55, label %block_.L_44afa8, label %block_44af5b

block_44af5b:                                     ; preds = %block_44af4a
  %loadMem_44af5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9644 = getelementptr inbounds %struct.GPR, %struct.GPR* %9643, i32 0, i32 33
  %9645 = getelementptr inbounds %struct.Reg, %struct.Reg* %9644, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %9645 to i64*
  %9646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9647 = getelementptr inbounds %struct.GPR, %struct.GPR* %9646, i32 0, i32 1
  %9648 = getelementptr inbounds %struct.Reg, %struct.Reg* %9647, i32 0, i32 0
  %RAX.i371 = bitcast %union.anon* %9648 to i64*
  %9649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9650 = getelementptr inbounds %struct.GPR, %struct.GPR* %9649, i32 0, i32 15
  %9651 = getelementptr inbounds %struct.Reg, %struct.Reg* %9650, i32 0, i32 0
  %RBP.i372 = bitcast %union.anon* %9651 to i64*
  %9652 = load i64, i64* %RBP.i372
  %9653 = sub i64 %9652, 4
  %9654 = load i64, i64* %PC.i370
  %9655 = add i64 %9654, 3
  store i64 %9655, i64* %PC.i370
  %9656 = inttoptr i64 %9653 to i32*
  %9657 = load i32, i32* %9656
  %9658 = zext i32 %9657 to i64
  store i64 %9658, i64* %RAX.i371, align 8
  store %struct.Memory* %loadMem_44af5b, %struct.Memory** %MEMORY
  %loadMem_44af5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9660 = getelementptr inbounds %struct.GPR, %struct.GPR* %9659, i32 0, i32 33
  %9661 = getelementptr inbounds %struct.Reg, %struct.Reg* %9660, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %9661 to i64*
  %9662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9663 = getelementptr inbounds %struct.GPR, %struct.GPR* %9662, i32 0, i32 1
  %9664 = getelementptr inbounds %struct.Reg, %struct.Reg* %9663, i32 0, i32 0
  %RAX.i369 = bitcast %union.anon* %9664 to i64*
  %9665 = load i64, i64* %RAX.i369
  %9666 = load i64, i64* %PC.i368
  %9667 = add i64 %9666, 3
  store i64 %9667, i64* %PC.i368
  %9668 = and i64 1, %9665
  %9669 = trunc i64 %9668 to i32
  store i64 %9668, i64* %RAX.i369, align 8
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9670, align 1
  %9671 = and i32 %9669, 255
  %9672 = call i32 @llvm.ctpop.i32(i32 %9671)
  %9673 = trunc i32 %9672 to i8
  %9674 = and i8 %9673, 1
  %9675 = xor i8 %9674, 1
  %9676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9675, i8* %9676, align 1
  %9677 = icmp eq i32 %9669, 0
  %9678 = zext i1 %9677 to i8
  %9679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9678, i8* %9679, align 1
  %9680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9680, align 1
  %9681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9681, align 1
  %9682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9682, align 1
  store %struct.Memory* %loadMem_44af5e, %struct.Memory** %MEMORY
  %loadMem_44af61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9684 = getelementptr inbounds %struct.GPR, %struct.GPR* %9683, i32 0, i32 33
  %9685 = getelementptr inbounds %struct.Reg, %struct.Reg* %9684, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %9685 to i64*
  %9686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9687 = getelementptr inbounds %struct.GPR, %struct.GPR* %9686, i32 0, i32 1
  %9688 = getelementptr inbounds %struct.Reg, %struct.Reg* %9687, i32 0, i32 0
  %EAX.i367 = bitcast %union.anon* %9688 to i32*
  %9689 = load i32, i32* %EAX.i367
  %9690 = zext i32 %9689 to i64
  %9691 = load i64, i64* %PC.i366
  %9692 = add i64 %9691, 3
  store i64 %9692, i64* %PC.i366
  %9693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9693, align 1
  %9694 = and i32 %9689, 255
  %9695 = call i32 @llvm.ctpop.i32(i32 %9694)
  %9696 = trunc i32 %9695 to i8
  %9697 = and i8 %9696, 1
  %9698 = xor i8 %9697, 1
  %9699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9698, i8* %9699, align 1
  %9700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9700, align 1
  %9701 = icmp eq i32 %9689, 0
  %9702 = zext i1 %9701 to i8
  %9703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9702, i8* %9703, align 1
  %9704 = lshr i32 %9689, 31
  %9705 = trunc i32 %9704 to i8
  %9706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9705, i8* %9706, align 1
  %9707 = lshr i32 %9689, 31
  %9708 = xor i32 %9704, %9707
  %9709 = add i32 %9708, %9707
  %9710 = icmp eq i32 %9709, 2
  %9711 = zext i1 %9710 to i8
  %9712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9711, i8* %9712, align 1
  store %struct.Memory* %loadMem_44af61, %struct.Memory** %MEMORY
  %loadMem_44af64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9714 = getelementptr inbounds %struct.GPR, %struct.GPR* %9713, i32 0, i32 33
  %9715 = getelementptr inbounds %struct.Reg, %struct.Reg* %9714, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %9715 to i64*
  %9716 = load i64, i64* %PC.i365
  %9717 = add i64 %9716, 53
  %9718 = load i64, i64* %PC.i365
  %9719 = add i64 %9718, 6
  %9720 = load i64, i64* %PC.i365
  %9721 = add i64 %9720, 6
  store i64 %9721, i64* %PC.i365
  %9722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9723 = load i8, i8* %9722, align 1
  %9724 = icmp eq i8 %9723, 0
  %9725 = zext i1 %9724 to i8
  store i8 %9725, i8* %BRANCH_TAKEN, align 1
  %9726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9727 = select i1 %9724, i64 %9717, i64 %9719
  store i64 %9727, i64* %9726, align 8
  store %struct.Memory* %loadMem_44af64, %struct.Memory** %MEMORY
  %loadBr_44af64 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44af64 = icmp eq i8 %loadBr_44af64, 1
  br i1 %cmpBr_44af64, label %block_.L_44af99, label %block_44af6a

block_44af6a:                                     ; preds = %block_44af5b
  %loadMem_44af6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9729 = getelementptr inbounds %struct.GPR, %struct.GPR* %9728, i32 0, i32 33
  %9730 = getelementptr inbounds %struct.Reg, %struct.Reg* %9729, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %9730 to i64*
  %9731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9732 = getelementptr inbounds %struct.GPR, %struct.GPR* %9731, i32 0, i32 1
  %9733 = getelementptr inbounds %struct.Reg, %struct.Reg* %9732, i32 0, i32 0
  %RAX.i363 = bitcast %union.anon* %9733 to i64*
  %9734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9735 = getelementptr inbounds %struct.GPR, %struct.GPR* %9734, i32 0, i32 15
  %9736 = getelementptr inbounds %struct.Reg, %struct.Reg* %9735, i32 0, i32 0
  %RBP.i364 = bitcast %union.anon* %9736 to i64*
  %9737 = load i64, i64* %RBP.i364
  %9738 = sub i64 %9737, 32
  %9739 = load i64, i64* %PC.i362
  %9740 = add i64 %9739, 4
  store i64 %9740, i64* %PC.i362
  %9741 = inttoptr i64 %9738 to i64*
  %9742 = load i64, i64* %9741
  store i64 %9742, i64* %RAX.i363, align 8
  store %struct.Memory* %loadMem_44af6a, %struct.Memory** %MEMORY
  %loadMem_44af6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9744 = getelementptr inbounds %struct.GPR, %struct.GPR* %9743, i32 0, i32 33
  %9745 = getelementptr inbounds %struct.Reg, %struct.Reg* %9744, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %9745 to i64*
  %9746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9747 = getelementptr inbounds %struct.GPR, %struct.GPR* %9746, i32 0, i32 1
  %9748 = getelementptr inbounds %struct.Reg, %struct.Reg* %9747, i32 0, i32 0
  %RAX.i360 = bitcast %union.anon* %9748 to i64*
  %9749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9750 = getelementptr inbounds %struct.GPR, %struct.GPR* %9749, i32 0, i32 5
  %9751 = getelementptr inbounds %struct.Reg, %struct.Reg* %9750, i32 0, i32 0
  %RCX.i361 = bitcast %union.anon* %9751 to i64*
  %9752 = load i64, i64* %RAX.i360
  %9753 = add i64 %9752, 544
  %9754 = load i64, i64* %PC.i359
  %9755 = add i64 %9754, 6
  store i64 %9755, i64* %PC.i359
  %9756 = inttoptr i64 %9753 to i32*
  %9757 = load i32, i32* %9756
  %9758 = zext i32 %9757 to i64
  store i64 %9758, i64* %RCX.i361, align 8
  store %struct.Memory* %loadMem_44af6e, %struct.Memory** %MEMORY
  %loadMem_44af74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9760 = getelementptr inbounds %struct.GPR, %struct.GPR* %9759, i32 0, i32 33
  %9761 = getelementptr inbounds %struct.Reg, %struct.Reg* %9760, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %9761 to i64*
  %9762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9763 = getelementptr inbounds %struct.GPR, %struct.GPR* %9762, i32 0, i32 5
  %9764 = getelementptr inbounds %struct.Reg, %struct.Reg* %9763, i32 0, i32 0
  %RCX.i358 = bitcast %union.anon* %9764 to i64*
  %9765 = load i64, i64* %RCX.i358
  %9766 = load i64, i64* %PC.i357
  %9767 = add i64 %9766, 3
  store i64 %9767, i64* %PC.i357
  %9768 = trunc i64 %9765 to i32
  %9769 = add i32 1, %9768
  %9770 = zext i32 %9769 to i64
  store i64 %9770, i64* %RCX.i358, align 8
  %9771 = icmp ult i32 %9769, %9768
  %9772 = icmp ult i32 %9769, 1
  %9773 = or i1 %9771, %9772
  %9774 = zext i1 %9773 to i8
  %9775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9774, i8* %9775, align 1
  %9776 = and i32 %9769, 255
  %9777 = call i32 @llvm.ctpop.i32(i32 %9776)
  %9778 = trunc i32 %9777 to i8
  %9779 = and i8 %9778, 1
  %9780 = xor i8 %9779, 1
  %9781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9780, i8* %9781, align 1
  %9782 = xor i64 1, %9765
  %9783 = trunc i64 %9782 to i32
  %9784 = xor i32 %9783, %9769
  %9785 = lshr i32 %9784, 4
  %9786 = trunc i32 %9785 to i8
  %9787 = and i8 %9786, 1
  %9788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9787, i8* %9788, align 1
  %9789 = icmp eq i32 %9769, 0
  %9790 = zext i1 %9789 to i8
  %9791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9790, i8* %9791, align 1
  %9792 = lshr i32 %9769, 31
  %9793 = trunc i32 %9792 to i8
  %9794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9793, i8* %9794, align 1
  %9795 = lshr i32 %9768, 31
  %9796 = xor i32 %9792, %9795
  %9797 = add i32 %9796, %9792
  %9798 = icmp eq i32 %9797, 2
  %9799 = zext i1 %9798 to i8
  %9800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9799, i8* %9800, align 1
  store %struct.Memory* %loadMem_44af74, %struct.Memory** %MEMORY
  %loadMem_44af77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9802 = getelementptr inbounds %struct.GPR, %struct.GPR* %9801, i32 0, i32 33
  %9803 = getelementptr inbounds %struct.Reg, %struct.Reg* %9802, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %9803 to i64*
  %9804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9805 = getelementptr inbounds %struct.GPR, %struct.GPR* %9804, i32 0, i32 1
  %9806 = getelementptr inbounds %struct.Reg, %struct.Reg* %9805, i32 0, i32 0
  %RAX.i355 = bitcast %union.anon* %9806 to i64*
  %9807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9808 = getelementptr inbounds %struct.GPR, %struct.GPR* %9807, i32 0, i32 15
  %9809 = getelementptr inbounds %struct.Reg, %struct.Reg* %9808, i32 0, i32 0
  %RBP.i356 = bitcast %union.anon* %9809 to i64*
  %9810 = load i64, i64* %RBP.i356
  %9811 = sub i64 %9810, 24
  %9812 = load i64, i64* %PC.i354
  %9813 = add i64 %9812, 4
  store i64 %9813, i64* %PC.i354
  %9814 = inttoptr i64 %9811 to i64*
  %9815 = load i64, i64* %9814
  store i64 %9815, i64* %RAX.i355, align 8
  store %struct.Memory* %loadMem_44af77, %struct.Memory** %MEMORY
  %loadMem_44af7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9817 = getelementptr inbounds %struct.GPR, %struct.GPR* %9816, i32 0, i32 33
  %9818 = getelementptr inbounds %struct.Reg, %struct.Reg* %9817, i32 0, i32 0
  %PC.i351 = bitcast %union.anon* %9818 to i64*
  %9819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9820 = getelementptr inbounds %struct.GPR, %struct.GPR* %9819, i32 0, i32 5
  %9821 = getelementptr inbounds %struct.Reg, %struct.Reg* %9820, i32 0, i32 0
  %ECX.i352 = bitcast %union.anon* %9821 to i32*
  %9822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9823 = getelementptr inbounds %struct.GPR, %struct.GPR* %9822, i32 0, i32 1
  %9824 = getelementptr inbounds %struct.Reg, %struct.Reg* %9823, i32 0, i32 0
  %RAX.i353 = bitcast %union.anon* %9824 to i64*
  %9825 = load i64, i64* %RAX.i353
  %9826 = add i64 %9825, 4
  %9827 = load i32, i32* %ECX.i352
  %9828 = zext i32 %9827 to i64
  %9829 = load i64, i64* %PC.i351
  %9830 = add i64 %9829, 3
  store i64 %9830, i64* %PC.i351
  %9831 = inttoptr i64 %9826 to i32*
  store i32 %9827, i32* %9831
  store %struct.Memory* %loadMem_44af7b, %struct.Memory** %MEMORY
  %loadMem_44af7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9833 = getelementptr inbounds %struct.GPR, %struct.GPR* %9832, i32 0, i32 33
  %9834 = getelementptr inbounds %struct.Reg, %struct.Reg* %9833, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %9834 to i64*
  %9835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9836 = getelementptr inbounds %struct.GPR, %struct.GPR* %9835, i32 0, i32 1
  %9837 = getelementptr inbounds %struct.Reg, %struct.Reg* %9836, i32 0, i32 0
  %RAX.i349 = bitcast %union.anon* %9837 to i64*
  %9838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9839 = getelementptr inbounds %struct.GPR, %struct.GPR* %9838, i32 0, i32 15
  %9840 = getelementptr inbounds %struct.Reg, %struct.Reg* %9839, i32 0, i32 0
  %RBP.i350 = bitcast %union.anon* %9840 to i64*
  %9841 = load i64, i64* %RBP.i350
  %9842 = sub i64 %9841, 32
  %9843 = load i64, i64* %PC.i348
  %9844 = add i64 %9843, 4
  store i64 %9844, i64* %PC.i348
  %9845 = inttoptr i64 %9842 to i64*
  %9846 = load i64, i64* %9845
  store i64 %9846, i64* %RAX.i349, align 8
  store %struct.Memory* %loadMem_44af7e, %struct.Memory** %MEMORY
  %loadMem_44af82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9848 = getelementptr inbounds %struct.GPR, %struct.GPR* %9847, i32 0, i32 33
  %9849 = getelementptr inbounds %struct.Reg, %struct.Reg* %9848, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %9849 to i64*
  %9850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9851 = getelementptr inbounds %struct.GPR, %struct.GPR* %9850, i32 0, i32 1
  %9852 = getelementptr inbounds %struct.Reg, %struct.Reg* %9851, i32 0, i32 0
  %RAX.i346 = bitcast %union.anon* %9852 to i64*
  %9853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9854 = getelementptr inbounds %struct.GPR, %struct.GPR* %9853, i32 0, i32 5
  %9855 = getelementptr inbounds %struct.Reg, %struct.Reg* %9854, i32 0, i32 0
  %RCX.i347 = bitcast %union.anon* %9855 to i64*
  %9856 = load i64, i64* %RAX.i346
  %9857 = add i64 %9856, 560
  %9858 = load i64, i64* %PC.i345
  %9859 = add i64 %9858, 6
  store i64 %9859, i64* %PC.i345
  %9860 = inttoptr i64 %9857 to i32*
  %9861 = load i32, i32* %9860
  %9862 = zext i32 %9861 to i64
  store i64 %9862, i64* %RCX.i347, align 8
  store %struct.Memory* %loadMem_44af82, %struct.Memory** %MEMORY
  %loadMem_44af88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9864 = getelementptr inbounds %struct.GPR, %struct.GPR* %9863, i32 0, i32 33
  %9865 = getelementptr inbounds %struct.Reg, %struct.Reg* %9864, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %9865 to i64*
  %9866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9867 = getelementptr inbounds %struct.GPR, %struct.GPR* %9866, i32 0, i32 1
  %9868 = getelementptr inbounds %struct.Reg, %struct.Reg* %9867, i32 0, i32 0
  %RAX.i343 = bitcast %union.anon* %9868 to i64*
  %9869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9870 = getelementptr inbounds %struct.GPR, %struct.GPR* %9869, i32 0, i32 15
  %9871 = getelementptr inbounds %struct.Reg, %struct.Reg* %9870, i32 0, i32 0
  %RBP.i344 = bitcast %union.anon* %9871 to i64*
  %9872 = load i64, i64* %RBP.i344
  %9873 = sub i64 %9872, 24
  %9874 = load i64, i64* %PC.i342
  %9875 = add i64 %9874, 4
  store i64 %9875, i64* %PC.i342
  %9876 = inttoptr i64 %9873 to i64*
  %9877 = load i64, i64* %9876
  store i64 %9877, i64* %RAX.i343, align 8
  store %struct.Memory* %loadMem_44af88, %struct.Memory** %MEMORY
  %loadMem_44af8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9879 = getelementptr inbounds %struct.GPR, %struct.GPR* %9878, i32 0, i32 33
  %9880 = getelementptr inbounds %struct.Reg, %struct.Reg* %9879, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %9880 to i64*
  %9881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9882 = getelementptr inbounds %struct.GPR, %struct.GPR* %9881, i32 0, i32 5
  %9883 = getelementptr inbounds %struct.Reg, %struct.Reg* %9882, i32 0, i32 0
  %ECX.i340 = bitcast %union.anon* %9883 to i32*
  %9884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9885 = getelementptr inbounds %struct.GPR, %struct.GPR* %9884, i32 0, i32 1
  %9886 = getelementptr inbounds %struct.Reg, %struct.Reg* %9885, i32 0, i32 0
  %RAX.i341 = bitcast %union.anon* %9886 to i64*
  %9887 = load i64, i64* %RAX.i341
  %9888 = load i32, i32* %ECX.i340
  %9889 = zext i32 %9888 to i64
  %9890 = load i64, i64* %PC.i339
  %9891 = add i64 %9890, 2
  store i64 %9891, i64* %PC.i339
  %9892 = inttoptr i64 %9887 to i32*
  store i32 %9888, i32* %9892
  store %struct.Memory* %loadMem_44af8c, %struct.Memory** %MEMORY
  %loadMem_44af8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9894 = getelementptr inbounds %struct.GPR, %struct.GPR* %9893, i32 0, i32 33
  %9895 = getelementptr inbounds %struct.Reg, %struct.Reg* %9894, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %9895 to i64*
  %9896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9897 = getelementptr inbounds %struct.GPR, %struct.GPR* %9896, i32 0, i32 5
  %9898 = getelementptr inbounds %struct.Reg, %struct.Reg* %9897, i32 0, i32 0
  %RCX.i337 = bitcast %union.anon* %9898 to i64*
  %9899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9900 = getelementptr inbounds %struct.GPR, %struct.GPR* %9899, i32 0, i32 15
  %9901 = getelementptr inbounds %struct.Reg, %struct.Reg* %9900, i32 0, i32 0
  %RBP.i338 = bitcast %union.anon* %9901 to i64*
  %9902 = load i64, i64* %RBP.i338
  %9903 = sub i64 %9902, 12
  %9904 = load i64, i64* %PC.i336
  %9905 = add i64 %9904, 3
  store i64 %9905, i64* %PC.i336
  %9906 = inttoptr i64 %9903 to i32*
  %9907 = load i32, i32* %9906
  %9908 = zext i32 %9907 to i64
  store i64 %9908, i64* %RCX.i337, align 8
  store %struct.Memory* %loadMem_44af8e, %struct.Memory** %MEMORY
  %loadMem_44af91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9910 = getelementptr inbounds %struct.GPR, %struct.GPR* %9909, i32 0, i32 33
  %9911 = getelementptr inbounds %struct.Reg, %struct.Reg* %9910, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %9911 to i64*
  %9912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9913 = getelementptr inbounds %struct.GPR, %struct.GPR* %9912, i32 0, i32 5
  %9914 = getelementptr inbounds %struct.Reg, %struct.Reg* %9913, i32 0, i32 0
  %ECX.i334 = bitcast %union.anon* %9914 to i32*
  %9915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9916 = getelementptr inbounds %struct.GPR, %struct.GPR* %9915, i32 0, i32 15
  %9917 = getelementptr inbounds %struct.Reg, %struct.Reg* %9916, i32 0, i32 0
  %RBP.i335 = bitcast %union.anon* %9917 to i64*
  %9918 = load i64, i64* %RBP.i335
  %9919 = sub i64 %9918, 44
  %9920 = load i32, i32* %ECX.i334
  %9921 = zext i32 %9920 to i64
  %9922 = load i64, i64* %PC.i333
  %9923 = add i64 %9922, 3
  store i64 %9923, i64* %PC.i333
  %9924 = inttoptr i64 %9919 to i32*
  store i32 %9920, i32* %9924
  store %struct.Memory* %loadMem_44af91, %struct.Memory** %MEMORY
  %loadMem_44af94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9926 = getelementptr inbounds %struct.GPR, %struct.GPR* %9925, i32 0, i32 33
  %9927 = getelementptr inbounds %struct.Reg, %struct.Reg* %9926, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %9927 to i64*
  %9928 = load i64, i64* %PC.i332
  %9929 = add i64 %9928, 15
  %9930 = load i64, i64* %PC.i332
  %9931 = add i64 %9930, 5
  store i64 %9931, i64* %PC.i332
  %9932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9929, i64* %9932, align 8
  store %struct.Memory* %loadMem_44af94, %struct.Memory** %MEMORY
  br label %block_.L_44afa3

block_.L_44af99:                                  ; preds = %block_44af5b
  %loadMem_44af99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9934 = getelementptr inbounds %struct.GPR, %struct.GPR* %9933, i32 0, i32 33
  %9935 = getelementptr inbounds %struct.Reg, %struct.Reg* %9934, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %9935 to i64*
  %9936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9937 = getelementptr inbounds %struct.GPR, %struct.GPR* %9936, i32 0, i32 1
  %9938 = getelementptr inbounds %struct.Reg, %struct.Reg* %9937, i32 0, i32 0
  %RAX.i330 = bitcast %union.anon* %9938 to i64*
  %9939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9940 = getelementptr inbounds %struct.GPR, %struct.GPR* %9939, i32 0, i32 15
  %9941 = getelementptr inbounds %struct.Reg, %struct.Reg* %9940, i32 0, i32 0
  %RBP.i331 = bitcast %union.anon* %9941 to i64*
  %9942 = load i64, i64* %RBP.i331
  %9943 = sub i64 %9942, 24
  %9944 = load i64, i64* %PC.i329
  %9945 = add i64 %9944, 4
  store i64 %9945, i64* %PC.i329
  %9946 = inttoptr i64 %9943 to i64*
  %9947 = load i64, i64* %9946
  store i64 %9947, i64* %RAX.i330, align 8
  store %struct.Memory* %loadMem_44af99, %struct.Memory** %MEMORY
  %loadMem_44af9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9949 = getelementptr inbounds %struct.GPR, %struct.GPR* %9948, i32 0, i32 33
  %9950 = getelementptr inbounds %struct.Reg, %struct.Reg* %9949, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %9950 to i64*
  %9951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9952 = getelementptr inbounds %struct.GPR, %struct.GPR* %9951, i32 0, i32 1
  %9953 = getelementptr inbounds %struct.Reg, %struct.Reg* %9952, i32 0, i32 0
  %RAX.i328 = bitcast %union.anon* %9953 to i64*
  %9954 = load i64, i64* %RAX.i328
  %9955 = load i64, i64* %PC.i327
  %9956 = add i64 %9955, 6
  store i64 %9956, i64* %PC.i327
  %9957 = inttoptr i64 %9954 to i32*
  store i32 0, i32* %9957
  store %struct.Memory* %loadMem_44af9d, %struct.Memory** %MEMORY
  br label %block_.L_44afa3

block_.L_44afa3:                                  ; preds = %block_.L_44af99, %block_44af6a
  %loadMem_44afa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9959 = getelementptr inbounds %struct.GPR, %struct.GPR* %9958, i32 0, i32 33
  %9960 = getelementptr inbounds %struct.Reg, %struct.Reg* %9959, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %9960 to i64*
  %9961 = load i64, i64* %PC.i326
  %9962 = add i64 %9961, 209
  %9963 = load i64, i64* %PC.i326
  %9964 = add i64 %9963, 5
  store i64 %9964, i64* %PC.i326
  %9965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9962, i64* %9965, align 8
  store %struct.Memory* %loadMem_44afa3, %struct.Memory** %MEMORY
  br label %block_.L_44b074

block_.L_44afa8:                                  ; preds = %block_44af4a
  %loadMem_44afa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9967 = getelementptr inbounds %struct.GPR, %struct.GPR* %9966, i32 0, i32 33
  %9968 = getelementptr inbounds %struct.Reg, %struct.Reg* %9967, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %9968 to i64*
  %9969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9970 = getelementptr inbounds %struct.GPR, %struct.GPR* %9969, i32 0, i32 1
  %9971 = getelementptr inbounds %struct.Reg, %struct.Reg* %9970, i32 0, i32 0
  %RAX.i324 = bitcast %union.anon* %9971 to i64*
  %9972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9973 = getelementptr inbounds %struct.GPR, %struct.GPR* %9972, i32 0, i32 15
  %9974 = getelementptr inbounds %struct.Reg, %struct.Reg* %9973, i32 0, i32 0
  %RBP.i325 = bitcast %union.anon* %9974 to i64*
  %9975 = load i64, i64* %RBP.i325
  %9976 = sub i64 %9975, 4
  %9977 = load i64, i64* %PC.i323
  %9978 = add i64 %9977, 3
  store i64 %9978, i64* %PC.i323
  %9979 = inttoptr i64 %9976 to i32*
  %9980 = load i32, i32* %9979
  %9981 = zext i32 %9980 to i64
  store i64 %9981, i64* %RAX.i324, align 8
  store %struct.Memory* %loadMem_44afa8, %struct.Memory** %MEMORY
  %loadMem_44afab = load %struct.Memory*, %struct.Memory** %MEMORY
  %9982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9983 = getelementptr inbounds %struct.GPR, %struct.GPR* %9982, i32 0, i32 33
  %9984 = getelementptr inbounds %struct.Reg, %struct.Reg* %9983, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %9984 to i64*
  %9985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9986 = getelementptr inbounds %struct.GPR, %struct.GPR* %9985, i32 0, i32 1
  %9987 = getelementptr inbounds %struct.Reg, %struct.Reg* %9986, i32 0, i32 0
  %RAX.i322 = bitcast %union.anon* %9987 to i64*
  %9988 = load i64, i64* %RAX.i322
  %9989 = load i64, i64* %PC.i321
  %9990 = add i64 %9989, 3
  store i64 %9990, i64* %PC.i321
  %9991 = and i64 1, %9988
  %9992 = trunc i64 %9991 to i32
  store i64 %9991, i64* %RAX.i322, align 8
  %9993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9993, align 1
  %9994 = and i32 %9992, 255
  %9995 = call i32 @llvm.ctpop.i32(i32 %9994)
  %9996 = trunc i32 %9995 to i8
  %9997 = and i8 %9996, 1
  %9998 = xor i8 %9997, 1
  %9999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9998, i8* %9999, align 1
  %10000 = icmp eq i32 %9992, 0
  %10001 = zext i1 %10000 to i8
  %10002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10001, i8* %10002, align 1
  %10003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %10003, align 1
  %10004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10004, align 1
  %10005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10005, align 1
  store %struct.Memory* %loadMem_44afab, %struct.Memory** %MEMORY
  %loadMem_44afae = load %struct.Memory*, %struct.Memory** %MEMORY
  %10006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10007 = getelementptr inbounds %struct.GPR, %struct.GPR* %10006, i32 0, i32 33
  %10008 = getelementptr inbounds %struct.Reg, %struct.Reg* %10007, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %10008 to i64*
  %10009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10010 = getelementptr inbounds %struct.GPR, %struct.GPR* %10009, i32 0, i32 1
  %10011 = getelementptr inbounds %struct.Reg, %struct.Reg* %10010, i32 0, i32 0
  %EAX.i320 = bitcast %union.anon* %10011 to i32*
  %10012 = load i32, i32* %EAX.i320
  %10013 = zext i32 %10012 to i64
  %10014 = load i64, i64* %PC.i319
  %10015 = add i64 %10014, 3
  store i64 %10015, i64* %PC.i319
  %10016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10016, align 1
  %10017 = and i32 %10012, 255
  %10018 = call i32 @llvm.ctpop.i32(i32 %10017)
  %10019 = trunc i32 %10018 to i8
  %10020 = and i8 %10019, 1
  %10021 = xor i8 %10020, 1
  %10022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10021, i8* %10022, align 1
  %10023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10023, align 1
  %10024 = icmp eq i32 %10012, 0
  %10025 = zext i1 %10024 to i8
  %10026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10025, i8* %10026, align 1
  %10027 = lshr i32 %10012, 31
  %10028 = trunc i32 %10027 to i8
  %10029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10028, i8* %10029, align 1
  %10030 = lshr i32 %10012, 31
  %10031 = xor i32 %10027, %10030
  %10032 = add i32 %10031, %10030
  %10033 = icmp eq i32 %10032, 2
  %10034 = zext i1 %10033 to i8
  %10035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10034, i8* %10035, align 1
  store %struct.Memory* %loadMem_44afae, %struct.Memory** %MEMORY
  %loadMem_44afb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10037 = getelementptr inbounds %struct.GPR, %struct.GPR* %10036, i32 0, i32 33
  %10038 = getelementptr inbounds %struct.Reg, %struct.Reg* %10037, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %10038 to i64*
  %10039 = load i64, i64* %PC.i318
  %10040 = add i64 %10039, 148
  %10041 = load i64, i64* %PC.i318
  %10042 = add i64 %10041, 6
  %10043 = load i64, i64* %PC.i318
  %10044 = add i64 %10043, 6
  store i64 %10044, i64* %PC.i318
  %10045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10046 = load i8, i8* %10045, align 1
  %10047 = icmp eq i8 %10046, 0
  %10048 = zext i1 %10047 to i8
  store i8 %10048, i8* %BRANCH_TAKEN, align 1
  %10049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10050 = select i1 %10047, i64 %10040, i64 %10042
  store i64 %10050, i64* %10049, align 8
  store %struct.Memory* %loadMem_44afb1, %struct.Memory** %MEMORY
  %loadBr_44afb1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44afb1 = icmp eq i8 %loadBr_44afb1, 1
  br i1 %cmpBr_44afb1, label %block_.L_44b045, label %block_44afb7

block_44afb7:                                     ; preds = %block_.L_44afa8
  %loadMem_44afb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10052 = getelementptr inbounds %struct.GPR, %struct.GPR* %10051, i32 0, i32 33
  %10053 = getelementptr inbounds %struct.Reg, %struct.Reg* %10052, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %10053 to i64*
  %10054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10055 = getelementptr inbounds %struct.GPR, %struct.GPR* %10054, i32 0, i32 1
  %10056 = getelementptr inbounds %struct.Reg, %struct.Reg* %10055, i32 0, i32 0
  %RAX.i316 = bitcast %union.anon* %10056 to i64*
  %10057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10058 = getelementptr inbounds %struct.GPR, %struct.GPR* %10057, i32 0, i32 15
  %10059 = getelementptr inbounds %struct.Reg, %struct.Reg* %10058, i32 0, i32 0
  %RBP.i317 = bitcast %union.anon* %10059 to i64*
  %10060 = load i64, i64* %RBP.i317
  %10061 = sub i64 %10060, 32
  %10062 = load i64, i64* %PC.i315
  %10063 = add i64 %10062, 4
  store i64 %10063, i64* %PC.i315
  %10064 = inttoptr i64 %10061 to i64*
  %10065 = load i64, i64* %10064
  store i64 %10065, i64* %RAX.i316, align 8
  store %struct.Memory* %loadMem_44afb7, %struct.Memory** %MEMORY
  %loadMem_44afbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10067 = getelementptr inbounds %struct.GPR, %struct.GPR* %10066, i32 0, i32 33
  %10068 = getelementptr inbounds %struct.Reg, %struct.Reg* %10067, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %10068 to i64*
  %10069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10070 = getelementptr inbounds %struct.GPR, %struct.GPR* %10069, i32 0, i32 1
  %10071 = getelementptr inbounds %struct.Reg, %struct.Reg* %10070, i32 0, i32 0
  %RAX.i313 = bitcast %union.anon* %10071 to i64*
  %10072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10073 = getelementptr inbounds %struct.GPR, %struct.GPR* %10072, i32 0, i32 5
  %10074 = getelementptr inbounds %struct.Reg, %struct.Reg* %10073, i32 0, i32 0
  %RCX.i314 = bitcast %union.anon* %10074 to i64*
  %10075 = load i64, i64* %RAX.i313
  %10076 = add i64 %10075, 544
  %10077 = load i64, i64* %PC.i312
  %10078 = add i64 %10077, 6
  store i64 %10078, i64* %PC.i312
  %10079 = inttoptr i64 %10076 to i32*
  %10080 = load i32, i32* %10079
  %10081 = zext i32 %10080 to i64
  store i64 %10081, i64* %RCX.i314, align 8
  store %struct.Memory* %loadMem_44afbb, %struct.Memory** %MEMORY
  %loadMem_44afc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10083 = getelementptr inbounds %struct.GPR, %struct.GPR* %10082, i32 0, i32 33
  %10084 = getelementptr inbounds %struct.Reg, %struct.Reg* %10083, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %10084 to i64*
  %10085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10086 = getelementptr inbounds %struct.GPR, %struct.GPR* %10085, i32 0, i32 1
  %10087 = getelementptr inbounds %struct.Reg, %struct.Reg* %10086, i32 0, i32 0
  %RAX.i310 = bitcast %union.anon* %10087 to i64*
  %10088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10089 = getelementptr inbounds %struct.GPR, %struct.GPR* %10088, i32 0, i32 15
  %10090 = getelementptr inbounds %struct.Reg, %struct.Reg* %10089, i32 0, i32 0
  %RBP.i311 = bitcast %union.anon* %10090 to i64*
  %10091 = load i64, i64* %RBP.i311
  %10092 = sub i64 %10091, 24
  %10093 = load i64, i64* %PC.i309
  %10094 = add i64 %10093, 4
  store i64 %10094, i64* %PC.i309
  %10095 = inttoptr i64 %10092 to i64*
  %10096 = load i64, i64* %10095
  store i64 %10096, i64* %RAX.i310, align 8
  store %struct.Memory* %loadMem_44afc1, %struct.Memory** %MEMORY
  %loadMem_44afc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10098 = getelementptr inbounds %struct.GPR, %struct.GPR* %10097, i32 0, i32 33
  %10099 = getelementptr inbounds %struct.Reg, %struct.Reg* %10098, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %10099 to i64*
  %10100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10101 = getelementptr inbounds %struct.GPR, %struct.GPR* %10100, i32 0, i32 5
  %10102 = getelementptr inbounds %struct.Reg, %struct.Reg* %10101, i32 0, i32 0
  %ECX.i307 = bitcast %union.anon* %10102 to i32*
  %10103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10104 = getelementptr inbounds %struct.GPR, %struct.GPR* %10103, i32 0, i32 1
  %10105 = getelementptr inbounds %struct.Reg, %struct.Reg* %10104, i32 0, i32 0
  %RAX.i308 = bitcast %union.anon* %10105 to i64*
  %10106 = load i64, i64* %RAX.i308
  %10107 = add i64 %10106, 4
  %10108 = load i32, i32* %ECX.i307
  %10109 = zext i32 %10108 to i64
  %10110 = load i64, i64* %PC.i306
  %10111 = add i64 %10110, 3
  store i64 %10111, i64* %PC.i306
  %10112 = inttoptr i64 %10107 to i32*
  store i32 %10108, i32* %10112
  store %struct.Memory* %loadMem_44afc5, %struct.Memory** %MEMORY
  %loadMem_44afc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10114 = getelementptr inbounds %struct.GPR, %struct.GPR* %10113, i32 0, i32 33
  %10115 = getelementptr inbounds %struct.Reg, %struct.Reg* %10114, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %10115 to i64*
  %10116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10117 = getelementptr inbounds %struct.GPR, %struct.GPR* %10116, i32 0, i32 1
  %10118 = getelementptr inbounds %struct.Reg, %struct.Reg* %10117, i32 0, i32 0
  %RAX.i304 = bitcast %union.anon* %10118 to i64*
  %10119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10120 = getelementptr inbounds %struct.GPR, %struct.GPR* %10119, i32 0, i32 15
  %10121 = getelementptr inbounds %struct.Reg, %struct.Reg* %10120, i32 0, i32 0
  %RBP.i305 = bitcast %union.anon* %10121 to i64*
  %10122 = load i64, i64* %RBP.i305
  %10123 = sub i64 %10122, 32
  %10124 = load i64, i64* %PC.i303
  %10125 = add i64 %10124, 4
  store i64 %10125, i64* %PC.i303
  %10126 = inttoptr i64 %10123 to i64*
  %10127 = load i64, i64* %10126
  store i64 %10127, i64* %RAX.i304, align 8
  store %struct.Memory* %loadMem_44afc8, %struct.Memory** %MEMORY
  %loadMem_44afcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10129 = getelementptr inbounds %struct.GPR, %struct.GPR* %10128, i32 0, i32 33
  %10130 = getelementptr inbounds %struct.Reg, %struct.Reg* %10129, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %10130 to i64*
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10132 = getelementptr inbounds %struct.GPR, %struct.GPR* %10131, i32 0, i32 1
  %10133 = getelementptr inbounds %struct.Reg, %struct.Reg* %10132, i32 0, i32 0
  %RAX.i301 = bitcast %union.anon* %10133 to i64*
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10135 = getelementptr inbounds %struct.GPR, %struct.GPR* %10134, i32 0, i32 5
  %10136 = getelementptr inbounds %struct.Reg, %struct.Reg* %10135, i32 0, i32 0
  %RCX.i302 = bitcast %union.anon* %10136 to i64*
  %10137 = load i64, i64* %RAX.i301
  %10138 = add i64 %10137, 560
  %10139 = load i64, i64* %PC.i300
  %10140 = add i64 %10139, 6
  store i64 %10140, i64* %PC.i300
  %10141 = inttoptr i64 %10138 to i32*
  %10142 = load i32, i32* %10141
  %10143 = zext i32 %10142 to i64
  store i64 %10143, i64* %RCX.i302, align 8
  store %struct.Memory* %loadMem_44afcc, %struct.Memory** %MEMORY
  %loadMem_44afd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10145 = getelementptr inbounds %struct.GPR, %struct.GPR* %10144, i32 0, i32 33
  %10146 = getelementptr inbounds %struct.Reg, %struct.Reg* %10145, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %10146 to i64*
  %10147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10148 = getelementptr inbounds %struct.GPR, %struct.GPR* %10147, i32 0, i32 1
  %10149 = getelementptr inbounds %struct.Reg, %struct.Reg* %10148, i32 0, i32 0
  %RAX.i298 = bitcast %union.anon* %10149 to i64*
  %10150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10151 = getelementptr inbounds %struct.GPR, %struct.GPR* %10150, i32 0, i32 15
  %10152 = getelementptr inbounds %struct.Reg, %struct.Reg* %10151, i32 0, i32 0
  %RBP.i299 = bitcast %union.anon* %10152 to i64*
  %10153 = load i64, i64* %RBP.i299
  %10154 = sub i64 %10153, 24
  %10155 = load i64, i64* %PC.i297
  %10156 = add i64 %10155, 4
  store i64 %10156, i64* %PC.i297
  %10157 = inttoptr i64 %10154 to i64*
  %10158 = load i64, i64* %10157
  store i64 %10158, i64* %RAX.i298, align 8
  store %struct.Memory* %loadMem_44afd2, %struct.Memory** %MEMORY
  %loadMem_44afd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10160 = getelementptr inbounds %struct.GPR, %struct.GPR* %10159, i32 0, i32 33
  %10161 = getelementptr inbounds %struct.Reg, %struct.Reg* %10160, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %10161 to i64*
  %10162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10163 = getelementptr inbounds %struct.GPR, %struct.GPR* %10162, i32 0, i32 5
  %10164 = getelementptr inbounds %struct.Reg, %struct.Reg* %10163, i32 0, i32 0
  %ECX.i295 = bitcast %union.anon* %10164 to i32*
  %10165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10166 = getelementptr inbounds %struct.GPR, %struct.GPR* %10165, i32 0, i32 1
  %10167 = getelementptr inbounds %struct.Reg, %struct.Reg* %10166, i32 0, i32 0
  %RAX.i296 = bitcast %union.anon* %10167 to i64*
  %10168 = load i64, i64* %RAX.i296
  %10169 = load i32, i32* %ECX.i295
  %10170 = zext i32 %10169 to i64
  %10171 = load i64, i64* %PC.i294
  %10172 = add i64 %10171, 2
  store i64 %10172, i64* %PC.i294
  %10173 = inttoptr i64 %10168 to i32*
  store i32 %10169, i32* %10173
  store %struct.Memory* %loadMem_44afd6, %struct.Memory** %MEMORY
  %loadMem_44afd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10175 = getelementptr inbounds %struct.GPR, %struct.GPR* %10174, i32 0, i32 33
  %10176 = getelementptr inbounds %struct.Reg, %struct.Reg* %10175, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %10176 to i64*
  %10177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10178 = getelementptr inbounds %struct.GPR, %struct.GPR* %10177, i32 0, i32 1
  %10179 = getelementptr inbounds %struct.Reg, %struct.Reg* %10178, i32 0, i32 0
  %RAX.i292 = bitcast %union.anon* %10179 to i64*
  %10180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10181 = getelementptr inbounds %struct.GPR, %struct.GPR* %10180, i32 0, i32 15
  %10182 = getelementptr inbounds %struct.Reg, %struct.Reg* %10181, i32 0, i32 0
  %RBP.i293 = bitcast %union.anon* %10182 to i64*
  %10183 = load i64, i64* %RBP.i293
  %10184 = sub i64 %10183, 32
  %10185 = load i64, i64* %PC.i291
  %10186 = add i64 %10185, 4
  store i64 %10186, i64* %PC.i291
  %10187 = inttoptr i64 %10184 to i64*
  %10188 = load i64, i64* %10187
  store i64 %10188, i64* %RAX.i292, align 8
  store %struct.Memory* %loadMem_44afd8, %struct.Memory** %MEMORY
  %loadMem_44afdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10190 = getelementptr inbounds %struct.GPR, %struct.GPR* %10189, i32 0, i32 33
  %10191 = getelementptr inbounds %struct.Reg, %struct.Reg* %10190, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %10191 to i64*
  %10192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10193 = getelementptr inbounds %struct.GPR, %struct.GPR* %10192, i32 0, i32 1
  %10194 = getelementptr inbounds %struct.Reg, %struct.Reg* %10193, i32 0, i32 0
  %RAX.i290 = bitcast %union.anon* %10194 to i64*
  %10195 = load i64, i64* %RAX.i290
  %10196 = add i64 %10195, 560
  %10197 = load i64, i64* %PC.i289
  %10198 = add i64 %10197, 7
  store i64 %10198, i64* %PC.i289
  %10199 = inttoptr i64 %10196 to i32*
  %10200 = load i32, i32* %10199
  %10201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10201, align 1
  %10202 = and i32 %10200, 255
  %10203 = call i32 @llvm.ctpop.i32(i32 %10202)
  %10204 = trunc i32 %10203 to i8
  %10205 = and i8 %10204, 1
  %10206 = xor i8 %10205, 1
  %10207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10206, i8* %10207, align 1
  %10208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10208, align 1
  %10209 = icmp eq i32 %10200, 0
  %10210 = zext i1 %10209 to i8
  %10211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10210, i8* %10211, align 1
  %10212 = lshr i32 %10200, 31
  %10213 = trunc i32 %10212 to i8
  %10214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10213, i8* %10214, align 1
  %10215 = lshr i32 %10200, 31
  %10216 = xor i32 %10212, %10215
  %10217 = add i32 %10216, %10215
  %10218 = icmp eq i32 %10217, 2
  %10219 = zext i1 %10218 to i8
  %10220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10219, i8* %10220, align 1
  store %struct.Memory* %loadMem_44afdc, %struct.Memory** %MEMORY
  %loadMem_44afe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10222 = getelementptr inbounds %struct.GPR, %struct.GPR* %10221, i32 0, i32 33
  %10223 = getelementptr inbounds %struct.Reg, %struct.Reg* %10222, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %10223 to i64*
  %10224 = load i64, i64* %PC.i288
  %10225 = add i64 %10224, 93
  %10226 = load i64, i64* %PC.i288
  %10227 = add i64 %10226, 6
  %10228 = load i64, i64* %PC.i288
  %10229 = add i64 %10228, 6
  store i64 %10229, i64* %PC.i288
  %10230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10231 = load i8, i8* %10230, align 1
  store i8 %10231, i8* %BRANCH_TAKEN, align 1
  %10232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10233 = icmp ne i8 %10231, 0
  %10234 = select i1 %10233, i64 %10225, i64 %10227
  store i64 %10234, i64* %10232, align 8
  store %struct.Memory* %loadMem_44afe3, %struct.Memory** %MEMORY
  %loadBr_44afe3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44afe3 = icmp eq i8 %loadBr_44afe3, 1
  br i1 %cmpBr_44afe3, label %block_.L_44b040, label %block_44afe9

block_44afe9:                                     ; preds = %block_44afb7
  %loadMem_44afe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10236 = getelementptr inbounds %struct.GPR, %struct.GPR* %10235, i32 0, i32 33
  %10237 = getelementptr inbounds %struct.Reg, %struct.Reg* %10236, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %10237 to i64*
  %10238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10239 = getelementptr inbounds %struct.GPR, %struct.GPR* %10238, i32 0, i32 1
  %10240 = getelementptr inbounds %struct.Reg, %struct.Reg* %10239, i32 0, i32 0
  %RAX.i287 = bitcast %union.anon* %10240 to i64*
  %10241 = load i64, i64* %PC.i286
  %10242 = add i64 %10241, 8
  store i64 %10242, i64* %PC.i286
  %10243 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10243, i64* %RAX.i287, align 8
  store %struct.Memory* %loadMem_44afe9, %struct.Memory** %MEMORY
  %loadMem_44aff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10245 = getelementptr inbounds %struct.GPR, %struct.GPR* %10244, i32 0, i32 33
  %10246 = getelementptr inbounds %struct.Reg, %struct.Reg* %10245, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %10246 to i64*
  %10247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10248 = getelementptr inbounds %struct.GPR, %struct.GPR* %10247, i32 0, i32 1
  %10249 = getelementptr inbounds %struct.Reg, %struct.Reg* %10248, i32 0, i32 0
  %RAX.i285 = bitcast %union.anon* %10249 to i64*
  %10250 = load i64, i64* %RAX.i285
  %10251 = add i64 %10250, 14168
  %10252 = load i64, i64* %PC.i284
  %10253 = add i64 %10252, 7
  store i64 %10253, i64* %PC.i284
  %10254 = inttoptr i64 %10251 to i64*
  %10255 = load i64, i64* %10254
  store i64 %10255, i64* %RAX.i285, align 8
  store %struct.Memory* %loadMem_44aff1, %struct.Memory** %MEMORY
  %loadMem_44aff8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10257 = getelementptr inbounds %struct.GPR, %struct.GPR* %10256, i32 0, i32 33
  %10258 = getelementptr inbounds %struct.Reg, %struct.Reg* %10257, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %10258 to i64*
  %10259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10260 = getelementptr inbounds %struct.GPR, %struct.GPR* %10259, i32 0, i32 5
  %10261 = getelementptr inbounds %struct.Reg, %struct.Reg* %10260, i32 0, i32 0
  %RCX.i282 = bitcast %union.anon* %10261 to i64*
  %10262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10263 = getelementptr inbounds %struct.GPR, %struct.GPR* %10262, i32 0, i32 15
  %10264 = getelementptr inbounds %struct.Reg, %struct.Reg* %10263, i32 0, i32 0
  %RBP.i283 = bitcast %union.anon* %10264 to i64*
  %10265 = load i64, i64* %RBP.i283
  %10266 = sub i64 %10265, 32
  %10267 = load i64, i64* %PC.i281
  %10268 = add i64 %10267, 4
  store i64 %10268, i64* %PC.i281
  %10269 = inttoptr i64 %10266 to i64*
  %10270 = load i64, i64* %10269
  store i64 %10270, i64* %RCX.i282, align 8
  store %struct.Memory* %loadMem_44aff8, %struct.Memory** %MEMORY
  %loadMem_44affc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10272 = getelementptr inbounds %struct.GPR, %struct.GPR* %10271, i32 0, i32 33
  %10273 = getelementptr inbounds %struct.Reg, %struct.Reg* %10272, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %10273 to i64*
  %10274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10275 = getelementptr inbounds %struct.GPR, %struct.GPR* %10274, i32 0, i32 5
  %10276 = getelementptr inbounds %struct.Reg, %struct.Reg* %10275, i32 0, i32 0
  %RCX.i280 = bitcast %union.anon* %10276 to i64*
  %10277 = load i64, i64* %RCX.i280
  %10278 = add i64 %10277, 544
  %10279 = load i64, i64* %PC.i279
  %10280 = add i64 %10279, 7
  store i64 %10280, i64* %PC.i279
  %10281 = inttoptr i64 %10278 to i32*
  %10282 = load i32, i32* %10281
  %10283 = sext i32 %10282 to i64
  store i64 %10283, i64* %RCX.i280, align 8
  store %struct.Memory* %loadMem_44affc, %struct.Memory** %MEMORY
  %loadMem_44b003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10285 = getelementptr inbounds %struct.GPR, %struct.GPR* %10284, i32 0, i32 33
  %10286 = getelementptr inbounds %struct.Reg, %struct.Reg* %10285, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %10286 to i64*
  %10287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10288 = getelementptr inbounds %struct.GPR, %struct.GPR* %10287, i32 0, i32 5
  %10289 = getelementptr inbounds %struct.Reg, %struct.Reg* %10288, i32 0, i32 0
  %RCX.i278 = bitcast %union.anon* %10289 to i64*
  %10290 = load i64, i64* %RCX.i278
  %10291 = load i64, i64* %PC.i277
  %10292 = add i64 %10291, 7
  store i64 %10292, i64* %PC.i277
  %10293 = sext i64 %10290 to i128
  %10294 = and i128 %10293, -18446744073709551616
  %10295 = zext i64 %10290 to i128
  %10296 = or i128 %10294, %10295
  %10297 = mul i128 632, %10296
  %10298 = trunc i128 %10297 to i64
  store i64 %10298, i64* %RCX.i278, align 8
  %10299 = sext i64 %10298 to i128
  %10300 = icmp ne i128 %10299, %10297
  %10301 = zext i1 %10300 to i8
  %10302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10301, i8* %10302, align 1
  %10303 = trunc i128 %10297 to i32
  %10304 = and i32 %10303, 255
  %10305 = call i32 @llvm.ctpop.i32(i32 %10304)
  %10306 = trunc i32 %10305 to i8
  %10307 = and i8 %10306, 1
  %10308 = xor i8 %10307, 1
  %10309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10308, i8* %10309, align 1
  %10310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10310, align 1
  %10311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10311, align 1
  %10312 = lshr i64 %10298, 63
  %10313 = trunc i64 %10312 to i8
  %10314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10313, i8* %10314, align 1
  %10315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10301, i8* %10315, align 1
  store %struct.Memory* %loadMem_44b003, %struct.Memory** %MEMORY
  %loadMem_44b00a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10317 = getelementptr inbounds %struct.GPR, %struct.GPR* %10316, i32 0, i32 33
  %10318 = getelementptr inbounds %struct.Reg, %struct.Reg* %10317, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %10318 to i64*
  %10319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10320 = getelementptr inbounds %struct.GPR, %struct.GPR* %10319, i32 0, i32 1
  %10321 = getelementptr inbounds %struct.Reg, %struct.Reg* %10320, i32 0, i32 0
  %RAX.i275 = bitcast %union.anon* %10321 to i64*
  %10322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10323 = getelementptr inbounds %struct.GPR, %struct.GPR* %10322, i32 0, i32 5
  %10324 = getelementptr inbounds %struct.Reg, %struct.Reg* %10323, i32 0, i32 0
  %RCX.i276 = bitcast %union.anon* %10324 to i64*
  %10325 = load i64, i64* %RAX.i275
  %10326 = load i64, i64* %RCX.i276
  %10327 = load i64, i64* %PC.i274
  %10328 = add i64 %10327, 3
  store i64 %10328, i64* %PC.i274
  %10329 = add i64 %10326, %10325
  store i64 %10329, i64* %RAX.i275, align 8
  %10330 = icmp ult i64 %10329, %10325
  %10331 = icmp ult i64 %10329, %10326
  %10332 = or i1 %10330, %10331
  %10333 = zext i1 %10332 to i8
  %10334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10333, i8* %10334, align 1
  %10335 = trunc i64 %10329 to i32
  %10336 = and i32 %10335, 255
  %10337 = call i32 @llvm.ctpop.i32(i32 %10336)
  %10338 = trunc i32 %10337 to i8
  %10339 = and i8 %10338, 1
  %10340 = xor i8 %10339, 1
  %10341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10340, i8* %10341, align 1
  %10342 = xor i64 %10326, %10325
  %10343 = xor i64 %10342, %10329
  %10344 = lshr i64 %10343, 4
  %10345 = trunc i64 %10344 to i8
  %10346 = and i8 %10345, 1
  %10347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10346, i8* %10347, align 1
  %10348 = icmp eq i64 %10329, 0
  %10349 = zext i1 %10348 to i8
  %10350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10349, i8* %10350, align 1
  %10351 = lshr i64 %10329, 63
  %10352 = trunc i64 %10351 to i8
  %10353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10352, i8* %10353, align 1
  %10354 = lshr i64 %10325, 63
  %10355 = lshr i64 %10326, 63
  %10356 = xor i64 %10351, %10354
  %10357 = xor i64 %10351, %10355
  %10358 = add i64 %10356, %10357
  %10359 = icmp eq i64 %10358, 2
  %10360 = zext i1 %10359 to i8
  %10361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10360, i8* %10361, align 1
  store %struct.Memory* %loadMem_44b00a, %struct.Memory** %MEMORY
  %loadMem_44b00d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10363 = getelementptr inbounds %struct.GPR, %struct.GPR* %10362, i32 0, i32 33
  %10364 = getelementptr inbounds %struct.Reg, %struct.Reg* %10363, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %10364 to i64*
  %10365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10366 = getelementptr inbounds %struct.GPR, %struct.GPR* %10365, i32 0, i32 1
  %10367 = getelementptr inbounds %struct.Reg, %struct.Reg* %10366, i32 0, i32 0
  %RAX.i273 = bitcast %union.anon* %10367 to i64*
  %10368 = load i64, i64* %RAX.i273
  %10369 = add i64 %10368, 532
  %10370 = load i64, i64* %PC.i272
  %10371 = add i64 %10370, 7
  store i64 %10371, i64* %PC.i272
  %10372 = inttoptr i64 %10369 to i32*
  %10373 = load i32, i32* %10372
  %10374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10374, align 1
  %10375 = and i32 %10373, 255
  %10376 = call i32 @llvm.ctpop.i32(i32 %10375)
  %10377 = trunc i32 %10376 to i8
  %10378 = and i8 %10377, 1
  %10379 = xor i8 %10378, 1
  %10380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10379, i8* %10380, align 1
  %10381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10381, align 1
  %10382 = icmp eq i32 %10373, 0
  %10383 = zext i1 %10382 to i8
  %10384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10383, i8* %10384, align 1
  %10385 = lshr i32 %10373, 31
  %10386 = trunc i32 %10385 to i8
  %10387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10386, i8* %10387, align 1
  %10388 = lshr i32 %10373, 31
  %10389 = xor i32 %10385, %10388
  %10390 = add i32 %10389, %10388
  %10391 = icmp eq i32 %10390, 2
  %10392 = zext i1 %10391 to i8
  %10393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10392, i8* %10393, align 1
  store %struct.Memory* %loadMem_44b00d, %struct.Memory** %MEMORY
  %loadMem_44b014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10395 = getelementptr inbounds %struct.GPR, %struct.GPR* %10394, i32 0, i32 33
  %10396 = getelementptr inbounds %struct.Reg, %struct.Reg* %10395, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %10396 to i64*
  %10397 = load i64, i64* %PC.i271
  %10398 = add i64 %10397, 33
  %10399 = load i64, i64* %PC.i271
  %10400 = add i64 %10399, 6
  %10401 = load i64, i64* %PC.i271
  %10402 = add i64 %10401, 6
  store i64 %10402, i64* %PC.i271
  %10403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10404 = load i8, i8* %10403, align 1
  %10405 = icmp eq i8 %10404, 0
  %10406 = zext i1 %10405 to i8
  store i8 %10406, i8* %BRANCH_TAKEN, align 1
  %10407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10408 = select i1 %10405, i64 %10398, i64 %10400
  store i64 %10408, i64* %10407, align 8
  store %struct.Memory* %loadMem_44b014, %struct.Memory** %MEMORY
  %loadBr_44b014 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44b014 = icmp eq i8 %loadBr_44b014, 1
  br i1 %cmpBr_44b014, label %block_.L_44b035, label %block_44b01a

block_44b01a:                                     ; preds = %block_44afe9
  %loadMem_44b01a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10410 = getelementptr inbounds %struct.GPR, %struct.GPR* %10409, i32 0, i32 33
  %10411 = getelementptr inbounds %struct.Reg, %struct.Reg* %10410, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %10411 to i64*
  %10412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10413 = getelementptr inbounds %struct.GPR, %struct.GPR* %10412, i32 0, i32 1
  %10414 = getelementptr inbounds %struct.Reg, %struct.Reg* %10413, i32 0, i32 0
  %RAX.i269 = bitcast %union.anon* %10414 to i64*
  %10415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10416 = getelementptr inbounds %struct.GPR, %struct.GPR* %10415, i32 0, i32 15
  %10417 = getelementptr inbounds %struct.Reg, %struct.Reg* %10416, i32 0, i32 0
  %RBP.i270 = bitcast %union.anon* %10417 to i64*
  %10418 = load i64, i64* %RBP.i270
  %10419 = sub i64 %10418, 24
  %10420 = load i64, i64* %PC.i268
  %10421 = add i64 %10420, 4
  store i64 %10421, i64* %PC.i268
  %10422 = inttoptr i64 %10419 to i64*
  %10423 = load i64, i64* %10422
  store i64 %10423, i64* %RAX.i269, align 8
  store %struct.Memory* %loadMem_44b01a, %struct.Memory** %MEMORY
  %loadMem_44b01e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10425 = getelementptr inbounds %struct.GPR, %struct.GPR* %10424, i32 0, i32 33
  %10426 = getelementptr inbounds %struct.Reg, %struct.Reg* %10425, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %10426 to i64*
  %10427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10428 = getelementptr inbounds %struct.GPR, %struct.GPR* %10427, i32 0, i32 1
  %10429 = getelementptr inbounds %struct.Reg, %struct.Reg* %10428, i32 0, i32 0
  %RAX.i266 = bitcast %union.anon* %10429 to i64*
  %10430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10431 = getelementptr inbounds %struct.GPR, %struct.GPR* %10430, i32 0, i32 5
  %10432 = getelementptr inbounds %struct.Reg, %struct.Reg* %10431, i32 0, i32 0
  %RCX.i267 = bitcast %union.anon* %10432 to i64*
  %10433 = load i64, i64* %RAX.i266
  %10434 = add i64 %10433, 4
  %10435 = load i64, i64* %PC.i265
  %10436 = add i64 %10435, 3
  store i64 %10436, i64* %PC.i265
  %10437 = inttoptr i64 %10434 to i32*
  %10438 = load i32, i32* %10437
  %10439 = zext i32 %10438 to i64
  store i64 %10439, i64* %RCX.i267, align 8
  store %struct.Memory* %loadMem_44b01e, %struct.Memory** %MEMORY
  %loadMem_44b021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10441 = getelementptr inbounds %struct.GPR, %struct.GPR* %10440, i32 0, i32 33
  %10442 = getelementptr inbounds %struct.Reg, %struct.Reg* %10441, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %10442 to i64*
  %10443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10444 = getelementptr inbounds %struct.GPR, %struct.GPR* %10443, i32 0, i32 5
  %10445 = getelementptr inbounds %struct.Reg, %struct.Reg* %10444, i32 0, i32 0
  %RCX.i264 = bitcast %union.anon* %10445 to i64*
  %10446 = load i64, i64* %RCX.i264
  %10447 = load i64, i64* %PC.i263
  %10448 = add i64 %10447, 3
  store i64 %10448, i64* %PC.i263
  %10449 = trunc i64 %10446 to i32
  %10450 = add i32 1, %10449
  %10451 = zext i32 %10450 to i64
  store i64 %10451, i64* %RCX.i264, align 8
  %10452 = icmp ult i32 %10450, %10449
  %10453 = icmp ult i32 %10450, 1
  %10454 = or i1 %10452, %10453
  %10455 = zext i1 %10454 to i8
  %10456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10455, i8* %10456, align 1
  %10457 = and i32 %10450, 255
  %10458 = call i32 @llvm.ctpop.i32(i32 %10457)
  %10459 = trunc i32 %10458 to i8
  %10460 = and i8 %10459, 1
  %10461 = xor i8 %10460, 1
  %10462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10461, i8* %10462, align 1
  %10463 = xor i64 1, %10446
  %10464 = trunc i64 %10463 to i32
  %10465 = xor i32 %10464, %10450
  %10466 = lshr i32 %10465, 4
  %10467 = trunc i32 %10466 to i8
  %10468 = and i8 %10467, 1
  %10469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10468, i8* %10469, align 1
  %10470 = icmp eq i32 %10450, 0
  %10471 = zext i1 %10470 to i8
  %10472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10471, i8* %10472, align 1
  %10473 = lshr i32 %10450, 31
  %10474 = trunc i32 %10473 to i8
  %10475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10474, i8* %10475, align 1
  %10476 = lshr i32 %10449, 31
  %10477 = xor i32 %10473, %10476
  %10478 = add i32 %10477, %10473
  %10479 = icmp eq i32 %10478, 2
  %10480 = zext i1 %10479 to i8
  %10481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10480, i8* %10481, align 1
  store %struct.Memory* %loadMem_44b021, %struct.Memory** %MEMORY
  %loadMem_44b024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10483 = getelementptr inbounds %struct.GPR, %struct.GPR* %10482, i32 0, i32 33
  %10484 = getelementptr inbounds %struct.Reg, %struct.Reg* %10483, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %10484 to i64*
  %10485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10486 = getelementptr inbounds %struct.GPR, %struct.GPR* %10485, i32 0, i32 5
  %10487 = getelementptr inbounds %struct.Reg, %struct.Reg* %10486, i32 0, i32 0
  %ECX.i261 = bitcast %union.anon* %10487 to i32*
  %10488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10489 = getelementptr inbounds %struct.GPR, %struct.GPR* %10488, i32 0, i32 1
  %10490 = getelementptr inbounds %struct.Reg, %struct.Reg* %10489, i32 0, i32 0
  %RAX.i262 = bitcast %union.anon* %10490 to i64*
  %10491 = load i64, i64* %RAX.i262
  %10492 = add i64 %10491, 4
  %10493 = load i32, i32* %ECX.i261
  %10494 = zext i32 %10493 to i64
  %10495 = load i64, i64* %PC.i260
  %10496 = add i64 %10495, 3
  store i64 %10496, i64* %PC.i260
  %10497 = inttoptr i64 %10492 to i32*
  store i32 %10493, i32* %10497
  store %struct.Memory* %loadMem_44b024, %struct.Memory** %MEMORY
  %loadMem_44b027 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10499 = getelementptr inbounds %struct.GPR, %struct.GPR* %10498, i32 0, i32 33
  %10500 = getelementptr inbounds %struct.Reg, %struct.Reg* %10499, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %10500 to i64*
  %10501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10502 = getelementptr inbounds %struct.GPR, %struct.GPR* %10501, i32 0, i32 5
  %10503 = getelementptr inbounds %struct.Reg, %struct.Reg* %10502, i32 0, i32 0
  %RCX.i258 = bitcast %union.anon* %10503 to i64*
  %10504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10505 = getelementptr inbounds %struct.GPR, %struct.GPR* %10504, i32 0, i32 15
  %10506 = getelementptr inbounds %struct.Reg, %struct.Reg* %10505, i32 0, i32 0
  %RBP.i259 = bitcast %union.anon* %10506 to i64*
  %10507 = load i64, i64* %RBP.i259
  %10508 = sub i64 %10507, 12
  %10509 = load i64, i64* %PC.i257
  %10510 = add i64 %10509, 3
  store i64 %10510, i64* %PC.i257
  %10511 = inttoptr i64 %10508 to i32*
  %10512 = load i32, i32* %10511
  %10513 = zext i32 %10512 to i64
  store i64 %10513, i64* %RCX.i258, align 8
  store %struct.Memory* %loadMem_44b027, %struct.Memory** %MEMORY
  %loadMem_44b02a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10515 = getelementptr inbounds %struct.GPR, %struct.GPR* %10514, i32 0, i32 33
  %10516 = getelementptr inbounds %struct.Reg, %struct.Reg* %10515, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %10516 to i64*
  %10517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10518 = getelementptr inbounds %struct.GPR, %struct.GPR* %10517, i32 0, i32 5
  %10519 = getelementptr inbounds %struct.Reg, %struct.Reg* %10518, i32 0, i32 0
  %RCX.i256 = bitcast %union.anon* %10519 to i64*
  %10520 = load i64, i64* %RCX.i256
  %10521 = load i64, i64* %PC.i255
  %10522 = add i64 %10521, 2
  store i64 %10522, i64* %PC.i255
  %10523 = trunc i64 %10520 to i32
  %10524 = shl i32 %10523, 1
  %10525 = icmp slt i32 %10523, 0
  %10526 = icmp slt i32 %10524, 0
  %10527 = xor i1 %10525, %10526
  %10528 = zext i32 %10524 to i64
  store i64 %10528, i64* %RCX.i256, align 8
  %10529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10530 = zext i1 %10525 to i8
  store i8 %10530, i8* %10529, align 1
  %10531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10532 = and i32 %10524, 254
  %10533 = call i32 @llvm.ctpop.i32(i32 %10532)
  %10534 = trunc i32 %10533 to i8
  %10535 = and i8 %10534, 1
  %10536 = xor i8 %10535, 1
  store i8 %10536, i8* %10531, align 1
  %10537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10537, align 1
  %10538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10539 = icmp eq i32 %10524, 0
  %10540 = zext i1 %10539 to i8
  store i8 %10540, i8* %10538, align 1
  %10541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10542 = lshr i32 %10524, 31
  %10543 = trunc i32 %10542 to i8
  store i8 %10543, i8* %10541, align 1
  %10544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10545 = zext i1 %10527 to i8
  store i8 %10545, i8* %10544, align 1
  store %struct.Memory* %loadMem_44b02a, %struct.Memory** %MEMORY
  %loadMem_44b02d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10547 = getelementptr inbounds %struct.GPR, %struct.GPR* %10546, i32 0, i32 33
  %10548 = getelementptr inbounds %struct.Reg, %struct.Reg* %10547, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %10548 to i64*
  %10549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10550 = getelementptr inbounds %struct.GPR, %struct.GPR* %10549, i32 0, i32 5
  %10551 = getelementptr inbounds %struct.Reg, %struct.Reg* %10550, i32 0, i32 0
  %ECX.i253 = bitcast %union.anon* %10551 to i32*
  %10552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10553 = getelementptr inbounds %struct.GPR, %struct.GPR* %10552, i32 0, i32 15
  %10554 = getelementptr inbounds %struct.Reg, %struct.Reg* %10553, i32 0, i32 0
  %RBP.i254 = bitcast %union.anon* %10554 to i64*
  %10555 = load i64, i64* %RBP.i254
  %10556 = sub i64 %10555, 44
  %10557 = load i32, i32* %ECX.i253
  %10558 = zext i32 %10557 to i64
  %10559 = load i64, i64* %PC.i252
  %10560 = add i64 %10559, 3
  store i64 %10560, i64* %PC.i252
  %10561 = inttoptr i64 %10556 to i32*
  store i32 %10557, i32* %10561
  store %struct.Memory* %loadMem_44b02d, %struct.Memory** %MEMORY
  %loadMem_44b030 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10563 = getelementptr inbounds %struct.GPR, %struct.GPR* %10562, i32 0, i32 33
  %10564 = getelementptr inbounds %struct.Reg, %struct.Reg* %10563, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %10564 to i64*
  %10565 = load i64, i64* %PC.i251
  %10566 = add i64 %10565, 11
  %10567 = load i64, i64* %PC.i251
  %10568 = add i64 %10567, 5
  store i64 %10568, i64* %PC.i251
  %10569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10566, i64* %10569, align 8
  store %struct.Memory* %loadMem_44b030, %struct.Memory** %MEMORY
  br label %block_.L_44b03b

block_.L_44b035:                                  ; preds = %block_44afe9
  %loadMem_44b035 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10571 = getelementptr inbounds %struct.GPR, %struct.GPR* %10570, i32 0, i32 33
  %10572 = getelementptr inbounds %struct.Reg, %struct.Reg* %10571, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %10572 to i64*
  %10573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10574 = getelementptr inbounds %struct.GPR, %struct.GPR* %10573, i32 0, i32 1
  %10575 = getelementptr inbounds %struct.Reg, %struct.Reg* %10574, i32 0, i32 0
  %RAX.i249 = bitcast %union.anon* %10575 to i64*
  %10576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10577 = getelementptr inbounds %struct.GPR, %struct.GPR* %10576, i32 0, i32 15
  %10578 = getelementptr inbounds %struct.Reg, %struct.Reg* %10577, i32 0, i32 0
  %RBP.i250 = bitcast %union.anon* %10578 to i64*
  %10579 = load i64, i64* %RBP.i250
  %10580 = sub i64 %10579, 12
  %10581 = load i64, i64* %PC.i248
  %10582 = add i64 %10581, 3
  store i64 %10582, i64* %PC.i248
  %10583 = inttoptr i64 %10580 to i32*
  %10584 = load i32, i32* %10583
  %10585 = zext i32 %10584 to i64
  store i64 %10585, i64* %RAX.i249, align 8
  store %struct.Memory* %loadMem_44b035, %struct.Memory** %MEMORY
  %loadMem_44b038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10587 = getelementptr inbounds %struct.GPR, %struct.GPR* %10586, i32 0, i32 33
  %10588 = getelementptr inbounds %struct.Reg, %struct.Reg* %10587, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %10588 to i64*
  %10589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10590 = getelementptr inbounds %struct.GPR, %struct.GPR* %10589, i32 0, i32 1
  %10591 = getelementptr inbounds %struct.Reg, %struct.Reg* %10590, i32 0, i32 0
  %EAX.i246 = bitcast %union.anon* %10591 to i32*
  %10592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10593 = getelementptr inbounds %struct.GPR, %struct.GPR* %10592, i32 0, i32 15
  %10594 = getelementptr inbounds %struct.Reg, %struct.Reg* %10593, i32 0, i32 0
  %RBP.i247 = bitcast %union.anon* %10594 to i64*
  %10595 = load i64, i64* %RBP.i247
  %10596 = sub i64 %10595, 44
  %10597 = load i32, i32* %EAX.i246
  %10598 = zext i32 %10597 to i64
  %10599 = load i64, i64* %PC.i245
  %10600 = add i64 %10599, 3
  store i64 %10600, i64* %PC.i245
  %10601 = inttoptr i64 %10596 to i32*
  store i32 %10597, i32* %10601
  store %struct.Memory* %loadMem_44b038, %struct.Memory** %MEMORY
  br label %block_.L_44b03b

block_.L_44b03b:                                  ; preds = %block_.L_44b035, %block_44b01a
  %loadMem_44b03b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10603 = getelementptr inbounds %struct.GPR, %struct.GPR* %10602, i32 0, i32 33
  %10604 = getelementptr inbounds %struct.Reg, %struct.Reg* %10603, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %10604 to i64*
  %10605 = load i64, i64* %PC.i244
  %10606 = add i64 %10605, 5
  %10607 = load i64, i64* %PC.i244
  %10608 = add i64 %10607, 5
  store i64 %10608, i64* %PC.i244
  %10609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10606, i64* %10609, align 8
  store %struct.Memory* %loadMem_44b03b, %struct.Memory** %MEMORY
  br label %block_.L_44b040

block_.L_44b040:                                  ; preds = %block_.L_44b03b, %block_44afb7
  %loadMem_44b040 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10611 = getelementptr inbounds %struct.GPR, %struct.GPR* %10610, i32 0, i32 33
  %10612 = getelementptr inbounds %struct.Reg, %struct.Reg* %10611, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %10612 to i64*
  %10613 = load i64, i64* %PC.i243
  %10614 = add i64 %10613, 47
  %10615 = load i64, i64* %PC.i243
  %10616 = add i64 %10615, 5
  store i64 %10616, i64* %PC.i243
  %10617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10614, i64* %10617, align 8
  store %struct.Memory* %loadMem_44b040, %struct.Memory** %MEMORY
  br label %block_.L_44b06f

block_.L_44b045:                                  ; preds = %block_.L_44afa8
  %loadMem_44b045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10619 = getelementptr inbounds %struct.GPR, %struct.GPR* %10618, i32 0, i32 33
  %10620 = getelementptr inbounds %struct.Reg, %struct.Reg* %10619, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %10620 to i64*
  %10621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10622 = getelementptr inbounds %struct.GPR, %struct.GPR* %10621, i32 0, i32 1
  %10623 = getelementptr inbounds %struct.Reg, %struct.Reg* %10622, i32 0, i32 0
  %RAX.i241 = bitcast %union.anon* %10623 to i64*
  %10624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10625 = getelementptr inbounds %struct.GPR, %struct.GPR* %10624, i32 0, i32 15
  %10626 = getelementptr inbounds %struct.Reg, %struct.Reg* %10625, i32 0, i32 0
  %RBP.i242 = bitcast %union.anon* %10626 to i64*
  %10627 = load i64, i64* %RBP.i242
  %10628 = sub i64 %10627, 32
  %10629 = load i64, i64* %PC.i240
  %10630 = add i64 %10629, 4
  store i64 %10630, i64* %PC.i240
  %10631 = inttoptr i64 %10628 to i64*
  %10632 = load i64, i64* %10631
  store i64 %10632, i64* %RAX.i241, align 8
  store %struct.Memory* %loadMem_44b045, %struct.Memory** %MEMORY
  %loadMem_44b049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10634 = getelementptr inbounds %struct.GPR, %struct.GPR* %10633, i32 0, i32 33
  %10635 = getelementptr inbounds %struct.Reg, %struct.Reg* %10634, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %10635 to i64*
  %10636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10637 = getelementptr inbounds %struct.GPR, %struct.GPR* %10636, i32 0, i32 1
  %10638 = getelementptr inbounds %struct.Reg, %struct.Reg* %10637, i32 0, i32 0
  %RAX.i238 = bitcast %union.anon* %10638 to i64*
  %10639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10640 = getelementptr inbounds %struct.GPR, %struct.GPR* %10639, i32 0, i32 5
  %10641 = getelementptr inbounds %struct.Reg, %struct.Reg* %10640, i32 0, i32 0
  %RCX.i239 = bitcast %union.anon* %10641 to i64*
  %10642 = load i64, i64* %RAX.i238
  %10643 = add i64 %10642, 544
  %10644 = load i64, i64* %PC.i237
  %10645 = add i64 %10644, 6
  store i64 %10645, i64* %PC.i237
  %10646 = inttoptr i64 %10643 to i32*
  %10647 = load i32, i32* %10646
  %10648 = zext i32 %10647 to i64
  store i64 %10648, i64* %RCX.i239, align 8
  store %struct.Memory* %loadMem_44b049, %struct.Memory** %MEMORY
  %loadMem_44b04f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10650 = getelementptr inbounds %struct.GPR, %struct.GPR* %10649, i32 0, i32 33
  %10651 = getelementptr inbounds %struct.Reg, %struct.Reg* %10650, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %10651 to i64*
  %10652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10653 = getelementptr inbounds %struct.GPR, %struct.GPR* %10652, i32 0, i32 5
  %10654 = getelementptr inbounds %struct.Reg, %struct.Reg* %10653, i32 0, i32 0
  %RCX.i236 = bitcast %union.anon* %10654 to i64*
  %10655 = load i64, i64* %RCX.i236
  %10656 = load i64, i64* %PC.i235
  %10657 = add i64 %10656, 3
  store i64 %10657, i64* %PC.i235
  %10658 = trunc i64 %10655 to i32
  %10659 = add i32 1, %10658
  %10660 = zext i32 %10659 to i64
  store i64 %10660, i64* %RCX.i236, align 8
  %10661 = icmp ult i32 %10659, %10658
  %10662 = icmp ult i32 %10659, 1
  %10663 = or i1 %10661, %10662
  %10664 = zext i1 %10663 to i8
  %10665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10664, i8* %10665, align 1
  %10666 = and i32 %10659, 255
  %10667 = call i32 @llvm.ctpop.i32(i32 %10666)
  %10668 = trunc i32 %10667 to i8
  %10669 = and i8 %10668, 1
  %10670 = xor i8 %10669, 1
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10670, i8* %10671, align 1
  %10672 = xor i64 1, %10655
  %10673 = trunc i64 %10672 to i32
  %10674 = xor i32 %10673, %10659
  %10675 = lshr i32 %10674, 4
  %10676 = trunc i32 %10675 to i8
  %10677 = and i8 %10676, 1
  %10678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10677, i8* %10678, align 1
  %10679 = icmp eq i32 %10659, 0
  %10680 = zext i1 %10679 to i8
  %10681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10680, i8* %10681, align 1
  %10682 = lshr i32 %10659, 31
  %10683 = trunc i32 %10682 to i8
  %10684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10683, i8* %10684, align 1
  %10685 = lshr i32 %10658, 31
  %10686 = xor i32 %10682, %10685
  %10687 = add i32 %10686, %10682
  %10688 = icmp eq i32 %10687, 2
  %10689 = zext i1 %10688 to i8
  %10690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10689, i8* %10690, align 1
  store %struct.Memory* %loadMem_44b04f, %struct.Memory** %MEMORY
  %loadMem_44b052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10692 = getelementptr inbounds %struct.GPR, %struct.GPR* %10691, i32 0, i32 33
  %10693 = getelementptr inbounds %struct.Reg, %struct.Reg* %10692, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %10693 to i64*
  %10694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10695 = getelementptr inbounds %struct.GPR, %struct.GPR* %10694, i32 0, i32 1
  %10696 = getelementptr inbounds %struct.Reg, %struct.Reg* %10695, i32 0, i32 0
  %RAX.i233 = bitcast %union.anon* %10696 to i64*
  %10697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10698 = getelementptr inbounds %struct.GPR, %struct.GPR* %10697, i32 0, i32 15
  %10699 = getelementptr inbounds %struct.Reg, %struct.Reg* %10698, i32 0, i32 0
  %RBP.i234 = bitcast %union.anon* %10699 to i64*
  %10700 = load i64, i64* %RBP.i234
  %10701 = sub i64 %10700, 24
  %10702 = load i64, i64* %PC.i232
  %10703 = add i64 %10702, 4
  store i64 %10703, i64* %PC.i232
  %10704 = inttoptr i64 %10701 to i64*
  %10705 = load i64, i64* %10704
  store i64 %10705, i64* %RAX.i233, align 8
  store %struct.Memory* %loadMem_44b052, %struct.Memory** %MEMORY
  %loadMem_44b056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10707 = getelementptr inbounds %struct.GPR, %struct.GPR* %10706, i32 0, i32 33
  %10708 = getelementptr inbounds %struct.Reg, %struct.Reg* %10707, i32 0, i32 0
  %PC.i229 = bitcast %union.anon* %10708 to i64*
  %10709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10710 = getelementptr inbounds %struct.GPR, %struct.GPR* %10709, i32 0, i32 5
  %10711 = getelementptr inbounds %struct.Reg, %struct.Reg* %10710, i32 0, i32 0
  %ECX.i230 = bitcast %union.anon* %10711 to i32*
  %10712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10713 = getelementptr inbounds %struct.GPR, %struct.GPR* %10712, i32 0, i32 1
  %10714 = getelementptr inbounds %struct.Reg, %struct.Reg* %10713, i32 0, i32 0
  %RAX.i231 = bitcast %union.anon* %10714 to i64*
  %10715 = load i64, i64* %RAX.i231
  %10716 = add i64 %10715, 4
  %10717 = load i32, i32* %ECX.i230
  %10718 = zext i32 %10717 to i64
  %10719 = load i64, i64* %PC.i229
  %10720 = add i64 %10719, 3
  store i64 %10720, i64* %PC.i229
  %10721 = inttoptr i64 %10716 to i32*
  store i32 %10717, i32* %10721
  store %struct.Memory* %loadMem_44b056, %struct.Memory** %MEMORY
  %loadMem_44b059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10723 = getelementptr inbounds %struct.GPR, %struct.GPR* %10722, i32 0, i32 33
  %10724 = getelementptr inbounds %struct.Reg, %struct.Reg* %10723, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %10724 to i64*
  %10725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10726 = getelementptr inbounds %struct.GPR, %struct.GPR* %10725, i32 0, i32 1
  %10727 = getelementptr inbounds %struct.Reg, %struct.Reg* %10726, i32 0, i32 0
  %RAX.i227 = bitcast %union.anon* %10727 to i64*
  %10728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10729 = getelementptr inbounds %struct.GPR, %struct.GPR* %10728, i32 0, i32 15
  %10730 = getelementptr inbounds %struct.Reg, %struct.Reg* %10729, i32 0, i32 0
  %RBP.i228 = bitcast %union.anon* %10730 to i64*
  %10731 = load i64, i64* %RBP.i228
  %10732 = sub i64 %10731, 32
  %10733 = load i64, i64* %PC.i226
  %10734 = add i64 %10733, 4
  store i64 %10734, i64* %PC.i226
  %10735 = inttoptr i64 %10732 to i64*
  %10736 = load i64, i64* %10735
  store i64 %10736, i64* %RAX.i227, align 8
  store %struct.Memory* %loadMem_44b059, %struct.Memory** %MEMORY
  %loadMem_44b05d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10738 = getelementptr inbounds %struct.GPR, %struct.GPR* %10737, i32 0, i32 33
  %10739 = getelementptr inbounds %struct.Reg, %struct.Reg* %10738, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %10739 to i64*
  %10740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10741 = getelementptr inbounds %struct.GPR, %struct.GPR* %10740, i32 0, i32 1
  %10742 = getelementptr inbounds %struct.Reg, %struct.Reg* %10741, i32 0, i32 0
  %RAX.i224 = bitcast %union.anon* %10742 to i64*
  %10743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10744 = getelementptr inbounds %struct.GPR, %struct.GPR* %10743, i32 0, i32 5
  %10745 = getelementptr inbounds %struct.Reg, %struct.Reg* %10744, i32 0, i32 0
  %RCX.i225 = bitcast %union.anon* %10745 to i64*
  %10746 = load i64, i64* %RAX.i224
  %10747 = add i64 %10746, 560
  %10748 = load i64, i64* %PC.i223
  %10749 = add i64 %10748, 6
  store i64 %10749, i64* %PC.i223
  %10750 = inttoptr i64 %10747 to i32*
  %10751 = load i32, i32* %10750
  %10752 = zext i32 %10751 to i64
  store i64 %10752, i64* %RCX.i225, align 8
  store %struct.Memory* %loadMem_44b05d, %struct.Memory** %MEMORY
  %loadMem_44b063 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10754 = getelementptr inbounds %struct.GPR, %struct.GPR* %10753, i32 0, i32 33
  %10755 = getelementptr inbounds %struct.Reg, %struct.Reg* %10754, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %10755 to i64*
  %10756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10757 = getelementptr inbounds %struct.GPR, %struct.GPR* %10756, i32 0, i32 1
  %10758 = getelementptr inbounds %struct.Reg, %struct.Reg* %10757, i32 0, i32 0
  %RAX.i221 = bitcast %union.anon* %10758 to i64*
  %10759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10760 = getelementptr inbounds %struct.GPR, %struct.GPR* %10759, i32 0, i32 15
  %10761 = getelementptr inbounds %struct.Reg, %struct.Reg* %10760, i32 0, i32 0
  %RBP.i222 = bitcast %union.anon* %10761 to i64*
  %10762 = load i64, i64* %RBP.i222
  %10763 = sub i64 %10762, 24
  %10764 = load i64, i64* %PC.i220
  %10765 = add i64 %10764, 4
  store i64 %10765, i64* %PC.i220
  %10766 = inttoptr i64 %10763 to i64*
  %10767 = load i64, i64* %10766
  store i64 %10767, i64* %RAX.i221, align 8
  store %struct.Memory* %loadMem_44b063, %struct.Memory** %MEMORY
  %loadMem_44b067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10769 = getelementptr inbounds %struct.GPR, %struct.GPR* %10768, i32 0, i32 33
  %10770 = getelementptr inbounds %struct.Reg, %struct.Reg* %10769, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %10770 to i64*
  %10771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10772 = getelementptr inbounds %struct.GPR, %struct.GPR* %10771, i32 0, i32 5
  %10773 = getelementptr inbounds %struct.Reg, %struct.Reg* %10772, i32 0, i32 0
  %ECX.i218 = bitcast %union.anon* %10773 to i32*
  %10774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10775 = getelementptr inbounds %struct.GPR, %struct.GPR* %10774, i32 0, i32 1
  %10776 = getelementptr inbounds %struct.Reg, %struct.Reg* %10775, i32 0, i32 0
  %RAX.i219 = bitcast %union.anon* %10776 to i64*
  %10777 = load i64, i64* %RAX.i219
  %10778 = load i32, i32* %ECX.i218
  %10779 = zext i32 %10778 to i64
  %10780 = load i64, i64* %PC.i217
  %10781 = add i64 %10780, 2
  store i64 %10781, i64* %PC.i217
  %10782 = inttoptr i64 %10777 to i32*
  store i32 %10778, i32* %10782
  store %struct.Memory* %loadMem_44b067, %struct.Memory** %MEMORY
  %loadMem_44b069 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10784 = getelementptr inbounds %struct.GPR, %struct.GPR* %10783, i32 0, i32 33
  %10785 = getelementptr inbounds %struct.Reg, %struct.Reg* %10784, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %10785 to i64*
  %10786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10787 = getelementptr inbounds %struct.GPR, %struct.GPR* %10786, i32 0, i32 5
  %10788 = getelementptr inbounds %struct.Reg, %struct.Reg* %10787, i32 0, i32 0
  %RCX.i215 = bitcast %union.anon* %10788 to i64*
  %10789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10790 = getelementptr inbounds %struct.GPR, %struct.GPR* %10789, i32 0, i32 15
  %10791 = getelementptr inbounds %struct.Reg, %struct.Reg* %10790, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %10791 to i64*
  %10792 = load i64, i64* %RBP.i216
  %10793 = sub i64 %10792, 12
  %10794 = load i64, i64* %PC.i214
  %10795 = add i64 %10794, 3
  store i64 %10795, i64* %PC.i214
  %10796 = inttoptr i64 %10793 to i32*
  %10797 = load i32, i32* %10796
  %10798 = zext i32 %10797 to i64
  store i64 %10798, i64* %RCX.i215, align 8
  store %struct.Memory* %loadMem_44b069, %struct.Memory** %MEMORY
  %loadMem_44b06c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10800 = getelementptr inbounds %struct.GPR, %struct.GPR* %10799, i32 0, i32 33
  %10801 = getelementptr inbounds %struct.Reg, %struct.Reg* %10800, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %10801 to i64*
  %10802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10803 = getelementptr inbounds %struct.GPR, %struct.GPR* %10802, i32 0, i32 5
  %10804 = getelementptr inbounds %struct.Reg, %struct.Reg* %10803, i32 0, i32 0
  %ECX.i212 = bitcast %union.anon* %10804 to i32*
  %10805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10806 = getelementptr inbounds %struct.GPR, %struct.GPR* %10805, i32 0, i32 15
  %10807 = getelementptr inbounds %struct.Reg, %struct.Reg* %10806, i32 0, i32 0
  %RBP.i213 = bitcast %union.anon* %10807 to i64*
  %10808 = load i64, i64* %RBP.i213
  %10809 = sub i64 %10808, 44
  %10810 = load i32, i32* %ECX.i212
  %10811 = zext i32 %10810 to i64
  %10812 = load i64, i64* %PC.i211
  %10813 = add i64 %10812, 3
  store i64 %10813, i64* %PC.i211
  %10814 = inttoptr i64 %10809 to i32*
  store i32 %10810, i32* %10814
  store %struct.Memory* %loadMem_44b06c, %struct.Memory** %MEMORY
  br label %block_.L_44b06f

block_.L_44b06f:                                  ; preds = %block_.L_44b045, %block_.L_44b040
  %loadMem_44b06f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10816 = getelementptr inbounds %struct.GPR, %struct.GPR* %10815, i32 0, i32 33
  %10817 = getelementptr inbounds %struct.Reg, %struct.Reg* %10816, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %10817 to i64*
  %10818 = load i64, i64* %PC.i210
  %10819 = add i64 %10818, 5
  %10820 = load i64, i64* %PC.i210
  %10821 = add i64 %10820, 5
  store i64 %10821, i64* %PC.i210
  %10822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10819, i64* %10822, align 8
  store %struct.Memory* %loadMem_44b06f, %struct.Memory** %MEMORY
  br label %block_.L_44b074

block_.L_44b074:                                  ; preds = %block_.L_44b06f, %block_.L_44afa3
  %loadMem_44b074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10824 = getelementptr inbounds %struct.GPR, %struct.GPR* %10823, i32 0, i32 33
  %10825 = getelementptr inbounds %struct.Reg, %struct.Reg* %10824, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %10825 to i64*
  %10826 = load i64, i64* %PC.i209
  %10827 = add i64 %10826, 5
  %10828 = load i64, i64* %PC.i209
  %10829 = add i64 %10828, 5
  store i64 %10829, i64* %PC.i209
  %10830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10827, i64* %10830, align 8
  store %struct.Memory* %loadMem_44b074, %struct.Memory** %MEMORY
  br label %block_.L_44b079

block_.L_44b079:                                  ; preds = %block_.L_44b074, %block_.L_44af40
  %loadMem_44b079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10832 = getelementptr inbounds %struct.GPR, %struct.GPR* %10831, i32 0, i32 33
  %10833 = getelementptr inbounds %struct.Reg, %struct.Reg* %10832, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %10833 to i64*
  %10834 = load i64, i64* %PC.i208
  %10835 = add i64 %10834, 5
  %10836 = load i64, i64* %PC.i208
  %10837 = add i64 %10836, 5
  store i64 %10837, i64* %PC.i208
  %10838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10835, i64* %10838, align 8
  store %struct.Memory* %loadMem_44b079, %struct.Memory** %MEMORY
  br label %block_.L_44b07e

block_.L_44b07e:                                  ; preds = %block_.L_44b079, %block_.L_44af3b
  %loadMem_44b07e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10840 = getelementptr inbounds %struct.GPR, %struct.GPR* %10839, i32 0, i32 33
  %10841 = getelementptr inbounds %struct.Reg, %struct.Reg* %10840, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %10841 to i64*
  %10842 = load i64, i64* %PC.i207
  %10843 = add i64 %10842, 5
  %10844 = load i64, i64* %PC.i207
  %10845 = add i64 %10844, 5
  store i64 %10845, i64* %PC.i207
  %10846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10843, i64* %10846, align 8
  store %struct.Memory* %loadMem_44b07e, %struct.Memory** %MEMORY
  br label %block_.L_44b083

block_.L_44b083:                                  ; preds = %block_.L_44b07e, %block_.L_44ace9
  %loadMem_44b083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10848 = getelementptr inbounds %struct.GPR, %struct.GPR* %10847, i32 0, i32 33
  %10849 = getelementptr inbounds %struct.Reg, %struct.Reg* %10848, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %10849 to i64*
  %10850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10851 = getelementptr inbounds %struct.GPR, %struct.GPR* %10850, i32 0, i32 1
  %10852 = getelementptr inbounds %struct.Reg, %struct.Reg* %10851, i32 0, i32 0
  %RAX.i205 = bitcast %union.anon* %10852 to i64*
  %10853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10854 = getelementptr inbounds %struct.GPR, %struct.GPR* %10853, i32 0, i32 15
  %10855 = getelementptr inbounds %struct.Reg, %struct.Reg* %10854, i32 0, i32 0
  %RBP.i206 = bitcast %union.anon* %10855 to i64*
  %10856 = load i64, i64* %RBP.i206
  %10857 = sub i64 %10856, 24
  %10858 = load i64, i64* %PC.i204
  %10859 = add i64 %10858, 4
  store i64 %10859, i64* %PC.i204
  %10860 = inttoptr i64 %10857 to i64*
  %10861 = load i64, i64* %10860
  store i64 %10861, i64* %RAX.i205, align 8
  store %struct.Memory* %loadMem_44b083, %struct.Memory** %MEMORY
  %loadMem_44b087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10863 = getelementptr inbounds %struct.GPR, %struct.GPR* %10862, i32 0, i32 33
  %10864 = getelementptr inbounds %struct.Reg, %struct.Reg* %10863, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %10864 to i64*
  %10865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10866 = getelementptr inbounds %struct.GPR, %struct.GPR* %10865, i32 0, i32 1
  %10867 = getelementptr inbounds %struct.Reg, %struct.Reg* %10866, i32 0, i32 0
  %RAX.i203 = bitcast %union.anon* %10867 to i64*
  %10868 = load i64, i64* %RAX.i203
  %10869 = load i64, i64* %PC.i202
  %10870 = add i64 %10869, 3
  store i64 %10870, i64* %PC.i202
  %10871 = inttoptr i64 %10868 to i32*
  %10872 = load i32, i32* %10871
  %10873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10873, align 1
  %10874 = and i32 %10872, 255
  %10875 = call i32 @llvm.ctpop.i32(i32 %10874)
  %10876 = trunc i32 %10875 to i8
  %10877 = and i8 %10876, 1
  %10878 = xor i8 %10877, 1
  %10879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10878, i8* %10879, align 1
  %10880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10880, align 1
  %10881 = icmp eq i32 %10872, 0
  %10882 = zext i1 %10881 to i8
  %10883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10882, i8* %10883, align 1
  %10884 = lshr i32 %10872, 31
  %10885 = trunc i32 %10884 to i8
  %10886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10885, i8* %10886, align 1
  %10887 = lshr i32 %10872, 31
  %10888 = xor i32 %10884, %10887
  %10889 = add i32 %10888, %10887
  %10890 = icmp eq i32 %10889, 2
  %10891 = zext i1 %10890 to i8
  %10892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10891, i8* %10892, align 1
  store %struct.Memory* %loadMem_44b087, %struct.Memory** %MEMORY
  %loadMem_44b08a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10894 = getelementptr inbounds %struct.GPR, %struct.GPR* %10893, i32 0, i32 33
  %10895 = getelementptr inbounds %struct.Reg, %struct.Reg* %10894, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %10895 to i64*
  %10896 = load i64, i64* %PC.i201
  %10897 = add i64 %10896, 27
  %10898 = load i64, i64* %PC.i201
  %10899 = add i64 %10898, 6
  %10900 = load i64, i64* %PC.i201
  %10901 = add i64 %10900, 6
  store i64 %10901, i64* %PC.i201
  %10902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10903 = load i8, i8* %10902, align 1
  %10904 = icmp eq i8 %10903, 0
  %10905 = zext i1 %10904 to i8
  store i8 %10905, i8* %BRANCH_TAKEN, align 1
  %10906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10907 = select i1 %10904, i64 %10897, i64 %10899
  store i64 %10907, i64* %10906, align 8
  store %struct.Memory* %loadMem_44b08a, %struct.Memory** %MEMORY
  %loadBr_44b08a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44b08a = icmp eq i8 %loadBr_44b08a, 1
  br i1 %cmpBr_44b08a, label %block_.L_44b0a5, label %block_44b090

block_44b090:                                     ; preds = %block_.L_44b083
  %loadMem_44b090 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10909 = getelementptr inbounds %struct.GPR, %struct.GPR* %10908, i32 0, i32 33
  %10910 = getelementptr inbounds %struct.Reg, %struct.Reg* %10909, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %10910 to i64*
  %10911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10912 = getelementptr inbounds %struct.GPR, %struct.GPR* %10911, i32 0, i32 1
  %10913 = getelementptr inbounds %struct.Reg, %struct.Reg* %10912, i32 0, i32 0
  %RAX.i200 = bitcast %union.anon* %10913 to i64*
  %10914 = load i64, i64* %PC.i199
  %10915 = add i64 %10914, 8
  store i64 %10915, i64* %PC.i199
  %10916 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10916, i64* %RAX.i200, align 8
  store %struct.Memory* %loadMem_44b090, %struct.Memory** %MEMORY
  %loadMem_44b098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10918 = getelementptr inbounds %struct.GPR, %struct.GPR* %10917, i32 0, i32 33
  %10919 = getelementptr inbounds %struct.Reg, %struct.Reg* %10918, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %10919 to i64*
  %10920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10921 = getelementptr inbounds %struct.GPR, %struct.GPR* %10920, i32 0, i32 1
  %10922 = getelementptr inbounds %struct.Reg, %struct.Reg* %10921, i32 0, i32 0
  %RAX.i198 = bitcast %union.anon* %10922 to i64*
  %10923 = load i64, i64* %RAX.i198
  %10924 = add i64 %10923, 72636
  %10925 = load i64, i64* %PC.i197
  %10926 = add i64 %10925, 7
  store i64 %10926, i64* %PC.i197
  %10927 = inttoptr i64 %10924 to i32*
  %10928 = load i32, i32* %10927
  %10929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10929, align 1
  %10930 = and i32 %10928, 255
  %10931 = call i32 @llvm.ctpop.i32(i32 %10930)
  %10932 = trunc i32 %10931 to i8
  %10933 = and i8 %10932, 1
  %10934 = xor i8 %10933, 1
  %10935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10934, i8* %10935, align 1
  %10936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10936, align 1
  %10937 = icmp eq i32 %10928, 0
  %10938 = zext i1 %10937 to i8
  %10939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10938, i8* %10939, align 1
  %10940 = lshr i32 %10928, 31
  %10941 = trunc i32 %10940 to i8
  %10942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10941, i8* %10942, align 1
  %10943 = lshr i32 %10928, 31
  %10944 = xor i32 %10940, %10943
  %10945 = add i32 %10944, %10943
  %10946 = icmp eq i32 %10945, 2
  %10947 = zext i1 %10946 to i8
  %10948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10947, i8* %10948, align 1
  store %struct.Memory* %loadMem_44b098, %struct.Memory** %MEMORY
  %loadMem_44b09f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10950 = getelementptr inbounds %struct.GPR, %struct.GPR* %10949, i32 0, i32 33
  %10951 = getelementptr inbounds %struct.Reg, %struct.Reg* %10950, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %10951 to i64*
  %10952 = load i64, i64* %PC.i196
  %10953 = add i64 %10952, 260
  %10954 = load i64, i64* %PC.i196
  %10955 = add i64 %10954, 6
  %10956 = load i64, i64* %PC.i196
  %10957 = add i64 %10956, 6
  store i64 %10957, i64* %PC.i196
  %10958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10959 = load i8, i8* %10958, align 1
  store i8 %10959, i8* %BRANCH_TAKEN, align 1
  %10960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10961 = icmp ne i8 %10959, 0
  %10962 = select i1 %10961, i64 %10953, i64 %10955
  store i64 %10962, i64* %10960, align 8
  store %struct.Memory* %loadMem_44b09f, %struct.Memory** %MEMORY
  %loadBr_44b09f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44b09f = icmp eq i8 %loadBr_44b09f, 1
  br i1 %cmpBr_44b09f, label %block_.L_44b1a3, label %block_.L_44b0a5

block_.L_44b0a5:                                  ; preds = %block_44b090, %block_.L_44b083
  %loadMem_44b0a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10964 = getelementptr inbounds %struct.GPR, %struct.GPR* %10963, i32 0, i32 33
  %10965 = getelementptr inbounds %struct.Reg, %struct.Reg* %10964, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %10965 to i64*
  %10966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10967 = getelementptr inbounds %struct.GPR, %struct.GPR* %10966, i32 0, i32 1
  %10968 = getelementptr inbounds %struct.Reg, %struct.Reg* %10967, i32 0, i32 0
  %RAX.i194 = bitcast %union.anon* %10968 to i64*
  %10969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10970 = getelementptr inbounds %struct.GPR, %struct.GPR* %10969, i32 0, i32 15
  %10971 = getelementptr inbounds %struct.Reg, %struct.Reg* %10970, i32 0, i32 0
  %RBP.i195 = bitcast %union.anon* %10971 to i64*
  %10972 = load i64, i64* %RBP.i195
  %10973 = sub i64 %10972, 8
  %10974 = load i64, i64* %PC.i193
  %10975 = add i64 %10974, 3
  store i64 %10975, i64* %PC.i193
  %10976 = inttoptr i64 %10973 to i32*
  %10977 = load i32, i32* %10976
  %10978 = zext i32 %10977 to i64
  store i64 %10978, i64* %RAX.i194, align 8
  store %struct.Memory* %loadMem_44b0a5, %struct.Memory** %MEMORY
  %loadMem_44b0a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10980 = getelementptr inbounds %struct.GPR, %struct.GPR* %10979, i32 0, i32 33
  %10981 = getelementptr inbounds %struct.Reg, %struct.Reg* %10980, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %10981 to i64*
  %10982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10983 = getelementptr inbounds %struct.GPR, %struct.GPR* %10982, i32 0, i32 1
  %10984 = getelementptr inbounds %struct.Reg, %struct.Reg* %10983, i32 0, i32 0
  %RAX.i191 = bitcast %union.anon* %10984 to i64*
  %10985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10986 = getelementptr inbounds %struct.GPR, %struct.GPR* %10985, i32 0, i32 15
  %10987 = getelementptr inbounds %struct.Reg, %struct.Reg* %10986, i32 0, i32 0
  %RBP.i192 = bitcast %union.anon* %10987 to i64*
  %10988 = load i64, i64* %RAX.i191
  %10989 = load i64, i64* %RBP.i192
  %10990 = sub i64 %10989, 36
  %10991 = load i64, i64* %PC.i190
  %10992 = add i64 %10991, 3
  store i64 %10992, i64* %PC.i190
  %10993 = trunc i64 %10988 to i32
  %10994 = inttoptr i64 %10990 to i32*
  %10995 = load i32, i32* %10994
  %10996 = add i32 %10995, %10993
  %10997 = zext i32 %10996 to i64
  store i64 %10997, i64* %RAX.i191, align 8
  %10998 = icmp ult i32 %10996, %10993
  %10999 = icmp ult i32 %10996, %10995
  %11000 = or i1 %10998, %10999
  %11001 = zext i1 %11000 to i8
  %11002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11001, i8* %11002, align 1
  %11003 = and i32 %10996, 255
  %11004 = call i32 @llvm.ctpop.i32(i32 %11003)
  %11005 = trunc i32 %11004 to i8
  %11006 = and i8 %11005, 1
  %11007 = xor i8 %11006, 1
  %11008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11007, i8* %11008, align 1
  %11009 = xor i32 %10995, %10993
  %11010 = xor i32 %11009, %10996
  %11011 = lshr i32 %11010, 4
  %11012 = trunc i32 %11011 to i8
  %11013 = and i8 %11012, 1
  %11014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11013, i8* %11014, align 1
  %11015 = icmp eq i32 %10996, 0
  %11016 = zext i1 %11015 to i8
  %11017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11016, i8* %11017, align 1
  %11018 = lshr i32 %10996, 31
  %11019 = trunc i32 %11018 to i8
  %11020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11019, i8* %11020, align 1
  %11021 = lshr i32 %10993, 31
  %11022 = lshr i32 %10995, 31
  %11023 = xor i32 %11018, %11021
  %11024 = xor i32 %11018, %11022
  %11025 = add i32 %11023, %11024
  %11026 = icmp eq i32 %11025, 2
  %11027 = zext i1 %11026 to i8
  %11028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11027, i8* %11028, align 1
  store %struct.Memory* %loadMem_44b0a8, %struct.Memory** %MEMORY
  %loadMem_44b0ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %11029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11030 = getelementptr inbounds %struct.GPR, %struct.GPR* %11029, i32 0, i32 33
  %11031 = getelementptr inbounds %struct.Reg, %struct.Reg* %11030, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %11031 to i64*
  %11032 = load i64, i64* %PC.i189
  %11033 = add i64 %11032, 1
  store i64 %11033, i64* %PC.i189
  %11034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %11035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11036 = bitcast %union.anon* %11035 to i32*
  %11037 = load i32, i32* %11036, align 8
  %11038 = sext i32 %11037 to i64
  %11039 = lshr i64 %11038, 32
  store i64 %11039, i64* %11034, align 8
  store %struct.Memory* %loadMem_44b0ab, %struct.Memory** %MEMORY
  %loadMem_44b0ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %11040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11041 = getelementptr inbounds %struct.GPR, %struct.GPR* %11040, i32 0, i32 33
  %11042 = getelementptr inbounds %struct.Reg, %struct.Reg* %11041, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %11042 to i64*
  %11043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11044 = getelementptr inbounds %struct.GPR, %struct.GPR* %11043, i32 0, i32 15
  %11045 = getelementptr inbounds %struct.Reg, %struct.Reg* %11044, i32 0, i32 0
  %RBP.i185 = bitcast %union.anon* %11045 to i64*
  %11046 = load i64, i64* %RBP.i185
  %11047 = sub i64 %11046, 36
  %11048 = load i64, i64* %PC.i184
  %11049 = add i64 %11048, 3
  store i64 %11049, i64* %PC.i184
  %11050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11051 = bitcast %union.anon* %11050 to i32*
  %11052 = load i32, i32* %11051, align 8
  %11053 = zext i32 %11052 to i64
  %11054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %11055 = bitcast %union.anon* %11054 to i32*
  %11056 = load i32, i32* %11055, align 8
  %11057 = zext i32 %11056 to i64
  %11058 = inttoptr i64 %11047 to i32*
  %11059 = load i32, i32* %11058
  %11060 = sext i32 %11059 to i64
  %11061 = shl i64 %11057, 32
  %11062 = or i64 %11061, %11053
  %11063 = sdiv i64 %11062, %11060
  %11064 = shl i64 %11063, 32
  %11065 = ashr exact i64 %11064, 32
  %11066 = icmp eq i64 %11063, %11065
  br i1 %11066, label %11071, label %11067

; <label>:11067:                                  ; preds = %block_.L_44b0a5
  %11068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11069 = load i64, i64* %11068, align 8
  %11070 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11069, %struct.Memory* %loadMem_44b0ac)
  br label %routine_idivl_MINUS0x24__rbp_.exit

; <label>:11071:                                  ; preds = %block_.L_44b0a5
  %11072 = srem i64 %11062, %11060
  %11073 = getelementptr inbounds %union.anon, %union.anon* %11050, i64 0, i32 0
  %11074 = and i64 %11063, 4294967295
  store i64 %11074, i64* %11073, align 8
  %11075 = getelementptr inbounds %union.anon, %union.anon* %11054, i64 0, i32 0
  %11076 = and i64 %11072, 4294967295
  store i64 %11076, i64* %11075, align 8
  %11077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11077, align 1
  %11078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %11078, align 1
  %11079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11079, align 1
  %11080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11080, align 1
  %11081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11081, align 1
  %11082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11082, align 1
  br label %routine_idivl_MINUS0x24__rbp_.exit

routine_idivl_MINUS0x24__rbp_.exit:               ; preds = %11067, %11071
  %11083 = phi %struct.Memory* [ %11070, %11067 ], [ %loadMem_44b0ac, %11071 ]
  store %struct.Memory* %11083, %struct.Memory** %MEMORY
  %loadMem_44b0af = load %struct.Memory*, %struct.Memory** %MEMORY
  %11084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11085 = getelementptr inbounds %struct.GPR, %struct.GPR* %11084, i32 0, i32 33
  %11086 = getelementptr inbounds %struct.Reg, %struct.Reg* %11085, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %11086 to i64*
  %11087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11088 = getelementptr inbounds %struct.GPR, %struct.GPR* %11087, i32 0, i32 5
  %11089 = getelementptr inbounds %struct.Reg, %struct.Reg* %11088, i32 0, i32 0
  %RCX.i182 = bitcast %union.anon* %11089 to i64*
  %11090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11091 = getelementptr inbounds %struct.GPR, %struct.GPR* %11090, i32 0, i32 15
  %11092 = getelementptr inbounds %struct.Reg, %struct.Reg* %11091, i32 0, i32 0
  %RBP.i183 = bitcast %union.anon* %11092 to i64*
  %11093 = load i64, i64* %RBP.i183
  %11094 = sub i64 %11093, 24
  %11095 = load i64, i64* %PC.i181
  %11096 = add i64 %11095, 4
  store i64 %11096, i64* %PC.i181
  %11097 = inttoptr i64 %11094 to i64*
  %11098 = load i64, i64* %11097
  store i64 %11098, i64* %RCX.i182, align 8
  store %struct.Memory* %loadMem_44b0af, %struct.Memory** %MEMORY
  %loadMem_44b0b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11100 = getelementptr inbounds %struct.GPR, %struct.GPR* %11099, i32 0, i32 33
  %11101 = getelementptr inbounds %struct.Reg, %struct.Reg* %11100, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %11101 to i64*
  %11102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11103 = getelementptr inbounds %struct.GPR, %struct.GPR* %11102, i32 0, i32 7
  %11104 = getelementptr inbounds %struct.Reg, %struct.Reg* %11103, i32 0, i32 0
  %EDX.i179 = bitcast %union.anon* %11104 to i32*
  %11105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11106 = getelementptr inbounds %struct.GPR, %struct.GPR* %11105, i32 0, i32 5
  %11107 = getelementptr inbounds %struct.Reg, %struct.Reg* %11106, i32 0, i32 0
  %RCX.i180 = bitcast %union.anon* %11107 to i64*
  %11108 = load i64, i64* %RCX.i180
  %11109 = add i64 %11108, 8
  %11110 = load i32, i32* %EDX.i179
  %11111 = zext i32 %11110 to i64
  %11112 = load i64, i64* %PC.i178
  %11113 = add i64 %11112, 3
  store i64 %11113, i64* %PC.i178
  %11114 = inttoptr i64 %11109 to i32*
  store i32 %11110, i32* %11114
  store %struct.Memory* %loadMem_44b0b3, %struct.Memory** %MEMORY
  %loadMem_44b0b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11116 = getelementptr inbounds %struct.GPR, %struct.GPR* %11115, i32 0, i32 33
  %11117 = getelementptr inbounds %struct.Reg, %struct.Reg* %11116, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %11117 to i64*
  %11118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11119 = getelementptr inbounds %struct.GPR, %struct.GPR* %11118, i32 0, i32 7
  %11120 = getelementptr inbounds %struct.Reg, %struct.Reg* %11119, i32 0, i32 0
  %RDX.i176 = bitcast %union.anon* %11120 to i64*
  %11121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11122 = getelementptr inbounds %struct.GPR, %struct.GPR* %11121, i32 0, i32 15
  %11123 = getelementptr inbounds %struct.Reg, %struct.Reg* %11122, i32 0, i32 0
  %RBP.i177 = bitcast %union.anon* %11123 to i64*
  %11124 = load i64, i64* %RBP.i177
  %11125 = sub i64 %11124, 44
  %11126 = load i64, i64* %PC.i175
  %11127 = add i64 %11126, 3
  store i64 %11127, i64* %PC.i175
  %11128 = inttoptr i64 %11125 to i32*
  %11129 = load i32, i32* %11128
  %11130 = zext i32 %11129 to i64
  store i64 %11130, i64* %RDX.i176, align 8
  store %struct.Memory* %loadMem_44b0b6, %struct.Memory** %MEMORY
  %loadMem_44b0b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11132 = getelementptr inbounds %struct.GPR, %struct.GPR* %11131, i32 0, i32 33
  %11133 = getelementptr inbounds %struct.Reg, %struct.Reg* %11132, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %11133 to i64*
  %11134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11135 = getelementptr inbounds %struct.GPR, %struct.GPR* %11134, i32 0, i32 7
  %11136 = getelementptr inbounds %struct.Reg, %struct.Reg* %11135, i32 0, i32 0
  %RDX.i173 = bitcast %union.anon* %11136 to i64*
  %11137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11138 = getelementptr inbounds %struct.GPR, %struct.GPR* %11137, i32 0, i32 15
  %11139 = getelementptr inbounds %struct.Reg, %struct.Reg* %11138, i32 0, i32 0
  %RBP.i174 = bitcast %union.anon* %11139 to i64*
  %11140 = load i64, i64* %RDX.i173
  %11141 = load i64, i64* %RBP.i174
  %11142 = sub i64 %11141, 40
  %11143 = load i64, i64* %PC.i172
  %11144 = add i64 %11143, 3
  store i64 %11144, i64* %PC.i172
  %11145 = trunc i64 %11140 to i32
  %11146 = inttoptr i64 %11142 to i32*
  %11147 = load i32, i32* %11146
  %11148 = add i32 %11147, %11145
  %11149 = zext i32 %11148 to i64
  store i64 %11149, i64* %RDX.i173, align 8
  %11150 = icmp ult i32 %11148, %11145
  %11151 = icmp ult i32 %11148, %11147
  %11152 = or i1 %11150, %11151
  %11153 = zext i1 %11152 to i8
  %11154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11153, i8* %11154, align 1
  %11155 = and i32 %11148, 255
  %11156 = call i32 @llvm.ctpop.i32(i32 %11155)
  %11157 = trunc i32 %11156 to i8
  %11158 = and i8 %11157, 1
  %11159 = xor i8 %11158, 1
  %11160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11159, i8* %11160, align 1
  %11161 = xor i32 %11147, %11145
  %11162 = xor i32 %11161, %11148
  %11163 = lshr i32 %11162, 4
  %11164 = trunc i32 %11163 to i8
  %11165 = and i8 %11164, 1
  %11166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11165, i8* %11166, align 1
  %11167 = icmp eq i32 %11148, 0
  %11168 = zext i1 %11167 to i8
  %11169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11168, i8* %11169, align 1
  %11170 = lshr i32 %11148, 31
  %11171 = trunc i32 %11170 to i8
  %11172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11171, i8* %11172, align 1
  %11173 = lshr i32 %11145, 31
  %11174 = lshr i32 %11147, 31
  %11175 = xor i32 %11170, %11173
  %11176 = xor i32 %11170, %11174
  %11177 = add i32 %11175, %11176
  %11178 = icmp eq i32 %11177, 2
  %11179 = zext i1 %11178 to i8
  %11180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11179, i8* %11180, align 1
  store %struct.Memory* %loadMem_44b0b9, %struct.Memory** %MEMORY
  %loadMem_44b0bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11182 = getelementptr inbounds %struct.GPR, %struct.GPR* %11181, i32 0, i32 33
  %11183 = getelementptr inbounds %struct.Reg, %struct.Reg* %11182, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %11183 to i64*
  %11184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11185 = getelementptr inbounds %struct.GPR, %struct.GPR* %11184, i32 0, i32 7
  %11186 = getelementptr inbounds %struct.Reg, %struct.Reg* %11185, i32 0, i32 0
  %EDX.i170 = bitcast %union.anon* %11186 to i32*
  %11187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11188 = getelementptr inbounds %struct.GPR, %struct.GPR* %11187, i32 0, i32 1
  %11189 = getelementptr inbounds %struct.Reg, %struct.Reg* %11188, i32 0, i32 0
  %RAX.i171 = bitcast %union.anon* %11189 to i64*
  %11190 = load i32, i32* %EDX.i170
  %11191 = zext i32 %11190 to i64
  %11192 = load i64, i64* %PC.i169
  %11193 = add i64 %11192, 2
  store i64 %11193, i64* %PC.i169
  %11194 = and i64 %11191, 4294967295
  store i64 %11194, i64* %RAX.i171, align 8
  store %struct.Memory* %loadMem_44b0bc, %struct.Memory** %MEMORY
  %loadMem_44b0be = load %struct.Memory*, %struct.Memory** %MEMORY
  %11195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11196 = getelementptr inbounds %struct.GPR, %struct.GPR* %11195, i32 0, i32 33
  %11197 = getelementptr inbounds %struct.Reg, %struct.Reg* %11196, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %11197 to i64*
  %11198 = load i64, i64* %PC.i168
  %11199 = add i64 %11198, 1
  store i64 %11199, i64* %PC.i168
  %11200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %11201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11202 = bitcast %union.anon* %11201 to i32*
  %11203 = load i32, i32* %11202, align 8
  %11204 = sext i32 %11203 to i64
  %11205 = lshr i64 %11204, 32
  store i64 %11205, i64* %11200, align 8
  store %struct.Memory* %loadMem_44b0be, %struct.Memory** %MEMORY
  %loadMem_44b0bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11207 = getelementptr inbounds %struct.GPR, %struct.GPR* %11206, i32 0, i32 33
  %11208 = getelementptr inbounds %struct.Reg, %struct.Reg* %11207, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %11208 to i64*
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11210 = getelementptr inbounds %struct.GPR, %struct.GPR* %11209, i32 0, i32 15
  %11211 = getelementptr inbounds %struct.Reg, %struct.Reg* %11210, i32 0, i32 0
  %RBP.i164 = bitcast %union.anon* %11211 to i64*
  %11212 = load i64, i64* %RBP.i164
  %11213 = sub i64 %11212, 40
  %11214 = load i64, i64* %PC.i163
  %11215 = add i64 %11214, 3
  store i64 %11215, i64* %PC.i163
  %11216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11217 = bitcast %union.anon* %11216 to i32*
  %11218 = load i32, i32* %11217, align 8
  %11219 = zext i32 %11218 to i64
  %11220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %11221 = bitcast %union.anon* %11220 to i32*
  %11222 = load i32, i32* %11221, align 8
  %11223 = zext i32 %11222 to i64
  %11224 = inttoptr i64 %11213 to i32*
  %11225 = load i32, i32* %11224
  %11226 = sext i32 %11225 to i64
  %11227 = shl i64 %11223, 32
  %11228 = or i64 %11227, %11219
  %11229 = sdiv i64 %11228, %11226
  %11230 = shl i64 %11229, 32
  %11231 = ashr exact i64 %11230, 32
  %11232 = icmp eq i64 %11229, %11231
  br i1 %11232, label %11237, label %11233

; <label>:11233:                                  ; preds = %routine_idivl_MINUS0x24__rbp_.exit
  %11234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11235 = load i64, i64* %11234, align 8
  %11236 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11235, %struct.Memory* %loadMem_44b0bf)
  br label %routine_idivl_MINUS0x28__rbp_.exit

; <label>:11237:                                  ; preds = %routine_idivl_MINUS0x24__rbp_.exit
  %11238 = srem i64 %11228, %11226
  %11239 = getelementptr inbounds %union.anon, %union.anon* %11216, i64 0, i32 0
  %11240 = and i64 %11229, 4294967295
  store i64 %11240, i64* %11239, align 8
  %11241 = getelementptr inbounds %union.anon, %union.anon* %11220, i64 0, i32 0
  %11242 = and i64 %11238, 4294967295
  store i64 %11242, i64* %11241, align 8
  %11243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11243, align 1
  %11244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %11244, align 1
  %11245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11245, align 1
  %11246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11246, align 1
  %11247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11247, align 1
  %11248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11248, align 1
  br label %routine_idivl_MINUS0x28__rbp_.exit

routine_idivl_MINUS0x28__rbp_.exit:               ; preds = %11233, %11237
  %11249 = phi %struct.Memory* [ %11236, %11233 ], [ %loadMem_44b0bf, %11237 ]
  store %struct.Memory* %11249, %struct.Memory** %MEMORY
  %loadMem_44b0c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11251 = getelementptr inbounds %struct.GPR, %struct.GPR* %11250, i32 0, i32 33
  %11252 = getelementptr inbounds %struct.Reg, %struct.Reg* %11251, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %11252 to i64*
  %11253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11254 = getelementptr inbounds %struct.GPR, %struct.GPR* %11253, i32 0, i32 5
  %11255 = getelementptr inbounds %struct.Reg, %struct.Reg* %11254, i32 0, i32 0
  %RCX.i161 = bitcast %union.anon* %11255 to i64*
  %11256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11257 = getelementptr inbounds %struct.GPR, %struct.GPR* %11256, i32 0, i32 15
  %11258 = getelementptr inbounds %struct.Reg, %struct.Reg* %11257, i32 0, i32 0
  %RBP.i162 = bitcast %union.anon* %11258 to i64*
  %11259 = load i64, i64* %RBP.i162
  %11260 = sub i64 %11259, 24
  %11261 = load i64, i64* %PC.i160
  %11262 = add i64 %11261, 4
  store i64 %11262, i64* %PC.i160
  %11263 = inttoptr i64 %11260 to i64*
  %11264 = load i64, i64* %11263
  store i64 %11264, i64* %RCX.i161, align 8
  store %struct.Memory* %loadMem_44b0c2, %struct.Memory** %MEMORY
  %loadMem_44b0c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11266 = getelementptr inbounds %struct.GPR, %struct.GPR* %11265, i32 0, i32 33
  %11267 = getelementptr inbounds %struct.Reg, %struct.Reg* %11266, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %11267 to i64*
  %11268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11269 = getelementptr inbounds %struct.GPR, %struct.GPR* %11268, i32 0, i32 7
  %11270 = getelementptr inbounds %struct.Reg, %struct.Reg* %11269, i32 0, i32 0
  %EDX.i158 = bitcast %union.anon* %11270 to i32*
  %11271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11272 = getelementptr inbounds %struct.GPR, %struct.GPR* %11271, i32 0, i32 5
  %11273 = getelementptr inbounds %struct.Reg, %struct.Reg* %11272, i32 0, i32 0
  %RCX.i159 = bitcast %union.anon* %11273 to i64*
  %11274 = load i64, i64* %RCX.i159
  %11275 = add i64 %11274, 12
  %11276 = load i32, i32* %EDX.i158
  %11277 = zext i32 %11276 to i64
  %11278 = load i64, i64* %PC.i157
  %11279 = add i64 %11278, 3
  store i64 %11279, i64* %PC.i157
  %11280 = inttoptr i64 %11275 to i32*
  store i32 %11276, i32* %11280
  store %struct.Memory* %loadMem_44b0c6, %struct.Memory** %MEMORY
  %loadMem_44b0c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11282 = getelementptr inbounds %struct.GPR, %struct.GPR* %11281, i32 0, i32 33
  %11283 = getelementptr inbounds %struct.Reg, %struct.Reg* %11282, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %11283 to i64*
  %11284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11285 = getelementptr inbounds %struct.GPR, %struct.GPR* %11284, i32 0, i32 5
  %11286 = getelementptr inbounds %struct.Reg, %struct.Reg* %11285, i32 0, i32 0
  %RCX.i155 = bitcast %union.anon* %11286 to i64*
  %11287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11288 = getelementptr inbounds %struct.GPR, %struct.GPR* %11287, i32 0, i32 15
  %11289 = getelementptr inbounds %struct.Reg, %struct.Reg* %11288, i32 0, i32 0
  %RBP.i156 = bitcast %union.anon* %11289 to i64*
  %11290 = load i64, i64* %RBP.i156
  %11291 = sub i64 %11290, 24
  %11292 = load i64, i64* %PC.i154
  %11293 = add i64 %11292, 4
  store i64 %11293, i64* %PC.i154
  %11294 = inttoptr i64 %11291 to i64*
  %11295 = load i64, i64* %11294
  store i64 %11295, i64* %RCX.i155, align 8
  store %struct.Memory* %loadMem_44b0c9, %struct.Memory** %MEMORY
  %loadMem_44b0cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11297 = getelementptr inbounds %struct.GPR, %struct.GPR* %11296, i32 0, i32 33
  %11298 = getelementptr inbounds %struct.Reg, %struct.Reg* %11297, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %11298 to i64*
  %11299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11300 = getelementptr inbounds %struct.GPR, %struct.GPR* %11299, i32 0, i32 5
  %11301 = getelementptr inbounds %struct.Reg, %struct.Reg* %11300, i32 0, i32 0
  %RCX.i152 = bitcast %union.anon* %11301 to i64*
  %11302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11303 = getelementptr inbounds %struct.GPR, %struct.GPR* %11302, i32 0, i32 11
  %11304 = getelementptr inbounds %struct.Reg, %struct.Reg* %11303, i32 0, i32 0
  %RDI.i153 = bitcast %union.anon* %11304 to i64*
  %11305 = load i64, i64* %RCX.i152
  %11306 = add i64 %11305, 4
  %11307 = load i64, i64* %PC.i151
  %11308 = add i64 %11307, 3
  store i64 %11308, i64* %PC.i151
  %11309 = inttoptr i64 %11306 to i32*
  %11310 = load i32, i32* %11309
  %11311 = zext i32 %11310 to i64
  store i64 %11311, i64* %RDI.i153, align 8
  store %struct.Memory* %loadMem_44b0cd, %struct.Memory** %MEMORY
  %loadMem_44b0d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11313 = getelementptr inbounds %struct.GPR, %struct.GPR* %11312, i32 0, i32 33
  %11314 = getelementptr inbounds %struct.Reg, %struct.Reg* %11313, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %11314 to i64*
  %11315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11316 = getelementptr inbounds %struct.GPR, %struct.GPR* %11315, i32 0, i32 5
  %11317 = getelementptr inbounds %struct.Reg, %struct.Reg* %11316, i32 0, i32 0
  %RCX.i149 = bitcast %union.anon* %11317 to i64*
  %11318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11319 = getelementptr inbounds %struct.GPR, %struct.GPR* %11318, i32 0, i32 15
  %11320 = getelementptr inbounds %struct.Reg, %struct.Reg* %11319, i32 0, i32 0
  %RBP.i150 = bitcast %union.anon* %11320 to i64*
  %11321 = load i64, i64* %RBP.i150
  %11322 = sub i64 %11321, 24
  %11323 = load i64, i64* %PC.i148
  %11324 = add i64 %11323, 4
  store i64 %11324, i64* %PC.i148
  %11325 = inttoptr i64 %11322 to i64*
  %11326 = load i64, i64* %11325
  store i64 %11326, i64* %RCX.i149, align 8
  store %struct.Memory* %loadMem_44b0d0, %struct.Memory** %MEMORY
  %loadMem_44b0d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11328 = getelementptr inbounds %struct.GPR, %struct.GPR* %11327, i32 0, i32 33
  %11329 = getelementptr inbounds %struct.Reg, %struct.Reg* %11328, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %11329 to i64*
  %11330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11331 = getelementptr inbounds %struct.GPR, %struct.GPR* %11330, i32 0, i32 5
  %11332 = getelementptr inbounds %struct.Reg, %struct.Reg* %11331, i32 0, i32 0
  %RCX.i147 = bitcast %union.anon* %11332 to i64*
  %11333 = load i64, i64* %RCX.i147
  %11334 = load i64, i64* %PC.i146
  %11335 = add i64 %11334, 4
  store i64 %11335, i64* %PC.i146
  %11336 = add i64 16, %11333
  store i64 %11336, i64* %RCX.i147, align 8
  %11337 = icmp ult i64 %11336, %11333
  %11338 = icmp ult i64 %11336, 16
  %11339 = or i1 %11337, %11338
  %11340 = zext i1 %11339 to i8
  %11341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11340, i8* %11341, align 1
  %11342 = trunc i64 %11336 to i32
  %11343 = and i32 %11342, 255
  %11344 = call i32 @llvm.ctpop.i32(i32 %11343)
  %11345 = trunc i32 %11344 to i8
  %11346 = and i8 %11345, 1
  %11347 = xor i8 %11346, 1
  %11348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11347, i8* %11348, align 1
  %11349 = xor i64 16, %11333
  %11350 = xor i64 %11349, %11336
  %11351 = lshr i64 %11350, 4
  %11352 = trunc i64 %11351 to i8
  %11353 = and i8 %11352, 1
  %11354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11353, i8* %11354, align 1
  %11355 = icmp eq i64 %11336, 0
  %11356 = zext i1 %11355 to i8
  %11357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11356, i8* %11357, align 1
  %11358 = lshr i64 %11336, 63
  %11359 = trunc i64 %11358 to i8
  %11360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11359, i8* %11360, align 1
  %11361 = lshr i64 %11333, 63
  %11362 = xor i64 %11358, %11361
  %11363 = add i64 %11362, %11358
  %11364 = icmp eq i64 %11363, 2
  %11365 = zext i1 %11364 to i8
  %11366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11365, i8* %11366, align 1
  store %struct.Memory* %loadMem_44b0d4, %struct.Memory** %MEMORY
  %loadMem_44b0d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11368 = getelementptr inbounds %struct.GPR, %struct.GPR* %11367, i32 0, i32 33
  %11369 = getelementptr inbounds %struct.Reg, %struct.Reg* %11368, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %11369 to i64*
  %11370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11371 = getelementptr inbounds %struct.GPR, %struct.GPR* %11370, i32 0, i32 9
  %11372 = getelementptr inbounds %struct.Reg, %struct.Reg* %11371, i32 0, i32 0
  %RSI.i144 = bitcast %union.anon* %11372 to i64*
  %11373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11374 = getelementptr inbounds %struct.GPR, %struct.GPR* %11373, i32 0, i32 15
  %11375 = getelementptr inbounds %struct.Reg, %struct.Reg* %11374, i32 0, i32 0
  %RBP.i145 = bitcast %union.anon* %11375 to i64*
  %11376 = load i64, i64* %RBP.i145
  %11377 = sub i64 %11376, 24
  %11378 = load i64, i64* %PC.i143
  %11379 = add i64 %11378, 4
  store i64 %11379, i64* %PC.i143
  %11380 = inttoptr i64 %11377 to i64*
  %11381 = load i64, i64* %11380
  store i64 %11381, i64* %RSI.i144, align 8
  store %struct.Memory* %loadMem_44b0d8, %struct.Memory** %MEMORY
  %loadMem_44b0dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11383 = getelementptr inbounds %struct.GPR, %struct.GPR* %11382, i32 0, i32 33
  %11384 = getelementptr inbounds %struct.Reg, %struct.Reg* %11383, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %11384 to i64*
  %11385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11386 = getelementptr inbounds %struct.GPR, %struct.GPR* %11385, i32 0, i32 9
  %11387 = getelementptr inbounds %struct.Reg, %struct.Reg* %11386, i32 0, i32 0
  %RSI.i142 = bitcast %union.anon* %11387 to i64*
  %11388 = load i64, i64* %RSI.i142
  %11389 = load i64, i64* %PC.i141
  %11390 = add i64 %11389, 4
  store i64 %11390, i64* %PC.i141
  %11391 = add i64 20, %11388
  store i64 %11391, i64* %RSI.i142, align 8
  %11392 = icmp ult i64 %11391, %11388
  %11393 = icmp ult i64 %11391, 20
  %11394 = or i1 %11392, %11393
  %11395 = zext i1 %11394 to i8
  %11396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11395, i8* %11396, align 1
  %11397 = trunc i64 %11391 to i32
  %11398 = and i32 %11397, 255
  %11399 = call i32 @llvm.ctpop.i32(i32 %11398)
  %11400 = trunc i32 %11399 to i8
  %11401 = and i8 %11400, 1
  %11402 = xor i8 %11401, 1
  %11403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11402, i8* %11403, align 1
  %11404 = xor i64 20, %11388
  %11405 = xor i64 %11404, %11391
  %11406 = lshr i64 %11405, 4
  %11407 = trunc i64 %11406 to i8
  %11408 = and i8 %11407, 1
  %11409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11408, i8* %11409, align 1
  %11410 = icmp eq i64 %11391, 0
  %11411 = zext i1 %11410 to i8
  %11412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11411, i8* %11412, align 1
  %11413 = lshr i64 %11391, 63
  %11414 = trunc i64 %11413 to i8
  %11415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11414, i8* %11415, align 1
  %11416 = lshr i64 %11388, 63
  %11417 = xor i64 %11413, %11416
  %11418 = add i64 %11417, %11413
  %11419 = icmp eq i64 %11418, 2
  %11420 = zext i1 %11419 to i8
  %11421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11420, i8* %11421, align 1
  store %struct.Memory* %loadMem_44b0dc, %struct.Memory** %MEMORY
  %loadMem_44b0e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11423 = getelementptr inbounds %struct.GPR, %struct.GPR* %11422, i32 0, i32 33
  %11424 = getelementptr inbounds %struct.Reg, %struct.Reg* %11423, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %11424 to i64*
  %11425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11426 = getelementptr inbounds %struct.GPR, %struct.GPR* %11425, i32 0, i32 9
  %11427 = getelementptr inbounds %struct.Reg, %struct.Reg* %11426, i32 0, i32 0
  %RSI.i139 = bitcast %union.anon* %11427 to i64*
  %11428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11429 = getelementptr inbounds %struct.GPR, %struct.GPR* %11428, i32 0, i32 15
  %11430 = getelementptr inbounds %struct.Reg, %struct.Reg* %11429, i32 0, i32 0
  %RBP.i140 = bitcast %union.anon* %11430 to i64*
  %11431 = load i64, i64* %RBP.i140
  %11432 = sub i64 %11431, 72
  %11433 = load i64, i64* %RSI.i139
  %11434 = load i64, i64* %PC.i138
  %11435 = add i64 %11434, 4
  store i64 %11435, i64* %PC.i138
  %11436 = inttoptr i64 %11432 to i64*
  store i64 %11433, i64* %11436
  store %struct.Memory* %loadMem_44b0e0, %struct.Memory** %MEMORY
  %loadMem_44b0e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11438 = getelementptr inbounds %struct.GPR, %struct.GPR* %11437, i32 0, i32 33
  %11439 = getelementptr inbounds %struct.Reg, %struct.Reg* %11438, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %11439 to i64*
  %11440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11441 = getelementptr inbounds %struct.GPR, %struct.GPR* %11440, i32 0, i32 5
  %11442 = getelementptr inbounds %struct.Reg, %struct.Reg* %11441, i32 0, i32 0
  %RCX.i136 = bitcast %union.anon* %11442 to i64*
  %11443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11444 = getelementptr inbounds %struct.GPR, %struct.GPR* %11443, i32 0, i32 9
  %11445 = getelementptr inbounds %struct.Reg, %struct.Reg* %11444, i32 0, i32 0
  %RSI.i137 = bitcast %union.anon* %11445 to i64*
  %11446 = load i64, i64* %RCX.i136
  %11447 = load i64, i64* %PC.i135
  %11448 = add i64 %11447, 3
  store i64 %11448, i64* %PC.i135
  store i64 %11446, i64* %RSI.i137, align 8
  store %struct.Memory* %loadMem_44b0e4, %struct.Memory** %MEMORY
  %loadMem_44b0e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11450 = getelementptr inbounds %struct.GPR, %struct.GPR* %11449, i32 0, i32 33
  %11451 = getelementptr inbounds %struct.Reg, %struct.Reg* %11450, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %11451 to i64*
  %11452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11453 = getelementptr inbounds %struct.GPR, %struct.GPR* %11452, i32 0, i32 7
  %11454 = getelementptr inbounds %struct.Reg, %struct.Reg* %11453, i32 0, i32 0
  %RDX.i133 = bitcast %union.anon* %11454 to i64*
  %11455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11456 = getelementptr inbounds %struct.GPR, %struct.GPR* %11455, i32 0, i32 15
  %11457 = getelementptr inbounds %struct.Reg, %struct.Reg* %11456, i32 0, i32 0
  %RBP.i134 = bitcast %union.anon* %11457 to i64*
  %11458 = load i64, i64* %RBP.i134
  %11459 = sub i64 %11458, 72
  %11460 = load i64, i64* %PC.i132
  %11461 = add i64 %11460, 4
  store i64 %11461, i64* %PC.i132
  %11462 = inttoptr i64 %11459 to i64*
  %11463 = load i64, i64* %11462
  store i64 %11463, i64* %RDX.i133, align 8
  store %struct.Memory* %loadMem_44b0e7, %struct.Memory** %MEMORY
  %loadMem1_44b0eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11465 = getelementptr inbounds %struct.GPR, %struct.GPR* %11464, i32 0, i32 33
  %11466 = getelementptr inbounds %struct.Reg, %struct.Reg* %11465, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %11466 to i64*
  %11467 = load i64, i64* %PC.i131
  %11468 = add i64 %11467, -3419
  %11469 = load i64, i64* %PC.i131
  %11470 = add i64 %11469, 5
  %11471 = load i64, i64* %PC.i131
  %11472 = add i64 %11471, 5
  store i64 %11472, i64* %PC.i131
  %11473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11474 = load i64, i64* %11473, align 8
  %11475 = add i64 %11474, -8
  %11476 = inttoptr i64 %11475 to i64*
  store i64 %11470, i64* %11476
  store i64 %11475, i64* %11473, align 8
  %11477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11468, i64* %11477, align 8
  store %struct.Memory* %loadMem1_44b0eb, %struct.Memory** %MEMORY
  %loadMem2_44b0eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44b0eb = load i64, i64* %3
  %call2_44b0eb = call %struct.Memory* @sub_44a390.get_mb_pos(%struct.State* %0, i64 %loadPC_44b0eb, %struct.Memory* %loadMem2_44b0eb)
  store %struct.Memory* %call2_44b0eb, %struct.Memory** %MEMORY
  %loadMem_44b0f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11479 = getelementptr inbounds %struct.GPR, %struct.GPR* %11478, i32 0, i32 33
  %11480 = getelementptr inbounds %struct.Reg, %struct.Reg* %11479, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %11480 to i64*
  %11481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11482 = getelementptr inbounds %struct.GPR, %struct.GPR* %11481, i32 0, i32 15
  %11483 = getelementptr inbounds %struct.Reg, %struct.Reg* %11482, i32 0, i32 0
  %RBP.i130 = bitcast %union.anon* %11483 to i64*
  %11484 = load i64, i64* %RBP.i130
  %11485 = sub i64 %11484, 16
  %11486 = load i64, i64* %PC.i129
  %11487 = add i64 %11486, 4
  store i64 %11487, i64* %PC.i129
  %11488 = inttoptr i64 %11485 to i32*
  %11489 = load i32, i32* %11488
  %11490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11490, align 1
  %11491 = and i32 %11489, 255
  %11492 = call i32 @llvm.ctpop.i32(i32 %11491)
  %11493 = trunc i32 %11492 to i8
  %11494 = and i8 %11493, 1
  %11495 = xor i8 %11494, 1
  %11496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11495, i8* %11496, align 1
  %11497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11497, align 1
  %11498 = icmp eq i32 %11489, 0
  %11499 = zext i1 %11498 to i8
  %11500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11499, i8* %11500, align 1
  %11501 = lshr i32 %11489, 31
  %11502 = trunc i32 %11501 to i8
  %11503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11502, i8* %11503, align 1
  %11504 = lshr i32 %11489, 31
  %11505 = xor i32 %11501, %11504
  %11506 = add i32 %11505, %11504
  %11507 = icmp eq i32 %11506, 2
  %11508 = zext i1 %11507 to i8
  %11509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11508, i8* %11509, align 1
  store %struct.Memory* %loadMem_44b0f0, %struct.Memory** %MEMORY
  %loadMem_44b0f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11511 = getelementptr inbounds %struct.GPR, %struct.GPR* %11510, i32 0, i32 33
  %11512 = getelementptr inbounds %struct.Reg, %struct.Reg* %11511, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %11512 to i64*
  %11513 = load i64, i64* %PC.i128
  %11514 = add i64 %11513, 45
  %11515 = load i64, i64* %PC.i128
  %11516 = add i64 %11515, 6
  %11517 = load i64, i64* %PC.i128
  %11518 = add i64 %11517, 6
  store i64 %11518, i64* %PC.i128
  %11519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11520 = load i8, i8* %11519, align 1
  store i8 %11520, i8* %BRANCH_TAKEN, align 1
  %11521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11522 = icmp ne i8 %11520, 0
  %11523 = select i1 %11522, i64 %11514, i64 %11516
  store i64 %11523, i64* %11521, align 8
  store %struct.Memory* %loadMem_44b0f4, %struct.Memory** %MEMORY
  %loadBr_44b0f4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44b0f4 = icmp eq i8 %loadBr_44b0f4, 1
  br i1 %cmpBr_44b0f4, label %block_.L_44b121, label %block_44b0fa

block_44b0fa:                                     ; preds = %routine_idivl_MINUS0x28__rbp_.exit
  %loadMem_44b0fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %11524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11525 = getelementptr inbounds %struct.GPR, %struct.GPR* %11524, i32 0, i32 33
  %11526 = getelementptr inbounds %struct.Reg, %struct.Reg* %11525, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %11526 to i64*
  %11527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11528 = getelementptr inbounds %struct.GPR, %struct.GPR* %11527, i32 0, i32 1
  %11529 = getelementptr inbounds %struct.Reg, %struct.Reg* %11528, i32 0, i32 0
  %RAX.i126 = bitcast %union.anon* %11529 to i64*
  %11530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11531 = getelementptr inbounds %struct.GPR, %struct.GPR* %11530, i32 0, i32 15
  %11532 = getelementptr inbounds %struct.Reg, %struct.Reg* %11531, i32 0, i32 0
  %RBP.i127 = bitcast %union.anon* %11532 to i64*
  %11533 = load i64, i64* %RBP.i127
  %11534 = sub i64 %11533, 24
  %11535 = load i64, i64* %PC.i125
  %11536 = add i64 %11535, 4
  store i64 %11536, i64* %PC.i125
  %11537 = inttoptr i64 %11534 to i64*
  %11538 = load i64, i64* %11537
  store i64 %11538, i64* %RAX.i126, align 8
  store %struct.Memory* %loadMem_44b0fa, %struct.Memory** %MEMORY
  %loadMem_44b0fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %11539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11540 = getelementptr inbounds %struct.GPR, %struct.GPR* %11539, i32 0, i32 33
  %11541 = getelementptr inbounds %struct.Reg, %struct.Reg* %11540, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %11541 to i64*
  %11542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11543 = getelementptr inbounds %struct.GPR, %struct.GPR* %11542, i32 0, i32 1
  %11544 = getelementptr inbounds %struct.Reg, %struct.Reg* %11543, i32 0, i32 0
  %RAX.i123 = bitcast %union.anon* %11544 to i64*
  %11545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11546 = getelementptr inbounds %struct.GPR, %struct.GPR* %11545, i32 0, i32 5
  %11547 = getelementptr inbounds %struct.Reg, %struct.Reg* %11546, i32 0, i32 0
  %RCX.i124 = bitcast %union.anon* %11547 to i64*
  %11548 = load i64, i64* %RAX.i123
  %11549 = add i64 %11548, 8
  %11550 = load i64, i64* %PC.i122
  %11551 = add i64 %11550, 3
  store i64 %11551, i64* %PC.i122
  %11552 = inttoptr i64 %11549 to i32*
  %11553 = load i32, i32* %11552
  %11554 = zext i32 %11553 to i64
  store i64 %11554, i64* %RCX.i124, align 8
  store %struct.Memory* %loadMem_44b0fe, %struct.Memory** %MEMORY
  %loadMem_44b101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11556 = getelementptr inbounds %struct.GPR, %struct.GPR* %11555, i32 0, i32 33
  %11557 = getelementptr inbounds %struct.Reg, %struct.Reg* %11556, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %11557 to i64*
  %11558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11559 = getelementptr inbounds %struct.GPR, %struct.GPR* %11558, i32 0, i32 1
  %11560 = getelementptr inbounds %struct.Reg, %struct.Reg* %11559, i32 0, i32 0
  %RAX.i120 = bitcast %union.anon* %11560 to i64*
  %11561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11562 = getelementptr inbounds %struct.GPR, %struct.GPR* %11561, i32 0, i32 15
  %11563 = getelementptr inbounds %struct.Reg, %struct.Reg* %11562, i32 0, i32 0
  %RBP.i121 = bitcast %union.anon* %11563 to i64*
  %11564 = load i64, i64* %RBP.i121
  %11565 = sub i64 %11564, 24
  %11566 = load i64, i64* %PC.i119
  %11567 = add i64 %11566, 4
  store i64 %11567, i64* %PC.i119
  %11568 = inttoptr i64 %11565 to i64*
  %11569 = load i64, i64* %11568
  store i64 %11569, i64* %RAX.i120, align 8
  store %struct.Memory* %loadMem_44b101, %struct.Memory** %MEMORY
  %loadMem_44b105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11571 = getelementptr inbounds %struct.GPR, %struct.GPR* %11570, i32 0, i32 33
  %11572 = getelementptr inbounds %struct.Reg, %struct.Reg* %11571, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %11572 to i64*
  %11573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11574 = getelementptr inbounds %struct.GPR, %struct.GPR* %11573, i32 0, i32 1
  %11575 = getelementptr inbounds %struct.Reg, %struct.Reg* %11574, i32 0, i32 0
  %RAX.i117 = bitcast %union.anon* %11575 to i64*
  %11576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11577 = getelementptr inbounds %struct.GPR, %struct.GPR* %11576, i32 0, i32 5
  %11578 = getelementptr inbounds %struct.Reg, %struct.Reg* %11577, i32 0, i32 0
  %RCX.i118 = bitcast %union.anon* %11578 to i64*
  %11579 = load i64, i64* %RCX.i118
  %11580 = load i64, i64* %RAX.i117
  %11581 = add i64 %11580, 16
  %11582 = load i64, i64* %PC.i116
  %11583 = add i64 %11582, 3
  store i64 %11583, i64* %PC.i116
  %11584 = trunc i64 %11579 to i32
  %11585 = inttoptr i64 %11581 to i32*
  %11586 = load i32, i32* %11585
  %11587 = add i32 %11586, %11584
  %11588 = zext i32 %11587 to i64
  store i64 %11588, i64* %RCX.i118, align 8
  %11589 = icmp ult i32 %11587, %11584
  %11590 = icmp ult i32 %11587, %11586
  %11591 = or i1 %11589, %11590
  %11592 = zext i1 %11591 to i8
  %11593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11592, i8* %11593, align 1
  %11594 = and i32 %11587, 255
  %11595 = call i32 @llvm.ctpop.i32(i32 %11594)
  %11596 = trunc i32 %11595 to i8
  %11597 = and i8 %11596, 1
  %11598 = xor i8 %11597, 1
  %11599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11598, i8* %11599, align 1
  %11600 = xor i32 %11586, %11584
  %11601 = xor i32 %11600, %11587
  %11602 = lshr i32 %11601, 4
  %11603 = trunc i32 %11602 to i8
  %11604 = and i8 %11603, 1
  %11605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11604, i8* %11605, align 1
  %11606 = icmp eq i32 %11587, 0
  %11607 = zext i1 %11606 to i8
  %11608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11607, i8* %11608, align 1
  %11609 = lshr i32 %11587, 31
  %11610 = trunc i32 %11609 to i8
  %11611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11610, i8* %11611, align 1
  %11612 = lshr i32 %11584, 31
  %11613 = lshr i32 %11586, 31
  %11614 = xor i32 %11609, %11612
  %11615 = xor i32 %11609, %11613
  %11616 = add i32 %11614, %11615
  %11617 = icmp eq i32 %11616, 2
  %11618 = zext i1 %11617 to i8
  %11619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11618, i8* %11619, align 1
  store %struct.Memory* %loadMem_44b105, %struct.Memory** %MEMORY
  %loadMem_44b108 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11621 = getelementptr inbounds %struct.GPR, %struct.GPR* %11620, i32 0, i32 33
  %11622 = getelementptr inbounds %struct.Reg, %struct.Reg* %11621, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %11622 to i64*
  %11623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11624 = getelementptr inbounds %struct.GPR, %struct.GPR* %11623, i32 0, i32 5
  %11625 = getelementptr inbounds %struct.Reg, %struct.Reg* %11624, i32 0, i32 0
  %ECX.i114 = bitcast %union.anon* %11625 to i32*
  %11626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11627 = getelementptr inbounds %struct.GPR, %struct.GPR* %11626, i32 0, i32 1
  %11628 = getelementptr inbounds %struct.Reg, %struct.Reg* %11627, i32 0, i32 0
  %RAX.i115 = bitcast %union.anon* %11628 to i64*
  %11629 = load i64, i64* %RAX.i115
  %11630 = add i64 %11629, 16
  %11631 = load i32, i32* %ECX.i114
  %11632 = zext i32 %11631 to i64
  %11633 = load i64, i64* %PC.i113
  %11634 = add i64 %11633, 3
  store i64 %11634, i64* %PC.i113
  %11635 = inttoptr i64 %11630 to i32*
  store i32 %11631, i32* %11635
  store %struct.Memory* %loadMem_44b108, %struct.Memory** %MEMORY
  %loadMem_44b10b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11637 = getelementptr inbounds %struct.GPR, %struct.GPR* %11636, i32 0, i32 33
  %11638 = getelementptr inbounds %struct.Reg, %struct.Reg* %11637, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %11638 to i64*
  %11639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11640 = getelementptr inbounds %struct.GPR, %struct.GPR* %11639, i32 0, i32 1
  %11641 = getelementptr inbounds %struct.Reg, %struct.Reg* %11640, i32 0, i32 0
  %RAX.i111 = bitcast %union.anon* %11641 to i64*
  %11642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11643 = getelementptr inbounds %struct.GPR, %struct.GPR* %11642, i32 0, i32 15
  %11644 = getelementptr inbounds %struct.Reg, %struct.Reg* %11643, i32 0, i32 0
  %RBP.i112 = bitcast %union.anon* %11644 to i64*
  %11645 = load i64, i64* %RBP.i112
  %11646 = sub i64 %11645, 24
  %11647 = load i64, i64* %PC.i110
  %11648 = add i64 %11647, 4
  store i64 %11648, i64* %PC.i110
  %11649 = inttoptr i64 %11646 to i64*
  %11650 = load i64, i64* %11649
  store i64 %11650, i64* %RAX.i111, align 8
  store %struct.Memory* %loadMem_44b10b, %struct.Memory** %MEMORY
  %loadMem_44b10f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11652 = getelementptr inbounds %struct.GPR, %struct.GPR* %11651, i32 0, i32 33
  %11653 = getelementptr inbounds %struct.Reg, %struct.Reg* %11652, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %11653 to i64*
  %11654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11655 = getelementptr inbounds %struct.GPR, %struct.GPR* %11654, i32 0, i32 1
  %11656 = getelementptr inbounds %struct.Reg, %struct.Reg* %11655, i32 0, i32 0
  %RAX.i108 = bitcast %union.anon* %11656 to i64*
  %11657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11658 = getelementptr inbounds %struct.GPR, %struct.GPR* %11657, i32 0, i32 5
  %11659 = getelementptr inbounds %struct.Reg, %struct.Reg* %11658, i32 0, i32 0
  %RCX.i109 = bitcast %union.anon* %11659 to i64*
  %11660 = load i64, i64* %RAX.i108
  %11661 = add i64 %11660, 12
  %11662 = load i64, i64* %PC.i107
  %11663 = add i64 %11662, 3
  store i64 %11663, i64* %PC.i107
  %11664 = inttoptr i64 %11661 to i32*
  %11665 = load i32, i32* %11664
  %11666 = zext i32 %11665 to i64
  store i64 %11666, i64* %RCX.i109, align 8
  store %struct.Memory* %loadMem_44b10f, %struct.Memory** %MEMORY
  %loadMem_44b112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11668 = getelementptr inbounds %struct.GPR, %struct.GPR* %11667, i32 0, i32 33
  %11669 = getelementptr inbounds %struct.Reg, %struct.Reg* %11668, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %11669 to i64*
  %11670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11671 = getelementptr inbounds %struct.GPR, %struct.GPR* %11670, i32 0, i32 1
  %11672 = getelementptr inbounds %struct.Reg, %struct.Reg* %11671, i32 0, i32 0
  %RAX.i105 = bitcast %union.anon* %11672 to i64*
  %11673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11674 = getelementptr inbounds %struct.GPR, %struct.GPR* %11673, i32 0, i32 15
  %11675 = getelementptr inbounds %struct.Reg, %struct.Reg* %11674, i32 0, i32 0
  %RBP.i106 = bitcast %union.anon* %11675 to i64*
  %11676 = load i64, i64* %RBP.i106
  %11677 = sub i64 %11676, 24
  %11678 = load i64, i64* %PC.i104
  %11679 = add i64 %11678, 4
  store i64 %11679, i64* %PC.i104
  %11680 = inttoptr i64 %11677 to i64*
  %11681 = load i64, i64* %11680
  store i64 %11681, i64* %RAX.i105, align 8
  store %struct.Memory* %loadMem_44b112, %struct.Memory** %MEMORY
  %loadMem_44b116 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11683 = getelementptr inbounds %struct.GPR, %struct.GPR* %11682, i32 0, i32 33
  %11684 = getelementptr inbounds %struct.Reg, %struct.Reg* %11683, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %11684 to i64*
  %11685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11686 = getelementptr inbounds %struct.GPR, %struct.GPR* %11685, i32 0, i32 1
  %11687 = getelementptr inbounds %struct.Reg, %struct.Reg* %11686, i32 0, i32 0
  %RAX.i102 = bitcast %union.anon* %11687 to i64*
  %11688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11689 = getelementptr inbounds %struct.GPR, %struct.GPR* %11688, i32 0, i32 5
  %11690 = getelementptr inbounds %struct.Reg, %struct.Reg* %11689, i32 0, i32 0
  %RCX.i103 = bitcast %union.anon* %11690 to i64*
  %11691 = load i64, i64* %RCX.i103
  %11692 = load i64, i64* %RAX.i102
  %11693 = add i64 %11692, 20
  %11694 = load i64, i64* %PC.i101
  %11695 = add i64 %11694, 3
  store i64 %11695, i64* %PC.i101
  %11696 = trunc i64 %11691 to i32
  %11697 = inttoptr i64 %11693 to i32*
  %11698 = load i32, i32* %11697
  %11699 = add i32 %11698, %11696
  %11700 = zext i32 %11699 to i64
  store i64 %11700, i64* %RCX.i103, align 8
  %11701 = icmp ult i32 %11699, %11696
  %11702 = icmp ult i32 %11699, %11698
  %11703 = or i1 %11701, %11702
  %11704 = zext i1 %11703 to i8
  %11705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11704, i8* %11705, align 1
  %11706 = and i32 %11699, 255
  %11707 = call i32 @llvm.ctpop.i32(i32 %11706)
  %11708 = trunc i32 %11707 to i8
  %11709 = and i8 %11708, 1
  %11710 = xor i8 %11709, 1
  %11711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11710, i8* %11711, align 1
  %11712 = xor i32 %11698, %11696
  %11713 = xor i32 %11712, %11699
  %11714 = lshr i32 %11713, 4
  %11715 = trunc i32 %11714 to i8
  %11716 = and i8 %11715, 1
  %11717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11716, i8* %11717, align 1
  %11718 = icmp eq i32 %11699, 0
  %11719 = zext i1 %11718 to i8
  %11720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11719, i8* %11720, align 1
  %11721 = lshr i32 %11699, 31
  %11722 = trunc i32 %11721 to i8
  %11723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11722, i8* %11723, align 1
  %11724 = lshr i32 %11696, 31
  %11725 = lshr i32 %11698, 31
  %11726 = xor i32 %11721, %11724
  %11727 = xor i32 %11721, %11725
  %11728 = add i32 %11726, %11727
  %11729 = icmp eq i32 %11728, 2
  %11730 = zext i1 %11729 to i8
  %11731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11730, i8* %11731, align 1
  store %struct.Memory* %loadMem_44b116, %struct.Memory** %MEMORY
  %loadMem_44b119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11733 = getelementptr inbounds %struct.GPR, %struct.GPR* %11732, i32 0, i32 33
  %11734 = getelementptr inbounds %struct.Reg, %struct.Reg* %11733, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %11734 to i64*
  %11735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11736 = getelementptr inbounds %struct.GPR, %struct.GPR* %11735, i32 0, i32 5
  %11737 = getelementptr inbounds %struct.Reg, %struct.Reg* %11736, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %11737 to i32*
  %11738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11739 = getelementptr inbounds %struct.GPR, %struct.GPR* %11738, i32 0, i32 1
  %11740 = getelementptr inbounds %struct.Reg, %struct.Reg* %11739, i32 0, i32 0
  %RAX.i100 = bitcast %union.anon* %11740 to i64*
  %11741 = load i64, i64* %RAX.i100
  %11742 = add i64 %11741, 20
  %11743 = load i32, i32* %ECX.i
  %11744 = zext i32 %11743 to i64
  %11745 = load i64, i64* %PC.i99
  %11746 = add i64 %11745, 3
  store i64 %11746, i64* %PC.i99
  %11747 = inttoptr i64 %11742 to i32*
  store i32 %11743, i32* %11747
  store %struct.Memory* %loadMem_44b119, %struct.Memory** %MEMORY
  %loadMem_44b11c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11749 = getelementptr inbounds %struct.GPR, %struct.GPR* %11748, i32 0, i32 33
  %11750 = getelementptr inbounds %struct.Reg, %struct.Reg* %11749, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %11750 to i64*
  %11751 = load i64, i64* %PC.i98
  %11752 = add i64 %11751, 130
  %11753 = load i64, i64* %PC.i98
  %11754 = add i64 %11753, 5
  store i64 %11754, i64* %PC.i98
  %11755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11752, i64* %11755, align 8
  store %struct.Memory* %loadMem_44b11c, %struct.Memory** %MEMORY
  br label %block_.L_44b19e

block_.L_44b121:                                  ; preds = %routine_idivl_MINUS0x28__rbp_.exit
  %loadMem_44b121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11757 = getelementptr inbounds %struct.GPR, %struct.GPR* %11756, i32 0, i32 33
  %11758 = getelementptr inbounds %struct.Reg, %struct.Reg* %11757, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %11758 to i64*
  %11759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11760 = getelementptr inbounds %struct.GPR, %struct.GPR* %11759, i32 0, i32 1
  %11761 = getelementptr inbounds %struct.Reg, %struct.Reg* %11760, i32 0, i32 0
  %RAX.i97 = bitcast %union.anon* %11761 to i64*
  %11762 = load i64, i64* %PC.i96
  %11763 = add i64 %11762, 5
  store i64 %11763, i64* %PC.i96
  store i64 16, i64* %RAX.i97, align 8
  store %struct.Memory* %loadMem_44b121, %struct.Memory** %MEMORY
  %loadMem_44b126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11765 = getelementptr inbounds %struct.GPR, %struct.GPR* %11764, i32 0, i32 33
  %11766 = getelementptr inbounds %struct.Reg, %struct.Reg* %11765, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %11766 to i64*
  %11767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11768 = getelementptr inbounds %struct.GPR, %struct.GPR* %11767, i32 0, i32 5
  %11769 = getelementptr inbounds %struct.Reg, %struct.Reg* %11768, i32 0, i32 0
  %RCX.i94 = bitcast %union.anon* %11769 to i64*
  %11770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11771 = getelementptr inbounds %struct.GPR, %struct.GPR* %11770, i32 0, i32 15
  %11772 = getelementptr inbounds %struct.Reg, %struct.Reg* %11771, i32 0, i32 0
  %RBP.i95 = bitcast %union.anon* %11772 to i64*
  %11773 = load i64, i64* %RBP.i95
  %11774 = sub i64 %11773, 24
  %11775 = load i64, i64* %PC.i93
  %11776 = add i64 %11775, 4
  store i64 %11776, i64* %PC.i93
  %11777 = inttoptr i64 %11774 to i64*
  %11778 = load i64, i64* %11777
  store i64 %11778, i64* %RCX.i94, align 8
  store %struct.Memory* %loadMem_44b126, %struct.Memory** %MEMORY
  %loadMem_44b12a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11780 = getelementptr inbounds %struct.GPR, %struct.GPR* %11779, i32 0, i32 33
  %11781 = getelementptr inbounds %struct.Reg, %struct.Reg* %11780, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %11781 to i64*
  %11782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11783 = getelementptr inbounds %struct.GPR, %struct.GPR* %11782, i32 0, i32 5
  %11784 = getelementptr inbounds %struct.Reg, %struct.Reg* %11783, i32 0, i32 0
  %RCX.i92 = bitcast %union.anon* %11784 to i64*
  %11785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11786 = getelementptr inbounds %struct.GPR, %struct.GPR* %11785, i32 0, i32 7
  %11787 = getelementptr inbounds %struct.Reg, %struct.Reg* %11786, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %11787 to i64*
  %11788 = load i64, i64* %RCX.i92
  %11789 = add i64 %11788, 16
  %11790 = load i64, i64* %PC.i91
  %11791 = add i64 %11790, 3
  store i64 %11791, i64* %PC.i91
  %11792 = inttoptr i64 %11789 to i32*
  %11793 = load i32, i32* %11792
  %11794 = zext i32 %11793 to i64
  store i64 %11794, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_44b12a, %struct.Memory** %MEMORY
  %loadMem_44b12d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11796 = getelementptr inbounds %struct.GPR, %struct.GPR* %11795, i32 0, i32 33
  %11797 = getelementptr inbounds %struct.Reg, %struct.Reg* %11796, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %11797 to i64*
  %11798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11799 = getelementptr inbounds %struct.GPR, %struct.GPR* %11798, i32 0, i32 5
  %11800 = getelementptr inbounds %struct.Reg, %struct.Reg* %11799, i32 0, i32 0
  %RCX.i90 = bitcast %union.anon* %11800 to i64*
  %11801 = load i64, i64* %PC.i89
  %11802 = add i64 %11801, 8
  store i64 %11802, i64* %PC.i89
  %11803 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11803, i64* %RCX.i90, align 8
  store %struct.Memory* %loadMem_44b12d, %struct.Memory** %MEMORY
  %loadMem_44b135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11805 = getelementptr inbounds %struct.GPR, %struct.GPR* %11804, i32 0, i32 33
  %11806 = getelementptr inbounds %struct.Reg, %struct.Reg* %11805, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %11806 to i64*
  %11807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11808 = getelementptr inbounds %struct.GPR, %struct.GPR* %11807, i32 0, i32 1
  %11809 = getelementptr inbounds %struct.Reg, %struct.Reg* %11808, i32 0, i32 0
  %EAX.i87 = bitcast %union.anon* %11809 to i32*
  %11810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11811 = getelementptr inbounds %struct.GPR, %struct.GPR* %11810, i32 0, i32 15
  %11812 = getelementptr inbounds %struct.Reg, %struct.Reg* %11811, i32 0, i32 0
  %RBP.i88 = bitcast %union.anon* %11812 to i64*
  %11813 = load i64, i64* %RBP.i88
  %11814 = sub i64 %11813, 76
  %11815 = load i32, i32* %EAX.i87
  %11816 = zext i32 %11815 to i64
  %11817 = load i64, i64* %PC.i86
  %11818 = add i64 %11817, 3
  store i64 %11818, i64* %PC.i86
  %11819 = inttoptr i64 %11814 to i32*
  store i32 %11815, i32* %11819
  store %struct.Memory* %loadMem_44b135, %struct.Memory** %MEMORY
  %loadMem_44b138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11821 = getelementptr inbounds %struct.GPR, %struct.GPR* %11820, i32 0, i32 33
  %11822 = getelementptr inbounds %struct.Reg, %struct.Reg* %11821, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %11822 to i64*
  %11823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11824 = getelementptr inbounds %struct.GPR, %struct.GPR* %11823, i32 0, i32 7
  %11825 = getelementptr inbounds %struct.Reg, %struct.Reg* %11824, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %11825 to i32*
  %11826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11827 = getelementptr inbounds %struct.GPR, %struct.GPR* %11826, i32 0, i32 15
  %11828 = getelementptr inbounds %struct.Reg, %struct.Reg* %11827, i32 0, i32 0
  %RBP.i85 = bitcast %union.anon* %11828 to i64*
  %11829 = load i64, i64* %RBP.i85
  %11830 = sub i64 %11829, 80
  %11831 = load i32, i32* %EDX.i
  %11832 = zext i32 %11831 to i64
  %11833 = load i64, i64* %PC.i84
  %11834 = add i64 %11833, 3
  store i64 %11834, i64* %PC.i84
  %11835 = inttoptr i64 %11830 to i32*
  store i32 %11831, i32* %11835
  store %struct.Memory* %loadMem_44b138, %struct.Memory** %MEMORY
  %loadMem_44b13b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11837 = getelementptr inbounds %struct.GPR, %struct.GPR* %11836, i32 0, i32 33
  %11838 = getelementptr inbounds %struct.Reg, %struct.Reg* %11837, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %11838 to i64*
  %11839 = load i64, i64* %PC.i83
  %11840 = add i64 %11839, 1
  store i64 %11840, i64* %PC.i83
  %11841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %11842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11843 = bitcast %union.anon* %11842 to i32*
  %11844 = load i32, i32* %11843, align 8
  %11845 = sext i32 %11844 to i64
  %11846 = lshr i64 %11845, 32
  store i64 %11846, i64* %11841, align 8
  store %struct.Memory* %loadMem_44b13b, %struct.Memory** %MEMORY
  %loadMem_44b13c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11848 = getelementptr inbounds %struct.GPR, %struct.GPR* %11847, i32 0, i32 33
  %11849 = getelementptr inbounds %struct.Reg, %struct.Reg* %11848, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %11849 to i64*
  %11850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11851 = getelementptr inbounds %struct.GPR, %struct.GPR* %11850, i32 0, i32 5
  %11852 = getelementptr inbounds %struct.Reg, %struct.Reg* %11851, i32 0, i32 0
  %RCX.i79 = bitcast %union.anon* %11852 to i64*
  %11853 = load i64, i64* %RCX.i79
  %11854 = add i64 %11853, 72708
  %11855 = load i64, i64* %PC.i78
  %11856 = add i64 %11855, 6
  store i64 %11856, i64* %PC.i78
  %11857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11858 = bitcast %union.anon* %11857 to i32*
  %11859 = load i32, i32* %11858, align 8
  %11860 = zext i32 %11859 to i64
  %11861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %11862 = bitcast %union.anon* %11861 to i32*
  %11863 = load i32, i32* %11862, align 8
  %11864 = zext i32 %11863 to i64
  %11865 = inttoptr i64 %11854 to i32*
  %11866 = load i32, i32* %11865
  %11867 = sext i32 %11866 to i64
  %11868 = shl i64 %11864, 32
  %11869 = or i64 %11868, %11860
  %11870 = sdiv i64 %11869, %11867
  %11871 = shl i64 %11870, 32
  %11872 = ashr exact i64 %11871, 32
  %11873 = icmp eq i64 %11870, %11872
  br i1 %11873, label %11878, label %11874

; <label>:11874:                                  ; preds = %block_.L_44b121
  %11875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11876 = load i64, i64* %11875, align 8
  %11877 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11876, %struct.Memory* %loadMem_44b13c)
  br label %routine_idivl_0x11c04__rcx_.exit

; <label>:11878:                                  ; preds = %block_.L_44b121
  %11879 = srem i64 %11869, %11867
  %11880 = getelementptr inbounds %union.anon, %union.anon* %11857, i64 0, i32 0
  %11881 = and i64 %11870, 4294967295
  store i64 %11881, i64* %11880, align 8
  %11882 = getelementptr inbounds %union.anon, %union.anon* %11861, i64 0, i32 0
  %11883 = and i64 %11879, 4294967295
  store i64 %11883, i64* %11882, align 8
  %11884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11884, align 1
  %11885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %11885, align 1
  %11886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11886, align 1
  %11887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11887, align 1
  %11888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11888, align 1
  %11889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11889, align 1
  br label %routine_idivl_0x11c04__rcx_.exit

routine_idivl_0x11c04__rcx_.exit:                 ; preds = %11874, %11878
  %11890 = phi %struct.Memory* [ %11877, %11874 ], [ %loadMem_44b13c, %11878 ]
  store %struct.Memory* %11890, %struct.Memory** %MEMORY
  %loadMem_44b142 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11892 = getelementptr inbounds %struct.GPR, %struct.GPR* %11891, i32 0, i32 33
  %11893 = getelementptr inbounds %struct.Reg, %struct.Reg* %11892, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %11893 to i64*
  %11894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11895 = getelementptr inbounds %struct.GPR, %struct.GPR* %11894, i32 0, i32 9
  %11896 = getelementptr inbounds %struct.Reg, %struct.Reg* %11895, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %11896 to i64*
  %11897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11898 = getelementptr inbounds %struct.GPR, %struct.GPR* %11897, i32 0, i32 15
  %11899 = getelementptr inbounds %struct.Reg, %struct.Reg* %11898, i32 0, i32 0
  %RBP.i77 = bitcast %union.anon* %11899 to i64*
  %11900 = load i64, i64* %RBP.i77
  %11901 = sub i64 %11900, 80
  %11902 = load i64, i64* %PC.i76
  %11903 = add i64 %11902, 3
  store i64 %11903, i64* %PC.i76
  %11904 = inttoptr i64 %11901 to i32*
  %11905 = load i32, i32* %11904
  %11906 = zext i32 %11905 to i64
  store i64 %11906, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_44b142, %struct.Memory** %MEMORY
  %loadMem_44b145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11908 = getelementptr inbounds %struct.GPR, %struct.GPR* %11907, i32 0, i32 33
  %11909 = getelementptr inbounds %struct.Reg, %struct.Reg* %11908, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %11909 to i64*
  %11910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11911 = getelementptr inbounds %struct.GPR, %struct.GPR* %11910, i32 0, i32 1
  %11912 = getelementptr inbounds %struct.Reg, %struct.Reg* %11911, i32 0, i32 0
  %EAX.i74 = bitcast %union.anon* %11912 to i32*
  %11913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11914 = getelementptr inbounds %struct.GPR, %struct.GPR* %11913, i32 0, i32 15
  %11915 = getelementptr inbounds %struct.Reg, %struct.Reg* %11914, i32 0, i32 0
  %RBP.i75 = bitcast %union.anon* %11915 to i64*
  %11916 = load i64, i64* %RBP.i75
  %11917 = sub i64 %11916, 84
  %11918 = load i32, i32* %EAX.i74
  %11919 = zext i32 %11918 to i64
  %11920 = load i64, i64* %PC.i73
  %11921 = add i64 %11920, 3
  store i64 %11921, i64* %PC.i73
  %11922 = inttoptr i64 %11917 to i32*
  store i32 %11918, i32* %11922
  store %struct.Memory* %loadMem_44b145, %struct.Memory** %MEMORY
  %loadMem_44b148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11924 = getelementptr inbounds %struct.GPR, %struct.GPR* %11923, i32 0, i32 33
  %11925 = getelementptr inbounds %struct.Reg, %struct.Reg* %11924, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %11925 to i64*
  %11926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11927 = getelementptr inbounds %struct.GPR, %struct.GPR* %11926, i32 0, i32 9
  %11928 = getelementptr inbounds %struct.Reg, %struct.Reg* %11927, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %11928 to i32*
  %11929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11930 = getelementptr inbounds %struct.GPR, %struct.GPR* %11929, i32 0, i32 1
  %11931 = getelementptr inbounds %struct.Reg, %struct.Reg* %11930, i32 0, i32 0
  %RAX.i72 = bitcast %union.anon* %11931 to i64*
  %11932 = load i32, i32* %ESI.i
  %11933 = zext i32 %11932 to i64
  %11934 = load i64, i64* %PC.i71
  %11935 = add i64 %11934, 2
  store i64 %11935, i64* %PC.i71
  %11936 = and i64 %11933, 4294967295
  store i64 %11936, i64* %RAX.i72, align 8
  store %struct.Memory* %loadMem_44b148, %struct.Memory** %MEMORY
  %loadMem_44b14a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11938 = getelementptr inbounds %struct.GPR, %struct.GPR* %11937, i32 0, i32 33
  %11939 = getelementptr inbounds %struct.Reg, %struct.Reg* %11938, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %11939 to i64*
  %11940 = load i64, i64* %PC.i70
  %11941 = add i64 %11940, 1
  store i64 %11941, i64* %PC.i70
  %11942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %11943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11944 = bitcast %union.anon* %11943 to i32*
  %11945 = load i32, i32* %11944, align 8
  %11946 = sext i32 %11945 to i64
  %11947 = lshr i64 %11946, 32
  store i64 %11947, i64* %11942, align 8
  store %struct.Memory* %loadMem_44b14a, %struct.Memory** %MEMORY
  %loadMem_44b14b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11949 = getelementptr inbounds %struct.GPR, %struct.GPR* %11948, i32 0, i32 33
  %11950 = getelementptr inbounds %struct.Reg, %struct.Reg* %11949, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %11950 to i64*
  %11951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11952 = getelementptr inbounds %struct.GPR, %struct.GPR* %11951, i32 0, i32 11
  %11953 = getelementptr inbounds %struct.Reg, %struct.Reg* %11952, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %11953 to i64*
  %11954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11955 = getelementptr inbounds %struct.GPR, %struct.GPR* %11954, i32 0, i32 15
  %11956 = getelementptr inbounds %struct.Reg, %struct.Reg* %11955, i32 0, i32 0
  %RBP.i69 = bitcast %union.anon* %11956 to i64*
  %11957 = load i64, i64* %RBP.i69
  %11958 = sub i64 %11957, 84
  %11959 = load i64, i64* %PC.i68
  %11960 = add i64 %11959, 3
  store i64 %11960, i64* %PC.i68
  %11961 = inttoptr i64 %11958 to i32*
  %11962 = load i32, i32* %11961
  %11963 = zext i32 %11962 to i64
  store i64 %11963, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_44b14b, %struct.Memory** %MEMORY
  %loadMem_44b14e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11965 = getelementptr inbounds %struct.GPR, %struct.GPR* %11964, i32 0, i32 33
  %11966 = getelementptr inbounds %struct.Reg, %struct.Reg* %11965, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %11966 to i64*
  %11967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11968 = getelementptr inbounds %struct.GPR, %struct.GPR* %11967, i32 0, i32 11
  %11969 = getelementptr inbounds %struct.Reg, %struct.Reg* %11968, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %11969 to i32*
  %11970 = load i32, i32* %EDI.i
  %11971 = zext i32 %11970 to i64
  %11972 = load i64, i64* %PC.i64
  %11973 = add i64 %11972, 2
  store i64 %11973, i64* %PC.i64
  %11974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11975 = bitcast %union.anon* %11974 to i32*
  %11976 = load i32, i32* %11975, align 8
  %11977 = zext i32 %11976 to i64
  %11978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %11979 = bitcast %union.anon* %11978 to i32*
  %11980 = load i32, i32* %11979, align 8
  %11981 = zext i32 %11980 to i64
  %11982 = shl i64 %11971, 32
  %11983 = ashr exact i64 %11982, 32
  %11984 = shl i64 %11981, 32
  %11985 = or i64 %11984, %11977
  %11986 = sdiv i64 %11985, %11983
  %11987 = shl i64 %11986, 32
  %11988 = ashr exact i64 %11987, 32
  %11989 = icmp eq i64 %11986, %11988
  br i1 %11989, label %11994, label %11990

; <label>:11990:                                  ; preds = %routine_idivl_0x11c04__rcx_.exit
  %11991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11992 = load i64, i64* %11991, align 8
  %11993 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11992, %struct.Memory* %loadMem_44b14e)
  br label %routine_idivl__edi.exit

; <label>:11994:                                  ; preds = %routine_idivl_0x11c04__rcx_.exit
  %11995 = srem i64 %11985, %11983
  %11996 = getelementptr inbounds %union.anon, %union.anon* %11974, i64 0, i32 0
  %11997 = and i64 %11986, 4294967295
  store i64 %11997, i64* %11996, align 8
  %11998 = getelementptr inbounds %union.anon, %union.anon* %11978, i64 0, i32 0
  %11999 = and i64 %11995, 4294967295
  store i64 %11999, i64* %11998, align 8
  %12000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12000, align 1
  %12001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %12001, align 1
  %12002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12002, align 1
  %12003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12003, align 1
  %12004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12004, align 1
  %12005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12005, align 1
  br label %routine_idivl__edi.exit

routine_idivl__edi.exit:                          ; preds = %11990, %11994
  %12006 = phi %struct.Memory* [ %11993, %11990 ], [ %loadMem_44b14e, %11994 ]
  store %struct.Memory* %12006, %struct.Memory** %MEMORY
  %loadMem_44b150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12008 = getelementptr inbounds %struct.GPR, %struct.GPR* %12007, i32 0, i32 33
  %12009 = getelementptr inbounds %struct.Reg, %struct.Reg* %12008, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %12009 to i64*
  %12010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12011 = getelementptr inbounds %struct.GPR, %struct.GPR* %12010, i32 0, i32 5
  %12012 = getelementptr inbounds %struct.Reg, %struct.Reg* %12011, i32 0, i32 0
  %RCX.i62 = bitcast %union.anon* %12012 to i64*
  %12013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12014 = getelementptr inbounds %struct.GPR, %struct.GPR* %12013, i32 0, i32 15
  %12015 = getelementptr inbounds %struct.Reg, %struct.Reg* %12014, i32 0, i32 0
  %RBP.i63 = bitcast %union.anon* %12015 to i64*
  %12016 = load i64, i64* %RBP.i63
  %12017 = sub i64 %12016, 24
  %12018 = load i64, i64* %PC.i61
  %12019 = add i64 %12018, 4
  store i64 %12019, i64* %PC.i61
  %12020 = inttoptr i64 %12017 to i64*
  %12021 = load i64, i64* %12020
  store i64 %12021, i64* %RCX.i62, align 8
  store %struct.Memory* %loadMem_44b150, %struct.Memory** %MEMORY
  %loadMem_44b154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12023 = getelementptr inbounds %struct.GPR, %struct.GPR* %12022, i32 0, i32 33
  %12024 = getelementptr inbounds %struct.Reg, %struct.Reg* %12023, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %12024 to i64*
  %12025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12026 = getelementptr inbounds %struct.GPR, %struct.GPR* %12025, i32 0, i32 1
  %12027 = getelementptr inbounds %struct.Reg, %struct.Reg* %12026, i32 0, i32 0
  %RAX.i59 = bitcast %union.anon* %12027 to i64*
  %12028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12029 = getelementptr inbounds %struct.GPR, %struct.GPR* %12028, i32 0, i32 5
  %12030 = getelementptr inbounds %struct.Reg, %struct.Reg* %12029, i32 0, i32 0
  %RCX.i60 = bitcast %union.anon* %12030 to i64*
  %12031 = load i64, i64* %RAX.i59
  %12032 = load i64, i64* %RCX.i60
  %12033 = add i64 %12032, 8
  %12034 = load i64, i64* %PC.i58
  %12035 = add i64 %12034, 3
  store i64 %12035, i64* %PC.i58
  %12036 = trunc i64 %12031 to i32
  %12037 = inttoptr i64 %12033 to i32*
  %12038 = load i32, i32* %12037
  %12039 = add i32 %12038, %12036
  %12040 = zext i32 %12039 to i64
  store i64 %12040, i64* %RAX.i59, align 8
  %12041 = icmp ult i32 %12039, %12036
  %12042 = icmp ult i32 %12039, %12038
  %12043 = or i1 %12041, %12042
  %12044 = zext i1 %12043 to i8
  %12045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12044, i8* %12045, align 1
  %12046 = and i32 %12039, 255
  %12047 = call i32 @llvm.ctpop.i32(i32 %12046)
  %12048 = trunc i32 %12047 to i8
  %12049 = and i8 %12048, 1
  %12050 = xor i8 %12049, 1
  %12051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12050, i8* %12051, align 1
  %12052 = xor i32 %12038, %12036
  %12053 = xor i32 %12052, %12039
  %12054 = lshr i32 %12053, 4
  %12055 = trunc i32 %12054 to i8
  %12056 = and i8 %12055, 1
  %12057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12056, i8* %12057, align 1
  %12058 = icmp eq i32 %12039, 0
  %12059 = zext i1 %12058 to i8
  %12060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12059, i8* %12060, align 1
  %12061 = lshr i32 %12039, 31
  %12062 = trunc i32 %12061 to i8
  %12063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12062, i8* %12063, align 1
  %12064 = lshr i32 %12036, 31
  %12065 = lshr i32 %12038, 31
  %12066 = xor i32 %12061, %12064
  %12067 = xor i32 %12061, %12065
  %12068 = add i32 %12066, %12067
  %12069 = icmp eq i32 %12068, 2
  %12070 = zext i1 %12069 to i8
  %12071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12070, i8* %12071, align 1
  store %struct.Memory* %loadMem_44b154, %struct.Memory** %MEMORY
  %loadMem_44b157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12073 = getelementptr inbounds %struct.GPR, %struct.GPR* %12072, i32 0, i32 33
  %12074 = getelementptr inbounds %struct.Reg, %struct.Reg* %12073, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %12074 to i64*
  %12075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12076 = getelementptr inbounds %struct.GPR, %struct.GPR* %12075, i32 0, i32 5
  %12077 = getelementptr inbounds %struct.Reg, %struct.Reg* %12076, i32 0, i32 0
  %RCX.i56 = bitcast %union.anon* %12077 to i64*
  %12078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12079 = getelementptr inbounds %struct.GPR, %struct.GPR* %12078, i32 0, i32 15
  %12080 = getelementptr inbounds %struct.Reg, %struct.Reg* %12079, i32 0, i32 0
  %RBP.i57 = bitcast %union.anon* %12080 to i64*
  %12081 = load i64, i64* %RBP.i57
  %12082 = sub i64 %12081, 24
  %12083 = load i64, i64* %PC.i55
  %12084 = add i64 %12083, 4
  store i64 %12084, i64* %PC.i55
  %12085 = inttoptr i64 %12082 to i64*
  %12086 = load i64, i64* %12085
  store i64 %12086, i64* %RCX.i56, align 8
  store %struct.Memory* %loadMem_44b157, %struct.Memory** %MEMORY
  %loadMem_44b15b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12088 = getelementptr inbounds %struct.GPR, %struct.GPR* %12087, i32 0, i32 33
  %12089 = getelementptr inbounds %struct.Reg, %struct.Reg* %12088, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %12089 to i64*
  %12090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12091 = getelementptr inbounds %struct.GPR, %struct.GPR* %12090, i32 0, i32 1
  %12092 = getelementptr inbounds %struct.Reg, %struct.Reg* %12091, i32 0, i32 0
  %EAX.i53 = bitcast %union.anon* %12092 to i32*
  %12093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12094 = getelementptr inbounds %struct.GPR, %struct.GPR* %12093, i32 0, i32 5
  %12095 = getelementptr inbounds %struct.Reg, %struct.Reg* %12094, i32 0, i32 0
  %RCX.i54 = bitcast %union.anon* %12095 to i64*
  %12096 = load i64, i64* %RCX.i54
  %12097 = add i64 %12096, 16
  %12098 = load i32, i32* %EAX.i53
  %12099 = zext i32 %12098 to i64
  %12100 = load i64, i64* %PC.i52
  %12101 = add i64 %12100, 3
  store i64 %12101, i64* %PC.i52
  %12102 = inttoptr i64 %12097 to i32*
  store i32 %12098, i32* %12102
  store %struct.Memory* %loadMem_44b15b, %struct.Memory** %MEMORY
  %loadMem_44b15e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12104 = getelementptr inbounds %struct.GPR, %struct.GPR* %12103, i32 0, i32 33
  %12105 = getelementptr inbounds %struct.Reg, %struct.Reg* %12104, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %12105 to i64*
  %12106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12107 = getelementptr inbounds %struct.GPR, %struct.GPR* %12106, i32 0, i32 5
  %12108 = getelementptr inbounds %struct.Reg, %struct.Reg* %12107, i32 0, i32 0
  %RCX.i50 = bitcast %union.anon* %12108 to i64*
  %12109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12110 = getelementptr inbounds %struct.GPR, %struct.GPR* %12109, i32 0, i32 15
  %12111 = getelementptr inbounds %struct.Reg, %struct.Reg* %12110, i32 0, i32 0
  %RBP.i51 = bitcast %union.anon* %12111 to i64*
  %12112 = load i64, i64* %RBP.i51
  %12113 = sub i64 %12112, 24
  %12114 = load i64, i64* %PC.i49
  %12115 = add i64 %12114, 4
  store i64 %12115, i64* %PC.i49
  %12116 = inttoptr i64 %12113 to i64*
  %12117 = load i64, i64* %12116
  store i64 %12117, i64* %RCX.i50, align 8
  store %struct.Memory* %loadMem_44b15e, %struct.Memory** %MEMORY
  %loadMem_44b162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12119 = getelementptr inbounds %struct.GPR, %struct.GPR* %12118, i32 0, i32 33
  %12120 = getelementptr inbounds %struct.Reg, %struct.Reg* %12119, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %12120 to i64*
  %12121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12122 = getelementptr inbounds %struct.GPR, %struct.GPR* %12121, i32 0, i32 1
  %12123 = getelementptr inbounds %struct.Reg, %struct.Reg* %12122, i32 0, i32 0
  %RAX.i47 = bitcast %union.anon* %12123 to i64*
  %12124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12125 = getelementptr inbounds %struct.GPR, %struct.GPR* %12124, i32 0, i32 5
  %12126 = getelementptr inbounds %struct.Reg, %struct.Reg* %12125, i32 0, i32 0
  %RCX.i48 = bitcast %union.anon* %12126 to i64*
  %12127 = load i64, i64* %RCX.i48
  %12128 = add i64 %12127, 20
  %12129 = load i64, i64* %PC.i46
  %12130 = add i64 %12129, 3
  store i64 %12130, i64* %PC.i46
  %12131 = inttoptr i64 %12128 to i32*
  %12132 = load i32, i32* %12131
  %12133 = zext i32 %12132 to i64
  store i64 %12133, i64* %RAX.i47, align 8
  store %struct.Memory* %loadMem_44b162, %struct.Memory** %MEMORY
  %loadMem_44b165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12135 = getelementptr inbounds %struct.GPR, %struct.GPR* %12134, i32 0, i32 33
  %12136 = getelementptr inbounds %struct.Reg, %struct.Reg* %12135, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %12136 to i64*
  %12137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12138 = getelementptr inbounds %struct.GPR, %struct.GPR* %12137, i32 0, i32 5
  %12139 = getelementptr inbounds %struct.Reg, %struct.Reg* %12138, i32 0, i32 0
  %RCX.i45 = bitcast %union.anon* %12139 to i64*
  %12140 = load i64, i64* %PC.i44
  %12141 = add i64 %12140, 8
  store i64 %12141, i64* %PC.i44
  %12142 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12142, i64* %RCX.i45, align 8
  store %struct.Memory* %loadMem_44b165, %struct.Memory** %MEMORY
  %loadMem_44b16d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12144 = getelementptr inbounds %struct.GPR, %struct.GPR* %12143, i32 0, i32 33
  %12145 = getelementptr inbounds %struct.Reg, %struct.Reg* %12144, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %12145 to i64*
  %12146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12147 = getelementptr inbounds %struct.GPR, %struct.GPR* %12146, i32 0, i32 17
  %12148 = getelementptr inbounds %struct.Reg, %struct.Reg* %12147, i32 0, i32 0
  %R8D.i42 = bitcast %union.anon* %12148 to i32*
  %12149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12150 = getelementptr inbounds %struct.GPR, %struct.GPR* %12149, i32 0, i32 15
  %12151 = getelementptr inbounds %struct.Reg, %struct.Reg* %12150, i32 0, i32 0
  %RBP.i43 = bitcast %union.anon* %12151 to i64*
  %12152 = bitcast i32* %R8D.i42 to i64*
  %12153 = load i64, i64* %RBP.i43
  %12154 = sub i64 %12153, 76
  %12155 = load i64, i64* %PC.i41
  %12156 = add i64 %12155, 4
  store i64 %12156, i64* %PC.i41
  %12157 = inttoptr i64 %12154 to i32*
  %12158 = load i32, i32* %12157
  %12159 = zext i32 %12158 to i64
  store i64 %12159, i64* %12152, align 8
  store %struct.Memory* %loadMem_44b16d, %struct.Memory** %MEMORY
  %loadMem_44b171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12161 = getelementptr inbounds %struct.GPR, %struct.GPR* %12160, i32 0, i32 33
  %12162 = getelementptr inbounds %struct.Reg, %struct.Reg* %12161, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %12162 to i64*
  %12163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12164 = getelementptr inbounds %struct.GPR, %struct.GPR* %12163, i32 0, i32 1
  %12165 = getelementptr inbounds %struct.Reg, %struct.Reg* %12164, i32 0, i32 0
  %EAX.i39 = bitcast %union.anon* %12165 to i32*
  %12166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12167 = getelementptr inbounds %struct.GPR, %struct.GPR* %12166, i32 0, i32 15
  %12168 = getelementptr inbounds %struct.Reg, %struct.Reg* %12167, i32 0, i32 0
  %RBP.i40 = bitcast %union.anon* %12168 to i64*
  %12169 = load i64, i64* %RBP.i40
  %12170 = sub i64 %12169, 88
  %12171 = load i32, i32* %EAX.i39
  %12172 = zext i32 %12171 to i64
  %12173 = load i64, i64* %PC.i38
  %12174 = add i64 %12173, 3
  store i64 %12174, i64* %PC.i38
  %12175 = inttoptr i64 %12170 to i32*
  store i32 %12171, i32* %12175
  store %struct.Memory* %loadMem_44b171, %struct.Memory** %MEMORY
  %loadMem_44b174 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12177 = getelementptr inbounds %struct.GPR, %struct.GPR* %12176, i32 0, i32 33
  %12178 = getelementptr inbounds %struct.Reg, %struct.Reg* %12177, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %12178 to i64*
  %12179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12180 = getelementptr inbounds %struct.GPR, %struct.GPR* %12179, i32 0, i32 17
  %12181 = getelementptr inbounds %struct.Reg, %struct.Reg* %12180, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %12181 to i32*
  %12182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12183 = getelementptr inbounds %struct.GPR, %struct.GPR* %12182, i32 0, i32 1
  %12184 = getelementptr inbounds %struct.Reg, %struct.Reg* %12183, i32 0, i32 0
  %RAX.i37 = bitcast %union.anon* %12184 to i64*
  %12185 = load i32, i32* %R8D.i
  %12186 = zext i32 %12185 to i64
  %12187 = load i64, i64* %PC.i36
  %12188 = add i64 %12187, 3
  store i64 %12188, i64* %PC.i36
  %12189 = and i64 %12186, 4294967295
  store i64 %12189, i64* %RAX.i37, align 8
  store %struct.Memory* %loadMem_44b174, %struct.Memory** %MEMORY
  %loadMem_44b177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12191 = getelementptr inbounds %struct.GPR, %struct.GPR* %12190, i32 0, i32 33
  %12192 = getelementptr inbounds %struct.Reg, %struct.Reg* %12191, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %12192 to i64*
  %12193 = load i64, i64* %PC.i35
  %12194 = add i64 %12193, 1
  store i64 %12194, i64* %PC.i35
  %12195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %12196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12197 = bitcast %union.anon* %12196 to i32*
  %12198 = load i32, i32* %12197, align 8
  %12199 = sext i32 %12198 to i64
  %12200 = lshr i64 %12199, 32
  store i64 %12200, i64* %12195, align 8
  store %struct.Memory* %loadMem_44b177, %struct.Memory** %MEMORY
  %loadMem_44b178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12202 = getelementptr inbounds %struct.GPR, %struct.GPR* %12201, i32 0, i32 33
  %12203 = getelementptr inbounds %struct.Reg, %struct.Reg* %12202, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %12203 to i64*
  %12204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12205 = getelementptr inbounds %struct.GPR, %struct.GPR* %12204, i32 0, i32 5
  %12206 = getelementptr inbounds %struct.Reg, %struct.Reg* %12205, i32 0, i32 0
  %RCX.i32 = bitcast %union.anon* %12206 to i64*
  %12207 = load i64, i64* %RCX.i32
  %12208 = add i64 %12207, 72712
  %12209 = load i64, i64* %PC.i31
  %12210 = add i64 %12209, 6
  store i64 %12210, i64* %PC.i31
  %12211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12212 = bitcast %union.anon* %12211 to i32*
  %12213 = load i32, i32* %12212, align 8
  %12214 = zext i32 %12213 to i64
  %12215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %12216 = bitcast %union.anon* %12215 to i32*
  %12217 = load i32, i32* %12216, align 8
  %12218 = zext i32 %12217 to i64
  %12219 = inttoptr i64 %12208 to i32*
  %12220 = load i32, i32* %12219
  %12221 = sext i32 %12220 to i64
  %12222 = shl i64 %12218, 32
  %12223 = or i64 %12222, %12214
  %12224 = sdiv i64 %12223, %12221
  %12225 = shl i64 %12224, 32
  %12226 = ashr exact i64 %12225, 32
  %12227 = icmp eq i64 %12224, %12226
  br i1 %12227, label %12232, label %12228

; <label>:12228:                                  ; preds = %routine_idivl__edi.exit
  %12229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12230 = load i64, i64* %12229, align 8
  %12231 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %12230, %struct.Memory* %loadMem_44b178)
  br label %routine_idivl_0x11c08__rcx_.exit

; <label>:12232:                                  ; preds = %routine_idivl__edi.exit
  %12233 = srem i64 %12223, %12221
  %12234 = getelementptr inbounds %union.anon, %union.anon* %12211, i64 0, i32 0
  %12235 = and i64 %12224, 4294967295
  store i64 %12235, i64* %12234, align 8
  %12236 = getelementptr inbounds %union.anon, %union.anon* %12215, i64 0, i32 0
  %12237 = and i64 %12233, 4294967295
  store i64 %12237, i64* %12236, align 8
  %12238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12238, align 1
  %12239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %12239, align 1
  %12240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12240, align 1
  %12241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12241, align 1
  %12242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12242, align 1
  %12243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12243, align 1
  br label %routine_idivl_0x11c08__rcx_.exit

routine_idivl_0x11c08__rcx_.exit:                 ; preds = %12228, %12232
  %12244 = phi %struct.Memory* [ %12231, %12228 ], [ %loadMem_44b178, %12232 ]
  store %struct.Memory* %12244, %struct.Memory** %MEMORY
  %loadMem_44b17e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12246 = getelementptr inbounds %struct.GPR, %struct.GPR* %12245, i32 0, i32 33
  %12247 = getelementptr inbounds %struct.Reg, %struct.Reg* %12246, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %12247 to i64*
  %12248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12249 = getelementptr inbounds %struct.GPR, %struct.GPR* %12248, i32 0, i32 19
  %12250 = getelementptr inbounds %struct.Reg, %struct.Reg* %12249, i32 0, i32 0
  %R9D.i29 = bitcast %union.anon* %12250 to i32*
  %12251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12252 = getelementptr inbounds %struct.GPR, %struct.GPR* %12251, i32 0, i32 15
  %12253 = getelementptr inbounds %struct.Reg, %struct.Reg* %12252, i32 0, i32 0
  %RBP.i30 = bitcast %union.anon* %12253 to i64*
  %12254 = bitcast i32* %R9D.i29 to i64*
  %12255 = load i64, i64* %RBP.i30
  %12256 = sub i64 %12255, 88
  %12257 = load i64, i64* %PC.i28
  %12258 = add i64 %12257, 4
  store i64 %12258, i64* %PC.i28
  %12259 = inttoptr i64 %12256 to i32*
  %12260 = load i32, i32* %12259
  %12261 = zext i32 %12260 to i64
  store i64 %12261, i64* %12254, align 8
  store %struct.Memory* %loadMem_44b17e, %struct.Memory** %MEMORY
  %loadMem_44b182 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12263 = getelementptr inbounds %struct.GPR, %struct.GPR* %12262, i32 0, i32 33
  %12264 = getelementptr inbounds %struct.Reg, %struct.Reg* %12263, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %12264 to i64*
  %12265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12266 = getelementptr inbounds %struct.GPR, %struct.GPR* %12265, i32 0, i32 1
  %12267 = getelementptr inbounds %struct.Reg, %struct.Reg* %12266, i32 0, i32 0
  %EAX.i26 = bitcast %union.anon* %12267 to i32*
  %12268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12269 = getelementptr inbounds %struct.GPR, %struct.GPR* %12268, i32 0, i32 15
  %12270 = getelementptr inbounds %struct.Reg, %struct.Reg* %12269, i32 0, i32 0
  %RBP.i27 = bitcast %union.anon* %12270 to i64*
  %12271 = load i64, i64* %RBP.i27
  %12272 = sub i64 %12271, 92
  %12273 = load i32, i32* %EAX.i26
  %12274 = zext i32 %12273 to i64
  %12275 = load i64, i64* %PC.i25
  %12276 = add i64 %12275, 3
  store i64 %12276, i64* %PC.i25
  %12277 = inttoptr i64 %12272 to i32*
  store i32 %12273, i32* %12277
  store %struct.Memory* %loadMem_44b182, %struct.Memory** %MEMORY
  %loadMem_44b185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12279 = getelementptr inbounds %struct.GPR, %struct.GPR* %12278, i32 0, i32 33
  %12280 = getelementptr inbounds %struct.Reg, %struct.Reg* %12279, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %12280 to i64*
  %12281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12282 = getelementptr inbounds %struct.GPR, %struct.GPR* %12281, i32 0, i32 19
  %12283 = getelementptr inbounds %struct.Reg, %struct.Reg* %12282, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %12283 to i32*
  %12284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12285 = getelementptr inbounds %struct.GPR, %struct.GPR* %12284, i32 0, i32 1
  %12286 = getelementptr inbounds %struct.Reg, %struct.Reg* %12285, i32 0, i32 0
  %RAX.i24 = bitcast %union.anon* %12286 to i64*
  %12287 = load i32, i32* %R9D.i
  %12288 = zext i32 %12287 to i64
  %12289 = load i64, i64* %PC.i23
  %12290 = add i64 %12289, 3
  store i64 %12290, i64* %PC.i23
  %12291 = and i64 %12288, 4294967295
  store i64 %12291, i64* %RAX.i24, align 8
  store %struct.Memory* %loadMem_44b185, %struct.Memory** %MEMORY
  %loadMem_44b188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12293 = getelementptr inbounds %struct.GPR, %struct.GPR* %12292, i32 0, i32 33
  %12294 = getelementptr inbounds %struct.Reg, %struct.Reg* %12293, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %12294 to i64*
  %12295 = load i64, i64* %PC.i22
  %12296 = add i64 %12295, 1
  store i64 %12296, i64* %PC.i22
  %12297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %12298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12299 = bitcast %union.anon* %12298 to i32*
  %12300 = load i32, i32* %12299, align 8
  %12301 = sext i32 %12300 to i64
  %12302 = lshr i64 %12301, 32
  store i64 %12302, i64* %12297, align 8
  store %struct.Memory* %loadMem_44b188, %struct.Memory** %MEMORY
  %loadMem_44b189 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12304 = getelementptr inbounds %struct.GPR, %struct.GPR* %12303, i32 0, i32 33
  %12305 = getelementptr inbounds %struct.Reg, %struct.Reg* %12304, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %12305 to i64*
  %12306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12307 = getelementptr inbounds %struct.GPR, %struct.GPR* %12306, i32 0, i32 21
  %12308 = getelementptr inbounds %struct.Reg, %struct.Reg* %12307, i32 0, i32 0
  %R10D.i20 = bitcast %union.anon* %12308 to i32*
  %12309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12310 = getelementptr inbounds %struct.GPR, %struct.GPR* %12309, i32 0, i32 15
  %12311 = getelementptr inbounds %struct.Reg, %struct.Reg* %12310, i32 0, i32 0
  %RBP.i21 = bitcast %union.anon* %12311 to i64*
  %12312 = bitcast i32* %R10D.i20 to i64*
  %12313 = load i64, i64* %RBP.i21
  %12314 = sub i64 %12313, 92
  %12315 = load i64, i64* %PC.i19
  %12316 = add i64 %12315, 4
  store i64 %12316, i64* %PC.i19
  %12317 = inttoptr i64 %12314 to i32*
  %12318 = load i32, i32* %12317
  %12319 = zext i32 %12318 to i64
  store i64 %12319, i64* %12312, align 8
  store %struct.Memory* %loadMem_44b189, %struct.Memory** %MEMORY
  %loadMem_44b18d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12321 = getelementptr inbounds %struct.GPR, %struct.GPR* %12320, i32 0, i32 33
  %12322 = getelementptr inbounds %struct.Reg, %struct.Reg* %12321, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %12322 to i64*
  %12323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12324 = getelementptr inbounds %struct.GPR, %struct.GPR* %12323, i32 0, i32 21
  %12325 = getelementptr inbounds %struct.Reg, %struct.Reg* %12324, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %12325 to i32*
  %12326 = load i32, i32* %R10D.i
  %12327 = zext i32 %12326 to i64
  %12328 = load i64, i64* %PC.i15
  %12329 = add i64 %12328, 3
  store i64 %12329, i64* %PC.i15
  %12330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12331 = bitcast %union.anon* %12330 to i32*
  %12332 = load i32, i32* %12331, align 8
  %12333 = zext i32 %12332 to i64
  %12334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %12335 = bitcast %union.anon* %12334 to i32*
  %12336 = load i32, i32* %12335, align 8
  %12337 = zext i32 %12336 to i64
  %12338 = shl i64 %12327, 32
  %12339 = ashr exact i64 %12338, 32
  %12340 = shl i64 %12337, 32
  %12341 = or i64 %12340, %12333
  %12342 = sdiv i64 %12341, %12339
  %12343 = shl i64 %12342, 32
  %12344 = ashr exact i64 %12343, 32
  %12345 = icmp eq i64 %12342, %12344
  br i1 %12345, label %12350, label %12346

; <label>:12346:                                  ; preds = %routine_idivl_0x11c08__rcx_.exit
  %12347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12348 = load i64, i64* %12347, align 8
  %12349 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %12348, %struct.Memory* %loadMem_44b18d)
  br label %routine_idivl__r10d.exit

; <label>:12350:                                  ; preds = %routine_idivl_0x11c08__rcx_.exit
  %12351 = srem i64 %12341, %12339
  %12352 = getelementptr inbounds %union.anon, %union.anon* %12330, i64 0, i32 0
  %12353 = and i64 %12342, 4294967295
  store i64 %12353, i64* %12352, align 8
  %12354 = getelementptr inbounds %union.anon, %union.anon* %12334, i64 0, i32 0
  %12355 = and i64 %12351, 4294967295
  store i64 %12355, i64* %12354, align 8
  %12356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12356, align 1
  %12357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %12357, align 1
  %12358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12358, align 1
  %12359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12359, align 1
  %12360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12360, align 1
  %12361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12361, align 1
  br label %routine_idivl__r10d.exit

routine_idivl__r10d.exit:                         ; preds = %12346, %12350
  %12362 = phi %struct.Memory* [ %12349, %12346 ], [ %loadMem_44b18d, %12350 ]
  store %struct.Memory* %12362, %struct.Memory** %MEMORY
  %loadMem_44b190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12364 = getelementptr inbounds %struct.GPR, %struct.GPR* %12363, i32 0, i32 33
  %12365 = getelementptr inbounds %struct.Reg, %struct.Reg* %12364, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %12365 to i64*
  %12366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12367 = getelementptr inbounds %struct.GPR, %struct.GPR* %12366, i32 0, i32 5
  %12368 = getelementptr inbounds %struct.Reg, %struct.Reg* %12367, i32 0, i32 0
  %RCX.i13 = bitcast %union.anon* %12368 to i64*
  %12369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12370 = getelementptr inbounds %struct.GPR, %struct.GPR* %12369, i32 0, i32 15
  %12371 = getelementptr inbounds %struct.Reg, %struct.Reg* %12370, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %12371 to i64*
  %12372 = load i64, i64* %RBP.i14
  %12373 = sub i64 %12372, 24
  %12374 = load i64, i64* %PC.i12
  %12375 = add i64 %12374, 4
  store i64 %12375, i64* %PC.i12
  %12376 = inttoptr i64 %12373 to i64*
  %12377 = load i64, i64* %12376
  store i64 %12377, i64* %RCX.i13, align 8
  store %struct.Memory* %loadMem_44b190, %struct.Memory** %MEMORY
  %loadMem_44b194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12379 = getelementptr inbounds %struct.GPR, %struct.GPR* %12378, i32 0, i32 33
  %12380 = getelementptr inbounds %struct.Reg, %struct.Reg* %12379, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %12380 to i64*
  %12381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12382 = getelementptr inbounds %struct.GPR, %struct.GPR* %12381, i32 0, i32 1
  %12383 = getelementptr inbounds %struct.Reg, %struct.Reg* %12382, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %12383 to i64*
  %12384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12385 = getelementptr inbounds %struct.GPR, %struct.GPR* %12384, i32 0, i32 5
  %12386 = getelementptr inbounds %struct.Reg, %struct.Reg* %12385, i32 0, i32 0
  %RCX.i11 = bitcast %union.anon* %12386 to i64*
  %12387 = load i64, i64* %RAX.i
  %12388 = load i64, i64* %RCX.i11
  %12389 = add i64 %12388, 12
  %12390 = load i64, i64* %PC.i10
  %12391 = add i64 %12390, 3
  store i64 %12391, i64* %PC.i10
  %12392 = trunc i64 %12387 to i32
  %12393 = inttoptr i64 %12389 to i32*
  %12394 = load i32, i32* %12393
  %12395 = add i32 %12394, %12392
  %12396 = zext i32 %12395 to i64
  store i64 %12396, i64* %RAX.i, align 8
  %12397 = icmp ult i32 %12395, %12392
  %12398 = icmp ult i32 %12395, %12394
  %12399 = or i1 %12397, %12398
  %12400 = zext i1 %12399 to i8
  %12401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12400, i8* %12401, align 1
  %12402 = and i32 %12395, 255
  %12403 = call i32 @llvm.ctpop.i32(i32 %12402)
  %12404 = trunc i32 %12403 to i8
  %12405 = and i8 %12404, 1
  %12406 = xor i8 %12405, 1
  %12407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12406, i8* %12407, align 1
  %12408 = xor i32 %12394, %12392
  %12409 = xor i32 %12408, %12395
  %12410 = lshr i32 %12409, 4
  %12411 = trunc i32 %12410 to i8
  %12412 = and i8 %12411, 1
  %12413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12412, i8* %12413, align 1
  %12414 = icmp eq i32 %12395, 0
  %12415 = zext i1 %12414 to i8
  %12416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12415, i8* %12416, align 1
  %12417 = lshr i32 %12395, 31
  %12418 = trunc i32 %12417 to i8
  %12419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12418, i8* %12419, align 1
  %12420 = lshr i32 %12392, 31
  %12421 = lshr i32 %12394, 31
  %12422 = xor i32 %12417, %12420
  %12423 = xor i32 %12417, %12421
  %12424 = add i32 %12422, %12423
  %12425 = icmp eq i32 %12424, 2
  %12426 = zext i1 %12425 to i8
  %12427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12426, i8* %12427, align 1
  store %struct.Memory* %loadMem_44b194, %struct.Memory** %MEMORY
  %loadMem_44b197 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12429 = getelementptr inbounds %struct.GPR, %struct.GPR* %12428, i32 0, i32 33
  %12430 = getelementptr inbounds %struct.Reg, %struct.Reg* %12429, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %12430 to i64*
  %12431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12432 = getelementptr inbounds %struct.GPR, %struct.GPR* %12431, i32 0, i32 5
  %12433 = getelementptr inbounds %struct.Reg, %struct.Reg* %12432, i32 0, i32 0
  %RCX.i8 = bitcast %union.anon* %12433 to i64*
  %12434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12435 = getelementptr inbounds %struct.GPR, %struct.GPR* %12434, i32 0, i32 15
  %12436 = getelementptr inbounds %struct.Reg, %struct.Reg* %12435, i32 0, i32 0
  %RBP.i9 = bitcast %union.anon* %12436 to i64*
  %12437 = load i64, i64* %RBP.i9
  %12438 = sub i64 %12437, 24
  %12439 = load i64, i64* %PC.i7
  %12440 = add i64 %12439, 4
  store i64 %12440, i64* %PC.i7
  %12441 = inttoptr i64 %12438 to i64*
  %12442 = load i64, i64* %12441
  store i64 %12442, i64* %RCX.i8, align 8
  store %struct.Memory* %loadMem_44b197, %struct.Memory** %MEMORY
  %loadMem_44b19b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12444 = getelementptr inbounds %struct.GPR, %struct.GPR* %12443, i32 0, i32 33
  %12445 = getelementptr inbounds %struct.Reg, %struct.Reg* %12444, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %12445 to i64*
  %12446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12447 = getelementptr inbounds %struct.GPR, %struct.GPR* %12446, i32 0, i32 1
  %12448 = getelementptr inbounds %struct.Reg, %struct.Reg* %12447, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %12448 to i32*
  %12449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12450 = getelementptr inbounds %struct.GPR, %struct.GPR* %12449, i32 0, i32 5
  %12451 = getelementptr inbounds %struct.Reg, %struct.Reg* %12450, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %12451 to i64*
  %12452 = load i64, i64* %RCX.i
  %12453 = add i64 %12452, 20
  %12454 = load i32, i32* %EAX.i
  %12455 = zext i32 %12454 to i64
  %12456 = load i64, i64* %PC.i6
  %12457 = add i64 %12456, 3
  store i64 %12457, i64* %PC.i6
  %12458 = inttoptr i64 %12453 to i32*
  store i32 %12454, i32* %12458
  store %struct.Memory* %loadMem_44b19b, %struct.Memory** %MEMORY
  br label %block_.L_44b19e

block_.L_44b19e:                                  ; preds = %routine_idivl__r10d.exit, %block_44b0fa
  %loadMem_44b19e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12460 = getelementptr inbounds %struct.GPR, %struct.GPR* %12459, i32 0, i32 33
  %12461 = getelementptr inbounds %struct.Reg, %struct.Reg* %12460, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %12461 to i64*
  %12462 = load i64, i64* %PC.i5
  %12463 = add i64 %12462, 5
  %12464 = load i64, i64* %PC.i5
  %12465 = add i64 %12464, 5
  store i64 %12465, i64* %PC.i5
  %12466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12463, i64* %12466, align 8
  store %struct.Memory* %loadMem_44b19e, %struct.Memory** %MEMORY
  br label %block_.L_44b1a3

block_.L_44b1a3:                                  ; preds = %block_.L_44b19e, %block_44b090, %block_44a7a7, %block_44a77b
  %loadMem_44b1a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12468 = getelementptr inbounds %struct.GPR, %struct.GPR* %12467, i32 0, i32 33
  %12469 = getelementptr inbounds %struct.Reg, %struct.Reg* %12468, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %12469 to i64*
  %12470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12471 = getelementptr inbounds %struct.GPR, %struct.GPR* %12470, i32 0, i32 13
  %12472 = getelementptr inbounds %struct.Reg, %struct.Reg* %12471, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %12472 to i64*
  %12473 = load i64, i64* %RSP.i
  %12474 = load i64, i64* %PC.i4
  %12475 = add i64 %12474, 4
  store i64 %12475, i64* %PC.i4
  %12476 = add i64 96, %12473
  store i64 %12476, i64* %RSP.i, align 8
  %12477 = icmp ult i64 %12476, %12473
  %12478 = icmp ult i64 %12476, 96
  %12479 = or i1 %12477, %12478
  %12480 = zext i1 %12479 to i8
  %12481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12480, i8* %12481, align 1
  %12482 = trunc i64 %12476 to i32
  %12483 = and i32 %12482, 255
  %12484 = call i32 @llvm.ctpop.i32(i32 %12483)
  %12485 = trunc i32 %12484 to i8
  %12486 = and i8 %12485, 1
  %12487 = xor i8 %12486, 1
  %12488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12487, i8* %12488, align 1
  %12489 = xor i64 96, %12473
  %12490 = xor i64 %12489, %12476
  %12491 = lshr i64 %12490, 4
  %12492 = trunc i64 %12491 to i8
  %12493 = and i8 %12492, 1
  %12494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12493, i8* %12494, align 1
  %12495 = icmp eq i64 %12476, 0
  %12496 = zext i1 %12495 to i8
  %12497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12496, i8* %12497, align 1
  %12498 = lshr i64 %12476, 63
  %12499 = trunc i64 %12498 to i8
  %12500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12499, i8* %12500, align 1
  %12501 = lshr i64 %12473, 63
  %12502 = xor i64 %12498, %12501
  %12503 = add i64 %12502, %12498
  %12504 = icmp eq i64 %12503, 2
  %12505 = zext i1 %12504 to i8
  %12506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12505, i8* %12506, align 1
  store %struct.Memory* %loadMem_44b1a3, %struct.Memory** %MEMORY
  %loadMem_44b1a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12508 = getelementptr inbounds %struct.GPR, %struct.GPR* %12507, i32 0, i32 33
  %12509 = getelementptr inbounds %struct.Reg, %struct.Reg* %12508, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %12509 to i64*
  %12510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12511 = getelementptr inbounds %struct.GPR, %struct.GPR* %12510, i32 0, i32 15
  %12512 = getelementptr inbounds %struct.Reg, %struct.Reg* %12511, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %12512 to i64*
  %12513 = load i64, i64* %PC.i2
  %12514 = add i64 %12513, 1
  store i64 %12514, i64* %PC.i2
  %12515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12516 = load i64, i64* %12515, align 8
  %12517 = add i64 %12516, 8
  %12518 = inttoptr i64 %12516 to i64*
  %12519 = load i64, i64* %12518
  store i64 %12519, i64* %RBP.i3, align 8
  store i64 %12517, i64* %12515, align 8
  store %struct.Memory* %loadMem_44b1a7, %struct.Memory** %MEMORY
  %loadMem_44b1a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12521 = getelementptr inbounds %struct.GPR, %struct.GPR* %12520, i32 0, i32 33
  %12522 = getelementptr inbounds %struct.Reg, %struct.Reg* %12521, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %12522 to i64*
  %12523 = load i64, i64* %PC.i1
  %12524 = add i64 %12523, 1
  store i64 %12524, i64* %PC.i1
  %12525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12527 = load i64, i64* %12526, align 8
  %12528 = inttoptr i64 %12527 to i64*
  %12529 = load i64, i64* %12528
  store i64 %12529, i64* %12525, align 8
  %12530 = add i64 %12527, 8
  store i64 %12530, i64* %12526, align 8
  store %struct.Memory* %loadMem_44b1a8, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_44b1a8
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x60___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 96
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 96
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 96, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r8__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__r8____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rax___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rax___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R8, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r8__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44a73e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x10__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 16, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x10__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 16, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44a760(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11c04__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72708
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11c08__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72712
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  store i32 0, i32* %12
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_44a780(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44b1a3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_44a7ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_44a7ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 40
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44a7ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44acee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44a976(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44a8a5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 1, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RAX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44a80f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x224__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 548
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x234__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 564
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44a8a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x218__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 536
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x228__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 552
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x228__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 552
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44a89b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x218__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 536
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44a87d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44a896(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x28__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44a89b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44a971(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44a942(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x234__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 564
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44a93d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x224__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 548
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44a932(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44a938(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44a93d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44a96c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ace9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_44ace4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44ace4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44ab3e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44aa69(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44aa64(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44aa1a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44aa5f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44aa44(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44aa5a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44aa64(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ab39(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44ab34(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44aae4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ab2f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44ab11(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ab2a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ab34(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44acdf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44ac0a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44ac05(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44abfa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44abdc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44abf5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x28__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ac00(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ac05(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44acda(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44acd5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44acbd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44ac9c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44acb8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44acd0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44acd5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ace4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44b083(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_44af40(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 36
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44af40(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44aeb6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44ade5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44adc3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x21c__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 540
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x22c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 556
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44ada8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x11bbc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72636
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44ad96(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x21c__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 540
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44ada3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ada8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x22c__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 556
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ade0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x4__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  store i32 1, i32* %12
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44aeb1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44ae82(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44ae7d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44ae72(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ae78(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ae7d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44aeac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44af3b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44af01(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x11bbc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72636
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  store i32 1, i32* %12
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44af36(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_44af31(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44af31(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44b07e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44b079(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44afa8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44af99(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x220__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x230__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 560
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44afa3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44b074(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44b045(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x230__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 560
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44b040(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x220__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 544
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44b035(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44b03b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44b040(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44b06f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44b079(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %13, 31
  %29 = xor i32 %25, %28
  %30 = add i32 %29, %28
  %31 = icmp eq i32 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44b0a5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11bbc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72636
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44b1a3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl_MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = inttoptr i64 %10 to i32*
  %22 = load i32, i32* %21
  %23 = sext i32 %22 to i64
  %24 = shl i64 %20, 32
  %25 = or i64 %24, %16
  %26 = sdiv i64 %25, %23
  %27 = shl i64 %26, 32
  %28 = ashr exact i64 %27, 32
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %34, label %30

; <label>:30:                                     ; preds = %block_400488
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = srem i64 %25, %23
  %36 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %37 = and i64 %26, 4294967295
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %39 = and i64 %35, 4294967295
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %30, %34
  %46 = phi %struct.Memory* [ %33, %30 ], [ %2, %34 ]
  ret %struct.Memory* %46
}

define %struct.Memory* @routine_movl__edx__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x28__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl_MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = inttoptr i64 %10 to i32*
  %22 = load i32, i32* %21
  %23 = sext i32 %22 to i64
  %24 = shl i64 %20, 32
  %25 = or i64 %24, %16
  %26 = sdiv i64 %25, %23
  %27 = shl i64 %26, 32
  %28 = ashr exact i64 %27, 32
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %34, label %30

; <label>:30:                                     ; preds = %block_400488
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = srem i64 %25, %23
  %36 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %37 = and i64 %26, 4294967295
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %39 = and i64 %35, 4294967295
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %30, %34
  %46 = phi %struct.Memory* [ %33, %30 ], [ %2, %34 ]
  ret %struct.Memory* %46
}

define %struct.Memory* @routine_movl__edx__0xc__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rcx____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x10___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 16, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 16
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 16, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x14___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 20, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 20
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 20, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x48__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.get_mb_pos(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44b121(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x10__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x10__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 16
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x14__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x14__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 20
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44b19e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x10___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x10__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl_0x11c04__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 72708
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = inttoptr i64 %10 to i32*
  %22 = load i32, i32* %21
  %23 = sext i32 %22 to i64
  %24 = shl i64 %20, 32
  %25 = or i64 %24, %16
  %26 = sdiv i64 %25, %23
  %27 = shl i64 %26, 32
  %28 = ashr exact i64 %27, 32
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %34, label %30

; <label>:30:                                     ; preds = %block_400488
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = srem i64 %25, %23
  %36 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %37 = and i64 %26, 4294967295
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %39 = and i64 %35, 4294967295
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %30, %34
  %46 = phi %struct.Memory* [ %33, %30 ], [ %2, %34 ]
  ret %struct.Memory* %46
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_addl_0x8__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x10__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x14__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 76
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl_0x11c08__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 72712
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = inttoptr i64 %10 to i32*
  %22 = load i32, i32* %21
  %23 = sext i32 %22 to i64
  %24 = shl i64 %20, 32
  %25 = or i64 %24, %16
  %26 = sdiv i64 %25, %23
  %27 = shl i64 %26, 32
  %28 = ashr exact i64 %27, 32
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %34, label %30

; <label>:30:                                     ; preds = %block_400488
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = srem i64 %25, %23
  %36 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %37 = and i64 %26, 4294967295
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %39 = and i64 %35, 4294967295
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %30, %34
  %46 = phi %struct.Memory* [ %33, %30 ], [ %2, %34 ]
  ret %struct.Memory* %46
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 92
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R10D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_addl_0xc__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x14__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x60___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 96, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 96
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 96, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
